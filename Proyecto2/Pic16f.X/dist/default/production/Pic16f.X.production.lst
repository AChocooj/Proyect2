

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 22:19:52 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	psect	text5_split_1,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F887 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  0105                     	;# 
   234  0107                     	;# 
   235  0108                     	;# 
   236  0109                     	;# 
   237  010C                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0185                     	;# 
   243  0187                     	;# 
   244  0188                     	;# 
   245  0189                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  000E                     	;# 
   264  000F                     	;# 
   265  0010                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001D                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  0087                     	;# 
   287  0088                     	;# 
   288  0089                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  009F                     	;# 
   311  0105                     	;# 
   312  0107                     	;# 
   313  0108                     	;# 
   314  0109                     	;# 
   315  010C                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  0185                     	;# 
   321  0187                     	;# 
   322  0188                     	;# 
   323  0189                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  008F                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  0105                     	;# 
   390  0107                     	;# 
   391  0108                     	;# 
   392  0109                     	;# 
   393  010C                     	;# 
   394  010C                     	;# 
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  0185                     	;# 
   399  0187                     	;# 
   400  0188                     	;# 
   401  0189                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404  0000                     	;# 
   405  0001                     	;# 
   406  0002                     	;# 
   407  0003                     	;# 
   408  0004                     	;# 
   409  0005                     	;# 
   410  0006                     	;# 
   411  0007                     	;# 
   412  0008                     	;# 
   413  0009                     	;# 
   414  000A                     	;# 
   415  000B                     	;# 
   416  000C                     	;# 
   417  000D                     	;# 
   418  000E                     	;# 
   419  000E                     	;# 
   420  000F                     	;# 
   421  0010                     	;# 
   422  0011                     	;# 
   423  0012                     	;# 
   424  0013                     	;# 
   425  0014                     	;# 
   426  0015                     	;# 
   427  0015                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001B                     	;# 
   435  001C                     	;# 
   436  001D                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  0081                     	;# 
   440  0085                     	;# 
   441  0086                     	;# 
   442  0087                     	;# 
   443  0088                     	;# 
   444  0089                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  008E                     	;# 
   448  008F                     	;# 
   449  0090                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0094                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009A                     	;# 
   462  009B                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  009F                     	;# 
   467  0105                     	;# 
   468  0107                     	;# 
   469  0108                     	;# 
   470  0109                     	;# 
   471  010C                     	;# 
   472  010C                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  010F                     	;# 
   476  0185                     	;# 
   477  0187                     	;# 
   478  0188                     	;# 
   479  0189                     	;# 
   480  018C                     	;# 
   481  018D                     	;# 
   482                           
   483                           	psect	idataBANK0
   484  1DDF                     __pidataBANK0:
   485                           
   486                           ;initializer for _AHT10Address_High
   487  1DDF  3439               	retlw	57
   488  1DE0  3400               	retlw	0
   489                           
   490                           ;initializer for _AHT10Address_Low
   491  1DE1  3438               	retlw	56
   492  1DE2  3400               	retlw	0
   493                           
   494                           ;initializer for _AHT10_address
   495  1DE3  3439               	retlw	57
   496                           
   497                           ;initializer for _eSensorResetCmd
   498  1DE4  34BA               	retlw	186
   499                           
   500                           	psect	idataBANK1
   501  0801                     __pidataBANK1:
   502                           
   503                           ;initializer for _eSensorMeasureCmd
   504  0801  34AC               	retlw	172
   505  0802  3433               	retlw	51
   506  0803  3400               	retlw	0
   507                           
   508                           ;initializer for _eSensorNormalCmd
   509  0804  34A8               	retlw	168
   510  0805  3400               	retlw	0
   511  0806  3400               	retlw	0
   512                           
   513                           ;initializer for _eSensorCalibrateCmd
   514  0807  34E1               	retlw	225
   515  0808  3408               	retlw	8
   516  0809  3400               	retlw	0
   517                           
   518                           ;initializer for _GetRHumidityCmd
   519  080A  3401               	retlw	1
   520  080B  3400               	retlw	0
   521                           
   522                           	psect	strings
   523  1000                     __pstrings:
   524  1000                     stringtab:
   525  1000                     __stringtab:
   526  1000                     stringcode:	
   527                           ;	String table - string pointers are 1 byte each
   528                           
   529  1000                     stringdir:
   530  1000  3010               	movlw	high stringdir
   531  1001  008A               	movwf	10
   532  1002  0804               	movf	4,w
   533  1003  0A84               	incf	4,f
   534  1004  0782               	addwf	2,f
   535  1005                     __stringbase:
   536  1005  3400               	retlw	0
   537  1006                     __end_of__stringtab:
   538  1006                     __powers_:
   539  1006  3400               	retlw	0
   540  1007  3480               	retlw	128
   541  1008  343F               	retlw	63
   542  1009  3400               	retlw	0
   543  100A  3420               	retlw	32
   544  100B  3441               	retlw	65
   545  100C  3400               	retlw	0
   546  100D  34C8               	retlw	200
   547  100E  3442               	retlw	66
   548  100F  3400               	retlw	0
   549  1010  347A               	retlw	122
   550  1011  3444               	retlw	68
   551  1012  3440               	retlw	64
   552  1013  341C               	retlw	28
   553  1014  3446               	retlw	70
   554  1015  3450               	retlw	80
   555  1016  34C3               	retlw	195
   556  1017  3447               	retlw	71
   557  1018  3424               	retlw	36
   558  1019  3474               	retlw	116
   559  101A  3449               	retlw	73
   560  101B  3497               	retlw	151
   561  101C  3418               	retlw	24
   562  101D  344B               	retlw	75
   563  101E  34BC               	retlw	188
   564  101F  34BE               	retlw	190
   565  1020  344C               	retlw	76
   566  1021  346B               	retlw	107
   567  1022  346E               	retlw	110
   568  1023  344E               	retlw	78
   569  1024  3403               	retlw	3
   570  1025  3415               	retlw	21
   571  1026  3450               	retlw	80
   572  1027  3479               	retlw	121
   573  1028  34AD               	retlw	173
   574  1029  3460               	retlw	96
   575  102A  34F3               	retlw	243
   576  102B  3449               	retlw	73
   577  102C  3471               	retlw	113
   578  102D                     __end_of__powers_:
   579  102D                     __npowers_:
   580  102D  3400               	retlw	0
   581  102E  3480               	retlw	128
   582  102F  343F               	retlw	63
   583  1030  34CD               	retlw	205
   584  1031  34CC               	retlw	204
   585  1032  343D               	retlw	61
   586  1033  34D7               	retlw	215
   587  1034  3423               	retlw	35
   588  1035  343C               	retlw	60
   589  1036  3412               	retlw	18
   590  1037  3483               	retlw	131
   591  1038  343A               	retlw	58
   592  1039  34B7               	retlw	183
   593  103A  34D1               	retlw	209
   594  103B  3438               	retlw	56
   595  103C  34C6               	retlw	198
   596  103D  3427               	retlw	39
   597  103E  3437               	retlw	55
   598  103F  3438               	retlw	56
   599  1040  3486               	retlw	134
   600  1041  3435               	retlw	53
   601  1042  34C0               	retlw	192
   602  1043  34D6               	retlw	214
   603  1044  3433               	retlw	51
   604  1045  34CC               	retlw	204
   605  1046  342B               	retlw	43
   606  1047  3432               	retlw	50
   607  1048  3470               	retlw	112
   608  1049  3489               	retlw	137
   609  104A  3430               	retlw	48
   610  104B  34E7               	retlw	231
   611  104C  34DB               	retlw	219
   612  104D  342E               	retlw	46
   613  104E  34E5               	retlw	229
   614  104F  343C               	retlw	60
   615  1050  341E               	retlw	30
   616  1051  3442               	retlw	66
   617  1052  34A2               	retlw	162
   618  1053  340D               	retlw	13
   619  1054                     __end_of__npowers_:
   620  1054                     _dpowers:
   621  1054  3401               	retlw	1
   622  1055  3400               	retlw	0
   623  1056  3400               	retlw	0
   624  1057  3400               	retlw	0
   625  1058  340A               	retlw	10
   626  1059  3400               	retlw	0
   627  105A  3400               	retlw	0
   628  105B  3400               	retlw	0
   629  105C  3464               	retlw	100
   630  105D  3400               	retlw	0
   631  105E  3400               	retlw	0
   632  105F  3400               	retlw	0
   633  1060  34E8               	retlw	232
   634  1061  3403               	retlw	3
   635  1062  3400               	retlw	0
   636  1063  3400               	retlw	0
   637  1064  3410               	retlw	16
   638  1065  3427               	retlw	39
   639  1066  3400               	retlw	0
   640  1067  3400               	retlw	0
   641  1068  34A0               	retlw	160
   642  1069  3486               	retlw	134
   643  106A  3401               	retlw	1
   644  106B  3400               	retlw	0
   645  106C  3440               	retlw	64
   646  106D  3442               	retlw	66
   647  106E  340F               	retlw	15
   648  106F  3400               	retlw	0
   649  1070  3480               	retlw	128
   650  1071  3496               	retlw	150
   651  1072  3498               	retlw	152
   652  1073  3400               	retlw	0
   653  1074  3400               	retlw	0
   654  1075  34E1               	retlw	225
   655  1076  34F5               	retlw	245
   656  1077  3405               	retlw	5
   657  1078  3400               	retlw	0
   658  1079  34CA               	retlw	202
   659  107A  349A               	retlw	154
   660  107B  343B               	retlw	59
   661  107C                     __end_of_dpowers:
   662  0019                     _TXREG	set	25
   663  001A                     _RCREG	set	26
   664  0018                     _RCSTAbits	set	24
   665  0013                     _SSPBUF	set	19
   666  0014                     _SSPCON	set	20
   667  000C                     _PIR1bits	set	12
   668  000B                     _INTCONbits	set	11
   669  0008                     _PORTD	set	8
   670  0063                     _SSPIF	set	99
   671  005E                     _PEIE	set	94
   672  005F                     _GIE	set	95
   673  0099                     _SPBRG	set	153
   674  0098                     _TXSTAbits	set	152
   675  0091                     _SSPCON2bits	set	145
   676  0087                     _TRISCbits	set	135
   677  0094                     _SSPSTAT	set	148
   678  0093                     _SSPADD	set	147
   679  0091                     _SSPCON2	set	145
   680  008C                     _PIE1bits	set	140
   681  0088                     _TRISD	set	136
   682  0463                     _SSPIE	set	1123
   683  043C                     _TRISC4	set	1084
   684  043B                     _TRISC3	set	1083
   685  0189                     _ANSELH	set	393
   686  0188                     _ANSEL	set	392
   687  107C                     STR_2:
   688  107C  3425               	retlw	37	;'%'
   689  107D  3432               	retlw	50	;'2'
   690  107E  342E               	retlw	46	;'.'
   691  107F  3431               	retlw	49	;'1'
   692  1080  3466               	retlw	102	;'f'
   693  1081  3420               	retlw	32	;' '
   694  1082  3420               	retlw	32	;' '
   695  1083  3420               	retlw	32	;' '
   696  1084  3425               	retlw	37	;'%'
   697  1085  3432               	retlw	50	;'2'
   698  1086  342E               	retlw	46	;'.'
   699  1087  3431               	retlw	49	;'1'
   700  1088  3466               	retlw	102	;'f'
   701  1089  3420               	retlw	32	;' '
   702  108A  3400               	retlw	0
   703  108B                     STR_1:
   704  108B  3454               	retlw	84	;'T'
   705  108C  3431               	retlw	49	;'1'
   706  108D  3420               	retlw	32	;' '
   707  108E  3420               	retlw	32	;' '
   708  108F  3420               	retlw	32	;' '
   709  1090  3448               	retlw	72	;'H'
   710  1091  3431               	retlw	49	;'1'
   711  1092  3420               	retlw	32	;' '
   712  1093  3420               	retlw	32	;' '
   713  1094  3420               	retlw	32	;' '
   714  1095  340A               	retlw	10
   715  1096  3400               	retlw	0
   716                           
   717                           	psect	cinit
   718  07D6                     start_initialization:	
   719                           ; #config settings
   720                           
   721  07D6                     __initialization:
   722                           
   723                           ; Initialize objects allocated to BANK1
   724  07D6  1383               	bcf	3,7	;select IRP bank0
   725  07D7  30DA               	movlw	low (__pdataBANK1+11)
   726  07D8  00FD               	movwf	btemp+-1
   727  07D9  3008               	movlw	high __pidataBANK1
   728  07DA  00FE               	movwf	btemp
   729  07DB  3001               	movlw	low __pidataBANK1
   730  07DC  00FF               	movwf	btemp+1
   731  07DD  30CF               	movlw	low __pdataBANK1
   732  07DE  0084               	movwf	4
   733  07DF  160A  118A  20A7  120A  118A  	fcall	init_ram0
   734                           
   735                           ; Initialize objects allocated to BANK0
   736  07E4  306D               	movlw	low (__pdataBANK0+6)
   737  07E5  00FD               	movwf	btemp+-1
   738  07E6  301D               	movlw	high __pidataBANK0
   739  07E7  00FE               	movwf	btemp
   740  07E8  30DF               	movlw	low __pidataBANK0
   741  07E9  00FF               	movwf	btemp+1
   742  07EA  3067               	movlw	low __pdataBANK0
   743  07EB  0084               	movwf	4
   744  07EC  160A  118A  20A7  120A  118A  	fcall	init_ram0
   745                           
   746                           ; Clear objects allocated to BANK1
   747  07F1  30B9               	movlw	low __pbssBANK1
   748  07F2  0084               	movwf	4
   749  07F3  30CF               	movlw	low (__pbssBANK1+22)
   750  07F4  160A  158A  25E5  120A  118A  	fcall	clear_ram0
   751                           
   752                           ; Clear objects allocated to BANK0
   753  07F9  01ED               	clrf	__pbssBANK0& (0+127)
   754  07FA  01EE               	clrf	(__pbssBANK0+1)& (0+127)
   755  07FB  01EF               	clrf	(__pbssBANK0+2)& (0+127)
   756  07FC                     end_of_initialization:	
   757                           ;End of C runtime variable initialization code
   758                           
   759  07FC                     __end_of__initialization:
   760  07FC  0183               	clrf	3
   761  07FD  160A  118A  2B0B   	ljmp	_main	;jump to C main() function
   762                           
   763                           	psect	bssBANK0
   764  006D                     __pbssBANK0:
   765  006D                     _tempera1:
   766  006D                     	ds	3
   767                           
   768                           	psect	dataBANK0
   769  0067                     __pdataBANK0:
   770  0067                     _AHT10Address_High:
   771  0067                     	ds	2
   772  0069                     _AHT10Address_Low:
   773  0069                     	ds	2
   774  006B                     _AHT10_address:
   775  006B                     	ds	1
   776  006C                     _eSensorResetCmd:
   777  006C                     	ds	1
   778                           
   779                           	psect	bssBANK1
   780  00B9                     __pbssBANK1:
   781  00B9                     _GetTempCmd:
   782  00B9                     	ds	2
   783  00BB                     _datos:
   784  00BB                     	ds	20
   785                           
   786                           	psect	dataBANK1
   787  00CF                     __pdataBANK1:
   788  00CF                     _eSensorMeasureCmd:
   789  00CF                     	ds	3
   790  00D2                     _eSensorNormalCmd:
   791  00D2                     	ds	3
   792  00D5                     _eSensorCalibrateCmd:
   793  00D5                     	ds	3
   794  00D8                     _GetRHumidityCmd:
   795  00D8                     	ds	2
   796                           
   797                           	psect	inittext
   798  10A3                     init_fetch0:	
   799                           ;	Called with low address in FSR and high address in W
   800                           
   801  10A3  087E               	movf	btemp,w
   802  10A4  008A               	movwf	10
   803  10A5  087F               	movf	btemp+1,w
   804  10A6  0082               	movwf	2
   805  10A7                     init_ram0:	
   806                           ;Called with:
   807                           ;	high address of idata address in btemp 
   808                           ;	low address of idata address in btemp+1 
   809                           ;	low address of data in FSR
   810                           ;	high address + 1 of data in btemp-1
   811                           
   812  10A7  160A  118A  20A3  160A  118A  	fcall	init_fetch0
   813  10AC  0080               	movwf	0
   814  10AD  0A84               	incf	4,f
   815  10AE  0804               	movf	4,w
   816  10AF  067D               	xorwf	btemp+-1,w
   817  10B0  1903               	btfsc	3,2
   818  10B1  3400               	retlw	0
   819  10B2  0AFF               	incf	btemp+1,f
   820  10B3  1903               	btfsc	3,2
   821  10B4  0AFE               	incf	btemp,f
   822  10B5  28A7               	goto	init_ram0
   823                           
   824                           	psect	clrtext
   825  1DE5                     clear_ram0:	
   826                           ;	Called with FSR containing the base address, and
   827                           ;	W with the last address+1
   828                           
   829  1DE5  0064               	clrwdt	;clear the watchdog before getting into this loop
   830  1DE6                     clrloop0:
   831  1DE6  0180               	clrf	0	;clear RAM location pointed to by FSR
   832  1DE7  0A84               	incf	4,f	;increment pointer
   833  1DE8  0604               	xorwf	4,w	;XOR with final address
   834  1DE9  1903               	btfsc	3,2	;have we reached the end yet?
   835  1DEA  3400               	retlw	0	;all done for this memory range, return
   836  1DEB  0604               	xorwf	4,w	;XOR again to restore value
   837  1DEC  2DE6               	goto	clrloop0	;do the next byte
   838                           
   839                           	psect	cstackBANK1
   840  00A0                     __pcstackBANK1:
   841  00A0                     _sprintf$1039:
   842                           
   843                           ; 3 bytes @ 0x0
   844  00A0                     	ds	3
   845  00A3                     sprintf@ap:
   846                           
   847                           ; 1 bytes @ 0x3
   848  00A3                     	ds	1
   849  00A4                     sprintf@val:
   850                           
   851                           ; 4 bytes @ 0x4
   852  00A4                     	ds	4
   853  00A8                     sprintf@flag:
   854                           
   855                           ; 2 bytes @ 0x8
   856  00A8                     	ds	2
   857  00AA                     sprintf@width:
   858                           
   859                           ; 2 bytes @ 0xA
   860  00AA                     	ds	2
   861  00AC                     sprintf@tmpval:
   862                           
   863                           ; 4 bytes @ 0xC
   864  00AC                     	ds	4
   865  00B0                     sprintf@eexp:
   866                           
   867                           ; 2 bytes @ 0x10
   868  00B0                     	ds	2
   869  00B2                     sprintf@sp:
   870                           
   871                           ; 1 bytes @ 0x12
   872  00B2                     	ds	1
   873  00B3                     sprintf@fval:
   874                           
   875                           ; 3 bytes @ 0x13
   876  00B3                     	ds	3
   877  00B6                     sprintf@prec:
   878                           
   879                           ; 2 bytes @ 0x16
   880  00B6                     	ds	2
   881  00B8                     sprintf@c:
   882                           
   883                           ; 1 bytes @ 0x18
   884  00B8                     	ds	1
   885                           
   886                           	psect	cstackCOMMON
   887  0070                     __pcstackCOMMON:
   888  0070                     ?_isdigit:
   889  0070                     ?___ftge:	
   890                           ; 1 bit 
   891                           
   892  0070                     ?_I2C_Master_Start:	
   893                           ; 1 bit 
   894                           
   895  0070                     ??_I2C_Master_Start:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ?_I2C_Master_Write:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ?_uartTX_Write_Str:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0070                     ?_uartTX_Write:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0070                     ??_uartTX_Write:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0070                     ??_isdigit:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  0070                     ?_configIO:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0070                     ??_configIO:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0070                     ?_main:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0070                     ?_I2C_Master_Wait:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0070                     ??_I2C_Master_Wait:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0070                     ?_I2C_Master_Stop:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0070                     ??_I2C_Master_Stop:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0070                     ?_I2C_Master_Read:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0070                     ?___wmul:	
   938                           ; 2 bytes @ 0x0
   939                           
   940  0070                     ?___awmod:	
   941                           ; 2 bytes @ 0x0
   942                           
   943  0070                     ?___lwmod:	
   944                           ; 2 bytes @ 0x0
   945                           
   946  0070                     ?___ftpack:	
   947                           ; 2 bytes @ 0x0
   948                           
   949  0070                     ?___ftneg:	
   950                           ; 3 bytes @ 0x0
   951                           
   952  0070                     ?__tdiv_to_l_:	
   953                           ; 3 bytes @ 0x0
   954                           
   955  0070                     ?__div_to_l_:	
   956                           ; 4 bytes @ 0x0
   957                           
   958  0070                     ?___lldiv:	
   959                           ; 4 bytes @ 0x0
   960                           
   961  0070                     ?___aldiv:	
   962                           ; 4 bytes @ 0x0
   963                           
   964  0070                     ?___llmod:	
   965                           ; 4 bytes @ 0x0
   966                           
   967  0070                     _isdigit$829:	
   968                           ; 4 bytes @ 0x0
   969                           
   970  0070                     I2C_Master_Write@d:	
   971                           ; 1 bytes @ 0x0
   972                           
   973  0070                     I2C_Master_Read@a:	
   974                           ; 2 bytes @ 0x0
   975                           
   976  0070                     ___wmul@multiplier:	
   977                           ; 2 bytes @ 0x0
   978                           
   979  0070                     ___awmod@divisor:	
   980                           ; 2 bytes @ 0x0
   981                           
   982  0070                     ___lwmod@divisor:	
   983                           ; 2 bytes @ 0x0
   984                           
   985  0070                     __div_to_l_@f1:	
   986                           ; 2 bytes @ 0x0
   987                           
   988  0070                     ___ftpack@arg:	
   989                           ; 3 bytes @ 0x0
   990                           
   991  0070                     __tdiv_to_l_@f1:	
   992                           ; 3 bytes @ 0x0
   993                           
   994  0070                     ___ftge@ff1:	
   995                           ; 3 bytes @ 0x0
   996                           
   997  0070                     ___ftneg@f1:	
   998                           ; 3 bytes @ 0x0
   999                           
  1000  0070                     ___lldiv@divisor:	
  1001                           ; 3 bytes @ 0x0
  1002                           
  1003  0070                     ___aldiv@divisor:	
  1004                           ; 4 bytes @ 0x0
  1005                           
  1006  0070                     ___llmod@divisor:	
  1007                           ; 4 bytes @ 0x0
  1008                           
  1009                           
  1010                           ; 4 bytes @ 0x0
  1011  0070                     	ds	1
  1012  0071                     uartTX_Write@dato:
  1013  0071                     isdigit@c:	
  1014                           ; 1 bytes @ 0x1
  1015                           
  1016                           
  1017                           ; 1 bytes @ 0x1
  1018  0071                     	ds	1
  1019  0072                     ??_I2C_Master_Write:
  1020  0072                     ??_uartTX_Write_Str:	
  1021                           ; 1 bytes @ 0x2
  1022                           
  1023  0072                     ??_I2C_Master_Read:	
  1024                           ; 1 bytes @ 0x2
  1025                           
  1026  0072                     uartTX_Write_Str@n:	
  1027                           ; 1 bytes @ 0x2
  1028                           
  1029  0072                     ___wmul@multiplicand:	
  1030                           ; 2 bytes @ 0x2
  1031                           
  1032  0072                     ___awmod@dividend:	
  1033                           ; 2 bytes @ 0x2
  1034                           
  1035  0072                     ___lwmod@dividend:	
  1036                           ; 2 bytes @ 0x2
  1037                           
  1038                           
  1039                           ; 2 bytes @ 0x2
  1040  0072                     	ds	1
  1041  0073                     ??___ftneg:
  1042  0073                     ___ftpack@exp:	
  1043                           ; 1 bytes @ 0x3
  1044                           
  1045  0073                     __div_to_l_@f2:	
  1046                           ; 1 bytes @ 0x3
  1047                           
  1048  0073                     __tdiv_to_l_@f2:	
  1049                           ; 3 bytes @ 0x3
  1050                           
  1051  0073                     ___ftge@ff2:	
  1052                           ; 3 bytes @ 0x3
  1053                           
  1054                           
  1055                           ; 3 bytes @ 0x3
  1056  0073                     	ds	1
  1057  0074                     ??___wmul:
  1058  0074                     ??___awmod:	
  1059                           ; 1 bytes @ 0x4
  1060                           
  1061  0074                     ??___lwmod:	
  1062                           ; 1 bytes @ 0x4
  1063                           
  1064  0074                     uartTX_Write_Str@string:	
  1065                           ; 1 bytes @ 0x4
  1066                           
  1067  0074                     ___ftpack@sign:	
  1068                           ; 1 bytes @ 0x4
  1069                           
  1070  0074                     I2C_Master_Read@temp:	
  1071                           ; 1 bytes @ 0x4
  1072                           
  1073  0074                     ___wmul@product:	
  1074                           ; 2 bytes @ 0x4
  1075                           
  1076  0074                     ___lldiv@dividend:	
  1077                           ; 2 bytes @ 0x4
  1078                           
  1079  0074                     ___aldiv@dividend:	
  1080                           ; 4 bytes @ 0x4
  1081                           
  1082  0074                     ___llmod@dividend:	
  1083                           ; 4 bytes @ 0x4
  1084                           
  1085                           
  1086                           ; 4 bytes @ 0x4
  1087  0074                     	ds	1
  1088  0075                     ??___ftpack:
  1089  0075                     ___awmod@counter:	
  1090                           ; 1 bytes @ 0x5
  1091                           
  1092  0075                     ___lwmod@counter:	
  1093                           ; 1 bytes @ 0x5
  1094                           
  1095                           
  1096                           ; 1 bytes @ 0x5
  1097  0075                     	ds	1
  1098  0076                     ??__tdiv_to_l_:
  1099  0076                     ??__div_to_l_:	
  1100                           ; 1 bytes @ 0x6
  1101                           
  1102  0076                     ??___ftge:	
  1103                           ; 1 bytes @ 0x6
  1104                           
  1105  0076                     ?___lwdiv:	
  1106                           ; 1 bytes @ 0x6
  1107                           
  1108  0076                     ?_aht_readSensor:	
  1109                           ; 2 bytes @ 0x6
  1110                           
  1111  0076                     ___awmod@sign:	
  1112                           ; 4 bytes @ 0x6
  1113                           
  1114  0076                     aht_readSensor@GetDataCmd:	
  1115                           ; 1 bytes @ 0x6
  1116                           
  1117  0076                     ___lwdiv@divisor:	
  1118                           ; 2 bytes @ 0x6
  1119                           
  1120                           
  1121                           ; 2 bytes @ 0x6
  1122  0076                     	ds	1
  1123  0077                     ?___awdiv:
  1124  0077                     ___awdiv@divisor:	
  1125                           ; 2 bytes @ 0x7
  1126                           
  1127                           
  1128                           ; 2 bytes @ 0x7
  1129  0077                     	ds	1
  1130  0078                     ??___lldiv:
  1131  0078                     ??___aldiv:	
  1132                           ; 1 bytes @ 0x8
  1133                           
  1134  0078                     ??___llmod:	
  1135                           ; 1 bytes @ 0x8
  1136                           
  1137  0078                     ___lwdiv@dividend:	
  1138                           ; 1 bytes @ 0x8
  1139                           
  1140                           
  1141                           ; 2 bytes @ 0x8
  1142  0078                     	ds	1
  1143  0079                     ___llmod@counter:
  1144  0079                     uartRC_init@n:	
  1145                           ; 1 bytes @ 0x9
  1146                           
  1147  0079                     ___awdiv@dividend:	
  1148                           ; 2 bytes @ 0x9
  1149                           
  1150  0079                     ___lldiv@quotient:	
  1151                           ; 2 bytes @ 0x9
  1152                           
  1153                           
  1154                           ; 4 bytes @ 0x9
  1155  0079                     	ds	1
  1156  007A                     ??___lwdiv:
  1157  007A                     ?___lltoft:	
  1158                           ; 1 bytes @ 0xA
  1159                           
  1160  007A                     ___lltoft@c:	
  1161                           ; 3 bytes @ 0xA
  1162                           
  1163                           
  1164                           ; 4 bytes @ 0xA
  1165  007A                     	ds	1
  1166  007B                     ??___awdiv:
  1167  007B                     ___lwdiv@quotient:	
  1168                           ; 1 bytes @ 0xB
  1169                           
  1170                           
  1171                           ; 2 bytes @ 0xB
  1172  007B                     	ds	2
  1173  007D                     ___lldiv@counter:
  1174  007D                     ___lwdiv@counter:	
  1175                           ; 1 bytes @ 0xD
  1176                           
  1177                           
  1178                           ; 1 bytes @ 0xD
  1179  007D                     	ds	1
  1180  007E                     ??_aht_GetTemperature:
  1181  007E                     ??___ftsub:	
  1182                           ; 1 bytes @ 0xE
  1183                           
  1184                           
  1185                           	psect	cstackBANK0
  1186  0020                     __pcstackBANK0:	
  1187                           ; 1 bytes @ 0xE
  1188                           
  1189  0020                     ?_I2C_Master_Init:
  1190  0020                     ??_aht_readSensor:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0020                     ___aldiv@counter:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0020                     ___awdiv@counter:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0020                     I2C_Master_Init@c:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0020                     __div_to_l_@quot:	
  1203                           ; 4 bytes @ 0x0
  1204                           
  1205  0020                     __tdiv_to_l_@quot:	
  1206                           ; 4 bytes @ 0x0
  1207                           
  1208                           
  1209                           ; 4 bytes @ 0x0
  1210  0020                     	ds	1
  1211  0021                     ___aldiv@sign:
  1212  0021                     ___awdiv@sign:	
  1213                           ; 1 bytes @ 0x1
  1214                           
  1215                           
  1216                           ; 1 bytes @ 0x1
  1217  0021                     	ds	1
  1218  0022                     ___awdiv@quotient:
  1219  0022                     ___aldiv@quotient:	
  1220                           ; 2 bytes @ 0x2
  1221                           
  1222                           
  1223                           ; 4 bytes @ 0x2
  1224  0022                     	ds	2
  1225  0024                     ??_I2C_Master_Init:
  1226  0024                     ?___bmul:	
  1227                           ; 1 bytes @ 0x4
  1228                           
  1229  0024                     ___bmul@multiplicand:	
  1230                           ; 1 bytes @ 0x4
  1231                           
  1232  0024                     __div_to_l_@cntr:	
  1233                           ; 1 bytes @ 0x4
  1234                           
  1235  0024                     __tdiv_to_l_@cntr:	
  1236                           ; 1 bytes @ 0x4
  1237                           
  1238                           
  1239                           ; 1 bytes @ 0x4
  1240  0024                     	ds	1
  1241  0025                     ??___bmul:
  1242  0025                     __div_to_l_@exp1:	
  1243                           ; 1 bytes @ 0x5
  1244                           
  1245  0025                     __tdiv_to_l_@exp1:	
  1246                           ; 1 bytes @ 0x5
  1247                           
  1248                           
  1249                           ; 1 bytes @ 0x5
  1250  0025                     	ds	1
  1251  0026                     ?_uartRC_init:
  1252  0026                     ___bmul@product:	
  1253                           ; 1 bytes @ 0x6
  1254                           
  1255  0026                     uartRC_init@baudrate:	
  1256                           ; 1 bytes @ 0x6
  1257                           
  1258                           
  1259                           ; 2 bytes @ 0x6
  1260  0026                     	ds	1
  1261  0027                     ___bmul@multiplier:
  1262                           
  1263                           ; 1 bytes @ 0x7
  1264  0027                     	ds	1
  1265  0028                     ??_uartRC_init:
  1266  0028                     ?___ftmul:	
  1267                           ; 1 bytes @ 0x8
  1268                           
  1269  0028                     ___ftmul@f1:	
  1270                           ; 3 bytes @ 0x8
  1271                           
  1272                           
  1273                           ; 3 bytes @ 0x8
  1274  0028                     	ds	3
  1275  002B                     ___ftmul@f2:
  1276                           
  1277                           ; 3 bytes @ 0xB
  1278  002B                     	ds	1
  1279  002C                     aht_readSensor@temp:
  1280                           
  1281                           ; 24 bytes @ 0xC
  1282  002C                     	ds	2
  1283  002E                     ??___ftmul:
  1284                           
  1285                           ; 1 bytes @ 0xE
  1286  002E                     	ds	4
  1287  0032                     ___ftmul@exp:
  1288                           
  1289                           ; 1 bytes @ 0x12
  1290  0032                     	ds	1
  1291  0033                     ___ftmul@f3_as_product:
  1292                           
  1293                           ; 3 bytes @ 0x13
  1294  0033                     	ds	3
  1295  0036                     ___ftmul@cntr:
  1296                           
  1297                           ; 1 bytes @ 0x16
  1298  0036                     	ds	1
  1299  0037                     ___ftmul@sign:
  1300                           
  1301                           ; 1 bytes @ 0x17
  1302  0037                     	ds	1
  1303  0038                     ?_fround:
  1304  0038                     ?_scale:	
  1305                           ; 3 bytes @ 0x18
  1306                           
  1307  0038                     ?___ftdiv:	
  1308                           ; 3 bytes @ 0x18
  1309                           
  1310  0038                     ___ftdiv@f2:	
  1311                           ; 3 bytes @ 0x18
  1312                           
  1313                           
  1314                           ; 3 bytes @ 0x18
  1315  0038                     	ds	3
  1316  003B                     ??_fround:
  1317  003B                     ??_scale:	
  1318                           ; 1 bytes @ 0x1B
  1319                           
  1320  003B                     ___ftdiv@f1:	
  1321                           ; 1 bytes @ 0x1B
  1322                           
  1323                           
  1324                           ; 3 bytes @ 0x1B
  1325  003B                     	ds	2
  1326  003D                     _scale$1038:
  1327                           
  1328                           ; 3 bytes @ 0x1D
  1329  003D                     	ds	1
  1330  003E                     ??___ftdiv:
  1331                           
  1332                           ; 1 bytes @ 0x1E
  1333  003E                     	ds	2
  1334  0040                     scale@scl:
  1335                           
  1336                           ; 1 bytes @ 0x20
  1337  0040                     	ds	1
  1338  0041                     ?___fttol:
  1339  0041                     ___fttol@f1:	
  1340                           ; 4 bytes @ 0x21
  1341                           
  1342  0041                     _fround$1037:	
  1343                           ; 3 bytes @ 0x21
  1344                           
  1345                           
  1346                           ; 3 bytes @ 0x21
  1347  0041                     	ds	1
  1348  0042                     ___ftdiv@cntr:
  1349                           
  1350                           ; 1 bytes @ 0x22
  1351  0042                     	ds	1
  1352  0043                     ___ftdiv@f3:
  1353                           
  1354                           ; 3 bytes @ 0x23
  1355  0043                     	ds	1
  1356  0044                     _fround$1036:
  1357  0044                     aht_readSensor@result:	
  1358                           ; 3 bytes @ 0x24
  1359                           
  1360                           
  1361                           ; 4 bytes @ 0x24
  1362  0044                     	ds	1
  1363  0045                     ??___fttol:
  1364                           
  1365                           ; 1 bytes @ 0x25
  1366  0045                     	ds	1
  1367  0046                     ___ftdiv@exp:
  1368                           
  1369                           ; 1 bytes @ 0x26
  1370  0046                     	ds	1
  1371  0047                     fround@prec:
  1372  0047                     ___ftdiv@sign:	
  1373                           ; 1 bytes @ 0x27
  1374                           
  1375                           
  1376                           ; 1 bytes @ 0x27
  1377  0047                     	ds	1
  1378  0048                     ?___ftadd:
  1379  0048                     aht_readSensor@i:	
  1380                           ; 3 bytes @ 0x28
  1381                           
  1382  0048                     ___ftadd@f1:	
  1383                           ; 1 bytes @ 0x28
  1384                           
  1385                           
  1386                           ; 3 bytes @ 0x28
  1387  0048                     	ds	1
  1388  0049                     ??___lltoft:
  1389  0049                     ___fttol@sign1:	
  1390                           ; 1 bytes @ 0x29
  1391                           
  1392                           
  1393                           ; 1 bytes @ 0x29
  1394  0049                     	ds	1
  1395  004A                     ___lltoft@exp:
  1396  004A                     ___fttol@lval:	
  1397                           ; 1 bytes @ 0x2A
  1398                           
  1399                           
  1400                           ; 4 bytes @ 0x2A
  1401  004A                     	ds	1
  1402  004B                     ___ftadd@f2:
  1403                           
  1404                           ; 3 bytes @ 0x2B
  1405  004B                     	ds	3
  1406  004E                     ??___ftadd:
  1407  004E                     ___fttol@exp1:	
  1408                           ; 1 bytes @ 0x2E
  1409                           
  1410                           
  1411                           ; 1 bytes @ 0x2E
  1412  004E                     	ds	4
  1413  0052                     ___ftadd@sign:
  1414                           
  1415                           ; 1 bytes @ 0x32
  1416  0052                     	ds	1
  1417  0053                     ___ftadd@exp2:
  1418                           
  1419                           ; 1 bytes @ 0x33
  1420  0053                     	ds	1
  1421  0054                     ___ftadd@exp1:
  1422                           
  1423                           ; 1 bytes @ 0x34
  1424  0054                     	ds	1
  1425  0055                     ?_aht_GetTemperature:
  1426  0055                     ?___ftsub:	
  1427                           ; 3 bytes @ 0x35
  1428                           
  1429  0055                     ___ftsub@f2:	
  1430                           ; 3 bytes @ 0x35
  1431                           
  1432                           
  1433                           ; 3 bytes @ 0x35
  1434  0055                     	ds	3
  1435  0058                     aht_GetTemperature@value:
  1436  0058                     ___ftsub@f1:	
  1437                           ; 3 bytes @ 0x38
  1438                           
  1439                           
  1440                           ; 3 bytes @ 0x38
  1441  0058                     	ds	3
  1442  005B                     ?_sprintf:
  1443  005B                     sprintf@f:	
  1444                           ; 2 bytes @ 0x3B
  1445                           
  1446                           
  1447                           ; 1 bytes @ 0x3B
  1448  005B                     	ds	4
  1449  005F                     ??_sprintf:
  1450                           
  1451                           ; 1 bytes @ 0x3F
  1452  005F                     	ds	6
  1453  0065                     ??_main:
  1454                           
  1455                           ; 1 bytes @ 0x45
  1456  0065                     	ds	2
  1457                           
  1458                           	psect	maintext
  1459  130B                     __pmaintext:	
  1460 ;;
  1461 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1462 ;;
  1463 ;; *************** function _main *****************
  1464 ;; Defined at:
  1465 ;;		line 57 in file "pic16f.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;		None
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;		None
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : B00/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1479 ;;      Params:         0       0       0       0       0
  1480 ;;      Locals:         0       0       0       0       0
  1481 ;;      Temps:          0       2       0       0       0
  1482 ;;      Totals:         0       2       0       0       0
  1483 ;;Total ram usage:        2 bytes
  1484 ;; Hardware stack levels required when called:    4
  1485 ;; This function calls:
  1486 ;;		_I2C_Master_Init
  1487 ;;		_I2C_Master_Start
  1488 ;;		_I2C_Master_Write
  1489 ;;		_aht_GetTemperature
  1490 ;;		_configIO
  1491 ;;		_sprintf
  1492 ;;		_uartRC_init
  1493 ;;		_uartTX_Write
  1494 ;;		_uartTX_Write_Str
  1495 ;; This function is called by:
  1496 ;;		Startup code after reset
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           
  1501                           ;psect for function _main
  1502  130B                     _main:
  1503  130B                     l3178:	
  1504                           ;incstack = 0
  1505                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1506                           
  1507                           
  1508                           ;pic16f.c: 58:     configIO();
  1509  130B  160A  158A  2631  160A  118A  	fcall	_configIO
  1510  1310                     l3180:
  1511                           
  1512                           ;pic16f.c: 59:     uartRC_init(9600);
  1513  1310  3080               	movlw	128
  1514  1311  1283               	bcf	3,5	;RP0=0, select bank0
  1515  1312  1303               	bcf	3,6	;RP1=0, select bank0
  1516  1313  00A6               	movwf	uartRC_init@baudrate
  1517  1314  3025               	movlw	37
  1518  1315  00A7               	movwf	uartRC_init@baudrate+1
  1519  1316  160A  118A  262F  160A  118A  	fcall	_uartRC_init
  1520  131B                     l3182:
  1521                           
  1522                           ;pic16f.c: 60:     I2C_Master_Init(100000);
  1523  131B  3000               	movlw	0
  1524  131C  1283               	bcf	3,5	;RP0=0, select bank0
  1525  131D  1303               	bcf	3,6	;RP1=0, select bank0
  1526  131E  00A3               	movwf	I2C_Master_Init@c+3
  1527  131F  3001               	movlw	1
  1528  1320  00A2               	movwf	I2C_Master_Init@c+2
  1529  1321  3086               	movlw	134
  1530  1322  00A1               	movwf	I2C_Master_Init@c+1
  1531  1323  30A0               	movlw	160
  1532  1324  00A0               	movwf	I2C_Master_Init@c
  1533  1325  160A  158A  2712  160A  118A  	fcall	_I2C_Master_Init
  1534  132A                     l3184:
  1535                           
  1536                           ;pic16f.c: 64:        I2C_Master_Start();
  1537  132A  160A  158A  25ED  160A  118A  	fcall	_I2C_Master_Start
  1538  132F                     l3186:
  1539                           
  1540                           ;pic16f.c: 65:         I2C_Master_Write(0x39);
  1541  132F  3039               	movlw	57
  1542  1330  00F0               	movwf	I2C_Master_Write@d
  1543  1331  3000               	movlw	0
  1544  1332  00F1               	movwf	I2C_Master_Write@d+1
  1545  1333  160A  158A  25F6  160A  118A  	fcall	_I2C_Master_Write
  1546  1338                     l3188:
  1547                           
  1548                           ;pic16f.c: 66:        _delay((unsigned long)((10)*(4000000/4000.0)));
  1549  1338  300D               	movlw	13
  1550  1339  1283               	bcf	3,5	;RP0=0, select bank0
  1551  133A  1303               	bcf	3,6	;RP1=0, select bank0
  1552  133B  00E6               	movwf	??_main+1
  1553  133C  30FB               	movlw	251
  1554  133D  00E5               	movwf	??_main
  1555  133E                     u4797:
  1556  133E  0BE5               	decfsz	??_main,f
  1557  133F  2B3E               	goto	u4797
  1558  1340  0BE6               	decfsz	??_main+1,f
  1559  1341  2B3E               	goto	u4797
  1560  1342                     l3190:
  1561                           
  1562                           ;pic16f.c: 67:         tempera1 = aht_GetTemperature();
  1563  1342  160A  118A  2163  160A  118A  	fcall	_aht_GetTemperature
  1564  1347  1283               	bcf	3,5	;RP0=0, select bank0
  1565  1348  1303               	bcf	3,6	;RP1=0, select bank0
  1566  1349  0855               	movf	?_aht_GetTemperature,w
  1567  134A  00ED               	movwf	_tempera1
  1568  134B  0856               	movf	?_aht_GetTemperature+1,w
  1569  134C  00EE               	movwf	_tempera1+1
  1570  134D  0857               	movf	?_aht_GetTemperature+2,w
  1571  134E  00EF               	movwf	_tempera1+2
  1572  134F                     l3192:
  1573                           
  1574                           ;pic16f.c: 69:        uartTX_Write_Str("T1   H1   \n");
  1575  134F  3086               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1576  1350  160A  158A  268E  160A  118A  	fcall	_uartTX_Write_Str
  1577  1355                     l3194:
  1578                           
  1579                           ;pic16f.c: 70:        sprintf(datos, "%2.1f   %2.1f ", tempera1);
  1580  1355  3077               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1581  1356  1283               	bcf	3,5	;RP0=0, select bank0
  1582  1357  1303               	bcf	3,6	;RP1=0, select bank0
  1583  1358  00E5               	movwf	??_main
  1584  1359  0865               	movf	??_main,w
  1585  135A  00DB               	movwf	sprintf@f
  1586  135B  086D               	movf	_tempera1,w
  1587  135C  00DC               	movwf	?_sprintf+1
  1588  135D  086E               	movf	_tempera1+1,w
  1589  135E  00DD               	movwf	?_sprintf+2
  1590  135F  086F               	movf	_tempera1+2,w
  1591  1360  00DE               	movwf	?_sprintf+3
  1592  1361  30BB               	movlw	(low (_datos| 0))& (0+255)
  1593  1362  120A  158A  2530  160A  118A  	fcall	_sprintf
  1594  1367                     l3196:
  1595                           
  1596                           ;pic16f.c: 71:       uartTX_Write(datos);
  1597  1367  30BB               	movlw	(low _datos)& (0+255)
  1598  1368  160A  158A  261F  160A  118A  	fcall	_uartTX_Write
  1599  136D                     l3198:
  1600                           
  1601                           ;pic16f.c: 72:       uartTX_Write(13);
  1602  136D  300D               	movlw	13
  1603  136E  160A  158A  261F  160A  118A  	fcall	_uartTX_Write
  1604  1373                     l3200:
  1605                           
  1606                           ;pic16f.c: 73:       uartTX_Write(10);
  1607  1373  300A               	movlw	10
  1608  1374  160A  158A  261F  160A  118A  	fcall	_uartTX_Write
  1609  1379                     l3202:
  1610                           
  1611                           ;pic16f.c: 74:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1612  1379  300D               	movlw	13
  1613  137A  1283               	bcf	3,5	;RP0=0, select bank0
  1614  137B  1303               	bcf	3,6	;RP1=0, select bank0
  1615  137C  00E6               	movwf	??_main+1
  1616  137D  30FB               	movlw	251
  1617  137E  00E5               	movwf	??_main
  1618  137F                     u4807:
  1619  137F  0BE5               	decfsz	??_main,f
  1620  1380  2B7F               	goto	u4807
  1621  1381  0BE6               	decfsz	??_main+1,f
  1622  1382  2B7F               	goto	u4807
  1623  1383  2B2A               	goto	l3184
  1624  1384  120A  118A  2800   	ljmp	start
  1625  1387                     __end_of_main:
  1626                           
  1627                           	psect	text1
  1628  1E8E                     __ptext1:	
  1629 ;; *************** function _uartTX_Write_Str *****************
  1630 ;; Defined at:
  1631 ;;		line 43 in file "USART.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  string          1    wreg     PTR unsigned char 
  1634 ;;		 -> STR_1(12), 
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  string          1    4[COMMON] PTR unsigned char 
  1637 ;;		 -> STR_1(12), 
  1638 ;;  n               2    2[COMMON] int 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1648 ;;      Params:         0       0       0       0       0
  1649 ;;      Locals:         3       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0
  1651 ;;      Totals:         3       0       0       0       0
  1652 ;;Total ram usage:        3 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:    1
  1655 ;; This function calls:
  1656 ;;		_uartTX_Write
  1657 ;; This function is called by:
  1658 ;;		_main
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           
  1663                           ;psect for function _uartTX_Write_Str
  1664  1E8E                     _uartTX_Write_Str:
  1665                           
  1666                           ;incstack = 0
  1667                           ; Regs used in _uartTX_Write_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1668                           ;uartTX_Write_Str@string stored from wreg
  1669  1E8E  00F4               	movwf	uartTX_Write_Str@string
  1670  1E8F                     l2910:
  1671                           
  1672                           ;USART.c: 44:     int n;;USART.c: 45:     for (n=0; string[n] != '\n'; n++){
  1673  1E8F  01F2               	clrf	uartTX_Write_Str@n
  1674  1E90  01F3               	clrf	uartTX_Write_Str@n+1
  1675  1E91  2EA5               	goto	l2916
  1676  1E92                     l2912:
  1677                           
  1678                           ;USART.c: 46:         uartTX_Write(string[n]);
  1679  1E92  0872               	movf	uartTX_Write_Str@n,w
  1680  1E93  0774               	addwf	uartTX_Write_Str@string,w
  1681  1E94  0084               	movwf	4
  1682  1E95  160A  118A  2000  160A  158A  	fcall	stringdir
  1683  1E9A  160A  158A  261F  160A  158A  	fcall	_uartTX_Write
  1684  1E9F                     l2914:
  1685                           
  1686                           ;USART.c: 47:     }
  1687  1E9F  3001               	movlw	1
  1688  1EA0  07F2               	addwf	uartTX_Write_Str@n,f
  1689  1EA1  1803               	skipnc
  1690  1EA2  0AF3               	incf	uartTX_Write_Str@n+1,f
  1691  1EA3  3000               	movlw	0
  1692  1EA4  07F3               	addwf	uartTX_Write_Str@n+1,f
  1693  1EA5                     l2916:
  1694  1EA5  0872               	movf	uartTX_Write_Str@n,w
  1695  1EA6  0774               	addwf	uartTX_Write_Str@string,w
  1696  1EA7  0084               	movwf	4
  1697  1EA8  160A  118A  2000  160A  158A  	fcall	stringdir
  1698  1EAD  3A0A               	xorlw	10
  1699  1EAE  1D03               	skipz
  1700  1EAF  2EB1               	goto	u4291
  1701  1EB0  2EB2               	goto	u4290
  1702  1EB1                     u4291:
  1703  1EB1  2E92               	goto	l2912
  1704  1EB2                     u4290:
  1705  1EB2                     l198:
  1706  1EB2  0008               	return
  1707  1EB3                     __end_of_uartTX_Write_Str:
  1708                           
  1709                           	psect	text2
  1710  1E1F                     __ptext2:	
  1711 ;; *************** function _uartTX_Write *****************
  1712 ;; Defined at:
  1713 ;;		line 36 in file "USART.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  dato            1    wreg     unsigned char 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  dato            1    1[COMMON] unsigned char 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1727 ;;      Params:         0       0       0       0       0
  1728 ;;      Locals:         1       0       0       0       0
  1729 ;;      Temps:          1       0       0       0       0
  1730 ;;      Totals:         2       0       0       0       0
  1731 ;;Total ram usage:        2 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_main
  1737 ;;		_uartTX_Write_Str
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           
  1742                           ;psect for function _uartTX_Write
  1743  1E1F                     _uartTX_Write:
  1744                           
  1745                           ;incstack = 0
  1746                           ; Regs used in _uartTX_Write: [wreg]
  1747                           ;uartTX_Write@dato stored from wreg
  1748  1E1F  00F1               	movwf	uartTX_Write@dato
  1749  1E20                     l2424:
  1750                           
  1751                           ;USART.c: 37:         TXREG = dato;
  1752  1E20  0871               	movf	uartTX_Write@dato,w
  1753  1E21  1283               	bcf	3,5	;RP0=0, select bank0
  1754  1E22  1303               	bcf	3,6	;RP1=0, select bank0
  1755  1E23  0099               	movwf	25	;volatile
  1756                           
  1757                           ;USART.c: 38:         while(TXSTAbits.TRMT == 0){
  1758  1E24  2E2A               	goto	l2428
  1759  1E25                     l2426:
  1760                           
  1761                           ;USART.c: 39:             _delay((unsigned long)((500)*(4000000/4000000.0)));
  1762  1E25  30A6               	movlw	166
  1763  1E26  00F0               	movwf	??_uartTX_Write
  1764  1E27                     u4817:
  1765  1E27  0BF0               	decfsz	??_uartTX_Write,f
  1766  1E28  2E27               	goto	u4817
  1767  1E29  0000               	nop
  1768  1E2A                     l2428:
  1769                           
  1770                           ;USART.c: 38:         while(TXSTAbits.TRMT == 0){
  1771  1E2A  1683               	bsf	3,5	;RP0=1, select bank1
  1772  1E2B  1303               	bcf	3,6	;RP1=0, select bank1
  1773  1E2C  1C98               	btfss	24,1	;volatile
  1774  1E2D  2E2F               	goto	u3271
  1775  1E2E  2E30               	goto	u3270
  1776  1E2F                     u3271:
  1777  1E2F  2E25               	goto	l2426
  1778  1E30                     u3270:
  1779  1E30                     l192:
  1780  1E30  0008               	return
  1781  1E31                     __end_of_uartTX_Write:
  1782                           
  1783                           	psect	text3
  1784  162F                     __ptext3:	
  1785 ;; *************** function _uartRC_init *****************
  1786 ;; Defined at:
  1787 ;;		line 13 in file "USART.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  baudrate        2    6[BANK0 ] unsigned int 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  n               2    9[COMMON] unsigned int 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      unsigned char 
  1794 ;; Registers used:
  1795 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1801 ;;      Params:         0       2       0       0       0
  1802 ;;      Locals:         2       0       0       0       0
  1803 ;;      Temps:          0      12       0       0       0
  1804 ;;      Totals:         2      14       0       0       0
  1805 ;;Total ram usage:       16 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    1
  1808 ;; This function calls:
  1809 ;;		___aldiv
  1810 ;; This function is called by:
  1811 ;;		_main
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           
  1816                           ;psect for function _uartRC_init
  1817  162F                     _uartRC_init:
  1818  162F                     l2870:	
  1819                           ;incstack = 0
  1820                           ; Regs used in _uartRC_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1821                           
  1822                           
  1823                           ;USART.c: 14:     uint16_t n;;USART.c: 15:     n = (4000000 - baudrate*64)/(baudrate*64)
      +                          ;
  1824  162F  1283               	bcf	3,5	;RP0=0, select bank0
  1825  1630  1303               	bcf	3,6	;RP1=0, select bank0
  1826  1631  0827               	movf	uartRC_init@baudrate+1,w
  1827  1632  00A9               	movwf	??_uartRC_init+1
  1828  1633  0826               	movf	uartRC_init@baudrate,w
  1829  1634  00A8               	movwf	??_uartRC_init
  1830  1635  3006               	movlw	6
  1831  1636  00FF               	movwf	btemp+1
  1832  1637                     u4225:
  1833  1637  1003               	clrc
  1834  1638  0DA8               	rlf	??_uartRC_init,f
  1835  1639  0DA9               	rlf	??_uartRC_init+1,f
  1836  163A  0BFF               	decfsz	btemp+1,f
  1837  163B  2E37               	goto	u4225
  1838  163C  0828               	movf	??_uartRC_init,w
  1839  163D  00F0               	movwf	___aldiv@divisor
  1840  163E  0829               	movf	??_uartRC_init+1,w
  1841  163F  00F1               	movwf	___aldiv@divisor+1
  1842  1640  01F2               	clrf	___aldiv@divisor+2
  1843  1641  01F3               	clrf	___aldiv@divisor+3
  1844  1642  0827               	movf	uartRC_init@baudrate+1,w
  1845  1643  00AB               	movwf	??_uartRC_init+3
  1846  1644  0826               	movf	uartRC_init@baudrate,w
  1847  1645  00AA               	movwf	??_uartRC_init+2
  1848  1646  3006               	movlw	6
  1849  1647  00FF               	movwf	btemp+1
  1850  1648                     u4235:
  1851  1648  1003               	clrc
  1852  1649  0DAA               	rlf	??_uartRC_init+2,f
  1853  164A  0DAB               	rlf	??_uartRC_init+3,f
  1854  164B  0BFF               	decfsz	btemp+1,f
  1855  164C  2E48               	goto	u4235
  1856  164D  082A               	movf	??_uartRC_init+2,w
  1857  164E  00AC               	movwf	??_uartRC_init+4
  1858  164F  082B               	movf	??_uartRC_init+3,w
  1859  1650  00AD               	movwf	??_uartRC_init+5
  1860  1651  01AE               	clrf	??_uartRC_init+6
  1861  1652  01AF               	clrf	??_uartRC_init+7
  1862  1653  3000               	movlw	0
  1863  1654  00B0               	movwf	??_uartRC_init+8
  1864  1655  3009               	movlw	9
  1865  1656  00B1               	movwf	??_uartRC_init+9
  1866  1657  303D               	movlw	61
  1867  1658  00B2               	movwf	??_uartRC_init+10
  1868  1659  3000               	movlw	0
  1869  165A  00B3               	movwf	??_uartRC_init+11
  1870  165B  082C               	movf	??_uartRC_init+4,w
  1871  165C  02B0               	subwf	??_uartRC_init+8,f
  1872  165D  082D               	movf	??_uartRC_init+5,w
  1873  165E  1C03               	skipc
  1874  165F  0F2D               	incfsz	??_uartRC_init+5,w
  1875  1660  2E62               	goto	u4241
  1876  1661  2E63               	goto	u4242
  1877  1662                     u4241:
  1878  1662  02B1               	subwf	??_uartRC_init+9,f
  1879  1663                     u4242:
  1880  1663  082E               	movf	??_uartRC_init+6,w
  1881  1664  1C03               	skipc
  1882  1665  0F2E               	incfsz	??_uartRC_init+6,w
  1883  1666  2E68               	goto	u4243
  1884  1667  2E69               	goto	u4244
  1885  1668                     u4243:
  1886  1668  02B2               	subwf	??_uartRC_init+10,f
  1887  1669                     u4244:
  1888  1669  082F               	movf	??_uartRC_init+7,w
  1889  166A  1C03               	skipc
  1890  166B  0F2F               	incfsz	??_uartRC_init+7,w
  1891  166C  2E6E               	goto	u4245
  1892  166D  2E6F               	goto	u4246
  1893  166E                     u4245:
  1894  166E  02B3               	subwf	??_uartRC_init+11,f
  1895  166F                     u4246:
  1896  166F  0833               	movf	??_uartRC_init+11,w
  1897  1670  00F7               	movwf	___aldiv@dividend+3
  1898  1671  0832               	movf	??_uartRC_init+10,w
  1899  1672  00F6               	movwf	___aldiv@dividend+2
  1900  1673  0831               	movf	??_uartRC_init+9,w
  1901  1674  00F5               	movwf	___aldiv@dividend+1
  1902  1675  0830               	movf	??_uartRC_init+8,w
  1903  1676  00F4               	movwf	___aldiv@dividend
  1904  1677  160A  118A  2413  160A  118A  	fcall	___aldiv
  1905  167C  0871               	movf	?___aldiv+1,w
  1906  167D  00FA               	movwf	uartRC_init@n+1
  1907  167E  0870               	movf	?___aldiv,w
  1908  167F  00F9               	movwf	uartRC_init@n
  1909  1680                     l2872:
  1910                           
  1911                           ;USART.c: 16:     if (n > 255){
  1912  1680  3001               	movlw	1
  1913  1681  027A               	subwf	uartRC_init@n+1,w
  1914  1682  3000               	movlw	0
  1915  1683  1903               	skipnz
  1916  1684  0279               	subwf	uartRC_init@n,w
  1917  1685  1C03               	skipc
  1918  1686  2E88               	goto	u4251
  1919  1687  2E89               	goto	u4250
  1920  1688                     u4251:
  1921  1688  2EE1               	goto	l2878
  1922  1689                     u4250:
  1923  1689                     l2874:
  1924                           
  1925                           ;USART.c: 17:         n = (4000000 - baudrate*16)/(baudrate*16);
  1926  1689  1283               	bcf	3,5	;RP0=0, select bank0
  1927  168A  1303               	bcf	3,6	;RP1=0, select bank0
  1928  168B  0827               	movf	uartRC_init@baudrate+1,w
  1929  168C  00A9               	movwf	??_uartRC_init+1
  1930  168D  0826               	movf	uartRC_init@baudrate,w
  1931  168E  00A8               	movwf	??_uartRC_init
  1932  168F  0EA8               	swapf	??_uartRC_init,f
  1933  1690  0EA9               	swapf	??_uartRC_init+1,f
  1934  1691  30F0               	movlw	240
  1935  1692  05A9               	andwf	??_uartRC_init+1,f
  1936  1693  0828               	movf	??_uartRC_init,w
  1937  1694  390F               	andlw	15
  1938  1695  04A9               	iorwf	??_uartRC_init+1,f
  1939  1696  30F0               	movlw	240
  1940  1697  05A8               	andwf	??_uartRC_init,f
  1941  1698  0828               	movf	??_uartRC_init,w
  1942  1699  00F0               	movwf	___aldiv@divisor
  1943  169A  0829               	movf	??_uartRC_init+1,w
  1944  169B  00F1               	movwf	___aldiv@divisor+1
  1945  169C  01F2               	clrf	___aldiv@divisor+2
  1946  169D  01F3               	clrf	___aldiv@divisor+3
  1947  169E  0827               	movf	uartRC_init@baudrate+1,w
  1948  169F  00AB               	movwf	??_uartRC_init+3
  1949  16A0  0826               	movf	uartRC_init@baudrate,w
  1950  16A1  00AA               	movwf	??_uartRC_init+2
  1951  16A2  0EAA               	swapf	??_uartRC_init+2,f
  1952  16A3  0EAB               	swapf	??_uartRC_init+3,f
  1953  16A4  30F0               	movlw	240
  1954  16A5  05AB               	andwf	??_uartRC_init+3,f
  1955  16A6  082A               	movf	??_uartRC_init+2,w
  1956  16A7  390F               	andlw	15
  1957  16A8  04AB               	iorwf	??_uartRC_init+3,f
  1958  16A9  30F0               	movlw	240
  1959  16AA  05AA               	andwf	??_uartRC_init+2,f
  1960  16AB  082A               	movf	??_uartRC_init+2,w
  1961  16AC  00AC               	movwf	??_uartRC_init+4
  1962  16AD  082B               	movf	??_uartRC_init+3,w
  1963  16AE  00AD               	movwf	??_uartRC_init+5
  1964  16AF  01AE               	clrf	??_uartRC_init+6
  1965  16B0  01AF               	clrf	??_uartRC_init+7
  1966  16B1  3000               	movlw	0
  1967  16B2  00B0               	movwf	??_uartRC_init+8
  1968  16B3  3009               	movlw	9
  1969  16B4  00B1               	movwf	??_uartRC_init+9
  1970  16B5  303D               	movlw	61
  1971  16B6  00B2               	movwf	??_uartRC_init+10
  1972  16B7  3000               	movlw	0
  1973  16B8  00B3               	movwf	??_uartRC_init+11
  1974  16B9  082C               	movf	??_uartRC_init+4,w
  1975  16BA  02B0               	subwf	??_uartRC_init+8,f
  1976  16BB  082D               	movf	??_uartRC_init+5,w
  1977  16BC  1C03               	skipc
  1978  16BD  0F2D               	incfsz	??_uartRC_init+5,w
  1979  16BE  2EC0               	goto	u4261
  1980  16BF  2EC1               	goto	u4262
  1981  16C0                     u4261:
  1982  16C0  02B1               	subwf	??_uartRC_init+9,f
  1983  16C1                     u4262:
  1984  16C1  082E               	movf	??_uartRC_init+6,w
  1985  16C2  1C03               	skipc
  1986  16C3  0F2E               	incfsz	??_uartRC_init+6,w
  1987  16C4  2EC6               	goto	u4263
  1988  16C5  2EC7               	goto	u4264
  1989  16C6                     u4263:
  1990  16C6  02B2               	subwf	??_uartRC_init+10,f
  1991  16C7                     u4264:
  1992  16C7  082F               	movf	??_uartRC_init+7,w
  1993  16C8  1C03               	skipc
  1994  16C9  0F2F               	incfsz	??_uartRC_init+7,w
  1995  16CA  2ECC               	goto	u4265
  1996  16CB  2ECD               	goto	u4266
  1997  16CC                     u4265:
  1998  16CC  02B3               	subwf	??_uartRC_init+11,f
  1999  16CD                     u4266:
  2000  16CD  0833               	movf	??_uartRC_init+11,w
  2001  16CE  00F7               	movwf	___aldiv@dividend+3
  2002  16CF  0832               	movf	??_uartRC_init+10,w
  2003  16D0  00F6               	movwf	___aldiv@dividend+2
  2004  16D1  0831               	movf	??_uartRC_init+9,w
  2005  16D2  00F5               	movwf	___aldiv@dividend+1
  2006  16D3  0830               	movf	??_uartRC_init+8,w
  2007  16D4  00F4               	movwf	___aldiv@dividend
  2008  16D5  160A  118A  2413  160A  118A  	fcall	___aldiv
  2009  16DA  0871               	movf	?___aldiv+1,w
  2010  16DB  00FA               	movwf	uartRC_init@n+1
  2011  16DC  0870               	movf	?___aldiv,w
  2012  16DD  00F9               	movwf	uartRC_init@n
  2013  16DE                     l2876:
  2014                           
  2015                           ;USART.c: 18:         TXSTAbits.BRGH = 1;
  2016  16DE  1683               	bsf	3,5	;RP0=1, select bank1
  2017  16DF  1303               	bcf	3,6	;RP1=0, select bank1
  2018  16E0  1518               	bsf	24,2	;volatile
  2019  16E1                     l2878:
  2020                           
  2021                           ;USART.c: 20:     if (n < 256){
  2022  16E1  3001               	movlw	1
  2023  16E2  027A               	subwf	uartRC_init@n+1,w
  2024  16E3  3000               	movlw	0
  2025  16E4  1903               	skipnz
  2026  16E5  0279               	subwf	uartRC_init@n,w
  2027  16E6  1803               	skipnc
  2028  16E7  2EE9               	goto	u4271
  2029  16E8  2EEA               	goto	u4270
  2030  16E9                     u4271:
  2031  16E9  2EF6               	goto	l183
  2032  16EA                     u4270:
  2033  16EA                     l2880:
  2034                           
  2035                           ;USART.c: 21:         SPBRG = n;
  2036  16EA  0879               	movf	uartRC_init@n,w
  2037  16EB  1683               	bsf	3,5	;RP0=1, select bank1
  2038  16EC  1303               	bcf	3,6	;RP1=0, select bank1
  2039  16ED  0099               	movwf	25	;volatile
  2040  16EE                     l2882:
  2041                           
  2042                           ;USART.c: 22:         TXSTAbits.SYNC = 0;
  2043  16EE  1218               	bcf	24,4	;volatile
  2044  16EF                     l2884:
  2045                           
  2046                           ;USART.c: 23:         RCSTAbits.SPEN = 1;
  2047  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2048  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2049  16F1  1798               	bsf	24,7	;volatile
  2050  16F2                     l2886:
  2051                           
  2052                           ;USART.c: 24:         RCSTAbits.CREN = 1;
  2053  16F2  1618               	bsf	24,4	;volatile
  2054  16F3                     l2888:
  2055                           
  2056                           ;USART.c: 25:         TXSTAbits.TXEN = 1;
  2057  16F3  1683               	bsf	3,5	;RP0=1, select bank1
  2058  16F4  1303               	bcf	3,6	;RP1=0, select bank1
  2059  16F5  1698               	bsf	24,5	;volatile
  2060  16F6                     l183:
  2061  16F6  0008               	return
  2062  16F7                     __end_of_uartRC_init:
  2063                           
  2064                           	psect	text4
  2065  1413                     __ptext4:	
  2066 ;; *************** function ___aldiv *****************
  2067 ;; Defined at:
  2068 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\aldiv.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  divisor         4    0[COMMON] long 
  2071 ;;  dividend        4    4[COMMON] long 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  quotient        4    2[BANK0 ] long 
  2074 ;;  sign            1    1[BANK0 ] unsigned char 
  2075 ;;  counter         1    0[BANK0 ] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  4    0[COMMON] long 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         8       0       0       0       0
  2086 ;;      Locals:         0       6       0       0       0
  2087 ;;      Temps:          1       0       0       0       0
  2088 ;;      Totals:         9       6       0       0       0
  2089 ;;Total ram usage:       15 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_uartRC_init
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function ___aldiv
  2100  1413                     ___aldiv:
  2101  1413                     l2670:	
  2102                           ;incstack = 0
  2103                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2104                           
  2105  1413  1283               	bcf	3,5	;RP0=0, select bank0
  2106  1414  1303               	bcf	3,6	;RP1=0, select bank0
  2107  1415  01A1               	clrf	___aldiv@sign
  2108  1416                     l2672:
  2109  1416  1FF3               	btfss	___aldiv@divisor+3,7
  2110  1417  2C19               	goto	u3811
  2111  1418  2C1A               	goto	u3810
  2112  1419                     u3811:
  2113  1419  2C27               	goto	l465
  2114  141A                     u3810:
  2115  141A                     l2674:
  2116  141A  09F0               	comf	___aldiv@divisor,f
  2117  141B  09F1               	comf	___aldiv@divisor+1,f
  2118  141C  09F2               	comf	___aldiv@divisor+2,f
  2119  141D  09F3               	comf	___aldiv@divisor+3,f
  2120  141E  0AF0               	incf	___aldiv@divisor,f
  2121  141F  1903               	skipnz
  2122  1420  0AF1               	incf	___aldiv@divisor+1,f
  2123  1421  1903               	skipnz
  2124  1422  0AF2               	incf	___aldiv@divisor+2,f
  2125  1423  1903               	skipnz
  2126  1424  0AF3               	incf	___aldiv@divisor+3,f
  2127  1425  01A1               	clrf	___aldiv@sign
  2128  1426  0AA1               	incf	___aldiv@sign,f
  2129  1427                     l465:
  2130  1427  1FF7               	btfss	___aldiv@dividend+3,7
  2131  1428  2C2A               	goto	u3821
  2132  1429  2C2B               	goto	u3820
  2133  142A                     u3821:
  2134  142A  2C3A               	goto	l2680
  2135  142B                     u3820:
  2136  142B                     l2676:
  2137  142B  09F4               	comf	___aldiv@dividend,f
  2138  142C  09F5               	comf	___aldiv@dividend+1,f
  2139  142D  09F6               	comf	___aldiv@dividend+2,f
  2140  142E  09F7               	comf	___aldiv@dividend+3,f
  2141  142F  0AF4               	incf	___aldiv@dividend,f
  2142  1430  1903               	skipnz
  2143  1431  0AF5               	incf	___aldiv@dividend+1,f
  2144  1432  1903               	skipnz
  2145  1433  0AF6               	incf	___aldiv@dividend+2,f
  2146  1434  1903               	skipnz
  2147  1435  0AF7               	incf	___aldiv@dividend+3,f
  2148  1436                     l2678:
  2149  1436  3001               	movlw	1
  2150  1437  00F8               	movwf	??___aldiv
  2151  1438  0878               	movf	??___aldiv,w
  2152  1439  06A1               	xorwf	___aldiv@sign,f
  2153  143A                     l2680:
  2154  143A  3000               	movlw	0
  2155  143B  00A5               	movwf	___aldiv@quotient+3
  2156  143C  3000               	movlw	0
  2157  143D  00A4               	movwf	___aldiv@quotient+2
  2158  143E  3000               	movlw	0
  2159  143F  00A3               	movwf	___aldiv@quotient+1
  2160  1440  3000               	movlw	0
  2161  1441  00A2               	movwf	___aldiv@quotient
  2162  1442                     l2682:
  2163  1442  0873               	movf	___aldiv@divisor+3,w
  2164  1443  0472               	iorwf	___aldiv@divisor+2,w
  2165  1444  0471               	iorwf	___aldiv@divisor+1,w
  2166  1445  0470               	iorwf	___aldiv@divisor,w
  2167  1446  1903               	skipnz
  2168  1447  2C49               	goto	u3831
  2169  1448  2C4A               	goto	u3830
  2170  1449                     u3831:
  2171  1449  2C97               	goto	l2702
  2172  144A                     u3830:
  2173  144A                     l2684:
  2174  144A  01A0               	clrf	___aldiv@counter
  2175  144B  0AA0               	incf	___aldiv@counter,f
  2176  144C  2C5A               	goto	l2688
  2177  144D                     l2686:
  2178  144D  3001               	movlw	1
  2179  144E  00F8               	movwf	??___aldiv
  2180  144F                     u3845:
  2181  144F  1003               	clrc
  2182  1450  0DF0               	rlf	___aldiv@divisor,f
  2183  1451  0DF1               	rlf	___aldiv@divisor+1,f
  2184  1452  0DF2               	rlf	___aldiv@divisor+2,f
  2185  1453  0DF3               	rlf	___aldiv@divisor+3,f
  2186  1454  0BF8               	decfsz	??___aldiv,f
  2187  1455  2C4F               	goto	u3845
  2188  1456  3001               	movlw	1
  2189  1457  00F8               	movwf	??___aldiv
  2190  1458  0878               	movf	??___aldiv,w
  2191  1459  07A0               	addwf	___aldiv@counter,f
  2192  145A                     l2688:
  2193  145A  1FF3               	btfss	___aldiv@divisor+3,7
  2194  145B  2C5D               	goto	u3851
  2195  145C  2C5E               	goto	u3850
  2196  145D                     u3851:
  2197  145D  2C4D               	goto	l2686
  2198  145E                     u3850:
  2199  145E                     l2690:
  2200  145E  3001               	movlw	1
  2201  145F  00F8               	movwf	??___aldiv
  2202  1460                     u3865:
  2203  1460  1003               	clrc
  2204  1461  0DA2               	rlf	___aldiv@quotient,f
  2205  1462  0DA3               	rlf	___aldiv@quotient+1,f
  2206  1463  0DA4               	rlf	___aldiv@quotient+2,f
  2207  1464  0DA5               	rlf	___aldiv@quotient+3,f
  2208  1465  0BF8               	decfsz	??___aldiv,f
  2209  1466  2C60               	goto	u3865
  2210  1467                     l2692:
  2211  1467  0873               	movf	___aldiv@divisor+3,w
  2212  1468  0277               	subwf	___aldiv@dividend+3,w
  2213  1469  1D03               	skipz
  2214  146A  2C75               	goto	u3875
  2215  146B  0872               	movf	___aldiv@divisor+2,w
  2216  146C  0276               	subwf	___aldiv@dividend+2,w
  2217  146D  1D03               	skipz
  2218  146E  2C75               	goto	u3875
  2219  146F  0871               	movf	___aldiv@divisor+1,w
  2220  1470  0275               	subwf	___aldiv@dividend+1,w
  2221  1471  1D03               	skipz
  2222  1472  2C75               	goto	u3875
  2223  1473  0870               	movf	___aldiv@divisor,w
  2224  1474  0274               	subwf	___aldiv@dividend,w
  2225  1475                     u3875:
  2226  1475  1C03               	skipc
  2227  1476  2C78               	goto	u3871
  2228  1477  2C79               	goto	u3870
  2229  1478                     u3871:
  2230  1478  2C88               	goto	l2698
  2231  1479                     u3870:
  2232  1479                     l2694:
  2233  1479  0870               	movf	___aldiv@divisor,w
  2234  147A  02F4               	subwf	___aldiv@dividend,f
  2235  147B  0871               	movf	___aldiv@divisor+1,w
  2236  147C  1C03               	skipc
  2237  147D  0F71               	incfsz	___aldiv@divisor+1,w
  2238  147E  02F5               	subwf	___aldiv@dividend+1,f
  2239  147F  0872               	movf	___aldiv@divisor+2,w
  2240  1480  1C03               	skipc
  2241  1481  0F72               	incfsz	___aldiv@divisor+2,w
  2242  1482  02F6               	subwf	___aldiv@dividend+2,f
  2243  1483  0873               	movf	___aldiv@divisor+3,w
  2244  1484  1C03               	skipc
  2245  1485  0F73               	incfsz	___aldiv@divisor+3,w
  2246  1486  02F7               	subwf	___aldiv@dividend+3,f
  2247  1487                     l2696:
  2248  1487  1422               	bsf	___aldiv@quotient,0
  2249  1488                     l2698:
  2250  1488  3001               	movlw	1
  2251  1489                     u3885:
  2252  1489  1003               	clrc
  2253  148A  0CF3               	rrf	___aldiv@divisor+3,f
  2254  148B  0CF2               	rrf	___aldiv@divisor+2,f
  2255  148C  0CF1               	rrf	___aldiv@divisor+1,f
  2256  148D  0CF0               	rrf	___aldiv@divisor,f
  2257  148E  3EFF               	addlw	-1
  2258  148F  1D03               	skipz
  2259  1490  2C89               	goto	u3885
  2260  1491                     l2700:
  2261  1491  3001               	movlw	1
  2262  1492  02A0               	subwf	___aldiv@counter,f
  2263  1493  1D03               	btfss	3,2
  2264  1494  2C96               	goto	u3891
  2265  1495  2C97               	goto	u3890
  2266  1496                     u3891:
  2267  1496  2C5E               	goto	l2690
  2268  1497                     u3890:
  2269  1497                     l2702:
  2270  1497  0821               	movf	___aldiv@sign,w
  2271  1498  1903               	btfsc	3,2
  2272  1499  2C9B               	goto	u3901
  2273  149A  2C9C               	goto	u3900
  2274  149B                     u3901:
  2275  149B  2CA7               	goto	l2706
  2276  149C                     u3900:
  2277  149C                     l2704:
  2278  149C  09A2               	comf	___aldiv@quotient,f
  2279  149D  09A3               	comf	___aldiv@quotient+1,f
  2280  149E  09A4               	comf	___aldiv@quotient+2,f
  2281  149F  09A5               	comf	___aldiv@quotient+3,f
  2282  14A0  0AA2               	incf	___aldiv@quotient,f
  2283  14A1  1903               	skipnz
  2284  14A2  0AA3               	incf	___aldiv@quotient+1,f
  2285  14A3  1903               	skipnz
  2286  14A4  0AA4               	incf	___aldiv@quotient+2,f
  2287  14A5  1903               	skipnz
  2288  14A6  0AA5               	incf	___aldiv@quotient+3,f
  2289  14A7                     l2706:
  2290  14A7  0825               	movf	___aldiv@quotient+3,w
  2291  14A8  00F3               	movwf	?___aldiv+3
  2292  14A9  0824               	movf	___aldiv@quotient+2,w
  2293  14AA  00F2               	movwf	?___aldiv+2
  2294  14AB  0823               	movf	___aldiv@quotient+1,w
  2295  14AC  00F1               	movwf	?___aldiv+1
  2296  14AD  0822               	movf	___aldiv@quotient,w
  2297  14AE  00F0               	movwf	?___aldiv
  2298  14AF                     l475:
  2299  14AF  0008               	return
  2300  14B0                     __end_of___aldiv:
  2301                           
  2302                           	psect	text5
  2303  0D30                     __ptext5:	
  2304 ;; *************** function _sprintf *****************
  2305 ;; Defined at:
  2306 ;;		line 505 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  sp              1    wreg     PTR unsigned char 
  2309 ;;		 -> datos(20), 
  2310 ;;  f               1   59[BANK0 ] PTR const unsigned char 
  2311 ;;		 -> STR_2(15), 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  sp              1   18[BANK1 ] PTR unsigned char 
  2314 ;;		 -> datos(20), 
  2315 ;;  tmpval          4   12[BANK1 ] struct .
  2316 ;;  val             4    4[BANK1 ] unsigned long 
  2317 ;;  fval            3   19[BANK1 ] unsigned long 
  2318 ;;  prec            2   22[BANK1 ] int 
  2319 ;;  eexp            2   16[BANK1 ] int 
  2320 ;;  width           2   10[BANK1 ] int 
  2321 ;;  flag            2    8[BANK1 ] unsigned short 
  2322 ;;  cp              2    0        PTR const unsigned char 
  2323 ;;  len             2    0        unsigned int 
  2324 ;;  c               1   24[BANK1 ] unsigned char 
  2325 ;;  ap              1    3[BANK1 ] PTR void [1]
  2326 ;;		 -> ?_sprintf(2), 
  2327 ;;  d               1    0        unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  2   59[BANK0 ] int 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2337 ;;      Params:         0       4       0       0       0
  2338 ;;      Locals:         0       0      25       0       0
  2339 ;;      Temps:          0       6       0       0       0
  2340 ;;      Totals:         0      10      25       0       0
  2341 ;;Total ram usage:       35 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    3
  2344 ;; This function calls:
  2345 ;;		___awdiv
  2346 ;;		___ftadd
  2347 ;;		___ftge
  2348 ;;		___ftmul
  2349 ;;		___ftneg
  2350 ;;		___ftsub
  2351 ;;		___fttol
  2352 ;;		___lldiv
  2353 ;;		___llmod
  2354 ;;		___lltoft
  2355 ;;		___wmul
  2356 ;;		__div_to_l_
  2357 ;;		__tdiv_to_l_
  2358 ;;		_fround
  2359 ;;		_isdigit
  2360 ;;		_scale
  2361 ;; This function is called by:
  2362 ;;		_main
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           
  2367                           ;psect for function _sprintf
  2368  0D30                     _sprintf:
  2369                           
  2370                           ;incstack = 0
  2371                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2372                           ;sprintf@sp stored from wreg
  2373  0D30  1683               	bsf	3,5	;RP0=1, select bank1
  2374  0D31  1303               	bcf	3,6	;RP1=0, select bank1
  2375  0D32  00B2               	movwf	sprintf@sp^(0+128)
  2376  0D33                     l2918:
  2377                           
  2378                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const ch
      +                          ar * f, ...);D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 506: {;D:\MPLAB XC8 
      +                          compiler\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\MPLAB XC8 compiler\pic\so
      +                          urces\c90\common\doprnt.c: 512:  char c;;D:\MPLAB XC8 compiler\pic\sources\c90\common\do
      +                          prnt.c: 514:  int width;;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 517:  in
      +                          t prec;;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 525:  unsigned short flag
      +                          ;
  2379  0D33  305C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2380  0D34  1283               	bcf	3,5	;RP0=0, select bank0
  2381  0D35  1303               	bcf	3,6	;RP1=0, select bank0
  2382  0D36  00DF               	movwf	??_sprintf
  2383  0D37  085F               	movf	??_sprintf,w
  2384  0D38  1683               	bsf	3,5	;RP0=1, select bank1
  2385  0D39  1303               	bcf	3,6	;RP1=0, select bank1
  2386  0D3A  00A3               	movwf	sprintf@ap^(0+128)
  2387  0D3B                     L1:
  2388                           
  2389                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  2390  0D3B  120A  118A  2FB8   	goto	l3166
  2391  0D3E                     l2920:
  2392                           
  2393                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  2394  0D3E  3025               	movlw	37
  2395  0D3F  0638               	xorwf	sprintf@c^(0+128),w
  2396  0D40  1903               	btfsc	3,2
  2397  0D41  2D43               	goto	u4301
  2398  0D42  2D44               	goto	u4300
  2399  0D43                     u4301:
  2400  0D43  2D58               	goto	l2926
  2401  0D44                     u4300:
  2402  0D44                     l2922:
  2403                           
  2404                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 557:   {;D:\MPLAB XC8 compiler\p
      +                          ic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2405  0D44  0838               	movf	sprintf@c^(0+128),w
  2406  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0D47  00DF               	movwf	??_sprintf
  2409  0D48  1683               	bsf	3,5	;RP0=1, select bank1
  2410  0D49  1303               	bcf	3,6	;RP1=0, select bank1
  2411  0D4A  0832               	movf	sprintf@sp^(0+128),w
  2412  0D4B  0084               	movwf	4
  2413  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  2414  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  2415  0D4E  085F               	movf	??_sprintf,w
  2416  0D4F  1383               	bcf	3,7	;select IRP bank0
  2417  0D50  0080               	movwf	0
  2418  0D51                     l2924:
  2419  0D51  3001               	movlw	1
  2420  0D52  00DF               	movwf	??_sprintf
  2421  0D53  085F               	movf	??_sprintf,w
  2422  0D54  1683               	bsf	3,5	;RP0=1, select bank1
  2423  0D55  1303               	bcf	3,6	;RP1=0, select bank1
  2424  0D56  07B2               	addwf	sprintf@sp^(0+128),f
  2425                           
  2426                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 559:    continue;
  2427  0D57  2D3B               	goto	L1
  2428  0D58                     l2926:
  2429                           
  2430                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2431  0D58  01AA               	clrf	sprintf@width^(0+128)
  2432  0D59  01AB               	clrf	(sprintf@width+1)^(0+128)
  2433                           
  2434                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2435  0D5A  01A8               	clrf	sprintf@flag^(0+128)
  2436  0D5B  01A9               	clrf	(sprintf@flag+1)^(0+128)
  2437  0D5C                     l2928:
  2438                           
  2439                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)*f))
      +                           {
  2440  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  2441  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  2442  0D5E  085B               	movf	sprintf@f,w
  2443  0D5F  0084               	movwf	4
  2444  0D60  160A  118A  2000  120A  158A  	fcall	stringdir
  2445  0D65  160A  158A  260D  120A  158A  	fcall	_isdigit
  2446  0D6A  1C03               	btfss	3,0
  2447  0D6B  2D6D               	goto	u4311
  2448  0D6C  2D6E               	goto	u4310
  2449  0D6D                     u4311:
  2450  0D6D  2DB8               	goto	l2940
  2451  0D6E                     u4310:
  2452  0D6E                     l2930:
  2453                           
  2454                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  2455  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  2456  0D6F  1303               	bcf	3,6	;RP1=0, select bank1
  2457  0D70  01AA               	clrf	sprintf@width^(0+128)
  2458  0D71  01AB               	clrf	(sprintf@width+1)^(0+128)
  2459  0D72                     l2932:
  2460                           
  2461                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  2462  0D72  300A               	movlw	10
  2463  0D73  00F0               	movwf	___wmul@multiplier
  2464  0D74  3000               	movlw	0
  2465  0D75  00F1               	movwf	___wmul@multiplier+1
  2466  0D76  1683               	bsf	3,5	;RP0=1, select bank1
  2467  0D77  1303               	bcf	3,6	;RP1=0, select bank1
  2468  0D78  082B               	movf	(sprintf@width+1)^(0+128),w
  2469  0D79  00F3               	movwf	___wmul@multiplicand+1
  2470  0D7A  082A               	movf	sprintf@width^(0+128),w
  2471  0D7B  00F2               	movwf	___wmul@multiplicand
  2472  0D7C  160A  158A  2669  120A  158A  	fcall	___wmul
  2473  0D81  0871               	movf	?___wmul+1,w
  2474  0D82  1683               	bsf	3,5	;RP0=1, select bank1
  2475  0D83  1303               	bcf	3,6	;RP1=0, select bank1
  2476  0D84  00AB               	movwf	(sprintf@width+1)^(0+128)
  2477  0D85  0870               	movf	?___wmul,w
  2478  0D86  00AA               	movwf	sprintf@width^(0+128)
  2479  0D87                     l2934:
  2480                           
  2481                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - '0';
  2482  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0D89  085B               	movf	sprintf@f,w
  2485  0D8A  0084               	movwf	4
  2486  0D8B  160A  118A  2000  120A  158A  	fcall	stringdir
  2487  0D90  3ED0               	addlw	208
  2488  0D91  00DF               	movwf	??_sprintf
  2489  0D92  30FF               	movlw	255
  2490  0D93  1803               	skipnc
  2491  0D94  3000               	movlw	0
  2492  0D95  00E0               	movwf	??_sprintf+1
  2493  0D96  085F               	movf	??_sprintf,w
  2494  0D97  1683               	bsf	3,5	;RP0=1, select bank1
  2495  0D98  1303               	bcf	3,6	;RP1=0, select bank1
  2496  0D99  07AA               	addwf	sprintf@width^(0+128),f
  2497  0D9A  1803               	skipnc
  2498  0D9B  0AAB               	incf	(sprintf@width+1)^(0+128),f
  2499  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  2500  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  2501  0D9E  0860               	movf	??_sprintf+1,w
  2502  0D9F  1683               	bsf	3,5	;RP0=1, select bank1
  2503  0DA0  1303               	bcf	3,6	;RP1=0, select bank1
  2504  0DA1  07AB               	addwf	(sprintf@width+1)^(0+128),f
  2505  0DA2                     l2936:
  2506  0DA2  3001               	movlw	1
  2507  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  2508  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  2509  0DA5  00DF               	movwf	??_sprintf
  2510  0DA6  085F               	movf	??_sprintf,w
  2511  0DA7  07DB               	addwf	sprintf@f,f
  2512  0DA8                     l2938:
  2513                           
  2514                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((unsigne
      +                          d)*f));
  2515  0DA8  085B               	movf	sprintf@f,w
  2516  0DA9  0084               	movwf	4
  2517  0DAA  160A  118A  2000  120A  158A  	fcall	stringdir
  2518  0DAF  160A  158A  260D  120A  158A  	fcall	_isdigit
  2519  0DB4  1803               	btfsc	3,0
  2520  0DB5  2DB7               	goto	u4321
  2521  0DB6  2DB8               	goto	u4320
  2522  0DB7                     u4321:
  2523  0DB7  2D72               	goto	l2932
  2524  0DB8                     u4320:
  2525  0DB8                     l2940:
  2526                           
  2527                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
  2528  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  2529  0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  2530  0DBA  085B               	movf	sprintf@f,w
  2531  0DBB  0084               	movwf	4
  2532  0DBC  160A  118A  2000  120A  158A  	fcall	stringdir
  2533  0DC1  3A2E               	xorlw	46
  2534  0DC2  1D03               	skipz
  2535  0DC3  2DC5               	goto	u4331
  2536  0DC4  2DC6               	goto	u4330
  2537  0DC5                     u4331:
  2538  0DC5  2E1C               	goto	l2956
  2539  0DC6                     u4330:
  2540  0DC6                     l2942:
  2541                           
  2542                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 629:    flag |= 0x4000;
  2543  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  2544  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  2545  0DC8  1729               	bsf	(sprintf@flag^(0+128)+1),6
  2546  0DC9                     l2944:
  2547                           
  2548                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 630:    f++;
  2549  0DC9  3001               	movlw	1
  2550  0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  2551  0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  2552  0DCC  00DF               	movwf	??_sprintf
  2553  0DCD  085F               	movf	??_sprintf,w
  2554  0DCE  07DB               	addwf	sprintf@f,f
  2555  0DCF                     l2946:
  2556                           
  2557                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 644:    {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2558  0DCF  1683               	bsf	3,5	;RP0=1, select bank1
  2559  0DD0  1303               	bcf	3,6	;RP1=0, select bank1
  2560  0DD1  01B6               	clrf	sprintf@prec^(0+128)
  2561  0DD2  01B7               	clrf	(sprintf@prec+1)^(0+128)
  2562                           
  2563                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned
      +                          )*f)) {
  2564  0DD3  2E0A               	goto	l2954
  2565  0DD4                     l2948:
  2566                           
  2567                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  2568  0DD4  300A               	movlw	10
  2569  0DD5  00F0               	movwf	___wmul@multiplier
  2570  0DD6  3000               	movlw	0
  2571  0DD7  00F1               	movwf	___wmul@multiplier+1
  2572  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  2573  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  2574  0DDA  0837               	movf	(sprintf@prec+1)^(0+128),w
  2575  0DDB  00F3               	movwf	___wmul@multiplicand+1
  2576  0DDC  0836               	movf	sprintf@prec^(0+128),w
  2577  0DDD  00F2               	movwf	___wmul@multiplicand
  2578  0DDE  160A  158A  2669  120A  158A  	fcall	___wmul
  2579  0DE3  0871               	movf	?___wmul+1,w
  2580  0DE4  1683               	bsf	3,5	;RP0=1, select bank1
  2581  0DE5  1303               	bcf	3,6	;RP1=0, select bank1
  2582  0DE6  00B7               	movwf	(sprintf@prec+1)^(0+128)
  2583  0DE7  0870               	movf	?___wmul,w
  2584  0DE8  00B6               	movwf	sprintf@prec^(0+128)
  2585  0DE9                     l2950:
  2586                           
  2587                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0';
  2588  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  2589  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  2590  0DEB  085B               	movf	sprintf@f,w
  2591  0DEC  0084               	movwf	4
  2592  0DED  160A  118A  2000  120A  158A  	fcall	stringdir
  2593  0DF2  3ED0               	addlw	208
  2594  0DF3  00DF               	movwf	??_sprintf
  2595  0DF4  30FF               	movlw	255
  2596  0DF5  1803               	skipnc
  2597  0DF6  3000               	movlw	0
  2598  0DF7  00E0               	movwf	??_sprintf+1
  2599  0DF8  085F               	movf	??_sprintf,w
  2600  0DF9  1683               	bsf	3,5	;RP0=1, select bank1
  2601  0DFA  1303               	bcf	3,6	;RP1=0, select bank1
  2602  0DFB  07B6               	addwf	sprintf@prec^(0+128),f
  2603  0DFC  1803               	skipnc
  2604  0DFD  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  2605  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  2606  0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  2607  0E00  0860               	movf	??_sprintf+1,w
  2608  0E01  1683               	bsf	3,5	;RP0=1, select bank1
  2609  0E02  1303               	bcf	3,6	;RP1=0, select bank1
  2610  0E03  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  2611  0E04                     l2952:
  2612  0E04  3001               	movlw	1
  2613  0E05  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0E06  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0E07  00DF               	movwf	??_sprintf
  2616  0E08  085F               	movf	??_sprintf,w
  2617  0E09  07DB               	addwf	sprintf@f,f
  2618  0E0A                     l2954:
  2619                           
  2620                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned
      +                          )*f)) {
  2621  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0E0B  085B               	movf	sprintf@f,w
  2623  0E0C  0084               	movwf	4
  2624  0E0D  160A  118A  2000  120A  158A  	fcall	stringdir
  2625  0E12  160A  158A  260D  120A  158A  	fcall	_isdigit
  2626  0E17  1803               	btfsc	3,0
  2627  0E18  2E1A               	goto	u4341
  2628  0E19  2E1B               	goto	u4340
  2629  0E1A                     u4341:
  2630  0E1A  2DD4               	goto	l2948
  2631  0E1B                     u4340:
  2632  0E1B  2E26               	goto	l2962
  2633  0E1C                     l2956:
  2634                           
  2635                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2636  0E1C  1683               	bsf	3,5	;RP0=1, select bank1
  2637  0E1D  1303               	bcf	3,6	;RP1=0, select bank1
  2638  0E1E  01B6               	clrf	sprintf@prec^(0+128)
  2639  0E1F  01B7               	clrf	(sprintf@prec+1)^(0+128)
  2640  0E20                     l2958:
  2641                           
  2642                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 654:    flag |= 0x1000;
  2643  0E20  1629               	bsf	(sprintf@flag^(0+128)+1),4
  2644  0E21  2E26               	goto	l2962
  2645  0E22                     l329:	
  2646                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2647                           
  2648                           
  2649                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 689:    flag |= 0x400;
  2650  0E22  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0E23  1303               	bcf	3,6	;RP1=0, select bank1
  2652  0E24  1529               	bsf	(sprintf@flag^(0+128)+1),2
  2653                           
  2654                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 690:    break;
  2655  0E25  2E46               	goto	l2964
  2656  0E26                     l2962:
  2657  0E26  3001               	movlw	1
  2658  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  2659  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  2660  0E29  07DB               	addwf	sprintf@f,f
  2661  0E2A  30FF               	movlw	-1
  2662  0E2B  075B               	addwf	sprintf@f,w
  2663  0E2C  0084               	movwf	4
  2664  0E2D  160A  118A  2000  120A  158A  	fcall	stringdir
  2665  0E32  1683               	bsf	3,5	;RP0=1, select bank1
  2666  0E33  1303               	bcf	3,6	;RP1=0, select bank1
  2667  0E34  00B8               	movwf	sprintf@c^(0+128)
  2668  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  2669  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  2670  0E37  00DF               	movwf	??_sprintf
  2671  0E38  01E0               	clrf	??_sprintf+1
  2672                           
  2673                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2674                           ; Switch size 1, requested type "simple"
  2675                           ; Number of cases is 1, Range of values is 0 to 0
  2676                           ; switch strategies available:
  2677                           ; Name         Instructions Cycles
  2678                           ; simple_byte            4     3 (average)
  2679                           ; direct_byte           11     8 (fixed)
  2680                           ; jumptable            260     6 (fixed)
  2681                           ;	Chosen strategy is simple_byte
  2682  0E39  0860               	movf	??_sprintf+1,w
  2683  0E3A  3A00               	xorlw	0	; case 0
  2684  0E3B  1903               	skipnz
  2685  0E3C  2E3E               	goto	l3278
  2686  0E3D  2D3B               	goto	L1
  2687  0E3E                     l3278:
  2688                           
  2689                           ; Switch size 1, requested type "simple"
  2690                           ; Number of cases is 2, Range of values is 0 to 102
  2691                           ; switch strategies available:
  2692                           ; Name         Instructions Cycles
  2693                           ; simple_byte            7     4 (average)
  2694                           ; jumptable            260     6 (fixed)
  2695                           ;	Chosen strategy is simple_byte
  2696  0E3E  085F               	movf	??_sprintf,w
  2697  0E3F  3A00               	xorlw	0	; case 0
  2698  0E40  1903               	skipnz
  2699  0E41  2FFD               	goto	L3
  2700  0E42  3A66               	xorlw	102	; case 102
  2701  0E43  1903               	skipnz
  2702  0E44  2E22               	goto	l329
  2703  0E45  2D3B               	goto	L1
  2704  0E46                     l2964:
  2705                           
  2706                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 851:   if(flag & (0x700)) {
  2707  0E46  3000               	movlw	0
  2708  0E47  0528               	andwf	sprintf@flag^(0+128),w
  2709  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  2710  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  2711  0E4A  00DF               	movwf	??_sprintf
  2712  0E4B  3007               	movlw	7
  2713  0E4C  1683               	bsf	3,5	;RP0=1, select bank1
  2714  0E4D  1303               	bcf	3,6	;RP1=0, select bank1
  2715  0E4E  0529               	andwf	(sprintf@flag+1)^(0+128),w
  2716  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  2718  0E51  00E0               	movwf	??_sprintf+1
  2719  0E52  085F               	movf	??_sprintf,w
  2720  0E53  0460               	iorwf	??_sprintf+1,w
  2721  0E54  1903               	btfsc	3,2
  2722  0E55  2E57               	goto	u4351
  2723  0E56  2E5A               	goto	u4350
  2724  0E57                     u4351:
  2725  0E57  120A  118A  2EB5   	goto	l3120
  2726  0E5A                     u4350:
  2727  0E5A                     l2966:
  2728                           
  2729                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 853:    if(flag & 0x1000)
  2730  0E5A  1683               	bsf	3,5	;RP0=1, select bank1
  2731  0E5B  1303               	bcf	3,6	;RP1=0, select bank1
  2732  0E5C  1E29               	btfss	(sprintf@flag+1)^(0+128),4
  2733  0E5D  2E5F               	goto	u4361
  2734  0E5E  2E60               	goto	u4360
  2735  0E5F                     u4361:
  2736  0E5F  2E64               	goto	l2970
  2737  0E60                     u4360:
  2738  0E60                     l2968:
  2739                           
  2740                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 855:     prec = 6;
  2741  0E60  3006               	movlw	6
  2742  0E61  00B6               	movwf	sprintf@prec^(0+128)
  2743  0E62  3000               	movlw	0
  2744  0E63  00B7               	movwf	(sprintf@prec^(0+128)+1)
  2745  0E64                     l2970:
  2746                           
  2747                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 856:    fval = (*(double *)__va_
      +                          arg((*(double **)ap), (double)0));
  2748  0E64  0823               	movf	sprintf@ap^(0+128),w
  2749  0E65  0084               	movwf	4
  2750  0E66  1383               	bcf	3,7	;select IRP bank0
  2751  0E67  0800               	movf	0,w
  2752  0E68  00B3               	movwf	sprintf@fval^(0+128)
  2753  0E69  0A84               	incf	4,f
  2754  0E6A  0800               	movf	0,w
  2755  0E6B  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2756  0E6C  0A84               	incf	4,f
  2757  0E6D  0800               	movf	0,w
  2758  0E6E  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2759  0E6F                     l2972:
  2760  0E6F  3003               	movlw	3
  2761  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  2762  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  2763  0E72  00DF               	movwf	??_sprintf
  2764  0E73  085F               	movf	??_sprintf,w
  2765  0E74  1683               	bsf	3,5	;RP0=1, select bank1
  2766  0E75  1303               	bcf	3,6	;RP1=0, select bank1
  2767  0E76  07A3               	addwf	sprintf@ap^(0+128),f
  2768  0E77                     l2974:
  2769                           
  2770                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 857:    if(fval < 0.0) {
  2771  0E77  0833               	movf	sprintf@fval^(0+128),w
  2772  0E78  00F0               	movwf	___ftge@ff1
  2773  0E79  0834               	movf	(sprintf@fval+1)^(0+128),w
  2774  0E7A  00F1               	movwf	___ftge@ff1+1
  2775  0E7B  0835               	movf	(sprintf@fval+2)^(0+128),w
  2776  0E7C  00F2               	movwf	___ftge@ff1+2
  2777  0E7D  3000               	movlw	0
  2778  0E7E  00F3               	movwf	___ftge@ff2
  2779  0E7F  3000               	movlw	0
  2780  0E80  00F4               	movwf	___ftge@ff2+1
  2781  0E81  3000               	movlw	0
  2782  0E82  00F5               	movwf	___ftge@ff2+2
  2783  0E83  160A  158A  274A  120A  158A  	fcall	___ftge
  2784  0E88  1803               	btfsc	3,0
  2785  0E89  2E8B               	goto	u4371
  2786  0E8A  2E8C               	goto	u4370
  2787  0E8B                     u4371:
  2788  0E8B  2EA5               	goto	l2980
  2789  0E8C                     u4370:
  2790  0E8C                     l2976:
  2791                           
  2792                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 858:     fval = -fval;
  2793  0E8C  1683               	bsf	3,5	;RP0=1, select bank1
  2794  0E8D  1303               	bcf	3,6	;RP1=0, select bank1
  2795  0E8E  0833               	movf	sprintf@fval^(0+128),w
  2796  0E8F  00F0               	movwf	___ftneg@f1
  2797  0E90  0834               	movf	(sprintf@fval+1)^(0+128),w
  2798  0E91  00F1               	movwf	___ftneg@f1+1
  2799  0E92  0835               	movf	(sprintf@fval+2)^(0+128),w
  2800  0E93  00F2               	movwf	___ftneg@f1+2
  2801  0E94  160A  118A  2099  120A  158A  	fcall	___ftneg
  2802  0E99  0870               	movf	?___ftneg,w
  2803  0E9A  1683               	bsf	3,5	;RP0=1, select bank1
  2804  0E9B  1303               	bcf	3,6	;RP1=0, select bank1
  2805  0E9C  00B3               	movwf	sprintf@fval^(0+128)
  2806  0E9D  0871               	movf	?___ftneg+1,w
  2807  0E9E  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2808  0E9F  0872               	movf	?___ftneg+2,w
  2809  0EA0  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2810  0EA1                     l2978:
  2811                           
  2812                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 859:     flag |= 0x03;
  2813  0EA1  3003               	movlw	3
  2814  0EA2  04A8               	iorwf	sprintf@flag^(0+128),f
  2815  0EA3  3000               	movlw	0
  2816  0EA4  04A9               	iorwf	(sprintf@flag+1)^(0+128),f
  2817  0EA5                     l2980:
  2818                           
  2819                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2820  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  2821  0EA6  1303               	bcf	3,6	;RP1=0, select bank1
  2822  0EA7  01B0               	clrf	sprintf@eexp^(0+128)
  2823  0EA8  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  2824  0EA9                     l2982:
  2825                           
  2826                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 862:    if( fval!=0) {
  2827  0EA9  0835               	movf	(sprintf@fval+2)^(0+128),w
  2828  0EAA  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2829  0EAB  0433               	iorwf	sprintf@fval^(0+128),w
  2830  0EAC  1903               	skipnz
  2831  0EAD  2EAF               	goto	u4381
  2832  0EAE  2EB0               	goto	u4380
  2833  0EAF                     u4381:
  2834  0EAF  2FA2               	goto	l3008
  2835  0EB0                     u4380:
  2836  0EB0                     l2984:
  2837                           
  2838                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 863:     (void)(*(&eexp) = ((*(u
      +                          nsigned long *)&fval >> 15) & 255) - 126);
  2839  0EB0  30B3               	movlw	low (sprintf@fval| 0)
  2840  0EB1  0084               	movwf	4
  2841  0EB2  1383               	bcf	3,7	;select IRP bank1
  2842  0EB3  0800               	movf	0,w
  2843  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  2844  0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  2845  0EB6  00DF               	movwf	??_sprintf
  2846  0EB7  0A84               	incf	4,f
  2847  0EB8  0800               	movf	0,w
  2848  0EB9  00E0               	movwf	??_sprintf+1
  2849  0EBA  0A84               	incf	4,f
  2850  0EBB  0800               	movf	0,w
  2851  0EBC  00E1               	movwf	??_sprintf+2
  2852  0EBD  0A84               	incf	4,f
  2853  0EBE  0800               	movf	0,w
  2854  0EBF  00E2               	movwf	??_sprintf+3
  2855  0EC0  300F               	movlw	15
  2856  0EC1                     u4395:
  2857  0EC1  1003               	clrc
  2858  0EC2  0CE2               	rrf	??_sprintf+3,f
  2859  0EC3  0CE1               	rrf	??_sprintf+2,f
  2860  0EC4  0CE0               	rrf	??_sprintf+1,f
  2861  0EC5  0CDF               	rrf	??_sprintf,f
  2862  0EC6                     u4390:
  2863  0EC6  3EFF               	addlw	-1
  2864  0EC7  1D03               	skipz
  2865  0EC8  2EC1               	goto	u4395
  2866  0EC9  30FF               	movlw	255
  2867  0ECA  055F               	andwf	??_sprintf,w
  2868  0ECB  00E3               	movwf	??_sprintf+4
  2869  0ECC  3000               	movlw	0
  2870  0ECD  0560               	andwf	??_sprintf+1,w
  2871  0ECE  00E4               	movwf	??_sprintf+5
  2872  0ECF  0863               	movf	??_sprintf+4,w
  2873  0ED0  3E82               	addlw	130
  2874  0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  2875  0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  2876  0ED3  00B0               	movwf	sprintf@eexp^(0+128)
  2877  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0ED6  0864               	movf	??_sprintf+5,w
  2880  0ED7  1803               	skipnc
  2881  0ED8  3E01               	addlw	1
  2882  0ED9  3EFF               	addlw	255
  2883  0EDA  1683               	bsf	3,5	;RP0=1, select bank1
  2884  0EDB  1303               	bcf	3,6	;RP1=0, select bank1
  2885  0EDC  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2886  0EDD                     l2986:
  2887                           
  2888                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2889  0EDD  30FF               	movlw	255
  2890  0EDE  07B0               	addwf	sprintf@eexp^(0+128),f
  2891  0EDF  1803               	skipnc
  2892  0EE0  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2893  0EE1  30FF               	movlw	255
  2894  0EE2  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2895  0EE3                     l2988:
  2896                           
  2897                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 865:     eexp *= 3;
  2898  0EE3  3003               	movlw	3
  2899  0EE4  00F0               	movwf	___wmul@multiplier
  2900  0EE5  3000               	movlw	0
  2901  0EE6  00F1               	movwf	___wmul@multiplier+1
  2902  0EE7  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2903  0EE8  00F3               	movwf	___wmul@multiplicand+1
  2904  0EE9  0830               	movf	sprintf@eexp^(0+128),w
  2905  0EEA  00F2               	movwf	___wmul@multiplicand
  2906  0EEB  160A  158A  2669  120A  158A  	fcall	___wmul
  2907  0EF0  0871               	movf	?___wmul+1,w
  2908  0EF1  1683               	bsf	3,5	;RP0=1, select bank1
  2909  0EF2  1303               	bcf	3,6	;RP1=0, select bank1
  2910  0EF3  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2911  0EF4  0870               	movf	?___wmul,w
  2912  0EF5  00B0               	movwf	sprintf@eexp^(0+128)
  2913  0EF6                     l2990:
  2914                           
  2915                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 866:     eexp /= 10;
  2916  0EF6  300A               	movlw	10
  2917  0EF7  00F7               	movwf	___awdiv@divisor
  2918  0EF8  3000               	movlw	0
  2919  0EF9  00F8               	movwf	___awdiv@divisor+1
  2920  0EFA  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2921  0EFB  00FA               	movwf	___awdiv@dividend+1
  2922  0EFC  0830               	movf	sprintf@eexp^(0+128),w
  2923  0EFD  00F9               	movwf	___awdiv@dividend
  2924  0EFE  160A  118A  2226  120A  158A  	fcall	___awdiv
  2925  0F03  0878               	movf	?___awdiv+1,w
  2926  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  2927  0F05  1303               	bcf	3,6	;RP1=0, select bank1
  2928  0F06  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2929  0F07  0877               	movf	?___awdiv,w
  2930  0F08  00B0               	movwf	sprintf@eexp^(0+128)
  2931  0F09                     l2992:
  2932                           
  2933                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 867:     if(eexp < 0)
  2934  0F09  1FB1               	btfss	(sprintf@eexp+1)^(0+128),7
  2935  0F0A  2F0C               	goto	u4401
  2936  0F0B  2F0D               	goto	u4400
  2937  0F0C                     u4401:
  2938  0F0C  2F13               	goto	l2996
  2939  0F0D                     u4400:
  2940  0F0D                     l2994:
  2941                           
  2942                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2943  0F0D  30FF               	movlw	255
  2944  0F0E  07B0               	addwf	sprintf@eexp^(0+128),f
  2945  0F0F  1803               	skipnc
  2946  0F10  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2947  0F11  30FF               	movlw	255
  2948  0F12  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2949  0F13                     l2996:
  2950                           
  2951                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 872:     tmpval.integ = scale(-e
      +                          exp);
  2952  0F13  0330               	decf	sprintf@eexp^(0+128),w
  2953  0F14  3AFF               	xorlw	255
  2954  0F15  120A  158A  2285  120A  158A  	fcall	_scale
  2955  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  2956  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  2957  0F1C  0838               	movf	?_scale,w
  2958  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  2959  0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  2960  0F1F  00AC               	movwf	sprintf@tmpval^(0+128)
  2961  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  2962  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  2963  0F22  0839               	movf	?_scale+1,w
  2964  0F23  1683               	bsf	3,5	;RP0=1, select bank1
  2965  0F24  1303               	bcf	3,6	;RP1=0, select bank1
  2966  0F25  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2967  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  2968  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  2969  0F28  083A               	movf	?_scale+2,w
  2970  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  2971  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  2972  0F2B  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2973  0F2C                     l2998:
  2974                           
  2975                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 873:     tmpval.integ *= fval;
  2976  0F2C  0833               	movf	sprintf@fval^(0+128),w
  2977  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2978  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2979  0F2F  00A8               	movwf	___ftmul@f1
  2980  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  2981  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  2982  0F32  0834               	movf	(sprintf@fval+1)^(0+128),w
  2983  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  2984  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  2985  0F35  00A9               	movwf	___ftmul@f1+1
  2986  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  2987  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  2988  0F38  0835               	movf	(sprintf@fval+2)^(0+128),w
  2989  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2990  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2991  0F3B  00AA               	movwf	___ftmul@f1+2
  2992  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  2993  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  2994  0F3E  082C               	movf	sprintf@tmpval^(0+128),w
  2995  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2996  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  2997  0F41  00AB               	movwf	___ftmul@f2
  2998  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  2999  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  3000  0F44  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  3001  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  3003  0F47  00AC               	movwf	___ftmul@f2+1
  3004  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  3005  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  3006  0F4A  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  3007  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  3008  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  3009  0F4D  00AD               	movwf	___ftmul@f2+2
  3010  0F4E  120A  118A  200C  120A  158A  	fcall	___ftmul
  3011  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  3012  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  3013  0F55  0828               	movf	?___ftmul,w
  3014  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  3015  0F57  1303               	bcf	3,6	;RP1=0, select bank1
  3016  0F58  00AC               	movwf	sprintf@tmpval^(0+128)
  3017  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  3018  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  3019  0F5B  0829               	movf	?___ftmul+1,w
  3020  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  3021  0F5D  1303               	bcf	3,6	;RP1=0, select bank1
  3022  0F5E  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  3023  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3024  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  3025  0F61  082A               	movf	?___ftmul+2,w
  3026  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  3027  0F63  1303               	bcf	3,6	;RP1=0, select bank1
  3028  0F64  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  3029  0F65                     l3000:
  3030                           
  3031                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 874:     if(tmpval.integ < 1.0)
  3032  0F65  082C               	movf	sprintf@tmpval^(0+128),w
  3033  0F66  00F0               	movwf	___ftge@ff1
  3034  0F67  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  3035  0F68  00F1               	movwf	___ftge@ff1+1
  3036  0F69  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  3037  0F6A  00F2               	movwf	___ftge@ff1+2
  3038  0F6B  3000               	movlw	0
  3039  0F6C  00F3               	movwf	___ftge@ff2
  3040  0F6D  3080               	movlw	128
  3041  0F6E  00F4               	movwf	___ftge@ff2+1
  3042  0F6F  303F               	movlw	63
  3043  0F70  00F5               	movwf	___ftge@ff2+2
  3044  0F71  160A  158A  274A  120A  158A  	fcall	___ftge
  3045  0F76  1803               	btfsc	3,0
  3046  0F77  2F79               	goto	u4411
  3047  0F78  2F7A               	goto	u4410
  3048  0F79                     u4411:
  3049  0F79  2F83               	goto	l3004
  3050  0F7A                     u4410:
  3051  0F7A                     l3002:
  3052                           
  3053                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3054  0F7A  30FF               	movlw	255
  3055  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  3056  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  3057  0F7D  07B0               	addwf	sprintf@eexp^(0+128),f
  3058  0F7E  1803               	skipnc
  3059  0F7F  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  3060  0F80  30FF               	movlw	255
  3061  0F81  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  3062  0F82  2FA2               	goto	l3008
  3063  0F83                     l3004:
  3064  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  3065  0F84  1303               	bcf	3,6	;RP1=0, select bank1
  3066  0F85  082C               	movf	sprintf@tmpval^(0+128),w
  3067  0F86  00F0               	movwf	___ftge@ff1
  3068  0F87  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  3069  0F88  00F1               	movwf	___ftge@ff1+1
  3070  0F89  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  3071  0F8A  00F2               	movwf	___ftge@ff1+2
  3072  0F8B  3000               	movlw	0
  3073  0F8C  00F3               	movwf	___ftge@ff2
  3074  0F8D  3020               	movlw	32
  3075  0F8E  00F4               	movwf	___ftge@ff2+1
  3076  0F8F  3041               	movlw	65
  3077  0F90  00F5               	movwf	___ftge@ff2+2
  3078  0F91  160A  158A  274A  120A  158A  	fcall	___ftge
  3079  0F96  1C03               	btfss	3,0
  3080  0F97  2F99               	goto	u4421
  3081  0F98  2F9A               	goto	u4420
  3082  0F99                     u4421:
  3083  0F99  2FA2               	goto	l3008
  3084  0F9A                     u4420:
  3085  0F9A                     l3006:
  3086                           
  3087                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3088  0F9A  3001               	movlw	1
  3089  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  3090  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  3091  0F9D  07B0               	addwf	sprintf@eexp^(0+128),f
  3092  0F9E  1803               	skipnc
  3093  0F9F  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  3094  0FA0  3000               	movlw	0
  3095  0FA1  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  3096  0FA2                     l3008:
  3097                           
  3098                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1138:      if(prec <= 12)
  3099  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  3100  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  3101  0FA4  0837               	movf	(sprintf@prec+1)^(0+128),w
  3102  0FA5  3A80               	xorlw	128
  3103  0FA6  00FF               	movwf	btemp+1
  3104  0FA7  3080               	movlw	128
  3105  0FA8  027F               	subwf	btemp+1,w
  3106  0FA9  1D03               	skipz
  3107  0FAA  2FAD               	goto	u4435
  3108  0FAB  300D               	movlw	13
  3109  0FAC  0236               	subwf	sprintf@prec^(0+128),w
  3110  0FAD                     u4435:
  3111  0FAD  1803               	skipnc
  3112  0FAE  2FB0               	goto	u4431
  3113  0FAF  2FB1               	goto	u4430
  3114  0FB0                     u4431:
  3115  0FB0  2FEA               	goto	l3012
  3116  0FB1                     u4430:
  3117  0FB1                     l3010:
  3118                           
  3119                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1139:       fval += fround((unsi
      +                          gned int)prec);
  3120  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  3121  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  3122  0FB3  0836               	movf	sprintf@prec^(0+128),w
  3123  0FB4  120A  118A  20F1  120A  158A  	fcall	_fround
  3124  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  3125  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  3126  0FBB  0838               	movf	?_fround,w
  3127  0FBC  00C8               	movwf	___ftadd@f1
  3128  0FBD  0839               	movf	?_fround+1,w
  3129  0FBE  00C9               	movwf	___ftadd@f1+1
  3130  0FBF  083A               	movf	?_fround+2,w
  3131  0FC0  00CA               	movwf	___ftadd@f1+2
  3132  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  3133  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  3134  0FC3  0833               	movf	sprintf@fval^(0+128),w
  3135  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  3136  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  3137  0FC6  00CB               	movwf	___ftadd@f2
  3138  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  3139  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  3140  0FC9  0834               	movf	(sprintf@fval+1)^(0+128),w
  3141  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3142  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3143  0FCC  00CC               	movwf	___ftadd@f2+1
  3144  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  3145  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  3146  0FCF  0835               	movf	(sprintf@fval+2)^(0+128),w
  3147  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3148  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  3149  0FD2  00CD               	movwf	___ftadd@f2+2
  3150  0FD3  120A  158A  214F  120A  158A  	fcall	___ftadd
  3151  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  3152  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  3153  0FDA  0848               	movf	?___ftadd,w
  3154  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3155  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  3156  0FDD  00B3               	movwf	sprintf@fval^(0+128)
  3157  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  3158  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  3159  0FE0  0849               	movf	?___ftadd+1,w
  3160  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  3161  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  3162  0FE3  00B4               	movwf	(sprintf@fval+1)^(0+128)
  3163  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  3164  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  3165  0FE6  084A               	movf	?___ftadd+2,w
  3166  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  3167  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  3168  0FE9  00B5               	movwf	(sprintf@fval+2)^(0+128)
  3169  0FEA                     l3012:
  3170                           
  3171                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1142:     if((eexp > 9)||(fval !
      +                          = 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3172  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  3173  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  3174  0FEC  0831               	movf	(sprintf@eexp+1)^(0+128),w
  3175  0FED  3A80               	xorlw	128
  3176  0FEE  00FF               	movwf	btemp+1
  3177  0FEF  3080               	movlw	128
  3178  0FF0  027F               	subwf	btemp+1,w
  3179  0FF1  1D03               	skipz
  3180  0FF2  2FF5               	goto	u4445
  3181  0FF3  300A               	movlw	10
  3182  0FF4  0230               	subwf	sprintf@eexp^(0+128),w
  3183  0FF5                     u4445:
  3184  0FF5  1803               	skipnc
  3185  0FF6  2FFA               	goto	u4441
  3186  0FF7  120A  118A  2A92   	goto	u4440
  3187  0FFA                     u4441:
  3188  0FFA  120A  118A  2AC9   	goto	l3020
  3189  0FFD                     L3:
  3190  0FFD                     L2:
  3191  0FFD  120A  118A  2FCF   	ljmp	l3168
  3192                           
  3193                           	psect	text6
  3194  0A85                     __ptext6:	
  3195 ;; *************** function _scale *****************
  3196 ;; Defined at:
  3197 ;;		line 433 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;  scl             1    wreg     char 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;  scl             1   32[BANK0 ] char 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  3   24[BANK0 ] char 
  3204 ;; Registers used:
  3205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3211 ;;      Params:         0       3       0       0       0
  3212 ;;      Locals:         0       4       0       0       0
  3213 ;;      Temps:          0       2       0       0       0
  3214 ;;      Totals:         0       9       0       0       0
  3215 ;;Total ram usage:        9 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    2
  3218 ;; This function calls:
  3219 ;;		___awdiv
  3220 ;;		___awmod
  3221 ;;		___bmul
  3222 ;;		___ftmul
  3223 ;; This function is called by:
  3224 ;;		_sprintf
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           
  3229                           ;psect for function _scale
  3230  0A85                     _scale:
  3231                           
  3232                           ;incstack = 0
  3233                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3234                           ;scale@scl stored from wreg
  3235  0A85  1283               	bcf	3,5	;RP0=0, select bank0
  3236  0A86  1303               	bcf	3,6	;RP1=0, select bank0
  3237  0A87  00C0               	movwf	scale@scl
  3238  0A88                     l2476:
  3239                           
  3240                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 433: scale(signed char scl);D:\M
      +                          PLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 434: {;D:\MPLAB XC8 compiler\pic\sour
      +                          ces\c90\common\doprnt.c: 436:  if(scl < 0) {
  3241  0A88  1FC0               	btfss	scale@scl,7
  3242  0A89  2A8B               	goto	u3381
  3243  0A8A  2A8C               	goto	u3380
  3244  0A8B                     u3381:
  3245  0A8B  2BDF               	goto	l2498
  3246  0A8C                     u3380:
  3247  0A8C                     l2478:
  3248                           
  3249                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 437:   scl = -scl;
  3250  0A8C  09C0               	comf	scale@scl,f
  3251  0A8D  0AC0               	incf	scale@scl,f
  3252  0A8E                     l2480:
  3253                           
  3254                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 438:   if(scl>=110)
  3255  0A8E  0840               	movf	scale@scl,w
  3256  0A8F  3A80               	xorlw	128
  3257  0A90  3E12               	addlw	-238
  3258  0A91  1C03               	skipc
  3259  0A92  2A94               	goto	u3391
  3260  0A93  2A95               	goto	u3390
  3261  0A94                     u3391:
  3262  0A94  2B4D               	goto	l2488
  3263  0A95                     u3390:
  3264  0A95                     l2482:
  3265                           
  3266                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsign
      +                          ed char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigned
      +                           char)(scl%10)];
  3267  0A95  3003               	movlw	3
  3268  0A96  00BB               	movwf	??_scale
  3269  0A97  083B               	movf	??_scale,w
  3270  0A98  00A4               	movwf	___bmul@multiplicand
  3271  0A99  0840               	movf	scale@scl,w
  3272  0A9A  00F2               	movwf	___awmod@dividend
  3273  0A9B  01F3               	clrf	___awmod@dividend+1
  3274  0A9C  1BF2               	btfsc	___awmod@dividend,7
  3275  0A9D  03F3               	decf	___awmod@dividend+1,f
  3276  0A9E  3064               	movlw	100
  3277  0A9F  00F0               	movwf	___awmod@divisor
  3278  0AA0  3000               	movlw	0
  3279  0AA1  00F1               	movwf	___awmod@divisor+1
  3280  0AA2  160A  118A  210A  120A  158A  	fcall	___awmod
  3281  0AA7  0871               	movf	?___awmod+1,w
  3282  0AA8  00FA               	movwf	___awdiv@dividend+1
  3283  0AA9  0870               	movf	?___awmod,w
  3284  0AAA  00F9               	movwf	___awdiv@dividend
  3285  0AAB  300A               	movlw	10
  3286  0AAC  00F7               	movwf	___awdiv@divisor
  3287  0AAD  3000               	movlw	0
  3288  0AAE  00F8               	movwf	___awdiv@divisor+1
  3289  0AAF  160A  118A  2226  120A  158A  	fcall	___awdiv
  3290  0AB4  0877               	movf	?___awdiv,w
  3291  0AB5  120A  158A  200C  120A  158A  	fcall	___bmul
  3292  0ABA  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3293  0ABB  0084               	movwf	4
  3294  0ABC  160A  118A  2000  120A  158A  	fcall	stringdir
  3295  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  3296  0AC2  1303               	bcf	3,6	;RP1=0, select bank0
  3297  0AC3  00A8               	movwf	___ftmul@f1
  3298  0AC4  160A  118A  2000  120A  158A  	fcall	stringdir
  3299  0AC9  00A9               	movwf	___ftmul@f1+1
  3300  0ACA  160A  118A  2000  120A  158A  	fcall	stringdir
  3301  0ACF  00AA               	movwf	___ftmul@f1+2
  3302  0AD0  3003               	movlw	3
  3303  0AD1  00BC               	movwf	??_scale+1
  3304  0AD2  083C               	movf	??_scale+1,w
  3305  0AD3  00A4               	movwf	___bmul@multiplicand
  3306  0AD4  0840               	movf	scale@scl,w
  3307  0AD5  00F9               	movwf	___awdiv@dividend
  3308  0AD6  01FA               	clrf	___awdiv@dividend+1
  3309  0AD7  1BF9               	btfsc	___awdiv@dividend,7
  3310  0AD8  03FA               	decf	___awdiv@dividend+1,f
  3311  0AD9  3064               	movlw	100
  3312  0ADA  00F7               	movwf	___awdiv@divisor
  3313  0ADB  3000               	movlw	0
  3314  0ADC  00F8               	movwf	___awdiv@divisor+1
  3315  0ADD  160A  118A  2226  120A  158A  	fcall	___awdiv
  3316  0AE2  0877               	movf	?___awdiv,w
  3317  0AE3  120A  158A  200C  120A  158A  	fcall	___bmul
  3318  0AE8  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3319  0AE9  0084               	movwf	4
  3320  0AEA  160A  118A  2000  120A  158A  	fcall	stringdir
  3321  0AEF  1283               	bcf	3,5	;RP0=0, select bank0
  3322  0AF0  1303               	bcf	3,6	;RP1=0, select bank0
  3323  0AF1  00AB               	movwf	___ftmul@f2
  3324  0AF2  160A  118A  2000  120A  158A  	fcall	stringdir
  3325  0AF7  00AC               	movwf	___ftmul@f2+1
  3326  0AF8  160A  118A  2000  120A  158A  	fcall	stringdir
  3327  0AFD  00AD               	movwf	___ftmul@f2+2
  3328  0AFE  120A  118A  200C  120A  158A  	fcall	___ftmul
  3329  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  3330  0B04  1303               	bcf	3,6	;RP1=0, select bank0
  3331  0B05  0828               	movf	?___ftmul,w
  3332  0B06  00BD               	movwf	_scale$1038
  3333  0B07  0829               	movf	?___ftmul+1,w
  3334  0B08  00BE               	movwf	_scale$1038+1
  3335  0B09  082A               	movf	?___ftmul+2,w
  3336  0B0A  00BF               	movwf	_scale$1038+2
  3337                           
  3338                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsign
      +                          ed char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigned
      +                           char)(scl%10)];
  3339  0B0B  3003               	movlw	3
  3340  0B0C  00BB               	movwf	??_scale
  3341  0B0D  083B               	movf	??_scale,w
  3342  0B0E  00A4               	movwf	___bmul@multiplicand
  3343  0B0F  0840               	movf	scale@scl,w
  3344  0B10  00F2               	movwf	___awmod@dividend
  3345  0B11  01F3               	clrf	___awmod@dividend+1
  3346  0B12  1BF2               	btfsc	___awmod@dividend,7
  3347  0B13  03F3               	decf	___awmod@dividend+1,f
  3348  0B14  300A               	movlw	10
  3349  0B15  00F0               	movwf	___awmod@divisor
  3350  0B16  3000               	movlw	0
  3351  0B17  00F1               	movwf	___awmod@divisor+1
  3352  0B18  160A  118A  210A  120A  158A  	fcall	___awmod
  3353  0B1D  0870               	movf	?___awmod,w
  3354  0B1E  120A  158A  200C  120A  158A  	fcall	___bmul
  3355  0B23  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3356  0B24  0084               	movwf	4
  3357  0B25  160A  118A  2000  120A  158A  	fcall	stringdir
  3358  0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  3359  0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  3360  0B2C  00A8               	movwf	___ftmul@f1
  3361  0B2D  160A  118A  2000  120A  158A  	fcall	stringdir
  3362  0B32  00A9               	movwf	___ftmul@f1+1
  3363  0B33  160A  118A  2000  120A  158A  	fcall	stringdir
  3364  0B38  00AA               	movwf	___ftmul@f1+2
  3365  0B39  083D               	movf	_scale$1038,w
  3366  0B3A  00AB               	movwf	___ftmul@f2
  3367  0B3B  083E               	movf	_scale$1038+1,w
  3368  0B3C  00AC               	movwf	___ftmul@f2+1
  3369  0B3D  083F               	movf	_scale$1038+2,w
  3370  0B3E  00AD               	movwf	___ftmul@f2+2
  3371  0B3F  120A  118A  200C  120A  158A  	fcall	___ftmul
  3372  0B44  1283               	bcf	3,5	;RP0=0, select bank0
  3373  0B45  1303               	bcf	3,6	;RP1=0, select bank0
  3374  0B46  0828               	movf	?___ftmul,w
  3375  0B47  00B8               	movwf	?_scale
  3376  0B48  0829               	movf	?___ftmul+1,w
  3377  0B49  00B9               	movwf	?_scale+1
  3378  0B4A  082A               	movf	?___ftmul+2,w
  3379  0B4B  00BA               	movwf	?_scale+2
  3380  0B4C  2D2F               	goto	l307
  3381  0B4D                     l2488:
  3382  0B4D  0840               	movf	scale@scl,w
  3383  0B4E  3A80               	xorlw	128
  3384  0B4F  3E75               	addlw	-139
  3385  0B50  1C03               	skipc
  3386  0B51  2B53               	goto	u3401
  3387  0B52  2B54               	goto	u3400
  3388  0B53                     u3401:
  3389  0B53  2BBE               	goto	l2494
  3390  0B54                     u3400:
  3391  0B54                     l2490:
  3392                           
  3393                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 441:    return _npowers_[(unsign
      +                          ed char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3394  0B54  3003               	movlw	3
  3395  0B55  00BB               	movwf	??_scale
  3396  0B56  083B               	movf	??_scale,w
  3397  0B57  00A4               	movwf	___bmul@multiplicand
  3398  0B58  0840               	movf	scale@scl,w
  3399  0B59  00F2               	movwf	___awmod@dividend
  3400  0B5A  01F3               	clrf	___awmod@dividend+1
  3401  0B5B  1BF2               	btfsc	___awmod@dividend,7
  3402  0B5C  03F3               	decf	___awmod@dividend+1,f
  3403  0B5D  300A               	movlw	10
  3404  0B5E  00F0               	movwf	___awmod@divisor
  3405  0B5F  3000               	movlw	0
  3406  0B60  00F1               	movwf	___awmod@divisor+1
  3407  0B61  160A  118A  210A  120A  158A  	fcall	___awmod
  3408  0B66  0870               	movf	?___awmod,w
  3409  0B67  120A  158A  200C  120A  158A  	fcall	___bmul
  3410  0B6C  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3411  0B6D  0084               	movwf	4
  3412  0B6E  160A  118A  2000  120A  158A  	fcall	stringdir
  3413  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  3414  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  3415  0B75  00A8               	movwf	___ftmul@f1
  3416  0B76  160A  118A  2000  120A  158A  	fcall	stringdir
  3417  0B7B  00A9               	movwf	___ftmul@f1+1
  3418  0B7C  160A  118A  2000  120A  158A  	fcall	stringdir
  3419  0B81  00AA               	movwf	___ftmul@f1+2
  3420  0B82  3003               	movlw	3
  3421  0B83  00BC               	movwf	??_scale+1
  3422  0B84  083C               	movf	??_scale+1,w
  3423  0B85  00A4               	movwf	___bmul@multiplicand
  3424  0B86  0840               	movf	scale@scl,w
  3425  0B87  00F9               	movwf	___awdiv@dividend
  3426  0B88  01FA               	clrf	___awdiv@dividend+1
  3427  0B89  1BF9               	btfsc	___awdiv@dividend,7
  3428  0B8A  03FA               	decf	___awdiv@dividend+1,f
  3429  0B8B  300A               	movlw	10
  3430  0B8C  00F7               	movwf	___awdiv@divisor
  3431  0B8D  3000               	movlw	0
  3432  0B8E  00F8               	movwf	___awdiv@divisor+1
  3433  0B8F  160A  118A  2226  120A  158A  	fcall	___awdiv
  3434  0B94  0877               	movf	?___awdiv,w
  3435  0B95  120A  158A  200C  120A  158A  	fcall	___bmul
  3436  0B9A  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3437  0B9B  0084               	movwf	4
  3438  0B9C  160A  118A  2000  120A  158A  	fcall	stringdir
  3439  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  3440  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  3441  0BA3  00AB               	movwf	___ftmul@f2
  3442  0BA4  160A  118A  2000  120A  158A  	fcall	stringdir
  3443  0BA9  00AC               	movwf	___ftmul@f2+1
  3444  0BAA  160A  118A  2000  120A  158A  	fcall	stringdir
  3445  0BAF  00AD               	movwf	___ftmul@f2+2
  3446  0BB0  120A  118A  200C  120A  158A  	fcall	___ftmul
  3447  0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  3448  0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  3449  0BB7  0828               	movf	?___ftmul,w
  3450  0BB8  00B8               	movwf	?_scale
  3451  0BB9  0829               	movf	?___ftmul+1,w
  3452  0BBA  00B9               	movwf	?_scale+1
  3453  0BBB  082A               	movf	?___ftmul+2,w
  3454  0BBC  00BA               	movwf	?_scale+2
  3455  0BBD  2D2F               	goto	l307
  3456  0BBE                     l2494:
  3457                           
  3458                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 442:   return _npowers_[(unsigne
      +                          d char)scl];
  3459  0BBE  3003               	movlw	3
  3460  0BBF  00BB               	movwf	??_scale
  3461  0BC0  083B               	movf	??_scale,w
  3462  0BC1  00A4               	movwf	___bmul@multiplicand
  3463  0BC2  0840               	movf	scale@scl,w
  3464  0BC3  120A  158A  200C  120A  158A  	fcall	___bmul
  3465  0BC8  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3466  0BC9  0084               	movwf	4
  3467  0BCA  160A  118A  2000  120A  158A  	fcall	stringdir
  3468  0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  3469  0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  3470  0BD1  00B8               	movwf	?_scale
  3471  0BD2  160A  118A  2000  120A  158A  	fcall	stringdir
  3472  0BD7  00B9               	movwf	?_scale+1
  3473  0BD8  160A  118A  2000  120A  158A  	fcall	stringdir
  3474  0BDD  00BA               	movwf	?_scale+2
  3475  0BDE  2D2F               	goto	l307
  3476  0BDF                     l2498:
  3477                           
  3478                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110)
  3479  0BDF  0840               	movf	scale@scl,w
  3480  0BE0  3A80               	xorlw	128
  3481  0BE1  3E12               	addlw	-238
  3482  0BE2  1C03               	skipc
  3483  0BE3  2BE5               	goto	u3411
  3484  0BE4  2BE6               	goto	u3410
  3485  0BE5                     u3411:
  3486  0BE5  2C9E               	goto	l2506
  3487  0BE6                     u3410:
  3488  0BE6                     l2500:
  3489                           
  3490                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigned
      +                           char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned cha
      +                          r)(scl%10)];
  3491  0BE6  3003               	movlw	3
  3492  0BE7  00BB               	movwf	??_scale
  3493  0BE8  083B               	movf	??_scale,w
  3494  0BE9  00A4               	movwf	___bmul@multiplicand
  3495  0BEA  0840               	movf	scale@scl,w
  3496  0BEB  00F2               	movwf	___awmod@dividend
  3497  0BEC  01F3               	clrf	___awmod@dividend+1
  3498  0BED  1BF2               	btfsc	___awmod@dividend,7
  3499  0BEE  03F3               	decf	___awmod@dividend+1,f
  3500  0BEF  3064               	movlw	100
  3501  0BF0  00F0               	movwf	___awmod@divisor
  3502  0BF1  3000               	movlw	0
  3503  0BF2  00F1               	movwf	___awmod@divisor+1
  3504  0BF3  160A  118A  210A  120A  158A  	fcall	___awmod
  3505  0BF8  0871               	movf	?___awmod+1,w
  3506  0BF9  00FA               	movwf	___awdiv@dividend+1
  3507  0BFA  0870               	movf	?___awmod,w
  3508  0BFB  00F9               	movwf	___awdiv@dividend
  3509  0BFC  300A               	movlw	10
  3510  0BFD  00F7               	movwf	___awdiv@divisor
  3511  0BFE  3000               	movlw	0
  3512  0BFF  00F8               	movwf	___awdiv@divisor+1
  3513  0C00  160A  118A  2226  120A  158A  	fcall	___awdiv
  3514  0C05  0877               	movf	?___awdiv,w
  3515  0C06  120A  158A  200C  120A  158A  	fcall	___bmul
  3516  0C0B  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3517  0C0C  0084               	movwf	4
  3518  0C0D  160A  118A  2000  120A  158A  	fcall	stringdir
  3519  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  3520  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  3521  0C14  00A8               	movwf	___ftmul@f1
  3522  0C15  160A  118A  2000  120A  158A  	fcall	stringdir
  3523  0C1A  00A9               	movwf	___ftmul@f1+1
  3524  0C1B  160A  118A  2000  120A  158A  	fcall	stringdir
  3525  0C20  00AA               	movwf	___ftmul@f1+2
  3526  0C21  3003               	movlw	3
  3527  0C22  00BC               	movwf	??_scale+1
  3528  0C23  083C               	movf	??_scale+1,w
  3529  0C24  00A4               	movwf	___bmul@multiplicand
  3530  0C25  0840               	movf	scale@scl,w
  3531  0C26  00F9               	movwf	___awdiv@dividend
  3532  0C27  01FA               	clrf	___awdiv@dividend+1
  3533  0C28  1BF9               	btfsc	___awdiv@dividend,7
  3534  0C29  03FA               	decf	___awdiv@dividend+1,f
  3535  0C2A  3064               	movlw	100
  3536  0C2B  00F7               	movwf	___awdiv@divisor
  3537  0C2C  3000               	movlw	0
  3538  0C2D  00F8               	movwf	___awdiv@divisor+1
  3539  0C2E  160A  118A  2226  120A  158A  	fcall	___awdiv
  3540  0C33  0877               	movf	?___awdiv,w
  3541  0C34  120A  158A  200C  120A  158A  	fcall	___bmul
  3542  0C39  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  3543  0C3A  0084               	movwf	4
  3544  0C3B  160A  118A  2000  120A  158A  	fcall	stringdir
  3545  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0C41  1303               	bcf	3,6	;RP1=0, select bank0
  3547  0C42  00AB               	movwf	___ftmul@f2
  3548  0C43  160A  118A  2000  120A  158A  	fcall	stringdir
  3549  0C48  00AC               	movwf	___ftmul@f2+1
  3550  0C49  160A  118A  2000  120A  158A  	fcall	stringdir
  3551  0C4E  00AD               	movwf	___ftmul@f2+2
  3552  0C4F  120A  118A  200C  120A  158A  	fcall	___ftmul
  3553  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  3554  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  3555  0C56  0828               	movf	?___ftmul,w
  3556  0C57  00BD               	movwf	_scale$1038
  3557  0C58  0829               	movf	?___ftmul+1,w
  3558  0C59  00BE               	movwf	_scale$1038+1
  3559  0C5A  082A               	movf	?___ftmul+2,w
  3560  0C5B  00BF               	movwf	_scale$1038+2
  3561                           
  3562                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigned
      +                           char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned cha
      +                          r)(scl%10)];
  3563  0C5C  3003               	movlw	3
  3564  0C5D  00BB               	movwf	??_scale
  3565  0C5E  083B               	movf	??_scale,w
  3566  0C5F  00A4               	movwf	___bmul@multiplicand
  3567  0C60  0840               	movf	scale@scl,w
  3568  0C61  00F2               	movwf	___awmod@dividend
  3569  0C62  01F3               	clrf	___awmod@dividend+1
  3570  0C63  1BF2               	btfsc	___awmod@dividend,7
  3571  0C64  03F3               	decf	___awmod@dividend+1,f
  3572  0C65  300A               	movlw	10
  3573  0C66  00F0               	movwf	___awmod@divisor
  3574  0C67  3000               	movlw	0
  3575  0C68  00F1               	movwf	___awmod@divisor+1
  3576  0C69  160A  118A  210A  120A  158A  	fcall	___awmod
  3577  0C6E  0870               	movf	?___awmod,w
  3578  0C6F  120A  158A  200C  120A  158A  	fcall	___bmul
  3579  0C74  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3580  0C75  0084               	movwf	4
  3581  0C76  160A  118A  2000  120A  158A  	fcall	stringdir
  3582  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  3583  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  3584  0C7D  00A8               	movwf	___ftmul@f1
  3585  0C7E  160A  118A  2000  120A  158A  	fcall	stringdir
  3586  0C83  00A9               	movwf	___ftmul@f1+1
  3587  0C84  160A  118A  2000  120A  158A  	fcall	stringdir
  3588  0C89  00AA               	movwf	___ftmul@f1+2
  3589  0C8A  083D               	movf	_scale$1038,w
  3590  0C8B  00AB               	movwf	___ftmul@f2
  3591  0C8C  083E               	movf	_scale$1038+1,w
  3592  0C8D  00AC               	movwf	___ftmul@f2+1
  3593  0C8E  083F               	movf	_scale$1038+2,w
  3594  0C8F  00AD               	movwf	___ftmul@f2+2
  3595  0C90  120A  118A  200C  120A  158A  	fcall	___ftmul
  3596  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  3597  0C96  1303               	bcf	3,6	;RP1=0, select bank0
  3598  0C97  0828               	movf	?___ftmul,w
  3599  0C98  00B8               	movwf	?_scale
  3600  0C99  0829               	movf	?___ftmul+1,w
  3601  0C9A  00B9               	movwf	?_scale+1
  3602  0C9B  082A               	movf	?___ftmul+2,w
  3603  0C9C  00BA               	movwf	?_scale+2
  3604  0C9D  2D2F               	goto	l307
  3605  0C9E                     l2506:
  3606  0C9E  0840               	movf	scale@scl,w
  3607  0C9F  3A80               	xorlw	128
  3608  0CA0  3E75               	addlw	-139
  3609  0CA1  1C03               	skipc
  3610  0CA2  2CA4               	goto	u3421
  3611  0CA3  2CA5               	goto	u3420
  3612  0CA4                     u3421:
  3613  0CA4  2D0F               	goto	l2512
  3614  0CA5                     u3420:
  3615  0CA5                     l2508:
  3616                           
  3617                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 447:   return _powers_[(unsigned
      +                           char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3618  0CA5  3003               	movlw	3
  3619  0CA6  00BB               	movwf	??_scale
  3620  0CA7  083B               	movf	??_scale,w
  3621  0CA8  00A4               	movwf	___bmul@multiplicand
  3622  0CA9  0840               	movf	scale@scl,w
  3623  0CAA  00F2               	movwf	___awmod@dividend
  3624  0CAB  01F3               	clrf	___awmod@dividend+1
  3625  0CAC  1BF2               	btfsc	___awmod@dividend,7
  3626  0CAD  03F3               	decf	___awmod@dividend+1,f
  3627  0CAE  300A               	movlw	10
  3628  0CAF  00F0               	movwf	___awmod@divisor
  3629  0CB0  3000               	movlw	0
  3630  0CB1  00F1               	movwf	___awmod@divisor+1
  3631  0CB2  160A  118A  210A  120A  158A  	fcall	___awmod
  3632  0CB7  0870               	movf	?___awmod,w
  3633  0CB8  120A  158A  200C  120A  158A  	fcall	___bmul
  3634  0CBD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3635  0CBE  0084               	movwf	4
  3636  0CBF  160A  118A  2000  120A  158A  	fcall	stringdir
  3637  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  3639  0CC6  00A8               	movwf	___ftmul@f1
  3640  0CC7  160A  118A  2000  120A  158A  	fcall	stringdir
  3641  0CCC  00A9               	movwf	___ftmul@f1+1
  3642  0CCD  160A  118A  2000  120A  158A  	fcall	stringdir
  3643  0CD2  00AA               	movwf	___ftmul@f1+2
  3644  0CD3  3003               	movlw	3
  3645  0CD4  00BC               	movwf	??_scale+1
  3646  0CD5  083C               	movf	??_scale+1,w
  3647  0CD6  00A4               	movwf	___bmul@multiplicand
  3648  0CD7  0840               	movf	scale@scl,w
  3649  0CD8  00F9               	movwf	___awdiv@dividend
  3650  0CD9  01FA               	clrf	___awdiv@dividend+1
  3651  0CDA  1BF9               	btfsc	___awdiv@dividend,7
  3652  0CDB  03FA               	decf	___awdiv@dividend+1,f
  3653  0CDC  300A               	movlw	10
  3654  0CDD  00F7               	movwf	___awdiv@divisor
  3655  0CDE  3000               	movlw	0
  3656  0CDF  00F8               	movwf	___awdiv@divisor+1
  3657  0CE0  160A  118A  2226  120A  158A  	fcall	___awdiv
  3658  0CE5  0877               	movf	?___awdiv,w
  3659  0CE6  120A  158A  200C  120A  158A  	fcall	___bmul
  3660  0CEB  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3661  0CEC  0084               	movwf	4
  3662  0CED  160A  118A  2000  120A  158A  	fcall	stringdir
  3663  0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  3664  0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  3665  0CF4  00AB               	movwf	___ftmul@f2
  3666  0CF5  160A  118A  2000  120A  158A  	fcall	stringdir
  3667  0CFA  00AC               	movwf	___ftmul@f2+1
  3668  0CFB  160A  118A  2000  120A  158A  	fcall	stringdir
  3669  0D00  00AD               	movwf	___ftmul@f2+2
  3670  0D01  120A  118A  200C  120A  158A  	fcall	___ftmul
  3671  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3672  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3673  0D08  0828               	movf	?___ftmul,w
  3674  0D09  00B8               	movwf	?_scale
  3675  0D0A  0829               	movf	?___ftmul+1,w
  3676  0D0B  00B9               	movwf	?_scale+1
  3677  0D0C  082A               	movf	?___ftmul+2,w
  3678  0D0D  00BA               	movwf	?_scale+2
  3679  0D0E  2D2F               	goto	l307
  3680  0D0F                     l2512:
  3681                           
  3682                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 448:  return _powers_[(unsigned 
      +                          char)scl];
  3683  0D0F  3003               	movlw	3
  3684  0D10  00BB               	movwf	??_scale
  3685  0D11  083B               	movf	??_scale,w
  3686  0D12  00A4               	movwf	___bmul@multiplicand
  3687  0D13  0840               	movf	scale@scl,w
  3688  0D14  120A  158A  200C  120A  158A  	fcall	___bmul
  3689  0D19  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3690  0D1A  0084               	movwf	4
  3691  0D1B  160A  118A  2000  120A  158A  	fcall	stringdir
  3692  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  3693  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  3694  0D22  00B8               	movwf	?_scale
  3695  0D23  160A  118A  2000  120A  158A  	fcall	stringdir
  3696  0D28  00B9               	movwf	?_scale+1
  3697  0D29  160A  118A  2000  120A  158A  	fcall	stringdir
  3698  0D2E  00BA               	movwf	?_scale+2
  3699  0D2F                     l307:
  3700  0D2F  0008               	return
  3701  0D30                     __end_of_scale:
  3702                           
  3703                           	psect	text7
  3704  110A                     __ptext7:	
  3705 ;; *************** function ___awmod *****************
  3706 ;; Defined at:
  3707 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\awmod.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  divisor         2    0[COMMON] int 
  3710 ;;  dividend        2    2[COMMON] int 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  sign            1    6[COMMON] unsigned char 
  3713 ;;  counter         1    5[COMMON] unsigned char 
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  2    0[COMMON] int 
  3716 ;; Registers used:
  3717 ;;		wreg, status,2, status,0
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3723 ;;      Params:         4       0       0       0       0
  3724 ;;      Locals:         2       0       0       0       0
  3725 ;;      Temps:          1       0       0       0       0
  3726 ;;      Totals:         7       0       0       0       0
  3727 ;;Total ram usage:        7 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_scale
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           
  3737                           ;psect for function ___awmod
  3738  110A                     ___awmod:
  3739  110A                     l2218:	
  3740                           ;incstack = 0
  3741                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3742                           
  3743  110A  01F6               	clrf	___awmod@sign
  3744  110B                     l2220:
  3745  110B  1FF3               	btfss	___awmod@dividend+1,7
  3746  110C  290E               	goto	u2671
  3747  110D  290F               	goto	u2670
  3748  110E                     u2671:
  3749  110E  2916               	goto	l2226
  3750  110F                     u2670:
  3751  110F                     l2222:
  3752  110F  09F2               	comf	___awmod@dividend,f
  3753  1110  09F3               	comf	___awmod@dividend+1,f
  3754  1111  0AF2               	incf	___awmod@dividend,f
  3755  1112  1903               	skipnz
  3756  1113  0AF3               	incf	___awmod@dividend+1,f
  3757  1114                     l2224:
  3758  1114  01F6               	clrf	___awmod@sign
  3759  1115  0AF6               	incf	___awmod@sign,f
  3760  1116                     l2226:
  3761  1116  1FF1               	btfss	___awmod@divisor+1,7
  3762  1117  2919               	goto	u2681
  3763  1118  291A               	goto	u2680
  3764  1119                     u2681:
  3765  1119  291F               	goto	l2230
  3766  111A                     u2680:
  3767  111A                     l2228:
  3768  111A  09F0               	comf	___awmod@divisor,f
  3769  111B  09F1               	comf	___awmod@divisor+1,f
  3770  111C  0AF0               	incf	___awmod@divisor,f
  3771  111D  1903               	skipnz
  3772  111E  0AF1               	incf	___awmod@divisor+1,f
  3773  111F                     l2230:
  3774  111F  0870               	movf	___awmod@divisor,w
  3775  1120  0471               	iorwf	___awmod@divisor+1,w
  3776  1121  1903               	btfsc	3,2
  3777  1122  2924               	goto	u2691
  3778  1123  2925               	goto	u2690
  3779  1124                     u2691:
  3780  1124  2954               	goto	l2248
  3781  1125                     u2690:
  3782  1125                     l2232:
  3783  1125  01F5               	clrf	___awmod@counter
  3784  1126  0AF5               	incf	___awmod@counter,f
  3785  1127  2933               	goto	l2238
  3786  1128                     l2234:
  3787  1128  3001               	movlw	1
  3788  1129                     u2705:
  3789  1129  1003               	clrc
  3790  112A  0DF0               	rlf	___awmod@divisor,f
  3791  112B  0DF1               	rlf	___awmod@divisor+1,f
  3792  112C  3EFF               	addlw	-1
  3793  112D  1D03               	skipz
  3794  112E  2929               	goto	u2705
  3795  112F                     l2236:
  3796  112F  3001               	movlw	1
  3797  1130  00F4               	movwf	??___awmod
  3798  1131  0874               	movf	??___awmod,w
  3799  1132  07F5               	addwf	___awmod@counter,f
  3800  1133                     l2238:
  3801  1133  1FF1               	btfss	___awmod@divisor+1,7
  3802  1134  2936               	goto	u2711
  3803  1135  2937               	goto	u2710
  3804  1136                     u2711:
  3805  1136  2928               	goto	l2234
  3806  1137                     u2710:
  3807  1137                     l2240:
  3808  1137  0871               	movf	___awmod@divisor+1,w
  3809  1138  0273               	subwf	___awmod@dividend+1,w
  3810  1139  1D03               	skipz
  3811  113A  293D               	goto	u2725
  3812  113B  0870               	movf	___awmod@divisor,w
  3813  113C  0272               	subwf	___awmod@dividend,w
  3814  113D                     u2725:
  3815  113D  1C03               	skipc
  3816  113E  2940               	goto	u2721
  3817  113F  2941               	goto	u2720
  3818  1140                     u2721:
  3819  1140  2947               	goto	l2244
  3820  1141                     u2720:
  3821  1141                     l2242:
  3822  1141  0870               	movf	___awmod@divisor,w
  3823  1142  02F2               	subwf	___awmod@dividend,f
  3824  1143  0871               	movf	___awmod@divisor+1,w
  3825  1144  1C03               	skipc
  3826  1145  03F3               	decf	___awmod@dividend+1,f
  3827  1146  02F3               	subwf	___awmod@dividend+1,f
  3828  1147                     l2244:
  3829  1147  3001               	movlw	1
  3830  1148                     u2735:
  3831  1148  1003               	clrc
  3832  1149  0CF1               	rrf	___awmod@divisor+1,f
  3833  114A  0CF0               	rrf	___awmod@divisor,f
  3834  114B  3EFF               	addlw	-1
  3835  114C  1D03               	skipz
  3836  114D  2948               	goto	u2735
  3837  114E                     l2246:
  3838  114E  3001               	movlw	1
  3839  114F  02F5               	subwf	___awmod@counter,f
  3840  1150  1D03               	btfss	3,2
  3841  1151  2953               	goto	u2741
  3842  1152  2954               	goto	u2740
  3843  1153                     u2741:
  3844  1153  2937               	goto	l2240
  3845  1154                     u2740:
  3846  1154                     l2248:
  3847  1154  0876               	movf	___awmod@sign,w
  3848  1155  1903               	btfsc	3,2
  3849  1156  2958               	goto	u2751
  3850  1157  2959               	goto	u2750
  3851  1158                     u2751:
  3852  1158  295E               	goto	l2252
  3853  1159                     u2750:
  3854  1159                     l2250:
  3855  1159  09F2               	comf	___awmod@dividend,f
  3856  115A  09F3               	comf	___awmod@dividend+1,f
  3857  115B  0AF2               	incf	___awmod@dividend,f
  3858  115C  1903               	skipnz
  3859  115D  0AF3               	incf	___awmod@dividend+1,f
  3860  115E                     l2252:
  3861  115E  0873               	movf	___awmod@dividend+1,w
  3862  115F  00F1               	movwf	?___awmod+1
  3863  1160  0872               	movf	___awmod@dividend,w
  3864  1161  00F0               	movwf	?___awmod
  3865  1162                     l590:
  3866  1162  0008               	return
  3867  1163                     __end_of___awmod:
  3868                           
  3869                           	psect	text8
  3870  1226                     __ptext8:	
  3871 ;; *************** function ___awdiv *****************
  3872 ;; Defined at:
  3873 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\awdiv.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  divisor         2    7[COMMON] int 
  3876 ;;  dividend        2    9[COMMON] int 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  quotient        2    2[BANK0 ] int 
  3879 ;;  sign            1    1[BANK0 ] unsigned char 
  3880 ;;  counter         1    0[BANK0 ] unsigned char 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  2    7[COMMON] int 
  3883 ;; Registers used:
  3884 ;;		wreg, status,2, status,0
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3890 ;;      Params:         4       0       0       0       0
  3891 ;;      Locals:         0       4       0       0       0
  3892 ;;      Temps:          1       0       0       0       0
  3893 ;;      Totals:         5       4       0       0       0
  3894 ;;Total ram usage:        9 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; This function calls:
  3897 ;;		Nothing
  3898 ;; This function is called by:
  3899 ;;		_scale
  3900 ;;		_sprintf
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           
  3905                           ;psect for function ___awdiv
  3906  1226                     ___awdiv:
  3907  1226                     l2174:	
  3908                           ;incstack = 0
  3909                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3910                           
  3911  1226  1283               	bcf	3,5	;RP0=0, select bank0
  3912  1227  1303               	bcf	3,6	;RP1=0, select bank0
  3913  1228  01A1               	clrf	___awdiv@sign
  3914  1229                     l2176:
  3915  1229  1FF8               	btfss	___awdiv@divisor+1,7
  3916  122A  2A2C               	goto	u2571
  3917  122B  2A2D               	goto	u2570
  3918  122C                     u2571:
  3919  122C  2A34               	goto	l2182
  3920  122D                     u2570:
  3921  122D                     l2178:
  3922  122D  09F7               	comf	___awdiv@divisor,f
  3923  122E  09F8               	comf	___awdiv@divisor+1,f
  3924  122F  0AF7               	incf	___awdiv@divisor,f
  3925  1230  1903               	skipnz
  3926  1231  0AF8               	incf	___awdiv@divisor+1,f
  3927  1232                     l2180:
  3928  1232  01A1               	clrf	___awdiv@sign
  3929  1233  0AA1               	incf	___awdiv@sign,f
  3930  1234                     l2182:
  3931  1234  1FFA               	btfss	___awdiv@dividend+1,7
  3932  1235  2A37               	goto	u2581
  3933  1236  2A38               	goto	u2580
  3934  1237                     u2581:
  3935  1237  2A41               	goto	l2188
  3936  1238                     u2580:
  3937  1238                     l2184:
  3938  1238  09F9               	comf	___awdiv@dividend,f
  3939  1239  09FA               	comf	___awdiv@dividend+1,f
  3940  123A  0AF9               	incf	___awdiv@dividend,f
  3941  123B  1903               	skipnz
  3942  123C  0AFA               	incf	___awdiv@dividend+1,f
  3943  123D                     l2186:
  3944  123D  3001               	movlw	1
  3945  123E  00FB               	movwf	??___awdiv
  3946  123F  087B               	movf	??___awdiv,w
  3947  1240  06A1               	xorwf	___awdiv@sign,f
  3948  1241                     l2188:
  3949  1241  01A2               	clrf	___awdiv@quotient
  3950  1242  01A3               	clrf	___awdiv@quotient+1
  3951  1243                     l2190:
  3952  1243  0877               	movf	___awdiv@divisor,w
  3953  1244  0478               	iorwf	___awdiv@divisor+1,w
  3954  1245  1903               	btfsc	3,2
  3955  1246  2A48               	goto	u2591
  3956  1247  2A49               	goto	u2590
  3957  1248                     u2591:
  3958  1248  2A80               	goto	l2210
  3959  1249                     u2590:
  3960  1249                     l2192:
  3961  1249  01A0               	clrf	___awdiv@counter
  3962  124A  0AA0               	incf	___awdiv@counter,f
  3963  124B  2A57               	goto	l2198
  3964  124C                     l2194:
  3965  124C  3001               	movlw	1
  3966  124D                     u2605:
  3967  124D  1003               	clrc
  3968  124E  0DF7               	rlf	___awdiv@divisor,f
  3969  124F  0DF8               	rlf	___awdiv@divisor+1,f
  3970  1250  3EFF               	addlw	-1
  3971  1251  1D03               	skipz
  3972  1252  2A4D               	goto	u2605
  3973  1253                     l2196:
  3974  1253  3001               	movlw	1
  3975  1254  00FB               	movwf	??___awdiv
  3976  1255  087B               	movf	??___awdiv,w
  3977  1256  07A0               	addwf	___awdiv@counter,f
  3978  1257                     l2198:
  3979  1257  1FF8               	btfss	___awdiv@divisor+1,7
  3980  1258  2A5A               	goto	u2611
  3981  1259  2A5B               	goto	u2610
  3982  125A                     u2611:
  3983  125A  2A4C               	goto	l2194
  3984  125B                     u2610:
  3985  125B                     l2200:
  3986  125B  3001               	movlw	1
  3987  125C                     u2625:
  3988  125C  1003               	clrc
  3989  125D  0DA2               	rlf	___awdiv@quotient,f
  3990  125E  0DA3               	rlf	___awdiv@quotient+1,f
  3991  125F  3EFF               	addlw	-1
  3992  1260  1D03               	skipz
  3993  1261  2A5C               	goto	u2625
  3994  1262  0878               	movf	___awdiv@divisor+1,w
  3995  1263  027A               	subwf	___awdiv@dividend+1,w
  3996  1264  1D03               	skipz
  3997  1265  2A68               	goto	u2635
  3998  1266  0877               	movf	___awdiv@divisor,w
  3999  1267  0279               	subwf	___awdiv@dividend,w
  4000  1268                     u2635:
  4001  1268  1C03               	skipc
  4002  1269  2A6B               	goto	u2631
  4003  126A  2A6C               	goto	u2630
  4004  126B                     u2631:
  4005  126B  2A73               	goto	l2206
  4006  126C                     u2630:
  4007  126C                     l2202:
  4008  126C  0877               	movf	___awdiv@divisor,w
  4009  126D  02F9               	subwf	___awdiv@dividend,f
  4010  126E  0878               	movf	___awdiv@divisor+1,w
  4011  126F  1C03               	skipc
  4012  1270  03FA               	decf	___awdiv@dividend+1,f
  4013  1271  02FA               	subwf	___awdiv@dividend+1,f
  4014  1272                     l2204:
  4015  1272  1422               	bsf	___awdiv@quotient,0
  4016  1273                     l2206:
  4017  1273  3001               	movlw	1
  4018  1274                     u2645:
  4019  1274  1003               	clrc
  4020  1275  0CF8               	rrf	___awdiv@divisor+1,f
  4021  1276  0CF7               	rrf	___awdiv@divisor,f
  4022  1277  3EFF               	addlw	-1
  4023  1278  1D03               	skipz
  4024  1279  2A74               	goto	u2645
  4025  127A                     l2208:
  4026  127A  3001               	movlw	1
  4027  127B  02A0               	subwf	___awdiv@counter,f
  4028  127C  1D03               	btfss	3,2
  4029  127D  2A7F               	goto	u2651
  4030  127E  2A80               	goto	u2650
  4031  127F                     u2651:
  4032  127F  2A5B               	goto	l2200
  4033  1280                     u2650:
  4034  1280                     l2210:
  4035  1280  0821               	movf	___awdiv@sign,w
  4036  1281  1903               	btfsc	3,2
  4037  1282  2A84               	goto	u2661
  4038  1283  2A85               	goto	u2660
  4039  1284                     u2661:
  4040  1284  2A8A               	goto	l2214
  4041  1285                     u2660:
  4042  1285                     l2212:
  4043  1285  09A2               	comf	___awdiv@quotient,f
  4044  1286  09A3               	comf	___awdiv@quotient+1,f
  4045  1287  0AA2               	incf	___awdiv@quotient,f
  4046  1288  1903               	skipnz
  4047  1289  0AA3               	incf	___awdiv@quotient+1,f
  4048  128A                     l2214:
  4049  128A  0823               	movf	___awdiv@quotient+1,w
  4050  128B  00F8               	movwf	?___awdiv+1
  4051  128C  0822               	movf	___awdiv@quotient,w
  4052  128D  00F7               	movwf	?___awdiv
  4053  128E                     l577:
  4054  128E  0008               	return
  4055  128F                     __end_of___awdiv:
  4056                           
  4057                           	psect	text9
  4058  1E0D                     __ptext9:	
  4059 ;; *************** function _isdigit *****************
  4060 ;; Defined at:
  4061 ;;		line 8 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\isdigit.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  c               1    wreg     unsigned char 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;  c               1    1[COMMON] unsigned char 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;		None               void
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4075 ;;      Params:         0       0       0       0       0
  4076 ;;      Locals:         2       0       0       0       0
  4077 ;;      Temps:          0       0       0       0       0
  4078 ;;      Totals:         2       0       0       0       0
  4079 ;;Total ram usage:        2 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; This function calls:
  4082 ;;		Nothing
  4083 ;; This function is called by:
  4084 ;;		_sprintf
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           
  4089                           ;psect for function _isdigit
  4090  1E0D                     _isdigit:
  4091                           
  4092                           ;incstack = 0
  4093                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4094                           ;isdigit@c stored from wreg
  4095  1E0D  00F1               	movwf	isdigit@c
  4096  1E0E                     l2516:
  4097  1E0E  01F0               	clrf	_isdigit$829
  4098  1E0F                     l2518:
  4099  1E0F  303A               	movlw	58
  4100  1E10  0271               	subwf	isdigit@c,w
  4101  1E11  1803               	skipnc
  4102  1E12  2E14               	goto	u3431
  4103  1E13  2E15               	goto	u3430
  4104  1E14                     u3431:
  4105  1E14  2E1D               	goto	l2524
  4106  1E15                     u3430:
  4107  1E15                     l2520:
  4108  1E15  3030               	movlw	48
  4109  1E16  0271               	subwf	isdigit@c,w
  4110  1E17  1C03               	skipc
  4111  1E18  2E1A               	goto	u3441
  4112  1E19  2E1B               	goto	u3440
  4113  1E1A                     u3441:
  4114  1E1A  2E1D               	goto	l2524
  4115  1E1B                     u3440:
  4116  1E1B                     l2522:
  4117  1E1B  01F0               	clrf	_isdigit$829
  4118  1E1C  0AF0               	incf	_isdigit$829,f
  4119  1E1D                     l2524:
  4120  1E1D  0C70               	rrf	_isdigit$829,w
  4121  1E1E                     l856:
  4122  1E1E  0008               	return
  4123  1E1F                     __end_of_isdigit:
  4124                           
  4125                           	psect	text10
  4126  00F1                     __ptext10:	
  4127 ;; *************** function _fround *****************
  4128 ;; Defined at:
  4129 ;;		line 417 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  prec            1    wreg     unsigned char 
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  prec            1   39[BANK0 ] unsigned char 
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  3   24[BANK0 ] unsigned char 
  4136 ;; Registers used:
  4137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4143 ;;      Params:         0       3       0       0       0
  4144 ;;      Locals:         0       7       0       0       0
  4145 ;;      Temps:          0       6       0       0       0
  4146 ;;      Totals:         0      16       0       0       0
  4147 ;;Total ram usage:       16 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    2
  4150 ;; This function calls:
  4151 ;;		___bmul
  4152 ;;		___ftmul
  4153 ;;		___lwdiv
  4154 ;;		___lwmod
  4155 ;; This function is called by:
  4156 ;;		_sprintf
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           
  4161                           ;psect for function _fround
  4162  00F1                     _fround:
  4163                           
  4164                           ;incstack = 0
  4165                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4166                           ;fround@prec stored from wreg
  4167  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  4168  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  4169  00F3  00C7               	movwf	fround@prec
  4170  00F4                     l2454:
  4171                           
  4172                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 417: fround(unsigned char prec);
      +                          D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 418: {;D:\MPLAB XC8 compiler\pic\
      +                          sources\c90\common\doprnt.c: 421:  if(prec>=110)
  4173  00F4  306E               	movlw	110
  4174  00F5  0247               	subwf	fround@prec,w
  4175  00F6  1C03               	skipc
  4176  00F7  28F9               	goto	u3361
  4177  00F8  28FA               	goto	u3360
  4178  00F9                     u3361:
  4179  00F9  29D1               	goto	l2464
  4180  00FA                     u3360:
  4181  00FA                     l2456:
  4182                           
  4183                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4184  00FA  3003               	movlw	3
  4185  00FB  00BB               	movwf	??_fround
  4186  00FC  083B               	movf	??_fround,w
  4187  00FD  00A4               	movwf	___bmul@multiplicand
  4188  00FE  0847               	movf	fround@prec,w
  4189  00FF  00BC               	movwf	??_fround+1
  4190  0100  01BD               	clrf	??_fround+2
  4191  0101  083C               	movf	??_fround+1,w
  4192  0102  00F2               	movwf	___lwmod@dividend
  4193  0103  083D               	movf	??_fround+2,w
  4194  0104  00F3               	movwf	___lwmod@dividend+1
  4195  0105  3064               	movlw	100
  4196  0106  00F0               	movwf	___lwmod@divisor
  4197  0107  3000               	movlw	0
  4198  0108  00F1               	movwf	___lwmod@divisor+1
  4199  0109  160A  158A  2782  120A  118A  	fcall	___lwmod
  4200  010E  0871               	movf	?___lwmod+1,w
  4201  010F  00F9               	movwf	___lwdiv@dividend+1
  4202  0110  0870               	movf	?___lwmod,w
  4203  0111  00F8               	movwf	___lwdiv@dividend
  4204  0112  300A               	movlw	10
  4205  0113  00F6               	movwf	___lwdiv@divisor
  4206  0114  3000               	movlw	0
  4207  0115  00F7               	movwf	___lwdiv@divisor+1
  4208  0116  160A  158A  27BC  120A  118A  	fcall	___lwdiv
  4209  011B  0876               	movf	?___lwdiv,w
  4210  011C  120A  158A  200C  120A  118A  	fcall	___bmul
  4211  0121  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  4212  0122  0084               	movwf	4
  4213  0123  160A  118A  2000  120A  118A  	fcall	stringdir
  4214  0128  1283               	bcf	3,5	;RP0=0, select bank0
  4215  0129  1303               	bcf	3,6	;RP1=0, select bank0
  4216  012A  00A8               	movwf	___ftmul@f1
  4217  012B  160A  118A  2000  120A  118A  	fcall	stringdir
  4218  0130  00A9               	movwf	___ftmul@f1+1
  4219  0131  160A  118A  2000  120A  118A  	fcall	stringdir
  4220  0136  00AA               	movwf	___ftmul@f1+2
  4221  0137  3003               	movlw	3
  4222  0138  00BE               	movwf	??_fround+3
  4223  0139  083E               	movf	??_fround+3,w
  4224  013A  00A4               	movwf	___bmul@multiplicand
  4225  013B  0847               	movf	fround@prec,w
  4226  013C  00BF               	movwf	??_fround+4
  4227  013D  01C0               	clrf	??_fround+5
  4228  013E  083F               	movf	??_fround+4,w
  4229  013F  00F8               	movwf	___lwdiv@dividend
  4230  0140  0840               	movf	??_fround+5,w
  4231  0141  00F9               	movwf	___lwdiv@dividend+1
  4232  0142  3064               	movlw	100
  4233  0143  00F6               	movwf	___lwdiv@divisor
  4234  0144  3000               	movlw	0
  4235  0145  00F7               	movwf	___lwdiv@divisor+1
  4236  0146  160A  158A  27BC  120A  118A  	fcall	___lwdiv
  4237  014B  0876               	movf	?___lwdiv,w
  4238  014C  120A  158A  200C  120A  118A  	fcall	___bmul
  4239  0151  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  4240  0152  0084               	movwf	4
  4241  0153  160A  118A  2000  120A  118A  	fcall	stringdir
  4242  0158  1283               	bcf	3,5	;RP0=0, select bank0
  4243  0159  1303               	bcf	3,6	;RP1=0, select bank0
  4244  015A  00AB               	movwf	___ftmul@f2
  4245  015B  160A  118A  2000  120A  118A  	fcall	stringdir
  4246  0160  00AC               	movwf	___ftmul@f2+1
  4247  0161  160A  118A  2000  120A  118A  	fcall	stringdir
  4248  0166  00AD               	movwf	___ftmul@f2+2
  4249  0167  120A  118A  200C  120A  118A  	fcall	___ftmul
  4250  016C  1283               	bcf	3,5	;RP0=0, select bank0
  4251  016D  1303               	bcf	3,6	;RP1=0, select bank0
  4252  016E  0828               	movf	?___ftmul,w
  4253  016F  00C4               	movwf	_fround$1036
  4254  0170  0829               	movf	?___ftmul+1,w
  4255  0171  00C5               	movwf	_fround$1036+1
  4256  0172  082A               	movf	?___ftmul+2,w
  4257  0173  00C6               	movwf	_fround$1036+2
  4258                           
  4259                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4260  0174  3003               	movlw	3
  4261  0175  00BB               	movwf	??_fround
  4262  0176  083B               	movf	??_fround,w
  4263  0177  00A4               	movwf	___bmul@multiplicand
  4264  0178  0847               	movf	fround@prec,w
  4265  0179  00BC               	movwf	??_fround+1
  4266  017A  01BD               	clrf	??_fround+2
  4267  017B  083C               	movf	??_fround+1,w
  4268  017C  00F2               	movwf	___lwmod@dividend
  4269  017D  083D               	movf	??_fround+2,w
  4270  017E  00F3               	movwf	___lwmod@dividend+1
  4271  017F  300A               	movlw	10
  4272  0180  00F0               	movwf	___lwmod@divisor
  4273  0181  3000               	movlw	0
  4274  0182  00F1               	movwf	___lwmod@divisor+1
  4275  0183  160A  158A  2782  120A  118A  	fcall	___lwmod
  4276  0188  0870               	movf	?___lwmod,w
  4277  0189  120A  158A  200C  120A  118A  	fcall	___bmul
  4278  018E  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4279  018F  0084               	movwf	4
  4280  0190  160A  118A  2000  120A  118A  	fcall	stringdir
  4281  0195  1283               	bcf	3,5	;RP0=0, select bank0
  4282  0196  1303               	bcf	3,6	;RP1=0, select bank0
  4283  0197  00A8               	movwf	___ftmul@f1
  4284  0198  160A  118A  2000  120A  118A  	fcall	stringdir
  4285  019D  00A9               	movwf	___ftmul@f1+1
  4286  019E  160A  118A  2000  120A  118A  	fcall	stringdir
  4287  01A3  00AA               	movwf	___ftmul@f1+2
  4288  01A4  0844               	movf	_fround$1036,w
  4289  01A5  00AB               	movwf	___ftmul@f2
  4290  01A6  0845               	movf	_fround$1036+1,w
  4291  01A7  00AC               	movwf	___ftmul@f2+1
  4292  01A8  0846               	movf	_fround$1036+2,w
  4293  01A9  00AD               	movwf	___ftmul@f2+2
  4294  01AA  120A  118A  200C  120A  118A  	fcall	___ftmul
  4295  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  4296  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  4297  01B1  0828               	movf	?___ftmul,w
  4298  01B2  00C1               	movwf	_fround$1037
  4299  01B3  0829               	movf	?___ftmul+1,w
  4300  01B4  00C2               	movwf	_fround$1037+1
  4301  01B5  082A               	movf	?___ftmul+2,w
  4302  01B6  00C3               	movwf	_fround$1037+2
  4303  01B7                     l2458:
  4304                           
  4305                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4306  01B7  3000               	movlw	0
  4307  01B8  00A8               	movwf	___ftmul@f1
  4308  01B9  3000               	movlw	0
  4309  01BA  00A9               	movwf	___ftmul@f1+1
  4310  01BB  303F               	movlw	63
  4311  01BC  00AA               	movwf	___ftmul@f1+2
  4312  01BD  0841               	movf	_fround$1037,w
  4313  01BE  00AB               	movwf	___ftmul@f2
  4314  01BF  0842               	movf	_fround$1037+1,w
  4315  01C0  00AC               	movwf	___ftmul@f2+1
  4316  01C1  0843               	movf	_fround$1037+2,w
  4317  01C2  00AD               	movwf	___ftmul@f2+2
  4318  01C3  120A  118A  200C  120A  118A  	fcall	___ftmul
  4319  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  4320  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  4321  01CA  0828               	movf	?___ftmul,w
  4322  01CB  00B8               	movwf	?_fround
  4323  01CC  0829               	movf	?___ftmul+1,w
  4324  01CD  00B9               	movwf	?_fround+1
  4325  01CE  082A               	movf	?___ftmul+2,w
  4326  01CF  00BA               	movwf	?_fround+2
  4327  01D0  2A91               	goto	l300
  4328  01D1                     l2464:
  4329  01D1  300B               	movlw	11
  4330  01D2  0247               	subwf	fround@prec,w
  4331  01D3  1C03               	skipc
  4332  01D4  29D6               	goto	u3371
  4333  01D5  29D7               	goto	u3370
  4334  01D6                     u3371:
  4335  01D6  2A5E               	goto	l2472
  4336  01D7                     u3370:
  4337  01D7                     l2466:
  4338                           
  4339                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[pr
      +                          ec/10U+9U] * _npowers_[prec%10U];
  4340  01D7  3003               	movlw	3
  4341  01D8  00BB               	movwf	??_fround
  4342  01D9  083B               	movf	??_fround,w
  4343  01DA  00A4               	movwf	___bmul@multiplicand
  4344  01DB  0847               	movf	fround@prec,w
  4345  01DC  00BC               	movwf	??_fround+1
  4346  01DD  01BD               	clrf	??_fround+2
  4347  01DE  083C               	movf	??_fround+1,w
  4348  01DF  00F2               	movwf	___lwmod@dividend
  4349  01E0  083D               	movf	??_fround+2,w
  4350  01E1  00F3               	movwf	___lwmod@dividend+1
  4351  01E2  300A               	movlw	10
  4352  01E3  00F0               	movwf	___lwmod@divisor
  4353  01E4  3000               	movlw	0
  4354  01E5  00F1               	movwf	___lwmod@divisor+1
  4355  01E6  160A  158A  2782  120A  118A  	fcall	___lwmod
  4356  01EB  0870               	movf	?___lwmod,w
  4357  01EC  120A  158A  200C  120A  118A  	fcall	___bmul
  4358  01F1  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4359  01F2  0084               	movwf	4
  4360  01F3  160A  118A  2000  120A  118A  	fcall	stringdir
  4361  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  4362  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  4363  01FA  00A8               	movwf	___ftmul@f1
  4364  01FB  160A  118A  2000  120A  118A  	fcall	stringdir
  4365  0200  00A9               	movwf	___ftmul@f1+1
  4366  0201  160A  118A  2000  120A  118A  	fcall	stringdir
  4367  0206  00AA               	movwf	___ftmul@f1+2
  4368  0207  3003               	movlw	3
  4369  0208  00BE               	movwf	??_fround+3
  4370  0209  083E               	movf	??_fround+3,w
  4371  020A  00A4               	movwf	___bmul@multiplicand
  4372  020B  0847               	movf	fround@prec,w
  4373  020C  00BF               	movwf	??_fround+4
  4374  020D  01C0               	clrf	??_fround+5
  4375  020E  083F               	movf	??_fround+4,w
  4376  020F  00F8               	movwf	___lwdiv@dividend
  4377  0210  0840               	movf	??_fround+5,w
  4378  0211  00F9               	movwf	___lwdiv@dividend+1
  4379  0212  300A               	movlw	10
  4380  0213  00F6               	movwf	___lwdiv@divisor
  4381  0214  3000               	movlw	0
  4382  0215  00F7               	movwf	___lwdiv@divisor+1
  4383  0216  160A  158A  27BC  120A  118A  	fcall	___lwdiv
  4384  021B  0876               	movf	?___lwdiv,w
  4385  021C  120A  158A  200C  120A  118A  	fcall	___bmul
  4386  0221  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  4387  0222  0084               	movwf	4
  4388  0223  160A  118A  2000  120A  118A  	fcall	stringdir
  4389  0228  1283               	bcf	3,5	;RP0=0, select bank0
  4390  0229  1303               	bcf	3,6	;RP1=0, select bank0
  4391  022A  00AB               	movwf	___ftmul@f2
  4392  022B  160A  118A  2000  120A  118A  	fcall	stringdir
  4393  0230  00AC               	movwf	___ftmul@f2+1
  4394  0231  160A  118A  2000  120A  118A  	fcall	stringdir
  4395  0236  00AD               	movwf	___ftmul@f2+2
  4396  0237  120A  118A  200C  120A  118A  	fcall	___ftmul
  4397  023C  1283               	bcf	3,5	;RP0=0, select bank0
  4398  023D  1303               	bcf	3,6	;RP1=0, select bank0
  4399  023E  0828               	movf	?___ftmul,w
  4400  023F  00C4               	movwf	_fround$1036
  4401  0240  0829               	movf	?___ftmul+1,w
  4402  0241  00C5               	movwf	_fround$1036+1
  4403  0242  082A               	movf	?___ftmul+2,w
  4404  0243  00C6               	movwf	_fround$1036+2
  4405  0244                     l2468:
  4406                           
  4407                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[pr
      +                          ec/10U+9U] * _npowers_[prec%10U];
  4408  0244  3000               	movlw	0
  4409  0245  00A8               	movwf	___ftmul@f1
  4410  0246  3000               	movlw	0
  4411  0247  00A9               	movwf	___ftmul@f1+1
  4412  0248  303F               	movlw	63
  4413  0249  00AA               	movwf	___ftmul@f1+2
  4414  024A  0844               	movf	_fround$1036,w
  4415  024B  00AB               	movwf	___ftmul@f2
  4416  024C  0845               	movf	_fround$1036+1,w
  4417  024D  00AC               	movwf	___ftmul@f2+1
  4418  024E  0846               	movf	_fround$1036+2,w
  4419  024F  00AD               	movwf	___ftmul@f2+2
  4420  0250  120A  118A  200C  120A  118A  	fcall	___ftmul
  4421  0255  1283               	bcf	3,5	;RP0=0, select bank0
  4422  0256  1303               	bcf	3,6	;RP1=0, select bank0
  4423  0257  0828               	movf	?___ftmul,w
  4424  0258  00B8               	movwf	?_fround
  4425  0259  0829               	movf	?___ftmul+1,w
  4426  025A  00B9               	movwf	?_fround+1
  4427  025B  082A               	movf	?___ftmul+2,w
  4428  025C  00BA               	movwf	?_fround+2
  4429  025D  2A91               	goto	l300
  4430  025E                     l2472:
  4431                           
  4432                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 425:  return 0.5 * _npowers_[pre
      +                          c];
  4433  025E  3000               	movlw	0
  4434  025F  00A8               	movwf	___ftmul@f1
  4435  0260  3000               	movlw	0
  4436  0261  00A9               	movwf	___ftmul@f1+1
  4437  0262  303F               	movlw	63
  4438  0263  00AA               	movwf	___ftmul@f1+2
  4439  0264  3003               	movlw	3
  4440  0265  00BB               	movwf	??_fround
  4441  0266  083B               	movf	??_fround,w
  4442  0267  00A4               	movwf	___bmul@multiplicand
  4443  0268  0847               	movf	fround@prec,w
  4444  0269  120A  158A  200C  120A  118A  	fcall	___bmul
  4445  026E  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4446  026F  0084               	movwf	4
  4447  0270  160A  118A  2000  120A  118A  	fcall	stringdir
  4448  0275  1283               	bcf	3,5	;RP0=0, select bank0
  4449  0276  1303               	bcf	3,6	;RP1=0, select bank0
  4450  0277  00AB               	movwf	___ftmul@f2
  4451  0278  160A  118A  2000  120A  118A  	fcall	stringdir
  4452  027D  00AC               	movwf	___ftmul@f2+1
  4453  027E  160A  118A  2000  120A  118A  	fcall	stringdir
  4454  0283  00AD               	movwf	___ftmul@f2+2
  4455  0284  120A  118A  200C  120A  118A  	fcall	___ftmul
  4456  0289  1283               	bcf	3,5	;RP0=0, select bank0
  4457  028A  1303               	bcf	3,6	;RP1=0, select bank0
  4458  028B  0828               	movf	?___ftmul,w
  4459  028C  00B8               	movwf	?_fround
  4460  028D  0829               	movf	?___ftmul+1,w
  4461  028E  00B9               	movwf	?_fround+1
  4462  028F  082A               	movf	?___ftmul+2,w
  4463  0290  00BA               	movwf	?_fround+2
  4464  0291                     l300:
  4465  0291  0008               	return
  4466  0292                     __end_of_fround:
  4467                           
  4468                           	psect	text11
  4469  1F82                     __ptext11:	
  4470 ;; *************** function ___lwmod *****************
  4471 ;; Defined at:
  4472 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lwmod.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  divisor         2    0[COMMON] unsigned int 
  4475 ;;  dividend        2    2[COMMON] unsigned int 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;  counter         1    5[COMMON] unsigned char 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  2    0[COMMON] unsigned int 
  4480 ;; Registers used:
  4481 ;;		wreg, status,2, status,0
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4487 ;;      Params:         4       0       0       0       0
  4488 ;;      Locals:         1       0       0       0       0
  4489 ;;      Temps:          1       0       0       0       0
  4490 ;;      Totals:         6       0       0       0       0
  4491 ;;Total ram usage:        6 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; This function calls:
  4494 ;;		Nothing
  4495 ;; This function is called by:
  4496 ;;		_fround
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           
  4501                           ;psect for function ___lwmod
  4502  1F82                     ___lwmod:
  4503  1F82                     l2402:	
  4504                           ;incstack = 0
  4505                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4506                           
  4507  1F82  0870               	movf	___lwmod@divisor,w
  4508  1F83  0471               	iorwf	___lwmod@divisor+1,w
  4509  1F84  1903               	btfsc	3,2
  4510  1F85  2F87               	goto	u3211
  4511  1F86  2F88               	goto	u3210
  4512  1F87                     u3211:
  4513  1F87  2FB7               	goto	l2420
  4514  1F88                     u3210:
  4515  1F88                     l2404:
  4516  1F88  01F5               	clrf	___lwmod@counter
  4517  1F89  0AF5               	incf	___lwmod@counter,f
  4518  1F8A  2F96               	goto	l2410
  4519  1F8B                     l2406:
  4520  1F8B  3001               	movlw	1
  4521  1F8C                     u3225:
  4522  1F8C  1003               	clrc
  4523  1F8D  0DF0               	rlf	___lwmod@divisor,f
  4524  1F8E  0DF1               	rlf	___lwmod@divisor+1,f
  4525  1F8F  3EFF               	addlw	-1
  4526  1F90  1D03               	skipz
  4527  1F91  2F8C               	goto	u3225
  4528  1F92                     l2408:
  4529  1F92  3001               	movlw	1
  4530  1F93  00F4               	movwf	??___lwmod
  4531  1F94  0874               	movf	??___lwmod,w
  4532  1F95  07F5               	addwf	___lwmod@counter,f
  4533  1F96                     l2410:
  4534  1F96  1FF1               	btfss	___lwmod@divisor+1,7
  4535  1F97  2F99               	goto	u3231
  4536  1F98  2F9A               	goto	u3230
  4537  1F99                     u3231:
  4538  1F99  2F8B               	goto	l2406
  4539  1F9A                     u3230:
  4540  1F9A                     l2412:
  4541  1F9A  0871               	movf	___lwmod@divisor+1,w
  4542  1F9B  0273               	subwf	___lwmod@dividend+1,w
  4543  1F9C  1D03               	skipz
  4544  1F9D  2FA0               	goto	u3245
  4545  1F9E  0870               	movf	___lwmod@divisor,w
  4546  1F9F  0272               	subwf	___lwmod@dividend,w
  4547  1FA0                     u3245:
  4548  1FA0  1C03               	skipc
  4549  1FA1  2FA3               	goto	u3241
  4550  1FA2  2FA4               	goto	u3240
  4551  1FA3                     u3241:
  4552  1FA3  2FAA               	goto	l2416
  4553  1FA4                     u3240:
  4554  1FA4                     l2414:
  4555  1FA4  0870               	movf	___lwmod@divisor,w
  4556  1FA5  02F2               	subwf	___lwmod@dividend,f
  4557  1FA6  0871               	movf	___lwmod@divisor+1,w
  4558  1FA7  1C03               	skipc
  4559  1FA8  03F3               	decf	___lwmod@dividend+1,f
  4560  1FA9  02F3               	subwf	___lwmod@dividend+1,f
  4561  1FAA                     l2416:
  4562  1FAA  3001               	movlw	1
  4563  1FAB                     u3255:
  4564  1FAB  1003               	clrc
  4565  1FAC  0CF1               	rrf	___lwmod@divisor+1,f
  4566  1FAD  0CF0               	rrf	___lwmod@divisor,f
  4567  1FAE  3EFF               	addlw	-1
  4568  1FAF  1D03               	skipz
  4569  1FB0  2FAB               	goto	u3255
  4570  1FB1                     l2418:
  4571  1FB1  3001               	movlw	1
  4572  1FB2  02F5               	subwf	___lwmod@counter,f
  4573  1FB3  1D03               	btfss	3,2
  4574  1FB4  2FB6               	goto	u3261
  4575  1FB5  2FB7               	goto	u3260
  4576  1FB6                     u3261:
  4577  1FB6  2F9A               	goto	l2412
  4578  1FB7                     u3260:
  4579  1FB7                     l2420:
  4580  1FB7  0873               	movf	___lwmod@dividend+1,w
  4581  1FB8  00F1               	movwf	?___lwmod+1
  4582  1FB9  0872               	movf	___lwmod@dividend,w
  4583  1FBA  00F0               	movwf	?___lwmod
  4584  1FBB                     l846:
  4585  1FBB  0008               	return
  4586  1FBC                     __end_of___lwmod:
  4587                           
  4588                           	psect	text12
  4589  1FBC                     __ptext12:	
  4590 ;; *************** function ___lwdiv *****************
  4591 ;; Defined at:
  4592 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lwdiv.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  divisor         2    6[COMMON] unsigned int 
  4595 ;;  dividend        2    8[COMMON] unsigned int 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  quotient        2   11[COMMON] unsigned int 
  4598 ;;  counter         1   13[COMMON] unsigned char 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  2    6[COMMON] unsigned int 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2, status,0
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4608 ;;      Params:         4       0       0       0       0
  4609 ;;      Locals:         3       0       0       0       0
  4610 ;;      Temps:          1       0       0       0       0
  4611 ;;      Totals:         8       0       0       0       0
  4612 ;;Total ram usage:        8 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_fround
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           
  4622                           ;psect for function ___lwdiv
  4623  1FBC                     ___lwdiv:
  4624  1FBC                     l2376:	
  4625                           ;incstack = 0
  4626                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4627                           
  4628  1FBC  01FB               	clrf	___lwdiv@quotient
  4629  1FBD  01FC               	clrf	___lwdiv@quotient+1
  4630  1FBE                     l2378:
  4631  1FBE  0876               	movf	___lwdiv@divisor,w
  4632  1FBF  0477               	iorwf	___lwdiv@divisor+1,w
  4633  1FC0  1903               	btfsc	3,2
  4634  1FC1  2FC3               	goto	u3141
  4635  1FC2  2FC4               	goto	u3140
  4636  1FC3                     u3141:
  4637  1FC3  2FFB               	goto	l2398
  4638  1FC4                     u3140:
  4639  1FC4                     l2380:
  4640  1FC4  01FD               	clrf	___lwdiv@counter
  4641  1FC5  0AFD               	incf	___lwdiv@counter,f
  4642  1FC6  2FD2               	goto	l2386
  4643  1FC7                     l2382:
  4644  1FC7  3001               	movlw	1
  4645  1FC8                     u3155:
  4646  1FC8  1003               	clrc
  4647  1FC9  0DF6               	rlf	___lwdiv@divisor,f
  4648  1FCA  0DF7               	rlf	___lwdiv@divisor+1,f
  4649  1FCB  3EFF               	addlw	-1
  4650  1FCC  1D03               	skipz
  4651  1FCD  2FC8               	goto	u3155
  4652  1FCE                     l2384:
  4653  1FCE  3001               	movlw	1
  4654  1FCF  00FA               	movwf	??___lwdiv
  4655  1FD0  087A               	movf	??___lwdiv,w
  4656  1FD1  07FD               	addwf	___lwdiv@counter,f
  4657  1FD2                     l2386:
  4658  1FD2  1FF7               	btfss	___lwdiv@divisor+1,7
  4659  1FD3  2FD5               	goto	u3161
  4660  1FD4  2FD6               	goto	u3160
  4661  1FD5                     u3161:
  4662  1FD5  2FC7               	goto	l2382
  4663  1FD6                     u3160:
  4664  1FD6                     l2388:
  4665  1FD6  3001               	movlw	1
  4666  1FD7                     u3175:
  4667  1FD7  1003               	clrc
  4668  1FD8  0DFB               	rlf	___lwdiv@quotient,f
  4669  1FD9  0DFC               	rlf	___lwdiv@quotient+1,f
  4670  1FDA  3EFF               	addlw	-1
  4671  1FDB  1D03               	skipz
  4672  1FDC  2FD7               	goto	u3175
  4673  1FDD  0877               	movf	___lwdiv@divisor+1,w
  4674  1FDE  0279               	subwf	___lwdiv@dividend+1,w
  4675  1FDF  1D03               	skipz
  4676  1FE0  2FE3               	goto	u3185
  4677  1FE1  0876               	movf	___lwdiv@divisor,w
  4678  1FE2  0278               	subwf	___lwdiv@dividend,w
  4679  1FE3                     u3185:
  4680  1FE3  1C03               	skipc
  4681  1FE4  2FE6               	goto	u3181
  4682  1FE5  2FE7               	goto	u3180
  4683  1FE6                     u3181:
  4684  1FE6  2FEE               	goto	l2394
  4685  1FE7                     u3180:
  4686  1FE7                     l2390:
  4687  1FE7  0876               	movf	___lwdiv@divisor,w
  4688  1FE8  02F8               	subwf	___lwdiv@dividend,f
  4689  1FE9  0877               	movf	___lwdiv@divisor+1,w
  4690  1FEA  1C03               	skipc
  4691  1FEB  03F9               	decf	___lwdiv@dividend+1,f
  4692  1FEC  02F9               	subwf	___lwdiv@dividend+1,f
  4693  1FED                     l2392:
  4694  1FED  147B               	bsf	___lwdiv@quotient,0
  4695  1FEE                     l2394:
  4696  1FEE  3001               	movlw	1
  4697  1FEF                     u3195:
  4698  1FEF  1003               	clrc
  4699  1FF0  0CF7               	rrf	___lwdiv@divisor+1,f
  4700  1FF1  0CF6               	rrf	___lwdiv@divisor,f
  4701  1FF2  3EFF               	addlw	-1
  4702  1FF3  1D03               	skipz
  4703  1FF4  2FEF               	goto	u3195
  4704  1FF5                     l2396:
  4705  1FF5  3001               	movlw	1
  4706  1FF6  02FD               	subwf	___lwdiv@counter,f
  4707  1FF7  1D03               	btfss	3,2
  4708  1FF8  2FFA               	goto	u3201
  4709  1FF9  2FFB               	goto	u3200
  4710  1FFA                     u3201:
  4711  1FFA  2FD6               	goto	l2388
  4712  1FFB                     u3200:
  4713  1FFB                     l2398:
  4714  1FFB  087C               	movf	___lwdiv@quotient+1,w
  4715  1FFC  00F7               	movwf	?___lwdiv+1
  4716  1FFD  087B               	movf	___lwdiv@quotient,w
  4717  1FFE  00F6               	movwf	?___lwdiv
  4718  1FFF                     l836:
  4719  1FFF  0008               	return
  4720  2000                     __end_of___lwdiv:
  4721                           
  4722                           	psect	text13
  4723  080C                     __ptext13:	
  4724 ;; *************** function ___bmul *****************
  4725 ;; Defined at:
  4726 ;;		line 4 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\Umul8.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;  multiplier      1    wreg     unsigned char 
  4729 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  multiplier      1    7[BANK0 ] unsigned char 
  4732 ;;  product         1    6[BANK0 ] unsigned char 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      unsigned char 
  4735 ;; Registers used:
  4736 ;;		wreg, status,2, status,0
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4742 ;;      Params:         0       1       0       0       0
  4743 ;;      Locals:         0       2       0       0       0
  4744 ;;      Temps:          0       1       0       0       0
  4745 ;;      Totals:         0       4       0       0       0
  4746 ;;Total ram usage:        4 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_fround
  4752 ;;		_scale
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           
  4757                           ;psect for function ___bmul
  4758  080C                     ___bmul:
  4759                           
  4760                           ;incstack = 0
  4761                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4762                           ;___bmul@multiplier stored from wreg
  4763  080C  1283               	bcf	3,5	;RP0=0, select bank0
  4764  080D  1303               	bcf	3,6	;RP1=0, select bank0
  4765  080E  00A7               	movwf	___bmul@multiplier
  4766  080F                     l2160:
  4767  080F  01A6               	clrf	___bmul@product
  4768  0810                     l2162:
  4769  0810  1C27               	btfss	___bmul@multiplier,0
  4770  0811  2813               	goto	u2551
  4771  0812  2814               	goto	u2550
  4772  0813                     u2551:
  4773  0813  2818               	goto	l2166
  4774  0814                     u2550:
  4775  0814                     l2164:
  4776  0814  0824               	movf	___bmul@multiplicand,w
  4777  0815  00A5               	movwf	??___bmul
  4778  0816  0825               	movf	??___bmul,w
  4779  0817  07A6               	addwf	___bmul@product,f
  4780  0818                     l2166:
  4781  0818  1003               	clrc
  4782  0819  0DA4               	rlf	___bmul@multiplicand,f
  4783  081A                     l2168:
  4784  081A  1003               	clrc
  4785  081B  0CA7               	rrf	___bmul@multiplier,f
  4786  081C  0827               	movf	___bmul@multiplier,w
  4787  081D  1D03               	btfss	3,2
  4788  081E  2820               	goto	u2561
  4789  081F  2821               	goto	u2560
  4790  0820                     u2561:
  4791  0820  2810               	goto	l2162
  4792  0821                     u2560:
  4793  0821                     l2170:
  4794  0821  0826               	movf	___bmul@product,w
  4795  0822                     l420:
  4796  0822  0008               	return
  4797  0823                     __end_of___bmul:
  4798                           
  4799                           	psect	text14
  4800  14B0                     __ptext14:	
  4801 ;; *************** function __tdiv_to_l_ *****************
  4802 ;; Defined at:
  4803 ;;		line 60 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftdivl.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  f1              3    0[COMMON] float 
  4806 ;;  f2              3    3[COMMON] float 
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;  quot            4    0[BANK0 ] unsigned long 
  4809 ;;  exp1            1    5[BANK0 ] unsigned char 
  4810 ;;  cntr            1    4[BANK0 ] unsigned char 
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  4    0[COMMON] unsigned long 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4820 ;;      Params:         6       0       0       0       0
  4821 ;;      Locals:         0       6       0       0       0
  4822 ;;      Temps:          4       0       0       0       0
  4823 ;;      Totals:        10       6       0       0       0
  4824 ;;Total ram usage:       16 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; This function calls:
  4827 ;;		Nothing
  4828 ;; This function is called by:
  4829 ;;		_sprintf
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           
  4834                           ;psect for function __tdiv_to_l_
  4835  14B0                     __tdiv_to_l_:
  4836  14B0                     l2528:	
  4837                           ;incstack = 0
  4838                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4839                           
  4840  14B0  0870               	movf	__tdiv_to_l_@f1,w
  4841  14B1  00F6               	movwf	??__tdiv_to_l_
  4842  14B2  0871               	movf	__tdiv_to_l_@f1+1,w
  4843  14B3  00F7               	movwf	??__tdiv_to_l_+1
  4844  14B4  0872               	movf	__tdiv_to_l_@f1+2,w
  4845  14B5  00F8               	movwf	??__tdiv_to_l_+2
  4846  14B6  1003               	clrc
  4847  14B7  0D77               	rlf	??__tdiv_to_l_+1,w
  4848  14B8  0D78               	rlf	??__tdiv_to_l_+2,w
  4849  14B9  00F9               	movwf	??__tdiv_to_l_+3
  4850  14BA  0879               	movf	??__tdiv_to_l_+3,w
  4851  14BB  1283               	bcf	3,5	;RP0=0, select bank0
  4852  14BC  1303               	bcf	3,6	;RP1=0, select bank0
  4853  14BD  00A5               	movwf	__tdiv_to_l_@exp1
  4854  14BE  0825               	movf	__tdiv_to_l_@exp1,w
  4855  14BF  1D03               	btfss	3,2
  4856  14C0  2CC2               	goto	u3451
  4857  14C1  2CC3               	goto	u3450
  4858  14C2                     u3451:
  4859  14C2  2CCC               	goto	l2534
  4860  14C3                     u3450:
  4861  14C3                     l2530:
  4862  14C3  3000               	movlw	0
  4863  14C4  00F3               	movwf	?__tdiv_to_l_+3
  4864  14C5  3000               	movlw	0
  4865  14C6  00F2               	movwf	?__tdiv_to_l_+2
  4866  14C7  3000               	movlw	0
  4867  14C8  00F1               	movwf	?__tdiv_to_l_+1
  4868  14C9  3000               	movlw	0
  4869  14CA  00F0               	movwf	?__tdiv_to_l_
  4870  14CB  2D6C               	goto	l679
  4871  14CC                     l2534:
  4872  14CC  0873               	movf	__tdiv_to_l_@f2,w
  4873  14CD  00F6               	movwf	??__tdiv_to_l_
  4874  14CE  0874               	movf	__tdiv_to_l_@f2+1,w
  4875  14CF  00F7               	movwf	??__tdiv_to_l_+1
  4876  14D0  0875               	movf	__tdiv_to_l_@f2+2,w
  4877  14D1  00F8               	movwf	??__tdiv_to_l_+2
  4878  14D2  1003               	clrc
  4879  14D3  0D77               	rlf	??__tdiv_to_l_+1,w
  4880  14D4  0D78               	rlf	??__tdiv_to_l_+2,w
  4881  14D5  00F9               	movwf	??__tdiv_to_l_+3
  4882  14D6  0879               	movf	??__tdiv_to_l_+3,w
  4883  14D7  00A4               	movwf	__tdiv_to_l_@cntr
  4884  14D8  0824               	movf	__tdiv_to_l_@cntr,w
  4885  14D9  1D03               	btfss	3,2
  4886  14DA  2CDC               	goto	u3461
  4887  14DB  2CDD               	goto	u3460
  4888  14DC                     u3461:
  4889  14DC  2CDE               	goto	l680
  4890  14DD                     u3460:
  4891  14DD  2CC3               	goto	l2530
  4892  14DE                     l680:
  4893  14DE  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4894  14DF                     l2540:
  4895  14DF  30FF               	movlw	255
  4896  14E0  05F0               	andwf	__tdiv_to_l_@f1,f
  4897  14E1  30FF               	movlw	255
  4898  14E2  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4899  14E3  3000               	movlw	0
  4900  14E4  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4901  14E5                     l2542:
  4902  14E5  17F4               	bsf	__tdiv_to_l_@f2+1,7
  4903  14E6  30FF               	movlw	255
  4904  14E7  05F3               	andwf	__tdiv_to_l_@f2,f
  4905  14E8  30FF               	movlw	255
  4906  14E9  05F4               	andwf	__tdiv_to_l_@f2+1,f
  4907  14EA  3000               	movlw	0
  4908  14EB  05F5               	andwf	__tdiv_to_l_@f2+2,f
  4909  14EC  3000               	movlw	0
  4910  14ED  00A3               	movwf	__tdiv_to_l_@quot+3
  4911  14EE  3000               	movlw	0
  4912  14EF  00A2               	movwf	__tdiv_to_l_@quot+2
  4913  14F0  3000               	movlw	0
  4914  14F1  00A1               	movwf	__tdiv_to_l_@quot+1
  4915  14F2  3000               	movlw	0
  4916  14F3  00A0               	movwf	__tdiv_to_l_@quot
  4917  14F4                     l2544:
  4918  14F4  307F               	movlw	127
  4919  14F5  02A5               	subwf	__tdiv_to_l_@exp1,f
  4920  14F6                     l2546:
  4921  14F6  3098               	movlw	152
  4922  14F7  0724               	addwf	__tdiv_to_l_@cntr,w
  4923  14F8  00F6               	movwf	??__tdiv_to_l_
  4924  14F9  0876               	movf	??__tdiv_to_l_,w
  4925  14FA  02A5               	subwf	__tdiv_to_l_@exp1,f
  4926  14FB  3018               	movlw	24
  4927  14FC  00F6               	movwf	??__tdiv_to_l_
  4928  14FD  0876               	movf	??__tdiv_to_l_,w
  4929  14FE  00A4               	movwf	__tdiv_to_l_@cntr
  4930  14FF                     l2548:
  4931  14FF  3001               	movlw	1
  4932  1500  00F6               	movwf	??__tdiv_to_l_
  4933  1501                     u3475:
  4934  1501  1003               	clrc
  4935  1502  0DA0               	rlf	__tdiv_to_l_@quot,f
  4936  1503  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4937  1504  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4938  1505  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4939  1506  0BF6               	decfsz	??__tdiv_to_l_,f
  4940  1507  2D01               	goto	u3475
  4941  1508                     l2550:
  4942  1508  0875               	movf	__tdiv_to_l_@f2+2,w
  4943  1509  0272               	subwf	__tdiv_to_l_@f1+2,w
  4944  150A  1D03               	skipz
  4945  150B  2D12               	goto	u3485
  4946  150C  0874               	movf	__tdiv_to_l_@f2+1,w
  4947  150D  0271               	subwf	__tdiv_to_l_@f1+1,w
  4948  150E  1D03               	skipz
  4949  150F  2D12               	goto	u3485
  4950  1510  0873               	movf	__tdiv_to_l_@f2,w
  4951  1511  0270               	subwf	__tdiv_to_l_@f1,w
  4952  1512                     u3485:
  4953  1512  1C03               	skipc
  4954  1513  2D15               	goto	u3481
  4955  1514  2D16               	goto	u3480
  4956  1515                     u3481:
  4957  1515  2D21               	goto	l2556
  4958  1516                     u3480:
  4959  1516                     l2552:
  4960  1516  0873               	movf	__tdiv_to_l_@f2,w
  4961  1517  02F0               	subwf	__tdiv_to_l_@f1,f
  4962  1518  0874               	movf	__tdiv_to_l_@f2+1,w
  4963  1519  1C03               	skipc
  4964  151A  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  4965  151B  02F1               	subwf	__tdiv_to_l_@f1+1,f
  4966  151C  0875               	movf	__tdiv_to_l_@f2+2,w
  4967  151D  1C03               	skipc
  4968  151E  0A75               	incf	__tdiv_to_l_@f2+2,w
  4969  151F  02F2               	subwf	__tdiv_to_l_@f1+2,f
  4970  1520                     l2554:
  4971  1520  1420               	bsf	__tdiv_to_l_@quot,0
  4972  1521                     l2556:
  4973  1521  3001               	movlw	1
  4974  1522                     u3495:
  4975  1522  1003               	clrc
  4976  1523  0DF0               	rlf	__tdiv_to_l_@f1,f
  4977  1524  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  4978  1525  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  4979  1526  3EFF               	addlw	-1
  4980  1527  1D03               	skipz
  4981  1528  2D22               	goto	u3495
  4982  1529                     l2558:
  4983  1529  3001               	movlw	1
  4984  152A  02A4               	subwf	__tdiv_to_l_@cntr,f
  4985  152B  1D03               	btfss	3,2
  4986  152C  2D2E               	goto	u3501
  4987  152D  2D2F               	goto	u3500
  4988  152E                     u3501:
  4989  152E  2CFF               	goto	l2548
  4990  152F                     u3500:
  4991  152F                     l683:
  4992  152F  1FA5               	btfss	__tdiv_to_l_@exp1,7
  4993  1530  2D32               	goto	u3511
  4994  1531  2D33               	goto	u3510
  4995  1532                     u3511:
  4996  1532  2D4D               	goto	l2568
  4997  1533                     u3510:
  4998  1533                     l2560:
  4999  1533  0825               	movf	__tdiv_to_l_@exp1,w
  5000  1534  3A80               	xorlw	128
  5001  1535  3E97               	addlw	151
  5002  1536  1803               	skipnc
  5003  1537  2D39               	goto	u3521
  5004  1538  2D3A               	goto	u3520
  5005  1539                     u3521:
  5006  1539  2D3B               	goto	l2566
  5007  153A                     u3520:
  5008  153A  2CC3               	goto	l2530
  5009  153B                     l2566:
  5010  153B  3001               	movlw	1
  5011  153C                     u3535:
  5012  153C  1003               	clrc
  5013  153D  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5014  153E  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5015  153F  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5016  1540  0CA0               	rrf	__tdiv_to_l_@quot,f
  5017  1541  3EFF               	addlw	-1
  5018  1542  1D03               	skipz
  5019  1543  2D3C               	goto	u3535
  5020  1544  3001               	movlw	1
  5021  1545  00F6               	movwf	??__tdiv_to_l_
  5022  1546  0876               	movf	??__tdiv_to_l_,w
  5023  1547  07A5               	addwf	__tdiv_to_l_@exp1,f
  5024  1548  1D03               	btfss	3,2
  5025  1549  2D4B               	goto	u3541
  5026  154A  2D4C               	goto	u3540
  5027  154B                     u3541:
  5028  154B  2D3B               	goto	l2566
  5029  154C                     u3540:
  5030  154C  2D64               	goto	l2576
  5031  154D                     l2568:
  5032  154D  3018               	movlw	24
  5033  154E  0225               	subwf	__tdiv_to_l_@exp1,w
  5034  154F  1C03               	skipc
  5035  1550  2D52               	goto	u3551
  5036  1551  2D53               	goto	u3550
  5037  1552                     u3551:
  5038  1552  2D5F               	goto	l690
  5039  1553                     u3550:
  5040  1553  2CC3               	goto	l2530
  5041  1554                     l2574:
  5042  1554  3001               	movlw	1
  5043  1555  00F6               	movwf	??__tdiv_to_l_
  5044  1556                     u3565:
  5045  1556  1003               	clrc
  5046  1557  0DA0               	rlf	__tdiv_to_l_@quot,f
  5047  1558  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5048  1559  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5049  155A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5050  155B  0BF6               	decfsz	??__tdiv_to_l_,f
  5051  155C  2D56               	goto	u3565
  5052  155D  3001               	movlw	1
  5053  155E  02A5               	subwf	__tdiv_to_l_@exp1,f
  5054  155F                     l690:
  5055  155F  0825               	movf	__tdiv_to_l_@exp1,w
  5056  1560  1D03               	btfss	3,2
  5057  1561  2D63               	goto	u3571
  5058  1562  2D64               	goto	u3570
  5059  1563                     u3571:
  5060  1563  2D54               	goto	l2574
  5061  1564                     u3570:
  5062  1564                     l2576:
  5063  1564  0823               	movf	__tdiv_to_l_@quot+3,w
  5064  1565  00F3               	movwf	?__tdiv_to_l_+3
  5065  1566  0822               	movf	__tdiv_to_l_@quot+2,w
  5066  1567  00F2               	movwf	?__tdiv_to_l_+2
  5067  1568  0821               	movf	__tdiv_to_l_@quot+1,w
  5068  1569  00F1               	movwf	?__tdiv_to_l_+1
  5069  156A  0820               	movf	__tdiv_to_l_@quot,w
  5070  156B  00F0               	movwf	?__tdiv_to_l_
  5071  156C                     l679:
  5072  156C  0008               	return
  5073  156D                     __end_of__tdiv_to_l_:
  5074                           
  5075                           	psect	text15
  5076  0823                     __ptext15:	
  5077 ;; *************** function __div_to_l_ *****************
  5078 ;; Defined at:
  5079 ;;		line 60 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\fldivl.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  f1              3    0[COMMON] unsigned long 
  5082 ;;  f2              3    3[COMMON] unsigned long 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  quot            4    0[BANK0 ] unsigned long 
  5085 ;;  exp1            1    5[BANK0 ] unsigned char 
  5086 ;;  cntr            1    4[BANK0 ] unsigned char 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  4    0[COMMON] unsigned long 
  5089 ;; Registers used:
  5090 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5096 ;;      Params:         6       0       0       0       0
  5097 ;;      Locals:         0       6       0       0       0
  5098 ;;      Temps:          8       0       0       0       0
  5099 ;;      Totals:        14       6       0       0       0
  5100 ;;Total ram usage:       20 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_sprintf
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           
  5110                           ;psect for function __div_to_l_
  5111  0823                     __div_to_l_:
  5112  0823                     l2580:	
  5113                           ;incstack = 0
  5114                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5115                           
  5116  0823  3070               	movlw	low (__div_to_l_@f1| 0)
  5117  0824  0084               	movwf	4
  5118  0825  0800               	movf	0,w
  5119  0826  00F6               	movwf	??__div_to_l_
  5120  0827  0A84               	incf	4,f
  5121  0828  0800               	movf	0,w
  5122  0829  00F7               	movwf	??__div_to_l_+1
  5123  082A  0A84               	incf	4,f
  5124  082B  0800               	movf	0,w
  5125  082C  00F8               	movwf	??__div_to_l_+2
  5126  082D  0A84               	incf	4,f
  5127  082E  0800               	movf	0,w
  5128  082F  00F9               	movwf	??__div_to_l_+3
  5129  0830  1003               	clrc
  5130  0831  0D78               	rlf	??__div_to_l_+2,w
  5131  0832  0D79               	rlf	??__div_to_l_+3,w
  5132  0833  00FA               	movwf	??__div_to_l_+4
  5133  0834  087A               	movf	??__div_to_l_+4,w
  5134  0835  1283               	bcf	3,5	;RP0=0, select bank0
  5135  0836  1303               	bcf	3,6	;RP1=0, select bank0
  5136  0837  00A5               	movwf	__div_to_l_@exp1
  5137  0838  0825               	movf	__div_to_l_@exp1,w
  5138  0839  1D03               	btfss	3,2
  5139  083A  283C               	goto	u3581
  5140  083B  283D               	goto	u3580
  5141  083C                     u3581:
  5142  083C  2846               	goto	l2586
  5143  083D                     u3580:
  5144  083D                     l2582:
  5145  083D  3000               	movlw	0
  5146  083E  00F3               	movwf	?__div_to_l_+3
  5147  083F  3000               	movlw	0
  5148  0840  00F2               	movwf	?__div_to_l_+2
  5149  0841  3000               	movlw	0
  5150  0842  00F1               	movwf	?__div_to_l_+1
  5151  0843  3000               	movlw	0
  5152  0844  00F0               	movwf	?__div_to_l_
  5153  0845  294E               	goto	l600
  5154  0846                     l2586:
  5155  0846  3073               	movlw	low (__div_to_l_@f2| 0)
  5156  0847  0084               	movwf	4
  5157  0848  0800               	movf	0,w
  5158  0849  00F6               	movwf	??__div_to_l_
  5159  084A  0A84               	incf	4,f
  5160  084B  0800               	movf	0,w
  5161  084C  00F7               	movwf	??__div_to_l_+1
  5162  084D  0A84               	incf	4,f
  5163  084E  0800               	movf	0,w
  5164  084F  00F8               	movwf	??__div_to_l_+2
  5165  0850  0A84               	incf	4,f
  5166  0851  0800               	movf	0,w
  5167  0852  00F9               	movwf	??__div_to_l_+3
  5168  0853  1003               	clrc
  5169  0854  0D78               	rlf	??__div_to_l_+2,w
  5170  0855  0D79               	rlf	??__div_to_l_+3,w
  5171  0856  00FA               	movwf	??__div_to_l_+4
  5172  0857  087A               	movf	??__div_to_l_+4,w
  5173  0858  00A4               	movwf	__div_to_l_@cntr
  5174  0859  0824               	movf	__div_to_l_@cntr,w
  5175  085A  1D03               	btfss	3,2
  5176  085B  285D               	goto	u3591
  5177  085C  285E               	goto	u3590
  5178  085D                     u3591:
  5179  085D  285F               	goto	l2592
  5180  085E                     u3590:
  5181  085E  283D               	goto	l2582
  5182  085F                     l2592:
  5183  085F  3070               	movlw	low (__div_to_l_@f1| 0)
  5184  0860  0084               	movwf	4
  5185  0861  3000               	movlw	0
  5186  0862  0480               	iorwf	0,f
  5187  0863  0A84               	incf	4,f
  5188  0864  3000               	movlw	0
  5189  0865  0480               	iorwf	0,f
  5190  0866  0A84               	incf	4,f
  5191  0867  3080               	movlw	128
  5192  0868  0480               	iorwf	0,f
  5193  0869  0A84               	incf	4,f
  5194  086A  3000               	movlw	0
  5195  086B  0480               	iorwf	0,f
  5196  086C  3070               	movlw	low (__div_to_l_@f1| 0)
  5197  086D  0084               	movwf	4
  5198  086E  30FF               	movlw	255
  5199  086F  0580               	andwf	0,f
  5200  0870  0A84               	incf	4,f
  5201  0871  30FF               	movlw	255
  5202  0872  0580               	andwf	0,f
  5203  0873  0A84               	incf	4,f
  5204  0874  30FF               	movlw	255
  5205  0875  0580               	andwf	0,f
  5206  0876  0A84               	incf	4,f
  5207  0877  3000               	movlw	0
  5208  0878  0580               	andwf	0,f
  5209  0879  3073               	movlw	low (__div_to_l_@f2| 0)
  5210  087A  0084               	movwf	4
  5211  087B  3000               	movlw	0
  5212  087C  0480               	iorwf	0,f
  5213  087D  0A84               	incf	4,f
  5214  087E  3000               	movlw	0
  5215  087F  0480               	iorwf	0,f
  5216  0880  0A84               	incf	4,f
  5217  0881  3080               	movlw	128
  5218  0882  0480               	iorwf	0,f
  5219  0883  0A84               	incf	4,f
  5220  0884  3000               	movlw	0
  5221  0885  0480               	iorwf	0,f
  5222  0886  3073               	movlw	low (__div_to_l_@f2| 0)
  5223  0887  0084               	movwf	4
  5224  0888  30FF               	movlw	255
  5225  0889  0580               	andwf	0,f
  5226  088A  0A84               	incf	4,f
  5227  088B  30FF               	movlw	255
  5228  088C  0580               	andwf	0,f
  5229  088D  0A84               	incf	4,f
  5230  088E  30FF               	movlw	255
  5231  088F  0580               	andwf	0,f
  5232  0890  0A84               	incf	4,f
  5233  0891  3000               	movlw	0
  5234  0892  0580               	andwf	0,f
  5235  0893                     l2594:
  5236  0893  3000               	movlw	0
  5237  0894  00A3               	movwf	__div_to_l_@quot+3
  5238  0895  3000               	movlw	0
  5239  0896  00A2               	movwf	__div_to_l_@quot+2
  5240  0897  3000               	movlw	0
  5241  0898  00A1               	movwf	__div_to_l_@quot+1
  5242  0899  3000               	movlw	0
  5243  089A  00A0               	movwf	__div_to_l_@quot
  5244  089B                     l2596:
  5245  089B  307F               	movlw	127
  5246  089C  02A5               	subwf	__div_to_l_@exp1,f
  5247  089D                     l2598:
  5248  089D  30A0               	movlw	160
  5249  089E  0724               	addwf	__div_to_l_@cntr,w
  5250  089F  00F6               	movwf	??__div_to_l_
  5251  08A0  0876               	movf	??__div_to_l_,w
  5252  08A1  02A5               	subwf	__div_to_l_@exp1,f
  5253  08A2                     l2600:
  5254  08A2  3020               	movlw	32
  5255  08A3  00F6               	movwf	??__div_to_l_
  5256  08A4  0876               	movf	??__div_to_l_,w
  5257  08A5  00A4               	movwf	__div_to_l_@cntr
  5258  08A6                     l2602:
  5259  08A6  3001               	movlw	1
  5260  08A7  00F6               	movwf	??__div_to_l_
  5261  08A8                     u3605:
  5262  08A8  1003               	clrc
  5263  08A9  0DA0               	rlf	__div_to_l_@quot,f
  5264  08AA  0DA1               	rlf	__div_to_l_@quot+1,f
  5265  08AB  0DA2               	rlf	__div_to_l_@quot+2,f
  5266  08AC  0DA3               	rlf	__div_to_l_@quot+3,f
  5267  08AD  0BF6               	decfsz	??__div_to_l_,f
  5268  08AE  28A8               	goto	u3605
  5269  08AF                     l2604:
  5270  08AF  3073               	movlw	low (__div_to_l_@f2| 0)
  5271  08B0  0084               	movwf	4
  5272  08B1  0800               	movf	0,w
  5273  08B2  00F6               	movwf	??__div_to_l_
  5274  08B3  0A84               	incf	4,f
  5275  08B4  0800               	movf	0,w
  5276  08B5  00F7               	movwf	??__div_to_l_+1
  5277  08B6  0A84               	incf	4,f
  5278  08B7  0800               	movf	0,w
  5279  08B8  00F8               	movwf	??__div_to_l_+2
  5280  08B9  0A84               	incf	4,f
  5281  08BA  0800               	movf	0,w
  5282  08BB  00F9               	movwf	??__div_to_l_+3
  5283  08BC  3070               	movlw	low (__div_to_l_@f1| 0)
  5284  08BD  0084               	movwf	4
  5285  08BE  0800               	movf	0,w
  5286  08BF  00FA               	movwf	??__div_to_l_+4
  5287  08C0  0A84               	incf	4,f
  5288  08C1  0800               	movf	0,w
  5289  08C2  00FB               	movwf	??__div_to_l_+5
  5290  08C3  0A84               	incf	4,f
  5291  08C4  0800               	movf	0,w
  5292  08C5  00FC               	movwf	??__div_to_l_+6
  5293  08C6  0A84               	incf	4,f
  5294  08C7  0800               	movf	0,w
  5295  08C8  00FD               	movwf	??__div_to_l_+7
  5296  08C9  0879               	movf	??__div_to_l_+3,w
  5297  08CA  027D               	subwf	??__div_to_l_+7,w
  5298  08CB  1D03               	skipz
  5299  08CC  28D7               	goto	u3615
  5300  08CD  0878               	movf	??__div_to_l_+2,w
  5301  08CE  027C               	subwf	??__div_to_l_+6,w
  5302  08CF  1D03               	skipz
  5303  08D0  28D7               	goto	u3615
  5304  08D1  0877               	movf	??__div_to_l_+1,w
  5305  08D2  027B               	subwf	??__div_to_l_+5,w
  5306  08D3  1D03               	skipz
  5307  08D4  28D7               	goto	u3615
  5308  08D5  0876               	movf	??__div_to_l_,w
  5309  08D6  027A               	subwf	??__div_to_l_+4,w
  5310  08D7                     u3615:
  5311  08D7  1C03               	skipc
  5312  08D8  28DA               	goto	u3611
  5313  08D9  28DB               	goto	u3610
  5314  08DA                     u3611:
  5315  08DA  28FE               	goto	l603
  5316  08DB                     u3610:
  5317  08DB                     l2606:
  5318  08DB  3073               	movlw	low (__div_to_l_@f2| 0)
  5319  08DC  0084               	movwf	4
  5320  08DD  0800               	movf	0,w
  5321  08DE  00F6               	movwf	??__div_to_l_
  5322  08DF  0A84               	incf	4,f
  5323  08E0  0800               	movf	0,w
  5324  08E1  00F7               	movwf	??__div_to_l_+1
  5325  08E2  0A84               	incf	4,f
  5326  08E3  0800               	movf	0,w
  5327  08E4  00F8               	movwf	??__div_to_l_+2
  5328  08E5  0A84               	incf	4,f
  5329  08E6  0800               	movf	0,w
  5330  08E7  00F9               	movwf	??__div_to_l_+3
  5331  08E8  3070               	movlw	low (__div_to_l_@f1| 0)
  5332  08E9  0084               	movwf	4
  5333  08EA  0876               	movf	??__div_to_l_,w
  5334  08EB  0280               	subwf	0,f
  5335  08EC  0A84               	incf	4,f
  5336  08ED  0877               	movf	??__div_to_l_+1,w
  5337  08EE  1C03               	skipc
  5338  08EF  0F77               	incfsz	??__div_to_l_+1,w
  5339  08F0  0280               	subwf	0,f
  5340  08F1  0A84               	incf	4,f
  5341  08F2  0878               	movf	??__div_to_l_+2,w
  5342  08F3  1C03               	skipc
  5343  08F4  0F78               	incfsz	??__div_to_l_+2,w
  5344  08F5  0280               	subwf	0,f
  5345  08F6  0A84               	incf	4,f
  5346  08F7  0879               	movf	??__div_to_l_+3,w
  5347  08F8  1C03               	skipc
  5348  08F9  0A79               	incf	??__div_to_l_+3,w
  5349  08FA  0280               	subwf	0,f
  5350  08FB  3003               	movlw	3
  5351  08FC  0284               	subwf	4,f
  5352  08FD                     l2608:
  5353  08FD  1420               	bsf	__div_to_l_@quot,0
  5354  08FE                     l603:
  5355  08FE  3070               	movlw	low (__div_to_l_@f1| 0)
  5356  08FF  0084               	movwf	4
  5357  0900  1003               	clrc
  5358  0901  0D80               	rlf	0,f
  5359  0902  0A84               	incf	4,f
  5360  0903  0D80               	rlf	0,f
  5361  0904  0A84               	incf	4,f
  5362  0905  0D80               	rlf	0,f
  5363  0906  0A84               	incf	4,f
  5364  0907  0D80               	rlf	0,f
  5365  0908  0384               	decf	4,f
  5366  0909  0384               	decf	4,f
  5367  090A  0384               	decf	4,f
  5368  090B                     l2610:
  5369  090B  3001               	movlw	1
  5370  090C  02A4               	subwf	__div_to_l_@cntr,f
  5371  090D  1D03               	btfss	3,2
  5372  090E  2910               	goto	u3621
  5373  090F  2911               	goto	u3620
  5374  0910                     u3621:
  5375  0910  28A6               	goto	l2602
  5376  0911                     u3620:
  5377  0911                     l604:
  5378  0911  1FA5               	btfss	__div_to_l_@exp1,7
  5379  0912  2914               	goto	u3631
  5380  0913  2915               	goto	u3630
  5381  0914                     u3631:
  5382  0914  292F               	goto	l2620
  5383  0915                     u3630:
  5384  0915                     l2612:
  5385  0915  0825               	movf	__div_to_l_@exp1,w
  5386  0916  3A80               	xorlw	128
  5387  0917  3E9F               	addlw	159
  5388  0918  1803               	skipnc
  5389  0919  291B               	goto	u3641
  5390  091A  291C               	goto	u3640
  5391  091B                     u3641:
  5392  091B  291D               	goto	l2618
  5393  091C                     u3640:
  5394  091C  283D               	goto	l2582
  5395  091D                     l2618:
  5396  091D  3001               	movlw	1
  5397  091E                     u3655:
  5398  091E  1003               	clrc
  5399  091F  0CA3               	rrf	__div_to_l_@quot+3,f
  5400  0920  0CA2               	rrf	__div_to_l_@quot+2,f
  5401  0921  0CA1               	rrf	__div_to_l_@quot+1,f
  5402  0922  0CA0               	rrf	__div_to_l_@quot,f
  5403  0923  3EFF               	addlw	-1
  5404  0924  1D03               	skipz
  5405  0925  291E               	goto	u3655
  5406  0926  3001               	movlw	1
  5407  0927  00F6               	movwf	??__div_to_l_
  5408  0928  0876               	movf	??__div_to_l_,w
  5409  0929  07A5               	addwf	__div_to_l_@exp1,f
  5410  092A  1D03               	btfss	3,2
  5411  092B  292D               	goto	u3661
  5412  092C  292E               	goto	u3660
  5413  092D                     u3661:
  5414  092D  291D               	goto	l2618
  5415  092E                     u3660:
  5416  092E  2946               	goto	l2628
  5417  092F                     l2620:
  5418  092F  3020               	movlw	32
  5419  0930  0225               	subwf	__div_to_l_@exp1,w
  5420  0931  1C03               	skipc
  5421  0932  2934               	goto	u3671
  5422  0933  2935               	goto	u3670
  5423  0934                     u3671:
  5424  0934  2941               	goto	l611
  5425  0935                     u3670:
  5426  0935  283D               	goto	l2582
  5427  0936                     l2626:
  5428  0936  3001               	movlw	1
  5429  0937  00F6               	movwf	??__div_to_l_
  5430  0938                     u3685:
  5431  0938  1003               	clrc
  5432  0939  0DA0               	rlf	__div_to_l_@quot,f
  5433  093A  0DA1               	rlf	__div_to_l_@quot+1,f
  5434  093B  0DA2               	rlf	__div_to_l_@quot+2,f
  5435  093C  0DA3               	rlf	__div_to_l_@quot+3,f
  5436  093D  0BF6               	decfsz	??__div_to_l_,f
  5437  093E  2938               	goto	u3685
  5438  093F  3001               	movlw	1
  5439  0940  02A5               	subwf	__div_to_l_@exp1,f
  5440  0941                     l611:
  5441  0941  0825               	movf	__div_to_l_@exp1,w
  5442  0942  1D03               	btfss	3,2
  5443  0943  2945               	goto	u3691
  5444  0944  2946               	goto	u3690
  5445  0945                     u3691:
  5446  0945  2936               	goto	l2626
  5447  0946                     u3690:
  5448  0946                     l2628:
  5449  0946  0823               	movf	__div_to_l_@quot+3,w
  5450  0947  00F3               	movwf	?__div_to_l_+3
  5451  0948  0822               	movf	__div_to_l_@quot+2,w
  5452  0949  00F2               	movwf	?__div_to_l_+2
  5453  094A  0821               	movf	__div_to_l_@quot+1,w
  5454  094B  00F1               	movwf	?__div_to_l_+1
  5455  094C  0820               	movf	__div_to_l_@quot,w
  5456  094D  00F0               	movwf	?__div_to_l_
  5457  094E                     l600:
  5458  094E  0008               	return
  5459  094F                     __end_of__div_to_l_:
  5460                           
  5461                           	psect	text16
  5462  1E69                     __ptext16:	
  5463 ;; *************** function ___wmul *****************
  5464 ;; Defined at:
  5465 ;;		line 15 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\Umul16.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  multiplier      2    0[COMMON] unsigned int 
  5468 ;;  multiplicand    2    2[COMMON] unsigned int 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  product         2    4[COMMON] unsigned int 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  2    0[COMMON] unsigned int 
  5473 ;; Registers used:
  5474 ;;		wreg, status,2, status,0
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5480 ;;      Params:         4       0       0       0       0
  5481 ;;      Locals:         2       0       0       0       0
  5482 ;;      Temps:          0       0       0       0       0
  5483 ;;      Totals:         6       0       0       0       0
  5484 ;;Total ram usage:        6 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; This function calls:
  5487 ;;		Nothing
  5488 ;; This function is called by:
  5489 ;;		_sprintf
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           
  5494                           ;psect for function ___wmul
  5495  1E69                     ___wmul:
  5496  1E69                     l2632:	
  5497                           ;incstack = 0
  5498                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5499                           
  5500  1E69  01F4               	clrf	___wmul@product
  5501  1E6A  01F5               	clrf	___wmul@product+1
  5502  1E6B                     l2634:
  5503  1E6B  1C70               	btfss	___wmul@multiplier,0
  5504  1E6C  2E6E               	goto	u3701
  5505  1E6D  2E6F               	goto	u3700
  5506  1E6E                     u3701:
  5507  1E6E  2E75               	goto	l394
  5508  1E6F                     u3700:
  5509  1E6F                     l2636:
  5510  1E6F  0872               	movf	___wmul@multiplicand,w
  5511  1E70  07F4               	addwf	___wmul@product,f
  5512  1E71  1803               	skipnc
  5513  1E72  0AF5               	incf	___wmul@product+1,f
  5514  1E73  0873               	movf	___wmul@multiplicand+1,w
  5515  1E74  07F5               	addwf	___wmul@product+1,f
  5516  1E75                     l394:
  5517  1E75  3001               	movlw	1
  5518  1E76                     u3715:
  5519  1E76  1003               	clrc
  5520  1E77  0DF2               	rlf	___wmul@multiplicand,f
  5521  1E78  0DF3               	rlf	___wmul@multiplicand+1,f
  5522  1E79  3EFF               	addlw	-1
  5523  1E7A  1D03               	skipz
  5524  1E7B  2E76               	goto	u3715
  5525  1E7C                     l2638:
  5526  1E7C  3001               	movlw	1
  5527  1E7D                     u3725:
  5528  1E7D  1003               	clrc
  5529  1E7E  0CF1               	rrf	___wmul@multiplier+1,f
  5530  1E7F  0CF0               	rrf	___wmul@multiplier,f
  5531  1E80  3EFF               	addlw	-1
  5532  1E81  1D03               	skipz
  5533  1E82  2E7D               	goto	u3725
  5534  1E83                     l2640:
  5535  1E83  0870               	movf	___wmul@multiplier,w
  5536  1E84  0471               	iorwf	___wmul@multiplier+1,w
  5537  1E85  1D03               	btfss	3,2
  5538  1E86  2E88               	goto	u3731
  5539  1E87  2E89               	goto	u3730
  5540  1E88                     u3731:
  5541  1E88  2E6B               	goto	l2634
  5542  1E89                     u3730:
  5543  1E89                     l2642:
  5544  1E89  0875               	movf	___wmul@product+1,w
  5545  1E8A  00F1               	movwf	?___wmul+1
  5546  1E8B  0874               	movf	___wmul@product,w
  5547  1E8C  00F0               	movwf	?___wmul
  5548  1E8D                     l396:
  5549  1E8D  0008               	return
  5550  1E8E                     __end_of___wmul:
  5551                           
  5552                           	psect	text17
  5553  10B6                     __ptext17:	
  5554 ;; *************** function ___llmod *****************
  5555 ;; Defined at:
  5556 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\llmod.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  divisor         4    0[COMMON] unsigned long 
  5559 ;;  dividend        4    4[COMMON] unsigned long 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  counter         1    9[COMMON] unsigned char 
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  4    0[COMMON] unsigned long 
  5564 ;; Registers used:
  5565 ;;		wreg, status,2, status,0
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5571 ;;      Params:         8       0       0       0       0
  5572 ;;      Locals:         1       0       0       0       0
  5573 ;;      Temps:          1       0       0       0       0
  5574 ;;      Totals:        10       0       0       0       0
  5575 ;;Total ram usage:       10 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_sprintf
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           
  5585                           ;psect for function ___llmod
  5586  10B6                     ___llmod:
  5587  10B6                     l2830:	
  5588                           ;incstack = 0
  5589                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5590                           
  5591  10B6  0873               	movf	___llmod@divisor+3,w
  5592  10B7  0472               	iorwf	___llmod@divisor+2,w
  5593  10B8  0471               	iorwf	___llmod@divisor+1,w
  5594  10B9  0470               	iorwf	___llmod@divisor,w
  5595  10BA  1903               	skipnz
  5596  10BB  28BD               	goto	u4141
  5597  10BC  28BE               	goto	u4140
  5598  10BD                     u4141:
  5599  10BD  2901               	goto	l2846
  5600  10BE                     u4140:
  5601  10BE                     l2832:
  5602  10BE  01F9               	clrf	___llmod@counter
  5603  10BF  0AF9               	incf	___llmod@counter,f
  5604  10C0  28CE               	goto	l2836
  5605  10C1                     l2834:
  5606  10C1  3001               	movlw	1
  5607  10C2  00F8               	movwf	??___llmod
  5608  10C3                     u4155:
  5609  10C3  1003               	clrc
  5610  10C4  0DF0               	rlf	___llmod@divisor,f
  5611  10C5  0DF1               	rlf	___llmod@divisor+1,f
  5612  10C6  0DF2               	rlf	___llmod@divisor+2,f
  5613  10C7  0DF3               	rlf	___llmod@divisor+3,f
  5614  10C8  0BF8               	decfsz	??___llmod,f
  5615  10C9  28C3               	goto	u4155
  5616  10CA  3001               	movlw	1
  5617  10CB  00F8               	movwf	??___llmod
  5618  10CC  0878               	movf	??___llmod,w
  5619  10CD  07F9               	addwf	___llmod@counter,f
  5620  10CE                     l2836:
  5621  10CE  1FF3               	btfss	___llmod@divisor+3,7
  5622  10CF  28D1               	goto	u4161
  5623  10D0  28D2               	goto	u4160
  5624  10D1                     u4161:
  5625  10D1  28C1               	goto	l2834
  5626  10D2                     u4160:
  5627  10D2                     l2838:
  5628  10D2  0873               	movf	___llmod@divisor+3,w
  5629  10D3  0277               	subwf	___llmod@dividend+3,w
  5630  10D4  1D03               	skipz
  5631  10D5  28E0               	goto	u4175
  5632  10D6  0872               	movf	___llmod@divisor+2,w
  5633  10D7  0276               	subwf	___llmod@dividend+2,w
  5634  10D8  1D03               	skipz
  5635  10D9  28E0               	goto	u4175
  5636  10DA  0871               	movf	___llmod@divisor+1,w
  5637  10DB  0275               	subwf	___llmod@dividend+1,w
  5638  10DC  1D03               	skipz
  5639  10DD  28E0               	goto	u4175
  5640  10DE  0870               	movf	___llmod@divisor,w
  5641  10DF  0274               	subwf	___llmod@dividend,w
  5642  10E0                     u4175:
  5643  10E0  1C03               	skipc
  5644  10E1  28E3               	goto	u4171
  5645  10E2  28E4               	goto	u4170
  5646  10E3                     u4171:
  5647  10E3  28F2               	goto	l2842
  5648  10E4                     u4170:
  5649  10E4                     l2840:
  5650  10E4  0870               	movf	___llmod@divisor,w
  5651  10E5  02F4               	subwf	___llmod@dividend,f
  5652  10E6  0871               	movf	___llmod@divisor+1,w
  5653  10E7  1C03               	skipc
  5654  10E8  0F71               	incfsz	___llmod@divisor+1,w
  5655  10E9  02F5               	subwf	___llmod@dividend+1,f
  5656  10EA  0872               	movf	___llmod@divisor+2,w
  5657  10EB  1C03               	skipc
  5658  10EC  0F72               	incfsz	___llmod@divisor+2,w
  5659  10ED  02F6               	subwf	___llmod@dividend+2,f
  5660  10EE  0873               	movf	___llmod@divisor+3,w
  5661  10EF  1C03               	skipc
  5662  10F0  0F73               	incfsz	___llmod@divisor+3,w
  5663  10F1  02F7               	subwf	___llmod@dividend+3,f
  5664  10F2                     l2842:
  5665  10F2  3001               	movlw	1
  5666  10F3                     u4185:
  5667  10F3  1003               	clrc
  5668  10F4  0CF3               	rrf	___llmod@divisor+3,f
  5669  10F5  0CF2               	rrf	___llmod@divisor+2,f
  5670  10F6  0CF1               	rrf	___llmod@divisor+1,f
  5671  10F7  0CF0               	rrf	___llmod@divisor,f
  5672  10F8  3EFF               	addlw	-1
  5673  10F9  1D03               	skipz
  5674  10FA  28F3               	goto	u4185
  5675  10FB                     l2844:
  5676  10FB  3001               	movlw	1
  5677  10FC  02F9               	subwf	___llmod@counter,f
  5678  10FD  1D03               	btfss	3,2
  5679  10FE  2900               	goto	u4191
  5680  10FF  2901               	goto	u4190
  5681  1100                     u4191:
  5682  1100  28D2               	goto	l2838
  5683  1101                     u4190:
  5684  1101                     l2846:
  5685  1101  0877               	movf	___llmod@dividend+3,w
  5686  1102  00F3               	movwf	?___llmod+3
  5687  1103  0876               	movf	___llmod@dividend+2,w
  5688  1104  00F2               	movwf	?___llmod+2
  5689  1105  0875               	movf	___llmod@dividend+1,w
  5690  1106  00F1               	movwf	?___llmod+1
  5691  1107  0874               	movf	___llmod@dividend,w
  5692  1108  00F0               	movwf	?___llmod
  5693  1109                     l765:
  5694  1109  0008               	return
  5695  110A                     __end_of___llmod:
  5696                           
  5697                           	psect	text18
  5698  1387                     __ptext18:	
  5699 ;; *************** function ___fttol *****************
  5700 ;; Defined at:
  5701 ;;		line 44 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\fttol.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;  f1              3   33[BANK0 ] float 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  lval            4   42[BANK0 ] unsigned long 
  5706 ;;  exp1            1   46[BANK0 ] unsigned char 
  5707 ;;  sign1           1   41[BANK0 ] unsigned char 
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  4   33[BANK0 ] long 
  5710 ;; Registers used:
  5711 ;;		wreg, status,2, status,0
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5717 ;;      Params:         0       4       0       0       0
  5718 ;;      Locals:         0       6       0       0       0
  5719 ;;      Temps:          0       4       0       0       0
  5720 ;;      Totals:         0      14       0       0       0
  5721 ;;Total ram usage:       14 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; This function calls:
  5724 ;;		Nothing
  5725 ;; This function is called by:
  5726 ;;		_sprintf
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           
  5731                           ;psect for function ___fttol
  5732  1387                     ___fttol:
  5733  1387                     l2788:	
  5734                           ;incstack = 0
  5735                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5736                           
  5737  1387  1283               	bcf	3,5	;RP0=0, select bank0
  5738  1388  1303               	bcf	3,6	;RP1=0, select bank0
  5739  1389  0841               	movf	___fttol@f1,w
  5740  138A  00C5               	movwf	??___fttol
  5741  138B  0842               	movf	___fttol@f1+1,w
  5742  138C  00C6               	movwf	??___fttol+1
  5743  138D  0843               	movf	___fttol@f1+2,w
  5744  138E  00C7               	movwf	??___fttol+2
  5745  138F  1003               	clrc
  5746  1390  0D46               	rlf	??___fttol+1,w
  5747  1391  0D47               	rlf	??___fttol+2,w
  5748  1392  00C8               	movwf	??___fttol+3
  5749  1393  0848               	movf	??___fttol+3,w
  5750  1394  00CE               	movwf	___fttol@exp1
  5751  1395  084E               	movf	___fttol@exp1,w
  5752  1396  1D03               	btfss	3,2
  5753  1397  2B99               	goto	u4041
  5754  1398  2B9A               	goto	u4040
  5755  1399                     u4041:
  5756  1399  2BA3               	goto	l2794
  5757  139A                     u4040:
  5758  139A                     l2790:
  5759  139A  3000               	movlw	0
  5760  139B  00C4               	movwf	?___fttol+3
  5761  139C  3000               	movlw	0
  5762  139D  00C3               	movwf	?___fttol+2
  5763  139E  3000               	movlw	0
  5764  139F  00C2               	movwf	?___fttol+1
  5765  13A0  3000               	movlw	0
  5766  13A1  00C1               	movwf	?___fttol
  5767  13A2  2C12               	goto	l724
  5768  13A3                     l2794:
  5769  13A3  0841               	movf	___fttol@f1,w
  5770  13A4  00C5               	movwf	??___fttol
  5771  13A5  0842               	movf	___fttol@f1+1,w
  5772  13A6  00C6               	movwf	??___fttol+1
  5773  13A7  0843               	movf	___fttol@f1+2,w
  5774  13A8  00C7               	movwf	??___fttol+2
  5775  13A9  3017               	movlw	23
  5776  13AA                     u4055:
  5777  13AA  1003               	clrc
  5778  13AB  0CC7               	rrf	??___fttol+2,f
  5779  13AC  0CC6               	rrf	??___fttol+1,f
  5780  13AD  0CC5               	rrf	??___fttol,f
  5781  13AE                     u4050:
  5782  13AE  3EFF               	addlw	-1
  5783  13AF  1D03               	skipz
  5784  13B0  2BAA               	goto	u4055
  5785  13B1  0845               	movf	??___fttol,w
  5786  13B2  00C8               	movwf	??___fttol+3
  5787  13B3  0848               	movf	??___fttol+3,w
  5788  13B4  00C9               	movwf	___fttol@sign1
  5789  13B5                     l2796:
  5790  13B5  17C2               	bsf	___fttol@f1+1,7
  5791  13B6                     l2798:
  5792  13B6  30FF               	movlw	255
  5793  13B7  05C1               	andwf	___fttol@f1,f
  5794  13B8  30FF               	movlw	255
  5795  13B9  05C2               	andwf	___fttol@f1+1,f
  5796  13BA  3000               	movlw	0
  5797  13BB  05C3               	andwf	___fttol@f1+2,f
  5798  13BC                     l2800:
  5799  13BC  0841               	movf	___fttol@f1,w
  5800  13BD  00CA               	movwf	___fttol@lval
  5801  13BE  0842               	movf	___fttol@f1+1,w
  5802  13BF  00CB               	movwf	___fttol@lval+1
  5803  13C0  0843               	movf	___fttol@f1+2,w
  5804  13C1  00CC               	movwf	___fttol@lval+2
  5805  13C2  01CD               	clrf	___fttol@lval+3
  5806  13C3                     l2802:
  5807  13C3  308E               	movlw	142
  5808  13C4  02CE               	subwf	___fttol@exp1,f
  5809  13C5                     l2804:
  5810  13C5  1FCE               	btfss	___fttol@exp1,7
  5811  13C6  2BC8               	goto	u4061
  5812  13C7  2BC9               	goto	u4060
  5813  13C8                     u4061:
  5814  13C8  2BE3               	goto	l2814
  5815  13C9                     u4060:
  5816  13C9                     l2806:
  5817  13C9  084E               	movf	___fttol@exp1,w
  5818  13CA  3A80               	xorlw	128
  5819  13CB  3E8F               	addlw	143
  5820  13CC  1803               	skipnc
  5821  13CD  2BCF               	goto	u4071
  5822  13CE  2BD0               	goto	u4070
  5823  13CF                     u4071:
  5824  13CF  2BD1               	goto	l2812
  5825  13D0                     u4070:
  5826  13D0  2B9A               	goto	l2790
  5827  13D1                     l2812:
  5828  13D1  3001               	movlw	1
  5829  13D2                     u4085:
  5830  13D2  1003               	clrc
  5831  13D3  0CCD               	rrf	___fttol@lval+3,f
  5832  13D4  0CCC               	rrf	___fttol@lval+2,f
  5833  13D5  0CCB               	rrf	___fttol@lval+1,f
  5834  13D6  0CCA               	rrf	___fttol@lval,f
  5835  13D7  3EFF               	addlw	-1
  5836  13D8  1D03               	skipz
  5837  13D9  2BD2               	goto	u4085
  5838  13DA  3001               	movlw	1
  5839  13DB  00C5               	movwf	??___fttol
  5840  13DC  0845               	movf	??___fttol,w
  5841  13DD  07CE               	addwf	___fttol@exp1,f
  5842  13DE  1D03               	btfss	3,2
  5843  13DF  2BE1               	goto	u4091
  5844  13E0  2BE2               	goto	u4090
  5845  13E1                     u4091:
  5846  13E1  2BD1               	goto	l2812
  5847  13E2                     u4090:
  5848  13E2  2BFA               	goto	l2822
  5849  13E3                     l2814:
  5850  13E3  3018               	movlw	24
  5851  13E4  024E               	subwf	___fttol@exp1,w
  5852  13E5  1C03               	skipc
  5853  13E6  2BE8               	goto	u4101
  5854  13E7  2BE9               	goto	u4100
  5855  13E8                     u4101:
  5856  13E8  2BF5               	goto	l731
  5857  13E9                     u4100:
  5858  13E9  2B9A               	goto	l2790
  5859  13EA                     l2820:
  5860  13EA  3001               	movlw	1
  5861  13EB  00C5               	movwf	??___fttol
  5862  13EC                     u4115:
  5863  13EC  1003               	clrc
  5864  13ED  0DCA               	rlf	___fttol@lval,f
  5865  13EE  0DCB               	rlf	___fttol@lval+1,f
  5866  13EF  0DCC               	rlf	___fttol@lval+2,f
  5867  13F0  0DCD               	rlf	___fttol@lval+3,f
  5868  13F1  0BC5               	decfsz	??___fttol,f
  5869  13F2  2BEC               	goto	u4115
  5870  13F3  3001               	movlw	1
  5871  13F4  02CE               	subwf	___fttol@exp1,f
  5872  13F5                     l731:
  5873  13F5  084E               	movf	___fttol@exp1,w
  5874  13F6  1D03               	btfss	3,2
  5875  13F7  2BF9               	goto	u4121
  5876  13F8  2BFA               	goto	u4120
  5877  13F9                     u4121:
  5878  13F9  2BEA               	goto	l2820
  5879  13FA                     u4120:
  5880  13FA                     l2822:
  5881  13FA  0849               	movf	___fttol@sign1,w
  5882  13FB  1903               	btfsc	3,2
  5883  13FC  2BFE               	goto	u4131
  5884  13FD  2BFF               	goto	u4130
  5885  13FE                     u4131:
  5886  13FE  2C0A               	goto	l2826
  5887  13FF                     u4130:
  5888  13FF                     l2824:
  5889  13FF  09CA               	comf	___fttol@lval,f
  5890  1400  09CB               	comf	___fttol@lval+1,f
  5891  1401  09CC               	comf	___fttol@lval+2,f
  5892  1402  09CD               	comf	___fttol@lval+3,f
  5893  1403  0ACA               	incf	___fttol@lval,f
  5894  1404  1903               	skipnz
  5895  1405  0ACB               	incf	___fttol@lval+1,f
  5896  1406  1903               	skipnz
  5897  1407  0ACC               	incf	___fttol@lval+2,f
  5898  1408  1903               	skipnz
  5899  1409  0ACD               	incf	___fttol@lval+3,f
  5900  140A                     l2826:
  5901  140A  084D               	movf	___fttol@lval+3,w
  5902  140B  00C4               	movwf	?___fttol+3
  5903  140C  084C               	movf	___fttol@lval+2,w
  5904  140D  00C3               	movwf	?___fttol+2
  5905  140E  084B               	movf	___fttol@lval+1,w
  5906  140F  00C2               	movwf	?___fttol+1
  5907  1410  084A               	movf	___fttol@lval,w
  5908  1411  00C1               	movwf	?___fttol
  5909  1412                     l724:
  5910  1412  0008               	return
  5911  1413                     __end_of___fttol:
  5912                           
  5913                           	psect	text19
  5914  1E44                     __ptext19:	
  5915 ;; *************** function ___ftsub *****************
  5916 ;; Defined at:
  5917 ;;		line 17 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftsub.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  f2              3   53[BANK0 ] float 
  5920 ;;  f1              3   56[BANK0 ] float 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;		None
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  3   53[BANK0 ] float 
  5925 ;; Registers used:
  5926 ;;		wreg, status,2, status,0, pclath, cstack
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5932 ;;      Params:         0       6       0       0       0
  5933 ;;      Locals:         0       0       0       0       0
  5934 ;;      Temps:          0       0       0       0       0
  5935 ;;      Totals:         0       6       0       0       0
  5936 ;;Total ram usage:        6 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:    2
  5939 ;; This function calls:
  5940 ;;		___ftadd
  5941 ;; This function is called by:
  5942 ;;		_sprintf
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           
  5947                           ;psect for function ___ftsub
  5948  1E44                     ___ftsub:
  5949  1E44                     l2780:	
  5950                           ;incstack = 0
  5951                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5952                           
  5953  1E44  1283               	bcf	3,5	;RP0=0, select bank0
  5954  1E45  1303               	bcf	3,6	;RP1=0, select bank0
  5955  1E46  0857               	movf	___ftsub@f2+2,w
  5956  1E47  0456               	iorwf	___ftsub@f2+1,w
  5957  1E48  0455               	iorwf	___ftsub@f2,w
  5958  1E49  1903               	skipnz
  5959  1E4A  2E4C               	goto	u4031
  5960  1E4B  2E4D               	goto	u4030
  5961  1E4C                     u4031:
  5962  1E4C  2E4F               	goto	l2784
  5963  1E4D                     u4030:
  5964  1E4D                     l2782:
  5965  1E4D  3080               	movlw	128
  5966  1E4E  06D7               	xorwf	___ftsub@f2+2,f
  5967  1E4F                     l2784:
  5968  1E4F  0858               	movf	___ftsub@f1,w
  5969  1E50  00C8               	movwf	___ftadd@f1
  5970  1E51  0859               	movf	___ftsub@f1+1,w
  5971  1E52  00C9               	movwf	___ftadd@f1+1
  5972  1E53  085A               	movf	___ftsub@f1+2,w
  5973  1E54  00CA               	movwf	___ftadd@f1+2
  5974  1E55  0855               	movf	___ftsub@f2,w
  5975  1E56  00CB               	movwf	___ftadd@f2
  5976  1E57  0856               	movf	___ftsub@f2+1,w
  5977  1E58  00CC               	movwf	___ftadd@f2+1
  5978  1E59  0857               	movf	___ftsub@f2+2,w
  5979  1E5A  00CD               	movwf	___ftadd@f2+2
  5980  1E5B  120A  158A  214F  160A  158A  	fcall	___ftadd
  5981  1E60  1283               	bcf	3,5	;RP0=0, select bank0
  5982  1E61  1303               	bcf	3,6	;RP1=0, select bank0
  5983  1E62  0848               	movf	?___ftadd,w
  5984  1E63  00D5               	movwf	?___ftsub
  5985  1E64  0849               	movf	?___ftadd+1,w
  5986  1E65  00D6               	movwf	?___ftsub+1
  5987  1E66  084A               	movf	?___ftadd+2,w
  5988  1E67  00D7               	movwf	?___ftsub+2
  5989  1E68                     l720:
  5990  1E68  0008               	return
  5991  1E69                     __end_of___ftsub:
  5992                           
  5993                           	psect	text20
  5994  1099                     __ptext20:	
  5995 ;; *************** function ___ftneg *****************
  5996 ;; Defined at:
  5997 ;;		line 15 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftneg.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;  f1              3    0[COMMON] float 
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;		None
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  3    0[COMMON] float 
  6004 ;; Registers used:
  6005 ;;		wreg
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6011 ;;      Params:         3       0       0       0       0
  6012 ;;      Locals:         0       0       0       0       0
  6013 ;;      Temps:          0       0       0       0       0
  6014 ;;      Totals:         3       0       0       0       0
  6015 ;;Total ram usage:        3 bytes
  6016 ;; Hardware stack levels used:    1
  6017 ;; This function calls:
  6018 ;;		Nothing
  6019 ;; This function is called by:
  6020 ;;		_sprintf
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           
  6025                           ;psect for function ___ftneg
  6026  1099                     ___ftneg:
  6027  1099                     l2772:	
  6028                           ;incstack = 0
  6029                           ; Regs used in ___ftneg: [wreg]
  6030                           
  6031  1099  0872               	movf	___ftneg@f1+2,w
  6032  109A  0471               	iorwf	___ftneg@f1+1,w
  6033  109B  0470               	iorwf	___ftneg@f1,w
  6034  109C  1903               	skipnz
  6035  109D  289F               	goto	u4021
  6036  109E  28A0               	goto	u4020
  6037  109F                     u4021:
  6038  109F  28A2               	goto	l2776
  6039  10A0                     u4020:
  6040  10A0                     l2774:
  6041  10A0  3080               	movlw	128
  6042  10A1  06F2               	xorwf	___ftneg@f1+2,f
  6043  10A2                     l2776:
  6044  10A2                     l714:
  6045  10A2  0008               	return
  6046  10A3                     __end_of___ftneg:
  6047                           
  6048                           	psect	text21
  6049  1F4A                     __ptext21:	
  6050 ;; *************** function ___ftge *****************
  6051 ;; Defined at:
  6052 ;;		line 4 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftge.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;  ff1             3    0[COMMON] float 
  6055 ;;  ff2             3    3[COMMON] float 
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;		None
  6058 ;; Return value:  Size  Location     Type
  6059 ;;		None               void
  6060 ;; Registers used:
  6061 ;;		wreg, status,2, status,0
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6067 ;;      Params:         6       0       0       0       0
  6068 ;;      Locals:         0       0       0       0       0
  6069 ;;      Temps:          0       0       0       0       0
  6070 ;;      Totals:         6       0       0       0       0
  6071 ;;Total ram usage:        6 bytes
  6072 ;; Hardware stack levels used:    1
  6073 ;; This function calls:
  6074 ;;		Nothing
  6075 ;; This function is called by:
  6076 ;;		_sprintf
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           
  6081                           ;psect for function ___ftge
  6082  1F4A                     ___ftge:
  6083  1F4A                     l2752:	
  6084                           ;incstack = 0
  6085                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6086                           
  6087  1F4A  1FF2               	btfss	___ftge@ff1+2,7
  6088  1F4B  2F4D               	goto	u3991
  6089  1F4C  2F4E               	goto	u3990
  6090  1F4D                     u3991:
  6091  1F4D  2F5B               	goto	l2756
  6092  1F4E                     u3990:
  6093  1F4E                     l2754:
  6094  1F4E  0870               	movf	___ftge@ff1,w
  6095  1F4F  3C00               	sublw	0
  6096  1F50  00F0               	movwf	___ftge@ff1
  6097  1F51  0871               	movf	___ftge@ff1+1,w
  6098  1F52  1C03               	skipc
  6099  1F53  0F71               	incfsz	___ftge@ff1+1,w
  6100  1F54  3C00               	sublw	0
  6101  1F55  00F1               	movwf	___ftge@ff1+1
  6102  1F56  0872               	movf	___ftge@ff1+2,w
  6103  1F57  1C03               	skipc
  6104  1F58  0F72               	incfsz	___ftge@ff1+2,w
  6105  1F59  3C80               	sublw	128
  6106  1F5A  00F2               	movwf	___ftge@ff1+2
  6107  1F5B                     l2756:
  6108  1F5B  1FF5               	btfss	___ftge@ff2+2,7
  6109  1F5C  2F5E               	goto	u4001
  6110  1F5D  2F5F               	goto	u4000
  6111  1F5E                     u4001:
  6112  1F5E  2F6C               	goto	l2760
  6113  1F5F                     u4000:
  6114  1F5F                     l2758:
  6115  1F5F  0873               	movf	___ftge@ff2,w
  6116  1F60  3C00               	sublw	0
  6117  1F61  00F3               	movwf	___ftge@ff2
  6118  1F62  0874               	movf	___ftge@ff2+1,w
  6119  1F63  1C03               	skipc
  6120  1F64  0F74               	incfsz	___ftge@ff2+1,w
  6121  1F65  3C00               	sublw	0
  6122  1F66  00F4               	movwf	___ftge@ff2+1
  6123  1F67  0875               	movf	___ftge@ff2+2,w
  6124  1F68  1C03               	skipc
  6125  1F69  0F75               	incfsz	___ftge@ff2+2,w
  6126  1F6A  3C80               	sublw	128
  6127  1F6B  00F5               	movwf	___ftge@ff2+2
  6128  1F6C                     l2760:
  6129  1F6C  3080               	movlw	128
  6130  1F6D  06F2               	xorwf	___ftge@ff1+2,f
  6131  1F6E                     l2762:
  6132  1F6E  3080               	movlw	128
  6133  1F6F  06F5               	xorwf	___ftge@ff2+2,f
  6134  1F70                     l2764:
  6135  1F70  0875               	movf	___ftge@ff2+2,w
  6136  1F71  0272               	subwf	___ftge@ff1+2,w
  6137  1F72  1D03               	skipz
  6138  1F73  2F7A               	goto	u4015
  6139  1F74  0874               	movf	___ftge@ff2+1,w
  6140  1F75  0271               	subwf	___ftge@ff1+1,w
  6141  1F76  1D03               	skipz
  6142  1F77  2F7A               	goto	u4015
  6143  1F78  0873               	movf	___ftge@ff2,w
  6144  1F79  0270               	subwf	___ftge@ff1,w
  6145  1F7A                     u4015:
  6146  1F7A  1803               	skipnc
  6147  1F7B  2F7D               	goto	u4011
  6148  1F7C  2F7E               	goto	u4010
  6149  1F7D                     u4011:
  6150  1F7D  2F80               	goto	l2768
  6151  1F7E                     u4010:
  6152  1F7E                     l2766:
  6153  1F7E  1003               	clrc
  6154  1F7F  2F81               	goto	l697
  6155  1F80                     l2768:
  6156  1F80  1403               	setc
  6157  1F81                     l697:
  6158  1F81  0008               	return
  6159  1F82                     __end_of___ftge:
  6160                           
  6161                           	psect	text22
  6162  1E31                     __ptext22:	
  6163 ;; *************** function _configIO *****************
  6164 ;; Defined at:
  6165 ;;		line 44 in file "pic16f.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;		None
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;		None
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  1    wreg      void 
  6172 ;; Registers used:
  6173 ;;		status,2
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6179 ;;      Params:         0       0       0       0       0
  6180 ;;      Locals:         0       0       0       0       0
  6181 ;;      Temps:          0       0       0       0       0
  6182 ;;      Totals:         0       0       0       0       0
  6183 ;;Total ram usage:        0 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; This function calls:
  6186 ;;		Nothing
  6187 ;; This function is called by:
  6188 ;;		_main
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           
  6193                           ;psect for function _configIO
  6194  1E31                     _configIO:
  6195  1E31                     l2860:	
  6196                           ;incstack = 0
  6197                           ; Regs used in _configIO: [status,2]
  6198                           
  6199                           
  6200                           ;pic16f.c: 45:     TRISD=0;
  6201  1E31  1683               	bsf	3,5	;RP0=1, select bank1
  6202  1E32  1303               	bcf	3,6	;RP1=0, select bank1
  6203  1E33  0188               	clrf	8	;volatile
  6204                           
  6205                           ;pic16f.c: 46:     ANSEL=0;
  6206  1E34  1683               	bsf	3,5	;RP0=1, select bank3
  6207  1E35  1703               	bsf	3,6	;RP1=1, select bank3
  6208  1E36  0188               	clrf	8	;volatile
  6209                           
  6210                           ;pic16f.c: 47:     ANSELH=0;
  6211  1E37  0189               	clrf	9	;volatile
  6212                           
  6213                           ;pic16f.c: 48:     PORTD=0;
  6214  1E38  1283               	bcf	3,5	;RP0=0, select bank0
  6215  1E39  1303               	bcf	3,6	;RP1=0, select bank0
  6216  1E3A  0188               	clrf	8	;volatile
  6217  1E3B                     l2862:
  6218                           
  6219                           ;pic16f.c: 50:     INTCONbits.PEIE=1;
  6220  1E3B  170B               	bsf	11,6	;volatile
  6221  1E3C                     l2864:
  6222                           
  6223                           ;pic16f.c: 51:     PIE1bits.RCIE=1;
  6224  1E3C  1683               	bsf	3,5	;RP0=1, select bank1
  6225  1E3D  1303               	bcf	3,6	;RP1=0, select bank1
  6226  1E3E  168C               	bsf	12,5	;volatile
  6227  1E3F                     l2866:
  6228                           
  6229                           ;pic16f.c: 52:     PIR1bits.RCIF=0;
  6230  1E3F  1283               	bcf	3,5	;RP0=0, select bank0
  6231  1E40  1303               	bcf	3,6	;RP1=0, select bank0
  6232  1E41  128C               	bcf	12,5	;volatile
  6233  1E42                     l2868:
  6234                           
  6235                           ;pic16f.c: 53:     INTCONbits.GIE=1;
  6236  1E42  178B               	bsf	11,7	;volatile
  6237  1E43                     l43:
  6238  1E43  0008               	return
  6239  1E44                     __end_of_configIO:
  6240                           
  6241                           	psect	text23
  6242  1163                     __ptext23:	
  6243 ;; *************** function _aht_GetTemperature *****************
  6244 ;; Defined at:
  6245 ;;		line 62 in file "aht10.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;		None
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;  value           3   56[BANK0 ] float 
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  3   53[BANK0 ] float 
  6252 ;; Registers used:
  6253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6259 ;;      Params:         0       3       0       0       0
  6260 ;;      Locals:         0       3       0       0       0
  6261 ;;      Temps:          0       0       0       0       0
  6262 ;;      Totals:         0       6       0       0       0
  6263 ;;Total ram usage:        6 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; Hardware stack levels required when called:    3
  6266 ;; This function calls:
  6267 ;;		___ftadd
  6268 ;;		___ftdiv
  6269 ;;		___ftmul
  6270 ;;		___lltoft
  6271 ;;		_aht_readSensor
  6272 ;; This function is called by:
  6273 ;;		_main
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           
  6278                           ;psect for function _aht_GetTemperature
  6279  1163                     _aht_GetTemperature:
  6280  1163                     l2904:	
  6281                           ;incstack = 0
  6282                           ; Regs used in _aht_GetTemperature: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6283                           
  6284                           
  6285                           ;aht10.c: 64:     float value = aht_readSensor(GetTempCmd);
  6286  1163  3000               	movlw	0
  6287  1164  00F6               	movwf	aht_readSensor@GetDataCmd
  6288  1165  00F7               	movwf	aht_readSensor@GetDataCmd+1
  6289  1166  160A  118A  26F7  160A  118A  	fcall	_aht_readSensor
  6290  116B  0879               	movf	?_aht_readSensor+3,w
  6291  116C  00FD               	movwf	___lltoft@c+3
  6292  116D  0878               	movf	?_aht_readSensor+2,w
  6293  116E  00FC               	movwf	___lltoft@c+2
  6294  116F  0877               	movf	?_aht_readSensor+1,w
  6295  1170  00FB               	movwf	___lltoft@c+1
  6296  1171  0876               	movf	?_aht_readSensor,w
  6297  1172  00FA               	movwf	___lltoft@c
  6298  1173  160A  158A  26E1  160A  118A  	fcall	___lltoft
  6299  1178  087A               	movf	?___lltoft,w
  6300  1179  1283               	bcf	3,5	;RP0=0, select bank0
  6301  117A  1303               	bcf	3,6	;RP1=0, select bank0
  6302  117B  00D8               	movwf	aht_GetTemperature@value
  6303  117C  087B               	movf	?___lltoft+1,w
  6304  117D  00D9               	movwf	aht_GetTemperature@value+1
  6305  117E  087C               	movf	?___lltoft+2,w
  6306  117F  00DA               	movwf	aht_GetTemperature@value+2
  6307  1180                     l2906:
  6308                           
  6309                           ;aht10.c: 65:     return ((200 * value) / 1048576) - 50;
  6310  1180  3000               	movlw	0
  6311  1181  00C8               	movwf	___ftadd@f1
  6312  1182  3048               	movlw	72
  6313  1183  00C9               	movwf	___ftadd@f1+1
  6314  1184  30C2               	movlw	194
  6315  1185  00CA               	movwf	___ftadd@f1+2
  6316  1186  3000               	movlw	0
  6317  1187  00B8               	movwf	___ftdiv@f2
  6318  1188  3080               	movlw	128
  6319  1189  00B9               	movwf	___ftdiv@f2+1
  6320  118A  3049               	movlw	73
  6321  118B  00BA               	movwf	___ftdiv@f2+2
  6322  118C  3000               	movlw	0
  6323  118D  00A8               	movwf	___ftmul@f1
  6324  118E  3048               	movlw	72
  6325  118F  00A9               	movwf	___ftmul@f1+1
  6326  1190  3043               	movlw	67
  6327  1191  00AA               	movwf	___ftmul@f1+2
  6328  1192  0858               	movf	aht_GetTemperature@value,w
  6329  1193  00AB               	movwf	___ftmul@f2
  6330  1194  0859               	movf	aht_GetTemperature@value+1,w
  6331  1195  00AC               	movwf	___ftmul@f2+1
  6332  1196  085A               	movf	aht_GetTemperature@value+2,w
  6333  1197  00AD               	movwf	___ftmul@f2+2
  6334  1198  120A  118A  200C  160A  118A  	fcall	___ftmul
  6335  119D  1283               	bcf	3,5	;RP0=0, select bank0
  6336  119E  1303               	bcf	3,6	;RP1=0, select bank0
  6337  119F  0828               	movf	?___ftmul,w
  6338  11A0  00BB               	movwf	___ftdiv@f1
  6339  11A1  0829               	movf	?___ftmul+1,w
  6340  11A2  00BC               	movwf	___ftdiv@f1+1
  6341  11A3  082A               	movf	?___ftmul+2,w
  6342  11A4  00BD               	movwf	___ftdiv@f1+2
  6343  11A5  160A  118A  256D  160A  118A  	fcall	___ftdiv
  6344  11AA  1283               	bcf	3,5	;RP0=0, select bank0
  6345  11AB  1303               	bcf	3,6	;RP1=0, select bank0
  6346  11AC  0838               	movf	?___ftdiv,w
  6347  11AD  00CB               	movwf	___ftadd@f2
  6348  11AE  0839               	movf	?___ftdiv+1,w
  6349  11AF  00CC               	movwf	___ftadd@f2+1
  6350  11B0  083A               	movf	?___ftdiv+2,w
  6351  11B1  00CD               	movwf	___ftadd@f2+2
  6352  11B2  120A  158A  214F  160A  118A  	fcall	___ftadd
  6353  11B7  1283               	bcf	3,5	;RP0=0, select bank0
  6354  11B8  1303               	bcf	3,6	;RP1=0, select bank0
  6355  11B9  0848               	movf	?___ftadd,w
  6356  11BA  00D5               	movwf	?_aht_GetTemperature
  6357  11BB  0849               	movf	?___ftadd+1,w
  6358  11BC  00D6               	movwf	?_aht_GetTemperature+1
  6359  11BD  084A               	movf	?___ftadd+2,w
  6360  11BE  00D7               	movwf	?_aht_GetTemperature+2
  6361  11BF                     l152:
  6362  11BF  0008               	return
  6363  11C0                     __end_of_aht_GetTemperature:
  6364                           
  6365                           	psect	text24
  6366  16F7                     __ptext24:	
  6367 ;; *************** function _aht_readSensor *****************
  6368 ;; Defined at:
  6369 ;;		line 72 in file "aht10.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  GetDataCmd      2    6[COMMON] int 
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;  i               1   40[BANK0 ] unsigned char 
  6374 ;;  temp           24   12[BANK0 ] unsigned long [6]
  6375 ;;  result          4   36[BANK0 ] unsigned long 
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  4    6[COMMON] unsigned long 
  6378 ;; Registers used:
  6379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6385 ;;      Params:         4       0       0       0       0
  6386 ;;      Locals:         0      29       0       0       0
  6387 ;;      Temps:          0      12       0       0       0
  6388 ;;      Totals:         4      41       0       0       0
  6389 ;;Total ram usage:       45 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:    2
  6392 ;; This function calls:
  6393 ;;		_I2C_Master_Read
  6394 ;;		_I2C_Master_Start
  6395 ;;		_I2C_Master_Stop
  6396 ;;		_I2C_Master_Write
  6397 ;; This function is called by:
  6398 ;;		_aht_GetTemperature
  6399 ;;		_aht_GetHumidity
  6400 ;; This function uses a non-reentrant model
  6401 ;;
  6402                           
  6403                           
  6404                           ;psect for function _aht_readSensor
  6405  16F7                     _aht_readSensor:
  6406  16F7                     l2430:	
  6407                           ;incstack = 0
  6408                           ; Regs used in _aht_readSensor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6409                           
  6410                           
  6411                           ;aht10.c: 72: unsigned long aht_readSensor(int GetDataCmd);aht10.c: 73: {;aht10.c: 74:  
      +                             unsigned long result, temp[6];;aht10.c: 76:     I2C_Master_Start();
  6412  16F7  160A  158A  25ED  160A  118A  	fcall	_I2C_Master_Start
  6413                           
  6414                           ;aht10.c: 77:     I2C_Master_Write(eSensorMeasureCmd[2]);
  6415  16FC  1683               	bsf	3,5	;RP0=1, select bank1
  6416  16FD  1303               	bcf	3,6	;RP1=0, select bank1
  6417  16FE  0851               	movf	(_eSensorMeasureCmd^(0+128)+2),w
  6418  16FF  1283               	bcf	3,5	;RP0=0, select bank0
  6419  1700  1303               	bcf	3,6	;RP1=0, select bank0
  6420  1701  00A0               	movwf	??_aht_readSensor
  6421  1702  01A1               	clrf	??_aht_readSensor+1
  6422  1703  0820               	movf	??_aht_readSensor,w
  6423  1704  00F0               	movwf	I2C_Master_Write@d
  6424  1705  0821               	movf	??_aht_readSensor+1,w
  6425  1706  00F1               	movwf	I2C_Master_Write@d+1
  6426  1707  160A  158A  25F6  160A  118A  	fcall	_I2C_Master_Write
  6427                           
  6428                           ;aht10.c: 78:     I2C_Master_Stop();
  6429  170C  120A  118A  2003  160A  118A  	fcall	_I2C_Master_Stop
  6430  1711                     l2432:
  6431                           
  6432                           ;aht10.c: 79:     _delay((unsigned long)((100)*(4000000/4000.0)));
  6433  1711  3082               	movlw	130
  6434  1712  1283               	bcf	3,5	;RP0=0, select bank0
  6435  1713  1303               	bcf	3,6	;RP1=0, select bank0
  6436  1714  00A1               	movwf	??_aht_readSensor+1
  6437  1715  30DD               	movlw	221
  6438  1716  00A0               	movwf	??_aht_readSensor
  6439  1717                     u4827:
  6440  1717  0BA0               	decfsz	??_aht_readSensor,f
  6441  1718  2F17               	goto	u4827
  6442  1719  0BA1               	decfsz	??_aht_readSensor+1,f
  6443  171A  2F17               	goto	u4827
  6444  171B                     l2434:
  6445                           
  6446                           ;aht10.c: 81:     I2C_Master_Start();
  6447  171B  160A  158A  25ED  160A  118A  	fcall	_I2C_Master_Start
  6448  1720                     l2436:
  6449                           
  6450                           ;aht10.c: 83:     for(unsigned char i = 0; I2C_Master_Read(1) > 0; i++)
  6451  1720  1283               	bcf	3,5	;RP0=0, select bank0
  6452  1721  1303               	bcf	3,6	;RP1=0, select bank0
  6453  1722  01C8               	clrf	aht_readSensor@i
  6454  1723  2F51               	goto	l2442
  6455  1724                     l2438:
  6456                           
  6457                           ;aht10.c: 84:     {;aht10.c: 85:         temp[i] = I2C_Master_Read(1);
  6458  1724  3001               	movlw	1
  6459  1725  00F0               	movwf	I2C_Master_Read@a
  6460  1726  3000               	movlw	0
  6461  1727  00F1               	movwf	I2C_Master_Read@a+1
  6462  1728  160A  158A  26B3  160A  118A  	fcall	_I2C_Master_Read
  6463  172D  0870               	movf	?_I2C_Master_Read,w
  6464  172E  1283               	bcf	3,5	;RP0=0, select bank0
  6465  172F  1303               	bcf	3,6	;RP1=0, select bank0
  6466  1730  00A0               	movwf	??_aht_readSensor
  6467  1731  0871               	movf	?_I2C_Master_Read+1,w
  6468  1732  00A1               	movwf	??_aht_readSensor+1
  6469  1733  01A2               	clrf	??_aht_readSensor+2
  6470  1734  01A3               	clrf	??_aht_readSensor+3
  6471  1735  0848               	movf	aht_readSensor@i,w
  6472  1736  00A4               	movwf	??_aht_readSensor+4
  6473  1737  3001               	movlw	1
  6474  1738                     u3285:
  6475  1738  1003               	clrc
  6476  1739  0DA4               	rlf	??_aht_readSensor+4,f
  6477  173A  3EFF               	addlw	-1
  6478  173B  1D03               	skipz
  6479  173C  2F38               	goto	u3285
  6480  173D  1003               	clrc
  6481  173E  0D24               	rlf	??_aht_readSensor+4,w
  6482  173F  3E2C               	addlw	(low (aht_readSensor@temp| 0))& (0+255)
  6483  1740  0084               	movwf	4
  6484  1741  0820               	movf	??_aht_readSensor,w
  6485  1742  1383               	bcf	3,7	;select IRP bank0
  6486  1743  0080               	movwf	0
  6487  1744  0A84               	incf	4,f
  6488  1745  0821               	movf	??_aht_readSensor+1,w
  6489  1746  0080               	movwf	0
  6490  1747  0A84               	incf	4,f
  6491  1748  0822               	movf	??_aht_readSensor+2,w
  6492  1749  0080               	movwf	0
  6493  174A  0A84               	incf	4,f
  6494  174B  0823               	movf	??_aht_readSensor+3,w
  6495  174C  0080               	movwf	0
  6496  174D                     l2440:
  6497                           
  6498                           ;aht10.c: 86:     }
  6499  174D  3001               	movlw	1
  6500  174E  00A0               	movwf	??_aht_readSensor
  6501  174F  0820               	movf	??_aht_readSensor,w
  6502  1750  07C8               	addwf	aht_readSensor@i,f
  6503  1751                     l2442:
  6504  1751  3001               	movlw	1
  6505  1752  00F0               	movwf	I2C_Master_Read@a
  6506  1753  3000               	movlw	0
  6507  1754  00F1               	movwf	I2C_Master_Read@a+1
  6508  1755  160A  158A  26B3  160A  118A  	fcall	_I2C_Master_Read
  6509  175A  0870               	movf	?_I2C_Master_Read,w
  6510  175B  0471               	iorwf	?_I2C_Master_Read+1,w
  6511  175C  1D03               	btfss	3,2
  6512  175D  2F5F               	goto	u3291
  6513  175E  2F60               	goto	u3290
  6514  175F                     u3291:
  6515  175F  2F24               	goto	l2438
  6516  1760                     u3290:
  6517  1760                     l2444:
  6518                           
  6519                           ;aht10.c: 88:     if(GetDataCmd)
  6520  1760  0876               	movf	aht_readSensor@GetDataCmd,w
  6521  1761  0477               	iorwf	aht_readSensor@GetDataCmd+1,w
  6522  1762  1903               	btfsc	3,2
  6523  1763  2F65               	goto	u3301
  6524  1764  2F66               	goto	u3300
  6525  1765                     u3301:
  6526  1765  2FB4               	goto	l2448
  6527  1766                     u3300:
  6528  1766                     l2446:
  6529                           
  6530                           ;aht10.c: 89:     {;aht10.c: 90:         result = ((temp[1] << 16) | (temp[2] << 8) | te
      +                          mp[3]) >> 4;
  6531  1766  1283               	bcf	3,5	;RP0=0, select bank0
  6532  1767  1303               	bcf	3,6	;RP1=0, select bank0
  6533  1768  0838               	movf	aht_readSensor@temp+12,w
  6534  1769  00A0               	movwf	??_aht_readSensor
  6535  176A  0839               	movf	aht_readSensor@temp+13,w
  6536  176B  00A1               	movwf	??_aht_readSensor+1
  6537  176C  083A               	movf	aht_readSensor@temp+14,w
  6538  176D  00A2               	movwf	??_aht_readSensor+2
  6539  176E  083B               	movf	aht_readSensor@temp+15,w
  6540  176F  00A3               	movwf	??_aht_readSensor+3
  6541  1770  0834               	movf	aht_readSensor@temp+8,w
  6542  1771  00A4               	movwf	??_aht_readSensor+4
  6543  1772  0835               	movf	aht_readSensor@temp+9,w
  6544  1773  00A5               	movwf	??_aht_readSensor+5
  6545  1774  0836               	movf	aht_readSensor@temp+10,w
  6546  1775  00A6               	movwf	??_aht_readSensor+6
  6547  1776  0837               	movf	aht_readSensor@temp+11,w
  6548  1777  00A7               	movwf	??_aht_readSensor+7
  6549  1778  3008               	movlw	8
  6550  1779                     u3315:
  6551  1779  1003               	clrc
  6552  177A  0DA4               	rlf	??_aht_readSensor+4,f
  6553  177B  0DA5               	rlf	??_aht_readSensor+5,f
  6554  177C  0DA6               	rlf	??_aht_readSensor+6,f
  6555  177D  0DA7               	rlf	??_aht_readSensor+7,f
  6556  177E                     u3310:
  6557  177E  3EFF               	addlw	-1
  6558  177F  1D03               	skipz
  6559  1780  2F79               	goto	u3315
  6560  1781  0830               	movf	aht_readSensor@temp+4,w
  6561  1782  00A8               	movwf	??_aht_readSensor+8
  6562  1783  0831               	movf	aht_readSensor@temp+5,w
  6563  1784  00A9               	movwf	??_aht_readSensor+9
  6564  1785  0832               	movf	aht_readSensor@temp+6,w
  6565  1786  00AA               	movwf	??_aht_readSensor+10
  6566  1787  0833               	movf	aht_readSensor@temp+7,w
  6567  1788  00AB               	movwf	??_aht_readSensor+11
  6568  1789  3010               	movlw	16
  6569  178A                     u3325:
  6570  178A  1003               	clrc
  6571  178B  0DA8               	rlf	??_aht_readSensor+8,f
  6572  178C  0DA9               	rlf	??_aht_readSensor+9,f
  6573  178D  0DAA               	rlf	??_aht_readSensor+10,f
  6574  178E  0DAB               	rlf	??_aht_readSensor+11,f
  6575  178F                     u3320:
  6576  178F  3EFF               	addlw	-1
  6577  1790  1D03               	skipz
  6578  1791  2F8A               	goto	u3325
  6579  1792  0828               	movf	??_aht_readSensor+8,w
  6580  1793  04A4               	iorwf	??_aht_readSensor+4,f
  6581  1794  0829               	movf	??_aht_readSensor+9,w
  6582  1795  04A5               	iorwf	??_aht_readSensor+5,f
  6583  1796  082A               	movf	??_aht_readSensor+10,w
  6584  1797  04A6               	iorwf	??_aht_readSensor+6,f
  6585  1798  082B               	movf	??_aht_readSensor+11,w
  6586  1799  04A7               	iorwf	??_aht_readSensor+7,f
  6587  179A  0824               	movf	??_aht_readSensor+4,w
  6588  179B  04A0               	iorwf	??_aht_readSensor,f
  6589  179C  0825               	movf	??_aht_readSensor+5,w
  6590  179D  04A1               	iorwf	??_aht_readSensor+1,f
  6591  179E  0826               	movf	??_aht_readSensor+6,w
  6592  179F  04A2               	iorwf	??_aht_readSensor+2,f
  6593  17A0  0827               	movf	??_aht_readSensor+7,w
  6594  17A1  04A3               	iorwf	??_aht_readSensor+3,f
  6595  17A2  3004               	movlw	4
  6596  17A3                     u3335:
  6597  17A3  1003               	clrc
  6598  17A4  0CA3               	rrf	??_aht_readSensor+3,f
  6599  17A5  0CA2               	rrf	??_aht_readSensor+2,f
  6600  17A6  0CA1               	rrf	??_aht_readSensor+1,f
  6601  17A7  0CA0               	rrf	??_aht_readSensor,f
  6602  17A8                     u3330:
  6603  17A8  3EFF               	addlw	-1
  6604  17A9  1D03               	skipz
  6605  17AA  2FA3               	goto	u3335
  6606  17AB  0823               	movf	??_aht_readSensor+3,w
  6607  17AC  00C7               	movwf	aht_readSensor@result+3
  6608  17AD  0822               	movf	??_aht_readSensor+2,w
  6609  17AE  00C6               	movwf	aht_readSensor@result+2
  6610  17AF  0821               	movf	??_aht_readSensor+1,w
  6611  17B0  00C5               	movwf	aht_readSensor@result+1
  6612  17B1  0820               	movf	??_aht_readSensor,w
  6613  17B2  00C4               	movwf	aht_readSensor@result
  6614                           
  6615                           ;aht10.c: 91:     }
  6616  17B3  2FF7               	goto	l2450
  6617  17B4                     l2448:
  6618                           
  6619                           ;aht10.c: 93:     {;aht10.c: 94:         result = ((temp[3] & 0x0F) << 16) | (temp[4] <<
      +                           8) | temp[5];
  6620  17B4  1283               	bcf	3,5	;RP0=0, select bank0
  6621  17B5  1303               	bcf	3,6	;RP1=0, select bank0
  6622  17B6  083C               	movf	aht_readSensor@temp+16,w
  6623  17B7  00A0               	movwf	??_aht_readSensor
  6624  17B8  083D               	movf	aht_readSensor@temp+17,w
  6625  17B9  00A1               	movwf	??_aht_readSensor+1
  6626  17BA  083E               	movf	aht_readSensor@temp+18,w
  6627  17BB  00A2               	movwf	??_aht_readSensor+2
  6628  17BC  083F               	movf	aht_readSensor@temp+19,w
  6629  17BD  00A3               	movwf	??_aht_readSensor+3
  6630  17BE  3008               	movlw	8
  6631  17BF                     u3345:
  6632  17BF  1003               	clrc
  6633  17C0  0DA0               	rlf	??_aht_readSensor,f
  6634  17C1  0DA1               	rlf	??_aht_readSensor+1,f
  6635  17C2  0DA2               	rlf	??_aht_readSensor+2,f
  6636  17C3  0DA3               	rlf	??_aht_readSensor+3,f
  6637  17C4                     u3340:
  6638  17C4  3EFF               	addlw	-1
  6639  17C5  1D03               	skipz
  6640  17C6  2FBF               	goto	u3345
  6641  17C7  300C               	movlw	12
  6642  17C8  3E2C               	addlw	(low (aht_readSensor@temp| 0))& (0+255)
  6643  17C9  0084               	movwf	4
  6644  17CA  300F               	movlw	15
  6645  17CB  1383               	bcf	3,7	;select IRP bank0
  6646  17CC  0500               	andwf	0,w
  6647  17CD  00A4               	movwf	??_aht_readSensor+4
  6648  17CE  0A84               	incf	4,f
  6649  17CF  3000               	movlw	0
  6650  17D0  0500               	andwf	0,w
  6651  17D1  00A5               	movwf	??_aht_readSensor+5
  6652  17D2  0A84               	incf	4,f
  6653  17D3  3000               	movlw	0
  6654  17D4  0500               	andwf	0,w
  6655  17D5  00A6               	movwf	??_aht_readSensor+6
  6656  17D6  0A84               	incf	4,f
  6657  17D7  3000               	movlw	0
  6658  17D8  0500               	andwf	0,w
  6659  17D9  00A7               	movwf	??_aht_readSensor+7
  6660  17DA  3010               	movlw	16
  6661  17DB                     u3355:
  6662  17DB  1003               	clrc
  6663  17DC  0DA4               	rlf	??_aht_readSensor+4,f
  6664  17DD  0DA5               	rlf	??_aht_readSensor+5,f
  6665  17DE  0DA6               	rlf	??_aht_readSensor+6,f
  6666  17DF  0DA7               	rlf	??_aht_readSensor+7,f
  6667  17E0                     u3350:
  6668  17E0  3EFF               	addlw	-1
  6669  17E1  1D03               	skipz
  6670  17E2  2FDB               	goto	u3355
  6671  17E3  0824               	movf	??_aht_readSensor+4,w
  6672  17E4  04A0               	iorwf	??_aht_readSensor,f
  6673  17E5  0825               	movf	??_aht_readSensor+5,w
  6674  17E6  04A1               	iorwf	??_aht_readSensor+1,f
  6675  17E7  0826               	movf	??_aht_readSensor+6,w
  6676  17E8  04A2               	iorwf	??_aht_readSensor+2,f
  6677  17E9  0827               	movf	??_aht_readSensor+7,w
  6678  17EA  04A3               	iorwf	??_aht_readSensor+3,f
  6679  17EB  0840               	movf	aht_readSensor@temp+20,w
  6680  17EC  0420               	iorwf	??_aht_readSensor,w
  6681  17ED  00C4               	movwf	aht_readSensor@result
  6682  17EE  0841               	movf	aht_readSensor@temp+21,w
  6683  17EF  0421               	iorwf	??_aht_readSensor+1,w
  6684  17F0  00C5               	movwf	aht_readSensor@result+1
  6685  17F1  0842               	movf	aht_readSensor@temp+22,w
  6686  17F2  0422               	iorwf	??_aht_readSensor+2,w
  6687  17F3  00C6               	movwf	aht_readSensor@result+2
  6688  17F4  0843               	movf	aht_readSensor@temp+23,w
  6689  17F5  0423               	iorwf	??_aht_readSensor+3,w
  6690  17F6  00C7               	movwf	aht_readSensor@result+3
  6691  17F7                     l2450:
  6692                           
  6693                           ;aht10.c: 97:     return result;
  6694  17F7  0847               	movf	aht_readSensor@result+3,w
  6695  17F8  00F9               	movwf	?_aht_readSensor+3
  6696  17F9  0846               	movf	aht_readSensor@result+2,w
  6697  17FA  00F8               	movwf	?_aht_readSensor+2
  6698  17FB  0845               	movf	aht_readSensor@result+1,w
  6699  17FC  00F7               	movwf	?_aht_readSensor+1
  6700  17FD  0844               	movf	aht_readSensor@result,w
  6701  17FE  00F6               	movwf	?_aht_readSensor
  6702  17FF                     l160:
  6703  17FF  0008               	return
  6704  1800                     __end_of_aht_readSensor:
  6705                           
  6706                           	psect	text25
  6707  1DF6                     __ptext25:	
  6708 ;; *************** function _I2C_Master_Write *****************
  6709 ;; Defined at:
  6710 ;;		line 65 in file "I2C.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;  d               2    0[COMMON] unsigned int 
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;		None
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      void 
  6717 ;; Registers used:
  6718 ;;		wreg, status,2, status,0, pclath, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6724 ;;      Params:         2       0       0       0       0
  6725 ;;      Locals:         0       0       0       0       0
  6726 ;;      Temps:          0       0       0       0       0
  6727 ;;      Totals:         2       0       0       0       0
  6728 ;;Total ram usage:        2 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:    1
  6731 ;; This function calls:
  6732 ;;		_I2C_Master_Wait
  6733 ;; This function is called by:
  6734 ;;		_main
  6735 ;;		_aht_readSensor
  6736 ;;		_aht_begin
  6737 ;;		_aht_Reset
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           
  6742                           ;psect for function _I2C_Master_Write
  6743  1DF6                     _I2C_Master_Write:
  6744  1DF6                     l2136:	
  6745                           ;incstack = 0
  6746                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  6747                           
  6748                           
  6749                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  6750  1DF6  160A  158A  2600  160A  158A  	fcall	_I2C_Master_Wait
  6751  1DFB                     l2138:
  6752                           
  6753                           ;I2C.c: 68:     SSPBUF = d;
  6754  1DFB  0870               	movf	I2C_Master_Write@d,w
  6755  1DFC  1283               	bcf	3,5	;RP0=0, select bank0
  6756  1DFD  1303               	bcf	3,6	;RP1=0, select bank0
  6757  1DFE  0093               	movwf	19	;volatile
  6758  1DFF                     l98:
  6759  1DFF  0008               	return
  6760  1E00                     __end_of_I2C_Master_Write:
  6761                           
  6762                           	psect	text26
  6763  0003                     __ptext26:	
  6764 ;; *************** function _I2C_Master_Stop *****************
  6765 ;; Defined at:
  6766 ;;		line 55 in file "I2C.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;		None
  6769 ;; Auto vars:     Size  Location     Type
  6770 ;;		None
  6771 ;; Return value:  Size  Location     Type
  6772 ;;                  1    wreg      void 
  6773 ;; Registers used:
  6774 ;;		wreg, status,2, status,0, pclath, cstack
  6775 ;; Tracked objects:
  6776 ;;		On entry : 0/0
  6777 ;;		On exit  : 0/0
  6778 ;;		Unchanged: 0/0
  6779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6780 ;;      Params:         0       0       0       0       0
  6781 ;;      Locals:         0       0       0       0       0
  6782 ;;      Temps:          0       0       0       0       0
  6783 ;;      Totals:         0       0       0       0       0
  6784 ;;Total ram usage:        0 bytes
  6785 ;; Hardware stack levels used:    1
  6786 ;; Hardware stack levels required when called:    1
  6787 ;; This function calls:
  6788 ;;		_I2C_Master_Wait
  6789 ;; This function is called by:
  6790 ;;		_aht_readSensor
  6791 ;;		_aht_begin
  6792 ;;		_aht_Reset
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           
  6796                           
  6797                           ;psect for function _I2C_Master_Stop
  6798  0003                     _I2C_Master_Stop:
  6799  0003                     l2140:	
  6800                           ;incstack = 0
  6801                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  6802                           
  6803                           
  6804                           ;I2C.c: 57:     I2C_Master_Wait();
  6805  0003  160A  158A  2600  120A  118A  	fcall	_I2C_Master_Wait
  6806  0008                     l2142:
  6807                           
  6808                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  6809  0008  1683               	bsf	3,5	;RP0=1, select bank1
  6810  0009  1303               	bcf	3,6	;RP1=0, select bank1
  6811  000A  1511               	bsf	17,2	;volatile
  6812  000B                     l95:
  6813  000B  0008               	return
  6814  000C                     __end_of_I2C_Master_Stop:
  6815                           
  6816                           	psect	text27
  6817  1DED                     __ptext27:	
  6818 ;; *************** function _I2C_Master_Start *****************
  6819 ;; Defined at:
  6820 ;;		line 39 in file "I2C.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;		None
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;		None
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  1    wreg      void 
  6827 ;; Registers used:
  6828 ;;		wreg, status,2, status,0, pclath, cstack
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6834 ;;      Params:         0       0       0       0       0
  6835 ;;      Locals:         0       0       0       0       0
  6836 ;;      Temps:          0       0       0       0       0
  6837 ;;      Totals:         0       0       0       0       0
  6838 ;;Total ram usage:        0 bytes
  6839 ;; Hardware stack levels used:    1
  6840 ;; Hardware stack levels required when called:    1
  6841 ;; This function calls:
  6842 ;;		_I2C_Master_Wait
  6843 ;; This function is called by:
  6844 ;;		_main
  6845 ;;		_aht_readSensor
  6846 ;;		_aht_begin
  6847 ;;		_aht_readStatus
  6848 ;;		_aht_Reset
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           
  6853                           ;psect for function _I2C_Master_Start
  6854  1DED                     _I2C_Master_Start:
  6855  1DED                     l2132:	
  6856                           ;incstack = 0
  6857                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  6858                           
  6859                           
  6860                           ;I2C.c: 41:     I2C_Master_Wait();
  6861  1DED  160A  158A  2600  160A  158A  	fcall	_I2C_Master_Wait
  6862  1DF2                     l2134:
  6863                           
  6864                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  6865  1DF2  1683               	bsf	3,5	;RP0=1, select bank1
  6866  1DF3  1303               	bcf	3,6	;RP1=0, select bank1
  6867  1DF4  1411               	bsf	17,0	;volatile
  6868  1DF5                     l89:
  6869  1DF5  0008               	return
  6870  1DF6                     __end_of_I2C_Master_Start:
  6871                           
  6872                           	psect	text28
  6873  1EB3                     __ptext28:	
  6874 ;; *************** function _I2C_Master_Read *****************
  6875 ;; Defined at:
  6876 ;;		line 74 in file "I2C.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  a               2    0[COMMON] unsigned short 
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;  temp            2    4[COMMON] unsigned short 
  6881 ;; Return value:  Size  Location     Type
  6882 ;;                  2    0[COMMON] unsigned short 
  6883 ;; Registers used:
  6884 ;;		wreg, status,2, status,0, pclath, cstack
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/0
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6890 ;;      Params:         2       0       0       0       0
  6891 ;;      Locals:         2       0       0       0       0
  6892 ;;      Temps:          2       0       0       0       0
  6893 ;;      Totals:         6       0       0       0       0
  6894 ;;Total ram usage:        6 bytes
  6895 ;; Hardware stack levels used:    1
  6896 ;; Hardware stack levels required when called:    1
  6897 ;; This function calls:
  6898 ;;		_I2C_Master_Wait
  6899 ;; This function is called by:
  6900 ;;		_aht_readSensor
  6901 ;;		_aht_readStatus
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           
  6906                           ;psect for function _I2C_Master_Read
  6907  1EB3                     _I2C_Master_Read:
  6908  1EB3                     l2144:	
  6909                           ;incstack = 0
  6910                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  6911                           
  6912                           
  6913                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  6914  1EB3  160A  158A  2600  160A  158A  	fcall	_I2C_Master_Wait
  6915  1EB8                     l2146:
  6916                           
  6917                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  6918  1EB8  1683               	bsf	3,5	;RP0=1, select bank1
  6919  1EB9  1303               	bcf	3,6	;RP1=0, select bank1
  6920  1EBA  1591               	bsf	17,3	;volatile
  6921                           
  6922                           ;I2C.c: 79:     I2C_Master_Wait();
  6923  1EBB  160A  158A  2600  160A  158A  	fcall	_I2C_Master_Wait
  6924  1EC0                     l2148:
  6925                           
  6926                           ;I2C.c: 80:     temp = SSPBUF;
  6927  1EC0  1283               	bcf	3,5	;RP0=0, select bank0
  6928  1EC1  1303               	bcf	3,6	;RP1=0, select bank0
  6929  1EC2  0813               	movf	19,w	;volatile
  6930  1EC3  00F2               	movwf	??_I2C_Master_Read
  6931  1EC4  01F3               	clrf	??_I2C_Master_Read+1
  6932  1EC5  0872               	movf	??_I2C_Master_Read,w
  6933  1EC6  00F4               	movwf	I2C_Master_Read@temp
  6934  1EC7  0873               	movf	??_I2C_Master_Read+1,w
  6935  1EC8  00F5               	movwf	I2C_Master_Read@temp+1
  6936  1EC9                     l2150:
  6937                           
  6938                           ;I2C.c: 81:     I2C_Master_Wait();
  6939  1EC9  160A  158A  2600  160A  158A  	fcall	_I2C_Master_Wait
  6940  1ECE                     l2152:
  6941                           
  6942                           ;I2C.c: 82:     if(a == 1){
  6943  1ECE  0370               	decf	I2C_Master_Read@a,w
  6944  1ECF  0471               	iorwf	I2C_Master_Read@a+1,w
  6945  1ED0  1D03               	btfss	3,2
  6946  1ED1  2ED3               	goto	u2541
  6947  1ED2  2ED4               	goto	u2540
  6948  1ED3                     u2541:
  6949  1ED3  2ED8               	goto	l101
  6950  1ED4                     u2540:
  6951  1ED4                     l2154:
  6952                           
  6953                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  6954  1ED4  1683               	bsf	3,5	;RP0=1, select bank1
  6955  1ED5  1303               	bcf	3,6	;RP1=0, select bank1
  6956  1ED6  1291               	bcf	17,5	;volatile
  6957                           
  6958                           ;I2C.c: 84:     }else{
  6959  1ED7  2EDB               	goto	l102
  6960  1ED8                     l101:
  6961                           
  6962                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  6963  1ED8  1683               	bsf	3,5	;RP0=1, select bank1
  6964  1ED9  1303               	bcf	3,6	;RP1=0, select bank1
  6965  1EDA  1691               	bsf	17,5	;volatile
  6966  1EDB                     l102:	
  6967                           ;I2C.c: 86:     }
  6968                           
  6969                           
  6970                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  6971  1EDB  1611               	bsf	17,4	;volatile
  6972  1EDC                     l2156:
  6973                           
  6974                           ;I2C.c: 88:     return temp;
  6975  1EDC  0875               	movf	I2C_Master_Read@temp+1,w
  6976  1EDD  00F1               	movwf	?_I2C_Master_Read+1
  6977  1EDE  0874               	movf	I2C_Master_Read@temp,w
  6978  1EDF  00F0               	movwf	?_I2C_Master_Read
  6979  1EE0                     l103:
  6980  1EE0  0008               	return
  6981  1EE1                     __end_of_I2C_Master_Read:
  6982                           
  6983                           	psect	text29
  6984  1E00                     __ptext29:	
  6985 ;; *************** function _I2C_Master_Wait *****************
  6986 ;; Defined at:
  6987 ;;		line 32 in file "I2C.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;		None
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;		None
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  1    wreg      void 
  6994 ;; Registers used:
  6995 ;;		wreg, status,2
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7001 ;;      Params:         0       0       0       0       0
  7002 ;;      Locals:         0       0       0       0       0
  7003 ;;      Temps:          0       0       0       0       0
  7004 ;;      Totals:         0       0       0       0       0
  7005 ;;Total ram usage:        0 bytes
  7006 ;; Hardware stack levels used:    1
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		_I2C_Master_Start
  7011 ;;		_I2C_Master_Stop
  7012 ;;		_I2C_Master_Write
  7013 ;;		_I2C_Master_Read
  7014 ;;		_I2C_Master_RepeatedStart
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           
  7019                           ;psect for function _I2C_Master_Wait
  7020  1E00                     _I2C_Master_Wait:
  7021  1E00                     l2096:	
  7022                           ;incstack = 0
  7023                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  7024                           
  7025  1E00                     l83:	
  7026                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  7027                           
  7028  1E00  1683               	bsf	3,5	;RP0=1, select bank1
  7029  1E01  1303               	bcf	3,6	;RP1=0, select bank1
  7030  1E02  1914               	btfsc	20,2	;volatile
  7031  1E03  2E05               	goto	u2401
  7032  1E04  2E06               	goto	u2400
  7033  1E05                     u2401:
  7034  1E05  2E00               	goto	l83
  7035  1E06                     u2400:
  7036  1E06                     l2098:
  7037  1E06  0811               	movf	17,w	;volatile
  7038  1E07  391F               	andlw	31
  7039  1E08  1D03               	btfss	3,2
  7040  1E09  2E0B               	goto	u2411
  7041  1E0A  2E0C               	goto	u2410
  7042  1E0B                     u2411:
  7043  1E0B  2E00               	goto	l83
  7044  1E0C                     u2410:
  7045  1E0C                     l86:
  7046  1E0C  0008               	return
  7047  1E0D                     __end_of_I2C_Master_Wait:
  7048                           
  7049                           	psect	text30
  7050  1EE1                     __ptext30:	
  7051 ;; *************** function ___lltoft *****************
  7052 ;; Defined at:
  7053 ;;		line 35 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lltoft.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;  c               4   10[COMMON] unsigned long 
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;  exp             1   42[BANK0 ] unsigned char 
  7058 ;; Return value:  Size  Location     Type
  7059 ;;                  3   10[COMMON] float 
  7060 ;; Registers used:
  7061 ;;		wreg, status,2, status,0, pclath, cstack
  7062 ;; Tracked objects:
  7063 ;;		On entry : 0/0
  7064 ;;		On exit  : 0/0
  7065 ;;		Unchanged: 0/0
  7066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7067 ;;      Params:         4       0       0       0       0
  7068 ;;      Locals:         0       1       0       0       0
  7069 ;;      Temps:          0       1       0       0       0
  7070 ;;      Totals:         4       2       0       0       0
  7071 ;;Total ram usage:        6 bytes
  7072 ;; Hardware stack levels used:    1
  7073 ;; Hardware stack levels required when called:    1
  7074 ;; This function calls:
  7075 ;;		___ftpack
  7076 ;; This function is called by:
  7077 ;;		_aht_GetTemperature
  7078 ;;		_sprintf
  7079 ;;		_aht_GetHumidity
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           
  7083                           
  7084                           ;psect for function ___lltoft
  7085  1EE1                     ___lltoft:
  7086  1EE1                     l2850:	
  7087                           ;incstack = 0
  7088                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  7089                           
  7090  1EE1  308E               	movlw	142
  7091  1EE2  1283               	bcf	3,5	;RP0=0, select bank0
  7092  1EE3  1303               	bcf	3,6	;RP1=0, select bank0
  7093  1EE4  00C9               	movwf	??___lltoft
  7094  1EE5  0849               	movf	??___lltoft,w
  7095  1EE6  00CA               	movwf	___lltoft@exp
  7096  1EE7  2EF5               	goto	l2854
  7097  1EE8                     l2852:
  7098  1EE8  3001               	movlw	1
  7099  1EE9                     u4205:
  7100  1EE9  1003               	clrc
  7101  1EEA  0CFD               	rrf	___lltoft@c+3,f
  7102  1EEB  0CFC               	rrf	___lltoft@c+2,f
  7103  1EEC  0CFB               	rrf	___lltoft@c+1,f
  7104  1EED  0CFA               	rrf	___lltoft@c,f
  7105  1EEE  3EFF               	addlw	-1
  7106  1EEF  1D03               	skipz
  7107  1EF0  2EE9               	goto	u4205
  7108  1EF1  3001               	movlw	1
  7109  1EF2  00C9               	movwf	??___lltoft
  7110  1EF3  0849               	movf	??___lltoft,w
  7111  1EF4  07CA               	addwf	___lltoft@exp,f
  7112  1EF5                     l2854:
  7113  1EF5  30FF               	movlw	255
  7114  1EF6  057D               	andwf	___lltoft@c+3,w
  7115  1EF7  1D03               	btfss	3,2
  7116  1EF8  2EFA               	goto	u4211
  7117  1EF9  2EFB               	goto	u4210
  7118  1EFA                     u4211:
  7119  1EFA  2EE8               	goto	l2852
  7120  1EFB                     u4210:
  7121  1EFB                     l2856:
  7122  1EFB  087A               	movf	___lltoft@c,w
  7123  1EFC  00F0               	movwf	___ftpack@arg
  7124  1EFD  087B               	movf	___lltoft@c+1,w
  7125  1EFE  00F1               	movwf	___ftpack@arg+1
  7126  1EFF  087C               	movf	___lltoft@c+2,w
  7127  1F00  00F2               	movwf	___ftpack@arg+2
  7128  1F01  084A               	movf	___lltoft@exp,w
  7129  1F02  00C9               	movwf	??___lltoft
  7130  1F03  0849               	movf	??___lltoft,w
  7131  1F04  00F3               	movwf	___ftpack@exp
  7132  1F05  01F4               	clrf	___ftpack@sign
  7133  1F06  160A  118A  228F  160A  158A  	fcall	___ftpack
  7134  1F0B  0870               	movf	?___ftpack,w
  7135  1F0C  00FA               	movwf	?___lltoft
  7136  1F0D  0871               	movf	?___ftpack+1,w
  7137  1F0E  00FB               	movwf	?___lltoft+1
  7138  1F0F  0872               	movf	?___ftpack+2,w
  7139  1F10  00FC               	movwf	?___lltoft+2
  7140  1F11                     l773:
  7141  1F11  0008               	return
  7142  1F12                     __end_of___lltoft:
  7143                           
  7144                           	psect	text31
  7145  000C                     __ptext31:	
  7146 ;; *************** function ___ftmul *****************
  7147 ;; Defined at:
  7148 ;;		line 62 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftmul.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;  f1              3    8[BANK0 ] float 
  7151 ;;  f2              3   11[BANK0 ] float 
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
  7154 ;;  sign            1   23[BANK0 ] unsigned char 
  7155 ;;  cntr            1   22[BANK0 ] unsigned char 
  7156 ;;  exp             1   18[BANK0 ] unsigned char 
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  3    8[BANK0 ] float 
  7159 ;; Registers used:
  7160 ;;		wreg, status,2, status,0, pclath, cstack
  7161 ;; Tracked objects:
  7162 ;;		On entry : 0/0
  7163 ;;		On exit  : 0/0
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7166 ;;      Params:         0       6       0       0       0
  7167 ;;      Locals:         0       6       0       0       0
  7168 ;;      Temps:          0       4       0       0       0
  7169 ;;      Totals:         0      16       0       0       0
  7170 ;;Total ram usage:       16 bytes
  7171 ;; Hardware stack levels used:    1
  7172 ;; Hardware stack levels required when called:    1
  7173 ;; This function calls:
  7174 ;;		___ftpack
  7175 ;; This function is called by:
  7176 ;;		_aht_GetTemperature
  7177 ;;		_fround
  7178 ;;		_scale
  7179 ;;		_sprintf
  7180 ;;		_aht_GetHumidity
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           
  7184                           
  7185                           ;psect for function ___ftmul
  7186  000C                     ___ftmul:
  7187  000C                     l2326:	
  7188                           ;incstack = 0
  7189                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7190                           
  7191  000C  1283               	bcf	3,5	;RP0=0, select bank0
  7192  000D  1303               	bcf	3,6	;RP1=0, select bank0
  7193  000E  0828               	movf	___ftmul@f1,w
  7194  000F  00AE               	movwf	??___ftmul
  7195  0010  0829               	movf	___ftmul@f1+1,w
  7196  0011  00AF               	movwf	??___ftmul+1
  7197  0012  082A               	movf	___ftmul@f1+2,w
  7198  0013  00B0               	movwf	??___ftmul+2
  7199  0014  1003               	clrc
  7200  0015  0D2F               	rlf	??___ftmul+1,w
  7201  0016  0D30               	rlf	??___ftmul+2,w
  7202  0017  00B1               	movwf	??___ftmul+3
  7203  0018  0831               	movf	??___ftmul+3,w
  7204  0019  00B2               	movwf	___ftmul@exp
  7205  001A  0832               	movf	___ftmul@exp,w
  7206  001B  1D03               	btfss	3,2
  7207  001C  281E               	goto	u3001
  7208  001D  281F               	goto	u3000
  7209  001E                     u3001:
  7210  001E  2826               	goto	l2332
  7211  001F                     u3000:
  7212  001F                     l2328:
  7213  001F  3000               	movlw	0
  7214  0020  00A8               	movwf	?___ftmul
  7215  0021  3000               	movlw	0
  7216  0022  00A9               	movwf	?___ftmul+1
  7217  0023  3000               	movlw	0
  7218  0024  00AA               	movwf	?___ftmul+2
  7219  0025  28F0               	goto	l703
  7220  0026                     l2332:
  7221  0026  082B               	movf	___ftmul@f2,w
  7222  0027  00AE               	movwf	??___ftmul
  7223  0028  082C               	movf	___ftmul@f2+1,w
  7224  0029  00AF               	movwf	??___ftmul+1
  7225  002A  082D               	movf	___ftmul@f2+2,w
  7226  002B  00B0               	movwf	??___ftmul+2
  7227  002C  1003               	clrc
  7228  002D  0D2F               	rlf	??___ftmul+1,w
  7229  002E  0D30               	rlf	??___ftmul+2,w
  7230  002F  00B1               	movwf	??___ftmul+3
  7231  0030  0831               	movf	??___ftmul+3,w
  7232  0031  00B7               	movwf	___ftmul@sign
  7233  0032  0837               	movf	___ftmul@sign,w
  7234  0033  1D03               	btfss	3,2
  7235  0034  2836               	goto	u3011
  7236  0035  2837               	goto	u3010
  7237  0036                     u3011:
  7238  0036  283E               	goto	l2338
  7239  0037                     u3010:
  7240  0037                     l2334:
  7241  0037  3000               	movlw	0
  7242  0038  00A8               	movwf	?___ftmul
  7243  0039  3000               	movlw	0
  7244  003A  00A9               	movwf	?___ftmul+1
  7245  003B  3000               	movlw	0
  7246  003C  00AA               	movwf	?___ftmul+2
  7247  003D  28F0               	goto	l703
  7248  003E                     l2338:
  7249  003E  0837               	movf	___ftmul@sign,w
  7250  003F  3E7B               	addlw	123
  7251  0040  00AE               	movwf	??___ftmul
  7252  0041  082E               	movf	??___ftmul,w
  7253  0042  07B2               	addwf	___ftmul@exp,f
  7254  0043  0828               	movf	___ftmul@f1,w
  7255  0044  00AE               	movwf	??___ftmul
  7256  0045  0829               	movf	___ftmul@f1+1,w
  7257  0046  00AF               	movwf	??___ftmul+1
  7258  0047  082A               	movf	___ftmul@f1+2,w
  7259  0048  00B0               	movwf	??___ftmul+2
  7260  0049  3010               	movlw	16
  7261  004A                     u3025:
  7262  004A  1003               	clrc
  7263  004B  0CB0               	rrf	??___ftmul+2,f
  7264  004C  0CAF               	rrf	??___ftmul+1,f
  7265  004D  0CAE               	rrf	??___ftmul,f
  7266  004E                     u3020:
  7267  004E  3EFF               	addlw	-1
  7268  004F  1D03               	skipz
  7269  0050  284A               	goto	u3025
  7270  0051  082E               	movf	??___ftmul,w
  7271  0052  00B1               	movwf	??___ftmul+3
  7272  0053  0831               	movf	??___ftmul+3,w
  7273  0054  00B7               	movwf	___ftmul@sign
  7274  0055  082B               	movf	___ftmul@f2,w
  7275  0056  00AE               	movwf	??___ftmul
  7276  0057  082C               	movf	___ftmul@f2+1,w
  7277  0058  00AF               	movwf	??___ftmul+1
  7278  0059  082D               	movf	___ftmul@f2+2,w
  7279  005A  00B0               	movwf	??___ftmul+2
  7280  005B  3010               	movlw	16
  7281  005C                     u3035:
  7282  005C  1003               	clrc
  7283  005D  0CB0               	rrf	??___ftmul+2,f
  7284  005E  0CAF               	rrf	??___ftmul+1,f
  7285  005F  0CAE               	rrf	??___ftmul,f
  7286  0060                     u3030:
  7287  0060  3EFF               	addlw	-1
  7288  0061  1D03               	skipz
  7289  0062  285C               	goto	u3035
  7290  0063  082E               	movf	??___ftmul,w
  7291  0064  00B1               	movwf	??___ftmul+3
  7292  0065  0831               	movf	??___ftmul+3,w
  7293  0066  06B7               	xorwf	___ftmul@sign,f
  7294  0067  3080               	movlw	128
  7295  0068  00AE               	movwf	??___ftmul
  7296  0069  082E               	movf	??___ftmul,w
  7297  006A  05B7               	andwf	___ftmul@sign,f
  7298  006B                     l2340:
  7299  006B  17A9               	bsf	___ftmul@f1+1,7
  7300  006C                     l2342:
  7301  006C  17AC               	bsf	___ftmul@f2+1,7
  7302  006D                     l2344:
  7303  006D  30FF               	movlw	255
  7304  006E  05AB               	andwf	___ftmul@f2,f
  7305  006F  30FF               	movlw	255
  7306  0070  05AC               	andwf	___ftmul@f2+1,f
  7307  0071  3000               	movlw	0
  7308  0072  05AD               	andwf	___ftmul@f2+2,f
  7309  0073                     l2346:
  7310  0073  3000               	movlw	0
  7311  0074  00B3               	movwf	___ftmul@f3_as_product
  7312  0075  3000               	movlw	0
  7313  0076  00B4               	movwf	___ftmul@f3_as_product+1
  7314  0077  3000               	movlw	0
  7315  0078  00B5               	movwf	___ftmul@f3_as_product+2
  7316  0079                     l2348:
  7317  0079  3007               	movlw	7
  7318  007A  00AE               	movwf	??___ftmul
  7319  007B  082E               	movf	??___ftmul,w
  7320  007C  00B6               	movwf	___ftmul@cntr
  7321  007D                     l2350:
  7322  007D  1C28               	btfss	___ftmul@f1,0
  7323  007E  2880               	goto	u3041
  7324  007F  2881               	goto	u3040
  7325  0080                     u3041:
  7326  0080  2891               	goto	l2354
  7327  0081                     u3040:
  7328  0081                     l2352:
  7329  0081  082B               	movf	___ftmul@f2,w
  7330  0082  07B3               	addwf	___ftmul@f3_as_product,f
  7331  0083  082C               	movf	___ftmul@f2+1,w
  7332  0084  1103               	clrz
  7333  0085  1803               	skipnc
  7334  0086  0A2C               	incf	___ftmul@f2+1,w
  7335  0087  1903               	skipnz
  7336  0088  288A               	goto	u3051
  7337  0089  07B4               	addwf	___ftmul@f3_as_product+1,f
  7338  008A                     u3051:
  7339  008A  082D               	movf	___ftmul@f2+2,w
  7340  008B  1103               	clrz
  7341  008C  1803               	skipnc
  7342  008D  0A2D               	incf	___ftmul@f2+2,w
  7343  008E  1903               	skipnz
  7344  008F  2891               	goto	u3052
  7345  0090  07B5               	addwf	___ftmul@f3_as_product+2,f
  7346  0091                     u3052:
  7347  0091                     l2354:
  7348  0091  3001               	movlw	1
  7349  0092                     u3065:
  7350  0092  1003               	clrc
  7351  0093  0CAA               	rrf	___ftmul@f1+2,f
  7352  0094  0CA9               	rrf	___ftmul@f1+1,f
  7353  0095  0CA8               	rrf	___ftmul@f1,f
  7354  0096  3EFF               	addlw	-1
  7355  0097  1D03               	skipz
  7356  0098  2892               	goto	u3065
  7357  0099                     l2356:
  7358  0099  3001               	movlw	1
  7359  009A                     u3075:
  7360  009A  1003               	clrc
  7361  009B  0DAB               	rlf	___ftmul@f2,f
  7362  009C  0DAC               	rlf	___ftmul@f2+1,f
  7363  009D  0DAD               	rlf	___ftmul@f2+2,f
  7364  009E  3EFF               	addlw	-1
  7365  009F  1D03               	skipz
  7366  00A0  289A               	goto	u3075
  7367  00A1                     l2358:
  7368  00A1  3001               	movlw	1
  7369  00A2  02B6               	subwf	___ftmul@cntr,f
  7370  00A3  1D03               	btfss	3,2
  7371  00A4  28A6               	goto	u3081
  7372  00A5  28A7               	goto	u3080
  7373  00A6                     u3081:
  7374  00A6  287D               	goto	l2350
  7375  00A7                     u3080:
  7376  00A7                     l2360:
  7377  00A7  3009               	movlw	9
  7378  00A8  00AE               	movwf	??___ftmul
  7379  00A9  082E               	movf	??___ftmul,w
  7380  00AA  00B6               	movwf	___ftmul@cntr
  7381  00AB                     l2362:
  7382  00AB  1C28               	btfss	___ftmul@f1,0
  7383  00AC  28AE               	goto	u3091
  7384  00AD  28AF               	goto	u3090
  7385  00AE                     u3091:
  7386  00AE  28BF               	goto	l2366
  7387  00AF                     u3090:
  7388  00AF                     l2364:
  7389  00AF  082B               	movf	___ftmul@f2,w
  7390  00B0  07B3               	addwf	___ftmul@f3_as_product,f
  7391  00B1  082C               	movf	___ftmul@f2+1,w
  7392  00B2  1103               	clrz
  7393  00B3  1803               	skipnc
  7394  00B4  0A2C               	incf	___ftmul@f2+1,w
  7395  00B5  1903               	skipnz
  7396  00B6  28B8               	goto	u3101
  7397  00B7  07B4               	addwf	___ftmul@f3_as_product+1,f
  7398  00B8                     u3101:
  7399  00B8  082D               	movf	___ftmul@f2+2,w
  7400  00B9  1103               	clrz
  7401  00BA  1803               	skipnc
  7402  00BB  0A2D               	incf	___ftmul@f2+2,w
  7403  00BC  1903               	skipnz
  7404  00BD  28BF               	goto	u3102
  7405  00BE  07B5               	addwf	___ftmul@f3_as_product+2,f
  7406  00BF                     u3102:
  7407  00BF                     l2366:
  7408  00BF  3001               	movlw	1
  7409  00C0                     u3115:
  7410  00C0  1003               	clrc
  7411  00C1  0CAA               	rrf	___ftmul@f1+2,f
  7412  00C2  0CA9               	rrf	___ftmul@f1+1,f
  7413  00C3  0CA8               	rrf	___ftmul@f1,f
  7414  00C4  3EFF               	addlw	-1
  7415  00C5  1D03               	skipz
  7416  00C6  28C0               	goto	u3115
  7417  00C7                     l2368:
  7418  00C7  3001               	movlw	1
  7419  00C8                     u3125:
  7420  00C8  1003               	clrc
  7421  00C9  0CB5               	rrf	___ftmul@f3_as_product+2,f
  7422  00CA  0CB4               	rrf	___ftmul@f3_as_product+1,f
  7423  00CB  0CB3               	rrf	___ftmul@f3_as_product,f
  7424  00CC  3EFF               	addlw	-1
  7425  00CD  1D03               	skipz
  7426  00CE  28C8               	goto	u3125
  7427  00CF                     l2370:
  7428  00CF  3001               	movlw	1
  7429  00D0  02B6               	subwf	___ftmul@cntr,f
  7430  00D1  1D03               	btfss	3,2
  7431  00D2  28D4               	goto	u3131
  7432  00D3  28D5               	goto	u3130
  7433  00D4                     u3131:
  7434  00D4  28AB               	goto	l2362
  7435  00D5                     u3130:
  7436  00D5                     l2372:
  7437  00D5  0833               	movf	___ftmul@f3_as_product,w
  7438  00D6  00F0               	movwf	___ftpack@arg
  7439  00D7  0834               	movf	___ftmul@f3_as_product+1,w
  7440  00D8  00F1               	movwf	___ftpack@arg+1
  7441  00D9  0835               	movf	___ftmul@f3_as_product+2,w
  7442  00DA  00F2               	movwf	___ftpack@arg+2
  7443  00DB  0832               	movf	___ftmul@exp,w
  7444  00DC  00AE               	movwf	??___ftmul
  7445  00DD  082E               	movf	??___ftmul,w
  7446  00DE  00F3               	movwf	___ftpack@exp
  7447  00DF  0837               	movf	___ftmul@sign,w
  7448  00E0  00AF               	movwf	??___ftmul+1
  7449  00E1  082F               	movf	??___ftmul+1,w
  7450  00E2  00F4               	movwf	___ftpack@sign
  7451  00E3  160A  118A  228F  120A  118A  	fcall	___ftpack
  7452  00E8  0870               	movf	?___ftpack,w
  7453  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  7454  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  7455  00EB  00A8               	movwf	?___ftmul
  7456  00EC  0871               	movf	?___ftpack+1,w
  7457  00ED  00A9               	movwf	?___ftmul+1
  7458  00EE  0872               	movf	?___ftpack+2,w
  7459  00EF  00AA               	movwf	?___ftmul+2
  7460  00F0                     l703:
  7461  00F0  0008               	return
  7462  00F1                     __end_of___ftmul:
  7463                           
  7464                           	psect	text32
  7465  156D                     __ptext32:	
  7466 ;; *************** function ___ftdiv *****************
  7467 ;; Defined at:
  7468 ;;		line 56 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftdiv.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  f2              3   24[BANK0 ] float 
  7471 ;;  f1              3   27[BANK0 ] float 
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;  f3              3   35[BANK0 ] float 
  7474 ;;  sign            1   39[BANK0 ] unsigned char 
  7475 ;;  exp             1   38[BANK0 ] unsigned char 
  7476 ;;  cntr            1   34[BANK0 ] unsigned char 
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  3   24[BANK0 ] float 
  7479 ;; Registers used:
  7480 ;;		wreg, status,2, status,0, pclath, cstack
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7486 ;;      Params:         0       6       0       0       0
  7487 ;;      Locals:         0       6       0       0       0
  7488 ;;      Temps:          0       4       0       0       0
  7489 ;;      Totals:         0      16       0       0       0
  7490 ;;Total ram usage:       16 bytes
  7491 ;; Hardware stack levels used:    1
  7492 ;; Hardware stack levels required when called:    1
  7493 ;; This function calls:
  7494 ;;		___ftpack
  7495 ;; This function is called by:
  7496 ;;		_aht_GetTemperature
  7497 ;;		_aht_GetHumidity
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           
  7502                           ;psect for function ___ftdiv
  7503  156D                     ___ftdiv:
  7504  156D                     l2710:	
  7505                           ;incstack = 0
  7506                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7507                           
  7508  156D  1283               	bcf	3,5	;RP0=0, select bank0
  7509  156E  1303               	bcf	3,6	;RP1=0, select bank0
  7510  156F  083B               	movf	___ftdiv@f1,w
  7511  1570  00BE               	movwf	??___ftdiv
  7512  1571  083C               	movf	___ftdiv@f1+1,w
  7513  1572  00BF               	movwf	??___ftdiv+1
  7514  1573  083D               	movf	___ftdiv@f1+2,w
  7515  1574  00C0               	movwf	??___ftdiv+2
  7516  1575  1003               	clrc
  7517  1576  0D3F               	rlf	??___ftdiv+1,w
  7518  1577  0D40               	rlf	??___ftdiv+2,w
  7519  1578  00C1               	movwf	??___ftdiv+3
  7520  1579  0841               	movf	??___ftdiv+3,w
  7521  157A  00C6               	movwf	___ftdiv@exp
  7522  157B  0846               	movf	___ftdiv@exp,w
  7523  157C  1D03               	btfss	3,2
  7524  157D  2D7F               	goto	u3911
  7525  157E  2D80               	goto	u3910
  7526  157F                     u3911:
  7527  157F  2D87               	goto	l2716
  7528  1580                     u3910:
  7529  1580                     l2712:
  7530  1580  3000               	movlw	0
  7531  1581  00B8               	movwf	?___ftdiv
  7532  1582  3000               	movlw	0
  7533  1583  00B9               	movwf	?___ftdiv+1
  7534  1584  3000               	movlw	0
  7535  1585  00BA               	movwf	?___ftdiv+2
  7536  1586  2E2E               	goto	l671
  7537  1587                     l2716:
  7538  1587  0838               	movf	___ftdiv@f2,w
  7539  1588  00BE               	movwf	??___ftdiv
  7540  1589  0839               	movf	___ftdiv@f2+1,w
  7541  158A  00BF               	movwf	??___ftdiv+1
  7542  158B  083A               	movf	___ftdiv@f2+2,w
  7543  158C  00C0               	movwf	??___ftdiv+2
  7544  158D  1003               	clrc
  7545  158E  0D3F               	rlf	??___ftdiv+1,w
  7546  158F  0D40               	rlf	??___ftdiv+2,w
  7547  1590  00C1               	movwf	??___ftdiv+3
  7548  1591  0841               	movf	??___ftdiv+3,w
  7549  1592  00C7               	movwf	___ftdiv@sign
  7550  1593  0847               	movf	___ftdiv@sign,w
  7551  1594  1D03               	btfss	3,2
  7552  1595  2D97               	goto	u3921
  7553  1596  2D98               	goto	u3920
  7554  1597                     u3921:
  7555  1597  2D9F               	goto	l2722
  7556  1598                     u3920:
  7557  1598                     l2718:
  7558  1598  3000               	movlw	0
  7559  1599  00B8               	movwf	?___ftdiv
  7560  159A  3000               	movlw	0
  7561  159B  00B9               	movwf	?___ftdiv+1
  7562  159C  3000               	movlw	0
  7563  159D  00BA               	movwf	?___ftdiv+2
  7564  159E  2E2E               	goto	l671
  7565  159F                     l2722:
  7566  159F  3000               	movlw	0
  7567  15A0  00C3               	movwf	___ftdiv@f3
  7568  15A1  3000               	movlw	0
  7569  15A2  00C4               	movwf	___ftdiv@f3+1
  7570  15A3  3000               	movlw	0
  7571  15A4  00C5               	movwf	___ftdiv@f3+2
  7572  15A5                     l2724:
  7573  15A5  3089               	movlw	137
  7574  15A6  0747               	addwf	___ftdiv@sign,w
  7575  15A7  00BE               	movwf	??___ftdiv
  7576  15A8  083E               	movf	??___ftdiv,w
  7577  15A9  02C6               	subwf	___ftdiv@exp,f
  7578  15AA                     l2726:
  7579  15AA  083B               	movf	___ftdiv@f1,w
  7580  15AB  00BE               	movwf	??___ftdiv
  7581  15AC  083C               	movf	___ftdiv@f1+1,w
  7582  15AD  00BF               	movwf	??___ftdiv+1
  7583  15AE  083D               	movf	___ftdiv@f1+2,w
  7584  15AF  00C0               	movwf	??___ftdiv+2
  7585  15B0  3010               	movlw	16
  7586  15B1                     u3935:
  7587  15B1  1003               	clrc
  7588  15B2  0CC0               	rrf	??___ftdiv+2,f
  7589  15B3  0CBF               	rrf	??___ftdiv+1,f
  7590  15B4  0CBE               	rrf	??___ftdiv,f
  7591  15B5                     u3930:
  7592  15B5  3EFF               	addlw	-1
  7593  15B6  1D03               	skipz
  7594  15B7  2DB1               	goto	u3935
  7595  15B8  083E               	movf	??___ftdiv,w
  7596  15B9  00C1               	movwf	??___ftdiv+3
  7597  15BA  0841               	movf	??___ftdiv+3,w
  7598  15BB  00C7               	movwf	___ftdiv@sign
  7599  15BC                     l2728:
  7600  15BC  0838               	movf	___ftdiv@f2,w
  7601  15BD  00BE               	movwf	??___ftdiv
  7602  15BE  0839               	movf	___ftdiv@f2+1,w
  7603  15BF  00BF               	movwf	??___ftdiv+1
  7604  15C0  083A               	movf	___ftdiv@f2+2,w
  7605  15C1  00C0               	movwf	??___ftdiv+2
  7606  15C2  3010               	movlw	16
  7607  15C3                     u3945:
  7608  15C3  1003               	clrc
  7609  15C4  0CC0               	rrf	??___ftdiv+2,f
  7610  15C5  0CBF               	rrf	??___ftdiv+1,f
  7611  15C6  0CBE               	rrf	??___ftdiv,f
  7612  15C7                     u3940:
  7613  15C7  3EFF               	addlw	-1
  7614  15C8  1D03               	skipz
  7615  15C9  2DC3               	goto	u3945
  7616  15CA  083E               	movf	??___ftdiv,w
  7617  15CB  00C1               	movwf	??___ftdiv+3
  7618  15CC  0841               	movf	??___ftdiv+3,w
  7619  15CD  06C7               	xorwf	___ftdiv@sign,f
  7620  15CE                     l2730:
  7621  15CE  3080               	movlw	128
  7622  15CF  00BE               	movwf	??___ftdiv
  7623  15D0  083E               	movf	??___ftdiv,w
  7624  15D1  05C7               	andwf	___ftdiv@sign,f
  7625  15D2                     l2732:
  7626  15D2  17BC               	bsf	___ftdiv@f1+1,7
  7627  15D3  30FF               	movlw	255
  7628  15D4  05BB               	andwf	___ftdiv@f1,f
  7629  15D5  30FF               	movlw	255
  7630  15D6  05BC               	andwf	___ftdiv@f1+1,f
  7631  15D7  3000               	movlw	0
  7632  15D8  05BD               	andwf	___ftdiv@f1+2,f
  7633  15D9                     l2734:
  7634  15D9  17B9               	bsf	___ftdiv@f2+1,7
  7635  15DA  30FF               	movlw	255
  7636  15DB  05B8               	andwf	___ftdiv@f2,f
  7637  15DC  30FF               	movlw	255
  7638  15DD  05B9               	andwf	___ftdiv@f2+1,f
  7639  15DE  3000               	movlw	0
  7640  15DF  05BA               	andwf	___ftdiv@f2+2,f
  7641  15E0  3018               	movlw	24
  7642  15E1  00BE               	movwf	??___ftdiv
  7643  15E2  083E               	movf	??___ftdiv,w
  7644  15E3  00C2               	movwf	___ftdiv@cntr
  7645  15E4                     l2736:
  7646  15E4  3001               	movlw	1
  7647  15E5                     u3955:
  7648  15E5  1003               	clrc
  7649  15E6  0DC3               	rlf	___ftdiv@f3,f
  7650  15E7  0DC4               	rlf	___ftdiv@f3+1,f
  7651  15E8  0DC5               	rlf	___ftdiv@f3+2,f
  7652  15E9  3EFF               	addlw	-1
  7653  15EA  1D03               	skipz
  7654  15EB  2DE5               	goto	u3955
  7655  15EC                     l2738:
  7656  15EC  083A               	movf	___ftdiv@f2+2,w
  7657  15ED  023D               	subwf	___ftdiv@f1+2,w
  7658  15EE  1D03               	skipz
  7659  15EF  2DF6               	goto	u3965
  7660  15F0  0839               	movf	___ftdiv@f2+1,w
  7661  15F1  023C               	subwf	___ftdiv@f1+1,w
  7662  15F2  1D03               	skipz
  7663  15F3  2DF6               	goto	u3965
  7664  15F4  0838               	movf	___ftdiv@f2,w
  7665  15F5  023B               	subwf	___ftdiv@f1,w
  7666  15F6                     u3965:
  7667  15F6  1C03               	skipc
  7668  15F7  2DF9               	goto	u3961
  7669  15F8  2DFA               	goto	u3960
  7670  15F9                     u3961:
  7671  15F9  2E05               	goto	l2744
  7672  15FA                     u3960:
  7673  15FA                     l2740:
  7674  15FA  0838               	movf	___ftdiv@f2,w
  7675  15FB  02BB               	subwf	___ftdiv@f1,f
  7676  15FC  0839               	movf	___ftdiv@f2+1,w
  7677  15FD  1C03               	skipc
  7678  15FE  0F39               	incfsz	___ftdiv@f2+1,w
  7679  15FF  02BC               	subwf	___ftdiv@f1+1,f
  7680  1600  083A               	movf	___ftdiv@f2+2,w
  7681  1601  1C03               	skipc
  7682  1602  0A3A               	incf	___ftdiv@f2+2,w
  7683  1603  02BD               	subwf	___ftdiv@f1+2,f
  7684  1604                     l2742:
  7685  1604  1443               	bsf	___ftdiv@f3,0
  7686  1605                     l2744:
  7687  1605  3001               	movlw	1
  7688  1606                     u3975:
  7689  1606  1003               	clrc
  7690  1607  0DBB               	rlf	___ftdiv@f1,f
  7691  1608  0DBC               	rlf	___ftdiv@f1+1,f
  7692  1609  0DBD               	rlf	___ftdiv@f1+2,f
  7693  160A  3EFF               	addlw	-1
  7694  160B  1D03               	skipz
  7695  160C  2E06               	goto	u3975
  7696  160D                     l2746:
  7697  160D  3001               	movlw	1
  7698  160E  02C2               	subwf	___ftdiv@cntr,f
  7699  160F  1D03               	btfss	3,2
  7700  1610  2E12               	goto	u3981
  7701  1611  2E13               	goto	u3980
  7702  1612                     u3981:
  7703  1612  2DE4               	goto	l2736
  7704  1613                     u3980:
  7705  1613                     l2748:
  7706  1613  0843               	movf	___ftdiv@f3,w
  7707  1614  00F0               	movwf	___ftpack@arg
  7708  1615  0844               	movf	___ftdiv@f3+1,w
  7709  1616  00F1               	movwf	___ftpack@arg+1
  7710  1617  0845               	movf	___ftdiv@f3+2,w
  7711  1618  00F2               	movwf	___ftpack@arg+2
  7712  1619  0846               	movf	___ftdiv@exp,w
  7713  161A  00BE               	movwf	??___ftdiv
  7714  161B  083E               	movf	??___ftdiv,w
  7715  161C  00F3               	movwf	___ftpack@exp
  7716  161D  0847               	movf	___ftdiv@sign,w
  7717  161E  00BF               	movwf	??___ftdiv+1
  7718  161F  083F               	movf	??___ftdiv+1,w
  7719  1620  00F4               	movwf	___ftpack@sign
  7720  1621  160A  118A  228F  160A  118A  	fcall	___ftpack
  7721  1626  0870               	movf	?___ftpack,w
  7722  1627  1283               	bcf	3,5	;RP0=0, select bank0
  7723  1628  1303               	bcf	3,6	;RP1=0, select bank0
  7724  1629  00B8               	movwf	?___ftdiv
  7725  162A  0871               	movf	?___ftpack+1,w
  7726  162B  00B9               	movwf	?___ftdiv+1
  7727  162C  0872               	movf	?___ftpack+2,w
  7728  162D  00BA               	movwf	?___ftdiv+2
  7729  162E                     l671:
  7730  162E  0008               	return
  7731  162F                     __end_of___ftdiv:
  7732                           
  7733                           	psect	text33
  7734  094F                     __ptext33:	
  7735 ;; *************** function ___ftadd *****************
  7736 ;; Defined at:
  7737 ;;		line 86 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftadd.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;  f1              3   40[BANK0 ] float 
  7740 ;;  f2              3   43[BANK0 ] float 
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;  exp1            1   52[BANK0 ] unsigned char 
  7743 ;;  exp2            1   51[BANK0 ] unsigned char 
  7744 ;;  sign            1   50[BANK0 ] unsigned char 
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  3   40[BANK0 ] float 
  7747 ;; Registers used:
  7748 ;;		wreg, status,2, status,0, pclath, cstack
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7754 ;;      Params:         0       6       0       0       0
  7755 ;;      Locals:         0       3       0       0       0
  7756 ;;      Temps:          0       4       0       0       0
  7757 ;;      Totals:         0      13       0       0       0
  7758 ;;Total ram usage:       13 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; Hardware stack levels required when called:    1
  7761 ;; This function calls:
  7762 ;;		___ftpack
  7763 ;; This function is called by:
  7764 ;;		_aht_GetTemperature
  7765 ;;		_sprintf
  7766 ;;		___ftsub
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           
  7771                           ;psect for function ___ftadd
  7772  094F                     ___ftadd:
  7773  094F                     l2256:	
  7774                           ;incstack = 0
  7775                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7776                           
  7777  094F  1283               	bcf	3,5	;RP0=0, select bank0
  7778  0950  1303               	bcf	3,6	;RP1=0, select bank0
  7779  0951  0848               	movf	___ftadd@f1,w
  7780  0952  00CE               	movwf	??___ftadd
  7781  0953  0849               	movf	___ftadd@f1+1,w
  7782  0954  00CF               	movwf	??___ftadd+1
  7783  0955  084A               	movf	___ftadd@f1+2,w
  7784  0956  00D0               	movwf	??___ftadd+2
  7785  0957  1003               	clrc
  7786  0958  0D4F               	rlf	??___ftadd+1,w
  7787  0959  0D50               	rlf	??___ftadd+2,w
  7788  095A  00D1               	movwf	??___ftadd+3
  7789  095B  0851               	movf	??___ftadd+3,w
  7790  095C  00D4               	movwf	___ftadd@exp1
  7791  095D  084B               	movf	___ftadd@f2,w
  7792  095E  00CE               	movwf	??___ftadd
  7793  095F  084C               	movf	___ftadd@f2+1,w
  7794  0960  00CF               	movwf	??___ftadd+1
  7795  0961  084D               	movf	___ftadd@f2+2,w
  7796  0962  00D0               	movwf	??___ftadd+2
  7797  0963  1003               	clrc
  7798  0964  0D4F               	rlf	??___ftadd+1,w
  7799  0965  0D50               	rlf	??___ftadd+2,w
  7800  0966  00D1               	movwf	??___ftadd+3
  7801  0967  0851               	movf	??___ftadd+3,w
  7802  0968  00D3               	movwf	___ftadd@exp2
  7803  0969  0854               	movf	___ftadd@exp1,w
  7804  096A  1903               	btfsc	3,2
  7805  096B  296D               	goto	u2761
  7806  096C  296E               	goto	u2760
  7807  096D                     u2761:
  7808  096D  297E               	goto	l2262
  7809  096E                     u2760:
  7810  096E                     l2258:
  7811  096E  0853               	movf	___ftadd@exp2,w
  7812  096F  0254               	subwf	___ftadd@exp1,w
  7813  0970  1803               	skipnc
  7814  0971  2973               	goto	u2771
  7815  0972  2974               	goto	u2770
  7816  0973                     u2771:
  7817  0973  2985               	goto	l2266
  7818  0974                     u2770:
  7819  0974                     l2260:
  7820  0974  0853               	movf	___ftadd@exp2,w
  7821  0975  00CE               	movwf	??___ftadd
  7822  0976  0854               	movf	___ftadd@exp1,w
  7823  0977  02CE               	subwf	??___ftadd,f
  7824  0978  3019               	movlw	25
  7825  0979  024E               	subwf	??___ftadd,w
  7826  097A  1C03               	skipc
  7827  097B  297D               	goto	u2781
  7828  097C  297E               	goto	u2780
  7829  097D                     u2781:
  7830  097D  2985               	goto	l2266
  7831  097E                     u2780:
  7832  097E                     l2262:
  7833  097E  084B               	movf	___ftadd@f2,w
  7834  097F  00C8               	movwf	?___ftadd
  7835  0980  084C               	movf	___ftadd@f2+1,w
  7836  0981  00C9               	movwf	?___ftadd+1
  7837  0982  084D               	movf	___ftadd@f2+2,w
  7838  0983  00CA               	movwf	?___ftadd+2
  7839  0984  2A84               	goto	l640
  7840  0985                     l2266:
  7841  0985  0853               	movf	___ftadd@exp2,w
  7842  0986  1903               	btfsc	3,2
  7843  0987  2989               	goto	u2791
  7844  0988  298A               	goto	u2790
  7845  0989                     u2791:
  7846  0989  299A               	goto	l643
  7847  098A                     u2790:
  7848  098A                     l2268:
  7849  098A  0854               	movf	___ftadd@exp1,w
  7850  098B  0253               	subwf	___ftadd@exp2,w
  7851  098C  1803               	skipnc
  7852  098D  298F               	goto	u2801
  7853  098E  2990               	goto	u2800
  7854  098F                     u2801:
  7855  098F  299B               	goto	l2272
  7856  0990                     u2800:
  7857  0990                     l2270:
  7858  0990  0854               	movf	___ftadd@exp1,w
  7859  0991  00CE               	movwf	??___ftadd
  7860  0992  0853               	movf	___ftadd@exp2,w
  7861  0993  02CE               	subwf	??___ftadd,f
  7862  0994  3019               	movlw	25
  7863  0995  024E               	subwf	??___ftadd,w
  7864  0996  1C03               	skipc
  7865  0997  2999               	goto	u2811
  7866  0998  299A               	goto	u2810
  7867  0999                     u2811:
  7868  0999  299B               	goto	l2272
  7869  099A                     u2810:
  7870  099A                     l643:
  7871  099A  2A84               	goto	l640
  7872  099B                     l2272:
  7873  099B  3006               	movlw	6
  7874  099C  00CE               	movwf	??___ftadd
  7875  099D  084E               	movf	??___ftadd,w
  7876  099E  00D2               	movwf	___ftadd@sign
  7877  099F                     l2274:
  7878  099F  1FCA               	btfss	___ftadd@f1+2,7
  7879  09A0  29A2               	goto	u2821
  7880  09A1  29A3               	goto	u2820
  7881  09A2                     u2821:
  7882  09A2  29A4               	goto	l644
  7883  09A3                     u2820:
  7884  09A3                     l2276:
  7885  09A3  17D2               	bsf	___ftadd@sign,7
  7886  09A4                     l644:
  7887  09A4  1FCD               	btfss	___ftadd@f2+2,7
  7888  09A5  29A7               	goto	u2831
  7889  09A6  29A8               	goto	u2830
  7890  09A7                     u2831:
  7891  09A7  29A9               	goto	l645
  7892  09A8                     u2830:
  7893  09A8                     l2278:
  7894  09A8  1752               	bsf	___ftadd@sign,6
  7895  09A9                     l645:
  7896  09A9  17C9               	bsf	___ftadd@f1+1,7
  7897  09AA                     l2280:
  7898  09AA  30FF               	movlw	255
  7899  09AB  05C8               	andwf	___ftadd@f1,f
  7900  09AC  30FF               	movlw	255
  7901  09AD  05C9               	andwf	___ftadd@f1+1,f
  7902  09AE  3000               	movlw	0
  7903  09AF  05CA               	andwf	___ftadd@f1+2,f
  7904  09B0                     l2282:
  7905  09B0  17CC               	bsf	___ftadd@f2+1,7
  7906  09B1  30FF               	movlw	255
  7907  09B2  05CB               	andwf	___ftadd@f2,f
  7908  09B3  30FF               	movlw	255
  7909  09B4  05CC               	andwf	___ftadd@f2+1,f
  7910  09B5  3000               	movlw	0
  7911  09B6  05CD               	andwf	___ftadd@f2+2,f
  7912  09B7  0853               	movf	___ftadd@exp2,w
  7913  09B8  0254               	subwf	___ftadd@exp1,w
  7914  09B9  1803               	skipnc
  7915  09BA  29BC               	goto	u2841
  7916  09BB  29BD               	goto	u2840
  7917  09BC                     u2841:
  7918  09BC  29E9               	goto	l2294
  7919  09BD                     u2840:
  7920  09BD                     l2284:
  7921  09BD  3001               	movlw	1
  7922  09BE                     u2855:
  7923  09BE  1003               	clrc
  7924  09BF  0DCB               	rlf	___ftadd@f2,f
  7925  09C0  0DCC               	rlf	___ftadd@f2+1,f
  7926  09C1  0DCD               	rlf	___ftadd@f2+2,f
  7927  09C2  3EFF               	addlw	-1
  7928  09C3  1D03               	skipz
  7929  09C4  29BE               	goto	u2855
  7930  09C5  3001               	movlw	1
  7931  09C6  02D3               	subwf	___ftadd@exp2,f
  7932  09C7                     l2286:
  7933  09C7  0853               	movf	___ftadd@exp2,w
  7934  09C8  0654               	xorwf	___ftadd@exp1,w
  7935  09C9  1903               	skipnz
  7936  09CA  29CC               	goto	u2861
  7937  09CB  29CD               	goto	u2860
  7938  09CC                     u2861:
  7939  09CC  29E2               	goto	l2292
  7940  09CD                     u2860:
  7941  09CD                     l2288:
  7942  09CD  3001               	movlw	1
  7943  09CE  02D2               	subwf	___ftadd@sign,f
  7944  09CF  0852               	movf	___ftadd@sign,w
  7945  09D0  3907               	andlw	7
  7946  09D1  1D03               	btfss	3,2
  7947  09D2  29D4               	goto	u2871
  7948  09D3  29D5               	goto	u2870
  7949  09D4                     u2871:
  7950  09D4  29BD               	goto	l2284
  7951  09D5                     u2870:
  7952  09D5  29E2               	goto	l2292
  7953  09D6                     l2290:
  7954  09D6  3001               	movlw	1
  7955  09D7                     u2885:
  7956  09D7  1003               	clrc
  7957  09D8  0CCA               	rrf	___ftadd@f1+2,f
  7958  09D9  0CC9               	rrf	___ftadd@f1+1,f
  7959  09DA  0CC8               	rrf	___ftadd@f1,f
  7960  09DB  3EFF               	addlw	-1
  7961  09DC  1D03               	skipz
  7962  09DD  29D7               	goto	u2885
  7963  09DE  3001               	movlw	1
  7964  09DF  00CE               	movwf	??___ftadd
  7965  09E0  084E               	movf	??___ftadd,w
  7966  09E1  07D4               	addwf	___ftadd@exp1,f
  7967  09E2                     l2292:
  7968  09E2  0854               	movf	___ftadd@exp1,w
  7969  09E3  0653               	xorwf	___ftadd@exp2,w
  7970  09E4  1D03               	skipz
  7971  09E5  29E7               	goto	u2891
  7972  09E6  29E8               	goto	u2890
  7973  09E7                     u2891:
  7974  09E7  29D6               	goto	l2290
  7975  09E8                     u2890:
  7976  09E8  2A1A               	goto	l654
  7977  09E9                     l2294:
  7978  09E9  0854               	movf	___ftadd@exp1,w
  7979  09EA  0253               	subwf	___ftadd@exp2,w
  7980  09EB  1803               	skipnc
  7981  09EC  29EE               	goto	u2901
  7982  09ED  29EF               	goto	u2900
  7983  09EE                     u2901:
  7984  09EE  2A1A               	goto	l654
  7985  09EF                     u2900:
  7986  09EF                     l2296:
  7987  09EF  3001               	movlw	1
  7988  09F0                     u2915:
  7989  09F0  1003               	clrc
  7990  09F1  0DC8               	rlf	___ftadd@f1,f
  7991  09F2  0DC9               	rlf	___ftadd@f1+1,f
  7992  09F3  0DCA               	rlf	___ftadd@f1+2,f
  7993  09F4  3EFF               	addlw	-1
  7994  09F5  1D03               	skipz
  7995  09F6  29F0               	goto	u2915
  7996  09F7  3001               	movlw	1
  7997  09F8  02D4               	subwf	___ftadd@exp1,f
  7998  09F9                     l2298:
  7999  09F9  0853               	movf	___ftadd@exp2,w
  8000  09FA  0654               	xorwf	___ftadd@exp1,w
  8001  09FB  1903               	skipnz
  8002  09FC  29FE               	goto	u2921
  8003  09FD  29FF               	goto	u2920
  8004  09FE                     u2921:
  8005  09FE  2A14               	goto	l2304
  8006  09FF                     u2920:
  8007  09FF                     l2300:
  8008  09FF  3001               	movlw	1
  8009  0A00  02D2               	subwf	___ftadd@sign,f
  8010  0A01  0852               	movf	___ftadd@sign,w
  8011  0A02  3907               	andlw	7
  8012  0A03  1D03               	btfss	3,2
  8013  0A04  2A06               	goto	u2931
  8014  0A05  2A07               	goto	u2930
  8015  0A06                     u2931:
  8016  0A06  29EF               	goto	l2296
  8017  0A07                     u2930:
  8018  0A07  2A14               	goto	l2304
  8019  0A08                     l2302:
  8020  0A08  3001               	movlw	1
  8021  0A09                     u2945:
  8022  0A09  1003               	clrc
  8023  0A0A  0CCD               	rrf	___ftadd@f2+2,f
  8024  0A0B  0CCC               	rrf	___ftadd@f2+1,f
  8025  0A0C  0CCB               	rrf	___ftadd@f2,f
  8026  0A0D  3EFF               	addlw	-1
  8027  0A0E  1D03               	skipz
  8028  0A0F  2A09               	goto	u2945
  8029  0A10  3001               	movlw	1
  8030  0A11  00CE               	movwf	??___ftadd
  8031  0A12  084E               	movf	??___ftadd,w
  8032  0A13  07D3               	addwf	___ftadd@exp2,f
  8033  0A14                     l2304:
  8034  0A14  0854               	movf	___ftadd@exp1,w
  8035  0A15  0653               	xorwf	___ftadd@exp2,w
  8036  0A16  1D03               	skipz
  8037  0A17  2A19               	goto	u2951
  8038  0A18  2A1A               	goto	u2950
  8039  0A19                     u2951:
  8040  0A19  2A08               	goto	l2302
  8041  0A1A                     u2950:
  8042  0A1A                     l654:
  8043  0A1A  1FD2               	btfss	___ftadd@sign,7
  8044  0A1B  2A1D               	goto	u2961
  8045  0A1C  2A1E               	goto	u2960
  8046  0A1D                     u2961:
  8047  0A1D  2A2E               	goto	l2308
  8048  0A1E                     u2960:
  8049  0A1E                     l2306:
  8050  0A1E  30FF               	movlw	255
  8051  0A1F  06C8               	xorwf	___ftadd@f1,f
  8052  0A20  30FF               	movlw	255
  8053  0A21  06C9               	xorwf	___ftadd@f1+1,f
  8054  0A22  30FF               	movlw	255
  8055  0A23  06CA               	xorwf	___ftadd@f1+2,f
  8056  0A24  3001               	movlw	1
  8057  0A25  07C8               	addwf	___ftadd@f1,f
  8058  0A26  3000               	movlw	0
  8059  0A27  1803               	skipnc
  8060  0A28  3001               	movlw	1
  8061  0A29  07C9               	addwf	___ftadd@f1+1,f
  8062  0A2A  3000               	movlw	0
  8063  0A2B  1803               	skipnc
  8064  0A2C  3001               	movlw	1
  8065  0A2D  07CA               	addwf	___ftadd@f1+2,f
  8066  0A2E                     l2308:
  8067  0A2E  1F52               	btfss	___ftadd@sign,6
  8068  0A2F  2A31               	goto	u2971
  8069  0A30  2A32               	goto	u2970
  8070  0A31                     u2971:
  8071  0A31  2A42               	goto	l2312
  8072  0A32                     u2970:
  8073  0A32                     l2310:
  8074  0A32  30FF               	movlw	255
  8075  0A33  06CB               	xorwf	___ftadd@f2,f
  8076  0A34  30FF               	movlw	255
  8077  0A35  06CC               	xorwf	___ftadd@f2+1,f
  8078  0A36  30FF               	movlw	255
  8079  0A37  06CD               	xorwf	___ftadd@f2+2,f
  8080  0A38  3001               	movlw	1
  8081  0A39  07CB               	addwf	___ftadd@f2,f
  8082  0A3A  3000               	movlw	0
  8083  0A3B  1803               	skipnc
  8084  0A3C  3001               	movlw	1
  8085  0A3D  07CC               	addwf	___ftadd@f2+1,f
  8086  0A3E  3000               	movlw	0
  8087  0A3F  1803               	skipnc
  8088  0A40  3001               	movlw	1
  8089  0A41  07CD               	addwf	___ftadd@f2+2,f
  8090  0A42                     l2312:
  8091  0A42  01D2               	clrf	___ftadd@sign
  8092  0A43                     l2314:
  8093  0A43  0848               	movf	___ftadd@f1,w
  8094  0A44  07CB               	addwf	___ftadd@f2,f
  8095  0A45  0849               	movf	___ftadd@f1+1,w
  8096  0A46  1103               	clrz
  8097  0A47  1803               	skipnc
  8098  0A48  0A49               	incf	___ftadd@f1+1,w
  8099  0A49  1903               	skipnz
  8100  0A4A  2A4C               	goto	u2981
  8101  0A4B  07CC               	addwf	___ftadd@f2+1,f
  8102  0A4C                     u2981:
  8103  0A4C  084A               	movf	___ftadd@f1+2,w
  8104  0A4D  1103               	clrz
  8105  0A4E  1803               	skipnc
  8106  0A4F  0A4A               	incf	___ftadd@f1+2,w
  8107  0A50  1903               	skipnz
  8108  0A51  2A53               	goto	u2982
  8109  0A52  07CD               	addwf	___ftadd@f2+2,f
  8110  0A53                     u2982:
  8111  0A53                     l2316:
  8112  0A53  1FCD               	btfss	___ftadd@f2+2,7
  8113  0A54  2A56               	goto	u2991
  8114  0A55  2A57               	goto	u2990
  8115  0A56                     u2991:
  8116  0A56  2A69               	goto	l2322
  8117  0A57                     u2990:
  8118  0A57                     l2318:
  8119  0A57  30FF               	movlw	255
  8120  0A58  06CB               	xorwf	___ftadd@f2,f
  8121  0A59  30FF               	movlw	255
  8122  0A5A  06CC               	xorwf	___ftadd@f2+1,f
  8123  0A5B  30FF               	movlw	255
  8124  0A5C  06CD               	xorwf	___ftadd@f2+2,f
  8125  0A5D  3001               	movlw	1
  8126  0A5E  07CB               	addwf	___ftadd@f2,f
  8127  0A5F  3000               	movlw	0
  8128  0A60  1803               	skipnc
  8129  0A61  3001               	movlw	1
  8130  0A62  07CC               	addwf	___ftadd@f2+1,f
  8131  0A63  3000               	movlw	0
  8132  0A64  1803               	skipnc
  8133  0A65  3001               	movlw	1
  8134  0A66  07CD               	addwf	___ftadd@f2+2,f
  8135  0A67                     l2320:
  8136  0A67  01D2               	clrf	___ftadd@sign
  8137  0A68  0AD2               	incf	___ftadd@sign,f
  8138  0A69                     l2322:
  8139  0A69  084B               	movf	___ftadd@f2,w
  8140  0A6A  00F0               	movwf	___ftpack@arg
  8141  0A6B  084C               	movf	___ftadd@f2+1,w
  8142  0A6C  00F1               	movwf	___ftpack@arg+1
  8143  0A6D  084D               	movf	___ftadd@f2+2,w
  8144  0A6E  00F2               	movwf	___ftpack@arg+2
  8145  0A6F  0854               	movf	___ftadd@exp1,w
  8146  0A70  00CE               	movwf	??___ftadd
  8147  0A71  084E               	movf	??___ftadd,w
  8148  0A72  00F3               	movwf	___ftpack@exp
  8149  0A73  0852               	movf	___ftadd@sign,w
  8150  0A74  00CF               	movwf	??___ftadd+1
  8151  0A75  084F               	movf	??___ftadd+1,w
  8152  0A76  00F4               	movwf	___ftpack@sign
  8153  0A77  160A  118A  228F  120A  158A  	fcall	___ftpack
  8154  0A7C  0870               	movf	?___ftpack,w
  8155  0A7D  1283               	bcf	3,5	;RP0=0, select bank0
  8156  0A7E  1303               	bcf	3,6	;RP1=0, select bank0
  8157  0A7F  00C8               	movwf	?___ftadd
  8158  0A80  0871               	movf	?___ftpack+1,w
  8159  0A81  00C9               	movwf	?___ftadd+1
  8160  0A82  0872               	movf	?___ftpack+2,w
  8161  0A83  00CA               	movwf	?___ftadd+2
  8162  0A84                     l640:
  8163  0A84  0008               	return
  8164  0A85                     __end_of___ftadd:
  8165                           
  8166                           	psect	text34
  8167  128F                     __ptext34:	
  8168 ;; *************** function ___ftpack *****************
  8169 ;; Defined at:
  8170 ;;		line 62 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\float.c"
  8171 ;; Parameters:    Size  Location     Type
  8172 ;;  arg             3    0[COMMON] unsigned um
  8173 ;;  exp             1    3[COMMON] unsigned char 
  8174 ;;  sign            1    4[COMMON] unsigned char 
  8175 ;; Auto vars:     Size  Location     Type
  8176 ;;		None
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  3    0[COMMON] float 
  8179 ;; Registers used:
  8180 ;;		wreg, status,2, status,0
  8181 ;; Tracked objects:
  8182 ;;		On entry : 0/0
  8183 ;;		On exit  : 0/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8186 ;;      Params:         5       0       0       0       0
  8187 ;;      Locals:         0       0       0       0       0
  8188 ;;      Temps:          3       0       0       0       0
  8189 ;;      Totals:         8       0       0       0       0
  8190 ;;Total ram usage:        8 bytes
  8191 ;; Hardware stack levels used:    1
  8192 ;; This function calls:
  8193 ;;		Nothing
  8194 ;; This function is called by:
  8195 ;;		___ftadd
  8196 ;;		___ftdiv
  8197 ;;		___ftmul
  8198 ;;		___lltoft
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           
  8203                           ;psect for function ___ftpack
  8204  128F                     ___ftpack:
  8205  128F                     l2100:	
  8206                           ;incstack = 0
  8207                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8208                           
  8209  128F  0873               	movf	___ftpack@exp,w
  8210  1290  1903               	btfsc	3,2
  8211  1291  2A93               	goto	u2421
  8212  1292  2A94               	goto	u2420
  8213  1293                     u2421:
  8214  1293  2A9B               	goto	l2104
  8215  1294                     u2420:
  8216  1294                     l2102:
  8217  1294  0872               	movf	___ftpack@arg+2,w
  8218  1295  0471               	iorwf	___ftpack@arg+1,w
  8219  1296  0470               	iorwf	___ftpack@arg,w
  8220  1297  1D03               	skipz
  8221  1298  2A9A               	goto	u2431
  8222  1299  2A9B               	goto	u2430
  8223  129A                     u2431:
  8224  129A  2AAE               	goto	l2110
  8225  129B                     u2430:
  8226  129B                     l2104:
  8227  129B  3000               	movlw	0
  8228  129C  00F0               	movwf	?___ftpack
  8229  129D  3000               	movlw	0
  8230  129E  00F1               	movwf	?___ftpack+1
  8231  129F  3000               	movlw	0
  8232  12A0  00F2               	movwf	?___ftpack+2
  8233  12A1  2B0A               	goto	l619
  8234  12A2                     l2108:
  8235  12A2  3001               	movlw	1
  8236  12A3  00F5               	movwf	??___ftpack
  8237  12A4  0875               	movf	??___ftpack,w
  8238  12A5  07F3               	addwf	___ftpack@exp,f
  8239  12A6  3001               	movlw	1
  8240  12A7                     u2445:
  8241  12A7  1003               	clrc
  8242  12A8  0CF2               	rrf	___ftpack@arg+2,f
  8243  12A9  0CF1               	rrf	___ftpack@arg+1,f
  8244  12AA  0CF0               	rrf	___ftpack@arg,f
  8245  12AB  3EFF               	addlw	-1
  8246  12AC  1D03               	skipz
  8247  12AD  2AA7               	goto	u2445
  8248  12AE                     l2110:
  8249  12AE  30FE               	movlw	254
  8250  12AF  0572               	andwf	___ftpack@arg+2,w
  8251  12B0  1D03               	btfss	3,2
  8252  12B1  2AB3               	goto	u2451
  8253  12B2  2AB4               	goto	u2450
  8254  12B3                     u2451:
  8255  12B3  2AA2               	goto	l2108
  8256  12B4                     u2450:
  8257  12B4  2ACB               	goto	l623
  8258  12B5                     l2112:
  8259  12B5  3001               	movlw	1
  8260  12B6  00F5               	movwf	??___ftpack
  8261  12B7  0875               	movf	??___ftpack,w
  8262  12B8  07F3               	addwf	___ftpack@exp,f
  8263  12B9                     l2114:
  8264  12B9  3001               	movlw	1
  8265  12BA  07F0               	addwf	___ftpack@arg,f
  8266  12BB  3000               	movlw	0
  8267  12BC  1803               	skipnc
  8268  12BD  3001               	movlw	1
  8269  12BE  07F1               	addwf	___ftpack@arg+1,f
  8270  12BF  3000               	movlw	0
  8271  12C0  1803               	skipnc
  8272  12C1  3001               	movlw	1
  8273  12C2  07F2               	addwf	___ftpack@arg+2,f
  8274  12C3                     l2116:
  8275  12C3  3001               	movlw	1
  8276  12C4                     u2465:
  8277  12C4  1003               	clrc
  8278  12C5  0CF2               	rrf	___ftpack@arg+2,f
  8279  12C6  0CF1               	rrf	___ftpack@arg+1,f
  8280  12C7  0CF0               	rrf	___ftpack@arg,f
  8281  12C8  3EFF               	addlw	-1
  8282  12C9  1D03               	skipz
  8283  12CA  2AC4               	goto	u2465
  8284  12CB                     l623:
  8285  12CB  30FF               	movlw	255
  8286  12CC  0572               	andwf	___ftpack@arg+2,w
  8287  12CD  1D03               	btfss	3,2
  8288  12CE  2AD0               	goto	u2471
  8289  12CF  2AD1               	goto	u2470
  8290  12D0                     u2471:
  8291  12D0  2AB5               	goto	l2112
  8292  12D1                     u2470:
  8293  12D1  2ADC               	goto	l2120
  8294  12D2                     l2118:
  8295  12D2  3001               	movlw	1
  8296  12D3  02F3               	subwf	___ftpack@exp,f
  8297  12D4  3001               	movlw	1
  8298  12D5                     u2485:
  8299  12D5  1003               	clrc
  8300  12D6  0DF0               	rlf	___ftpack@arg,f
  8301  12D7  0DF1               	rlf	___ftpack@arg+1,f
  8302  12D8  0DF2               	rlf	___ftpack@arg+2,f
  8303  12D9  3EFF               	addlw	-1
  8304  12DA  1D03               	skipz
  8305  12DB  2AD5               	goto	u2485
  8306  12DC                     l2120:
  8307  12DC  1BF1               	btfsc	___ftpack@arg+1,7
  8308  12DD  2ADF               	goto	u2491
  8309  12DE  2AE0               	goto	u2490
  8310  12DF                     u2491:
  8311  12DF  2AE6               	goto	l630
  8312  12E0                     u2490:
  8313  12E0                     l2122:
  8314  12E0  3002               	movlw	2
  8315  12E1  0273               	subwf	___ftpack@exp,w
  8316  12E2  1803               	skipnc
  8317  12E3  2AE5               	goto	u2501
  8318  12E4  2AE6               	goto	u2500
  8319  12E5                     u2501:
  8320  12E5  2AD2               	goto	l2118
  8321  12E6                     u2500:
  8322  12E6                     l630:
  8323  12E6  1873               	btfsc	___ftpack@exp,0
  8324  12E7  2AE9               	goto	u2511
  8325  12E8  2AEA               	goto	u2510
  8326  12E9                     u2511:
  8327  12E9  2AF0               	goto	l631
  8328  12EA                     u2510:
  8329  12EA                     l2124:
  8330  12EA  30FF               	movlw	255
  8331  12EB  05F0               	andwf	___ftpack@arg,f
  8332  12EC  307F               	movlw	127
  8333  12ED  05F1               	andwf	___ftpack@arg+1,f
  8334  12EE  30FF               	movlw	255
  8335  12EF  05F2               	andwf	___ftpack@arg+2,f
  8336  12F0                     l631:
  8337  12F0  1003               	clrc
  8338  12F1  0CF3               	rrf	___ftpack@exp,f
  8339  12F2                     l2126:
  8340  12F2  0873               	movf	___ftpack@exp,w
  8341  12F3  00F5               	movwf	??___ftpack
  8342  12F4  01F6               	clrf	??___ftpack+1
  8343  12F5  01F7               	clrf	??___ftpack+2
  8344  12F6  3010               	movlw	16
  8345  12F7                     u2525:
  8346  12F7  1003               	clrc
  8347  12F8  0DF5               	rlf	??___ftpack,f
  8348  12F9  0DF6               	rlf	??___ftpack+1,f
  8349  12FA  0DF7               	rlf	??___ftpack+2,f
  8350  12FB                     u2520:
  8351  12FB  3EFF               	addlw	-1
  8352  12FC  1D03               	skipz
  8353  12FD  2AF7               	goto	u2525
  8354  12FE  0875               	movf	??___ftpack,w
  8355  12FF  04F0               	iorwf	___ftpack@arg,f
  8356  1300  0876               	movf	??___ftpack+1,w
  8357  1301  04F1               	iorwf	___ftpack@arg+1,f
  8358  1302  0877               	movf	??___ftpack+2,w
  8359  1303  04F2               	iorwf	___ftpack@arg+2,f
  8360  1304                     l2128:
  8361  1304  0874               	movf	___ftpack@sign,w
  8362  1305  1903               	btfsc	3,2
  8363  1306  2B08               	goto	u2531
  8364  1307  2B09               	goto	u2530
  8365  1308                     u2531:
  8366  1308  2B0A               	goto	l632
  8367  1309                     u2530:
  8368  1309                     l2130:
  8369  1309  17F2               	bsf	___ftpack@arg+2,7
  8370  130A                     l632:
  8371  130A                     l619:
  8372  130A  0008               	return
  8373  130B                     __end_of___ftpack:
  8374                           
  8375                           	psect	text35
  8376  1F12                     __ptext35:	
  8377 ;; *************** function _I2C_Master_Init *****************
  8378 ;; Defined at:
  8379 ;;		line 16 in file "I2C.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;  c               4    0[BANK0 ] const unsigned long 
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;		None
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  1    wreg      void 
  8386 ;; Registers used:
  8387 ;;		wreg, status,2, status,0, pclath, cstack
  8388 ;; Tracked objects:
  8389 ;;		On entry : 0/0
  8390 ;;		On exit  : 0/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8393 ;;      Params:         0       4       0       0       0
  8394 ;;      Locals:         0       0       0       0       0
  8395 ;;      Temps:          0       4       0       0       0
  8396 ;;      Totals:         0       8       0       0       0
  8397 ;;Total ram usage:        8 bytes
  8398 ;; Hardware stack levels used:    1
  8399 ;; Hardware stack levels required when called:    1
  8400 ;; This function calls:
  8401 ;;		___lldiv
  8402 ;; This function is called by:
  8403 ;;		_main
  8404 ;;		_aht_begin
  8405 ;; This function uses a non-reentrant model
  8406 ;;
  8407                           
  8408                           
  8409                           ;psect for function _I2C_Master_Init
  8410  1F12                     _I2C_Master_Init:
  8411  1F12                     l2892:	
  8412                           ;incstack = 0
  8413                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  8414                           
  8415                           
  8416                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  8417  1F12  3028               	movlw	40
  8418  1F13  1283               	bcf	3,5	;RP0=0, select bank0
  8419  1F14  1303               	bcf	3,6	;RP1=0, select bank0
  8420  1F15  0094               	movwf	20	;volatile
  8421  1F16                     l2894:
  8422                           
  8423                           ;I2C.c: 19:     SSPCON2 = 0;
  8424  1F16  1683               	bsf	3,5	;RP0=1, select bank1
  8425  1F17  1303               	bcf	3,6	;RP1=0, select bank1
  8426  1F18  0191               	clrf	17	;volatile
  8427  1F19                     l2896:
  8428                           
  8429                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  8430  1F19  1283               	bcf	3,5	;RP0=0, select bank0
  8431  1F1A  1303               	bcf	3,6	;RP1=0, select bank0
  8432  1F1B  0820               	movf	I2C_Master_Init@c,w
  8433  1F1C  00A4               	movwf	??_I2C_Master_Init
  8434  1F1D  0821               	movf	I2C_Master_Init@c+1,w
  8435  1F1E  00A5               	movwf	??_I2C_Master_Init+1
  8436  1F1F  0822               	movf	I2C_Master_Init@c+2,w
  8437  1F20  00A6               	movwf	??_I2C_Master_Init+2
  8438  1F21  0823               	movf	I2C_Master_Init@c+3,w
  8439  1F22  00A7               	movwf	??_I2C_Master_Init+3
  8440  1F23  3002               	movlw	2
  8441  1F24                     u4285:
  8442  1F24  1003               	clrc
  8443  1F25  0DA4               	rlf	??_I2C_Master_Init,f
  8444  1F26  0DA5               	rlf	??_I2C_Master_Init+1,f
  8445  1F27  0DA6               	rlf	??_I2C_Master_Init+2,f
  8446  1F28  0DA7               	rlf	??_I2C_Master_Init+3,f
  8447  1F29                     u4280:
  8448  1F29  3EFF               	addlw	-1
  8449  1F2A  1D03               	skipz
  8450  1F2B  2F24               	goto	u4285
  8451  1F2C  0827               	movf	??_I2C_Master_Init+3,w
  8452  1F2D  00F3               	movwf	___lldiv@divisor+3
  8453  1F2E  0826               	movf	??_I2C_Master_Init+2,w
  8454  1F2F  00F2               	movwf	___lldiv@divisor+2
  8455  1F30  0825               	movf	??_I2C_Master_Init+1,w
  8456  1F31  00F1               	movwf	___lldiv@divisor+1
  8457  1F32  0824               	movf	??_I2C_Master_Init,w
  8458  1F33  00F0               	movwf	___lldiv@divisor
  8459  1F34  3000               	movlw	0
  8460  1F35  00F7               	movwf	___lldiv@dividend+3
  8461  1F36  303D               	movlw	61
  8462  1F37  00F6               	movwf	___lldiv@dividend+2
  8463  1F38  3009               	movlw	9
  8464  1F39  00F5               	movwf	___lldiv@dividend+1
  8465  1F3A  3000               	movlw	0
  8466  1F3B  00F4               	movwf	___lldiv@dividend
  8467  1F3C  160A  118A  21C0  160A  158A  	fcall	___lldiv
  8468  1F41  0870               	movf	?___lldiv,w
  8469  1F42  3EFF               	addlw	255
  8470  1F43  1683               	bsf	3,5	;RP0=1, select bank1
  8471  1F44  1303               	bcf	3,6	;RP1=0, select bank1
  8472  1F45  0093               	movwf	19	;volatile
  8473  1F46                     l2898:
  8474                           
  8475                           ;I2C.c: 21:     SSPSTAT = 0;
  8476  1F46  0194               	clrf	20	;volatile
  8477  1F47                     l2900:
  8478                           
  8479                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  8480  1F47  1587               	bsf	7,3	;volatile
  8481  1F48                     l2902:
  8482                           
  8483                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  8484  1F48  1607               	bsf	7,4	;volatile
  8485  1F49                     l80:
  8486  1F49  0008               	return
  8487  1F4A                     __end_of_I2C_Master_Init:
  8488                           
  8489                           	psect	text36
  8490  11C0                     __ptext36:	
  8491 ;; *************** function ___lldiv *****************
  8492 ;; Defined at:
  8493 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\__lldiv.c"
  8494 ;; Parameters:    Size  Location     Type
  8495 ;;  divisor         4    0[COMMON] unsigned long 
  8496 ;;  dividend        4    4[COMMON] unsigned long 
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;  quotient        4    9[COMMON] unsigned long 
  8499 ;;  counter         1   13[COMMON] unsigned char 
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  4    0[COMMON] unsigned long 
  8502 ;; Registers used:
  8503 ;;		wreg, status,2, status,0
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8509 ;;      Params:         8       0       0       0       0
  8510 ;;      Locals:         5       0       0       0       0
  8511 ;;      Temps:          1       0       0       0       0
  8512 ;;      Totals:        14       0       0       0       0
  8513 ;;Total ram usage:       14 bytes
  8514 ;; Hardware stack levels used:    1
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_I2C_Master_Init
  8519 ;;		_sprintf
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           
  8524                           ;psect for function ___lldiv
  8525  11C0                     ___lldiv:
  8526  11C0                     l2646:	
  8527                           ;incstack = 0
  8528                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8529                           
  8530  11C0  3000               	movlw	0
  8531  11C1  00FC               	movwf	___lldiv@quotient+3
  8532  11C2  3000               	movlw	0
  8533  11C3  00FB               	movwf	___lldiv@quotient+2
  8534  11C4  3000               	movlw	0
  8535  11C5  00FA               	movwf	___lldiv@quotient+1
  8536  11C6  3000               	movlw	0
  8537  11C7  00F9               	movwf	___lldiv@quotient
  8538  11C8  0873               	movf	___lldiv@divisor+3,w
  8539  11C9  0472               	iorwf	___lldiv@divisor+2,w
  8540  11CA  0471               	iorwf	___lldiv@divisor+1,w
  8541  11CB  0470               	iorwf	___lldiv@divisor,w
  8542  11CC  1903               	skipnz
  8543  11CD  29CF               	goto	u3741
  8544  11CE  29D0               	goto	u3740
  8545  11CF                     u3741:
  8546  11CF  2A1D               	goto	l2666
  8547  11D0                     u3740:
  8548  11D0                     l2648:
  8549  11D0  01FD               	clrf	___lldiv@counter
  8550  11D1  0AFD               	incf	___lldiv@counter,f
  8551  11D2  29E0               	goto	l2652
  8552  11D3                     l2650:
  8553  11D3  3001               	movlw	1
  8554  11D4  00F8               	movwf	??___lldiv
  8555  11D5                     u3755:
  8556  11D5  1003               	clrc
  8557  11D6  0DF0               	rlf	___lldiv@divisor,f
  8558  11D7  0DF1               	rlf	___lldiv@divisor+1,f
  8559  11D8  0DF2               	rlf	___lldiv@divisor+2,f
  8560  11D9  0DF3               	rlf	___lldiv@divisor+3,f
  8561  11DA  0BF8               	decfsz	??___lldiv,f
  8562  11DB  29D5               	goto	u3755
  8563  11DC  3001               	movlw	1
  8564  11DD  00F8               	movwf	??___lldiv
  8565  11DE  0878               	movf	??___lldiv,w
  8566  11DF  07FD               	addwf	___lldiv@counter,f
  8567  11E0                     l2652:
  8568  11E0  1FF3               	btfss	___lldiv@divisor+3,7
  8569  11E1  29E3               	goto	u3761
  8570  11E2  29E4               	goto	u3760
  8571  11E3                     u3761:
  8572  11E3  29D3               	goto	l2650
  8573  11E4                     u3760:
  8574  11E4                     l2654:
  8575  11E4  3001               	movlw	1
  8576  11E5  00F8               	movwf	??___lldiv
  8577  11E6                     u3775:
  8578  11E6  1003               	clrc
  8579  11E7  0DF9               	rlf	___lldiv@quotient,f
  8580  11E8  0DFA               	rlf	___lldiv@quotient+1,f
  8581  11E9  0DFB               	rlf	___lldiv@quotient+2,f
  8582  11EA  0DFC               	rlf	___lldiv@quotient+3,f
  8583  11EB  0BF8               	decfsz	??___lldiv,f
  8584  11EC  29E6               	goto	u3775
  8585  11ED                     l2656:
  8586  11ED  0873               	movf	___lldiv@divisor+3,w
  8587  11EE  0277               	subwf	___lldiv@dividend+3,w
  8588  11EF  1D03               	skipz
  8589  11F0  29FB               	goto	u3785
  8590  11F1  0872               	movf	___lldiv@divisor+2,w
  8591  11F2  0276               	subwf	___lldiv@dividend+2,w
  8592  11F3  1D03               	skipz
  8593  11F4  29FB               	goto	u3785
  8594  11F5  0871               	movf	___lldiv@divisor+1,w
  8595  11F6  0275               	subwf	___lldiv@dividend+1,w
  8596  11F7  1D03               	skipz
  8597  11F8  29FB               	goto	u3785
  8598  11F9  0870               	movf	___lldiv@divisor,w
  8599  11FA  0274               	subwf	___lldiv@dividend,w
  8600  11FB                     u3785:
  8601  11FB  1C03               	skipc
  8602  11FC  29FE               	goto	u3781
  8603  11FD  29FF               	goto	u3780
  8604  11FE                     u3781:
  8605  11FE  2A0E               	goto	l2662
  8606  11FF                     u3780:
  8607  11FF                     l2658:
  8608  11FF  0870               	movf	___lldiv@divisor,w
  8609  1200  02F4               	subwf	___lldiv@dividend,f
  8610  1201  0871               	movf	___lldiv@divisor+1,w
  8611  1202  1C03               	skipc
  8612  1203  0F71               	incfsz	___lldiv@divisor+1,w
  8613  1204  02F5               	subwf	___lldiv@dividend+1,f
  8614  1205  0872               	movf	___lldiv@divisor+2,w
  8615  1206  1C03               	skipc
  8616  1207  0F72               	incfsz	___lldiv@divisor+2,w
  8617  1208  02F6               	subwf	___lldiv@dividend+2,f
  8618  1209  0873               	movf	___lldiv@divisor+3,w
  8619  120A  1C03               	skipc
  8620  120B  0F73               	incfsz	___lldiv@divisor+3,w
  8621  120C  02F7               	subwf	___lldiv@dividend+3,f
  8622  120D                     l2660:
  8623  120D  1479               	bsf	___lldiv@quotient,0
  8624  120E                     l2662:
  8625  120E  3001               	movlw	1
  8626  120F                     u3795:
  8627  120F  1003               	clrc
  8628  1210  0CF3               	rrf	___lldiv@divisor+3,f
  8629  1211  0CF2               	rrf	___lldiv@divisor+2,f
  8630  1212  0CF1               	rrf	___lldiv@divisor+1,f
  8631  1213  0CF0               	rrf	___lldiv@divisor,f
  8632  1214  3EFF               	addlw	-1
  8633  1215  1D03               	skipz
  8634  1216  2A0F               	goto	u3795
  8635  1217                     l2664:
  8636  1217  3001               	movlw	1
  8637  1218  02FD               	subwf	___lldiv@counter,f
  8638  1219  1D03               	btfss	3,2
  8639  121A  2A1C               	goto	u3801
  8640  121B  2A1D               	goto	u3800
  8641  121C                     u3801:
  8642  121C  29E4               	goto	l2654
  8643  121D                     u3800:
  8644  121D                     l2666:
  8645  121D  087C               	movf	___lldiv@quotient+3,w
  8646  121E  00F3               	movwf	?___lldiv+3
  8647  121F  087B               	movf	___lldiv@quotient+2,w
  8648  1220  00F2               	movwf	?___lldiv+2
  8649  1221  087A               	movf	___lldiv@quotient+1,w
  8650  1222  00F1               	movwf	?___lldiv+1
  8651  1223  0879               	movf	___lldiv@quotient,w
  8652  1224  00F0               	movwf	?___lldiv
  8653  1225                     l430:
  8654  1225  0008               	return
  8655  1226                     __end_of___lldiv:
  8656  007E                     btemp	set	126	;btemp
  8657  007E                     wtemp0	set	126
  8658                           
  8659                           	psect	config
  8660                           
  8661                           ;Config register CONFIG1 @ 0x2007
  8662                           ;	Oscillator Selection bits
  8663                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8664                           ;	Watchdog Timer Enable bit
  8665                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8666                           ;	Power-up Timer Enable bit
  8667                           ;	PWRTE = OFF, PWRT disabled
  8668                           ;	RE3/MCLR pin function select bit
  8669                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8670                           ;	Code Protection bit
  8671                           ;	CP = OFF, Program memory code protection is disabled
  8672                           ;	Data Code Protection bit
  8673                           ;	CPD = OFF, Data memory code protection is disabled
  8674                           ;	Brown Out Reset Selection bits
  8675                           ;	BOREN = OFF, BOR disabled
  8676                           ;	Internal External Switchover bit
  8677                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8678                           ;	Fail-Safe Clock Monitor Enabled bit
  8679                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8680                           ;	Low Voltage Programming Enable bit
  8681                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8682                           ;	In-Circuit Debugger Mode bit
  8683                           ;	DEBUG = 0x1, unprogrammed default
  8684  2007                     	org	8199
  8685  2007  20D4               	dw	8404
  8686                           
  8687                           ;Config register CONFIG2 @ 0x2008
  8688                           ;	Brown-out Reset Selection bit
  8689                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8690                           ;	Flash Program Memory Self Write Enable bits
  8691                           ;	WRT = OFF, Write protection off
  8692  2008                     	org	8200
  8693  2008  3FFF               	dw	16383
  8694                           
  8695                           	psect	text5_split_1
  8696  0292                     u4440:
  8697  0292                     l3014:
  8698  0292  1683               	bsf	3,5	;RP0=1, select bank1
  8699  0293  1303               	bcf	3,6	;RP1=0, select bank1
  8700  0294  0835               	movf	(sprintf@fval+2)^(0+128),w
  8701  0295  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  8702  0296  0433               	iorwf	sprintf@fval^(0+128),w
  8703  0297  1903               	skipnz
  8704  0298  2A9A               	goto	u4451
  8705  0299  2A9B               	goto	u4450
  8706  029A                     u4451:
  8707  029A  2B2B               	goto	l3034
  8708  029B                     u4450:
  8709  029B                     l3016:
  8710  029B  0833               	movf	sprintf@fval^(0+128),w
  8711  029C  1283               	bcf	3,5	;RP0=0, select bank0
  8712  029D  1303               	bcf	3,6	;RP1=0, select bank0
  8713  029E  00C1               	movwf	___fttol@f1
  8714  029F  1683               	bsf	3,5	;RP0=1, select bank1
  8715  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  8716  02A1  0834               	movf	(sprintf@fval+1)^(0+128),w
  8717  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  8718  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  8719  02A4  00C2               	movwf	___fttol@f1+1
  8720  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  8721  02A6  1303               	bcf	3,6	;RP1=0, select bank1
  8722  02A7  0835               	movf	(sprintf@fval+2)^(0+128),w
  8723  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  8724  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  8725  02AA  00C3               	movwf	___fttol@f1+2
  8726  02AB  160A  118A  2387  120A  118A  	fcall	___fttol
  8727  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  8728  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  8729  02B2  0844               	movf	?___fttol+3,w
  8730  02B3  0443               	iorwf	?___fttol+2,w
  8731  02B4  0442               	iorwf	?___fttol+1,w
  8732  02B5  0441               	iorwf	?___fttol,w
  8733  02B6  1D03               	skipz
  8734  02B7  2AB9               	goto	u4461
  8735  02B8  2ABA               	goto	u4460
  8736  02B9                     u4461:
  8737  02B9  2B2B               	goto	l3034
  8738  02BA                     u4460:
  8739  02BA                     l3018:
  8740  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  8741  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  8742  02BC  0831               	movf	(sprintf@eexp+1)^(0+128),w
  8743  02BD  3A80               	xorlw	128
  8744  02BE  00FF               	movwf	btemp+1
  8745  02BF  3080               	movlw	128
  8746  02C0  027F               	subwf	btemp+1,w
  8747  02C1  1D03               	skipz
  8748  02C2  2AC5               	goto	u4475
  8749  02C3  3002               	movlw	2
  8750  02C4  0230               	subwf	sprintf@eexp^(0+128),w
  8751  02C5                     u4475:
  8752  02C5  1C03               	skipc
  8753  02C6  2AC8               	goto	u4471
  8754  02C7  2AC9               	goto	u4470
  8755  02C8                     u4471:
  8756  02C8  2B2B               	goto	l3034
  8757  02C9                     u4470:
  8758  02C9                     l3020:
  8759                           
  8760                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1146:      if(tmpval.integ < 4.2
      +                          94967296){
  8761  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  8762  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  8763  02CB  082C               	movf	sprintf@tmpval^(0+128),w
  8764  02CC  00F0               	movwf	___ftge@ff1
  8765  02CD  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  8766  02CE  00F1               	movwf	___ftge@ff1+1
  8767  02CF  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  8768  02D0  00F2               	movwf	___ftge@ff1+2
  8769  02D1  3070               	movlw	112
  8770  02D2  00F3               	movwf	___ftge@ff2
  8771  02D3  3089               	movlw	137
  8772  02D4  00F4               	movwf	___ftge@ff2+1
  8773  02D5  3040               	movlw	64
  8774  02D6  00F5               	movwf	___ftge@ff2+2
  8775  02D7  160A  158A  274A  120A  118A  	fcall	___ftge
  8776  02DC  1803               	btfsc	3,0
  8777  02DD  2ADF               	goto	u4481
  8778  02DE  2AE0               	goto	u4480
  8779  02DF                     u4481:
  8780  02DF  2AE9               	goto	l3024
  8781  02E0                     u4480:
  8782  02E0                     l3022:
  8783                           
  8784                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1147:       eexp -= (sizeof dpow
      +                          ers/sizeof dpowers[0])-1;
  8785  02E0  30F7               	movlw	247
  8786  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  8787  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  8788  02E3  07B0               	addwf	sprintf@eexp^(0+128),f
  8789  02E4  1803               	skipnc
  8790  02E5  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  8791  02E6  30FF               	movlw	255
  8792  02E7  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  8793                           
  8794                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1148:      }else{
  8795  02E8  2AF1               	goto	l3026
  8796  02E9                     l3024:
  8797                           
  8798                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1149:       eexp -= (sizeof dpow
      +                          ers/sizeof dpowers[0])-2;
  8799  02E9  30F8               	movlw	248
  8800  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  8801  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  8802  02EC  07B0               	addwf	sprintf@eexp^(0+128),f
  8803  02ED  1803               	skipnc
  8804  02EE  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  8805  02EF  30FF               	movlw	255
  8806  02F0  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  8807  02F1                     l3026:
  8808                           
  8809                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1151:      tmpval.integ = scale(
      +                          eexp);
  8810  02F1  0830               	movf	sprintf@eexp^(0+128),w
  8811  02F2  120A  158A  2285  120A  118A  	fcall	_scale
  8812  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  8813  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  8814  02F9  0838               	movf	?_scale,w
  8815  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  8816  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  8817  02FC  00AC               	movwf	sprintf@tmpval^(0+128)
  8818  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  8819  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  8820  02FF  0839               	movf	?_scale+1,w
  8821  0300  1683               	bsf	3,5	;RP0=1, select bank1
  8822  0301  1303               	bcf	3,6	;RP1=0, select bank1
  8823  0302  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  8824  0303  1283               	bcf	3,5	;RP0=0, select bank0
  8825  0304  1303               	bcf	3,6	;RP1=0, select bank0
  8826  0305  083A               	movf	?_scale+2,w
  8827  0306  1683               	bsf	3,5	;RP0=1, select bank1
  8828  0307  1303               	bcf	3,6	;RP1=0, select bank1
  8829  0308  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  8830  0309                     l3030:	
  8831                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1152:      val = ((sizeof(double
      +                          )== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  8832                           
  8833  0309  0833               	movf	sprintf@fval^(0+128),w
  8834  030A  00F0               	movwf	__tdiv_to_l_@f1
  8835  030B  0834               	movf	(sprintf@fval+1)^(0+128),w
  8836  030C  00F1               	movwf	__tdiv_to_l_@f1+1
  8837  030D  0835               	movf	(sprintf@fval+2)^(0+128),w
  8838  030E  00F2               	movwf	__tdiv_to_l_@f1+2
  8839  030F  082C               	movf	sprintf@tmpval^(0+128),w
  8840  0310  00F3               	movwf	__tdiv_to_l_@f2
  8841  0311  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  8842  0312  00F4               	movwf	__tdiv_to_l_@f2+1
  8843  0313  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  8844  0314  00F5               	movwf	__tdiv_to_l_@f2+2
  8845  0315  160A  118A  24B0  120A  118A  	fcall	__tdiv_to_l_
  8846  031A  0873               	movf	?__tdiv_to_l_+3,w
  8847  031B  1683               	bsf	3,5	;RP0=1, select bank1
  8848  031C  1303               	bcf	3,6	;RP1=0, select bank1
  8849  031D  00A7               	movwf	(sprintf@val+3)^(0+128)
  8850  031E  0872               	movf	?__tdiv_to_l_+2,w
  8851  031F  00A6               	movwf	(sprintf@val+2)^(0+128)
  8852  0320  0871               	movf	?__tdiv_to_l_+1,w
  8853  0321  00A5               	movwf	(sprintf@val+1)^(0+128)
  8854  0322  0870               	movf	?__tdiv_to_l_,w
  8855  0323  00A4               	movwf	sprintf@val^(0+128)
  8856  0324                     l3032:
  8857                           
  8858                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1155:      fval = 0.0;
  8859  0324  3000               	movlw	0
  8860  0325  00B3               	movwf	sprintf@fval^(0+128)
  8861  0326  3000               	movlw	0
  8862  0327  00B4               	movwf	(sprintf@fval+1)^(0+128)
  8863  0328  3000               	movlw	0
  8864  0329  00B5               	movwf	(sprintf@fval+2)^(0+128)
  8865                           
  8866                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1156:     } else {
  8867  032A  2B9A               	goto	l3038
  8868  032B                     l3034:
  8869                           
  8870                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1157:      val = (unsigned long)
      +                          fval;
  8871  032B  1683               	bsf	3,5	;RP0=1, select bank1
  8872  032C  1303               	bcf	3,6	;RP1=0, select bank1
  8873  032D  0833               	movf	sprintf@fval^(0+128),w
  8874  032E  1283               	bcf	3,5	;RP0=0, select bank0
  8875  032F  1303               	bcf	3,6	;RP1=0, select bank0
  8876  0330  00C1               	movwf	___fttol@f1
  8877  0331  1683               	bsf	3,5	;RP0=1, select bank1
  8878  0332  1303               	bcf	3,6	;RP1=0, select bank1
  8879  0333  0834               	movf	(sprintf@fval+1)^(0+128),w
  8880  0334  1283               	bcf	3,5	;RP0=0, select bank0
  8881  0335  1303               	bcf	3,6	;RP1=0, select bank0
  8882  0336  00C2               	movwf	___fttol@f1+1
  8883  0337  1683               	bsf	3,5	;RP0=1, select bank1
  8884  0338  1303               	bcf	3,6	;RP1=0, select bank1
  8885  0339  0835               	movf	(sprintf@fval+2)^(0+128),w
  8886  033A  1283               	bcf	3,5	;RP0=0, select bank0
  8887  033B  1303               	bcf	3,6	;RP1=0, select bank0
  8888  033C  00C3               	movwf	___fttol@f1+2
  8889  033D  160A  118A  2387  120A  118A  	fcall	___fttol
  8890  0342  1283               	bcf	3,5	;RP0=0, select bank0
  8891  0343  1303               	bcf	3,6	;RP1=0, select bank0
  8892  0344  0844               	movf	?___fttol+3,w
  8893  0345  1683               	bsf	3,5	;RP0=1, select bank1
  8894  0346  1303               	bcf	3,6	;RP1=0, select bank1
  8895  0347  00A7               	movwf	(sprintf@val+3)^(0+128)
  8896  0348  1283               	bcf	3,5	;RP0=0, select bank0
  8897  0349  1303               	bcf	3,6	;RP1=0, select bank0
  8898  034A  0843               	movf	?___fttol+2,w
  8899  034B  1683               	bsf	3,5	;RP0=1, select bank1
  8900  034C  1303               	bcf	3,6	;RP1=0, select bank1
  8901  034D  00A6               	movwf	(sprintf@val+2)^(0+128)
  8902  034E  1283               	bcf	3,5	;RP0=0, select bank0
  8903  034F  1303               	bcf	3,6	;RP1=0, select bank0
  8904  0350  0842               	movf	?___fttol+1,w
  8905  0351  1683               	bsf	3,5	;RP0=1, select bank1
  8906  0352  1303               	bcf	3,6	;RP1=0, select bank1
  8907  0353  00A5               	movwf	(sprintf@val+1)^(0+128)
  8908  0354  1283               	bcf	3,5	;RP0=0, select bank0
  8909  0355  1303               	bcf	3,6	;RP1=0, select bank0
  8910  0356  0841               	movf	?___fttol,w
  8911  0357  1683               	bsf	3,5	;RP0=1, select bank1
  8912  0358  1303               	bcf	3,6	;RP1=0, select bank1
  8913  0359  00A4               	movwf	sprintf@val^(0+128)
  8914                           
  8915                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1158:      fval -= (double)val;
  8916  035A  0827               	movf	(sprintf@val+3)^(0+128),w
  8917  035B  00FD               	movwf	___lltoft@c+3
  8918  035C  0826               	movf	(sprintf@val+2)^(0+128),w
  8919  035D  00FC               	movwf	___lltoft@c+2
  8920  035E  0825               	movf	(sprintf@val+1)^(0+128),w
  8921  035F  00FB               	movwf	___lltoft@c+1
  8922  0360  0824               	movf	sprintf@val^(0+128),w
  8923  0361  00FA               	movwf	___lltoft@c
  8924  0362  160A  158A  26E1  120A  118A  	fcall	___lltoft
  8925  0367  087A               	movf	?___lltoft,w
  8926  0368  1283               	bcf	3,5	;RP0=0, select bank0
  8927  0369  1303               	bcf	3,6	;RP1=0, select bank0
  8928  036A  00D5               	movwf	___ftsub@f2
  8929  036B  087B               	movf	?___lltoft+1,w
  8930  036C  00D6               	movwf	___ftsub@f2+1
  8931  036D  087C               	movf	?___lltoft+2,w
  8932  036E  00D7               	movwf	___ftsub@f2+2
  8933  036F  1683               	bsf	3,5	;RP0=1, select bank1
  8934  0370  1303               	bcf	3,6	;RP1=0, select bank1
  8935  0371  0833               	movf	sprintf@fval^(0+128),w
  8936  0372  1283               	bcf	3,5	;RP0=0, select bank0
  8937  0373  1303               	bcf	3,6	;RP1=0, select bank0
  8938  0374  00D8               	movwf	___ftsub@f1
  8939  0375  1683               	bsf	3,5	;RP0=1, select bank1
  8940  0376  1303               	bcf	3,6	;RP1=0, select bank1
  8941  0377  0834               	movf	(sprintf@fval+1)^(0+128),w
  8942  0378  1283               	bcf	3,5	;RP0=0, select bank0
  8943  0379  1303               	bcf	3,6	;RP1=0, select bank0
  8944  037A  00D9               	movwf	___ftsub@f1+1
  8945  037B  1683               	bsf	3,5	;RP0=1, select bank1
  8946  037C  1303               	bcf	3,6	;RP1=0, select bank1
  8947  037D  0835               	movf	(sprintf@fval+2)^(0+128),w
  8948  037E  1283               	bcf	3,5	;RP0=0, select bank0
  8949  037F  1303               	bcf	3,6	;RP1=0, select bank0
  8950  0380  00DA               	movwf	___ftsub@f1+2
  8951  0381  160A  158A  2644  120A  118A  	fcall	___ftsub
  8952  0386  1283               	bcf	3,5	;RP0=0, select bank0
  8953  0387  1303               	bcf	3,6	;RP1=0, select bank0
  8954  0388  0855               	movf	?___ftsub,w
  8955  0389  1683               	bsf	3,5	;RP0=1, select bank1
  8956  038A  1303               	bcf	3,6	;RP1=0, select bank1
  8957  038B  00B3               	movwf	sprintf@fval^(0+128)
  8958  038C  1283               	bcf	3,5	;RP0=0, select bank0
  8959  038D  1303               	bcf	3,6	;RP1=0, select bank0
  8960  038E  0856               	movf	?___ftsub+1,w
  8961  038F  1683               	bsf	3,5	;RP0=1, select bank1
  8962  0390  1303               	bcf	3,6	;RP1=0, select bank1
  8963  0391  00B4               	movwf	(sprintf@fval+1)^(0+128)
  8964  0392  1283               	bcf	3,5	;RP0=0, select bank0
  8965  0393  1303               	bcf	3,6	;RP1=0, select bank0
  8966  0394  0857               	movf	?___ftsub+2,w
  8967  0395  1683               	bsf	3,5	;RP0=1, select bank1
  8968  0396  1303               	bcf	3,6	;RP1=0, select bank1
  8969  0397  00B5               	movwf	(sprintf@fval+2)^(0+128)
  8970  0398                     l3036:
  8971                           
  8972                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1159:      eexp = 0;
  8973  0398  01B0               	clrf	sprintf@eexp^(0+128)
  8974  0399  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  8975  039A                     l3038:
  8976                           
  8977                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1162:     for(c = 1 ; c != (size
      +                          of dpowers/sizeof dpowers[0]) ; c++)
  8978  039A  01B8               	clrf	sprintf@c^(0+128)
  8979  039B  0AB8               	incf	sprintf@c^(0+128),f
  8980  039C                     l3044:
  8981                           
  8982                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1163:      if(val < dpowers[c])
  8983  039C  0838               	movf	sprintf@c^(0+128),w
  8984  039D  1283               	bcf	3,5	;RP0=0, select bank0
  8985  039E  1303               	bcf	3,6	;RP1=0, select bank0
  8986  039F  00DF               	movwf	??_sprintf
  8987  03A0  3001               	movlw	1
  8988  03A1                     u4495:
  8989  03A1  1003               	clrc
  8990  03A2  0DDF               	rlf	??_sprintf,f
  8991  03A3  3EFF               	addlw	-1
  8992  03A4  1D03               	skipz
  8993  03A5  2BA1               	goto	u4495
  8994  03A6  1003               	clrc
  8995  03A7  0D5F               	rlf	??_sprintf,w
  8996  03A8  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8997  03A9  0084               	movwf	4
  8998  03AA  160A  118A  2000  120A  118A  	fcall	stringdir
  8999  03AF  00E0               	movwf	??_sprintf+1
  9000  03B0  160A  118A  2000  120A  118A  	fcall	stringdir
  9001  03B5  00E1               	movwf	??_sprintf+2
  9002  03B6  160A  118A  2000  120A  118A  	fcall	stringdir
  9003  03BB  00E2               	movwf	??_sprintf+3
  9004  03BC  160A  118A  2000  120A  118A  	fcall	stringdir
  9005  03C1  00E3               	movwf	??_sprintf+4
  9006  03C2  0863               	movf	??_sprintf+4,w
  9007  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  9008  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  9009  03C5  0227               	subwf	(sprintf@val+3)^(0+128),w
  9010  03C6  1D03               	skipz
  9011  03C7  2BDE               	goto	u4505
  9012  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  9013  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  9014  03CA  0862               	movf	??_sprintf+3,w
  9015  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  9016  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  9017  03CD  0226               	subwf	(sprintf@val+2)^(0+128),w
  9018  03CE  1D03               	skipz
  9019  03CF  2BDE               	goto	u4505
  9020  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  9021  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  9022  03D2  0861               	movf	??_sprintf+2,w
  9023  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  9024  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  9025  03D5  0225               	subwf	(sprintf@val+1)^(0+128),w
  9026  03D6  1D03               	skipz
  9027  03D7  2BDE               	goto	u4505
  9028  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  9029  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  9030  03DA  0860               	movf	??_sprintf+1,w
  9031  03DB  1683               	bsf	3,5	;RP0=1, select bank1
  9032  03DC  1303               	bcf	3,6	;RP1=0, select bank1
  9033  03DD  0224               	subwf	sprintf@val^(0+128),w
  9034  03DE                     u4505:
  9035  03DE  1803               	skipnc
  9036  03DF  2BE1               	goto	u4501
  9037  03E0  2BE2               	goto	u4500
  9038  03E1                     u4501:
  9039  03E1  2BE3               	goto	l3048
  9040  03E2                     u4500:
  9041  03E2  2BF1               	goto	l3050
  9042  03E3                     l3048:
  9043  03E3  3001               	movlw	1
  9044  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  9045  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  9046  03E6  00DF               	movwf	??_sprintf
  9047  03E7  085F               	movf	??_sprintf,w
  9048  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  9049  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  9050  03EA  07B8               	addwf	sprintf@c^(0+128),f
  9051  03EB  300A               	movlw	10
  9052  03EC  0638               	xorwf	sprintf@c^(0+128),w
  9053  03ED  1D03               	btfss	3,2
  9054  03EE  2BF0               	goto	u4511
  9055  03EF  2BF1               	goto	u4510
  9056  03F0                     u4511:
  9057  03F0  2B9C               	goto	l3044
  9058  03F1                     u4510:
  9059  03F1                     l3050:
  9060                           
  9061                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1168:     width -= prec + c + ee
      +                          xp;
  9062  03F1  0838               	movf	sprintf@c^(0+128),w
  9063  03F2  0736               	addwf	sprintf@prec^(0+128),w
  9064  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  9065  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  9066  03F5  00DF               	movwf	??_sprintf
  9067  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  9068  03F7  1303               	bcf	3,6	;RP1=0, select bank1
  9069  03F8  0837               	movf	(sprintf@prec+1)^(0+128),w
  9070  03F9  1803               	skipnc
  9071  03FA  0A37               	incf	(sprintf@prec+1)^(0+128),w
  9072  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  9073  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  9074  03FD  00E0               	movwf	??_sprintf+1
  9075  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  9076  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  9077  0400  0830               	movf	sprintf@eexp^(0+128),w
  9078  0401  1283               	bcf	3,5	;RP0=0, select bank0
  9079  0402  1303               	bcf	3,6	;RP1=0, select bank0
  9080  0403  075F               	addwf	??_sprintf,w
  9081  0404  00E1               	movwf	??_sprintf+2
  9082  0405  1683               	bsf	3,5	;RP0=1, select bank1
  9083  0406  1303               	bcf	3,6	;RP1=0, select bank1
  9084  0407  0831               	movf	(sprintf@eexp+1)^(0+128),w
  9085  0408  1803               	skipnc
  9086  0409  0A31               	incf	(sprintf@eexp+1)^(0+128),w
  9087  040A  1283               	bcf	3,5	;RP0=0, select bank0
  9088  040B  1303               	bcf	3,6	;RP1=0, select bank0
  9089  040C  0760               	addwf	??_sprintf+1,w
  9090  040D  00E2               	movwf	??_sprintf+3
  9091  040E  0861               	movf	??_sprintf+2,w
  9092  040F  1683               	bsf	3,5	;RP0=1, select bank1
  9093  0410  1303               	bcf	3,6	;RP1=0, select bank1
  9094  0411  02AA               	subwf	sprintf@width^(0+128),f
  9095  0412  1283               	bcf	3,5	;RP0=0, select bank0
  9096  0413  1303               	bcf	3,6	;RP1=0, select bank0
  9097  0414  0862               	movf	??_sprintf+3,w
  9098  0415  1683               	bsf	3,5	;RP0=1, select bank1
  9099  0416  1303               	bcf	3,6	;RP1=0, select bank1
  9100  0417  1C03               	skipc
  9101  0418  03AB               	decf	(sprintf@width+1)^(0+128),f
  9102  0419  02AB               	subwf	(sprintf@width+1)^(0+128),f
  9103                           
  9104                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1169:     if(
  9105  041A  0836               	movf	sprintf@prec^(0+128),w
  9106  041B  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9107  041C  1903               	btfsc	3,2
  9108  041D  2C1F               	goto	u4521
  9109  041E  2C20               	goto	u4520
  9110  041F                     u4521:
  9111  041F  2C26               	goto	l3054
  9112  0420                     u4520:
  9113  0420                     l3052:
  9114                           
  9115                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1174:      width--;
  9116  0420  30FF               	movlw	255
  9117  0421  07AA               	addwf	sprintf@width^(0+128),f
  9118  0422  1803               	skipnc
  9119  0423  0AAB               	incf	(sprintf@width+1)^(0+128),f
  9120  0424  30FF               	movlw	255
  9121  0425  07AB               	addwf	(sprintf@width+1)^(0+128),f
  9122  0426                     l3054:
  9123                           
  9124                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1175:     if(flag & 0x03)
  9125  0426  3003               	movlw	3
  9126  0427  0528               	andwf	sprintf@flag^(0+128),w
  9127  0428  1283               	bcf	3,5	;RP0=0, select bank0
  9128  0429  1303               	bcf	3,6	;RP1=0, select bank0
  9129  042A  00DF               	movwf	??_sprintf
  9130  042B  3000               	movlw	0
  9131  042C  1683               	bsf	3,5	;RP0=1, select bank1
  9132  042D  1303               	bcf	3,6	;RP1=0, select bank1
  9133  042E  0529               	andwf	(sprintf@flag+1)^(0+128),w
  9134  042F  1283               	bcf	3,5	;RP0=0, select bank0
  9135  0430  1303               	bcf	3,6	;RP1=0, select bank0
  9136  0431  00E0               	movwf	??_sprintf+1
  9137  0432  085F               	movf	??_sprintf,w
  9138  0433  0460               	iorwf	??_sprintf+1,w
  9139  0434  1903               	btfsc	3,2
  9140  0435  2C37               	goto	u4531
  9141  0436  2C38               	goto	u4530
  9142  0437                     u4531:
  9143  0437  2C55               	goto	l3064
  9144  0438                     u4530:
  9145  0438                     l3056:
  9146                           
  9147                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1176:      width--;
  9148  0438  30FF               	movlw	255
  9149  0439  1683               	bsf	3,5	;RP0=1, select bank1
  9150  043A  1303               	bcf	3,6	;RP1=0, select bank1
  9151  043B  07AA               	addwf	sprintf@width^(0+128),f
  9152  043C  1803               	skipnc
  9153  043D  0AAB               	incf	(sprintf@width+1)^(0+128),f
  9154  043E  30FF               	movlw	255
  9155  043F  07AB               	addwf	(sprintf@width+1)^(0+128),f
  9156  0440  2C55               	goto	l3064
  9157  0441                     l3058:
  9158                           
  9159                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1207:       ((*sp++ = (' ')));
  9160  0441  3020               	movlw	32
  9161  0442  1283               	bcf	3,5	;RP0=0, select bank0
  9162  0443  1303               	bcf	3,6	;RP1=0, select bank0
  9163  0444  00DF               	movwf	??_sprintf
  9164  0445  1683               	bsf	3,5	;RP0=1, select bank1
  9165  0446  1303               	bcf	3,6	;RP1=0, select bank1
  9166  0447  0832               	movf	sprintf@sp^(0+128),w
  9167  0448  0084               	movwf	4
  9168  0449  1283               	bcf	3,5	;RP0=0, select bank0
  9169  044A  1303               	bcf	3,6	;RP1=0, select bank0
  9170  044B  085F               	movf	??_sprintf,w
  9171  044C  1383               	bcf	3,7	;select IRP bank0
  9172  044D  0080               	movwf	0
  9173  044E                     l3060:
  9174  044E  3001               	movlw	1
  9175  044F  00DF               	movwf	??_sprintf
  9176  0450  085F               	movf	??_sprintf,w
  9177  0451  1683               	bsf	3,5	;RP0=1, select bank1
  9178  0452  1303               	bcf	3,6	;RP1=0, select bank1
  9179  0453  07B2               	addwf	sprintf@sp^(0+128),f
  9180  0454  2C38               	goto	l3056
  9181  0455                     l3064:
  9182                           
  9183                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1206:      while(width > 0) {
  9184  0455  1683               	bsf	3,5	;RP0=1, select bank1
  9185  0456  1303               	bcf	3,6	;RP1=0, select bank1
  9186  0457  082B               	movf	(sprintf@width+1)^(0+128),w
  9187  0458  3A80               	xorlw	128
  9188  0459  00FF               	movwf	btemp+1
  9189  045A  3080               	movlw	128
  9190  045B  027F               	subwf	btemp+1,w
  9191  045C  1D03               	skipz
  9192  045D  2C60               	goto	u4545
  9193  045E  3001               	movlw	1
  9194  045F  022A               	subwf	sprintf@width^(0+128),w
  9195  0460                     u4545:
  9196  0460  1803               	skipnc
  9197  0461  2C63               	goto	u4541
  9198  0462  2C64               	goto	u4540
  9199  0463                     u4541:
  9200  0463  2C41               	goto	l3058
  9201  0464                     u4540:
  9202  0464                     l3066:
  9203                           
  9204                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x03)
  9205  0464  3003               	movlw	3
  9206  0465  1683               	bsf	3,5	;RP0=1, select bank1
  9207  0466  1303               	bcf	3,6	;RP1=0, select bank1
  9208  0467  0528               	andwf	sprintf@flag^(0+128),w
  9209  0468  1283               	bcf	3,5	;RP0=0, select bank0
  9210  0469  1303               	bcf	3,6	;RP1=0, select bank0
  9211  046A  00DF               	movwf	??_sprintf
  9212  046B  3000               	movlw	0
  9213  046C  1683               	bsf	3,5	;RP0=1, select bank1
  9214  046D  1303               	bcf	3,6	;RP1=0, select bank1
  9215  046E  0529               	andwf	(sprintf@flag+1)^(0+128),w
  9216  046F  1283               	bcf	3,5	;RP0=0, select bank0
  9217  0470  1303               	bcf	3,6	;RP1=0, select bank0
  9218  0471  00E0               	movwf	??_sprintf+1
  9219  0472  085F               	movf	??_sprintf,w
  9220  0473  0460               	iorwf	??_sprintf+1,w
  9221  0474  1903               	btfsc	3,2
  9222  0475  2C77               	goto	u4551
  9223  0476  2C78               	goto	u4550
  9224  0477                     u4551:
  9225  0477  2CFC               	goto	l360
  9226  0478                     u4550:
  9227  0478                     l3068:
  9228                           
  9229                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1216:      ((*sp++ = ('-')));
  9230  0478  302D               	movlw	45
  9231  0479  00DF               	movwf	??_sprintf
  9232  047A  1683               	bsf	3,5	;RP0=1, select bank1
  9233  047B  1303               	bcf	3,6	;RP1=0, select bank1
  9234  047C  0832               	movf	sprintf@sp^(0+128),w
  9235  047D  0084               	movwf	4
  9236  047E  1283               	bcf	3,5	;RP0=0, select bank0
  9237  047F  1303               	bcf	3,6	;RP1=0, select bank0
  9238  0480  085F               	movf	??_sprintf,w
  9239  0481  1383               	bcf	3,7	;select IRP bank0
  9240  0482  0080               	movwf	0
  9241  0483                     l3070:
  9242  0483  3001               	movlw	1
  9243  0484  00DF               	movwf	??_sprintf
  9244  0485  085F               	movf	??_sprintf,w
  9245  0486  1683               	bsf	3,5	;RP0=1, select bank1
  9246  0487  1303               	bcf	3,6	;RP1=0, select bank1
  9247  0488  07B2               	addwf	sprintf@sp^(0+128),f
  9248  0489  2CFC               	goto	l360
  9249  048A                     l3072:
  9250                           
  9251                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1226:     {;D:\MPLAB XC8 compile
      +                          r\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = val/dpowers[c];
  9252  048A  0838               	movf	sprintf@c^(0+128),w
  9253  048B  1283               	bcf	3,5	;RP0=0, select bank0
  9254  048C  1303               	bcf	3,6	;RP1=0, select bank0
  9255  048D  00DF               	movwf	??_sprintf
  9256  048E  3001               	movlw	1
  9257  048F                     u4565:
  9258  048F  1003               	clrc
  9259  0490  0DDF               	rlf	??_sprintf,f
  9260  0491  3EFF               	addlw	-1
  9261  0492  1D03               	skipz
  9262  0493  2C8F               	goto	u4565
  9263  0494  1003               	clrc
  9264  0495  0D5F               	rlf	??_sprintf,w
  9265  0496  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9266  0497  0084               	movwf	4
  9267  0498  160A  118A  2000  120A  118A  	fcall	stringdir
  9268  049D  00F0               	movwf	___lldiv@divisor
  9269  049E  160A  118A  2000  120A  118A  	fcall	stringdir
  9270  04A3  00F1               	movwf	___lldiv@divisor+1
  9271  04A4  160A  118A  2000  120A  118A  	fcall	stringdir
  9272  04A9  00F2               	movwf	___lldiv@divisor+2
  9273  04AA  160A  118A  2000  120A  118A  	fcall	stringdir
  9274  04AF  00F3               	movwf	___lldiv@divisor+3
  9275  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  9276  04B1  1303               	bcf	3,6	;RP1=0, select bank1
  9277  04B2  0827               	movf	(sprintf@val+3)^(0+128),w
  9278  04B3  00F7               	movwf	___lldiv@dividend+3
  9279  04B4  0826               	movf	(sprintf@val+2)^(0+128),w
  9280  04B5  00F6               	movwf	___lldiv@dividend+2
  9281  04B6  0825               	movf	(sprintf@val+1)^(0+128),w
  9282  04B7  00F5               	movwf	___lldiv@dividend+1
  9283  04B8  0824               	movf	sprintf@val^(0+128),w
  9284  04B9  00F4               	movwf	___lldiv@dividend
  9285  04BA  160A  118A  21C0  120A  118A  	fcall	___lldiv
  9286  04BF  0873               	movf	?___lldiv+3,w
  9287  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  9288  04C1  1303               	bcf	3,6	;RP1=0, select bank1
  9289  04C2  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  9290  04C3  0872               	movf	?___lldiv+2,w
  9291  04C4  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  9292  04C5  0871               	movf	?___lldiv+1,w
  9293  04C6  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  9294  04C7  0870               	movf	?___lldiv,w
  9295  04C8  00AC               	movwf	sprintf@tmpval^(0+128)
  9296  04C9                     l3074:
  9297                           
  9298                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1228:      tmpval.vd %= 10;
  9299  04C9  3000               	movlw	0
  9300  04CA  00F3               	movwf	___llmod@divisor+3
  9301  04CB  3000               	movlw	0
  9302  04CC  00F2               	movwf	___llmod@divisor+2
  9303  04CD  3000               	movlw	0
  9304  04CE  00F1               	movwf	___llmod@divisor+1
  9305  04CF  300A               	movlw	10
  9306  04D0  00F0               	movwf	___llmod@divisor
  9307  04D1  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  9308  04D2  00F7               	movwf	___llmod@dividend+3
  9309  04D3  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  9310  04D4  00F6               	movwf	___llmod@dividend+2
  9311  04D5  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  9312  04D6  00F5               	movwf	___llmod@dividend+1
  9313  04D7  082C               	movf	sprintf@tmpval^(0+128),w
  9314  04D8  00F4               	movwf	___llmod@dividend
  9315  04D9  160A  118A  20B6  120A  118A  	fcall	___llmod
  9316  04DE  0873               	movf	?___llmod+3,w
  9317  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  9318  04E0  1303               	bcf	3,6	;RP1=0, select bank1
  9319  04E1  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  9320  04E2  0872               	movf	?___llmod+2,w
  9321  04E3  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  9322  04E4  0871               	movf	?___llmod+1,w
  9323  04E5  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  9324  04E6  0870               	movf	?___llmod,w
  9325  04E7  00AC               	movwf	sprintf@tmpval^(0+128)
  9326  04E8                     l3076:
  9327                           
  9328                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1229:      ((*sp++ = ('0' + tmpv
      +                          al.vd)));
  9329  04E8  082C               	movf	sprintf@tmpval^(0+128),w
  9330  04E9  3E30               	addlw	48
  9331  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  9332  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  9333  04EC  00DF               	movwf	??_sprintf
  9334  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  9335  04EE  1303               	bcf	3,6	;RP1=0, select bank1
  9336  04EF  0832               	movf	sprintf@sp^(0+128),w
  9337  04F0  0084               	movwf	4
  9338  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  9339  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  9340  04F3  085F               	movf	??_sprintf,w
  9341  04F4  1383               	bcf	3,7	;select IRP bank0
  9342  04F5  0080               	movwf	0
  9343  04F6  3001               	movlw	1
  9344  04F7  00DF               	movwf	??_sprintf
  9345  04F8  085F               	movf	??_sprintf,w
  9346  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  9347  04FA  1303               	bcf	3,6	;RP1=0, select bank1
  9348  04FB  07B2               	addwf	sprintf@sp^(0+128),f
  9349  04FC                     l360:	
  9350                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1230:     };D:\MPLAB XC8 compile
      +                          r\pic\sources\c90\common\doprnt.c: 1232:    }
  9351                           
  9352                           
  9353                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1222:    while(c--) {
  9354  04FC  3001               	movlw	1
  9355  04FD  1683               	bsf	3,5	;RP0=1, select bank1
  9356  04FE  1303               	bcf	3,6	;RP1=0, select bank1
  9357  04FF  02B8               	subwf	sprintf@c^(0+128),f
  9358  0500  0A38               	incf	sprintf@c^(0+128),w
  9359  0501  1D03               	btfss	3,2
  9360  0502  2D04               	goto	u4571
  9361  0503  2D05               	goto	u4570
  9362  0504                     u4571:
  9363  0504  2C8A               	goto	l3072
  9364  0505                     u4570:
  9365  0505  2D1F               	goto	l3084
  9366  0506                     l3078:
  9367                           
  9368                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++ = ('0')));
  9369  0506  3030               	movlw	48
  9370  0507  1283               	bcf	3,5	;RP0=0, select bank0
  9371  0508  1303               	bcf	3,6	;RP1=0, select bank0
  9372  0509  00DF               	movwf	??_sprintf
  9373  050A  1683               	bsf	3,5	;RP0=1, select bank1
  9374  050B  1303               	bcf	3,6	;RP1=0, select bank1
  9375  050C  0832               	movf	sprintf@sp^(0+128),w
  9376  050D  0084               	movwf	4
  9377  050E  1283               	bcf	3,5	;RP0=0, select bank0
  9378  050F  1303               	bcf	3,6	;RP1=0, select bank0
  9379  0510  085F               	movf	??_sprintf,w
  9380  0511  1383               	bcf	3,7	;select IRP bank0
  9381  0512  0080               	movwf	0
  9382  0513                     l3080:
  9383  0513  3001               	movlw	1
  9384  0514  00DF               	movwf	??_sprintf
  9385  0515  085F               	movf	??_sprintf,w
  9386  0516  1683               	bsf	3,5	;RP0=1, select bank1
  9387  0517  1303               	bcf	3,6	;RP1=0, select bank1
  9388  0518  07B2               	addwf	sprintf@sp^(0+128),f
  9389  0519                     l3082:
  9390                           
  9391                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9392  0519  30FF               	movlw	255
  9393  051A  07B0               	addwf	sprintf@eexp^(0+128),f
  9394  051B  1803               	skipnc
  9395  051C  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  9396  051D  30FF               	movlw	255
  9397  051E  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  9398  051F                     l3084:
  9399                           
  9400                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1233:    while(eexp > 0) {
  9401  051F  0831               	movf	(sprintf@eexp+1)^(0+128),w
  9402  0520  3A80               	xorlw	128
  9403  0521  00FF               	movwf	btemp+1
  9404  0522  3080               	movlw	128
  9405  0523  027F               	subwf	btemp+1,w
  9406  0524  1D03               	skipz
  9407  0525  2D28               	goto	u4585
  9408  0526  3001               	movlw	1
  9409  0527  0230               	subwf	sprintf@eexp^(0+128),w
  9410  0528                     u4585:
  9411  0528  1803               	skipnc
  9412  0529  2D2B               	goto	u4581
  9413  052A  2D2C               	goto	u4580
  9414  052B                     u4581:
  9415  052B  2D06               	goto	l3078
  9416  052C                     u4580:
  9417  052C                     l3086:
  9418                           
  9419                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1237:    if(prec > (int)((sizeof
      +                           dpowers/sizeof dpowers[0])-2))
  9420  052C  1683               	bsf	3,5	;RP0=1, select bank1
  9421  052D  1303               	bcf	3,6	;RP1=0, select bank1
  9422  052E  0837               	movf	(sprintf@prec+1)^(0+128),w
  9423  052F  3A80               	xorlw	128
  9424  0530  00FF               	movwf	btemp+1
  9425  0531  3080               	movlw	128
  9426  0532  027F               	subwf	btemp+1,w
  9427  0533  1D03               	skipz
  9428  0534  2D37               	goto	u4595
  9429  0535  3009               	movlw	9
  9430  0536  0236               	subwf	sprintf@prec^(0+128),w
  9431  0537                     u4595:
  9432  0537  1C03               	skipc
  9433  0538  2D3A               	goto	u4591
  9434  0539  2D3B               	goto	u4590
  9435  053A                     u4591:
  9436  053A  2D44               	goto	l3090
  9437  053B                     u4590:
  9438  053B                     l3088:
  9439                           
  9440                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1238:     c = (sizeof dpowers/si
      +                          zeof dpowers[0])-2;
  9441  053B  3008               	movlw	8
  9442  053C  1283               	bcf	3,5	;RP0=0, select bank0
  9443  053D  1303               	bcf	3,6	;RP1=0, select bank0
  9444  053E  00DF               	movwf	??_sprintf
  9445  053F  085F               	movf	??_sprintf,w
  9446  0540  1683               	bsf	3,5	;RP0=1, select bank1
  9447  0541  1303               	bcf	3,6	;RP1=0, select bank1
  9448  0542  00B8               	movwf	sprintf@c^(0+128)
  9449  0543  2D4E               	goto	l367
  9450  0544                     l3090:
  9451                           
  9452                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1240:     c = (char)prec;
  9453  0544  1683               	bsf	3,5	;RP0=1, select bank1
  9454  0545  1303               	bcf	3,6	;RP1=0, select bank1
  9455  0546  0836               	movf	sprintf@prec^(0+128),w
  9456  0547  1283               	bcf	3,5	;RP0=0, select bank0
  9457  0548  1303               	bcf	3,6	;RP1=0, select bank0
  9458  0549  00DF               	movwf	??_sprintf
  9459  054A  085F               	movf	??_sprintf,w
  9460  054B  1683               	bsf	3,5	;RP0=1, select bank1
  9461  054C  1303               	bcf	3,6	;RP1=0, select bank1
  9462  054D  00B8               	movwf	sprintf@c^(0+128)
  9463  054E                     l367:
  9464                           
  9465                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1241:    prec -= (int)c;
  9466  054E  0838               	movf	sprintf@c^(0+128),w
  9467  054F  1283               	bcf	3,5	;RP0=0, select bank0
  9468  0550  1303               	bcf	3,6	;RP1=0, select bank0
  9469  0551  00DF               	movwf	??_sprintf
  9470  0552  01E0               	clrf	??_sprintf+1
  9471  0553  085F               	movf	??_sprintf,w
  9472  0554  1683               	bsf	3,5	;RP0=1, select bank1
  9473  0555  1303               	bcf	3,6	;RP1=0, select bank1
  9474  0556  02B6               	subwf	sprintf@prec^(0+128),f
  9475  0557  1283               	bcf	3,5	;RP0=0, select bank0
  9476  0558  1303               	bcf	3,6	;RP1=0, select bank0
  9477  0559  0860               	movf	??_sprintf+1,w
  9478  055A  1683               	bsf	3,5	;RP0=1, select bank1
  9479  055B  1303               	bcf	3,6	;RP1=0, select bank1
  9480  055C  1C03               	skipc
  9481  055D  03B7               	decf	(sprintf@prec+1)^(0+128),f
  9482  055E  02B7               	subwf	(sprintf@prec+1)^(0+128),f
  9483  055F                     l3092:
  9484                           
  9485                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9486  055F  0838               	movf	sprintf@c^(0+128),w
  9487  0560  1903               	btfsc	3,2
  9488  0561  2D63               	goto	u4601
  9489  0562  2D64               	goto	u4600
  9490  0563                     u4601:
  9491  0563  2D77               	goto	l3098
  9492  0564                     u4600:
  9493  0564                     l3094:
  9494                           
  9495                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++ = ('.')));
  9496  0564  302E               	movlw	46
  9497  0565  1283               	bcf	3,5	;RP0=0, select bank0
  9498  0566  1303               	bcf	3,6	;RP1=0, select bank0
  9499  0567  00DF               	movwf	??_sprintf
  9500  0568  1683               	bsf	3,5	;RP0=1, select bank1
  9501  0569  1303               	bcf	3,6	;RP1=0, select bank1
  9502  056A  0832               	movf	sprintf@sp^(0+128),w
  9503  056B  0084               	movwf	4
  9504  056C  1283               	bcf	3,5	;RP0=0, select bank0
  9505  056D  1303               	bcf	3,6	;RP1=0, select bank0
  9506  056E  085F               	movf	??_sprintf,w
  9507  056F  1383               	bcf	3,7	;select IRP bank0
  9508  0570  0080               	movwf	0
  9509  0571                     l3096:
  9510  0571  3001               	movlw	1
  9511  0572  00DF               	movwf	??_sprintf
  9512  0573  085F               	movf	??_sprintf,w
  9513  0574  1683               	bsf	3,5	;RP0=1, select bank1
  9514  0575  1303               	bcf	3,6	;RP1=0, select bank1
  9515  0576  07B2               	addwf	sprintf@sp^(0+128),f
  9516  0577                     l3098:
  9517                           
  9518                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(f
      +                          val * scale((signed char)c));
  9519  0577  0838               	movf	sprintf@c^(0+128),w
  9520  0578  120A  158A  2285  120A  118A  	fcall	_scale
  9521  057D  1283               	bcf	3,5	;RP0=0, select bank0
  9522  057E  1303               	bcf	3,6	;RP1=0, select bank0
  9523  057F  0838               	movf	?_scale,w
  9524  0580  1683               	bsf	3,5	;RP0=1, select bank1
  9525  0581  1303               	bcf	3,6	;RP1=0, select bank1
  9526  0582  00A0               	movwf	_sprintf$1039^(0+128)
  9527  0583  1283               	bcf	3,5	;RP0=0, select bank0
  9528  0584  1303               	bcf	3,6	;RP1=0, select bank0
  9529  0585  0839               	movf	?_scale+1,w
  9530  0586  1683               	bsf	3,5	;RP0=1, select bank1
  9531  0587  1303               	bcf	3,6	;RP1=0, select bank1
  9532  0588  00A1               	movwf	(_sprintf$1039+1)^(0+128)
  9533  0589  1283               	bcf	3,5	;RP0=0, select bank0
  9534  058A  1303               	bcf	3,6	;RP1=0, select bank0
  9535  058B  083A               	movf	?_scale+2,w
  9536  058C  1683               	bsf	3,5	;RP0=1, select bank1
  9537  058D  1303               	bcf	3,6	;RP1=0, select bank1
  9538  058E  00A2               	movwf	(_sprintf$1039+2)^(0+128)
  9539  058F                     l3100:
  9540                           
  9541                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(f
      +                          val * scale((signed char)c));
  9542  058F  0820               	movf	_sprintf$1039^(0+128),w
  9543  0590  1283               	bcf	3,5	;RP0=0, select bank0
  9544  0591  1303               	bcf	3,6	;RP1=0, select bank0
  9545  0592  00AB               	movwf	___ftmul@f2
  9546  0593  1683               	bsf	3,5	;RP0=1, select bank1
  9547  0594  1303               	bcf	3,6	;RP1=0, select bank1
  9548  0595  0821               	movf	(_sprintf$1039+1)^(0+128),w
  9549  0596  1283               	bcf	3,5	;RP0=0, select bank0
  9550  0597  1303               	bcf	3,6	;RP1=0, select bank0
  9551  0598  00AC               	movwf	___ftmul@f2+1
  9552  0599  1683               	bsf	3,5	;RP0=1, select bank1
  9553  059A  1303               	bcf	3,6	;RP1=0, select bank1
  9554  059B  0822               	movf	(_sprintf$1039+2)^(0+128),w
  9555  059C  1283               	bcf	3,5	;RP0=0, select bank0
  9556  059D  1303               	bcf	3,6	;RP1=0, select bank0
  9557  059E  00AD               	movwf	___ftmul@f2+2
  9558  059F  1683               	bsf	3,5	;RP0=1, select bank1
  9559  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  9560  05A1  0833               	movf	sprintf@fval^(0+128),w
  9561  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  9562  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  9563  05A4  00A8               	movwf	___ftmul@f1
  9564  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  9565  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  9566  05A7  0834               	movf	(sprintf@fval+1)^(0+128),w
  9567  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  9568  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  9569  05AA  00A9               	movwf	___ftmul@f1+1
  9570  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  9571  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  9572  05AD  0835               	movf	(sprintf@fval+2)^(0+128),w
  9573  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  9574  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  9575  05B0  00AA               	movwf	___ftmul@f1+2
  9576  05B1  120A  118A  200C  120A  118A  	fcall	___ftmul
  9577  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  9578  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  9579  05B8  0828               	movf	?___ftmul,w
  9580  05B9  00C1               	movwf	___fttol@f1
  9581  05BA  0829               	movf	?___ftmul+1,w
  9582  05BB  00C2               	movwf	___fttol@f1+1
  9583  05BC  082A               	movf	?___ftmul+2,w
  9584  05BD  00C3               	movwf	___fttol@f1+2
  9585  05BE  160A  118A  2387  120A  118A  	fcall	___fttol
  9586  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  9587  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  9588  05C5  0844               	movf	?___fttol+3,w
  9589  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  9590  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  9591  05C8  00A7               	movwf	(sprintf@val+3)^(0+128)
  9592  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  9593  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  9594  05CB  0843               	movf	?___fttol+2,w
  9595  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  9596  05CD  1303               	bcf	3,6	;RP1=0, select bank1
  9597  05CE  00A6               	movwf	(sprintf@val+2)^(0+128)
  9598  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  9599  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  9600  05D1  0842               	movf	?___fttol+1,w
  9601  05D2  1683               	bsf	3,5	;RP0=1, select bank1
  9602  05D3  1303               	bcf	3,6	;RP1=0, select bank1
  9603  05D4  00A5               	movwf	(sprintf@val+1)^(0+128)
  9604  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  9605  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  9606  05D7  0841               	movf	?___fttol,w
  9607  05D8  1683               	bsf	3,5	;RP0=1, select bank1
  9608  05D9  1303               	bcf	3,6	;RP1=0, select bank1
  9609  05DA  00A4               	movwf	sprintf@val^(0+128)
  9610                           
  9611                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
  9612  05DB  2E8D               	goto	l3110
  9613  05DC                     l3102:
  9614                           
  9615                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1255:     tmpval.vd = val/dpower
      +                          s[c];
  9616  05DC  0838               	movf	sprintf@c^(0+128),w
  9617  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  9618  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  9619  05DF  00DF               	movwf	??_sprintf
  9620  05E0  3001               	movlw	1
  9621  05E1                     u4615:
  9622  05E1  1003               	clrc
  9623  05E2  0DDF               	rlf	??_sprintf,f
  9624  05E3  3EFF               	addlw	-1
  9625  05E4  1D03               	skipz
  9626  05E5  2DE1               	goto	u4615
  9627  05E6  1003               	clrc
  9628  05E7  0D5F               	rlf	??_sprintf,w
  9629  05E8  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9630  05E9  0084               	movwf	4
  9631  05EA  160A  118A  2000  120A  118A  	fcall	stringdir
  9632  05EF  00F0               	movwf	___lldiv@divisor
  9633  05F0  160A  118A  2000  120A  118A  	fcall	stringdir
  9634  05F5  00F1               	movwf	___lldiv@divisor+1
  9635  05F6  160A  118A  2000  120A  118A  	fcall	stringdir
  9636  05FB  00F2               	movwf	___lldiv@divisor+2
  9637  05FC  160A  118A  2000  120A  118A  	fcall	stringdir
  9638  0601  00F3               	movwf	___lldiv@divisor+3
  9639  0602  1683               	bsf	3,5	;RP0=1, select bank1
  9640  0603  1303               	bcf	3,6	;RP1=0, select bank1
  9641  0604  0827               	movf	(sprintf@val+3)^(0+128),w
  9642  0605  00F7               	movwf	___lldiv@dividend+3
  9643  0606  0826               	movf	(sprintf@val+2)^(0+128),w
  9644  0607  00F6               	movwf	___lldiv@dividend+2
  9645  0608  0825               	movf	(sprintf@val+1)^(0+128),w
  9646  0609  00F5               	movwf	___lldiv@dividend+1
  9647  060A  0824               	movf	sprintf@val^(0+128),w
  9648  060B  00F4               	movwf	___lldiv@dividend
  9649  060C  160A  118A  21C0  120A  118A  	fcall	___lldiv
  9650  0611  0873               	movf	?___lldiv+3,w
  9651  0612  1683               	bsf	3,5	;RP0=1, select bank1
  9652  0613  1303               	bcf	3,6	;RP1=0, select bank1
  9653  0614  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  9654  0615  0872               	movf	?___lldiv+2,w
  9655  0616  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  9656  0617  0871               	movf	?___lldiv+1,w
  9657  0618  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  9658  0619  0870               	movf	?___lldiv,w
  9659  061A  00AC               	movwf	sprintf@tmpval^(0+128)
  9660  061B                     l3104:
  9661                           
  9662                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1256:     tmpval.vd %= 10;
  9663  061B  3000               	movlw	0
  9664  061C  00F3               	movwf	___llmod@divisor+3
  9665  061D  3000               	movlw	0
  9666  061E  00F2               	movwf	___llmod@divisor+2
  9667  061F  3000               	movlw	0
  9668  0620  00F1               	movwf	___llmod@divisor+1
  9669  0621  300A               	movlw	10
  9670  0622  00F0               	movwf	___llmod@divisor
  9671  0623  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  9672  0624  00F7               	movwf	___llmod@dividend+3
  9673  0625  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  9674  0626  00F6               	movwf	___llmod@dividend+2
  9675  0627  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  9676  0628  00F5               	movwf	___llmod@dividend+1
  9677  0629  082C               	movf	sprintf@tmpval^(0+128),w
  9678  062A  00F4               	movwf	___llmod@dividend
  9679  062B  160A  118A  20B6  120A  118A  	fcall	___llmod
  9680  0630  0873               	movf	?___llmod+3,w
  9681  0631  1683               	bsf	3,5	;RP0=1, select bank1
  9682  0632  1303               	bcf	3,6	;RP1=0, select bank1
  9683  0633  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  9684  0634  0872               	movf	?___llmod+2,w
  9685  0635  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  9686  0636  0871               	movf	?___llmod+1,w
  9687  0637  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  9688  0638  0870               	movf	?___llmod,w
  9689  0639  00AC               	movwf	sprintf@tmpval^(0+128)
  9690  063A                     l3106:
  9691                           
  9692                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++ = ('0' + tmpva
      +                          l.vd)));
  9693  063A  082C               	movf	sprintf@tmpval^(0+128),w
  9694  063B  3E30               	addlw	48
  9695  063C  1283               	bcf	3,5	;RP0=0, select bank0
  9696  063D  1303               	bcf	3,6	;RP1=0, select bank0
  9697  063E  00DF               	movwf	??_sprintf
  9698  063F  1683               	bsf	3,5	;RP0=1, select bank1
  9699  0640  1303               	bcf	3,6	;RP1=0, select bank1
  9700  0641  0832               	movf	sprintf@sp^(0+128),w
  9701  0642  0084               	movwf	4
  9702  0643  1283               	bcf	3,5	;RP0=0, select bank0
  9703  0644  1303               	bcf	3,6	;RP1=0, select bank0
  9704  0645  085F               	movf	??_sprintf,w
  9705  0646  1383               	bcf	3,7	;select IRP bank0
  9706  0647  0080               	movwf	0
  9707  0648  3001               	movlw	1
  9708  0649  00DF               	movwf	??_sprintf
  9709  064A  085F               	movf	??_sprintf,w
  9710  064B  1683               	bsf	3,5	;RP0=1, select bank1
  9711  064C  1303               	bcf	3,6	;RP1=0, select bank1
  9712  064D  07B2               	addwf	sprintf@sp^(0+128),f
  9713  064E                     l3108:
  9714                           
  9715                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1258:     val %= dpowers[c];
  9716  064E  0838               	movf	sprintf@c^(0+128),w
  9717  064F  1283               	bcf	3,5	;RP0=0, select bank0
  9718  0650  1303               	bcf	3,6	;RP1=0, select bank0
  9719  0651  00DF               	movwf	??_sprintf
  9720  0652  3001               	movlw	1
  9721  0653                     u4625:
  9722  0653  1003               	clrc
  9723  0654  0DDF               	rlf	??_sprintf,f
  9724  0655  3EFF               	addlw	-1
  9725  0656  1D03               	skipz
  9726  0657  2E53               	goto	u4625
  9727  0658  1003               	clrc
  9728  0659  0D5F               	rlf	??_sprintf,w
  9729  065A  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9730  065B  0084               	movwf	4
  9731  065C  160A  118A  2000  120A  118A  	fcall	stringdir
  9732  0661  00F0               	movwf	___llmod@divisor
  9733  0662  160A  118A  2000  120A  118A  	fcall	stringdir
  9734  0667  00F1               	movwf	___llmod@divisor+1
  9735  0668  160A  118A  2000  120A  118A  	fcall	stringdir
  9736  066D  00F2               	movwf	___llmod@divisor+2
  9737  066E  160A  118A  2000  120A  118A  	fcall	stringdir
  9738  0673  00F3               	movwf	___llmod@divisor+3
  9739  0674  1683               	bsf	3,5	;RP0=1, select bank1
  9740  0675  1303               	bcf	3,6	;RP1=0, select bank1
  9741  0676  0827               	movf	(sprintf@val+3)^(0+128),w
  9742  0677  00F7               	movwf	___llmod@dividend+3
  9743  0678  0826               	movf	(sprintf@val+2)^(0+128),w
  9744  0679  00F6               	movwf	___llmod@dividend+2
  9745  067A  0825               	movf	(sprintf@val+1)^(0+128),w
  9746  067B  00F5               	movwf	___llmod@dividend+1
  9747  067C  0824               	movf	sprintf@val^(0+128),w
  9748  067D  00F4               	movwf	___llmod@dividend
  9749  067E  160A  118A  20B6  120A  118A  	fcall	___llmod
  9750  0683  0873               	movf	?___llmod+3,w
  9751  0684  1683               	bsf	3,5	;RP0=1, select bank1
  9752  0685  1303               	bcf	3,6	;RP1=0, select bank1
  9753  0686  00A7               	movwf	(sprintf@val+3)^(0+128)
  9754  0687  0872               	movf	?___llmod+2,w
  9755  0688  00A6               	movwf	(sprintf@val+2)^(0+128)
  9756  0689  0871               	movf	?___llmod+1,w
  9757  068A  00A5               	movwf	(sprintf@val+1)^(0+128)
  9758  068B  0870               	movf	?___llmod,w
  9759  068C  00A4               	movwf	sprintf@val^(0+128)
  9760  068D                     l3110:
  9761                           
  9762                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
  9763  068D  3001               	movlw	1
  9764  068E  02B8               	subwf	sprintf@c^(0+128),f
  9765  068F  0A38               	incf	sprintf@c^(0+128),w
  9766  0690  1D03               	btfss	3,2
  9767  0691  2E93               	goto	u4631
  9768  0692  2E94               	goto	u4630
  9769  0693                     u4631:
  9770  0693  2DDC               	goto	l3102
  9771  0694                     u4630:
  9772  0694  2EAE               	goto	l3118
  9773  0695                     l3112:
  9774                           
  9775                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++ = ('0')));
  9776  0695  3030               	movlw	48
  9777  0696  1283               	bcf	3,5	;RP0=0, select bank0
  9778  0697  1303               	bcf	3,6	;RP1=0, select bank0
  9779  0698  00DF               	movwf	??_sprintf
  9780  0699  1683               	bsf	3,5	;RP0=1, select bank1
  9781  069A  1303               	bcf	3,6	;RP1=0, select bank1
  9782  069B  0832               	movf	sprintf@sp^(0+128),w
  9783  069C  0084               	movwf	4
  9784  069D  1283               	bcf	3,5	;RP0=0, select bank0
  9785  069E  1303               	bcf	3,6	;RP1=0, select bank0
  9786  069F  085F               	movf	??_sprintf,w
  9787  06A0  1383               	bcf	3,7	;select IRP bank0
  9788  06A1  0080               	movwf	0
  9789  06A2                     l3114:
  9790  06A2  3001               	movlw	1
  9791  06A3  00DF               	movwf	??_sprintf
  9792  06A4  085F               	movf	??_sprintf,w
  9793  06A5  1683               	bsf	3,5	;RP0=1, select bank1
  9794  06A6  1303               	bcf	3,6	;RP1=0, select bank1
  9795  06A7  07B2               	addwf	sprintf@sp^(0+128),f
  9796  06A8                     l3116:
  9797                           
  9798                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  9799  06A8  30FF               	movlw	255
  9800  06A9  07B6               	addwf	sprintf@prec^(0+128),f
  9801  06AA  1803               	skipnc
  9802  06AB  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  9803  06AC  30FF               	movlw	255
  9804  06AD  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  9805  06AE                     l3118:
  9806                           
  9807                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1261:    while(prec) {
  9808  06AE  0836               	movf	sprintf@prec^(0+128),w
  9809  06AF  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9810  06B0  1D03               	btfss	3,2
  9811  06B1  2EB3               	goto	u4641
  9812  06B2  2EB4               	goto	u4640
  9813  06B3                     u4641:
  9814  06B3  2E95               	goto	l3112
  9815  06B4                     u4640:
  9816  06B4  2FB8               	goto	l3166
  9817  06B5                     l3120:
  9818                           
  9819                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && val == 0
      +                          )
  9820  06B5  1683               	bsf	3,5	;RP0=1, select bank1
  9821  06B6  1303               	bcf	3,6	;RP1=0, select bank1
  9822  06B7  0836               	movf	sprintf@prec^(0+128),w
  9823  06B8  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9824  06B9  1D03               	btfss	3,2
  9825  06BA  2EBC               	goto	u4651
  9826  06BB  2EBD               	goto	u4650
  9827  06BC                     u4651:
  9828  06BC  2ECB               	goto	l375
  9829  06BD                     u4650:
  9830  06BD                     l3122:
  9831  06BD  0827               	movf	(sprintf@val+3)^(0+128),w
  9832  06BE  0426               	iorwf	(sprintf@val+2)^(0+128),w
  9833  06BF  0425               	iorwf	(sprintf@val+1)^(0+128),w
  9834  06C0  0424               	iorwf	sprintf@val^(0+128),w
  9835  06C1  1D03               	skipz
  9836  06C2  2EC4               	goto	u4661
  9837  06C3  2EC5               	goto	u4660
  9838  06C4                     u4661:
  9839  06C4  2ECB               	goto	l375
  9840  06C5                     u4660:
  9841  06C5                     l3124:
  9842                           
  9843                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  9844  06C5  3001               	movlw	1
  9845  06C6  07B6               	addwf	sprintf@prec^(0+128),f
  9846  06C7  1803               	skipnc
  9847  06C8  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  9848  06C9  3000               	movlw	0
  9849  06CA  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  9850  06CB                     l375:
  9851                           
  9852                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
  9853  06CB  0837               	movf	(sprintf@prec+1)^(0+128),w
  9854  06CC  3A80               	xorlw	128
  9855  06CD  3C80               	sublw	128
  9856  06CE  1D03               	skipz
  9857  06CF  2ED2               	goto	u4675
  9858  06D0  0836               	movf	sprintf@prec^(0+128),w
  9859  06D1  0238               	subwf	sprintf@c^(0+128),w
  9860  06D2                     u4675:
  9861  06D2  1803               	skipnc
  9862  06D3  2ED5               	goto	u4671
  9863  06D4  2ED6               	goto	u4670
  9864  06D5                     u4671:
  9865  06D5  2EE1               	goto	l3128
  9866  06D6                     u4670:
  9867  06D6                     l3126:
  9868                           
  9869                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1366:    c = (char)prec;
  9870  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  9871  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  9872  06D8  0836               	movf	sprintf@prec^(0+128),w
  9873  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  9874  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  9875  06DB  00DF               	movwf	??_sprintf
  9876  06DC  085F               	movf	??_sprintf,w
  9877  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  9878  06DE  1303               	bcf	3,6	;RP1=0, select bank1
  9879  06DF  00B8               	movwf	sprintf@c^(0+128)
  9880  06E0  2F05               	goto	l3132
  9881  06E1                     l3128:
  9882  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  9883  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  9884  06E3  0837               	movf	(sprintf@prec+1)^(0+128),w
  9885  06E4  3A80               	xorlw	128
  9886  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  9887  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  9888  06E7  00DF               	movwf	??_sprintf
  9889  06E8  3080               	movlw	128
  9890  06E9  025F               	subwf	??_sprintf,w
  9891  06EA  1D03               	skipz
  9892  06EB  2EF0               	goto	u4685
  9893  06EC  1683               	bsf	3,5	;RP0=1, select bank1
  9894  06ED  1303               	bcf	3,6	;RP1=0, select bank1
  9895  06EE  0838               	movf	sprintf@c^(0+128),w
  9896  06EF  0236               	subwf	sprintf@prec^(0+128),w
  9897  06F0                     u4685:
  9898  06F0  1803               	skipnc
  9899  06F1  2EF3               	goto	u4681
  9900  06F2  2EF4               	goto	u4680
  9901  06F3                     u4681:
  9902  06F3  2F05               	goto	l3132
  9903  06F4                     u4680:
  9904  06F4                     l3130:
  9905                           
  9906                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
  9907  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  9908  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  9909  06F6  0838               	movf	sprintf@c^(0+128),w
  9910  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  9911  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  9912  06F9  00DF               	movwf	??_sprintf
  9913  06FA  01E0               	clrf	??_sprintf+1
  9914  06FB  085F               	movf	??_sprintf,w
  9915  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  9916  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  9917  06FE  00B6               	movwf	sprintf@prec^(0+128)
  9918  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  9919  0700  1303               	bcf	3,6	;RP1=0, select bank0
  9920  0701  0860               	movf	??_sprintf+1,w
  9921  0702  1683               	bsf	3,5	;RP0=1, select bank1
  9922  0703  1303               	bcf	3,6	;RP1=0, select bank1
  9923  0704  00B7               	movwf	(sprintf@prec+1)^(0+128)
  9924  0705                     l3132:
  9925                           
  9926                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0x03)
  9927  0705  1683               	bsf	3,5	;RP0=1, select bank1
  9928  0706  1303               	bcf	3,6	;RP1=0, select bank1
  9929  0707  082A               	movf	sprintf@width^(0+128),w
  9930  0708  042B               	iorwf	(sprintf@width+1)^(0+128),w
  9931  0709  1903               	btfsc	3,2
  9932  070A  2F0C               	goto	u4691
  9933  070B  2F0D               	goto	u4690
  9934  070C                     u4691:
  9935  070C  2F27               	goto	l3138
  9936  070D                     u4690:
  9937  070D                     l3134:
  9938  070D  3003               	movlw	3
  9939  070E  0528               	andwf	sprintf@flag^(0+128),w
  9940  070F  1283               	bcf	3,5	;RP0=0, select bank0
  9941  0710  1303               	bcf	3,6	;RP1=0, select bank0
  9942  0711  00DF               	movwf	??_sprintf
  9943  0712  3000               	movlw	0
  9944  0713  1683               	bsf	3,5	;RP0=1, select bank1
  9945  0714  1303               	bcf	3,6	;RP1=0, select bank1
  9946  0715  0529               	andwf	(sprintf@flag+1)^(0+128),w
  9947  0716  1283               	bcf	3,5	;RP0=0, select bank0
  9948  0717  1303               	bcf	3,6	;RP1=0, select bank0
  9949  0718  00E0               	movwf	??_sprintf+1
  9950  0719  085F               	movf	??_sprintf,w
  9951  071A  0460               	iorwf	??_sprintf+1,w
  9952  071B  1903               	btfsc	3,2
  9953  071C  2F1E               	goto	u4701
  9954  071D  2F1F               	goto	u4700
  9955  071E                     u4701:
  9956  071E  2F27               	goto	l3138
  9957  071F                     u4700:
  9958  071F                     l3136:
  9959                           
  9960                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1372:    width--;
  9961  071F  30FF               	movlw	255
  9962  0720  1683               	bsf	3,5	;RP0=1, select bank1
  9963  0721  1303               	bcf	3,6	;RP1=0, select bank1
  9964  0722  07AA               	addwf	sprintf@width^(0+128),f
  9965  0723  1803               	skipnc
  9966  0724  0AAB               	incf	(sprintf@width+1)^(0+128),f
  9967  0725  30FF               	movlw	255
  9968  0726  07AB               	addwf	(sprintf@width+1)^(0+128),f
  9969  0727                     l3138:
  9970                           
  9971                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1374:   if(flag & 0x4000) {
  9972  0727  1683               	bsf	3,5	;RP0=1, select bank1
  9973  0728  1303               	bcf	3,6	;RP1=0, select bank1
  9974  0729  1F29               	btfss	(sprintf@flag+1)^(0+128),6
  9975  072A  2F2C               	goto	u4711
  9976  072B  2F2D               	goto	u4710
  9977  072C                     u4711:
  9978  072C  2F50               	goto	l3146
  9979  072D                     u4710:
  9980  072D                     l3140:
  9981                           
  9982                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1375:    if(width > prec)
  9983  072D  0837               	movf	(sprintf@prec+1)^(0+128),w
  9984  072E  3A80               	xorlw	128
  9985  072F  1283               	bcf	3,5	;RP0=0, select bank0
  9986  0730  1303               	bcf	3,6	;RP1=0, select bank0
  9987  0731  00DF               	movwf	??_sprintf
  9988  0732  1683               	bsf	3,5	;RP0=1, select bank1
  9989  0733  1303               	bcf	3,6	;RP1=0, select bank1
  9990  0734  082B               	movf	(sprintf@width+1)^(0+128),w
  9991  0735  3A80               	xorlw	128
  9992  0736  1283               	bcf	3,5	;RP0=0, select bank0
  9993  0737  1303               	bcf	3,6	;RP1=0, select bank0
  9994  0738  025F               	subwf	??_sprintf,w
  9995  0739  1D03               	skipz
  9996  073A  2F3F               	goto	u4725
  9997  073B  1683               	bsf	3,5	;RP0=1, select bank1
  9998  073C  1303               	bcf	3,6	;RP1=0, select bank1
  9999  073D  082A               	movf	sprintf@width^(0+128),w
 10000  073E  0236               	subwf	sprintf@prec^(0+128),w
 10001  073F                     u4725:
 10002  073F  1803               	skipnc
 10003  0740  2F42               	goto	u4721
 10004  0741  2F43               	goto	u4720
 10005  0742                     u4721:
 10006  0742  2F4C               	goto	l3144
 10007  0743                     u4720:
 10008  0743                     l3142:
 10009                           
 10010                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1376:     width -= prec;
 10011  0743  1683               	bsf	3,5	;RP0=1, select bank1
 10012  0744  1303               	bcf	3,6	;RP1=0, select bank1
 10013  0745  0836               	movf	sprintf@prec^(0+128),w
 10014  0746  02AA               	subwf	sprintf@width^(0+128),f
 10015  0747  0837               	movf	(sprintf@prec+1)^(0+128),w
 10016  0748  1C03               	skipc
 10017  0749  03AB               	decf	(sprintf@width+1)^(0+128),f
 10018  074A  02AB               	subwf	(sprintf@width+1)^(0+128),f
 10019  074B  2F50               	goto	l3146
 10020  074C                     l3144:
 10021                           
 10022                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1378:     width = 0;
 10023  074C  1683               	bsf	3,5	;RP0=1, select bank1
 10024  074D  1303               	bcf	3,6	;RP1=0, select bank1
 10025  074E  01AA               	clrf	sprintf@width^(0+128)
 10026  074F  01AB               	clrf	(sprintf@width+1)^(0+128)
 10027  0750                     l3146:
 10028                           
 10029                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
 10030  0750  082B               	movf	(sprintf@width+1)^(0+128),w
 10031  0751  3A80               	xorlw	128
 10032  0752  3C80               	sublw	128
 10033  0753  1D03               	skipz
 10034  0754  2F57               	goto	u4735
 10035  0755  082A               	movf	sprintf@width^(0+128),w
 10036  0756  0238               	subwf	sprintf@c^(0+128),w
 10037  0757                     u4735:
 10038  0757  1803               	skipnc
 10039  0758  2F5A               	goto	u4731
 10040  0759  2F5B               	goto	u4730
 10041  075A                     u4731:
 10042  075A  2F6F               	goto	l3150
 10043  075B                     u4730:
 10044  075B                     l3148:
 10045                           
 10046                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
 10047  075B  1683               	bsf	3,5	;RP0=1, select bank1
 10048  075C  1303               	bcf	3,6	;RP1=0, select bank1
 10049  075D  0838               	movf	sprintf@c^(0+128),w
 10050  075E  1283               	bcf	3,5	;RP0=0, select bank0
 10051  075F  1303               	bcf	3,6	;RP1=0, select bank0
 10052  0760  00DF               	movwf	??_sprintf
 10053  0761  01E0               	clrf	??_sprintf+1
 10054  0762  085F               	movf	??_sprintf,w
 10055  0763  1683               	bsf	3,5	;RP0=1, select bank1
 10056  0764  1303               	bcf	3,6	;RP1=0, select bank1
 10057  0765  02AA               	subwf	sprintf@width^(0+128),f
 10058  0766  1283               	bcf	3,5	;RP0=0, select bank0
 10059  0767  1303               	bcf	3,6	;RP1=0, select bank0
 10060  0768  0860               	movf	??_sprintf+1,w
 10061  0769  1683               	bsf	3,5	;RP0=1, select bank1
 10062  076A  1303               	bcf	3,6	;RP1=0, select bank1
 10063  076B  1C03               	skipc
 10064  076C  03AB               	decf	(sprintf@width+1)^(0+128),f
 10065  076D  02AB               	subwf	(sprintf@width+1)^(0+128),f
 10066  076E  2F73               	goto	l3152
 10067  076F                     l3150:
 10068                           
 10069                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
 10070  076F  1683               	bsf	3,5	;RP0=1, select bank1
 10071  0770  1303               	bcf	3,6	;RP1=0, select bank1
 10072  0771  01AA               	clrf	sprintf@width^(0+128)
 10073  0772  01AB               	clrf	(sprintf@width+1)^(0+128)
 10074  0773                     l3152:
 10075                           
 10076                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1448:   {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 1450:    if(width
 10077  0773  082A               	movf	sprintf@width^(0+128),w
 10078  0774  042B               	iorwf	(sprintf@width+1)^(0+128),w
 10079  0775  1903               	btfsc	3,2
 10080  0776  2F78               	goto	u4741
 10081  0777  2F79               	goto	u4740
 10082  0778                     u4741:
 10083  0778  2F98               	goto	l3160
 10084  0779                     u4740:
 10085  0779                     l3154:
 10086                           
 10087                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')));
 10088  0779  3020               	movlw	32
 10089  077A  1283               	bcf	3,5	;RP0=0, select bank0
 10090  077B  1303               	bcf	3,6	;RP1=0, select bank0
 10091  077C  00DF               	movwf	??_sprintf
 10092  077D  1683               	bsf	3,5	;RP0=1, select bank1
 10093  077E  1303               	bcf	3,6	;RP1=0, select bank1
 10094  077F  0832               	movf	sprintf@sp^(0+128),w
 10095  0780  0084               	movwf	4
 10096  0781  1283               	bcf	3,5	;RP0=0, select bank0
 10097  0782  1303               	bcf	3,6	;RP1=0, select bank0
 10098  0783  085F               	movf	??_sprintf,w
 10099  0784  1383               	bcf	3,7	;select IRP bank0
 10100  0785  0080               	movwf	0
 10101  0786                     l3156:
 10102  0786  3001               	movlw	1
 10103  0787  00DF               	movwf	??_sprintf
 10104  0788  085F               	movf	??_sprintf,w
 10105  0789  1683               	bsf	3,5	;RP0=1, select bank1
 10106  078A  1303               	bcf	3,6	;RP1=0, select bank1
 10107  078B  07B2               	addwf	sprintf@sp^(0+128),f
 10108  078C                     l3158:
 10109  078C  30FF               	movlw	255
 10110  078D  07AA               	addwf	sprintf@width^(0+128),f
 10111  078E  1803               	skipnc
 10112  078F  0AAB               	incf	(sprintf@width+1)^(0+128),f
 10113  0790  30FF               	movlw	255
 10114  0791  07AB               	addwf	(sprintf@width+1)^(0+128),f
 10115  0792  082A               	movf	sprintf@width^(0+128),w
 10116  0793  042B               	iorwf	(sprintf@width+1)^(0+128),w
 10117  0794  1D03               	btfss	3,2
 10118  0795  2F97               	goto	u4751
 10119  0796  2F98               	goto	u4750
 10120  0797                     u4751:
 10121  0797  2F79               	goto	l3154
 10122  0798                     u4750:
 10123  0798                     l3160:
 10124                           
 10125                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 10126  0798  3003               	movlw	3
 10127  0799  0528               	andwf	sprintf@flag^(0+128),w
 10128  079A  1283               	bcf	3,5	;RP0=0, select bank0
 10129  079B  1303               	bcf	3,6	;RP1=0, select bank0
 10130  079C  00DF               	movwf	??_sprintf
 10131  079D  3000               	movlw	0
 10132  079E  1683               	bsf	3,5	;RP0=1, select bank1
 10133  079F  1303               	bcf	3,6	;RP1=0, select bank1
 10134  07A0  0529               	andwf	(sprintf@flag+1)^(0+128),w
 10135  07A1  1283               	bcf	3,5	;RP0=0, select bank0
 10136  07A2  1303               	bcf	3,6	;RP1=0, select bank0
 10137  07A3  00E0               	movwf	??_sprintf+1
 10138  07A4  085F               	movf	??_sprintf,w
 10139  07A5  0460               	iorwf	??_sprintf+1,w
 10140  07A6  1903               	btfsc	3,2
 10141  07A7  2FA9               	goto	u4761
 10142  07A8  2FAA               	goto	u4760
 10143  07A9                     u4761:
 10144  07A9  2FB8               	goto	l3166
 10145  07AA                     u4760:
 10146  07AA                     l3162:
 10147                           
 10148                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
 10149  07AA  302D               	movlw	45
 10150  07AB  00DF               	movwf	??_sprintf
 10151  07AC  1683               	bsf	3,5	;RP0=1, select bank1
 10152  07AD  1303               	bcf	3,6	;RP1=0, select bank1
 10153  07AE  0832               	movf	sprintf@sp^(0+128),w
 10154  07AF  0084               	movwf	4
 10155  07B0  1283               	bcf	3,5	;RP0=0, select bank0
 10156  07B1  1303               	bcf	3,6	;RP1=0, select bank0
 10157  07B2  085F               	movf	??_sprintf,w
 10158  07B3  1383               	bcf	3,7	;select IRP bank0
 10159  07B4  0080               	movwf	0
 10160  07B5  120A  158A  2D51   	goto	l2924
 10161  07B8                     l3166:
 10162                           
 10163                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
 10164  07B8  3001               	movlw	1
 10165  07B9  1283               	bcf	3,5	;RP0=0, select bank0
 10166  07BA  07DB               	addwf	sprintf@f,f
 10167  07BB  30FF               	movlw	-1
 10168  07BC  075B               	addwf	sprintf@f,w
 10169  07BD  0084               	movwf	4
 10170  07BE  160A  118A  2000  120A  118A  	fcall	stringdir
 10171  07C3  00DF               	movwf	??_sprintf
 10172  07C4  085F               	movf	??_sprintf,w
 10173  07C5  1683               	bsf	3,5	;RP0=1, select bank1
 10174  07C6  1303               	bcf	3,6	;RP1=0, select bank1
 10175  07C7  00B8               	movwf	sprintf@c^(0+128)
 10176  07C8  0838               	movf	sprintf@c^(0+128),w
 10177  07C9  1D03               	btfss	3,2
 10178  07CA  2FCC               	goto	u4771
 10179  07CB  2FCF               	goto	u4770
 10180  07CC                     u4771:
 10181  07CC  120A  158A  2D3E   	goto	l2920
 10182  07CF                     u4770:
 10183  07CF                     l3168:
 10184                           
 10185                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10186  07CF  1683               	bsf	3,5	;RP0=1, select bank1
 10187  07D0  1303               	bcf	3,6	;RP1=0, select bank1
 10188  07D1  0832               	movf	sprintf@sp^(0+128),w
 10189  07D2  0084               	movwf	4
 10190  07D3  1383               	bcf	3,7	;select IRP bank0
 10191  07D4  0180               	clrf	0
 10192  07D5                     l390:
 10193  07D5  0008               	return
 10194  07D6                     __end_of_sprintf:

Data Sizes:
    Strings     27
    Constant    118
    Data        17
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     71      80
    BANK1            80     25      58
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> datos(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    uartTX_Write_Str@string	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _uartTX_Write_Str->_uartTX_Write
    _uartRC_init->___aldiv
    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___bmul->___lwdiv
    ___ftsub->___lltoft
    _aht_GetTemperature->___lltoft
    _aht_readSensor->_I2C_Master_Read
    ___lltoft->_aht_readSensor
    ___ftmul->___lwdiv
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _uartRC_init->___aldiv
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    _aht_GetTemperature->___ftadd
    ___lltoft->_aht_readSensor
    ___ftmul->___bmul
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    ___ftadd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   47386
                                             69 BANK0      2     2      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                   _I2C_Master_Write
                 _aht_GetTemperature
                           _configIO
                            _sprintf
                        _uartRC_init
                       _uartTX_Write
                   _uartTX_Write_Str
 ---------------------------------------------------------------------------------
 (1) _uartTX_Write_Str                                     3     3      0     139
                                              2 COMMON     3     3      0
                       _uartTX_Write
 ---------------------------------------------------------------------------------
 (2) _uartTX_Write                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _uartRC_init                                         16    14      2     721
                                              9 COMMON     2     2      0
                                              6 BANK0     14    12      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             40    36      4   33175
                                             59 BANK0     10     6      4
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    6946
                                             24 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     932
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1042
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    5731
                                             24 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     477
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     480
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                              4 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1382
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             33 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3278
                                             53 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     560
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _aht_GetTemperature                                   6     3      3   12487
                                             53 BANK0      6     3      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lltoft
                     _aht_readSensor
 ---------------------------------------------------------------------------------
 (2) _aht_readSensor                                      45    41      4     776
                                              6 COMMON     4     0      4
                                              0 BANK0     41    41      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     234
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     204
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2175
                                             10 COMMON     4     0      4
                                             41 BANK0      2     2      0
                           ___ftpack
                     _aht_readSensor (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3969
                                              8 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2439
                                             24 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3105
                                             40 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1947
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     608
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _aht_GetTemperature
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___lltoft
       ___ftpack
       _aht_readSensor (ARG)
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _aht_readSensor
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _configIO
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
         _aht_readSensor (ARG)
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
       _aht_readSensor (ARG)
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
   _uartRC_init
     ___aldiv
   _uartTX_Write
   _uartTX_Write_Str
     _uartTX_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     19      3A       7       72.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     47      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      98      12        0.0%
ABS                  0      0      98       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 22:19:52 2021

                          pc 0002               ___bmul@product 0026                           l43 1E43  
                         l80 1F49                           l83 1E00                           l86 1E0C  
                         l95 000B                           l89 1DF5                           l98 1DFF  
               ___awdiv@sign 0021                           fsr 0004          ___wmul@multiplicand 0072  
               ___ftadd@exp1 0054                 ___ftadd@exp2 0053                 ___ftadd@sign 0052  
                        l101 1ED8                          l102 1EDB                          l103 1EE0  
                        l300 0291                          l160 17FF                          l152 11BF  
                        l307 0D2F                          l420 0822                          l430 1225  
                        l183 16F6                          l600 094E                          l360 04FC  
                        l192 1E30                          l329 0E22                          l611 0941  
                        l603 08FE                          l604 0911                          l630 12E6  
                        l390 07D5                          l198 1EB2                          l631 12F0  
                        l623 12CB                          l703 00F0                          l375 06CB  
                        l367 054E                          l632 130A                          l640 0A84  
                        l720 1E68                          l465 1427                          l714 10A2  
                        l394 1E75                          l619 130A                          l643 099A  
                        l731 13F5                          l475 14AF                          l644 09A4  
                        l724 1412                          l396 1E8D                          l645 09A9  
                        l654 0A1A                          l590 1162                          l671 162E  
                        l680 14DE                          l577 128E                          l690 155F  
                        l683 152F                          l836 1FFF                          l773 1F11  
                        l765 1109                          l846 1FBB                          l679 156C  
                        l856 1E1E                          l697 1F81                          _GIE 005F  
                        fsr0 0004                          indf 0000                 ___awmod@sign 0076  
               ___ftdiv@cntr 0042                 ___ftdiv@sign 0047                         l2100 128F  
                       l2110 12AE                         l2102 1294                         l2120 12DC  
                       l2112 12B5                         l2104 129B                         l2200 125B  
                       l3000 0F65                         l2130 1309                         l2122 12E0  
                       l2114 12B9                         l2202 126C                         l2210 1280  
                       l3010 0FB1                         l3002 0F7A                         l2124 12EA  
                       l2116 12C3                         l2108 12A2                         l2300 09FF  
                       l2132 1DED                         l2140 0003                         l2212 1285  
                       l2204 1272                         l2220 110B                         l3100 058F  
                       l3020 02C9                         l3012 0FEA                         l3004 0F83  
                       l2126 12F2                         l2118 12D2                         l2310 0A32  
                       l2302 0A08                         l2150 1EC9                         l2134 1DF2  
                       l2142 0008                         l2214 128A                         l2206 1273  
                       l2230 111F                         l2222 110F                         l3102 05DC  
                       l3110 068D                         l3030 0309                         l3022 02E0  
                       l3014 0292                         l3006 0F9A                         l2128 1304  
                       l2320 0A67                         l2312 0A42                         l2304 0A14  
                       l2152 1ECE                         l2144 1EB3                         l2136 1DF6  
                       l2160 080F                         l2208 127A                         l2240 1137  
                       l2232 1125                         l2224 1114                         l3112 0695  
                       l3104 061B                         l3032 0324                         l3024 02E9  
                       l3016 029B                         l3008 0FA2                         l3120 06B5  
                       l3200 1373                         l2322 0A69                         l2314 0A43  
                       l2306 0A1E                         l2154 1ED4                         l2146 1EB8  
                       l2138 1DFB                         l2170 0821                         l2162 0810  
                       l2410 1F96                         l2402 1F82                         l2250 1159  
                       l2242 1141                         l2234 1128                         l2226 1116  
                       l2218 110A                         l3130 06F4                         l3122 06BD  
                       l3114 06A2                         l3106 063A                         l3050 03F1  
                       l3026 02F1                         l3018 02BA                         l3034 032B  
                       l3202 1379                         l2316 0A53                         l2308 0A2E  
                       l2260 0974                         l2340 006B                         l2332 0026  
                       l2156 1EDC                         l2148 1EC0                         l2164 0814  
                       l2412 1F9A                         l2404 1F88                         l2420 1FB7  
                       l2180 1232                         l2252 115E                         l2244 1147  
                       l2236 112F                         l2228 111A                         l2500 0BE6  
                       l3140 072D                         l3132 0705                         l3124 06C5  
                       l3116 06A8                         l3108 064E                         l3060 044E  
                       l3052 0420                         l3044 039C                         l3036 0398  
                       l2318 0A57                         l2270 0990                         l2262 097E  
                       l2350 007D                         l2342 006C                         l2334 0037  
                       l2326 000C                         l2430 16F7                         l2166 0818  
                       l2414 1FA4                         l2406 1F8B                         l2190 1243  
                       l2182 1234                         l2174 1226                         l2246 114E  
                       l2238 1133                         l3150 076F                         l3142 0743  
                       l3134 070D                         l3126 06D6                         l3118 06AE  
                       l3070 0483                         l3054 0426                         l3038 039A  
                       l2280 09AA                         l2272 099B                         l2256 094F  
                       l2360 00A7                         l2352 0081                         l2344 006D  
                       l2328 001F                         l2096 1E00                         l2440 174D  
                       l2432 1711                         l2600 08A2                         l2168 081A  
                       l2416 1FAA                         l2408 1F92                         l2520 1E15  
                       l2192 1249                         l2184 1238                         l2176 1229  
                       l2248 1154                         l2512 0D0F                         l3160 0798  
                       l3152 0773                         l3144 074C                         l3136 071F  
                       l3128 06E1                         l3080 0513                         l3072 048A  
                       l3056 0438                         l3064 0455                         l3048 03E3  
                       l2424 1E20                         l2290 09D6                         l2282 09B0  
                       l2274 099F                         l2266 0985                         l2258 096E  
                       l2370 00CF                         l2362 00AB                         l2354 0091  
                       l2346 0073                         l2338 003E                         l2098 1E06  
                       l2450 17F7                         l2442 1751                         l2434 171B  
                       l2610 090B                         l2602 08A6                         l2530 14C3  
                       l2418 1FB1                         l2522 1E1B                         l2194 124C  
                       l2186 123D                         l2178 122D                         l2506 0C9E  
                       l3162 07AA                         l3154 0779                         l3146 0750  
                       l3138 0727                         l3090 0544                         l3082 0519  
                       l3074 04C9                         l3066 0464                         l3058 0441  
                       l2426 1E25                         l2292 09E2                         l2284 09BD  
                       l2276 09A3                         l2268 098A                         l2372 00D5  
                       l2364 00AF                         l2356 0099                         l2348 0079  
                       l2444 1760                         l2436 1720                         l2612 0915  
                       l2620 092F                         l2604 08AF                         l2540 14DF  
                       l2380 1FC4                         l2524 1E1D                         l2516 1E0E  
                       l2196 1253                         l2188 1241                         l2508 0CA5  
                       l3156 0786                         l3148 075B                         l3092 055F  
                       l3084 051F                         l3076 04E8                         l3068 0478  
                       l2700 1491                         l2428 1E2A                         l3180 1310  
                       l2286 09C7                         l2294 09E9                         l2278 09A8  
                       l2710 156D                         l2366 00BF                         l2358 00A1  
                       l2446 1766                         l2438 1724                         l2606 08DB  
                       l2550 1508                         l2542 14E5                         l2534 14CC  
                       l2390 1FE7                         l2382 1FC7                         l2454 00F4  
                       l2518 1E0F                         l2198 1257                         l3158 078C  
                       l3094 0564                         l3086 052C                         l3078 0506  
                       l3166 07B8                         l2702 1497                         l3190 1342  
                       l3182 131B                         l2296 09EF                         l2288 09CD  
                       l2712 1580                         l2368 00C7                         l2448 17B4  
                       l2800 13BC                         l2640 1E83                         l2632 1E69  
                       l2608 08FD                         l2560 1533                         l2552 1516  
                       l2544 14F4                         l2528 14B0                         l2392 1FED  
                       l2384 1FCE                         l2376 1FBC                         l2472 025E  
                       l2456 00FA                         l2464 01D1                         l2480 0A8E  
                       l3096 0571                         l3088 053B                         l3168 07CF  
                       l2704 149C                         l3192 134F                         l3184 132A  
                       l2650 11D3                         l2298 09F9                         l2730 15CE  
                       l2722 159F                         l2802 13C3                         l2642 1E89  
                       l2634 1E6B                         l2626 0936                         l2618 091D  
                       l2554 1520                         l2546 14F6                         l2394 1FEE  
                       l2386 1FD2                         l2378 1FBE                         l2466 01D7  
                       l2458 01B7                         l2490 0B54                         l2482 0A95  
                       l3098 0577                         l2706 14A7                         l3194 1355  
                       l3186 132F                         l3178 130B                         l2660 120D  
                       l2652 11E0                         l2900 1F47                         l2740 15FA  
                       l2732 15D2                         l2724 15A5                         l2716 1587  
                       l2820 13EA                         l2812 13D1                         l2804 13C5  
                       l2636 1E6F                         l2628 0946                         l2580 0823  
                       l2556 1521                         l2548 14FF                         l2396 1FF5  
                       l2388 1FD6                         l2468 0244                         l2476 0A88  
                       l3196 1367                         l3188 1338                         l2662 120E  
                       l2654 11E4                         l2646 11C0                         l2902 1F48  
                       l2742 1604                         l2734 15D9                         l2726 15AA  
                       l2718 1598                         l2822 13FA                         l2806 13C9  
                       l2814 13E3                         l2830 10B6                         l2638 1E7C  
                       l2582 083D                         l2574 1554                         l2566 153B  
                       l2558 1529                         l2398 1FFB                         l2494 0BBE  
                       l2478 0A8C                         l3278 0E3E                         l2670 1413  
                       l2910 1E8F                         l3198 136D                         l2664 1217  
                       l2656 11ED                         l2648 11D0                         l2744 1605  
                       l2736 15E4                         l2728 15BC                         l2904 1163  
                       l2760 1F6C                         l2752 1F4A                         l2824 13FF  
                       l2840 10E4                         l2832 10BE                         l2592 085F  
                       l2576 1564                         l2568 154D                         l2488 0B4D  
                       l2920 0D3E                         l2680 143A                         l2672 1416  
                       l2912 1E92                         l2658 11FF                         l2666 121D  
                       l2746 160D                         l2738 15EC                         l2850 1EE1  
                       l2906 1180                         l2762 1F6E                         l2754 1F4E  
                       l2826 140A                         l2842 10F2                         l2834 10C1  
                       l2594 0893                         l2586 0846                         l2498 0BDF  
                       l2930 0D6E                         l2922 0D44                         l2690 145E  
                       l2682 1442                         l2674 141A                         l2914 1E9F  
                       l2748 1613                         l2852 1EE8                         l2860 1E31  
                       l2764 1F70                         l2756 1F5B                         l2772 1099  
                       l2780 1E44                         l2844 10FB                         l2836 10CE  
                       l2596 089B                         l2932 0D72                         l2940 0DB8  
                       l2924 0D51                         l2692 1467                         l2684 144A  
                       l2676 142B                         l2916 1EA5                         l2854 1EF5  
                       l2862 1E3B                         l2766 1F7E                         l2758 1F5F  
                       l2774 10A0                         l2782 1E4D                         l2790 139A  
                       l2838 10D2                         l2846 1101                         l2598 089D  
                       l2950 0DE9                         l2942 0DC6                         l2934 0D87  
                       l2926 0D58                         l2918 0D33                         l2694 1479  
                       l2686 144D                         l2678 1436                         l2870 162F  
                       l2856 1EFB                         l2864 1E3C                         l2768 1F80  
                       l2776 10A2                         l2784 1E4F                         l2952 0E04  
                       l2944 0DC9                         l2936 0DA2                         l2928 0D5C  
                       l2696 1487                         l2688 145A                         l2880 16EA  
                       l2872 1680                         l2866 1E3F                         l2794 13A3  
                       l2970 0E64                         l2962 0E26                         l2954 0E0A  
                       l2946 0DCF                         l2938 0DA8                         l2698 1488  
                       l2882 16EE                         l2874 1689                         l2892 1F12  
                       l2868 1E42                         l2796 13B5                         l2788 1387  
                       l2980 0EA5                         l2972 0E6F                         l2964 0E46  
                       l2948 0DD4                         l2956 0E1C                         l2884 16EF  
                       l2876 16DE                         l2894 1F16                         l2798 13B6  
                       l2990 0EF6                         l2982 0EA9                         l2974 0E77  
                       l2966 0E5A                         l2958 0E20                         l2886 16F2  
                       l2878 16E1                         l2896 1F19                         l2992 0F09  
                       l2984 0EB0                         l2976 0E8C                         l2968 0E60  
                       l2888 16F3                         l2898 1F46                         l2994 0F0D  
                       l2986 0EDD                         l2978 0EA1                         l2996 0F13  
                       l2988 0EE3                         l2998 0F2C                         STR_1 108B  
                       STR_2 107C                         u3000 001F                         u3001 001E  
                       u3010 0037                         u3011 0036                         u3020 004E  
                       u3101 00B8                         u3102 00BF                         u3030 0060  
                       u3040 0081                         u2400 1E06                         u4000 1F5F  
                       u3200 1FFB                         u3041 0080                         u3025 004A  
                       u2401 1E05                         u4001 1F5E                         u3201 1FFA  
                       u3130 00D5                         u2410 1E0C                         u4010 1F7E  
                       u3210 1F88                         u3131 00D4                         u3115 00C0  
                       u3051 008A                         u3035 005C                         u2411 1E0B  
                       u4011 1F7D                         u3211 1F87                         u2500 12E6  
                       u2420 1294                         u3052 0091                         u3300 1766  
                       u4020 10A0                         u4100 13E9                         u3140 1FC4  
                       u2501 12E5                         u2421 1293                         u3125 00C8  
                       u3301 1765                         u4021 109F                         u4101 13E8  
                       u3141 1FC3                         u2510 12EA                         u2430 129B  
                       u3310 177E                         u4030 1E4D                         u3230 1F9A  
                       u2511 12E9                         u2431 129A                         u4015 1F7A  
                       u4031 1E4C                         u3231 1F99                         u2520 12FB  
                       u3080 00A7                         u3320 178F                         u4120 13FA  
                       u4040 139A                         u3160 1FD6                         u3240 1FA4  
                       u3400 0B54                         u3081 00A6                         u3065 0092  
                       u4121 13F9                         u4041 1399                         u3161 1FD5  
                       u3241 1FA3                         u3225 1F8C                         u3401 0B53  
                       u2530 1309                         u2450 12B4                         u3090 00AF  
                       u4210 1EFB                         u3330 17A8                         u4130 13FF  
                       u4050 13AE                         u2610 125B                         u3410 0BE6  
                       u2531 1308                         u2451 12B3                         u3091 00AE  
                       u3075 009A                         u4211 1EFA                         u3315 1779  
                       u4131 13FE                         u4115 13EC                         u3155 1FC8  
                       u2611 125A                         u3411 0BE5                         u2540 1ED4  
                       u3340 17C4                         u4060 13C9                         u4140 10BE  
                       u3500 152F                         u3180 1FE7                         u3260 1FB7  
                       u3420 0CA5                         u4300 0D44                         u2525 12F7  
                       u2445 12A7                         u4205 1EE9                         u2541 1ED3  
                       u3325 178A                         u4061 13C8                         u4141 10BD  
                       u3501 152E                         u3181 1FE6                         u3261 1FB6  
                       u3245 1FA0                         u2605 124D                         u3421 0CA4  
                       u4301 0D43                         u2470 12D1                         u3350 17E0  
                       u4070 13D0                         u3510 1533                         u2550 0814  
                       u3430 1E15                         u2630 126C                         u2710 1137  
                       u4310 0D6E                         u3270 1E30                         u2471 12D0  
                       u3335 17A3                         u4071 13CF                         u4055 13AA  
                       u3511 1532                         u2551 0813                         u3175 1FD7  
                       u3255 1FAB                         u3431 1E14                         u2631 126B  
                       u2711 1136                         u4311 0D6D                         u3271 1E2F  
                       u2800 0990                         u4160 10D2                         u3520 153A  
                       u2560 0821                         u3360 00FA                         u3440 1E1B  
                       u2720 1141                         u4400 0F0D                         u4320 0DB8  
                       u2465 12C4                         u2801 098F                         u3345 17BF  
                       u4161 10D1                         u3521 1539                         u2561 0820  
                       u3185 1FE3                         u3361 00F9                         u3441 1E1A  
                       u2625 125C                         u2721 1140                         u2705 1129  
                       u4401 0F0C                         u4321 0DB7                         u4241 1662  
                       u4225 1637                         u2490 12E0                         u2810 099A  
                       u3290 1760                         u4090 13E2                         u4170 10E4  
                       u3610 08DB                         u3450 14C3                         u3370 01D7  
                       u2650 1280                         u2570 122D                         u4410 0F7A  
                       u4330 0DC6                         u4250 1689                         u4242 1663  
                       u2491 12DF                         u2811 0999                         u3355 17DB  
                       u3291 175F                         u4091 13E1                         u4171 10E3  
                       u4155 10C3                         u3611 08DA                         u3451 14C2  
                       u3195 1FEF                         u3371 01D6                         u2651 127F  
                       u2635 1268                         u2571 122C                         u4411 0F79  
                       u4331 0DC5                         u4251 1688                         u4243 1668  
                       u4235 1648                         u2900 09EF                         u2820 09A3  
                       u3700 1E6F                         u3620 0911                         u3540 154C  
                       u3460 14DD                         u2660 1285                         u2580 1238  
                       u2740 1154                         u3380 0A8C                         u4500 03E2  
                       u4420 0F9A                         u4340 0E1B                         u4244 1669  
                       u2485 12D5                         u2901 09EE                         u2821 09A2  
                       u3285 1738                         u4085 13D2                         u3701 1E6E  
                       u3621 0910                         u3605 08A8                         u3541 154B  
                       u3461 14DC                         u2661 1284                         u2645 1274  
                       u2581 1237                         u2741 1153                         u2725 113D  
                       u3381 0A8B                         u4501 03E1                         u4421 0F99  
                       u4341 0E1A                         u4261 16C0                         u4245 166E  
                       u2830 09A8                         u4190 1101                         u3630 0915  
                       u3550 1553                         u2590 1249                         u2750 1159  
                       u2670 110F                         u3390 0A95                         u4510 03F1  
                       u4430 0FB1                         u4350 0E5A                         u4270 16EA  
                       u4262 16C1                         u4246 166F                         u2831 09A7  
                       u4191 1100                         u4175 10E0                         u3631 0914  
                       u3615 08D7                         u3551 1552                         u3535 153C  
                       u2591 1248                         u2751 1158                         u2735 1148  
                       u2671 110E                         u3391 0A94                         u4511 03F0  
                       u4431 0FB0                         u4351 0E57                         u4271 16E9  
                       u4263 16C6                         u3800 121D                         u4280 1F29  
                       u2920 09FF                         u2840 09BD                         u2760 096E  
                       u3640 091C                         u3480 1516                         u2680 111A  
                       u4600 0564                         u4520 0420                         u4440 0292  
                       u4360 0E60                         u4264 16C7                         u3801 121C  
                       u2921 09FE                         u2841 09BC                         u2761 096D  
                       u4185 10F3                         u3641 091B                         u3481 1515  
                       u2681 1119                         u4601 0563                         u4521 041F  
                       u4505 03DE                         u4441 0FFA                         u4361 0E5F  
                       u4265 16CC                         u2930 0A07                         u2770 0974  
                       u3730 1E89                         u3570 1564                         u2690 1125  
                       u4530 0438                         u4450 029B                         u4370 0E8C  
                       u3810 141A                         u4266 16CD                         u4290 1EB2  
                       u2931 0A06                         u2915 09F0                         u2771 0973  
                       u3731 1E88                         u3715 1E76                         u3571 1563  
                       u3475 1501                         u2691 1124                         u4531 0437  
                       u4451 029A                         u4435 0FAD                         u4371 0E8B  
                       u3811 1419                         u4291 1EB1                         _PEIE 005E  
                       u3740 11D0                         u2860 09CD                         u2780 097E  
                       u3660 092E                         u3580 083D                         u4700 071F  
                       u4540 0464                         u4460 02BA                         u4380 0EB0  
                       u3900 149C                         u3820 142B                         u3741 11CF  
                       u4285 1F24                         u2861 09CC                         u2781 097D  
                       u3725 1E7D                         u3661 092D                         u3581 083C  
                       u3565 1556                         u3485 1512                         u4701 071E  
                       u4541 0463                         u4461 02B9                         u4445 0FF5  
                       u4381 0EAF                         u3901 149B                         u3821 142A  
                       u2950 0A1A                         u2870 09D5                         u2790 098A  
                       u3910 1580                         u3670 0935                         u3590 085E  
                       u4710 072D                         u4630 0694                         u4550 0478  
                       u4470 02C9                         u4390 0EC6                         u3830 144A  
                       u2951 0A19                         u2871 09D4                         u2855 09BE  
                       u2791 0989                         u3911 157F                         u3671 0934  
                       u3655 091E                         u3591 085D                         u3495 1522  
                       u4711 072C                         u4631 0693                         u4615 05E1  
                       u4551 0477                         u4471 02C8                         u3831 1449  
                       u3760 11E4                         u2960 0A1E                         u3920 1598  
                       u4720 0743                         u4640 06B4                         u4480 02E0  
                       u3761 11E3                         u2961 0A1D                         u2945 0A09  
                       u3921 1597                         u4721 0742                         u4641 06B3  
                       u4625 0653                         u4545 0460                         u4481 02DF  
                       u2970 0A32                         u2890 09E8                         u3930 15B5  
                       u3690 0946                         u4730 075B                         u4650 06BD  
                       u4570 0505                         u3850 145E                         u3755 11D5  
                       u2971 0A31                         u2891 09E7                         u3691 0945  
                       u4731 075A                         u4651 06BC                         u4571 0504  
                       u4475 02C5                         u4395 0EC1                         u3851 145D  
                       u3780 11FF                         u3940 15C7                         u4740 0779  
                       u4660 06C5                         u4580 052C                         u3781 11FE  
                       u2981 0A4C                         u2885 09D7                         u3685 0938  
                       u4741 0778                         u4725 073F                         u4661 06C4  
                       u4581 052B                         u4565 048F                         u3845 144F  
                       u2990 0A57                         u2982 0A53                         u4750 0798  
                       u4670 06D6                         u4590 053B                         u3870 1479  
                       u3775 11E6                         u2991 0A56                         u3935 15B1  
                       u4751 0797                         u4735 0757                         u4671 06D5  
                       u4591 053A                         u4495 03A1                         u3871 1478  
                       u4807 137F                         u3960 15FA                         u4760 07AA  
                       u4680 06F4                         u3785 11FB                         u3961 15F9  
                       u3945 15C3                         u4761 07A9                         u4681 06F3  
                       u4585 0528                         u3865 1460                         u4817 1E27  
                       u4770 07CF                         u4690 070D                         u3890 1497  
                       u3795 120F                         u3955 15E5                         u4827 1717  
                       u4771 07CC                         u4691 070C                         u4675 06D2  
                       u4595 0537                         u3891 1496                         u3875 1475  
                       u3980 1613                         u3981 1612                         u3965 15F6  
                       u4685 06F0                         u3885 1489                         u3990 1F4E  
                       u3975 1606                         u3991 1F4D                         u4797 133E  
__size_of_aht_GetTemperature 005D      __size_of_aht_readSensor 0109                         _main 130B  
               ___ftpack@arg 0070                 ___ftpack@exp 0073                         btemp 007E  
                       start 0000         aht_readSensor@result 0044                 _sprintf$1039 00A0  
            aht_readSensor@i 0048     __end_of_uartTX_Write_Str 1EB3            ___bmul@multiplier 0027  
               ___ftmul@cntr 0036                 ___ftmul@sign 0037                 ___fttol@exp1 004E  
               ___fttol@lval 004A                   _GetTempCmd 00B9             ?_I2C_Master_Init 0020  
           ?_I2C_Master_Read 0070             ?_I2C_Master_Wait 0070             ?_I2C_Master_Stop 0070  
            __end_of___aldiv 14B0                        ?_main 0070              __end_of___awdiv 128F  
            __end_of___ftadd 0A85              __end_of___awmod 1163              __end_of___ftdiv 162F  
            __end_of___ftneg 10A3                        _ANSEL 0188              __end_of___lldiv 1226  
            __end_of___ftmul 00F1              ___awdiv@divisor 0077              __end_of___llmod 110A  
            __end_of___ftsub 1E69              __end_of___fttol 1413              __end_of___lwdiv 2000  
            __end_of___lwmod 1FBC              ___awdiv@counter 0020                        _RCREG 001A  
                      _SPBRG 0099                        _PORTD 0008                        _TRISD 0088  
                      _SSPIE 0463                        _SSPIF 0063                        _TXREG 0019  
               ___lltoft@exp 004A                        _datos 00BB              __end_of_dpowers 107C  
                      _scale 0A85              __end_of_isdigit 1E1F                ___ftpack@sign 0074  
            _GetRHumidityCmd 00D8                        pclath 000A                        status 0003  
                      wtemp0 007E              __end_of_sprintf 07D6      aht_GetTemperature@value 0058  
            __initialization 07D6                 __end_of_main 1387                       ??_main 0065  
              ___fttol@sign1 0049                _AHT10_address 006B         __size_of__tdiv_to_l_ 00BD  
          ?_I2C_Master_Start 0070            ?_I2C_Master_Write 0070           ??_I2C_Master_Start 0070  
         ??_I2C_Master_Write 0072             ___llmod@dividend 0074                       ?_scale 0038  
           ___awdiv@dividend 0079             __end_of___ftpack 130B                       _ANSELH 0189  
           __end_of___lltoft 1F12                       _SSPADD 0093                       _TRISC3 043B  
                     _TRISC4 043C                 ?_uartRC_init 0026                       _SSPCON 0014  
                     _SSPBUF 0013             __end_of__powers_ 102D             __end_of_configIO 1E44  
                     ___bmul 080C                       ___ftge 1F4A                    ??___aldiv 0078  
                     ___wmul 1E69                    ??___awdiv 007B                    ??___ftadd 004E  
                  ??___awmod 0074                    ??___ftdiv 003E                    ??___ftneg 0073  
                  ??___lldiv 0078                    ??___ftmul 002E                    ??___llmod 0078  
                  ??___ftsub 007E                    ??___fttol 0045                    ??___lwdiv 007A  
                  ??___lwmod 0074                       _fround 00F1             ___awdiv@quotient 0022  
            ___awmod@divisor 0070              ___awmod@counter 0075        ___ftmul@f3_as_product 0033  
                  ??_isdigit 0070                    ??_sprintf 005F               _aht_readSensor 16F7  
    __end_of__initialization 07FC                   ___ftadd@f1 0048                   ___ftadd@f2 004B  
                 ___ftge@ff1 0070                   ___ftge@ff2 0073                   ___ftdiv@f1 003B  
                 ___ftdiv@f2 0038                   ___ftdiv@f3 0043                   ___ftneg@f1 0070  
        ___bmul@multiplicand 0024                   ___ftmul@f1 0028                   ___ftmul@f2 002B  
                 ___ftsub@f1 0058                   ___ftsub@f2 0055                   ___fttol@f1 0041  
             __pcstackCOMMON 0070                 __pidataBANK0 1DDF                 __pidataBANK1 0801  
                 ___lltoft@c 007A                __end_of_scale 0D30                   __div_to_l_ 0823  
     __end_of_aht_readSensor 1800              __div_to_l_@exp1 0025              __div_to_l_@cntr 0024  
                    ??_scale 003B              __div_to_l_@quot 0020                 sprintf@width 00AA  
                 __pbssBANK0 006D                   __pbssBANK1 00B9                __div_to_l_@f1 0070  
              __div_to_l_@f2 0073                   __pmaintext 130B            ?_uartTX_Write_Str 0070  
                    ?___bmul 0024                      ?___ftge 0070                      ?___wmul 0070  
         ??_uartTX_Write_Str 0072                      ?_fround 0038                    ?___ftpack 0070  
                  ?___lltoft 007A              ?_aht_readSensor 0076   __end_of_aht_GetTemperature 11C0  
                    _SSPCON2 0091                    ?_configIO 0070                      _SSPSTAT 0094  
                 __stringtab 1000              _eSensorResetCmd 006C            __end_of__npowers_ 1054  
              ?_uartTX_Write 0070         __size_of_uartRC_init 00C8                   _scale$1038 003D  
                    ___aldiv 1413              __size_of___bmul 0017              __size_of___ftge 0038  
                    ___awdiv 1226                      ___ftadd 094F                      ___awmod 110A  
                    ___ftdiv 156D                      ___ftneg 1099                      ___lldiv 11C0  
            __size_of___wmul 0025                      ___ftmul 000C                      ___llmod 10B6  
                    ___ftsub 1E44                      ___fttol 1387                      ___lwdiv 1FBC  
                    ___lwmod 1F82                   ??___ftpack 0075              __size_of_fround 01A1  
                 ??___lltoft 0049                      __ptext1 1E8E                      __ptext2 1E1F  
                    __ptext3 162F                      __ptext4 1413                      __ptext5 0D30  
                    __ptext6 0A85                      __ptext7 110A                      __ptext8 1226  
                    __ptext9 1E0D                  ?__div_to_l_ 0070                      _dpowers 1054  
                    _isdigit 1E0D             ___awmod@dividend 0072             ___aldiv@dividend 0074  
   __size_of_I2C_Master_Init 0038     __size_of_I2C_Master_Read 002E     __size_of_I2C_Master_Wait 000D  
   __size_of_I2C_Master_Stop 0009                   ??_configIO 0070                      _sprintf 0D30  
                    clrloop0 1DE6         end_of_initialization 07FC               ??_uartTX_Write 0070  
  __size_of_I2C_Master_Start 0009    __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0070  
            ___lldiv@counter 007D            _eSensorMeasureCmd 00CF                    _RCSTAbits 0018  
           ___aldiv@quotient 0022             I2C_Master_Init@c 0020             I2C_Master_Read@a 0070  
                    psplit$0 140035               __tdiv_to_l_@f1 0070               __tdiv_to_l_@f2 0073  
        _eSensorCalibrateCmd 00D5                ??__tdiv_to_l_ 0076                    _TRISCbits 0087  
         aht_readSensor@temp 002C                  ___ftdiv@exp 0046                    _TXSTAbits 0098  
        __size_of__div_to_l_ 012C                  ___ftmul@exp 0032               __end_of___bmul 0823  
             __end_of___ftge 1F82               __end_of___wmul 1E8E     aht_readSensor@GetDataCmd 0076  
             __end_of_fround 0292            _AHT10Address_High 0067          start_initialization 07D6  
          pnum$text5_split_1 0035          __end_of__tdiv_to_l_ 156D            ??_I2C_Master_Init 0024  
          ??_I2C_Master_Read 0072            ??_I2C_Master_Wait 0070            ??_I2C_Master_Stop 0070  
            ___llmod@divisor 0070              ___llmod@counter 0079                     ??___bmul 0025  
                   ??___ftge 0076                     ??___wmul 0074                   init_fetch0 10A3  
                __pdataBANK0 0067                  __pdataBANK1 00CF                     ??_fround 003B  
              sprintf@tmpval 00AC                   fround@prec 0047             ??_aht_readSensor 0020  
          __size_of___ftpack 007C            __size_of___lltoft 0031         __end_of_uartTX_Write 1E31  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
  __size_of_uartTX_Write_Str 0025            uartTX_Write_Str@n 0072            __size_of_configIO 0013  
                sprintf@flag 00A8                  sprintf@eexp 00B0                  sprintf@fval 00B3  
                sprintf@prec 00B6             _I2C_Master_Start 1DED             _I2C_Master_Write 1DF6  
           ___lwdiv@dividend 0078           _aht_GetTemperature 1163                     ?___aldiv 0070  
                   ?___awdiv 0077                     ?___ftadd 0048                     ?___awmod 0070  
                   ?___ftdiv 0038                     ?___ftneg 0070                     ?___lldiv 0070  
                   ?___ftmul 0028                     ?___llmod 0070                     ?___ftsub 0055  
                  __npowers_ 102D                     ?___fttol 0041                     ?___lwdiv 0076  
                   ?___lwmod 0070          ?_aht_GetTemperature 0055                    __pstrings 1000  
                __tdiv_to_l_ 14B0                 ??__div_to_l_ 0076                     ?_isdigit 0070  
           ___lwdiv@quotient 007B                     ?_sprintf 005B               __size_of_scale 02AB  
       ??_aht_GetTemperature 007E              ___aldiv@divisor 0070                ??_uartRC_init 0028  
            ___aldiv@counter 0020               ___wmul@product 0074                    clear_ram0 1DE5  
                   _PIE1bits 008C                     _PIR1bits 000C           __end_of__div_to_l_ 094F  
     uartTX_Write_Str@string 0074                  __stringbase 1005            ___wmul@multiplier 0070  
           _eSensorNormalCmd 00D2          uartRC_init@baudrate 0026          I2C_Master_Read@temp 0074  
           _AHT10Address_Low 0069          __end_of_uartRC_init 16F7             __size_of___aldiv 009D  
           __size_of___awdiv 0069             __size_of___ftadd 0136             __size_of___awmod 0059  
           __size_of___ftdiv 00C2             __size_of___ftneg 000A             __size_of___lldiv 0066  
           __size_of___ftmul 00E5             __size_of___llmod 0054             __size_of___ftsub 0025  
           __size_of___fttol 008C             __size_of___lwdiv 0044             __size_of___lwmod 003A  
      __size_of_uartTX_Write 0012                     ___ftpack 128F             uartTX_Write@dato 0071  
                _fround$1036 0044                  _fround$1037 0041           __end_of__stringtab 1006  
               uartRC_init@n 0079                     ___lltoft 1EE1                  _isdigit$829 0070  
                 sprintf@val 00A4              _I2C_Master_Init 1F12              _I2C_Master_Read 1EB3  
            _I2C_Master_Wait 1E00              _I2C_Master_Stop 0003             __size_of_isdigit 0012  
           _uartTX_Write_Str 1E8E              ___lwdiv@divisor 0076              ___lwdiv@counter 007D  
                   __ptext10 00F1                     __ptext11 1F82                     __ptext20 1099  
                   __ptext12 1FBC                     __ptext21 1F4A                     __ptext13 080C  
                   __ptext30 1EE1                     __ptext22 1E31                     __ptext14 14B0  
                   __ptext31 000C                     __ptext23 1163                     __ptext15 0823  
                   __ptext32 156D                     __ptext24 16F7                     __ptext16 1E69  
                   __ptext33 094F                     __ptext25 1DF6                     __ptext17 10B6  
                   __ptext34 128F                     __ptext26 0003                     __ptext18 1387  
                   __ptext35 1F12                     __ptext27 1DED                     __ptext19 1E44  
                   __ptext36 11C0                     __ptext28 1EB3                     __ptext29 1E00  
                   __powers_ 1006                     _configIO 1E31             __size_of_sprintf FAA6  
              __size_of_main 007C                    pnum$text5 0014                 _uartTX_Write 1E1F  
                   _tempera1 006D     __end_of_I2C_Master_Start 1DF6     __end_of_I2C_Master_Write 1E00  
                 _INTCONbits 000B                     init_ram0 10A7                     isdigit@c 0071  
                   scale@scl 0040                    sprintf@ap 00A3             __tdiv_to_l_@exp1 0025  
           __tdiv_to_l_@cntr 0024                    sprintf@sp 00B2             __tdiv_to_l_@quot 0020  
           ___lwmod@dividend 0072             ___lldiv@dividend 0074                  _uartRC_init 162F  
                  stringcode 1000      __end_of_I2C_Master_Init 1F4A      __end_of_I2C_Master_Read 1EE1  
    __end_of_I2C_Master_Wait 1E0D      __end_of_I2C_Master_Stop 000C                 ?__tdiv_to_l_ 0070  
                   sprintf@c 00B8                     sprintf@f 005B             ___lldiv@quotient 0079  
          I2C_Master_Write@d 0070              ___lwmod@divisor 0070              ___lwmod@counter 0075  
                   stringdir 1000                     stringtab 1000                 ___aldiv@sign 0021  
                _SSPCON2bits 0091  
