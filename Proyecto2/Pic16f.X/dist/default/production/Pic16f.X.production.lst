

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 05 21:59:35 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	functab,global,class=ENTRY,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  008F                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  0105                     	;# 
   387  0107                     	;# 
   388  0108                     	;# 
   389  0109                     	;# 
   390  010C                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  0185                     	;# 
   396  0187                     	;# 
   397  0188                     	;# 
   398  0189                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  000E                     	;# 
   417  000F                     	;# 
   418  0010                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001D                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  0081                     	;# 
   437  0085                     	;# 
   438  0086                     	;# 
   439  0087                     	;# 
   440  0088                     	;# 
   441  0089                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  008F                     	;# 
   446  0090                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0094                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0098                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  0105                     	;# 
   465  0107                     	;# 
   466  0108                     	;# 
   467  0109                     	;# 
   468  010C                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  0185                     	;# 
   474  0187                     	;# 
   475  0188                     	;# 
   476  0189                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479                           
   480 ;; Function _aht_GetHumidity is unused but had its address taken
   481  0000                     
   482 ;; Function _aht_GetTemperature is unused but had its address taken
   483  0000                     
   484                           	psect	idataCOMMON
   485  07FA                     __pidataCOMMON:
   486                           
   487                           ;initializer for _AHT10_address
   488  07FA  3438               	retlw	56
   489                           
   490                           ;initializer for _eSensorResetCmd
   491  07FB  34BA               	retlw	186
   492                           
   493                           	psect	idataBANK1
   494  1EE6                     __pidataBANK1:
   495                           
   496                           ;initializer for _eSensorMeasureCmd
   497  1EE6  34AC               	retlw	172
   498  1EE7  3433               	retlw	51
   499  1EE8  3400               	retlw	0
   500                           
   501                           ;initializer for _eSensorNormalCmd
   502  1EE9  34A8               	retlw	168
   503  1EEA  3400               	retlw	0
   504  1EEB  3400               	retlw	0
   505                           
   506                           ;initializer for _eSensorCalibrateCmd
   507  1EEC  34E1               	retlw	225
   508  1EED  3408               	retlw	8
   509  1EEE  3400               	retlw	0
   510                           
   511                           ;initializer for _GetRHumidityCmd
   512  1EEF  3401               	retlw	1
   513  1EF0  3400               	retlw	0
   514                           
   515                           ;initializer for _AHT10Address_High
   516  1EF1  3439               	retlw	57
   517  1EF2  3400               	retlw	0
   518                           
   519                           ;initializer for _AHT10Address_Low
   520  1EF3  3438               	retlw	56
   521  1EF4  3400               	retlw	0
   522                           
   523                           	psect	strings
   524  1000                     __pstrings:
   525  1000                     stringtab:
   526  1000                     __stringtab:
   527                           
   528                           ;	String table - string pointers are 1 byte each
   529  1000  1BFF               	btfsc	btemp+1,7
   530  1001  280A               	ljmp	stringcode
   531  1002  1383               	bcf	3,7
   532  1003  187F               	btfsc	btemp+1,0
   533  1004  1783               	bsf	3,7
   534  1005  0800               	movf	0,w
   535  1006  0A84               	incf	4,f
   536  1007  1903               	skipnz
   537  1008  0AFF               	incf	btemp+1,f
   538  1009  0008               	return
   539  100A                     stringcode:
   540  100A                     stringdir:
   541  100A  3010               	movlw	high stringdir
   542  100B  008A               	movwf	10
   543  100C  0804               	movf	4,w
   544  100D  0A84               	incf	4,f
   545  100E  0782               	addwf	2,f
   546  100F                     __stringbase:
   547  100F  3400               	retlw	0
   548  1010                     __end_of__stringtab:
   549  1010                     __powers_:
   550  1010  3400               	retlw	0
   551  1011  3480               	retlw	128
   552  1012  343F               	retlw	63
   553  1013  3400               	retlw	0
   554  1014  3420               	retlw	32
   555  1015  3441               	retlw	65
   556  1016  3400               	retlw	0
   557  1017  34C8               	retlw	200
   558  1018  3442               	retlw	66
   559  1019  3400               	retlw	0
   560  101A  347A               	retlw	122
   561  101B  3444               	retlw	68
   562  101C  3440               	retlw	64
   563  101D  341C               	retlw	28
   564  101E  3446               	retlw	70
   565  101F  3450               	retlw	80
   566  1020  34C3               	retlw	195
   567  1021  3447               	retlw	71
   568  1022  3424               	retlw	36
   569  1023  3474               	retlw	116
   570  1024  3449               	retlw	73
   571  1025  3497               	retlw	151
   572  1026  3418               	retlw	24
   573  1027  344B               	retlw	75
   574  1028  34BC               	retlw	188
   575  1029  34BE               	retlw	190
   576  102A  344C               	retlw	76
   577  102B  346B               	retlw	107
   578  102C  346E               	retlw	110
   579  102D  344E               	retlw	78
   580  102E  3403               	retlw	3
   581  102F  3415               	retlw	21
   582  1030  3450               	retlw	80
   583  1031  3479               	retlw	121
   584  1032  34AD               	retlw	173
   585  1033  3460               	retlw	96
   586  1034  34F3               	retlw	243
   587  1035  3449               	retlw	73
   588  1036  3471               	retlw	113
   589  1037                     __end_of__powers_:
   590  1037                     __npowers_:
   591  1037  3400               	retlw	0
   592  1038  3480               	retlw	128
   593  1039  343F               	retlw	63
   594  103A  34CD               	retlw	205
   595  103B  34CC               	retlw	204
   596  103C  343D               	retlw	61
   597  103D  34D7               	retlw	215
   598  103E  3423               	retlw	35
   599  103F  343C               	retlw	60
   600  1040  3412               	retlw	18
   601  1041  3483               	retlw	131
   602  1042  343A               	retlw	58
   603  1043  34B7               	retlw	183
   604  1044  34D1               	retlw	209
   605  1045  3438               	retlw	56
   606  1046  34C6               	retlw	198
   607  1047  3427               	retlw	39
   608  1048  3437               	retlw	55
   609  1049  3438               	retlw	56
   610  104A  3486               	retlw	134
   611  104B  3435               	retlw	53
   612  104C  34C0               	retlw	192
   613  104D  34D6               	retlw	214
   614  104E  3433               	retlw	51
   615  104F  34CC               	retlw	204
   616  1050  342B               	retlw	43
   617  1051  3432               	retlw	50
   618  1052  3470               	retlw	112
   619  1053  3489               	retlw	137
   620  1054  3430               	retlw	48
   621  1055  34E7               	retlw	231
   622  1056  34DB               	retlw	219
   623  1057  342E               	retlw	46
   624  1058  34E5               	retlw	229
   625  1059  343C               	retlw	60
   626  105A  341E               	retlw	30
   627  105B  3442               	retlw	66
   628  105C  34A2               	retlw	162
   629  105D  340D               	retlw	13
   630  105E                     __end_of__npowers_:
   631  105E                     _dpowers:
   632  105E  3401               	retlw	1
   633  105F  3400               	retlw	0
   634  1060  3400               	retlw	0
   635  1061  3400               	retlw	0
   636  1062  340A               	retlw	10
   637  1063  3400               	retlw	0
   638  1064  3400               	retlw	0
   639  1065  3400               	retlw	0
   640  1066  3464               	retlw	100
   641  1067  3400               	retlw	0
   642  1068  3400               	retlw	0
   643  1069  3400               	retlw	0
   644  106A  34E8               	retlw	232
   645  106B  3403               	retlw	3
   646  106C  3400               	retlw	0
   647  106D  3400               	retlw	0
   648  106E  3410               	retlw	16
   649  106F  3427               	retlw	39
   650  1070  3400               	retlw	0
   651  1071  3400               	retlw	0
   652  1072  34A0               	retlw	160
   653  1073  3486               	retlw	134
   654  1074  3401               	retlw	1
   655  1075  3400               	retlw	0
   656  1076  3440               	retlw	64
   657  1077  3442               	retlw	66
   658  1078  340F               	retlw	15
   659  1079  3400               	retlw	0
   660  107A  3480               	retlw	128
   661  107B  3496               	retlw	150
   662  107C  3498               	retlw	152
   663  107D  3400               	retlw	0
   664  107E  3400               	retlw	0
   665  107F  34E1               	retlw	225
   666  1080  34F5               	retlw	245
   667  1081  3405               	retlw	5
   668  1082  3400               	retlw	0
   669  1083  34CA               	retlw	202
   670  1084  349A               	retlw	154
   671  1085  343B               	retlw	59
   672  1086                     __end_of_dpowers:
   673  001A                     _RCREG	set	26
   674  0019                     _TXREG	set	25
   675  0013                     _SSPBUF	set	19
   676  0014                     _SSPCON	set	20
   677  000C                     _PIR1bits	set	12
   678  000B                     _INTCONbits	set	11
   679  0006                     _PORTB	set	6
   680  00C4                     _CREN	set	196
   681  00C7                     _SPEN	set	199
   682  0063                     _SSPIF	set	99
   683  005E                     _PEIE	set	94
   684  005F                     _GIE	set	95
   685  0065                     _RCIF	set	101
   686  0099                     _SPBRG	set	153
   687  0091                     _SSPCON2bits	set	145
   688  0087                     _TRISCbits	set	135
   689  0094                     _SSPSTAT	set	148
   690  0093                     _SSPADD	set	147
   691  0091                     _SSPCON2	set	145
   692  008C                     _PIE1bits	set	140
   693  0086                     _TRISB	set	134
   694  04C1                     _TRMT	set	1217
   695  04C5                     _TXEN	set	1221
   696  043E                     _TRISC6	set	1086
   697  043F                     _TRISC7	set	1087
   698  04C4                     _SYNC	set	1220
   699  04C2                     _BRGH	set	1218
   700  0463                     _SSPIE	set	1123
   701  043C                     _TRISC4	set	1084
   702  043B                     _TRISC3	set	1083
   703  0189                     _ANSELH	set	393
   704  0188                     _ANSEL	set	392
   705  1086                     STR_2:
   706  1086  3425               	retlw	37	;'%'
   707  1087  3432               	retlw	50	;'2'
   708  1088  342E               	retlw	46	;'.'
   709  1089  3431               	retlw	49	;'1'
   710  108A  3466               	retlw	102	;'f'
   711  108B  3420               	retlw	32	;' '
   712  108C  3420               	retlw	32	;' '
   713  108D  3420               	retlw	32	;' '
   714  108E  3425               	retlw	37	;'%'
   715  108F  3432               	retlw	50	;'2'
   716  1090  342E               	retlw	46	;'.'
   717  1091  3431               	retlw	49	;'1'
   718  1092  3466               	retlw	102	;'f'
   719  1093  3420               	retlw	32	;' '
   720  1094  3400               	retlw	0
   721  1095                     STR_1:
   722  1095  3454               	retlw	84	;'T'
   723  1096  3431               	retlw	49	;'1'
   724  1097  3420               	retlw	32	;' '
   725  1098  3420               	retlw	32	;' '
   726  1099  3420               	retlw	32	;' '
   727  109A  3448               	retlw	72	;'H'
   728  109B  3431               	retlw	49	;'1'
   729  109C  3420               	retlw	32	;' '
   730  109D  3420               	retlw	32	;' '
   731  109E  3420               	retlw	32	;' '
   732  109F  340A               	retlw	10
   733  10A0  3400               	retlw	0
   734                           
   735                           	psect	cinit
   736  000F                     start_initialization:	
   737                           ; #config settings
   738                           
   739  000F                     __initialization:
   740                           
   741                           ; Initialize objects allocated to BANK1
   742  000F  1383               	bcf	3,7	;select IRP bank0
   743  0010  30EA               	movlw	low (__pdataBANK1+15)
   744  0011  00FD               	movwf	btemp+-1
   745  0012  301E               	movlw	high __pidataBANK1
   746  0013  00FE               	movwf	btemp
   747  0014  30E6               	movlw	low __pidataBANK1
   748  0015  00FF               	movwf	btemp+1
   749  0016  30DB               	movlw	low __pdataBANK1
   750  0017  0084               	movwf	4
   751  0018  160A  158A  271E  120A  118A  	fcall	init_ram0
   752                           
   753                           ; Initialize objects allocated to COMMON
   754  001D  120A  118A  27FA  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   755  0022  00F8               	movwf	__pdataCOMMON& (0+127)
   756  0023  120A  118A  27FB  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   757  0028  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   758                           
   759                           ; Clear objects allocated to BANK1
   760  0029  30BE               	movlw	low __pbssBANK1
   761  002A  0084               	movwf	4
   762  002B  30DB               	movlw	low (__pbssBANK1+29)
   763  002C  160A  158A  26D4  120A  118A  	fcall	clear_ram0
   764                           
   765                           ; Clear objects allocated to BANK0
   766  0031  01ED               	clrf	__pbssBANK0& (0+127)
   767                           
   768                           ; Clear objects allocated to COMMON
   769  0032  01FA               	clrf	__pbssCOMMON& (0+127)
   770  0033                     end_of_initialization:	
   771                           ;End of C runtime variable initialization code
   772                           
   773  0033                     __end_of__initialization:
   774  0033  0183               	clrf	3
   775  0034  160A  118A  2C10   	ljmp	_main	;jump to C main() function
   776                           
   777                           	psect	bssCOMMON
   778  007A                     __pbssCOMMON:
   779  007A                     _LecturaUSART:
   780  007A                     	ds	1
   781                           
   782                           	psect	dataCOMMON
   783  0078                     __pdataCOMMON:
   784  0078                     _AHT10_address:
   785  0078                     	ds	1
   786  0079                     _eSensorResetCmd:
   787  0079                     	ds	1
   788                           
   789                           	psect	bssBANK0
   790  006D                     __pbssBANK0:
   791  006D                     _temperatura:
   792  006D                     	ds	1
   793                           
   794                           	psect	bssBANK1
   795  00BE                     __pbssBANK1:
   796  00BE                     _humeda1:
   797  00BE                     	ds	3
   798  00C1                     _tempera1:
   799  00C1                     	ds	3
   800  00C4                     _GetTempCmd:
   801  00C4                     	ds	2
   802  00C6                     _humedad:
   803  00C6                     	ds	1
   804  00C7                     _datos:
   805  00C7                     	ds	20
   806                           
   807                           	psect	dataBANK1
   808  00DB                     __pdataBANK1:
   809  00DB                     _eSensorMeasureCmd:
   810  00DB                     	ds	3
   811  00DE                     _eSensorNormalCmd:
   812  00DE                     	ds	3
   813  00E1                     _eSensorCalibrateCmd:
   814  00E1                     	ds	3
   815  00E4                     _GetRHumidityCmd:
   816  00E4                     	ds	2
   817  00E6                     _AHT10Address_High:
   818  00E6                     	ds	2
   819  00E8                     _AHT10Address_Low:
   820  00E8                     	ds	2
   821                           
   822                           	psect	inittext
   823  1F1A                     init_fetch0:	
   824                           ;	Called with low address in FSR and high address in W
   825                           
   826  1F1A  087E               	movf	btemp,w
   827  1F1B  008A               	movwf	10
   828  1F1C  087F               	movf	btemp+1,w
   829  1F1D  0082               	movwf	2
   830  1F1E                     init_ram0:	
   831                           ;Called with:
   832                           ;	high address of idata address in btemp 
   833                           ;	low address of idata address in btemp+1 
   834                           ;	low address of data in FSR
   835                           ;	high address + 1 of data in btemp-1
   836                           
   837  1F1E  160A  158A  271A  160A  158A  	fcall	init_fetch0
   838  1F23  0080               	movwf	0
   839  1F24  0A84               	incf	4,f
   840  1F25  0804               	movf	4,w
   841  1F26  067D               	xorwf	btemp+-1,w
   842  1F27  1903               	btfsc	3,2
   843  1F28  3400               	retlw	0
   844  1F29  0AFF               	incf	btemp+1,f
   845  1F2A  1903               	btfsc	3,2
   846  1F2B  0AFE               	incf	btemp,f
   847  1F2C  2F1E               	goto	init_ram0
   848                           
   849                           	psect	clrtext
   850  1ED4                     clear_ram0:	
   851                           ;	Called with FSR containing the base address, and
   852                           ;	W with the last address+1
   853                           
   854  1ED4  0064               	clrwdt	;clear the watchdog before getting into this loop
   855  1ED5                     clrloop0:
   856  1ED5  0180               	clrf	0	;clear RAM location pointed to by FSR
   857  1ED6  0A84               	incf	4,f	;increment pointer
   858  1ED7  0604               	xorwf	4,w	;XOR with final address
   859  1ED8  1903               	btfsc	3,2	;have we reached the end yet?
   860  1ED9  3400               	retlw	0	;all done for this memory range, return
   861  1EDA  0604               	xorwf	4,w	;XOR again to restore value
   862  1EDB  2ED5               	goto	clrloop0	;do the next byte
   863                           
   864                           	psect	cstackBANK1
   865  00A0                     __pcstackBANK1:
   866  00A0                     _sprintf$960:
   867                           
   868                           ; 3 bytes @ 0x0
   869  00A0                     	ds	3
   870  00A3                     sprintf@ap:
   871                           
   872                           ; 1 bytes @ 0x3
   873  00A3                     	ds	1
   874  00A4                     sprintf@val:
   875                           
   876                           ; 4 bytes @ 0x4
   877  00A4                     	ds	4
   878  00A8                     sprintf@flag:
   879                           
   880                           ; 2 bytes @ 0x8
   881  00A8                     	ds	2
   882  00AA                     sprintf@width:
   883                           
   884                           ; 2 bytes @ 0xA
   885  00AA                     	ds	2
   886  00AC                     sprintf@tmpval:
   887                           
   888                           ; 4 bytes @ 0xC
   889  00AC                     	ds	4
   890  00B0                     sprintf@eexp:
   891                           
   892                           ; 2 bytes @ 0x10
   893  00B0                     	ds	2
   894  00B2                     sprintf@sp:
   895                           
   896                           ; 1 bytes @ 0x12
   897  00B2                     	ds	1
   898  00B3                     sprintf@fval:
   899                           
   900                           ; 3 bytes @ 0x13
   901  00B3                     	ds	3
   902  00B6                     sprintf@prec:
   903                           
   904                           ; 2 bytes @ 0x16
   905  00B6                     	ds	2
   906  00B8                     sprintf@c:
   907                           
   908                           ; 1 bytes @ 0x18
   909  00B8                     	ds	1
   910  00B9                     ??_main:
   911                           
   912                           ; 1 bytes @ 0x19
   913  00B9                     	ds	5
   914                           
   915                           	psect	cstackCOMMON
   916  0070                     __pcstackCOMMON:
   917  0070                     ?_isdigit:
   918  0070                     ?_Read_USART:	
   919                           ; 1 bit 
   920                           
   921  0070                     ??_Read_USART:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0070                     ?_Write_USART:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0070                     ?_configIO:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0070                     ?_ISR:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0070                     ??_ISR:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0070                     ?_main:	
   937                           ; 1 bytes @ 0x0
   938                           
   939                           
   940                           ; 1 bytes @ 0x0
   941  0070                     	ds	3
   942  0073                     ??_Write_USART:
   943  0073                     ??_isdigit:	
   944                           ; 1 bytes @ 0x3
   945                           
   946  0073                     ??__tdiv_to_l_:	
   947                           ; 1 bytes @ 0x3
   948                           
   949  0073                     ??_configIO:	
   950                           ; 1 bytes @ 0x3
   951                           
   952  0073                     ??___lldiv:	
   953                           ; 1 bytes @ 0x3
   954                           
   955  0073                     ??___aldiv:	
   956                           ; 1 bytes @ 0x3
   957                           
   958  0073                     ??___ftge:	
   959                           ; 1 bytes @ 0x3
   960                           
   961  0073                     ??___llmod:	
   962                           ; 1 bytes @ 0x3
   963                           
   964  0073                     ?___wmul:	
   965                           ; 1 bytes @ 0x3
   966                           
   967  0073                     ?___awmod:	
   968                           ; 2 bytes @ 0x3
   969                           
   970  0073                     ?___lwmod:	
   971                           ; 2 bytes @ 0x3
   972                           
   973  0073                     ?___ftpack:	
   974                           ; 2 bytes @ 0x3
   975                           
   976  0073                     ?___ftneg:	
   977                           ; 3 bytes @ 0x3
   978                           
   979  0073                     Write_USART@a:	
   980                           ; 3 bytes @ 0x3
   981                           
   982  0073                     _isdigit$749:	
   983                           ; 1 bytes @ 0x3
   984                           
   985  0073                     ___wmul@multiplier:	
   986                           ; 1 bytes @ 0x3
   987                           
   988  0073                     ___awmod@divisor:	
   989                           ; 2 bytes @ 0x3
   990                           
   991  0073                     ___lwmod@divisor:	
   992                           ; 2 bytes @ 0x3
   993                           
   994  0073                     ___ftpack@arg:	
   995                           ; 2 bytes @ 0x3
   996                           
   997  0073                     ___ftneg@f1:	
   998                           ; 3 bytes @ 0x3
   999                           
  1000                           
  1001                           ; 3 bytes @ 0x3
  1002  0073                     	ds	1
  1003  0074                     ??_I2C_Master_Init:
  1004  0074                     ?_Write_USART_String:	
  1005                           ; 1 bytes @ 0x4
  1006                           
  1007  0074                     ___llmod@counter:	
  1008                           ; 1 bytes @ 0x4
  1009                           
  1010  0074                     isdigit@c:	
  1011                           ; 1 bytes @ 0x4
  1012                           
  1013  0074                     USART_Init@x:	
  1014                           ; 1 bytes @ 0x4
  1015                           
  1016  0074                     Write_USART_String@a:	
  1017                           ; 2 bytes @ 0x4
  1018                           
  1019                           
  1020                           ; 2 bytes @ 0x4
  1021  0074                     	ds	1
  1022  0075                     ___wmul@multiplicand:
  1023  0075                     ___awmod@dividend:	
  1024                           ; 2 bytes @ 0x5
  1025                           
  1026  0075                     ___lwmod@dividend:	
  1027                           ; 2 bytes @ 0x5
  1028                           
  1029                           
  1030                           ; 2 bytes @ 0x5
  1031  0075                     	ds	1
  1032  0076                     ??_Write_USART_String:
  1033  0076                     ??___ftneg:	
  1034                           ; 1 bytes @ 0x6
  1035                           
  1036  0076                     ___ftpack@exp:	
  1037                           ; 1 bytes @ 0x6
  1038                           
  1039                           
  1040                           ; 1 bytes @ 0x6
  1041  0076                     	ds	1
  1042  0077                     ??___wmul:
  1043  0077                     ??___awmod:	
  1044                           ; 1 bytes @ 0x7
  1045                           
  1046  0077                     ??___lwmod:	
  1047                           ; 1 bytes @ 0x7
  1048                           
  1049  0077                     Write_USART_String@i:	
  1050                           ; 1 bytes @ 0x7
  1051                           
  1052  0077                     ___ftpack@sign:	
  1053                           ; 1 bytes @ 0x7
  1054                           
  1055                           
  1056                           ; 1 bytes @ 0x7
  1057  0077                     	ds	1
  1058  0078                     ??___ftsub:
  1059                           
  1060                           	psect	cstackBANK0
  1061  0020                     __pcstackBANK0:	
  1062                           ; 1 bytes @ 0x8
  1063                           
  1064  0020                     ?___ftge:
  1065  0020                     ??___ftpack:	
  1066                           ; 1 bit 
  1067                           
  1068  0020                     ?__tdiv_to_l_:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0020                     ?__div_to_l_:	
  1072                           ; 4 bytes @ 0x0
  1073                           
  1074  0020                     ?___lldiv:	
  1075                           ; 4 bytes @ 0x0
  1076                           
  1077  0020                     ?___aldiv:	
  1078                           ; 4 bytes @ 0x0
  1079                           
  1080  0020                     ?___llmod:	
  1081                           ; 4 bytes @ 0x0
  1082                           
  1083  0020                     ___awmod@counter:	
  1084                           ; 4 bytes @ 0x0
  1085                           
  1086  0020                     ___lwmod@counter:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0020                     ___wmul@product:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0020                     __div_to_l_@f1:	
  1093                           ; 2 bytes @ 0x0
  1094                           
  1095  0020                     __tdiv_to_l_@f1:	
  1096                           ; 3 bytes @ 0x0
  1097                           
  1098  0020                     ___ftge@ff1:	
  1099                           ; 3 bytes @ 0x0
  1100                           
  1101  0020                     ___lldiv@divisor:	
  1102                           ; 3 bytes @ 0x0
  1103                           
  1104  0020                     ___aldiv@divisor:	
  1105                           ; 4 bytes @ 0x0
  1106                           
  1107  0020                     ___llmod@divisor:	
  1108                           ; 4 bytes @ 0x0
  1109                           
  1110                           
  1111                           ; 4 bytes @ 0x0
  1112  0020                     	ds	1
  1113  0021                     ?___lwdiv:
  1114  0021                     ___awmod@sign:	
  1115                           ; 2 bytes @ 0x1
  1116                           
  1117  0021                     ___lwdiv@divisor:	
  1118                           ; 1 bytes @ 0x1
  1119                           
  1120                           
  1121                           ; 2 bytes @ 0x1
  1122  0021                     	ds	1
  1123  0022                     ?___awdiv:
  1124  0022                     ___awdiv@divisor:	
  1125                           ; 2 bytes @ 0x2
  1126                           
  1127                           
  1128                           ; 2 bytes @ 0x2
  1129  0022                     	ds	1
  1130  0023                     ?___lltoft:
  1131  0023                     ___lwdiv@dividend:	
  1132                           ; 3 bytes @ 0x3
  1133                           
  1134  0023                     __div_to_l_@f2:	
  1135                           ; 2 bytes @ 0x3
  1136                           
  1137  0023                     __tdiv_to_l_@f2:	
  1138                           ; 3 bytes @ 0x3
  1139                           
  1140  0023                     ___ftge@ff2:	
  1141                           ; 3 bytes @ 0x3
  1142                           
  1143  0023                     ___lltoft@c:	
  1144                           ; 3 bytes @ 0x3
  1145                           
  1146                           
  1147                           ; 4 bytes @ 0x3
  1148  0023                     	ds	1
  1149  0024                     ___awdiv@dividend:
  1150  0024                     ___lldiv@dividend:	
  1151                           ; 2 bytes @ 0x4
  1152                           
  1153  0024                     ___aldiv@dividend:	
  1154                           ; 4 bytes @ 0x4
  1155                           
  1156  0024                     ___llmod@dividend:	
  1157                           ; 4 bytes @ 0x4
  1158                           
  1159                           
  1160                           ; 4 bytes @ 0x4
  1161  0024                     	ds	1
  1162  0025                     ??___lwdiv:
  1163                           
  1164                           ; 1 bytes @ 0x5
  1165  0025                     	ds	1
  1166  0026                     ??__div_to_l_:
  1167  0026                     ??___awdiv:	
  1168                           ; 1 bytes @ 0x6
  1169                           
  1170  0026                     ___lwdiv@counter:	
  1171                           ; 1 bytes @ 0x6
  1172                           
  1173  0026                     __tdiv_to_l_@quot:	
  1174                           ; 1 bytes @ 0x6
  1175                           
  1176                           
  1177                           ; 4 bytes @ 0x6
  1178  0026                     	ds	1
  1179  0027                     ??___lltoft:
  1180  0027                     ___awdiv@counter:	
  1181                           ; 1 bytes @ 0x7
  1182                           
  1183  0027                     ___lwdiv@quotient:	
  1184                           ; 1 bytes @ 0x7
  1185                           
  1186                           
  1187                           ; 2 bytes @ 0x7
  1188  0027                     	ds	1
  1189  0028                     ___aldiv@counter:
  1190  0028                     ___awdiv@sign:	
  1191                           ; 1 bytes @ 0x8
  1192                           
  1193  0028                     ___lltoft@exp:	
  1194                           ; 1 bytes @ 0x8
  1195                           
  1196  0028                     ___lldiv@quotient:	
  1197                           ; 1 bytes @ 0x8
  1198                           
  1199                           
  1200                           ; 4 bytes @ 0x8
  1201  0028                     	ds	1
  1202  0029                     ___aldiv@sign:
  1203  0029                     ___awdiv@quotient:	
  1204                           ; 1 bytes @ 0x9
  1205                           
  1206                           
  1207                           ; 2 bytes @ 0x9
  1208  0029                     	ds	1
  1209  002A                     __tdiv_to_l_@cntr:
  1210  002A                     ___aldiv@quotient:	
  1211                           ; 1 bytes @ 0xA
  1212                           
  1213                           
  1214                           ; 4 bytes @ 0xA
  1215  002A                     	ds	1
  1216  002B                     ?___bmul:
  1217  002B                     ___bmul@multiplicand:	
  1218                           ; 1 bytes @ 0xB
  1219                           
  1220  002B                     __tdiv_to_l_@exp1:	
  1221                           ; 1 bytes @ 0xB
  1222                           
  1223                           
  1224                           ; 1 bytes @ 0xB
  1225  002B                     	ds	1
  1226  002C                     ??___bmul:
  1227  002C                     ___lldiv@counter:	
  1228                           ; 1 bytes @ 0xC
  1229                           
  1230                           
  1231                           ; 1 bytes @ 0xC
  1232  002C                     	ds	1
  1233  002D                     ?_I2C_Master_Init:
  1234  002D                     ___bmul@product:	
  1235                           ; 1 bytes @ 0xD
  1236                           
  1237  002D                     I2C_Master_Init@c:	
  1238                           ; 1 bytes @ 0xD
  1239                           
  1240                           
  1241                           ; 4 bytes @ 0xD
  1242  002D                     	ds	1
  1243  002E                     ?_USART_Init:
  1244  002E                     ___bmul@multiplier:	
  1245                           ; 1 bytes @ 0xE
  1246                           
  1247  002E                     USART_Init@baudrate:	
  1248                           ; 1 bytes @ 0xE
  1249                           
  1250  002E                     __div_to_l_@quot:	
  1251                           ; 4 bytes @ 0xE
  1252                           
  1253                           
  1254                           ; 4 bytes @ 0xE
  1255  002E                     	ds	1
  1256  002F                     ?___ftmul:
  1257  002F                     ___ftmul@f1:	
  1258                           ; 3 bytes @ 0xF
  1259                           
  1260                           
  1261                           ; 3 bytes @ 0xF
  1262  002F                     	ds	3
  1263  0032                     ??_USART_Init:
  1264  0032                     __div_to_l_@cntr:	
  1265                           ; 1 bytes @ 0x12
  1266                           
  1267  0032                     ___ftmul@f2:	
  1268                           ; 1 bytes @ 0x12
  1269                           
  1270                           
  1271                           ; 3 bytes @ 0x12
  1272  0032                     	ds	1
  1273  0033                     __div_to_l_@exp1:
  1274                           
  1275                           ; 1 bytes @ 0x13
  1276  0033                     	ds	2
  1277  0035                     ??___ftmul:
  1278                           
  1279                           ; 1 bytes @ 0x15
  1280  0035                     	ds	4
  1281  0039                     ___ftmul@exp:
  1282                           
  1283                           ; 1 bytes @ 0x19
  1284  0039                     	ds	1
  1285  003A                     ___ftmul@f3_as_product:
  1286                           
  1287                           ; 3 bytes @ 0x1A
  1288  003A                     	ds	3
  1289  003D                     ___ftmul@cntr:
  1290                           
  1291                           ; 1 bytes @ 0x1D
  1292  003D                     	ds	1
  1293  003E                     ___ftmul@sign:
  1294                           
  1295                           ; 1 bytes @ 0x1E
  1296  003E                     	ds	1
  1297  003F                     ?_fround:
  1298  003F                     ?_scale:	
  1299                           ; 3 bytes @ 0x1F
  1300                           
  1301                           
  1302                           ; 3 bytes @ 0x1F
  1303  003F                     	ds	3
  1304  0042                     ??_fround:
  1305  0042                     ??_scale:	
  1306                           ; 1 bytes @ 0x22
  1307                           
  1308                           
  1309                           ; 1 bytes @ 0x22
  1310  0042                     	ds	2
  1311  0044                     _scale$959:
  1312                           
  1313                           ; 3 bytes @ 0x24
  1314  0044                     	ds	3
  1315  0047                     scale@scl:
  1316                           
  1317                           ; 1 bytes @ 0x27
  1318  0047                     	ds	1
  1319  0048                     ?___fttol:
  1320  0048                     ___fttol@f1:	
  1321                           ; 4 bytes @ 0x28
  1322                           
  1323  0048                     _fround$958:	
  1324                           ; 3 bytes @ 0x28
  1325                           
  1326                           
  1327                           ; 3 bytes @ 0x28
  1328  0048                     	ds	3
  1329  004B                     _fround$957:
  1330                           
  1331                           ; 3 bytes @ 0x2B
  1332  004B                     	ds	1
  1333  004C                     ??___fttol:
  1334                           
  1335                           ; 1 bytes @ 0x2C
  1336  004C                     	ds	2
  1337  004E                     fround@prec:
  1338                           
  1339                           ; 1 bytes @ 0x2E
  1340  004E                     	ds	1
  1341  004F                     ?___ftadd:
  1342  004F                     ___ftadd@f1:	
  1343                           ; 3 bytes @ 0x2F
  1344                           
  1345                           
  1346                           ; 3 bytes @ 0x2F
  1347  004F                     	ds	1
  1348  0050                     ___fttol@sign1:
  1349                           
  1350                           ; 1 bytes @ 0x30
  1351  0050                     	ds	1
  1352  0051                     ___fttol@lval:
  1353                           
  1354                           ; 4 bytes @ 0x31
  1355  0051                     	ds	1
  1356  0052                     ___ftadd@f2:
  1357                           
  1358                           ; 3 bytes @ 0x32
  1359  0052                     	ds	3
  1360  0055                     ??___ftadd:
  1361  0055                     ___fttol@exp1:	
  1362                           ; 1 bytes @ 0x35
  1363                           
  1364                           
  1365                           ; 1 bytes @ 0x35
  1366  0055                     	ds	4
  1367  0059                     ___ftadd@sign:
  1368                           
  1369                           ; 1 bytes @ 0x39
  1370  0059                     	ds	1
  1371  005A                     ___ftadd@exp2:
  1372                           
  1373                           ; 1 bytes @ 0x3A
  1374  005A                     	ds	1
  1375  005B                     ___ftadd@exp1:
  1376                           
  1377                           ; 1 bytes @ 0x3B
  1378  005B                     	ds	1
  1379  005C                     ?___ftsub:
  1380  005C                     ___ftsub@f2:	
  1381                           ; 3 bytes @ 0x3C
  1382                           
  1383                           
  1384                           ; 3 bytes @ 0x3C
  1385  005C                     	ds	3
  1386  005F                     ___ftsub@f1:
  1387                           
  1388                           ; 3 bytes @ 0x3F
  1389  005F                     	ds	3
  1390  0062                     ?_sprintf:
  1391  0062                     sprintf@f:	
  1392                           ; 2 bytes @ 0x42
  1393                           
  1394                           
  1395                           ; 1 bytes @ 0x42
  1396  0062                     	ds	5
  1397  0067                     ??_sprintf:
  1398                           
  1399                           ; 1 bytes @ 0x47
  1400  0067                     	ds	6
  1401                           
  1402                           	psect	maintext
  1403  1410                     __pmaintext:	
  1404 ;;
  1405 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1406 ;;
  1407 ;; *************** function _main *****************
  1408 ;; Defined at:
  1409 ;;		line 64 in file "pic16f.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;		None
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : B00/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1423 ;;      Params:         0       0       0       0       0
  1424 ;;      Locals:         0       0       0       0       0
  1425 ;;      Temps:          0       0       5       0       0
  1426 ;;      Totals:         0       0       5       0       0
  1427 ;;Total ram usage:        5 bytes
  1428 ;; Hardware stack levels required when called:    6
  1429 ;; This function calls:
  1430 ;;		_I2C_Master_Init
  1431 ;;		_USART_Init
  1432 ;;		_Write_USART
  1433 ;;		_Write_USART_String
  1434 ;;		_configIO
  1435 ;;		_sprintf
  1436 ;; This function is called by:
  1437 ;;		Startup code after reset
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function _main
  1443  1410                     _main:
  1444  1410                     l4159:	
  1445                           ;incstack = 0
  1446                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1447                           
  1448                           
  1449                           ;pic16f.c: 65:     configIO();
  1450  1410  160A  158A  2707  160A  118A  	fcall	_configIO
  1451  1415                     l4161:
  1452                           
  1453                           ;pic16f.c: 66:     USART_Init(9600);
  1454  1415  3000               	movlw	0
  1455  1416  1283               	bcf	3,5	;RP0=0, select bank0
  1456  1417  1303               	bcf	3,6	;RP1=0, select bank0
  1457  1418  00B1               	movwf	USART_Init@baudrate+3
  1458  1419  3000               	movlw	0
  1459  141A  00B0               	movwf	USART_Init@baudrate+2
  1460  141B  3025               	movlw	37
  1461  141C  00AF               	movwf	USART_Init@baudrate+1
  1462  141D  3080               	movlw	128
  1463  141E  00AE               	movwf	USART_Init@baudrate
  1464  141F  160A  118A  25F7  160A  118A  	fcall	_USART_Init
  1465  1424                     l4163:
  1466                           
  1467                           ;pic16f.c: 67:     I2C_Master_Init(100000);
  1468  1424  3000               	movlw	0
  1469  1425  1283               	bcf	3,5	;RP0=0, select bank0
  1470  1426  1303               	bcf	3,6	;RP1=0, select bank0
  1471  1427  00B0               	movwf	I2C_Master_Init@c+3
  1472  1428  3001               	movlw	1
  1473  1429  00AF               	movwf	I2C_Master_Init@c+2
  1474  142A  3086               	movlw	134
  1475  142B  00AE               	movwf	I2C_Master_Init@c+1
  1476  142C  30A0               	movlw	160
  1477  142D  00AD               	movwf	I2C_Master_Init@c
  1478  142E  160A  158A  27C6  160A  118A  	fcall	_I2C_Master_Init
  1479  1433                     l4165:
  1480                           
  1481                           ;pic16f.c: 75:         temperatura = aht_GetHumidity;
  1482  1433  30C4               	movlw	(low (0-fpbase))& (0+255)
  1483  1434  1683               	bsf	3,5	;RP0=1, select bank1
  1484  1435  1303               	bcf	3,6	;RP1=0, select bank1
  1485  1436  00B9               	movwf	??_main^(0+128)
  1486  1437  0839               	movf	??_main^(0+128),w
  1487  1438  1283               	bcf	3,5	;RP0=0, select bank0
  1488  1439  1303               	bcf	3,6	;RP1=0, select bank0
  1489  143A  00ED               	movwf	_temperatura
  1490  143B                     l4167:
  1491                           
  1492                           ;pic16f.c: 76:         humedad = aht_GetTemperature;
  1493  143B  30C4               	movlw	(low (0-fpbase))& (0+255)
  1494  143C  1683               	bsf	3,5	;RP0=1, select bank1
  1495  143D  1303               	bcf	3,6	;RP1=0, select bank1
  1496  143E  00B9               	movwf	??_main^(0+128)
  1497  143F  0839               	movf	??_main^(0+128),w
  1498  1440  00C6               	movwf	_humedad^(0+128)
  1499  1441                     l4169:
  1500                           
  1501                           ;pic16f.c: 79:         Write_USART_String("T1   H1   \n");
  1502  1441  3086               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1503  1442  00F4               	movwf	Write_USART_String@a
  1504  1443  3080               	movlw	128
  1505  1444  00F5               	movwf	Write_USART_String@a+1
  1506  1445  160A  158A  2768  160A  118A  	fcall	_Write_USART_String
  1507  144A                     l4171:
  1508                           
  1509                           ;pic16f.c: 80:         sprintf(datos, "%2.1f   %2.1f ", temperatura,humedad);
  1510  144A  3077               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1511  144B  1683               	bsf	3,5	;RP0=1, select bank1
  1512  144C  1303               	bcf	3,6	;RP1=0, select bank1
  1513  144D  00B9               	movwf	??_main^(0+128)
  1514  144E  0839               	movf	??_main^(0+128),w
  1515  144F  1283               	bcf	3,5	;RP0=0, select bank0
  1516  1450  1303               	bcf	3,6	;RP1=0, select bank0
  1517  1451  00E2               	movwf	sprintf@f
  1518  1452  086D               	movf	_temperatura,w
  1519  1453  1683               	bsf	3,5	;RP0=1, select bank1
  1520  1454  1303               	bcf	3,6	;RP1=0, select bank1
  1521  1455  00BA               	movwf	(??_main+1)^(0+128)
  1522  1456  01BB               	clrf	((??_main+1)^(0+128)+1)
  1523  1457  083A               	movf	(??_main+1)^(0+128),w
  1524  1458  1283               	bcf	3,5	;RP0=0, select bank0
  1525  1459  1303               	bcf	3,6	;RP1=0, select bank0
  1526  145A  00E3               	movwf	?_sprintf+1
  1527  145B  1683               	bsf	3,5	;RP0=1, select bank1
  1528  145C  1303               	bcf	3,6	;RP1=0, select bank1
  1529  145D  083B               	movf	(??_main+2)^(0+128),w
  1530  145E  1283               	bcf	3,5	;RP0=0, select bank0
  1531  145F  1303               	bcf	3,6	;RP1=0, select bank0
  1532  1460  00E4               	movwf	?_sprintf+2
  1533  1461  1683               	bsf	3,5	;RP0=1, select bank1
  1534  1462  1303               	bcf	3,6	;RP1=0, select bank1
  1535  1463  0846               	movf	_humedad^(0+128),w
  1536  1464  00BC               	movwf	(??_main+3)^(0+128)
  1537  1465  01BD               	clrf	((??_main+3)^(0+128)+1)
  1538  1466  083C               	movf	(??_main+3)^(0+128),w
  1539  1467  1283               	bcf	3,5	;RP0=0, select bank0
  1540  1468  1303               	bcf	3,6	;RP1=0, select bank0
  1541  1469  00E5               	movwf	?_sprintf+3
  1542  146A  1683               	bsf	3,5	;RP0=1, select bank1
  1543  146B  1303               	bcf	3,6	;RP1=0, select bank1
  1544  146C  083D               	movf	(??_main+4)^(0+128),w
  1545  146D  1283               	bcf	3,5	;RP0=0, select bank0
  1546  146E  1303               	bcf	3,6	;RP1=0, select bank0
  1547  146F  00E6               	movwf	?_sprintf+4
  1548  1470  30C7               	movlw	(low (_datos| 0))& (0+255)
  1549  1471  120A  158A  2502  160A  118A  	fcall	_sprintf
  1550  1476                     l4173:
  1551                           
  1552                           ;pic16f.c: 81:         Write_USART_String(datos);
  1553  1476  30C7               	movlw	(low (_datos| 0))& (0+255)
  1554  1477  00F4               	movwf	Write_USART_String@a
  1555  1478  3000               	movlw	0
  1556  1479  00F5               	movwf	Write_USART_String@a+1
  1557  147A  160A  158A  2768  160A  118A  	fcall	_Write_USART_String
  1558  147F                     l4175:
  1559                           
  1560                           ;pic16f.c: 82:         Write_USART(13);
  1561  147F  300D               	movlw	13
  1562  1480  160A  118A  20A1  160A  118A  	fcall	_Write_USART
  1563  1485                     l4177:
  1564                           
  1565                           ;pic16f.c: 83:         Write_USART(10);
  1566  1485  300A               	movlw	10
  1567  1486  160A  118A  20A1  160A  118A  	fcall	_Write_USART
  1568  148B                     l4179:
  1569                           
  1570                           ;pic16f.c: 84:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1571  148B  3006               	movlw	6
  1572  148C  1683               	bsf	3,5	;RP0=1, select bank1
  1573  148D  1303               	bcf	3,6	;RP1=0, select bank1
  1574  148E  00BB               	movwf	(??_main^(0+128)+2)
  1575  148F  3013               	movlw	19
  1576  1490  00BA               	movwf	(??_main^(0+128)+1)
  1577  1491  30AD               	movlw	173
  1578  1492  00B9               	movwf	??_main^(0+128)
  1579  1493                     u6907:
  1580  1493  0BB9               	decfsz	??_main^(0+128),f
  1581  1494  2C93               	goto	u6907
  1582  1495  0BBA               	decfsz	(??_main^(0+128)+1),f
  1583  1496  2C93               	goto	u6907
  1584  1497  0BBB               	decfsz	(??_main^(0+128)+2),f
  1585  1498  2C93               	goto	u6907
  1586  1499  2C33               	goto	l4165
  1587  149A  120A  118A  280C   	ljmp	start
  1588  149D                     __end_of_main:
  1589                           
  1590                           	psect	text1
  1591  0D02                     __ptext1:	
  1592 ;; *************** function _sprintf *****************
  1593 ;; Defined at:
  1594 ;;		line 505 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  sp              1    wreg     PTR unsigned char 
  1597 ;;		 -> datos(20), 
  1598 ;;  f               1   66[BANK0 ] PTR const unsigned char 
  1599 ;;		 -> STR_2(15), 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  sp              1   18[BANK1 ] PTR unsigned char 
  1602 ;;		 -> datos(20), 
  1603 ;;  tmpval          4   12[BANK1 ] struct .
  1604 ;;  val             4    4[BANK1 ] unsigned long 
  1605 ;;  fval            3   19[BANK1 ] unsigned long 
  1606 ;;  prec            2   22[BANK1 ] int 
  1607 ;;  eexp            2   16[BANK1 ] int 
  1608 ;;  width           2   10[BANK1 ] int 
  1609 ;;  flag            2    8[BANK1 ] unsigned short 
  1610 ;;  cp              2    0        PTR const unsigned char 
  1611 ;;  len             2    0        unsigned int 
  1612 ;;  c               1   24[BANK1 ] unsigned char 
  1613 ;;  ap              1    3[BANK1 ] PTR void [1]
  1614 ;;		 -> ?_sprintf(2), 
  1615 ;;  d               1    0        unsigned char 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  2   66[BANK0 ] int 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1625 ;;      Params:         0       5       0       0       0
  1626 ;;      Locals:         0       0      25       0       0
  1627 ;;      Temps:          0       6       0       0       0
  1628 ;;      Totals:         0      11      25       0       0
  1629 ;;Total ram usage:       36 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    5
  1632 ;; This function calls:
  1633 ;;		___awdiv
  1634 ;;		___ftadd
  1635 ;;		___ftge
  1636 ;;		___ftmul
  1637 ;;		___ftneg
  1638 ;;		___ftsub
  1639 ;;		___fttol
  1640 ;;		___lldiv
  1641 ;;		___llmod
  1642 ;;		___lltoft
  1643 ;;		___wmul
  1644 ;;		__div_to_l_
  1645 ;;		__tdiv_to_l_
  1646 ;;		_fround
  1647 ;;		_isdigit
  1648 ;;		_scale
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _sprintf
  1656  0D02                     _sprintf:
  1657                           
  1658                           ;incstack = 0
  1659                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1660                           ;sprintf@sp stored from wreg
  1661  0D02  1683               	bsf	3,5	;RP0=1, select bank1
  1662  0D03  1303               	bcf	3,6	;RP1=0, select bank1
  1663  0D04  00B2               	movwf	sprintf@sp^(0+128)
  1664  0D05                     l3899:
  1665                           
  1666                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const ch
      +                          ar * f, ...);D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 506: {;D:\MPLAB XC8 
      +                          compiler\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\MPLAB XC8 compiler\pic\so
      +                          urces\c90\common\doprnt.c: 512:  char c;;D:\MPLAB XC8 compiler\pic\sources\c90\common\do
      +                          prnt.c: 514:  int width;;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 517:  in
      +                          t prec;;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 525:  unsigned short flag
      +                          ;
  1667  0D05  3063               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1668  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  1669  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  1670  0D08  00E7               	movwf	??_sprintf
  1671  0D09  0867               	movf	??_sprintf,w
  1672  0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  1673  0D0B  1303               	bcf	3,6	;RP1=0, select bank1
  1674  0D0C  00A3               	movwf	sprintf@ap^(0+128)
  1675  0D0D                     L1:
  1676                           
  1677                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1678  0D0D  120A  118A  2E33   	goto	l4147
  1679  0D10                     l3901:
  1680                           
  1681                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1682  0D10  3025               	movlw	37
  1683  0D11  0638               	xorwf	sprintf@c^(0+128),w
  1684  0D12  1903               	btfsc	3,2
  1685  0D13  2D15               	goto	u6331
  1686  0D14  2D16               	goto	u6330
  1687  0D15                     u6331:
  1688  0D15  2D2A               	goto	l3907
  1689  0D16                     u6330:
  1690  0D16                     l3903:
  1691                           
  1692                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 557:   {;D:\MPLAB XC8 compiler\p
      +                          ic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1693  0D16  0838               	movf	sprintf@c^(0+128),w
  1694  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  1695  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  1696  0D19  00E7               	movwf	??_sprintf
  1697  0D1A  1683               	bsf	3,5	;RP0=1, select bank1
  1698  0D1B  1303               	bcf	3,6	;RP1=0, select bank1
  1699  0D1C  0832               	movf	sprintf@sp^(0+128),w
  1700  0D1D  0084               	movwf	4
  1701  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0D20  0867               	movf	??_sprintf,w
  1704  0D21  1383               	bcf	3,7	;select IRP bank0
  1705  0D22  0080               	movwf	0
  1706  0D23                     l3905:
  1707  0D23  3001               	movlw	1
  1708  0D24  00E7               	movwf	??_sprintf
  1709  0D25  0867               	movf	??_sprintf,w
  1710  0D26  1683               	bsf	3,5	;RP0=1, select bank1
  1711  0D27  1303               	bcf	3,6	;RP1=0, select bank1
  1712  0D28  07B2               	addwf	sprintf@sp^(0+128),f
  1713                           
  1714                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 559:    continue;
  1715  0D29  2D0D               	goto	L1
  1716  0D2A                     l3907:
  1717                           
  1718                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1719  0D2A  01AA               	clrf	sprintf@width^(0+128)
  1720  0D2B  01AB               	clrf	(sprintf@width+1)^(0+128)
  1721                           
  1722                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1723  0D2C  01A8               	clrf	sprintf@flag^(0+128)
  1724  0D2D  01A9               	clrf	(sprintf@flag+1)^(0+128)
  1725  0D2E                     l3909:
  1726                           
  1727                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)*f))
      +                           {
  1728  0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  1729  0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0D30  0862               	movf	sprintf@f,w
  1731  0D31  0084               	movwf	4
  1732  0D32  160A  118A  200A  120A  158A  	fcall	stringdir
  1733  0D37  160A  158A  26F5  120A  158A  	fcall	_isdigit
  1734  0D3C  1C03               	btfss	3,0
  1735  0D3D  2D3F               	goto	u6341
  1736  0D3E  2D40               	goto	u6340
  1737  0D3F                     u6341:
  1738  0D3F  2D8A               	goto	l3921
  1739  0D40                     u6340:
  1740  0D40                     l3911:
  1741                           
  1742                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  1743  0D40  1683               	bsf	3,5	;RP0=1, select bank1
  1744  0D41  1303               	bcf	3,6	;RP1=0, select bank1
  1745  0D42  01AA               	clrf	sprintf@width^(0+128)
  1746  0D43  01AB               	clrf	(sprintf@width+1)^(0+128)
  1747  0D44                     l3913:
  1748                           
  1749                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  1750  0D44  300A               	movlw	10
  1751  0D45  00F3               	movwf	___wmul@multiplier
  1752  0D46  3000               	movlw	0
  1753  0D47  00F4               	movwf	___wmul@multiplier+1
  1754  0D48  1683               	bsf	3,5	;RP0=1, select bank1
  1755  0D49  1303               	bcf	3,6	;RP1=0, select bank1
  1756  0D4A  082B               	movf	(sprintf@width+1)^(0+128),w
  1757  0D4B  00F6               	movwf	___wmul@multiplicand+1
  1758  0D4C  082A               	movf	sprintf@width^(0+128),w
  1759  0D4D  00F5               	movwf	___wmul@multiplicand
  1760  0D4E  120A  158A  2001  120A  158A  	fcall	___wmul
  1761  0D53  0874               	movf	?___wmul+1,w
  1762  0D54  1683               	bsf	3,5	;RP0=1, select bank1
  1763  0D55  1303               	bcf	3,6	;RP1=0, select bank1
  1764  0D56  00AB               	movwf	(sprintf@width+1)^(0+128)
  1765  0D57  0873               	movf	?___wmul,w
  1766  0D58  00AA               	movwf	sprintf@width^(0+128)
  1767  0D59                     l3915:
  1768                           
  1769                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - '0';
  1770  0D59  1283               	bcf	3,5	;RP0=0, select bank0
  1771  0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  1772  0D5B  0862               	movf	sprintf@f,w
  1773  0D5C  0084               	movwf	4
  1774  0D5D  160A  118A  200A  120A  158A  	fcall	stringdir
  1775  0D62  3ED0               	addlw	208
  1776  0D63  00E7               	movwf	??_sprintf
  1777  0D64  30FF               	movlw	255
  1778  0D65  1803               	skipnc
  1779  0D66  3000               	movlw	0
  1780  0D67  00E8               	movwf	??_sprintf+1
  1781  0D68  0867               	movf	??_sprintf,w
  1782  0D69  1683               	bsf	3,5	;RP0=1, select bank1
  1783  0D6A  1303               	bcf	3,6	;RP1=0, select bank1
  1784  0D6B  07AA               	addwf	sprintf@width^(0+128),f
  1785  0D6C  1803               	skipnc
  1786  0D6D  0AAB               	incf	(sprintf@width+1)^(0+128),f
  1787  0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  1788  0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  1789  0D70  0868               	movf	??_sprintf+1,w
  1790  0D71  1683               	bsf	3,5	;RP0=1, select bank1
  1791  0D72  1303               	bcf	3,6	;RP1=0, select bank1
  1792  0D73  07AB               	addwf	(sprintf@width+1)^(0+128),f
  1793  0D74                     l3917:
  1794  0D74  3001               	movlw	1
  1795  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0D76  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0D77  00E7               	movwf	??_sprintf
  1798  0D78  0867               	movf	??_sprintf,w
  1799  0D79  07E2               	addwf	sprintf@f,f
  1800  0D7A                     l3919:
  1801                           
  1802                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((unsigne
      +                          d)*f));
  1803  0D7A  0862               	movf	sprintf@f,w
  1804  0D7B  0084               	movwf	4
  1805  0D7C  160A  118A  200A  120A  158A  	fcall	stringdir
  1806  0D81  160A  158A  26F5  120A  158A  	fcall	_isdigit
  1807  0D86  1803               	btfsc	3,0
  1808  0D87  2D89               	goto	u6351
  1809  0D88  2D8A               	goto	u6350
  1810  0D89                     u6351:
  1811  0D89  2D44               	goto	l3913
  1812  0D8A                     u6350:
  1813  0D8A                     l3921:
  1814                           
  1815                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
  1816  0D8A  1283               	bcf	3,5	;RP0=0, select bank0
  1817  0D8B  1303               	bcf	3,6	;RP1=0, select bank0
  1818  0D8C  0862               	movf	sprintf@f,w
  1819  0D8D  0084               	movwf	4
  1820  0D8E  160A  118A  200A  120A  158A  	fcall	stringdir
  1821  0D93  3A2E               	xorlw	46
  1822  0D94  1D03               	skipz
  1823  0D95  2D97               	goto	u6361
  1824  0D96  2D98               	goto	u6360
  1825  0D97                     u6361:
  1826  0D97  2DEE               	goto	l3937
  1827  0D98                     u6360:
  1828  0D98                     l3923:
  1829                           
  1830                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 629:    flag |= 0x4000;
  1831  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  1832  0D99  1303               	bcf	3,6	;RP1=0, select bank1
  1833  0D9A  1729               	bsf	(sprintf@flag^(0+128)+1),6
  1834  0D9B                     l3925:
  1835                           
  1836                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 630:    f++;
  1837  0D9B  3001               	movlw	1
  1838  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0D9E  00E7               	movwf	??_sprintf
  1841  0D9F  0867               	movf	??_sprintf,w
  1842  0DA0  07E2               	addwf	sprintf@f,f
  1843  0DA1                     l3927:
  1844                           
  1845                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 644:    {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1846  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  1847  0DA2  1303               	bcf	3,6	;RP1=0, select bank1
  1848  0DA3  01B6               	clrf	sprintf@prec^(0+128)
  1849  0DA4  01B7               	clrf	(sprintf@prec+1)^(0+128)
  1850                           
  1851                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned
      +                          )*f)) {
  1852  0DA5  2DDC               	goto	l3935
  1853  0DA6                     l3929:
  1854                           
  1855                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  1856  0DA6  300A               	movlw	10
  1857  0DA7  00F3               	movwf	___wmul@multiplier
  1858  0DA8  3000               	movlw	0
  1859  0DA9  00F4               	movwf	___wmul@multiplier+1
  1860  0DAA  1683               	bsf	3,5	;RP0=1, select bank1
  1861  0DAB  1303               	bcf	3,6	;RP1=0, select bank1
  1862  0DAC  0837               	movf	(sprintf@prec+1)^(0+128),w
  1863  0DAD  00F6               	movwf	___wmul@multiplicand+1
  1864  0DAE  0836               	movf	sprintf@prec^(0+128),w
  1865  0DAF  00F5               	movwf	___wmul@multiplicand
  1866  0DB0  120A  158A  2001  120A  158A  	fcall	___wmul
  1867  0DB5  0874               	movf	?___wmul+1,w
  1868  0DB6  1683               	bsf	3,5	;RP0=1, select bank1
  1869  0DB7  1303               	bcf	3,6	;RP1=0, select bank1
  1870  0DB8  00B7               	movwf	(sprintf@prec+1)^(0+128)
  1871  0DB9  0873               	movf	?___wmul,w
  1872  0DBA  00B6               	movwf	sprintf@prec^(0+128)
  1873  0DBB                     l3931:
  1874                           
  1875                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0';
  1876  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  1878  0DBD  0862               	movf	sprintf@f,w
  1879  0DBE  0084               	movwf	4
  1880  0DBF  160A  118A  200A  120A  158A  	fcall	stringdir
  1881  0DC4  3ED0               	addlw	208
  1882  0DC5  00E7               	movwf	??_sprintf
  1883  0DC6  30FF               	movlw	255
  1884  0DC7  1803               	skipnc
  1885  0DC8  3000               	movlw	0
  1886  0DC9  00E8               	movwf	??_sprintf+1
  1887  0DCA  0867               	movf	??_sprintf,w
  1888  0DCB  1683               	bsf	3,5	;RP0=1, select bank1
  1889  0DCC  1303               	bcf	3,6	;RP1=0, select bank1
  1890  0DCD  07B6               	addwf	sprintf@prec^(0+128),f
  1891  0DCE  1803               	skipnc
  1892  0DCF  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  1893  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  1894  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  1895  0DD2  0868               	movf	??_sprintf+1,w
  1896  0DD3  1683               	bsf	3,5	;RP0=1, select bank1
  1897  0DD4  1303               	bcf	3,6	;RP1=0, select bank1
  1898  0DD5  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  1899  0DD6                     l3933:
  1900  0DD6  3001               	movlw	1
  1901  0DD7  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0DD8  1303               	bcf	3,6	;RP1=0, select bank0
  1903  0DD9  00E7               	movwf	??_sprintf
  1904  0DDA  0867               	movf	??_sprintf,w
  1905  0DDB  07E2               	addwf	sprintf@f,f
  1906  0DDC                     l3935:
  1907                           
  1908                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned
      +                          )*f)) {
  1909  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  1910  0DDD  0862               	movf	sprintf@f,w
  1911  0DDE  0084               	movwf	4
  1912  0DDF  160A  118A  200A  120A  158A  	fcall	stringdir
  1913  0DE4  160A  158A  26F5  120A  158A  	fcall	_isdigit
  1914  0DE9  1803               	btfsc	3,0
  1915  0DEA  2DEC               	goto	u6371
  1916  0DEB  2DED               	goto	u6370
  1917  0DEC                     u6371:
  1918  0DEC  2DA6               	goto	l3929
  1919  0DED                     u6370:
  1920  0DED  2DF8               	goto	l3943
  1921  0DEE                     l3937:
  1922                           
  1923                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1924  0DEE  1683               	bsf	3,5	;RP0=1, select bank1
  1925  0DEF  1303               	bcf	3,6	;RP1=0, select bank1
  1926  0DF0  01B6               	clrf	sprintf@prec^(0+128)
  1927  0DF1  01B7               	clrf	(sprintf@prec+1)^(0+128)
  1928  0DF2                     l3939:
  1929                           
  1930                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 654:    flag |= 0x1000;
  1931  0DF2  1629               	bsf	(sprintf@flag^(0+128)+1),4
  1932  0DF3  2DF8               	goto	l3943
  1933  0DF4                     l360:	
  1934                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1935                           
  1936                           
  1937                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 689:    flag |= 0x400;
  1938  0DF4  1683               	bsf	3,5	;RP0=1, select bank1
  1939  0DF5  1303               	bcf	3,6	;RP1=0, select bank1
  1940  0DF6  1529               	bsf	(sprintf@flag^(0+128)+1),2
  1941                           
  1942                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 690:    break;
  1943  0DF7  2E18               	goto	l3945
  1944  0DF8                     l3943:
  1945  0DF8  3001               	movlw	1
  1946  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  1948  0DFB  07E2               	addwf	sprintf@f,f
  1949  0DFC  30FF               	movlw	-1
  1950  0DFD  0762               	addwf	sprintf@f,w
  1951  0DFE  0084               	movwf	4
  1952  0DFF  160A  118A  200A  120A  158A  	fcall	stringdir
  1953  0E04  1683               	bsf	3,5	;RP0=1, select bank1
  1954  0E05  1303               	bcf	3,6	;RP1=0, select bank1
  1955  0E06  00B8               	movwf	sprintf@c^(0+128)
  1956  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  1957  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  1958  0E09  00E7               	movwf	??_sprintf
  1959  0E0A  01E8               	clrf	??_sprintf+1
  1960                           
  1961                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1962                           ; Switch size 1, requested type "simple"
  1963                           ; Number of cases is 1, Range of values is 0 to 0
  1964                           ; switch strategies available:
  1965                           ; Name         Instructions Cycles
  1966                           ; simple_byte            4     3 (average)
  1967                           ; direct_byte           11     8 (fixed)
  1968                           ; jumptable            260     6 (fixed)
  1969                           ;	Chosen strategy is simple_byte
  1970  0E0B  0868               	movf	??_sprintf+1,w
  1971  0E0C  3A00               	xorlw	0	; case 0
  1972  0E0D  1903               	skipnz
  1973  0E0E  2E10               	goto	l4285
  1974  0E0F  2D0D               	goto	L1
  1975  0E10                     l4285:
  1976                           
  1977                           ; Switch size 1, requested type "simple"
  1978                           ; Number of cases is 2, Range of values is 0 to 102
  1979                           ; switch strategies available:
  1980                           ; Name         Instructions Cycles
  1981                           ; simple_byte            7     4 (average)
  1982                           ; jumptable            260     6 (fixed)
  1983                           ;	Chosen strategy is simple_byte
  1984  0E10  0867               	movf	??_sprintf,w
  1985  0E11  3A00               	xorlw	0	; case 0
  1986  0E12  1903               	skipnz
  1987  0E13  2FFD               	goto	L3
  1988  0E14  3A66               	xorlw	102	; case 102
  1989  0E15  1903               	skipnz
  1990  0E16  2DF4               	goto	l360
  1991  0E17  2D0D               	goto	L1
  1992  0E18                     l3945:
  1993                           
  1994                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 851:   if(flag & (0x700)) {
  1995  0E18  3000               	movlw	0
  1996  0E19  0528               	andwf	sprintf@flag^(0+128),w
  1997  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  1998  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  1999  0E1C  00E7               	movwf	??_sprintf
  2000  0E1D  3007               	movlw	7
  2001  0E1E  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0E1F  1303               	bcf	3,6	;RP1=0, select bank1
  2003  0E20  0529               	andwf	(sprintf@flag+1)^(0+128),w
  2004  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  2005  0E22  1303               	bcf	3,6	;RP1=0, select bank0
  2006  0E23  00E8               	movwf	??_sprintf+1
  2007  0E24  0867               	movf	??_sprintf,w
  2008  0E25  0468               	iorwf	??_sprintf+1,w
  2009  0E26  1903               	btfsc	3,2
  2010  0E27  2E29               	goto	u6381
  2011  0E28  2E2C               	goto	u6380
  2012  0E29                     u6381:
  2013  0E29  120A  118A  2D30   	goto	l4101
  2014  0E2C                     u6380:
  2015  0E2C                     l3947:
  2016                           
  2017                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 853:    if(flag & 0x1000)
  2018  0E2C  1683               	bsf	3,5	;RP0=1, select bank1
  2019  0E2D  1303               	bcf	3,6	;RP1=0, select bank1
  2020  0E2E  1E29               	btfss	(sprintf@flag+1)^(0+128),4
  2021  0E2F  2E31               	goto	u6391
  2022  0E30  2E32               	goto	u6390
  2023  0E31                     u6391:
  2024  0E31  2E36               	goto	l3951
  2025  0E32                     u6390:
  2026  0E32                     l3949:
  2027                           
  2028                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 855:     prec = 6;
  2029  0E32  3006               	movlw	6
  2030  0E33  00B6               	movwf	sprintf@prec^(0+128)
  2031  0E34  3000               	movlw	0
  2032  0E35  00B7               	movwf	(sprintf@prec^(0+128)+1)
  2033  0E36                     l3951:
  2034                           
  2035                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 856:    fval = (*(double *)__va_
      +                          arg((*(double **)ap), (double)0));
  2036  0E36  0823               	movf	sprintf@ap^(0+128),w
  2037  0E37  0084               	movwf	4
  2038  0E38  1383               	bcf	3,7	;select IRP bank0
  2039  0E39  0800               	movf	0,w
  2040  0E3A  00B3               	movwf	sprintf@fval^(0+128)
  2041  0E3B  0A84               	incf	4,f
  2042  0E3C  0800               	movf	0,w
  2043  0E3D  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2044  0E3E  0A84               	incf	4,f
  2045  0E3F  0800               	movf	0,w
  2046  0E40  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2047  0E41                     l3953:
  2048  0E41  3003               	movlw	3
  2049  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  2051  0E44  00E7               	movwf	??_sprintf
  2052  0E45  0867               	movf	??_sprintf,w
  2053  0E46  1683               	bsf	3,5	;RP0=1, select bank1
  2054  0E47  1303               	bcf	3,6	;RP1=0, select bank1
  2055  0E48  07A3               	addwf	sprintf@ap^(0+128),f
  2056  0E49                     l3955:
  2057                           
  2058                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 857:    if(fval < 0.0) {
  2059  0E49  0833               	movf	sprintf@fval^(0+128),w
  2060  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0E4C  00A0               	movwf	___ftge@ff1
  2063  0E4D  1683               	bsf	3,5	;RP0=1, select bank1
  2064  0E4E  1303               	bcf	3,6	;RP1=0, select bank1
  2065  0E4F  0834               	movf	(sprintf@fval+1)^(0+128),w
  2066  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  2067  0E51  1303               	bcf	3,6	;RP1=0, select bank0
  2068  0E52  00A1               	movwf	___ftge@ff1+1
  2069  0E53  1683               	bsf	3,5	;RP0=1, select bank1
  2070  0E54  1303               	bcf	3,6	;RP1=0, select bank1
  2071  0E55  0835               	movf	(sprintf@fval+2)^(0+128),w
  2072  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  2073  0E57  1303               	bcf	3,6	;RP1=0, select bank0
  2074  0E58  00A2               	movwf	___ftge@ff1+2
  2075  0E59  3000               	movlw	0
  2076  0E5A  00A3               	movwf	___ftge@ff2
  2077  0E5B  3000               	movlw	0
  2078  0E5C  00A4               	movwf	___ftge@ff2+1
  2079  0E5D  3000               	movlw	0
  2080  0E5E  00A5               	movwf	___ftge@ff2+2
  2081  0E5F  160A  118A  20C4  120A  158A  	fcall	___ftge
  2082  0E64  1803               	btfsc	3,0
  2083  0E65  2E67               	goto	u6401
  2084  0E66  2E68               	goto	u6400
  2085  0E67                     u6401:
  2086  0E67  2E81               	goto	l3961
  2087  0E68                     u6400:
  2088  0E68                     l3957:
  2089                           
  2090                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 858:     fval = -fval;
  2091  0E68  1683               	bsf	3,5	;RP0=1, select bank1
  2092  0E69  1303               	bcf	3,6	;RP1=0, select bank1
  2093  0E6A  0833               	movf	sprintf@fval^(0+128),w
  2094  0E6B  00F3               	movwf	___ftneg@f1
  2095  0E6C  0834               	movf	(sprintf@fval+1)^(0+128),w
  2096  0E6D  00F4               	movwf	___ftneg@f1+1
  2097  0E6E  0835               	movf	(sprintf@fval+2)^(0+128),w
  2098  0E6F  00F5               	movwf	___ftneg@f1+2
  2099  0E70  160A  158A  26DC  120A  158A  	fcall	___ftneg
  2100  0E75  0873               	movf	?___ftneg,w
  2101  0E76  1683               	bsf	3,5	;RP0=1, select bank1
  2102  0E77  1303               	bcf	3,6	;RP1=0, select bank1
  2103  0E78  00B3               	movwf	sprintf@fval^(0+128)
  2104  0E79  0874               	movf	?___ftneg+1,w
  2105  0E7A  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2106  0E7B  0875               	movf	?___ftneg+2,w
  2107  0E7C  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2108  0E7D                     l3959:
  2109                           
  2110                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 859:     flag |= 0x03;
  2111  0E7D  3003               	movlw	3
  2112  0E7E  04A8               	iorwf	sprintf@flag^(0+128),f
  2113  0E7F  3000               	movlw	0
  2114  0E80  04A9               	iorwf	(sprintf@flag+1)^(0+128),f
  2115  0E81                     l3961:
  2116                           
  2117                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2118  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  2119  0E82  1303               	bcf	3,6	;RP1=0, select bank1
  2120  0E83  01B0               	clrf	sprintf@eexp^(0+128)
  2121  0E84  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  2122  0E85                     l3963:
  2123                           
  2124                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 862:    if( fval!=0) {
  2125  0E85  0835               	movf	(sprintf@fval+2)^(0+128),w
  2126  0E86  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2127  0E87  0433               	iorwf	sprintf@fval^(0+128),w
  2128  0E88  1903               	skipnz
  2129  0E89  2E8B               	goto	u6411
  2130  0E8A  2E8C               	goto	u6410
  2131  0E8B                     u6411:
  2132  0E8B  2FA2               	goto	l3989
  2133  0E8C                     u6410:
  2134  0E8C                     l3965:
  2135                           
  2136                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 863:     (void)(*(&eexp) = ((*(u
      +                          nsigned long *)&fval >> 15) & 255) - 126);
  2137  0E8C  30B3               	movlw	low (sprintf@fval| 0)
  2138  0E8D  0084               	movwf	4
  2139  0E8E  1383               	bcf	3,7	;select IRP bank1
  2140  0E8F  0800               	movf	0,w
  2141  0E90  1283               	bcf	3,5	;RP0=0, select bank0
  2142  0E91  1303               	bcf	3,6	;RP1=0, select bank0
  2143  0E92  00E7               	movwf	??_sprintf
  2144  0E93  0A84               	incf	4,f
  2145  0E94  0800               	movf	0,w
  2146  0E95  00E8               	movwf	??_sprintf+1
  2147  0E96  0A84               	incf	4,f
  2148  0E97  0800               	movf	0,w
  2149  0E98  00E9               	movwf	??_sprintf+2
  2150  0E99  0A84               	incf	4,f
  2151  0E9A  0800               	movf	0,w
  2152  0E9B  00EA               	movwf	??_sprintf+3
  2153  0E9C  300F               	movlw	15
  2154  0E9D                     u6425:
  2155  0E9D  1003               	clrc
  2156  0E9E  0CEA               	rrf	??_sprintf+3,f
  2157  0E9F  0CE9               	rrf	??_sprintf+2,f
  2158  0EA0  0CE8               	rrf	??_sprintf+1,f
  2159  0EA1  0CE7               	rrf	??_sprintf,f
  2160  0EA2                     u6420:
  2161  0EA2  3EFF               	addlw	-1
  2162  0EA3  1D03               	skipz
  2163  0EA4  2E9D               	goto	u6425
  2164  0EA5  30FF               	movlw	255
  2165  0EA6  0567               	andwf	??_sprintf,w
  2166  0EA7  00EB               	movwf	??_sprintf+4
  2167  0EA8  3000               	movlw	0
  2168  0EA9  0568               	andwf	??_sprintf+1,w
  2169  0EAA  00EC               	movwf	??_sprintf+5
  2170  0EAB  086B               	movf	??_sprintf+4,w
  2171  0EAC  3E82               	addlw	130
  2172  0EAD  1683               	bsf	3,5	;RP0=1, select bank1
  2173  0EAE  1303               	bcf	3,6	;RP1=0, select bank1
  2174  0EAF  00B0               	movwf	sprintf@eexp^(0+128)
  2175  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  2176  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  2177  0EB2  086C               	movf	??_sprintf+5,w
  2178  0EB3  1803               	skipnc
  2179  0EB4  3E01               	addlw	1
  2180  0EB5  3EFF               	addlw	255
  2181  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  2182  0EB7  1303               	bcf	3,6	;RP1=0, select bank1
  2183  0EB8  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2184  0EB9                     l3967:
  2185                           
  2186                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2187  0EB9  30FF               	movlw	255
  2188  0EBA  07B0               	addwf	sprintf@eexp^(0+128),f
  2189  0EBB  1803               	skipnc
  2190  0EBC  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2191  0EBD  30FF               	movlw	255
  2192  0EBE  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2193  0EBF                     l3969:
  2194                           
  2195                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 865:     eexp *= 3;
  2196  0EBF  3003               	movlw	3
  2197  0EC0  00F3               	movwf	___wmul@multiplier
  2198  0EC1  3000               	movlw	0
  2199  0EC2  00F4               	movwf	___wmul@multiplier+1
  2200  0EC3  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2201  0EC4  00F6               	movwf	___wmul@multiplicand+1
  2202  0EC5  0830               	movf	sprintf@eexp^(0+128),w
  2203  0EC6  00F5               	movwf	___wmul@multiplicand
  2204  0EC7  120A  158A  2001  120A  158A  	fcall	___wmul
  2205  0ECC  0874               	movf	?___wmul+1,w
  2206  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  2207  0ECE  1303               	bcf	3,6	;RP1=0, select bank1
  2208  0ECF  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2209  0ED0  0873               	movf	?___wmul,w
  2210  0ED1  00B0               	movwf	sprintf@eexp^(0+128)
  2211  0ED2                     l3971:
  2212                           
  2213                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 866:     eexp /= 10;
  2214  0ED2  300A               	movlw	10
  2215  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0ED5  00A2               	movwf	___awdiv@divisor
  2218  0ED6  3000               	movlw	0
  2219  0ED7  00A3               	movwf	___awdiv@divisor+1
  2220  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  2221  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  2222  0EDA  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2223  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  2224  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  2225  0EDD  00A5               	movwf	___awdiv@dividend+1
  2226  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  2227  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  2228  0EE0  0830               	movf	sprintf@eexp^(0+128),w
  2229  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  2231  0EE3  00A4               	movwf	___awdiv@dividend
  2232  0EE4  160A  118A  2299  120A  158A  	fcall	___awdiv
  2233  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  2234  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  2235  0EEB  0823               	movf	?___awdiv+1,w
  2236  0EEC  1683               	bsf	3,5	;RP0=1, select bank1
  2237  0EED  1303               	bcf	3,6	;RP1=0, select bank1
  2238  0EEE  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2239  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  2240  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  2241  0EF1  0822               	movf	?___awdiv,w
  2242  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  2243  0EF3  1303               	bcf	3,6	;RP1=0, select bank1
  2244  0EF4  00B0               	movwf	sprintf@eexp^(0+128)
  2245  0EF5                     l3973:
  2246                           
  2247                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 867:     if(eexp < 0)
  2248  0EF5  1FB1               	btfss	(sprintf@eexp+1)^(0+128),7
  2249  0EF6  2EF8               	goto	u6431
  2250  0EF7  2EF9               	goto	u6430
  2251  0EF8                     u6431:
  2252  0EF8  2EFF               	goto	l3977
  2253  0EF9                     u6430:
  2254  0EF9                     l3975:
  2255                           
  2256                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2257  0EF9  30FF               	movlw	255
  2258  0EFA  07B0               	addwf	sprintf@eexp^(0+128),f
  2259  0EFB  1803               	skipnc
  2260  0EFC  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2261  0EFD  30FF               	movlw	255
  2262  0EFE  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2263  0EFF                     l3977:
  2264                           
  2265                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 872:     tmpval.integ = scale(-e
      +                          exp);
  2266  0EFF  0330               	decf	sprintf@eexp^(0+128),w
  2267  0F00  3AFF               	xorlw	255
  2268  0F01  120A  158A  2247  120A  158A  	fcall	_scale
  2269  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  2270  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  2271  0F08  083F               	movf	?_scale,w
  2272  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  2273  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  2274  0F0B  00AC               	movwf	sprintf@tmpval^(0+128)
  2275  0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  2276  0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  2277  0F0E  0840               	movf	?_scale+1,w
  2278  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  2279  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  2280  0F11  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2281  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0F14  0841               	movf	?_scale+2,w
  2284  0F15  1683               	bsf	3,5	;RP0=1, select bank1
  2285  0F16  1303               	bcf	3,6	;RP1=0, select bank1
  2286  0F17  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2287  0F18                     l3979:
  2288                           
  2289                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 873:     tmpval.integ *= fval;
  2290  0F18  0833               	movf	sprintf@fval^(0+128),w
  2291  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2292  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2293  0F1B  00AF               	movwf	___ftmul@f1
  2294  0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  2295  0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  2296  0F1E  0834               	movf	(sprintf@fval+1)^(0+128),w
  2297  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  2298  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  2299  0F21  00B0               	movwf	___ftmul@f1+1
  2300  0F22  1683               	bsf	3,5	;RP0=1, select bank1
  2301  0F23  1303               	bcf	3,6	;RP1=0, select bank1
  2302  0F24  0835               	movf	(sprintf@fval+2)^(0+128),w
  2303  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  2304  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  2305  0F27  00B1               	movwf	___ftmul@f1+2
  2306  0F28  1683               	bsf	3,5	;RP0=1, select bank1
  2307  0F29  1303               	bcf	3,6	;RP1=0, select bank1
  2308  0F2A  082C               	movf	sprintf@tmpval^(0+128),w
  2309  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  2310  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  2311  0F2D  00B2               	movwf	___ftmul@f2
  2312  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
  2313  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
  2314  0F30  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2315  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0F33  00B3               	movwf	___ftmul@f2+1
  2318  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  2319  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  2320  0F36  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2321  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  2322  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  2323  0F39  00B4               	movwf	___ftmul@f2+2
  2324  0F3A  120A  158A  202C  120A  158A  	fcall	___ftmul
  2325  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2326  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  2327  0F41  082F               	movf	?___ftmul,w
  2328  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  2329  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  2330  0F44  00AC               	movwf	sprintf@tmpval^(0+128)
  2331  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  2332  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  2333  0F47  0830               	movf	?___ftmul+1,w
  2334  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  2335  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  2336  0F4A  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2337  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2338  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2339  0F4D  0831               	movf	?___ftmul+2,w
  2340  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  2341  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  2342  0F50  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2343  0F51                     l3981:
  2344                           
  2345                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 874:     if(tmpval.integ < 1.0)
  2346  0F51  082C               	movf	sprintf@tmpval^(0+128),w
  2347  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  2348  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  2349  0F54  00A0               	movwf	___ftge@ff1
  2350  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  2351  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  2352  0F57  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2353  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0F5A  00A1               	movwf	___ftge@ff1+1
  2356  0F5B  1683               	bsf	3,5	;RP0=1, select bank1
  2357  0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  2358  0F5D  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2359  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0F60  00A2               	movwf	___ftge@ff1+2
  2362  0F61  3000               	movlw	0
  2363  0F62  00A3               	movwf	___ftge@ff2
  2364  0F63  3080               	movlw	128
  2365  0F64  00A4               	movwf	___ftge@ff2+1
  2366  0F65  303F               	movlw	63
  2367  0F66  00A5               	movwf	___ftge@ff2+2
  2368  0F67  160A  118A  20C4  120A  158A  	fcall	___ftge
  2369  0F6C  1803               	btfsc	3,0
  2370  0F6D  2F6F               	goto	u6441
  2371  0F6E  2F70               	goto	u6440
  2372  0F6F                     u6441:
  2373  0F6F  2F79               	goto	l3985
  2374  0F70                     u6440:
  2375  0F70                     l3983:
  2376                           
  2377                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2378  0F70  30FF               	movlw	255
  2379  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  2380  0F72  1303               	bcf	3,6	;RP1=0, select bank1
  2381  0F73  07B0               	addwf	sprintf@eexp^(0+128),f
  2382  0F74  1803               	skipnc
  2383  0F75  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2384  0F76  30FF               	movlw	255
  2385  0F77  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2386  0F78  2FA2               	goto	l3989
  2387  0F79                     l3985:
  2388  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  2389  0F7A  1303               	bcf	3,6	;RP1=0, select bank1
  2390  0F7B  082C               	movf	sprintf@tmpval^(0+128),w
  2391  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  2392  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  2393  0F7E  00A0               	movwf	___ftge@ff1
  2394  0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  2395  0F80  1303               	bcf	3,6	;RP1=0, select bank1
  2396  0F81  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2397  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  2398  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  2399  0F84  00A1               	movwf	___ftge@ff1+1
  2400  0F85  1683               	bsf	3,5	;RP0=1, select bank1
  2401  0F86  1303               	bcf	3,6	;RP1=0, select bank1
  2402  0F87  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2403  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0F8A  00A2               	movwf	___ftge@ff1+2
  2406  0F8B  3000               	movlw	0
  2407  0F8C  00A3               	movwf	___ftge@ff2
  2408  0F8D  3020               	movlw	32
  2409  0F8E  00A4               	movwf	___ftge@ff2+1
  2410  0F8F  3041               	movlw	65
  2411  0F90  00A5               	movwf	___ftge@ff2+2
  2412  0F91  160A  118A  20C4  120A  158A  	fcall	___ftge
  2413  0F96  1C03               	btfss	3,0
  2414  0F97  2F99               	goto	u6451
  2415  0F98  2F9A               	goto	u6450
  2416  0F99                     u6451:
  2417  0F99  2FA2               	goto	l3989
  2418  0F9A                     u6450:
  2419  0F9A                     l3987:
  2420                           
  2421                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2422  0F9A  3001               	movlw	1
  2423  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  2424  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  2425  0F9D  07B0               	addwf	sprintf@eexp^(0+128),f
  2426  0F9E  1803               	skipnc
  2427  0F9F  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2428  0FA0  3000               	movlw	0
  2429  0FA1  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2430  0FA2                     l3989:
  2431                           
  2432                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1138:      if(prec <= 12)
  2433  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  2434  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  2435  0FA4  0837               	movf	(sprintf@prec+1)^(0+128),w
  2436  0FA5  3A80               	xorlw	128
  2437  0FA6  00FF               	movwf	btemp+1
  2438  0FA7  3080               	movlw	128
  2439  0FA8  027F               	subwf	btemp+1,w
  2440  0FA9  1D03               	skipz
  2441  0FAA  2FAD               	goto	u6465
  2442  0FAB  300D               	movlw	13
  2443  0FAC  0236               	subwf	sprintf@prec^(0+128),w
  2444  0FAD                     u6465:
  2445  0FAD  1803               	skipnc
  2446  0FAE  2FB0               	goto	u6461
  2447  0FAF  2FB1               	goto	u6460
  2448  0FB0                     u6461:
  2449  0FB0  2FEA               	goto	l3993
  2450  0FB1                     u6460:
  2451  0FB1                     l3991:
  2452                           
  2453                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1139:       fval += fround((unsi
      +                          gned int)prec);
  2454  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  2455  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  2456  0FB3  0836               	movf	sprintf@prec^(0+128),w
  2457  0FB4  120A  118A  2651  120A  158A  	fcall	_fround
  2458  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0FBB  083F               	movf	?_fround,w
  2461  0FBC  00CF               	movwf	___ftadd@f1
  2462  0FBD  0840               	movf	?_fround+1,w
  2463  0FBE  00D0               	movwf	___ftadd@f1+1
  2464  0FBF  0841               	movf	?_fround+2,w
  2465  0FC0  00D1               	movwf	___ftadd@f1+2
  2466  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  2467  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  2468  0FC3  0833               	movf	sprintf@fval^(0+128),w
  2469  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2470  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2471  0FC6  00D2               	movwf	___ftadd@f2
  2472  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  2473  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  2474  0FC9  0834               	movf	(sprintf@fval+1)^(0+128),w
  2475  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0FCC  00D3               	movwf	___ftadd@f2+1
  2478  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  2479  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  2480  0FCF  0835               	movf	(sprintf@fval+2)^(0+128),w
  2481  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2482  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  2483  0FD2  00D4               	movwf	___ftadd@f2+2
  2484  0FD3  120A  158A  2111  120A  158A  	fcall	___ftadd
  2485  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2487  0FDA  084F               	movf	?___ftadd,w
  2488  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  2489  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  2490  0FDD  00B3               	movwf	sprintf@fval^(0+128)
  2491  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  2492  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  2493  0FE0  0850               	movf	?___ftadd+1,w
  2494  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  2495  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  2496  0FE3  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2497  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0FE6  0851               	movf	?___ftadd+2,w
  2500  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  2501  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  2502  0FE9  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2503  0FEA                     l3993:
  2504                           
  2505                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1142:     if((eexp > 9)||(fval !
      +                          = 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2506  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  2507  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  2508  0FEC  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2509  0FED  3A80               	xorlw	128
  2510  0FEE  00FF               	movwf	btemp+1
  2511  0FEF  3080               	movlw	128
  2512  0FF0  027F               	subwf	btemp+1,w
  2513  0FF1  1D03               	skipz
  2514  0FF2  2FF5               	goto	u6475
  2515  0FF3  300A               	movlw	10
  2516  0FF4  0230               	subwf	sprintf@eexp^(0+128),w
  2517  0FF5                     u6475:
  2518  0FF5  1803               	skipnc
  2519  0FF6  2FFA               	goto	u6471
  2520  0FF7  120A  118A  283D   	goto	u6470
  2521  0FFA                     u6471:
  2522  0FFA  120A  118A  2874   	goto	l4001
  2523  0FFD                     L3:
  2524  0FFD                     L2:
  2525  0FFD  120A  118A  2E4A   	ljmp	l4149
  2526                           
  2527                           	psect	text2
  2528  0A47                     __ptext2:	
  2529 ;; *************** function _scale *****************
  2530 ;; Defined at:
  2531 ;;		line 433 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  scl             1    wreg     char 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  scl             1   39[BANK0 ] char 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  3   31[BANK0 ] char 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2545 ;;      Params:         0       3       0       0       0
  2546 ;;      Locals:         0       4       0       0       0
  2547 ;;      Temps:          0       2       0       0       0
  2548 ;;      Totals:         0       9       0       0       0
  2549 ;;Total ram usage:        9 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    4
  2552 ;; This function calls:
  2553 ;;		___awdiv
  2554 ;;		___awmod
  2555 ;;		___bmul
  2556 ;;		___ftmul
  2557 ;; This function is called by:
  2558 ;;		_sprintf
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           
  2563                           ;psect for function _scale
  2564  0A47                     _scale:
  2565                           
  2566                           ;incstack = 0
  2567                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2568                           ;scale@scl stored from wreg
  2569  0A47  1283               	bcf	3,5	;RP0=0, select bank0
  2570  0A48  1303               	bcf	3,6	;RP1=0, select bank0
  2571  0A49  00C7               	movwf	scale@scl
  2572  0A4A                     l3581:
  2573                           
  2574                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 433: scale(signed char scl);D:\M
      +                          PLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 434: {;D:\MPLAB XC8 compiler\pic\sour
      +                          ces\c90\common\doprnt.c: 436:  if(scl < 0) {
  2575  0A4A  1FC7               	btfss	scale@scl,7
  2576  0A4B  2A4D               	goto	u5611
  2577  0A4C  2A4E               	goto	u5610
  2578  0A4D                     u5611:
  2579  0A4D  2BA9               	goto	l3603
  2580  0A4E                     u5610:
  2581  0A4E                     l3583:
  2582                           
  2583                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 437:   scl = -scl;
  2584  0A4E  09C7               	comf	scale@scl,f
  2585  0A4F  0AC7               	incf	scale@scl,f
  2586  0A50                     l3585:
  2587                           
  2588                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 438:   if(scl>=110)
  2589  0A50  0847               	movf	scale@scl,w
  2590  0A51  3A80               	xorlw	128
  2591  0A52  3E12               	addlw	-238
  2592  0A53  1C03               	skipc
  2593  0A54  2A56               	goto	u5621
  2594  0A55  2A57               	goto	u5620
  2595  0A56                     u5621:
  2596  0A56  2B15               	goto	l3593
  2597  0A57                     u5620:
  2598  0A57                     l3587:
  2599                           
  2600                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsign
      +                          ed char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigned
      +                           char)(scl%10)];
  2601  0A57  3003               	movlw	3
  2602  0A58  00C2               	movwf	??_scale
  2603  0A59  0842               	movf	??_scale,w
  2604  0A5A  00AB               	movwf	___bmul@multiplicand
  2605  0A5B  0847               	movf	scale@scl,w
  2606  0A5C  00F5               	movwf	___awmod@dividend
  2607  0A5D  01F6               	clrf	___awmod@dividend+1
  2608  0A5E  1BF5               	btfsc	___awmod@dividend,7
  2609  0A5F  03F6               	decf	___awmod@dividend+1,f
  2610  0A60  3064               	movlw	100
  2611  0A61  00F3               	movwf	___awmod@divisor
  2612  0A62  3000               	movlw	0
  2613  0A63  00F4               	movwf	___awmod@divisor+1
  2614  0A64  160A  118A  21D6  120A  158A  	fcall	___awmod
  2615  0A69  0874               	movf	?___awmod+1,w
  2616  0A6A  1283               	bcf	3,5	;RP0=0, select bank0
  2617  0A6B  1303               	bcf	3,6	;RP1=0, select bank0
  2618  0A6C  00A5               	movwf	___awdiv@dividend+1
  2619  0A6D  0873               	movf	?___awmod,w
  2620  0A6E  00A4               	movwf	___awdiv@dividend
  2621  0A6F  300A               	movlw	10
  2622  0A70  00A2               	movwf	___awdiv@divisor
  2623  0A71  3000               	movlw	0
  2624  0A72  00A3               	movwf	___awdiv@divisor+1
  2625  0A73  160A  118A  2299  120A  158A  	fcall	___awdiv
  2626  0A78  1283               	bcf	3,5	;RP0=0, select bank0
  2627  0A79  1303               	bcf	3,6	;RP1=0, select bank0
  2628  0A7A  0822               	movf	?___awdiv,w
  2629  0A7B  160A  118A  20AD  120A  158A  	fcall	___bmul
  2630  0A80  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2631  0A81  0084               	movwf	4
  2632  0A82  160A  118A  200A  120A  158A  	fcall	stringdir
  2633  0A87  1283               	bcf	3,5	;RP0=0, select bank0
  2634  0A88  1303               	bcf	3,6	;RP1=0, select bank0
  2635  0A89  00AF               	movwf	___ftmul@f1
  2636  0A8A  160A  118A  200A  120A  158A  	fcall	stringdir
  2637  0A8F  00B0               	movwf	___ftmul@f1+1
  2638  0A90  160A  118A  200A  120A  158A  	fcall	stringdir
  2639  0A95  00B1               	movwf	___ftmul@f1+2
  2640  0A96  3003               	movlw	3
  2641  0A97  00C3               	movwf	??_scale+1
  2642  0A98  0843               	movf	??_scale+1,w
  2643  0A99  00AB               	movwf	___bmul@multiplicand
  2644  0A9A  0847               	movf	scale@scl,w
  2645  0A9B  00A4               	movwf	___awdiv@dividend
  2646  0A9C  01A5               	clrf	___awdiv@dividend+1
  2647  0A9D  1BA4               	btfsc	___awdiv@dividend,7
  2648  0A9E  03A5               	decf	___awdiv@dividend+1,f
  2649  0A9F  3064               	movlw	100
  2650  0AA0  00A2               	movwf	___awdiv@divisor
  2651  0AA1  3000               	movlw	0
  2652  0AA2  00A3               	movwf	___awdiv@divisor+1
  2653  0AA3  160A  118A  2299  120A  158A  	fcall	___awdiv
  2654  0AA8  1283               	bcf	3,5	;RP0=0, select bank0
  2655  0AA9  1303               	bcf	3,6	;RP1=0, select bank0
  2656  0AAA  0822               	movf	?___awdiv,w
  2657  0AAB  160A  118A  20AD  120A  158A  	fcall	___bmul
  2658  0AB0  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  2659  0AB1  0084               	movwf	4
  2660  0AB2  160A  118A  200A  120A  158A  	fcall	stringdir
  2661  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
  2662  0AB8  1303               	bcf	3,6	;RP1=0, select bank0
  2663  0AB9  00B2               	movwf	___ftmul@f2
  2664  0ABA  160A  118A  200A  120A  158A  	fcall	stringdir
  2665  0ABF  00B3               	movwf	___ftmul@f2+1
  2666  0AC0  160A  118A  200A  120A  158A  	fcall	stringdir
  2667  0AC5  00B4               	movwf	___ftmul@f2+2
  2668  0AC6  120A  158A  202C  120A  158A  	fcall	___ftmul
  2669  0ACB  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0ACC  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0ACD  082F               	movf	?___ftmul,w
  2672  0ACE  00C4               	movwf	_scale$959
  2673  0ACF  0830               	movf	?___ftmul+1,w
  2674  0AD0  00C5               	movwf	_scale$959+1
  2675  0AD1  0831               	movf	?___ftmul+2,w
  2676  0AD2  00C6               	movwf	_scale$959+2
  2677                           
  2678                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsign
      +                          ed char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigned
      +                           char)(scl%10)];
  2679  0AD3  3003               	movlw	3
  2680  0AD4  00C2               	movwf	??_scale
  2681  0AD5  0842               	movf	??_scale,w
  2682  0AD6  00AB               	movwf	___bmul@multiplicand
  2683  0AD7  0847               	movf	scale@scl,w
  2684  0AD8  00F5               	movwf	___awmod@dividend
  2685  0AD9  01F6               	clrf	___awmod@dividend+1
  2686  0ADA  1BF5               	btfsc	___awmod@dividend,7
  2687  0ADB  03F6               	decf	___awmod@dividend+1,f
  2688  0ADC  300A               	movlw	10
  2689  0ADD  00F3               	movwf	___awmod@divisor
  2690  0ADE  3000               	movlw	0
  2691  0ADF  00F4               	movwf	___awmod@divisor+1
  2692  0AE0  160A  118A  21D6  120A  158A  	fcall	___awmod
  2693  0AE5  0873               	movf	?___awmod,w
  2694  0AE6  160A  118A  20AD  120A  158A  	fcall	___bmul
  2695  0AEB  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2696  0AEC  0084               	movwf	4
  2697  0AED  160A  118A  200A  120A  158A  	fcall	stringdir
  2698  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  2699  0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  2700  0AF4  00AF               	movwf	___ftmul@f1
  2701  0AF5  160A  118A  200A  120A  158A  	fcall	stringdir
  2702  0AFA  00B0               	movwf	___ftmul@f1+1
  2703  0AFB  160A  118A  200A  120A  158A  	fcall	stringdir
  2704  0B00  00B1               	movwf	___ftmul@f1+2
  2705  0B01  0844               	movf	_scale$959,w
  2706  0B02  00B2               	movwf	___ftmul@f2
  2707  0B03  0845               	movf	_scale$959+1,w
  2708  0B04  00B3               	movwf	___ftmul@f2+1
  2709  0B05  0846               	movf	_scale$959+2,w
  2710  0B06  00B4               	movwf	___ftmul@f2+2
  2711  0B07  120A  158A  202C  120A  158A  	fcall	___ftmul
  2712  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0B0E  082F               	movf	?___ftmul,w
  2715  0B0F  00BF               	movwf	?_scale
  2716  0B10  0830               	movf	?___ftmul+1,w
  2717  0B11  00C0               	movwf	?_scale+1
  2718  0B12  0831               	movf	?___ftmul+2,w
  2719  0B13  00C1               	movwf	?_scale+2
  2720  0B14  2D01               	goto	l338
  2721  0B15                     l3593:
  2722  0B15  0847               	movf	scale@scl,w
  2723  0B16  3A80               	xorlw	128
  2724  0B17  3E75               	addlw	-139
  2725  0B18  1C03               	skipc
  2726  0B19  2B1B               	goto	u5631
  2727  0B1A  2B1C               	goto	u5630
  2728  0B1B                     u5631:
  2729  0B1B  2B88               	goto	l3599
  2730  0B1C                     u5630:
  2731  0B1C                     l3595:
  2732                           
  2733                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 441:    return _npowers_[(unsign
      +                          ed char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2734  0B1C  3003               	movlw	3
  2735  0B1D  00C2               	movwf	??_scale
  2736  0B1E  0842               	movf	??_scale,w
  2737  0B1F  00AB               	movwf	___bmul@multiplicand
  2738  0B20  0847               	movf	scale@scl,w
  2739  0B21  00F5               	movwf	___awmod@dividend
  2740  0B22  01F6               	clrf	___awmod@dividend+1
  2741  0B23  1BF5               	btfsc	___awmod@dividend,7
  2742  0B24  03F6               	decf	___awmod@dividend+1,f
  2743  0B25  300A               	movlw	10
  2744  0B26  00F3               	movwf	___awmod@divisor
  2745  0B27  3000               	movlw	0
  2746  0B28  00F4               	movwf	___awmod@divisor+1
  2747  0B29  160A  118A  21D6  120A  158A  	fcall	___awmod
  2748  0B2E  0873               	movf	?___awmod,w
  2749  0B2F  160A  118A  20AD  120A  158A  	fcall	___bmul
  2750  0B34  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2751  0B35  0084               	movwf	4
  2752  0B36  160A  118A  200A  120A  158A  	fcall	stringdir
  2753  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  2754  0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  2755  0B3D  00AF               	movwf	___ftmul@f1
  2756  0B3E  160A  118A  200A  120A  158A  	fcall	stringdir
  2757  0B43  00B0               	movwf	___ftmul@f1+1
  2758  0B44  160A  118A  200A  120A  158A  	fcall	stringdir
  2759  0B49  00B1               	movwf	___ftmul@f1+2
  2760  0B4A  3003               	movlw	3
  2761  0B4B  00C3               	movwf	??_scale+1
  2762  0B4C  0843               	movf	??_scale+1,w
  2763  0B4D  00AB               	movwf	___bmul@multiplicand
  2764  0B4E  0847               	movf	scale@scl,w
  2765  0B4F  00A4               	movwf	___awdiv@dividend
  2766  0B50  01A5               	clrf	___awdiv@dividend+1
  2767  0B51  1BA4               	btfsc	___awdiv@dividend,7
  2768  0B52  03A5               	decf	___awdiv@dividend+1,f
  2769  0B53  300A               	movlw	10
  2770  0B54  00A2               	movwf	___awdiv@divisor
  2771  0B55  3000               	movlw	0
  2772  0B56  00A3               	movwf	___awdiv@divisor+1
  2773  0B57  160A  118A  2299  120A  158A  	fcall	___awdiv
  2774  0B5C  1283               	bcf	3,5	;RP0=0, select bank0
  2775  0B5D  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0B5E  0822               	movf	?___awdiv,w
  2777  0B5F  160A  118A  20AD  120A  158A  	fcall	___bmul
  2778  0B64  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2779  0B65  0084               	movwf	4
  2780  0B66  160A  118A  200A  120A  158A  	fcall	stringdir
  2781  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  2782  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  2783  0B6D  00B2               	movwf	___ftmul@f2
  2784  0B6E  160A  118A  200A  120A  158A  	fcall	stringdir
  2785  0B73  00B3               	movwf	___ftmul@f2+1
  2786  0B74  160A  118A  200A  120A  158A  	fcall	stringdir
  2787  0B79  00B4               	movwf	___ftmul@f2+2
  2788  0B7A  120A  158A  202C  120A  158A  	fcall	___ftmul
  2789  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  2790  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  2791  0B81  082F               	movf	?___ftmul,w
  2792  0B82  00BF               	movwf	?_scale
  2793  0B83  0830               	movf	?___ftmul+1,w
  2794  0B84  00C0               	movwf	?_scale+1
  2795  0B85  0831               	movf	?___ftmul+2,w
  2796  0B86  00C1               	movwf	?_scale+2
  2797  0B87  2D01               	goto	l338
  2798  0B88                     l3599:
  2799                           
  2800                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 442:   return _npowers_[(unsigne
      +                          d char)scl];
  2801  0B88  3003               	movlw	3
  2802  0B89  00C2               	movwf	??_scale
  2803  0B8A  0842               	movf	??_scale,w
  2804  0B8B  00AB               	movwf	___bmul@multiplicand
  2805  0B8C  0847               	movf	scale@scl,w
  2806  0B8D  160A  118A  20AD  120A  158A  	fcall	___bmul
  2807  0B92  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2808  0B93  0084               	movwf	4
  2809  0B94  160A  118A  200A  120A  158A  	fcall	stringdir
  2810  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  2811  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  2812  0B9B  00BF               	movwf	?_scale
  2813  0B9C  160A  118A  200A  120A  158A  	fcall	stringdir
  2814  0BA1  00C0               	movwf	?_scale+1
  2815  0BA2  160A  118A  200A  120A  158A  	fcall	stringdir
  2816  0BA7  00C1               	movwf	?_scale+2
  2817  0BA8  2D01               	goto	l338
  2818  0BA9                     l3603:
  2819                           
  2820                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110)
  2821  0BA9  0847               	movf	scale@scl,w
  2822  0BAA  3A80               	xorlw	128
  2823  0BAB  3E12               	addlw	-238
  2824  0BAC  1C03               	skipc
  2825  0BAD  2BAF               	goto	u5641
  2826  0BAE  2BB0               	goto	u5640
  2827  0BAF                     u5641:
  2828  0BAF  2C6E               	goto	l3611
  2829  0BB0                     u5640:
  2830  0BB0                     l3605:
  2831                           
  2832                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigned
      +                           char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned cha
      +                          r)(scl%10)];
  2833  0BB0  3003               	movlw	3
  2834  0BB1  00C2               	movwf	??_scale
  2835  0BB2  0842               	movf	??_scale,w
  2836  0BB3  00AB               	movwf	___bmul@multiplicand
  2837  0BB4  0847               	movf	scale@scl,w
  2838  0BB5  00F5               	movwf	___awmod@dividend
  2839  0BB6  01F6               	clrf	___awmod@dividend+1
  2840  0BB7  1BF5               	btfsc	___awmod@dividend,7
  2841  0BB8  03F6               	decf	___awmod@dividend+1,f
  2842  0BB9  3064               	movlw	100
  2843  0BBA  00F3               	movwf	___awmod@divisor
  2844  0BBB  3000               	movlw	0
  2845  0BBC  00F4               	movwf	___awmod@divisor+1
  2846  0BBD  160A  118A  21D6  120A  158A  	fcall	___awmod
  2847  0BC2  0874               	movf	?___awmod+1,w
  2848  0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  2849  0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  2850  0BC5  00A5               	movwf	___awdiv@dividend+1
  2851  0BC6  0873               	movf	?___awmod,w
  2852  0BC7  00A4               	movwf	___awdiv@dividend
  2853  0BC8  300A               	movlw	10
  2854  0BC9  00A2               	movwf	___awdiv@divisor
  2855  0BCA  3000               	movlw	0
  2856  0BCB  00A3               	movwf	___awdiv@divisor+1
  2857  0BCC  160A  118A  2299  120A  158A  	fcall	___awdiv
  2858  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  2859  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  2860  0BD3  0822               	movf	?___awdiv,w
  2861  0BD4  160A  118A  20AD  120A  158A  	fcall	___bmul
  2862  0BD9  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  2863  0BDA  0084               	movwf	4
  2864  0BDB  160A  118A  200A  120A  158A  	fcall	stringdir
  2865  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  2866  0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  2867  0BE2  00AF               	movwf	___ftmul@f1
  2868  0BE3  160A  118A  200A  120A  158A  	fcall	stringdir
  2869  0BE8  00B0               	movwf	___ftmul@f1+1
  2870  0BE9  160A  118A  200A  120A  158A  	fcall	stringdir
  2871  0BEE  00B1               	movwf	___ftmul@f1+2
  2872  0BEF  3003               	movlw	3
  2873  0BF0  00C3               	movwf	??_scale+1
  2874  0BF1  0843               	movf	??_scale+1,w
  2875  0BF2  00AB               	movwf	___bmul@multiplicand
  2876  0BF3  0847               	movf	scale@scl,w
  2877  0BF4  00A4               	movwf	___awdiv@dividend
  2878  0BF5  01A5               	clrf	___awdiv@dividend+1
  2879  0BF6  1BA4               	btfsc	___awdiv@dividend,7
  2880  0BF7  03A5               	decf	___awdiv@dividend+1,f
  2881  0BF8  3064               	movlw	100
  2882  0BF9  00A2               	movwf	___awdiv@divisor
  2883  0BFA  3000               	movlw	0
  2884  0BFB  00A3               	movwf	___awdiv@divisor+1
  2885  0BFC  160A  118A  2299  120A  158A  	fcall	___awdiv
  2886  0C01  1283               	bcf	3,5	;RP0=0, select bank0
  2887  0C02  1303               	bcf	3,6	;RP1=0, select bank0
  2888  0C03  0822               	movf	?___awdiv,w
  2889  0C04  160A  118A  20AD  120A  158A  	fcall	___bmul
  2890  0C09  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  2891  0C0A  0084               	movwf	4
  2892  0C0B  160A  118A  200A  120A  158A  	fcall	stringdir
  2893  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  2894  0C11  1303               	bcf	3,6	;RP1=0, select bank0
  2895  0C12  00B2               	movwf	___ftmul@f2
  2896  0C13  160A  118A  200A  120A  158A  	fcall	stringdir
  2897  0C18  00B3               	movwf	___ftmul@f2+1
  2898  0C19  160A  118A  200A  120A  158A  	fcall	stringdir
  2899  0C1E  00B4               	movwf	___ftmul@f2+2
  2900  0C1F  120A  158A  202C  120A  158A  	fcall	___ftmul
  2901  0C24  1283               	bcf	3,5	;RP0=0, select bank0
  2902  0C25  1303               	bcf	3,6	;RP1=0, select bank0
  2903  0C26  082F               	movf	?___ftmul,w
  2904  0C27  00C4               	movwf	_scale$959
  2905  0C28  0830               	movf	?___ftmul+1,w
  2906  0C29  00C5               	movwf	_scale$959+1
  2907  0C2A  0831               	movf	?___ftmul+2,w
  2908  0C2B  00C6               	movwf	_scale$959+2
  2909                           
  2910                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigned
      +                           char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned cha
      +                          r)(scl%10)];
  2911  0C2C  3003               	movlw	3
  2912  0C2D  00C2               	movwf	??_scale
  2913  0C2E  0842               	movf	??_scale,w
  2914  0C2F  00AB               	movwf	___bmul@multiplicand
  2915  0C30  0847               	movf	scale@scl,w
  2916  0C31  00F5               	movwf	___awmod@dividend
  2917  0C32  01F6               	clrf	___awmod@dividend+1
  2918  0C33  1BF5               	btfsc	___awmod@dividend,7
  2919  0C34  03F6               	decf	___awmod@dividend+1,f
  2920  0C35  300A               	movlw	10
  2921  0C36  00F3               	movwf	___awmod@divisor
  2922  0C37  3000               	movlw	0
  2923  0C38  00F4               	movwf	___awmod@divisor+1
  2924  0C39  160A  118A  21D6  120A  158A  	fcall	___awmod
  2925  0C3E  0873               	movf	?___awmod,w
  2926  0C3F  160A  118A  20AD  120A  158A  	fcall	___bmul
  2927  0C44  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2928  0C45  0084               	movwf	4
  2929  0C46  160A  118A  200A  120A  158A  	fcall	stringdir
  2930  0C4B  1283               	bcf	3,5	;RP0=0, select bank0
  2931  0C4C  1303               	bcf	3,6	;RP1=0, select bank0
  2932  0C4D  00AF               	movwf	___ftmul@f1
  2933  0C4E  160A  118A  200A  120A  158A  	fcall	stringdir
  2934  0C53  00B0               	movwf	___ftmul@f1+1
  2935  0C54  160A  118A  200A  120A  158A  	fcall	stringdir
  2936  0C59  00B1               	movwf	___ftmul@f1+2
  2937  0C5A  0844               	movf	_scale$959,w
  2938  0C5B  00B2               	movwf	___ftmul@f2
  2939  0C5C  0845               	movf	_scale$959+1,w
  2940  0C5D  00B3               	movwf	___ftmul@f2+1
  2941  0C5E  0846               	movf	_scale$959+2,w
  2942  0C5F  00B4               	movwf	___ftmul@f2+2
  2943  0C60  120A  158A  202C  120A  158A  	fcall	___ftmul
  2944  0C65  1283               	bcf	3,5	;RP0=0, select bank0
  2945  0C66  1303               	bcf	3,6	;RP1=0, select bank0
  2946  0C67  082F               	movf	?___ftmul,w
  2947  0C68  00BF               	movwf	?_scale
  2948  0C69  0830               	movf	?___ftmul+1,w
  2949  0C6A  00C0               	movwf	?_scale+1
  2950  0C6B  0831               	movf	?___ftmul+2,w
  2951  0C6C  00C1               	movwf	?_scale+2
  2952  0C6D  2D01               	goto	l338
  2953  0C6E                     l3611:
  2954  0C6E  0847               	movf	scale@scl,w
  2955  0C6F  3A80               	xorlw	128
  2956  0C70  3E75               	addlw	-139
  2957  0C71  1C03               	skipc
  2958  0C72  2C74               	goto	u5651
  2959  0C73  2C75               	goto	u5650
  2960  0C74                     u5651:
  2961  0C74  2CE1               	goto	l3617
  2962  0C75                     u5650:
  2963  0C75                     l3613:
  2964                           
  2965                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 447:   return _powers_[(unsigned
      +                           char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2966  0C75  3003               	movlw	3
  2967  0C76  00C2               	movwf	??_scale
  2968  0C77  0842               	movf	??_scale,w
  2969  0C78  00AB               	movwf	___bmul@multiplicand
  2970  0C79  0847               	movf	scale@scl,w
  2971  0C7A  00F5               	movwf	___awmod@dividend
  2972  0C7B  01F6               	clrf	___awmod@dividend+1
  2973  0C7C  1BF5               	btfsc	___awmod@dividend,7
  2974  0C7D  03F6               	decf	___awmod@dividend+1,f
  2975  0C7E  300A               	movlw	10
  2976  0C7F  00F3               	movwf	___awmod@divisor
  2977  0C80  3000               	movlw	0
  2978  0C81  00F4               	movwf	___awmod@divisor+1
  2979  0C82  160A  118A  21D6  120A  158A  	fcall	___awmod
  2980  0C87  0873               	movf	?___awmod,w
  2981  0C88  160A  118A  20AD  120A  158A  	fcall	___bmul
  2982  0C8D  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2983  0C8E  0084               	movwf	4
  2984  0C8F  160A  118A  200A  120A  158A  	fcall	stringdir
  2985  0C94  1283               	bcf	3,5	;RP0=0, select bank0
  2986  0C95  1303               	bcf	3,6	;RP1=0, select bank0
  2987  0C96  00AF               	movwf	___ftmul@f1
  2988  0C97  160A  118A  200A  120A  158A  	fcall	stringdir
  2989  0C9C  00B0               	movwf	___ftmul@f1+1
  2990  0C9D  160A  118A  200A  120A  158A  	fcall	stringdir
  2991  0CA2  00B1               	movwf	___ftmul@f1+2
  2992  0CA3  3003               	movlw	3
  2993  0CA4  00C3               	movwf	??_scale+1
  2994  0CA5  0843               	movf	??_scale+1,w
  2995  0CA6  00AB               	movwf	___bmul@multiplicand
  2996  0CA7  0847               	movf	scale@scl,w
  2997  0CA8  00A4               	movwf	___awdiv@dividend
  2998  0CA9  01A5               	clrf	___awdiv@dividend+1
  2999  0CAA  1BA4               	btfsc	___awdiv@dividend,7
  3000  0CAB  03A5               	decf	___awdiv@dividend+1,f
  3001  0CAC  300A               	movlw	10
  3002  0CAD  00A2               	movwf	___awdiv@divisor
  3003  0CAE  3000               	movlw	0
  3004  0CAF  00A3               	movwf	___awdiv@divisor+1
  3005  0CB0  160A  118A  2299  120A  158A  	fcall	___awdiv
  3006  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
  3008  0CB7  0822               	movf	?___awdiv,w
  3009  0CB8  160A  118A  20AD  120A  158A  	fcall	___bmul
  3010  0CBD  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3011  0CBE  0084               	movwf	4
  3012  0CBF  160A  118A  200A  120A  158A  	fcall	stringdir
  3013  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  3014  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  3015  0CC6  00B2               	movwf	___ftmul@f2
  3016  0CC7  160A  118A  200A  120A  158A  	fcall	stringdir
  3017  0CCC  00B3               	movwf	___ftmul@f2+1
  3018  0CCD  160A  118A  200A  120A  158A  	fcall	stringdir
  3019  0CD2  00B4               	movwf	___ftmul@f2+2
  3020  0CD3  120A  158A  202C  120A  158A  	fcall	___ftmul
  3021  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  3022  0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  3023  0CDA  082F               	movf	?___ftmul,w
  3024  0CDB  00BF               	movwf	?_scale
  3025  0CDC  0830               	movf	?___ftmul+1,w
  3026  0CDD  00C0               	movwf	?_scale+1
  3027  0CDE  0831               	movf	?___ftmul+2,w
  3028  0CDF  00C1               	movwf	?_scale+2
  3029  0CE0  2D01               	goto	l338
  3030  0CE1                     l3617:
  3031                           
  3032                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 448:  return _powers_[(unsigned 
      +                          char)scl];
  3033  0CE1  3003               	movlw	3
  3034  0CE2  00C2               	movwf	??_scale
  3035  0CE3  0842               	movf	??_scale,w
  3036  0CE4  00AB               	movwf	___bmul@multiplicand
  3037  0CE5  0847               	movf	scale@scl,w
  3038  0CE6  160A  118A  20AD  120A  158A  	fcall	___bmul
  3039  0CEB  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3040  0CEC  0084               	movwf	4
  3041  0CED  160A  118A  200A  120A  158A  	fcall	stringdir
  3042  0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  3043  0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  3044  0CF4  00BF               	movwf	?_scale
  3045  0CF5  160A  118A  200A  120A  158A  	fcall	stringdir
  3046  0CFA  00C0               	movwf	?_scale+1
  3047  0CFB  160A  118A  200A  120A  158A  	fcall	stringdir
  3048  0D00  00C1               	movwf	?_scale+2
  3049  0D01                     l338:
  3050  0D01  0008               	return
  3051  0D02                     __end_of_scale:
  3052                           
  3053                           	psect	text3
  3054  11D6                     __ptext3:	
  3055 ;; *************** function ___awmod *****************
  3056 ;; Defined at:
  3057 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\awmod.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  divisor         2    3[COMMON] int 
  3060 ;;  dividend        2    5[COMMON] int 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  sign            1    1[BANK0 ] unsigned char 
  3063 ;;  counter         1    0[BANK0 ] unsigned char 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  2    3[COMMON] int 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3073 ;;      Params:         4       0       0       0       0
  3074 ;;      Locals:         0       2       0       0       0
  3075 ;;      Temps:          1       0       0       0       0
  3076 ;;      Totals:         5       2       0       0       0
  3077 ;;Total ram usage:        7 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    2
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		_scale
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           
  3088                           ;psect for function ___awmod
  3089  11D6                     ___awmod:
  3090  11D6                     l3353:	
  3091                           ;incstack = 0
  3092                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3093                           
  3094  11D6  1283               	bcf	3,5	;RP0=0, select bank0
  3095  11D7  1303               	bcf	3,6	;RP1=0, select bank0
  3096  11D8  01A1               	clrf	___awmod@sign
  3097  11D9                     l3355:
  3098  11D9  1FF6               	btfss	___awmod@dividend+1,7
  3099  11DA  29DC               	goto	u4991
  3100  11DB  29DD               	goto	u4990
  3101  11DC                     u4991:
  3102  11DC  29E4               	goto	l3361
  3103  11DD                     u4990:
  3104  11DD                     l3357:
  3105  11DD  09F5               	comf	___awmod@dividend,f
  3106  11DE  09F6               	comf	___awmod@dividend+1,f
  3107  11DF  0AF5               	incf	___awmod@dividend,f
  3108  11E0  1903               	skipnz
  3109  11E1  0AF6               	incf	___awmod@dividend+1,f
  3110  11E2                     l3359:
  3111  11E2  01A1               	clrf	___awmod@sign
  3112  11E3  0AA1               	incf	___awmod@sign,f
  3113  11E4                     l3361:
  3114  11E4  1FF4               	btfss	___awmod@divisor+1,7
  3115  11E5  29E7               	goto	u5001
  3116  11E6  29E8               	goto	u5000
  3117  11E7                     u5001:
  3118  11E7  29ED               	goto	l3365
  3119  11E8                     u5000:
  3120  11E8                     l3363:
  3121  11E8  09F3               	comf	___awmod@divisor,f
  3122  11E9  09F4               	comf	___awmod@divisor+1,f
  3123  11EA  0AF3               	incf	___awmod@divisor,f
  3124  11EB  1903               	skipnz
  3125  11EC  0AF4               	incf	___awmod@divisor+1,f
  3126  11ED                     l3365:
  3127  11ED  0873               	movf	___awmod@divisor,w
  3128  11EE  0474               	iorwf	___awmod@divisor+1,w
  3129  11EF  1903               	btfsc	3,2
  3130  11F0  29F2               	goto	u5011
  3131  11F1  29F3               	goto	u5010
  3132  11F2                     u5011:
  3133  11F2  2A22               	goto	l3383
  3134  11F3                     u5010:
  3135  11F3                     l3367:
  3136  11F3  01A0               	clrf	___awmod@counter
  3137  11F4  0AA0               	incf	___awmod@counter,f
  3138  11F5  2A01               	goto	l3373
  3139  11F6                     l3369:
  3140  11F6  3001               	movlw	1
  3141  11F7                     u5025:
  3142  11F7  1003               	clrc
  3143  11F8  0DF3               	rlf	___awmod@divisor,f
  3144  11F9  0DF4               	rlf	___awmod@divisor+1,f
  3145  11FA  3EFF               	addlw	-1
  3146  11FB  1D03               	skipz
  3147  11FC  29F7               	goto	u5025
  3148  11FD                     l3371:
  3149  11FD  3001               	movlw	1
  3150  11FE  00F7               	movwf	??___awmod
  3151  11FF  0877               	movf	??___awmod,w
  3152  1200  07A0               	addwf	___awmod@counter,f
  3153  1201                     l3373:
  3154  1201  1FF4               	btfss	___awmod@divisor+1,7
  3155  1202  2A04               	goto	u5031
  3156  1203  2A05               	goto	u5030
  3157  1204                     u5031:
  3158  1204  29F6               	goto	l3369
  3159  1205                     u5030:
  3160  1205                     l3375:
  3161  1205  0874               	movf	___awmod@divisor+1,w
  3162  1206  0276               	subwf	___awmod@dividend+1,w
  3163  1207  1D03               	skipz
  3164  1208  2A0B               	goto	u5045
  3165  1209  0873               	movf	___awmod@divisor,w
  3166  120A  0275               	subwf	___awmod@dividend,w
  3167  120B                     u5045:
  3168  120B  1C03               	skipc
  3169  120C  2A0E               	goto	u5041
  3170  120D  2A0F               	goto	u5040
  3171  120E                     u5041:
  3172  120E  2A15               	goto	l3379
  3173  120F                     u5040:
  3174  120F                     l3377:
  3175  120F  0873               	movf	___awmod@divisor,w
  3176  1210  02F5               	subwf	___awmod@dividend,f
  3177  1211  0874               	movf	___awmod@divisor+1,w
  3178  1212  1C03               	skipc
  3179  1213  03F6               	decf	___awmod@dividend+1,f
  3180  1214  02F6               	subwf	___awmod@dividend+1,f
  3181  1215                     l3379:
  3182  1215  3001               	movlw	1
  3183  1216                     u5055:
  3184  1216  1003               	clrc
  3185  1217  0CF4               	rrf	___awmod@divisor+1,f
  3186  1218  0CF3               	rrf	___awmod@divisor,f
  3187  1219  3EFF               	addlw	-1
  3188  121A  1D03               	skipz
  3189  121B  2A16               	goto	u5055
  3190  121C                     l3381:
  3191  121C  3001               	movlw	1
  3192  121D  02A0               	subwf	___awmod@counter,f
  3193  121E  1D03               	btfss	3,2
  3194  121F  2A21               	goto	u5061
  3195  1220  2A22               	goto	u5060
  3196  1221                     u5061:
  3197  1221  2A05               	goto	l3375
  3198  1222                     u5060:
  3199  1222                     l3383:
  3200  1222  0821               	movf	___awmod@sign,w
  3201  1223  1903               	btfsc	3,2
  3202  1224  2A26               	goto	u5071
  3203  1225  2A27               	goto	u5070
  3204  1226                     u5071:
  3205  1226  2A2C               	goto	l3387
  3206  1227                     u5070:
  3207  1227                     l3385:
  3208  1227  09F5               	comf	___awmod@dividend,f
  3209  1228  09F6               	comf	___awmod@dividend+1,f
  3210  1229  0AF5               	incf	___awmod@dividend,f
  3211  122A  1903               	skipnz
  3212  122B  0AF6               	incf	___awmod@dividend+1,f
  3213  122C                     l3387:
  3214  122C  0876               	movf	___awmod@dividend+1,w
  3215  122D  00F4               	movwf	?___awmod+1
  3216  122E  0875               	movf	___awmod@dividend,w
  3217  122F  00F3               	movwf	?___awmod
  3218  1230                     l621:
  3219  1230  0008               	return
  3220  1231                     __end_of___awmod:
  3221                           
  3222                           	psect	text4
  3223  1299                     __ptext4:	
  3224 ;; *************** function ___awdiv *****************
  3225 ;; Defined at:
  3226 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\awdiv.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  divisor         2    2[BANK0 ] int 
  3229 ;;  dividend        2    4[BANK0 ] int 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  quotient        2    9[BANK0 ] int 
  3232 ;;  sign            1    8[BANK0 ] unsigned char 
  3233 ;;  counter         1    7[BANK0 ] unsigned char 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  2    2[BANK0 ] int 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2, status,0
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3243 ;;      Params:         0       4       0       0       0
  3244 ;;      Locals:         0       4       0       0       0
  3245 ;;      Temps:          0       1       0       0       0
  3246 ;;      Totals:         0       9       0       0       0
  3247 ;;Total ram usage:        9 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    2
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_scale
  3254 ;;		_sprintf
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           
  3259                           ;psect for function ___awdiv
  3260  1299                     ___awdiv:
  3261  1299                     l3309:	
  3262                           ;incstack = 0
  3263                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3264                           
  3265  1299  1283               	bcf	3,5	;RP0=0, select bank0
  3266  129A  1303               	bcf	3,6	;RP1=0, select bank0
  3267  129B  01A8               	clrf	___awdiv@sign
  3268  129C                     l3311:
  3269  129C  1FA3               	btfss	___awdiv@divisor+1,7
  3270  129D  2A9F               	goto	u4891
  3271  129E  2AA0               	goto	u4890
  3272  129F                     u4891:
  3273  129F  2AA7               	goto	l3317
  3274  12A0                     u4890:
  3275  12A0                     l3313:
  3276  12A0  09A2               	comf	___awdiv@divisor,f
  3277  12A1  09A3               	comf	___awdiv@divisor+1,f
  3278  12A2  0AA2               	incf	___awdiv@divisor,f
  3279  12A3  1903               	skipnz
  3280  12A4  0AA3               	incf	___awdiv@divisor+1,f
  3281  12A5                     l3315:
  3282  12A5  01A8               	clrf	___awdiv@sign
  3283  12A6  0AA8               	incf	___awdiv@sign,f
  3284  12A7                     l3317:
  3285  12A7  1FA5               	btfss	___awdiv@dividend+1,7
  3286  12A8  2AAA               	goto	u4901
  3287  12A9  2AAB               	goto	u4900
  3288  12AA                     u4901:
  3289  12AA  2AB4               	goto	l3323
  3290  12AB                     u4900:
  3291  12AB                     l3319:
  3292  12AB  09A4               	comf	___awdiv@dividend,f
  3293  12AC  09A5               	comf	___awdiv@dividend+1,f
  3294  12AD  0AA4               	incf	___awdiv@dividend,f
  3295  12AE  1903               	skipnz
  3296  12AF  0AA5               	incf	___awdiv@dividend+1,f
  3297  12B0                     l3321:
  3298  12B0  3001               	movlw	1
  3299  12B1  00A6               	movwf	??___awdiv
  3300  12B2  0826               	movf	??___awdiv,w
  3301  12B3  06A8               	xorwf	___awdiv@sign,f
  3302  12B4                     l3323:
  3303  12B4  01A9               	clrf	___awdiv@quotient
  3304  12B5  01AA               	clrf	___awdiv@quotient+1
  3305  12B6                     l3325:
  3306  12B6  0822               	movf	___awdiv@divisor,w
  3307  12B7  0423               	iorwf	___awdiv@divisor+1,w
  3308  12B8  1903               	btfsc	3,2
  3309  12B9  2ABB               	goto	u4911
  3310  12BA  2ABC               	goto	u4910
  3311  12BB                     u4911:
  3312  12BB  2AF3               	goto	l3345
  3313  12BC                     u4910:
  3314  12BC                     l3327:
  3315  12BC  01A7               	clrf	___awdiv@counter
  3316  12BD  0AA7               	incf	___awdiv@counter,f
  3317  12BE  2ACA               	goto	l3333
  3318  12BF                     l3329:
  3319  12BF  3001               	movlw	1
  3320  12C0                     u4925:
  3321  12C0  1003               	clrc
  3322  12C1  0DA2               	rlf	___awdiv@divisor,f
  3323  12C2  0DA3               	rlf	___awdiv@divisor+1,f
  3324  12C3  3EFF               	addlw	-1
  3325  12C4  1D03               	skipz
  3326  12C5  2AC0               	goto	u4925
  3327  12C6                     l3331:
  3328  12C6  3001               	movlw	1
  3329  12C7  00A6               	movwf	??___awdiv
  3330  12C8  0826               	movf	??___awdiv,w
  3331  12C9  07A7               	addwf	___awdiv@counter,f
  3332  12CA                     l3333:
  3333  12CA  1FA3               	btfss	___awdiv@divisor+1,7
  3334  12CB  2ACD               	goto	u4931
  3335  12CC  2ACE               	goto	u4930
  3336  12CD                     u4931:
  3337  12CD  2ABF               	goto	l3329
  3338  12CE                     u4930:
  3339  12CE                     l3335:
  3340  12CE  3001               	movlw	1
  3341  12CF                     u4945:
  3342  12CF  1003               	clrc
  3343  12D0  0DA9               	rlf	___awdiv@quotient,f
  3344  12D1  0DAA               	rlf	___awdiv@quotient+1,f
  3345  12D2  3EFF               	addlw	-1
  3346  12D3  1D03               	skipz
  3347  12D4  2ACF               	goto	u4945
  3348  12D5  0823               	movf	___awdiv@divisor+1,w
  3349  12D6  0225               	subwf	___awdiv@dividend+1,w
  3350  12D7  1D03               	skipz
  3351  12D8  2ADB               	goto	u4955
  3352  12D9  0822               	movf	___awdiv@divisor,w
  3353  12DA  0224               	subwf	___awdiv@dividend,w
  3354  12DB                     u4955:
  3355  12DB  1C03               	skipc
  3356  12DC  2ADE               	goto	u4951
  3357  12DD  2ADF               	goto	u4950
  3358  12DE                     u4951:
  3359  12DE  2AE6               	goto	l3341
  3360  12DF                     u4950:
  3361  12DF                     l3337:
  3362  12DF  0822               	movf	___awdiv@divisor,w
  3363  12E0  02A4               	subwf	___awdiv@dividend,f
  3364  12E1  0823               	movf	___awdiv@divisor+1,w
  3365  12E2  1C03               	skipc
  3366  12E3  03A5               	decf	___awdiv@dividend+1,f
  3367  12E4  02A5               	subwf	___awdiv@dividend+1,f
  3368  12E5                     l3339:
  3369  12E5  1429               	bsf	___awdiv@quotient,0
  3370  12E6                     l3341:
  3371  12E6  3001               	movlw	1
  3372  12E7                     u4965:
  3373  12E7  1003               	clrc
  3374  12E8  0CA3               	rrf	___awdiv@divisor+1,f
  3375  12E9  0CA2               	rrf	___awdiv@divisor,f
  3376  12EA  3EFF               	addlw	-1
  3377  12EB  1D03               	skipz
  3378  12EC  2AE7               	goto	u4965
  3379  12ED                     l3343:
  3380  12ED  3001               	movlw	1
  3381  12EE  02A7               	subwf	___awdiv@counter,f
  3382  12EF  1D03               	btfss	3,2
  3383  12F0  2AF2               	goto	u4971
  3384  12F1  2AF3               	goto	u4970
  3385  12F2                     u4971:
  3386  12F2  2ACE               	goto	l3335
  3387  12F3                     u4970:
  3388  12F3                     l3345:
  3389  12F3  0828               	movf	___awdiv@sign,w
  3390  12F4  1903               	btfsc	3,2
  3391  12F5  2AF7               	goto	u4981
  3392  12F6  2AF8               	goto	u4980
  3393  12F7                     u4981:
  3394  12F7  2AFD               	goto	l3349
  3395  12F8                     u4980:
  3396  12F8                     l3347:
  3397  12F8  09A9               	comf	___awdiv@quotient,f
  3398  12F9  09AA               	comf	___awdiv@quotient+1,f
  3399  12FA  0AA9               	incf	___awdiv@quotient,f
  3400  12FB  1903               	skipnz
  3401  12FC  0AAA               	incf	___awdiv@quotient+1,f
  3402  12FD                     l3349:
  3403  12FD  082A               	movf	___awdiv@quotient+1,w
  3404  12FE  00A3               	movwf	?___awdiv+1
  3405  12FF  0829               	movf	___awdiv@quotient,w
  3406  1300  00A2               	movwf	?___awdiv
  3407  1301                     l608:
  3408  1301  0008               	return
  3409  1302                     __end_of___awdiv:
  3410                           
  3411                           	psect	text5
  3412  1EF5                     __ptext5:	
  3413 ;; *************** function _isdigit *****************
  3414 ;; Defined at:
  3415 ;;		line 8 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\isdigit.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;  c               1    wreg     unsigned char 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  c               1    4[COMMON] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;		None               void
  3422 ;; Registers used:
  3423 ;;		wreg, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3429 ;;      Params:         0       0       0       0       0
  3430 ;;      Locals:         2       0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0
  3432 ;;      Totals:         2       0       0       0       0
  3433 ;;Total ram usage:        2 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    2
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_sprintf
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           
  3444                           ;psect for function _isdigit
  3445  1EF5                     _isdigit:
  3446                           
  3447                           ;incstack = 0
  3448                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3449                           ;isdigit@c stored from wreg
  3450  1EF5  00F4               	movwf	isdigit@c
  3451  1EF6                     l2459:
  3452  1EF6  01F3               	clrf	_isdigit$749
  3453  1EF7                     l2461:
  3454  1EF7  303A               	movlw	58
  3455  1EF8  0274               	subwf	isdigit@c,w
  3456  1EF9  1803               	skipnc
  3457  1EFA  2EFC               	goto	u3301
  3458  1EFB  2EFD               	goto	u3300
  3459  1EFC                     u3301:
  3460  1EFC  2F05               	goto	l2467
  3461  1EFD                     u3300:
  3462  1EFD                     l2463:
  3463  1EFD  3030               	movlw	48
  3464  1EFE  0274               	subwf	isdigit@c,w
  3465  1EFF  1C03               	skipc
  3466  1F00  2F02               	goto	u3311
  3467  1F01  2F03               	goto	u3310
  3468  1F02                     u3311:
  3469  1F02  2F05               	goto	l2467
  3470  1F03                     u3310:
  3471  1F03                     l2465:
  3472  1F03  01F3               	clrf	_isdigit$749
  3473  1F04  0AF3               	incf	_isdigit$749,f
  3474  1F05                     l2467:
  3475  1F05  0C73               	rrf	_isdigit$749,w
  3476  1F06                     l887:
  3477  1F06  0008               	return
  3478  1F07                     __end_of_isdigit:
  3479                           
  3480                           	psect	text6
  3481  0651                     __ptext6:	
  3482 ;; *************** function _fround *****************
  3483 ;; Defined at:
  3484 ;;		line 417 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;  prec            1    wreg     unsigned char 
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;  prec            1   46[BANK0 ] unsigned char 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  3   31[BANK0 ] unsigned char 
  3491 ;; Registers used:
  3492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3498 ;;      Params:         0       3       0       0       0
  3499 ;;      Locals:         0       7       0       0       0
  3500 ;;      Temps:          0       6       0       0       0
  3501 ;;      Totals:         0      16       0       0       0
  3502 ;;Total ram usage:       16 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; Hardware stack levels required when called:    4
  3505 ;; This function calls:
  3506 ;;		___bmul
  3507 ;;		___ftmul
  3508 ;;		___lwdiv
  3509 ;;		___lwmod
  3510 ;; This function is called by:
  3511 ;;		_sprintf
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           
  3516                           ;psect for function _fround
  3517  0651                     _fround:
  3518                           
  3519                           ;incstack = 0
  3520                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3521                           ;fround@prec stored from wreg
  3522  0651  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0652  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0653  00CE               	movwf	fround@prec
  3525  0654                     l3559:
  3526                           
  3527                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 417: fround(unsigned char prec);
      +                          D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 418: {;D:\MPLAB XC8 compiler\pic\
      +                          sources\c90\common\doprnt.c: 421:  if(prec>=110)
  3528  0654  306E               	movlw	110
  3529  0655  024E               	subwf	fround@prec,w
  3530  0656  1C03               	skipc
  3531  0657  2E59               	goto	u5591
  3532  0658  2E5A               	goto	u5590
  3533  0659                     u5591:
  3534  0659  2F37               	goto	l3569
  3535  065A                     u5590:
  3536  065A                     l3561:
  3537                           
  3538                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3539  065A  3003               	movlw	3
  3540  065B  00C2               	movwf	??_fround
  3541  065C  0842               	movf	??_fround,w
  3542  065D  00AB               	movwf	___bmul@multiplicand
  3543  065E  084E               	movf	fround@prec,w
  3544  065F  00C3               	movwf	??_fround+1
  3545  0660  01C4               	clrf	??_fround+2
  3546  0661  0843               	movf	??_fround+1,w
  3547  0662  00F5               	movwf	___lwmod@dividend
  3548  0663  0844               	movf	??_fround+2,w
  3549  0664  00F6               	movwf	___lwmod@dividend+1
  3550  0665  3064               	movlw	100
  3551  0666  00F3               	movwf	___lwmod@divisor
  3552  0667  3000               	movlw	0
  3553  0668  00F4               	movwf	___lwmod@divisor+1
  3554  0669  160A  118A  20FE  120A  118A  	fcall	___lwmod
  3555  066E  0874               	movf	?___lwmod+1,w
  3556  066F  1283               	bcf	3,5	;RP0=0, select bank0
  3557  0670  1303               	bcf	3,6	;RP1=0, select bank0
  3558  0671  00A4               	movwf	___lwdiv@dividend+1
  3559  0672  0873               	movf	?___lwmod,w
  3560  0673  00A3               	movwf	___lwdiv@dividend
  3561  0674  300A               	movlw	10
  3562  0675  00A1               	movwf	___lwdiv@divisor
  3563  0676  3000               	movlw	0
  3564  0677  00A2               	movwf	___lwdiv@divisor+1
  3565  0678  160A  118A  213A  120A  118A  	fcall	___lwdiv
  3566  067D  1283               	bcf	3,5	;RP0=0, select bank0
  3567  067E  1303               	bcf	3,6	;RP1=0, select bank0
  3568  067F  0821               	movf	?___lwdiv,w
  3569  0680  160A  118A  20AD  120A  118A  	fcall	___bmul
  3570  0685  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3571  0686  0084               	movwf	4
  3572  0687  160A  118A  200A  120A  118A  	fcall	stringdir
  3573  068C  1283               	bcf	3,5	;RP0=0, select bank0
  3574  068D  1303               	bcf	3,6	;RP1=0, select bank0
  3575  068E  00AF               	movwf	___ftmul@f1
  3576  068F  160A  118A  200A  120A  118A  	fcall	stringdir
  3577  0694  00B0               	movwf	___ftmul@f1+1
  3578  0695  160A  118A  200A  120A  118A  	fcall	stringdir
  3579  069A  00B1               	movwf	___ftmul@f1+2
  3580  069B  3003               	movlw	3
  3581  069C  00C5               	movwf	??_fround+3
  3582  069D  0845               	movf	??_fround+3,w
  3583  069E  00AB               	movwf	___bmul@multiplicand
  3584  069F  084E               	movf	fround@prec,w
  3585  06A0  00C6               	movwf	??_fround+4
  3586  06A1  01C7               	clrf	??_fround+5
  3587  06A2  0846               	movf	??_fround+4,w
  3588  06A3  00A3               	movwf	___lwdiv@dividend
  3589  06A4  0847               	movf	??_fround+5,w
  3590  06A5  00A4               	movwf	___lwdiv@dividend+1
  3591  06A6  3064               	movlw	100
  3592  06A7  00A1               	movwf	___lwdiv@divisor
  3593  06A8  3000               	movlw	0
  3594  06A9  00A2               	movwf	___lwdiv@divisor+1
  3595  06AA  160A  118A  213A  120A  118A  	fcall	___lwdiv
  3596  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  3597  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  3598  06B1  0821               	movf	?___lwdiv,w
  3599  06B2  160A  118A  20AD  120A  118A  	fcall	___bmul
  3600  06B7  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3601  06B8  0084               	movwf	4
  3602  06B9  160A  118A  200A  120A  118A  	fcall	stringdir
  3603  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  3604  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  3605  06C0  00B2               	movwf	___ftmul@f2
  3606  06C1  160A  118A  200A  120A  118A  	fcall	stringdir
  3607  06C6  00B3               	movwf	___ftmul@f2+1
  3608  06C7  160A  118A  200A  120A  118A  	fcall	stringdir
  3609  06CC  00B4               	movwf	___ftmul@f2+2
  3610  06CD  120A  158A  202C  120A  118A  	fcall	___ftmul
  3611  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  3612  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  3613  06D4  082F               	movf	?___ftmul,w
  3614  06D5  00CB               	movwf	_fround$957
  3615  06D6  0830               	movf	?___ftmul+1,w
  3616  06D7  00CC               	movwf	_fround$957+1
  3617  06D8  0831               	movf	?___ftmul+2,w
  3618  06D9  00CD               	movwf	_fround$957+2
  3619                           
  3620                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3621  06DA  3003               	movlw	3
  3622  06DB  00C2               	movwf	??_fround
  3623  06DC  0842               	movf	??_fround,w
  3624  06DD  00AB               	movwf	___bmul@multiplicand
  3625  06DE  084E               	movf	fround@prec,w
  3626  06DF  00C3               	movwf	??_fround+1
  3627  06E0  01C4               	clrf	??_fround+2
  3628  06E1  0843               	movf	??_fround+1,w
  3629  06E2  00F5               	movwf	___lwmod@dividend
  3630  06E3  0844               	movf	??_fround+2,w
  3631  06E4  00F6               	movwf	___lwmod@dividend+1
  3632  06E5  300A               	movlw	10
  3633  06E6  00F3               	movwf	___lwmod@divisor
  3634  06E7  3000               	movlw	0
  3635  06E8  00F4               	movwf	___lwmod@divisor+1
  3636  06E9  160A  118A  20FE  120A  118A  	fcall	___lwmod
  3637  06EE  0873               	movf	?___lwmod,w
  3638  06EF  160A  118A  20AD  120A  118A  	fcall	___bmul
  3639  06F4  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3640  06F5  0084               	movwf	4
  3641  06F6  160A  118A  200A  120A  118A  	fcall	stringdir
  3642  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  3643  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  3644  06FD  00AF               	movwf	___ftmul@f1
  3645  06FE  160A  118A  200A  120A  118A  	fcall	stringdir
  3646  0703  00B0               	movwf	___ftmul@f1+1
  3647  0704  160A  118A  200A  120A  118A  	fcall	stringdir
  3648  0709  00B1               	movwf	___ftmul@f1+2
  3649  070A  084B               	movf	_fround$957,w
  3650  070B  00B2               	movwf	___ftmul@f2
  3651  070C  084C               	movf	_fround$957+1,w
  3652  070D  00B3               	movwf	___ftmul@f2+1
  3653  070E  084D               	movf	_fround$957+2,w
  3654  070F  00B4               	movwf	___ftmul@f2+2
  3655  0710  120A  158A  202C  120A  118A  	fcall	___ftmul
  3656  0715  1283               	bcf	3,5	;RP0=0, select bank0
  3657  0716  1303               	bcf	3,6	;RP1=0, select bank0
  3658  0717  082F               	movf	?___ftmul,w
  3659  0718  00C8               	movwf	_fround$958
  3660  0719  0830               	movf	?___ftmul+1,w
  3661  071A  00C9               	movwf	_fround$958+1
  3662  071B  0831               	movf	?___ftmul+2,w
  3663  071C  00CA               	movwf	_fround$958+2
  3664  071D                     l3563:
  3665                           
  3666                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3667  071D  3000               	movlw	0
  3668  071E  00AF               	movwf	___ftmul@f1
  3669  071F  3000               	movlw	0
  3670  0720  00B0               	movwf	___ftmul@f1+1
  3671  0721  303F               	movlw	63
  3672  0722  00B1               	movwf	___ftmul@f1+2
  3673  0723  0848               	movf	_fround$958,w
  3674  0724  00B2               	movwf	___ftmul@f2
  3675  0725  0849               	movf	_fround$958+1,w
  3676  0726  00B3               	movwf	___ftmul@f2+1
  3677  0727  084A               	movf	_fround$958+2,w
  3678  0728  00B4               	movwf	___ftmul@f2+2
  3679  0729  120A  158A  202C  120A  118A  	fcall	___ftmul
  3680  072E  1283               	bcf	3,5	;RP0=0, select bank0
  3681  072F  1303               	bcf	3,6	;RP1=0, select bank0
  3682  0730  082F               	movf	?___ftmul,w
  3683  0731  00BF               	movwf	?_fround
  3684  0732  0830               	movf	?___ftmul+1,w
  3685  0733  00C0               	movwf	?_fround+1
  3686  0734  0831               	movf	?___ftmul+2,w
  3687  0735  00C1               	movwf	?_fround+2
  3688  0736  2FF9               	goto	l331
  3689  0737                     l3569:
  3690  0737  300B               	movlw	11
  3691  0738  024E               	subwf	fround@prec,w
  3692  0739  1C03               	skipc
  3693  073A  2F3C               	goto	u5601
  3694  073B  2F3D               	goto	u5600
  3695  073C                     u5601:
  3696  073C  2FC6               	goto	l3577
  3697  073D                     u5600:
  3698  073D                     l3571:
  3699                           
  3700                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[pr
      +                          ec/10U+9U] * _npowers_[prec%10U];
  3701  073D  3003               	movlw	3
  3702  073E  00C2               	movwf	??_fround
  3703  073F  0842               	movf	??_fround,w
  3704  0740  00AB               	movwf	___bmul@multiplicand
  3705  0741  084E               	movf	fround@prec,w
  3706  0742  00C3               	movwf	??_fround+1
  3707  0743  01C4               	clrf	??_fround+2
  3708  0744  0843               	movf	??_fround+1,w
  3709  0745  00F5               	movwf	___lwmod@dividend
  3710  0746  0844               	movf	??_fround+2,w
  3711  0747  00F6               	movwf	___lwmod@dividend+1
  3712  0748  300A               	movlw	10
  3713  0749  00F3               	movwf	___lwmod@divisor
  3714  074A  3000               	movlw	0
  3715  074B  00F4               	movwf	___lwmod@divisor+1
  3716  074C  160A  118A  20FE  120A  118A  	fcall	___lwmod
  3717  0751  0873               	movf	?___lwmod,w
  3718  0752  160A  118A  20AD  120A  118A  	fcall	___bmul
  3719  0757  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3720  0758  0084               	movwf	4
  3721  0759  160A  118A  200A  120A  118A  	fcall	stringdir
  3722  075E  1283               	bcf	3,5	;RP0=0, select bank0
  3723  075F  1303               	bcf	3,6	;RP1=0, select bank0
  3724  0760  00AF               	movwf	___ftmul@f1
  3725  0761  160A  118A  200A  120A  118A  	fcall	stringdir
  3726  0766  00B0               	movwf	___ftmul@f1+1
  3727  0767  160A  118A  200A  120A  118A  	fcall	stringdir
  3728  076C  00B1               	movwf	___ftmul@f1+2
  3729  076D  3003               	movlw	3
  3730  076E  00C5               	movwf	??_fround+3
  3731  076F  0845               	movf	??_fround+3,w
  3732  0770  00AB               	movwf	___bmul@multiplicand
  3733  0771  084E               	movf	fround@prec,w
  3734  0772  00C6               	movwf	??_fround+4
  3735  0773  01C7               	clrf	??_fround+5
  3736  0774  0846               	movf	??_fround+4,w
  3737  0775  00A3               	movwf	___lwdiv@dividend
  3738  0776  0847               	movf	??_fround+5,w
  3739  0777  00A4               	movwf	___lwdiv@dividend+1
  3740  0778  300A               	movlw	10
  3741  0779  00A1               	movwf	___lwdiv@divisor
  3742  077A  3000               	movlw	0
  3743  077B  00A2               	movwf	___lwdiv@divisor+1
  3744  077C  160A  118A  213A  120A  118A  	fcall	___lwdiv
  3745  0781  1283               	bcf	3,5	;RP0=0, select bank0
  3746  0782  1303               	bcf	3,6	;RP1=0, select bank0
  3747  0783  0821               	movf	?___lwdiv,w
  3748  0784  160A  118A  20AD  120A  118A  	fcall	___bmul
  3749  0789  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3750  078A  0084               	movwf	4
  3751  078B  160A  118A  200A  120A  118A  	fcall	stringdir
  3752  0790  1283               	bcf	3,5	;RP0=0, select bank0
  3753  0791  1303               	bcf	3,6	;RP1=0, select bank0
  3754  0792  00B2               	movwf	___ftmul@f2
  3755  0793  160A  118A  200A  120A  118A  	fcall	stringdir
  3756  0798  00B3               	movwf	___ftmul@f2+1
  3757  0799  160A  118A  200A  120A  118A  	fcall	stringdir
  3758  079E  00B4               	movwf	___ftmul@f2+2
  3759  079F  120A  158A  202C  120A  118A  	fcall	___ftmul
  3760  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  3761  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  3762  07A6  082F               	movf	?___ftmul,w
  3763  07A7  00CB               	movwf	_fround$957
  3764  07A8  0830               	movf	?___ftmul+1,w
  3765  07A9  00CC               	movwf	_fround$957+1
  3766  07AA  0831               	movf	?___ftmul+2,w
  3767  07AB  00CD               	movwf	_fround$957+2
  3768  07AC                     l3573:
  3769                           
  3770                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[pr
      +                          ec/10U+9U] * _npowers_[prec%10U];
  3771  07AC  3000               	movlw	0
  3772  07AD  00AF               	movwf	___ftmul@f1
  3773  07AE  3000               	movlw	0
  3774  07AF  00B0               	movwf	___ftmul@f1+1
  3775  07B0  303F               	movlw	63
  3776  07B1  00B1               	movwf	___ftmul@f1+2
  3777  07B2  084B               	movf	_fround$957,w
  3778  07B3  00B2               	movwf	___ftmul@f2
  3779  07B4  084C               	movf	_fround$957+1,w
  3780  07B5  00B3               	movwf	___ftmul@f2+1
  3781  07B6  084D               	movf	_fround$957+2,w
  3782  07B7  00B4               	movwf	___ftmul@f2+2
  3783  07B8  120A  158A  202C  120A  118A  	fcall	___ftmul
  3784  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  3785  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  3786  07BF  082F               	movf	?___ftmul,w
  3787  07C0  00BF               	movwf	?_fround
  3788  07C1  0830               	movf	?___ftmul+1,w
  3789  07C2  00C0               	movwf	?_fround+1
  3790  07C3  0831               	movf	?___ftmul+2,w
  3791  07C4  00C1               	movwf	?_fround+2
  3792  07C5  2FF9               	goto	l331
  3793  07C6                     l3577:
  3794                           
  3795                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 425:  return 0.5 * _npowers_[pre
      +                          c];
  3796  07C6  3000               	movlw	0
  3797  07C7  00AF               	movwf	___ftmul@f1
  3798  07C8  3000               	movlw	0
  3799  07C9  00B0               	movwf	___ftmul@f1+1
  3800  07CA  303F               	movlw	63
  3801  07CB  00B1               	movwf	___ftmul@f1+2
  3802  07CC  3003               	movlw	3
  3803  07CD  00C2               	movwf	??_fround
  3804  07CE  0842               	movf	??_fround,w
  3805  07CF  00AB               	movwf	___bmul@multiplicand
  3806  07D0  084E               	movf	fround@prec,w
  3807  07D1  160A  118A  20AD  120A  118A  	fcall	___bmul
  3808  07D6  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3809  07D7  0084               	movwf	4
  3810  07D8  160A  118A  200A  120A  118A  	fcall	stringdir
  3811  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  3812  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  3813  07DF  00B2               	movwf	___ftmul@f2
  3814  07E0  160A  118A  200A  120A  118A  	fcall	stringdir
  3815  07E5  00B3               	movwf	___ftmul@f2+1
  3816  07E6  160A  118A  200A  120A  118A  	fcall	stringdir
  3817  07EB  00B4               	movwf	___ftmul@f2+2
  3818  07EC  120A  158A  202C  120A  118A  	fcall	___ftmul
  3819  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  3820  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  3821  07F3  082F               	movf	?___ftmul,w
  3822  07F4  00BF               	movwf	?_fround
  3823  07F5  0830               	movf	?___ftmul+1,w
  3824  07F6  00C0               	movwf	?_fround+1
  3825  07F7  0831               	movf	?___ftmul+2,w
  3826  07F8  00C1               	movwf	?_fround+2
  3827  07F9                     l331:
  3828  07F9  0008               	return
  3829  07FA                     __end_of_fround:
  3830                           
  3831                           	psect	text7
  3832  10FE                     __ptext7:	
  3833 ;; *************** function ___lwmod *****************
  3834 ;; Defined at:
  3835 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lwmod.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  divisor         2    3[COMMON] unsigned int 
  3838 ;;  dividend        2    5[COMMON] unsigned int 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  counter         1    0[BANK0 ] unsigned char 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  2    3[COMMON] unsigned int 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3850 ;;      Params:         4       0       0       0       0
  3851 ;;      Locals:         0       1       0       0       0
  3852 ;;      Temps:          1       0       0       0       0
  3853 ;;      Totals:         5       1       0       0       0
  3854 ;;Total ram usage:        6 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    2
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_fround
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           
  3865                           ;psect for function ___lwmod
  3866  10FE                     ___lwmod:
  3867  10FE                     l3537:	
  3868                           ;incstack = 0
  3869                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3870                           
  3871  10FE  0873               	movf	___lwmod@divisor,w
  3872  10FF  0474               	iorwf	___lwmod@divisor+1,w
  3873  1100  1903               	btfsc	3,2
  3874  1101  2903               	goto	u5531
  3875  1102  2904               	goto	u5530
  3876  1103                     u5531:
  3877  1103  2935               	goto	l3555
  3878  1104                     u5530:
  3879  1104                     l3539:
  3880  1104  1283               	bcf	3,5	;RP0=0, select bank0
  3881  1105  1303               	bcf	3,6	;RP1=0, select bank0
  3882  1106  01A0               	clrf	___lwmod@counter
  3883  1107  0AA0               	incf	___lwmod@counter,f
  3884  1108  2914               	goto	l3545
  3885  1109                     l3541:
  3886  1109  3001               	movlw	1
  3887  110A                     u5545:
  3888  110A  1003               	clrc
  3889  110B  0DF3               	rlf	___lwmod@divisor,f
  3890  110C  0DF4               	rlf	___lwmod@divisor+1,f
  3891  110D  3EFF               	addlw	-1
  3892  110E  1D03               	skipz
  3893  110F  290A               	goto	u5545
  3894  1110                     l3543:
  3895  1110  3001               	movlw	1
  3896  1111  00F7               	movwf	??___lwmod
  3897  1112  0877               	movf	??___lwmod,w
  3898  1113  07A0               	addwf	___lwmod@counter,f
  3899  1114                     l3545:
  3900  1114  1FF4               	btfss	___lwmod@divisor+1,7
  3901  1115  2917               	goto	u5551
  3902  1116  2918               	goto	u5550
  3903  1117                     u5551:
  3904  1117  2909               	goto	l3541
  3905  1118                     u5550:
  3906  1118                     l3547:
  3907  1118  0874               	movf	___lwmod@divisor+1,w
  3908  1119  0276               	subwf	___lwmod@dividend+1,w
  3909  111A  1D03               	skipz
  3910  111B  291E               	goto	u5565
  3911  111C  0873               	movf	___lwmod@divisor,w
  3912  111D  0275               	subwf	___lwmod@dividend,w
  3913  111E                     u5565:
  3914  111E  1C03               	skipc
  3915  111F  2921               	goto	u5561
  3916  1120  2922               	goto	u5560
  3917  1121                     u5561:
  3918  1121  2928               	goto	l3551
  3919  1122                     u5560:
  3920  1122                     l3549:
  3921  1122  0873               	movf	___lwmod@divisor,w
  3922  1123  02F5               	subwf	___lwmod@dividend,f
  3923  1124  0874               	movf	___lwmod@divisor+1,w
  3924  1125  1C03               	skipc
  3925  1126  03F6               	decf	___lwmod@dividend+1,f
  3926  1127  02F6               	subwf	___lwmod@dividend+1,f
  3927  1128                     l3551:
  3928  1128  3001               	movlw	1
  3929  1129                     u5575:
  3930  1129  1003               	clrc
  3931  112A  0CF4               	rrf	___lwmod@divisor+1,f
  3932  112B  0CF3               	rrf	___lwmod@divisor,f
  3933  112C  3EFF               	addlw	-1
  3934  112D  1D03               	skipz
  3935  112E  2929               	goto	u5575
  3936  112F                     l3553:
  3937  112F  3001               	movlw	1
  3938  1130  02A0               	subwf	___lwmod@counter,f
  3939  1131  1D03               	btfss	3,2
  3940  1132  2934               	goto	u5581
  3941  1133  2935               	goto	u5580
  3942  1134                     u5581:
  3943  1134  2918               	goto	l3547
  3944  1135                     u5580:
  3945  1135                     l3555:
  3946  1135  0876               	movf	___lwmod@dividend+1,w
  3947  1136  00F4               	movwf	?___lwmod+1
  3948  1137  0875               	movf	___lwmod@dividend,w
  3949  1138  00F3               	movwf	?___lwmod
  3950  1139                     l877:
  3951  1139  0008               	return
  3952  113A                     __end_of___lwmod:
  3953                           
  3954                           	psect	text8
  3955  113A                     __ptext8:	
  3956 ;; *************** function ___lwdiv *****************
  3957 ;; Defined at:
  3958 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lwdiv.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  divisor         2    1[BANK0 ] unsigned int 
  3961 ;;  dividend        2    3[BANK0 ] unsigned int 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  quotient        2    7[BANK0 ] unsigned int 
  3964 ;;  counter         1    6[BANK0 ] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  2    1[BANK0 ] unsigned int 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3974 ;;      Params:         0       4       0       0       0
  3975 ;;      Locals:         0       3       0       0       0
  3976 ;;      Temps:          0       1       0       0       0
  3977 ;;      Totals:         0       8       0       0       0
  3978 ;;Total ram usage:        8 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    2
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_fround
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           
  3989                           ;psect for function ___lwdiv
  3990  113A                     ___lwdiv:
  3991  113A                     l3511:	
  3992                           ;incstack = 0
  3993                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3994                           
  3995  113A  1283               	bcf	3,5	;RP0=0, select bank0
  3996  113B  1303               	bcf	3,6	;RP1=0, select bank0
  3997  113C  01A7               	clrf	___lwdiv@quotient
  3998  113D  01A8               	clrf	___lwdiv@quotient+1
  3999  113E                     l3513:
  4000  113E  0821               	movf	___lwdiv@divisor,w
  4001  113F  0422               	iorwf	___lwdiv@divisor+1,w
  4002  1140  1903               	btfsc	3,2
  4003  1141  2943               	goto	u5461
  4004  1142  2944               	goto	u5460
  4005  1143                     u5461:
  4006  1143  297B               	goto	l3533
  4007  1144                     u5460:
  4008  1144                     l3515:
  4009  1144  01A6               	clrf	___lwdiv@counter
  4010  1145  0AA6               	incf	___lwdiv@counter,f
  4011  1146  2952               	goto	l3521
  4012  1147                     l3517:
  4013  1147  3001               	movlw	1
  4014  1148                     u5475:
  4015  1148  1003               	clrc
  4016  1149  0DA1               	rlf	___lwdiv@divisor,f
  4017  114A  0DA2               	rlf	___lwdiv@divisor+1,f
  4018  114B  3EFF               	addlw	-1
  4019  114C  1D03               	skipz
  4020  114D  2948               	goto	u5475
  4021  114E                     l3519:
  4022  114E  3001               	movlw	1
  4023  114F  00A5               	movwf	??___lwdiv
  4024  1150  0825               	movf	??___lwdiv,w
  4025  1151  07A6               	addwf	___lwdiv@counter,f
  4026  1152                     l3521:
  4027  1152  1FA2               	btfss	___lwdiv@divisor+1,7
  4028  1153  2955               	goto	u5481
  4029  1154  2956               	goto	u5480
  4030  1155                     u5481:
  4031  1155  2947               	goto	l3517
  4032  1156                     u5480:
  4033  1156                     l3523:
  4034  1156  3001               	movlw	1
  4035  1157                     u5495:
  4036  1157  1003               	clrc
  4037  1158  0DA7               	rlf	___lwdiv@quotient,f
  4038  1159  0DA8               	rlf	___lwdiv@quotient+1,f
  4039  115A  3EFF               	addlw	-1
  4040  115B  1D03               	skipz
  4041  115C  2957               	goto	u5495
  4042  115D  0822               	movf	___lwdiv@divisor+1,w
  4043  115E  0224               	subwf	___lwdiv@dividend+1,w
  4044  115F  1D03               	skipz
  4045  1160  2963               	goto	u5505
  4046  1161  0821               	movf	___lwdiv@divisor,w
  4047  1162  0223               	subwf	___lwdiv@dividend,w
  4048  1163                     u5505:
  4049  1163  1C03               	skipc
  4050  1164  2966               	goto	u5501
  4051  1165  2967               	goto	u5500
  4052  1166                     u5501:
  4053  1166  296E               	goto	l3529
  4054  1167                     u5500:
  4055  1167                     l3525:
  4056  1167  0821               	movf	___lwdiv@divisor,w
  4057  1168  02A3               	subwf	___lwdiv@dividend,f
  4058  1169  0822               	movf	___lwdiv@divisor+1,w
  4059  116A  1C03               	skipc
  4060  116B  03A4               	decf	___lwdiv@dividend+1,f
  4061  116C  02A4               	subwf	___lwdiv@dividend+1,f
  4062  116D                     l3527:
  4063  116D  1427               	bsf	___lwdiv@quotient,0
  4064  116E                     l3529:
  4065  116E  3001               	movlw	1
  4066  116F                     u5515:
  4067  116F  1003               	clrc
  4068  1170  0CA2               	rrf	___lwdiv@divisor+1,f
  4069  1171  0CA1               	rrf	___lwdiv@divisor,f
  4070  1172  3EFF               	addlw	-1
  4071  1173  1D03               	skipz
  4072  1174  296F               	goto	u5515
  4073  1175                     l3531:
  4074  1175  3001               	movlw	1
  4075  1176  02A6               	subwf	___lwdiv@counter,f
  4076  1177  1D03               	btfss	3,2
  4077  1178  297A               	goto	u5521
  4078  1179  297B               	goto	u5520
  4079  117A                     u5521:
  4080  117A  2956               	goto	l3523
  4081  117B                     u5520:
  4082  117B                     l3533:
  4083  117B  0828               	movf	___lwdiv@quotient+1,w
  4084  117C  00A2               	movwf	?___lwdiv+1
  4085  117D  0827               	movf	___lwdiv@quotient,w
  4086  117E  00A1               	movwf	?___lwdiv
  4087  117F                     l867:
  4088  117F  0008               	return
  4089  1180                     __end_of___lwdiv:
  4090                           
  4091                           	psect	text9
  4092  082C                     __ptext9:	
  4093 ;; *************** function ___ftmul *****************
  4094 ;; Defined at:
  4095 ;;		line 62 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftmul.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  f1              3   15[BANK0 ] float 
  4098 ;;  f2              3   18[BANK0 ] float 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  f3_as_produc    3   26[BANK0 ] unsigned um
  4101 ;;  sign            1   30[BANK0 ] unsigned char 
  4102 ;;  cntr            1   29[BANK0 ] unsigned char 
  4103 ;;  exp             1   25[BANK0 ] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  3   15[BANK0 ] float 
  4106 ;; Registers used:
  4107 ;;		wreg, status,2, status,0, pclath, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4113 ;;      Params:         0       6       0       0       0
  4114 ;;      Locals:         0       6       0       0       0
  4115 ;;      Temps:          0       4       0       0       0
  4116 ;;      Totals:         0      16       0       0       0
  4117 ;;Total ram usage:       16 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    3
  4120 ;; This function calls:
  4121 ;;		___ftpack
  4122 ;; This function is called by:
  4123 ;;		_aht_GetHumidity
  4124 ;;		_aht_GetTemperature
  4125 ;;		_fround
  4126 ;;		_scale
  4127 ;;		_sprintf
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           
  4132                           ;psect for function ___ftmul
  4133  082C                     ___ftmul:
  4134  082C                     l3461:	
  4135                           ;incstack = 0
  4136                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4137                           
  4138  082C  1283               	bcf	3,5	;RP0=0, select bank0
  4139  082D  1303               	bcf	3,6	;RP1=0, select bank0
  4140  082E  082F               	movf	___ftmul@f1,w
  4141  082F  00B5               	movwf	??___ftmul
  4142  0830  0830               	movf	___ftmul@f1+1,w
  4143  0831  00B6               	movwf	??___ftmul+1
  4144  0832  0831               	movf	___ftmul@f1+2,w
  4145  0833  00B7               	movwf	??___ftmul+2
  4146  0834  1003               	clrc
  4147  0835  0D36               	rlf	??___ftmul+1,w
  4148  0836  0D37               	rlf	??___ftmul+2,w
  4149  0837  00B8               	movwf	??___ftmul+3
  4150  0838  0838               	movf	??___ftmul+3,w
  4151  0839  00B9               	movwf	___ftmul@exp
  4152  083A  0839               	movf	___ftmul@exp,w
  4153  083B  1D03               	btfss	3,2
  4154  083C  283E               	goto	u5321
  4155  083D  283F               	goto	u5320
  4156  083E                     u5321:
  4157  083E  2846               	goto	l3467
  4158  083F                     u5320:
  4159  083F                     l3463:
  4160  083F  3000               	movlw	0
  4161  0840  00AF               	movwf	?___ftmul
  4162  0841  3000               	movlw	0
  4163  0842  00B0               	movwf	?___ftmul+1
  4164  0843  3000               	movlw	0
  4165  0844  00B1               	movwf	?___ftmul+2
  4166  0845  2910               	goto	l734
  4167  0846                     l3467:
  4168  0846  0832               	movf	___ftmul@f2,w
  4169  0847  00B5               	movwf	??___ftmul
  4170  0848  0833               	movf	___ftmul@f2+1,w
  4171  0849  00B6               	movwf	??___ftmul+1
  4172  084A  0834               	movf	___ftmul@f2+2,w
  4173  084B  00B7               	movwf	??___ftmul+2
  4174  084C  1003               	clrc
  4175  084D  0D36               	rlf	??___ftmul+1,w
  4176  084E  0D37               	rlf	??___ftmul+2,w
  4177  084F  00B8               	movwf	??___ftmul+3
  4178  0850  0838               	movf	??___ftmul+3,w
  4179  0851  00BE               	movwf	___ftmul@sign
  4180  0852  083E               	movf	___ftmul@sign,w
  4181  0853  1D03               	btfss	3,2
  4182  0854  2856               	goto	u5331
  4183  0855  2857               	goto	u5330
  4184  0856                     u5331:
  4185  0856  285E               	goto	l3473
  4186  0857                     u5330:
  4187  0857                     l3469:
  4188  0857  3000               	movlw	0
  4189  0858  00AF               	movwf	?___ftmul
  4190  0859  3000               	movlw	0
  4191  085A  00B0               	movwf	?___ftmul+1
  4192  085B  3000               	movlw	0
  4193  085C  00B1               	movwf	?___ftmul+2
  4194  085D  2910               	goto	l734
  4195  085E                     l3473:
  4196  085E  083E               	movf	___ftmul@sign,w
  4197  085F  3E7B               	addlw	123
  4198  0860  00B5               	movwf	??___ftmul
  4199  0861  0835               	movf	??___ftmul,w
  4200  0862  07B9               	addwf	___ftmul@exp,f
  4201  0863  082F               	movf	___ftmul@f1,w
  4202  0864  00B5               	movwf	??___ftmul
  4203  0865  0830               	movf	___ftmul@f1+1,w
  4204  0866  00B6               	movwf	??___ftmul+1
  4205  0867  0831               	movf	___ftmul@f1+2,w
  4206  0868  00B7               	movwf	??___ftmul+2
  4207  0869  3010               	movlw	16
  4208  086A                     u5345:
  4209  086A  1003               	clrc
  4210  086B  0CB7               	rrf	??___ftmul+2,f
  4211  086C  0CB6               	rrf	??___ftmul+1,f
  4212  086D  0CB5               	rrf	??___ftmul,f
  4213  086E                     u5340:
  4214  086E  3EFF               	addlw	-1
  4215  086F  1D03               	skipz
  4216  0870  286A               	goto	u5345
  4217  0871  0835               	movf	??___ftmul,w
  4218  0872  00B8               	movwf	??___ftmul+3
  4219  0873  0838               	movf	??___ftmul+3,w
  4220  0874  00BE               	movwf	___ftmul@sign
  4221  0875  0832               	movf	___ftmul@f2,w
  4222  0876  00B5               	movwf	??___ftmul
  4223  0877  0833               	movf	___ftmul@f2+1,w
  4224  0878  00B6               	movwf	??___ftmul+1
  4225  0879  0834               	movf	___ftmul@f2+2,w
  4226  087A  00B7               	movwf	??___ftmul+2
  4227  087B  3010               	movlw	16
  4228  087C                     u5355:
  4229  087C  1003               	clrc
  4230  087D  0CB7               	rrf	??___ftmul+2,f
  4231  087E  0CB6               	rrf	??___ftmul+1,f
  4232  087F  0CB5               	rrf	??___ftmul,f
  4233  0880                     u5350:
  4234  0880  3EFF               	addlw	-1
  4235  0881  1D03               	skipz
  4236  0882  287C               	goto	u5355
  4237  0883  0835               	movf	??___ftmul,w
  4238  0884  00B8               	movwf	??___ftmul+3
  4239  0885  0838               	movf	??___ftmul+3,w
  4240  0886  06BE               	xorwf	___ftmul@sign,f
  4241  0887  3080               	movlw	128
  4242  0888  00B5               	movwf	??___ftmul
  4243  0889  0835               	movf	??___ftmul,w
  4244  088A  05BE               	andwf	___ftmul@sign,f
  4245  088B                     l3475:
  4246  088B  17B0               	bsf	___ftmul@f1+1,7
  4247  088C                     l3477:
  4248  088C  17B3               	bsf	___ftmul@f2+1,7
  4249  088D                     l3479:
  4250  088D  30FF               	movlw	255
  4251  088E  05B2               	andwf	___ftmul@f2,f
  4252  088F  30FF               	movlw	255
  4253  0890  05B3               	andwf	___ftmul@f2+1,f
  4254  0891  3000               	movlw	0
  4255  0892  05B4               	andwf	___ftmul@f2+2,f
  4256  0893                     l3481:
  4257  0893  3000               	movlw	0
  4258  0894  00BA               	movwf	___ftmul@f3_as_product
  4259  0895  3000               	movlw	0
  4260  0896  00BB               	movwf	___ftmul@f3_as_product+1
  4261  0897  3000               	movlw	0
  4262  0898  00BC               	movwf	___ftmul@f3_as_product+2
  4263  0899                     l3483:
  4264  0899  3007               	movlw	7
  4265  089A  00B5               	movwf	??___ftmul
  4266  089B  0835               	movf	??___ftmul,w
  4267  089C  00BD               	movwf	___ftmul@cntr
  4268  089D                     l3485:
  4269  089D  1C2F               	btfss	___ftmul@f1,0
  4270  089E  28A0               	goto	u5361
  4271  089F  28A1               	goto	u5360
  4272  08A0                     u5361:
  4273  08A0  28B1               	goto	l3489
  4274  08A1                     u5360:
  4275  08A1                     l3487:
  4276  08A1  0832               	movf	___ftmul@f2,w
  4277  08A2  07BA               	addwf	___ftmul@f3_as_product,f
  4278  08A3  0833               	movf	___ftmul@f2+1,w
  4279  08A4  1103               	clrz
  4280  08A5  1803               	skipnc
  4281  08A6  0A33               	incf	___ftmul@f2+1,w
  4282  08A7  1903               	skipnz
  4283  08A8  28AA               	goto	u5371
  4284  08A9  07BB               	addwf	___ftmul@f3_as_product+1,f
  4285  08AA                     u5371:
  4286  08AA  0834               	movf	___ftmul@f2+2,w
  4287  08AB  1103               	clrz
  4288  08AC  1803               	skipnc
  4289  08AD  0A34               	incf	___ftmul@f2+2,w
  4290  08AE  1903               	skipnz
  4291  08AF  28B1               	goto	u5372
  4292  08B0  07BC               	addwf	___ftmul@f3_as_product+2,f
  4293  08B1                     u5372:
  4294  08B1                     l3489:
  4295  08B1  3001               	movlw	1
  4296  08B2                     u5385:
  4297  08B2  1003               	clrc
  4298  08B3  0CB1               	rrf	___ftmul@f1+2,f
  4299  08B4  0CB0               	rrf	___ftmul@f1+1,f
  4300  08B5  0CAF               	rrf	___ftmul@f1,f
  4301  08B6  3EFF               	addlw	-1
  4302  08B7  1D03               	skipz
  4303  08B8  28B2               	goto	u5385
  4304  08B9                     l3491:
  4305  08B9  3001               	movlw	1
  4306  08BA                     u5395:
  4307  08BA  1003               	clrc
  4308  08BB  0DB2               	rlf	___ftmul@f2,f
  4309  08BC  0DB3               	rlf	___ftmul@f2+1,f
  4310  08BD  0DB4               	rlf	___ftmul@f2+2,f
  4311  08BE  3EFF               	addlw	-1
  4312  08BF  1D03               	skipz
  4313  08C0  28BA               	goto	u5395
  4314  08C1                     l3493:
  4315  08C1  3001               	movlw	1
  4316  08C2  02BD               	subwf	___ftmul@cntr,f
  4317  08C3  1D03               	btfss	3,2
  4318  08C4  28C6               	goto	u5401
  4319  08C5  28C7               	goto	u5400
  4320  08C6                     u5401:
  4321  08C6  289D               	goto	l3485
  4322  08C7                     u5400:
  4323  08C7                     l3495:
  4324  08C7  3009               	movlw	9
  4325  08C8  00B5               	movwf	??___ftmul
  4326  08C9  0835               	movf	??___ftmul,w
  4327  08CA  00BD               	movwf	___ftmul@cntr
  4328  08CB                     l3497:
  4329  08CB  1C2F               	btfss	___ftmul@f1,0
  4330  08CC  28CE               	goto	u5411
  4331  08CD  28CF               	goto	u5410
  4332  08CE                     u5411:
  4333  08CE  28DF               	goto	l3501
  4334  08CF                     u5410:
  4335  08CF                     l3499:
  4336  08CF  0832               	movf	___ftmul@f2,w
  4337  08D0  07BA               	addwf	___ftmul@f3_as_product,f
  4338  08D1  0833               	movf	___ftmul@f2+1,w
  4339  08D2  1103               	clrz
  4340  08D3  1803               	skipnc
  4341  08D4  0A33               	incf	___ftmul@f2+1,w
  4342  08D5  1903               	skipnz
  4343  08D6  28D8               	goto	u5421
  4344  08D7  07BB               	addwf	___ftmul@f3_as_product+1,f
  4345  08D8                     u5421:
  4346  08D8  0834               	movf	___ftmul@f2+2,w
  4347  08D9  1103               	clrz
  4348  08DA  1803               	skipnc
  4349  08DB  0A34               	incf	___ftmul@f2+2,w
  4350  08DC  1903               	skipnz
  4351  08DD  28DF               	goto	u5422
  4352  08DE  07BC               	addwf	___ftmul@f3_as_product+2,f
  4353  08DF                     u5422:
  4354  08DF                     l3501:
  4355  08DF  3001               	movlw	1
  4356  08E0                     u5435:
  4357  08E0  1003               	clrc
  4358  08E1  0CB1               	rrf	___ftmul@f1+2,f
  4359  08E2  0CB0               	rrf	___ftmul@f1+1,f
  4360  08E3  0CAF               	rrf	___ftmul@f1,f
  4361  08E4  3EFF               	addlw	-1
  4362  08E5  1D03               	skipz
  4363  08E6  28E0               	goto	u5435
  4364  08E7                     l3503:
  4365  08E7  3001               	movlw	1
  4366  08E8                     u5445:
  4367  08E8  1003               	clrc
  4368  08E9  0CBC               	rrf	___ftmul@f3_as_product+2,f
  4369  08EA  0CBB               	rrf	___ftmul@f3_as_product+1,f
  4370  08EB  0CBA               	rrf	___ftmul@f3_as_product,f
  4371  08EC  3EFF               	addlw	-1
  4372  08ED  1D03               	skipz
  4373  08EE  28E8               	goto	u5445
  4374  08EF                     l3505:
  4375  08EF  3001               	movlw	1
  4376  08F0  02BD               	subwf	___ftmul@cntr,f
  4377  08F1  1D03               	btfss	3,2
  4378  08F2  28F4               	goto	u5451
  4379  08F3  28F5               	goto	u5450
  4380  08F4                     u5451:
  4381  08F4  28CB               	goto	l3497
  4382  08F5                     u5450:
  4383  08F5                     l3507:
  4384  08F5  083A               	movf	___ftmul@f3_as_product,w
  4385  08F6  00F3               	movwf	___ftpack@arg
  4386  08F7  083B               	movf	___ftmul@f3_as_product+1,w
  4387  08F8  00F4               	movwf	___ftpack@arg+1
  4388  08F9  083C               	movf	___ftmul@f3_as_product+2,w
  4389  08FA  00F5               	movwf	___ftpack@arg+2
  4390  08FB  0839               	movf	___ftmul@exp,w
  4391  08FC  00B5               	movwf	??___ftmul
  4392  08FD  0835               	movf	??___ftmul,w
  4393  08FE  00F6               	movwf	___ftpack@exp
  4394  08FF  083E               	movf	___ftmul@sign,w
  4395  0900  00B6               	movwf	??___ftmul+1
  4396  0901  0836               	movf	??___ftmul+1,w
  4397  0902  00F7               	movwf	___ftpack@sign
  4398  0903  160A  118A  2302  120A  158A  	fcall	___ftpack
  4399  0908  0873               	movf	?___ftpack,w
  4400  0909  1283               	bcf	3,5	;RP0=0, select bank0
  4401  090A  1303               	bcf	3,6	;RP1=0, select bank0
  4402  090B  00AF               	movwf	?___ftmul
  4403  090C  0874               	movf	?___ftpack+1,w
  4404  090D  00B0               	movwf	?___ftmul+1
  4405  090E  0875               	movf	?___ftpack+2,w
  4406  090F  00B1               	movwf	?___ftmul+2
  4407  0910                     l734:
  4408  0910  0008               	return
  4409  0911                     __end_of___ftmul:
  4410                           
  4411                           	psect	text10
  4412  10AD                     __ptext10:	
  4413 ;; *************** function ___bmul *****************
  4414 ;; Defined at:
  4415 ;;		line 4 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\Umul8.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  multiplier      1    wreg     unsigned char 
  4418 ;;  multiplicand    1   11[BANK0 ] unsigned char 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  multiplier      1   14[BANK0 ] unsigned char 
  4421 ;;  product         1   13[BANK0 ] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      unsigned char 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4431 ;;      Params:         0       1       0       0       0
  4432 ;;      Locals:         0       2       0       0       0
  4433 ;;      Temps:          0       1       0       0       0
  4434 ;;      Totals:         0       4       0       0       0
  4435 ;;Total ram usage:        4 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    2
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_fround
  4442 ;;		_scale
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           
  4447                           ;psect for function ___bmul
  4448  10AD                     ___bmul:
  4449                           
  4450                           ;incstack = 0
  4451                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4452                           ;___bmul@multiplier stored from wreg
  4453  10AD  1283               	bcf	3,5	;RP0=0, select bank0
  4454  10AE  1303               	bcf	3,6	;RP1=0, select bank0
  4455  10AF  00AE               	movwf	___bmul@multiplier
  4456  10B0                     l2125:
  4457  10B0  01AD               	clrf	___bmul@product
  4458  10B1                     l2127:
  4459  10B1  1C2E               	btfss	___bmul@multiplier,0
  4460  10B2  28B4               	goto	u2481
  4461  10B3  28B5               	goto	u2480
  4462  10B4                     u2481:
  4463  10B4  28B9               	goto	l2131
  4464  10B5                     u2480:
  4465  10B5                     l2129:
  4466  10B5  082B               	movf	___bmul@multiplicand,w
  4467  10B6  00AC               	movwf	??___bmul
  4468  10B7  082C               	movf	??___bmul,w
  4469  10B8  07AD               	addwf	___bmul@product,f
  4470  10B9                     l2131:
  4471  10B9  1003               	clrc
  4472  10BA  0DAB               	rlf	___bmul@multiplicand,f
  4473  10BB                     l2133:
  4474  10BB  1003               	clrc
  4475  10BC  0CAE               	rrf	___bmul@multiplier,f
  4476  10BD  082E               	movf	___bmul@multiplier,w
  4477  10BE  1D03               	btfss	3,2
  4478  10BF  28C1               	goto	u2491
  4479  10C0  28C2               	goto	u2490
  4480  10C1                     u2491:
  4481  10C1  28B1               	goto	l2127
  4482  10C2                     u2490:
  4483  10C2                     l2135:
  4484  10C2  082D               	movf	___bmul@product,w
  4485  10C3                     l451:
  4486  10C3  0008               	return
  4487  10C4                     __end_of___bmul:
  4488                           
  4489                           	psect	text11
  4490  153A                     __ptext11:	
  4491 ;; *************** function __tdiv_to_l_ *****************
  4492 ;; Defined at:
  4493 ;;		line 60 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftdivl.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  f1              3    0[BANK0 ] float 
  4496 ;;  f2              3    3[BANK0 ] float 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  quot            4    6[BANK0 ] unsigned long 
  4499 ;;  exp1            1   11[BANK0 ] unsigned char 
  4500 ;;  cntr            1   10[BANK0 ] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  4    0[BANK0 ] unsigned long 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4510 ;;      Params:         0       6       0       0       0
  4511 ;;      Locals:         0       6       0       0       0
  4512 ;;      Temps:          4       0       0       0       0
  4513 ;;      Totals:         4      12       0       0       0
  4514 ;;Total ram usage:       16 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:    2
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		_sprintf
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           
  4525                           ;psect for function __tdiv_to_l_
  4526  153A                     __tdiv_to_l_:
  4527  153A                     l3621:	
  4528                           ;incstack = 0
  4529                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4530                           
  4531  153A  1283               	bcf	3,5	;RP0=0, select bank0
  4532  153B  1303               	bcf	3,6	;RP1=0, select bank0
  4533  153C  0820               	movf	__tdiv_to_l_@f1,w
  4534  153D  00F3               	movwf	??__tdiv_to_l_
  4535  153E  0821               	movf	__tdiv_to_l_@f1+1,w
  4536  153F  00F4               	movwf	??__tdiv_to_l_+1
  4537  1540  0822               	movf	__tdiv_to_l_@f1+2,w
  4538  1541  00F5               	movwf	??__tdiv_to_l_+2
  4539  1542  1003               	clrc
  4540  1543  0D74               	rlf	??__tdiv_to_l_+1,w
  4541  1544  0D75               	rlf	??__tdiv_to_l_+2,w
  4542  1545  00F6               	movwf	??__tdiv_to_l_+3
  4543  1546  0876               	movf	??__tdiv_to_l_+3,w
  4544  1547  00AB               	movwf	__tdiv_to_l_@exp1
  4545  1548  082B               	movf	__tdiv_to_l_@exp1,w
  4546  1549  1D03               	btfss	3,2
  4547  154A  2D4C               	goto	u5661
  4548  154B  2D4D               	goto	u5660
  4549  154C                     u5661:
  4550  154C  2D56               	goto	l3627
  4551  154D                     u5660:
  4552  154D                     l3623:
  4553  154D  3000               	movlw	0
  4554  154E  00A3               	movwf	?__tdiv_to_l_+3
  4555  154F  3000               	movlw	0
  4556  1550  00A2               	movwf	?__tdiv_to_l_+2
  4557  1551  3000               	movlw	0
  4558  1552  00A1               	movwf	?__tdiv_to_l_+1
  4559  1553  3000               	movlw	0
  4560  1554  00A0               	movwf	?__tdiv_to_l_
  4561  1555  2DF6               	goto	l710
  4562  1556                     l3627:
  4563  1556  0823               	movf	__tdiv_to_l_@f2,w
  4564  1557  00F3               	movwf	??__tdiv_to_l_
  4565  1558  0824               	movf	__tdiv_to_l_@f2+1,w
  4566  1559  00F4               	movwf	??__tdiv_to_l_+1
  4567  155A  0825               	movf	__tdiv_to_l_@f2+2,w
  4568  155B  00F5               	movwf	??__tdiv_to_l_+2
  4569  155C  1003               	clrc
  4570  155D  0D74               	rlf	??__tdiv_to_l_+1,w
  4571  155E  0D75               	rlf	??__tdiv_to_l_+2,w
  4572  155F  00F6               	movwf	??__tdiv_to_l_+3
  4573  1560  0876               	movf	??__tdiv_to_l_+3,w
  4574  1561  00AA               	movwf	__tdiv_to_l_@cntr
  4575  1562  082A               	movf	__tdiv_to_l_@cntr,w
  4576  1563  1D03               	btfss	3,2
  4577  1564  2D66               	goto	u5671
  4578  1565  2D67               	goto	u5670
  4579  1566                     u5671:
  4580  1566  2D68               	goto	l711
  4581  1567                     u5670:
  4582  1567  2D4D               	goto	l3623
  4583  1568                     l711:
  4584  1568  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4585  1569                     l3633:
  4586  1569  30FF               	movlw	255
  4587  156A  05A0               	andwf	__tdiv_to_l_@f1,f
  4588  156B  30FF               	movlw	255
  4589  156C  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4590  156D  3000               	movlw	0
  4591  156E  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4592  156F                     l3635:
  4593  156F  17A4               	bsf	__tdiv_to_l_@f2+1,7
  4594  1570  30FF               	movlw	255
  4595  1571  05A3               	andwf	__tdiv_to_l_@f2,f
  4596  1572  30FF               	movlw	255
  4597  1573  05A4               	andwf	__tdiv_to_l_@f2+1,f
  4598  1574  3000               	movlw	0
  4599  1575  05A5               	andwf	__tdiv_to_l_@f2+2,f
  4600  1576  3000               	movlw	0
  4601  1577  00A9               	movwf	__tdiv_to_l_@quot+3
  4602  1578  3000               	movlw	0
  4603  1579  00A8               	movwf	__tdiv_to_l_@quot+2
  4604  157A  3000               	movlw	0
  4605  157B  00A7               	movwf	__tdiv_to_l_@quot+1
  4606  157C  3000               	movlw	0
  4607  157D  00A6               	movwf	__tdiv_to_l_@quot
  4608  157E                     l3637:
  4609  157E  307F               	movlw	127
  4610  157F  02AB               	subwf	__tdiv_to_l_@exp1,f
  4611  1580                     l3639:
  4612  1580  3098               	movlw	152
  4613  1581  072A               	addwf	__tdiv_to_l_@cntr,w
  4614  1582  00F3               	movwf	??__tdiv_to_l_
  4615  1583  0873               	movf	??__tdiv_to_l_,w
  4616  1584  02AB               	subwf	__tdiv_to_l_@exp1,f
  4617  1585  3018               	movlw	24
  4618  1586  00F3               	movwf	??__tdiv_to_l_
  4619  1587  0873               	movf	??__tdiv_to_l_,w
  4620  1588  00AA               	movwf	__tdiv_to_l_@cntr
  4621  1589                     l3641:
  4622  1589  3001               	movlw	1
  4623  158A  00F3               	movwf	??__tdiv_to_l_
  4624  158B                     u5685:
  4625  158B  1003               	clrc
  4626  158C  0DA6               	rlf	__tdiv_to_l_@quot,f
  4627  158D  0DA7               	rlf	__tdiv_to_l_@quot+1,f
  4628  158E  0DA8               	rlf	__tdiv_to_l_@quot+2,f
  4629  158F  0DA9               	rlf	__tdiv_to_l_@quot+3,f
  4630  1590  0BF3               	decfsz	??__tdiv_to_l_,f
  4631  1591  2D8B               	goto	u5685
  4632  1592                     l3643:
  4633  1592  0825               	movf	__tdiv_to_l_@f2+2,w
  4634  1593  0222               	subwf	__tdiv_to_l_@f1+2,w
  4635  1594  1D03               	skipz
  4636  1595  2D9C               	goto	u5695
  4637  1596  0824               	movf	__tdiv_to_l_@f2+1,w
  4638  1597  0221               	subwf	__tdiv_to_l_@f1+1,w
  4639  1598  1D03               	skipz
  4640  1599  2D9C               	goto	u5695
  4641  159A  0823               	movf	__tdiv_to_l_@f2,w
  4642  159B  0220               	subwf	__tdiv_to_l_@f1,w
  4643  159C                     u5695:
  4644  159C  1C03               	skipc
  4645  159D  2D9F               	goto	u5691
  4646  159E  2DA0               	goto	u5690
  4647  159F                     u5691:
  4648  159F  2DAB               	goto	l3649
  4649  15A0                     u5690:
  4650  15A0                     l3645:
  4651  15A0  0823               	movf	__tdiv_to_l_@f2,w
  4652  15A1  02A0               	subwf	__tdiv_to_l_@f1,f
  4653  15A2  0824               	movf	__tdiv_to_l_@f2+1,w
  4654  15A3  1C03               	skipc
  4655  15A4  0F24               	incfsz	__tdiv_to_l_@f2+1,w
  4656  15A5  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4657  15A6  0825               	movf	__tdiv_to_l_@f2+2,w
  4658  15A7  1C03               	skipc
  4659  15A8  0A25               	incf	__tdiv_to_l_@f2+2,w
  4660  15A9  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4661  15AA                     l3647:
  4662  15AA  1426               	bsf	__tdiv_to_l_@quot,0
  4663  15AB                     l3649:
  4664  15AB  3001               	movlw	1
  4665  15AC                     u5705:
  4666  15AC  1003               	clrc
  4667  15AD  0DA0               	rlf	__tdiv_to_l_@f1,f
  4668  15AE  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4669  15AF  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4670  15B0  3EFF               	addlw	-1
  4671  15B1  1D03               	skipz
  4672  15B2  2DAC               	goto	u5705
  4673  15B3                     l3651:
  4674  15B3  3001               	movlw	1
  4675  15B4  02AA               	subwf	__tdiv_to_l_@cntr,f
  4676  15B5  1D03               	btfss	3,2
  4677  15B6  2DB8               	goto	u5711
  4678  15B7  2DB9               	goto	u5710
  4679  15B8                     u5711:
  4680  15B8  2D89               	goto	l3641
  4681  15B9                     u5710:
  4682  15B9                     l714:
  4683  15B9  1FAB               	btfss	__tdiv_to_l_@exp1,7
  4684  15BA  2DBC               	goto	u5721
  4685  15BB  2DBD               	goto	u5720
  4686  15BC                     u5721:
  4687  15BC  2DD7               	goto	l3661
  4688  15BD                     u5720:
  4689  15BD                     l3653:
  4690  15BD  082B               	movf	__tdiv_to_l_@exp1,w
  4691  15BE  3A80               	xorlw	128
  4692  15BF  3E97               	addlw	151
  4693  15C0  1803               	skipnc
  4694  15C1  2DC3               	goto	u5731
  4695  15C2  2DC4               	goto	u5730
  4696  15C3                     u5731:
  4697  15C3  2DC5               	goto	l3659
  4698  15C4                     u5730:
  4699  15C4  2D4D               	goto	l3623
  4700  15C5                     l3659:
  4701  15C5  3001               	movlw	1
  4702  15C6                     u5745:
  4703  15C6  1003               	clrc
  4704  15C7  0CA9               	rrf	__tdiv_to_l_@quot+3,f
  4705  15C8  0CA8               	rrf	__tdiv_to_l_@quot+2,f
  4706  15C9  0CA7               	rrf	__tdiv_to_l_@quot+1,f
  4707  15CA  0CA6               	rrf	__tdiv_to_l_@quot,f
  4708  15CB  3EFF               	addlw	-1
  4709  15CC  1D03               	skipz
  4710  15CD  2DC6               	goto	u5745
  4711  15CE  3001               	movlw	1
  4712  15CF  00F3               	movwf	??__tdiv_to_l_
  4713  15D0  0873               	movf	??__tdiv_to_l_,w
  4714  15D1  07AB               	addwf	__tdiv_to_l_@exp1,f
  4715  15D2  1D03               	btfss	3,2
  4716  15D3  2DD5               	goto	u5751
  4717  15D4  2DD6               	goto	u5750
  4718  15D5                     u5751:
  4719  15D5  2DC5               	goto	l3659
  4720  15D6                     u5750:
  4721  15D6  2DEE               	goto	l3669
  4722  15D7                     l3661:
  4723  15D7  3018               	movlw	24
  4724  15D8  022B               	subwf	__tdiv_to_l_@exp1,w
  4725  15D9  1C03               	skipc
  4726  15DA  2DDC               	goto	u5761
  4727  15DB  2DDD               	goto	u5760
  4728  15DC                     u5761:
  4729  15DC  2DE9               	goto	l721
  4730  15DD                     u5760:
  4731  15DD  2D4D               	goto	l3623
  4732  15DE                     l3667:
  4733  15DE  3001               	movlw	1
  4734  15DF  00F3               	movwf	??__tdiv_to_l_
  4735  15E0                     u5775:
  4736  15E0  1003               	clrc
  4737  15E1  0DA6               	rlf	__tdiv_to_l_@quot,f
  4738  15E2  0DA7               	rlf	__tdiv_to_l_@quot+1,f
  4739  15E3  0DA8               	rlf	__tdiv_to_l_@quot+2,f
  4740  15E4  0DA9               	rlf	__tdiv_to_l_@quot+3,f
  4741  15E5  0BF3               	decfsz	??__tdiv_to_l_,f
  4742  15E6  2DE0               	goto	u5775
  4743  15E7  3001               	movlw	1
  4744  15E8  02AB               	subwf	__tdiv_to_l_@exp1,f
  4745  15E9                     l721:
  4746  15E9  082B               	movf	__tdiv_to_l_@exp1,w
  4747  15EA  1D03               	btfss	3,2
  4748  15EB  2DED               	goto	u5781
  4749  15EC  2DEE               	goto	u5780
  4750  15ED                     u5781:
  4751  15ED  2DDE               	goto	l3667
  4752  15EE                     u5780:
  4753  15EE                     l3669:
  4754  15EE  0829               	movf	__tdiv_to_l_@quot+3,w
  4755  15EF  00A3               	movwf	?__tdiv_to_l_+3
  4756  15F0  0828               	movf	__tdiv_to_l_@quot+2,w
  4757  15F1  00A2               	movwf	?__tdiv_to_l_+2
  4758  15F2  0827               	movf	__tdiv_to_l_@quot+1,w
  4759  15F3  00A1               	movwf	?__tdiv_to_l_+1
  4760  15F4  0826               	movf	__tdiv_to_l_@quot,w
  4761  15F5  00A0               	movwf	?__tdiv_to_l_
  4762  15F6                     l710:
  4763  15F6  0008               	return
  4764  15F7                     __end_of__tdiv_to_l_:
  4765                           
  4766                           	psect	text12
  4767  16D3                     __ptext12:	
  4768 ;; *************** function __div_to_l_ *****************
  4769 ;; Defined at:
  4770 ;;		line 60 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\fldivl.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  f1              3    0[BANK0 ] unsigned long 
  4773 ;;  f2              3    3[BANK0 ] unsigned long 
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;  quot            4   14[BANK0 ] unsigned long 
  4776 ;;  exp1            1   19[BANK0 ] unsigned char 
  4777 ;;  cntr            1   18[BANK0 ] unsigned char 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  4    0[BANK0 ] unsigned long 
  4780 ;; Registers used:
  4781 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4787 ;;      Params:         0       6       0       0       0
  4788 ;;      Locals:         0       6       0       0       0
  4789 ;;      Temps:          0       8       0       0       0
  4790 ;;      Totals:         0      20       0       0       0
  4791 ;;Total ram usage:       20 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:    2
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_sprintf
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           
  4802                           ;psect for function __div_to_l_
  4803  16D3                     __div_to_l_:
  4804  16D3                     l3673:	
  4805                           ;incstack = 0
  4806                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  4807                           
  4808  16D3  3020               	movlw	low (__div_to_l_@f1| 0)
  4809  16D4  0084               	movwf	4
  4810  16D5  1383               	bcf	3,7	;select IRP bank0
  4811  16D6  0800               	movf	0,w
  4812  16D7  1283               	bcf	3,5	;RP0=0, select bank0
  4813  16D8  1303               	bcf	3,6	;RP1=0, select bank0
  4814  16D9  00A6               	movwf	??__div_to_l_
  4815  16DA  0A84               	incf	4,f
  4816  16DB  0800               	movf	0,w
  4817  16DC  00A7               	movwf	??__div_to_l_+1
  4818  16DD  0A84               	incf	4,f
  4819  16DE  0800               	movf	0,w
  4820  16DF  00A8               	movwf	??__div_to_l_+2
  4821  16E0  0A84               	incf	4,f
  4822  16E1  0800               	movf	0,w
  4823  16E2  00A9               	movwf	??__div_to_l_+3
  4824  16E3  1003               	clrc
  4825  16E4  0D28               	rlf	??__div_to_l_+2,w
  4826  16E5  0D29               	rlf	??__div_to_l_+3,w
  4827  16E6  00AA               	movwf	??__div_to_l_+4
  4828  16E7  082A               	movf	??__div_to_l_+4,w
  4829  16E8  00B3               	movwf	__div_to_l_@exp1
  4830  16E9  0833               	movf	__div_to_l_@exp1,w
  4831  16EA  1D03               	btfss	3,2
  4832  16EB  2EED               	goto	u5791
  4833  16EC  2EEE               	goto	u5790
  4834  16ED                     u5791:
  4835  16ED  2EF7               	goto	l3679
  4836  16EE                     u5790:
  4837  16EE                     l3675:
  4838  16EE  3000               	movlw	0
  4839  16EF  00A3               	movwf	?__div_to_l_+3
  4840  16F0  3000               	movlw	0
  4841  16F1  00A2               	movwf	?__div_to_l_+2
  4842  16F2  3000               	movlw	0
  4843  16F3  00A1               	movwf	?__div_to_l_+1
  4844  16F4  3000               	movlw	0
  4845  16F5  00A0               	movwf	?__div_to_l_
  4846  16F6  2FFF               	goto	l631
  4847  16F7                     l3679:
  4848  16F7  3023               	movlw	low (__div_to_l_@f2| 0)
  4849  16F8  0084               	movwf	4
  4850  16F9  0800               	movf	0,w
  4851  16FA  00A6               	movwf	??__div_to_l_
  4852  16FB  0A84               	incf	4,f
  4853  16FC  0800               	movf	0,w
  4854  16FD  00A7               	movwf	??__div_to_l_+1
  4855  16FE  0A84               	incf	4,f
  4856  16FF  0800               	movf	0,w
  4857  1700  00A8               	movwf	??__div_to_l_+2
  4858  1701  0A84               	incf	4,f
  4859  1702  0800               	movf	0,w
  4860  1703  00A9               	movwf	??__div_to_l_+3
  4861  1704  1003               	clrc
  4862  1705  0D28               	rlf	??__div_to_l_+2,w
  4863  1706  0D29               	rlf	??__div_to_l_+3,w
  4864  1707  00AA               	movwf	??__div_to_l_+4
  4865  1708  082A               	movf	??__div_to_l_+4,w
  4866  1709  00B2               	movwf	__div_to_l_@cntr
  4867  170A  0832               	movf	__div_to_l_@cntr,w
  4868  170B  1D03               	btfss	3,2
  4869  170C  2F0E               	goto	u5801
  4870  170D  2F0F               	goto	u5800
  4871  170E                     u5801:
  4872  170E  2F10               	goto	l3685
  4873  170F                     u5800:
  4874  170F  2EEE               	goto	l3675
  4875  1710                     l3685:
  4876  1710  3020               	movlw	low (__div_to_l_@f1| 0)
  4877  1711  0084               	movwf	4
  4878  1712  3000               	movlw	0
  4879  1713  0480               	iorwf	0,f
  4880  1714  0A84               	incf	4,f
  4881  1715  3000               	movlw	0
  4882  1716  0480               	iorwf	0,f
  4883  1717  0A84               	incf	4,f
  4884  1718  3080               	movlw	128
  4885  1719  0480               	iorwf	0,f
  4886  171A  0A84               	incf	4,f
  4887  171B  3000               	movlw	0
  4888  171C  0480               	iorwf	0,f
  4889  171D  3020               	movlw	low (__div_to_l_@f1| 0)
  4890  171E  0084               	movwf	4
  4891  171F  30FF               	movlw	255
  4892  1720  0580               	andwf	0,f
  4893  1721  0A84               	incf	4,f
  4894  1722  30FF               	movlw	255
  4895  1723  0580               	andwf	0,f
  4896  1724  0A84               	incf	4,f
  4897  1725  30FF               	movlw	255
  4898  1726  0580               	andwf	0,f
  4899  1727  0A84               	incf	4,f
  4900  1728  3000               	movlw	0
  4901  1729  0580               	andwf	0,f
  4902  172A  3023               	movlw	low (__div_to_l_@f2| 0)
  4903  172B  0084               	movwf	4
  4904  172C  3000               	movlw	0
  4905  172D  0480               	iorwf	0,f
  4906  172E  0A84               	incf	4,f
  4907  172F  3000               	movlw	0
  4908  1730  0480               	iorwf	0,f
  4909  1731  0A84               	incf	4,f
  4910  1732  3080               	movlw	128
  4911  1733  0480               	iorwf	0,f
  4912  1734  0A84               	incf	4,f
  4913  1735  3000               	movlw	0
  4914  1736  0480               	iorwf	0,f
  4915  1737  3023               	movlw	low (__div_to_l_@f2| 0)
  4916  1738  0084               	movwf	4
  4917  1739  30FF               	movlw	255
  4918  173A  0580               	andwf	0,f
  4919  173B  0A84               	incf	4,f
  4920  173C  30FF               	movlw	255
  4921  173D  0580               	andwf	0,f
  4922  173E  0A84               	incf	4,f
  4923  173F  30FF               	movlw	255
  4924  1740  0580               	andwf	0,f
  4925  1741  0A84               	incf	4,f
  4926  1742  3000               	movlw	0
  4927  1743  0580               	andwf	0,f
  4928  1744                     l3687:
  4929  1744  3000               	movlw	0
  4930  1745  00B1               	movwf	__div_to_l_@quot+3
  4931  1746  3000               	movlw	0
  4932  1747  00B0               	movwf	__div_to_l_@quot+2
  4933  1748  3000               	movlw	0
  4934  1749  00AF               	movwf	__div_to_l_@quot+1
  4935  174A  3000               	movlw	0
  4936  174B  00AE               	movwf	__div_to_l_@quot
  4937  174C                     l3689:
  4938  174C  307F               	movlw	127
  4939  174D  02B3               	subwf	__div_to_l_@exp1,f
  4940  174E                     l3691:
  4941  174E  30A0               	movlw	160
  4942  174F  0732               	addwf	__div_to_l_@cntr,w
  4943  1750  00A6               	movwf	??__div_to_l_
  4944  1751  0826               	movf	??__div_to_l_,w
  4945  1752  02B3               	subwf	__div_to_l_@exp1,f
  4946  1753                     l3693:
  4947  1753  3020               	movlw	32
  4948  1754  00A6               	movwf	??__div_to_l_
  4949  1755  0826               	movf	??__div_to_l_,w
  4950  1756  00B2               	movwf	__div_to_l_@cntr
  4951  1757                     l3695:
  4952  1757  3001               	movlw	1
  4953  1758  00A6               	movwf	??__div_to_l_
  4954  1759                     u5815:
  4955  1759  1003               	clrc
  4956  175A  0DAE               	rlf	__div_to_l_@quot,f
  4957  175B  0DAF               	rlf	__div_to_l_@quot+1,f
  4958  175C  0DB0               	rlf	__div_to_l_@quot+2,f
  4959  175D  0DB1               	rlf	__div_to_l_@quot+3,f
  4960  175E  0BA6               	decfsz	??__div_to_l_,f
  4961  175F  2F59               	goto	u5815
  4962  1760                     l3697:
  4963  1760  3023               	movlw	low (__div_to_l_@f2| 0)
  4964  1761  0084               	movwf	4
  4965  1762  0800               	movf	0,w
  4966  1763  00A6               	movwf	??__div_to_l_
  4967  1764  0A84               	incf	4,f
  4968  1765  0800               	movf	0,w
  4969  1766  00A7               	movwf	??__div_to_l_+1
  4970  1767  0A84               	incf	4,f
  4971  1768  0800               	movf	0,w
  4972  1769  00A8               	movwf	??__div_to_l_+2
  4973  176A  0A84               	incf	4,f
  4974  176B  0800               	movf	0,w
  4975  176C  00A9               	movwf	??__div_to_l_+3
  4976  176D  3020               	movlw	low (__div_to_l_@f1| 0)
  4977  176E  0084               	movwf	4
  4978  176F  0800               	movf	0,w
  4979  1770  00AA               	movwf	??__div_to_l_+4
  4980  1771  0A84               	incf	4,f
  4981  1772  0800               	movf	0,w
  4982  1773  00AB               	movwf	??__div_to_l_+5
  4983  1774  0A84               	incf	4,f
  4984  1775  0800               	movf	0,w
  4985  1776  00AC               	movwf	??__div_to_l_+6
  4986  1777  0A84               	incf	4,f
  4987  1778  0800               	movf	0,w
  4988  1779  00AD               	movwf	??__div_to_l_+7
  4989  177A  0829               	movf	??__div_to_l_+3,w
  4990  177B  022D               	subwf	??__div_to_l_+7,w
  4991  177C  1D03               	skipz
  4992  177D  2F88               	goto	u5825
  4993  177E  0828               	movf	??__div_to_l_+2,w
  4994  177F  022C               	subwf	??__div_to_l_+6,w
  4995  1780  1D03               	skipz
  4996  1781  2F88               	goto	u5825
  4997  1782  0827               	movf	??__div_to_l_+1,w
  4998  1783  022B               	subwf	??__div_to_l_+5,w
  4999  1784  1D03               	skipz
  5000  1785  2F88               	goto	u5825
  5001  1786  0826               	movf	??__div_to_l_,w
  5002  1787  022A               	subwf	??__div_to_l_+4,w
  5003  1788                     u5825:
  5004  1788  1C03               	skipc
  5005  1789  2F8B               	goto	u5821
  5006  178A  2F8C               	goto	u5820
  5007  178B                     u5821:
  5008  178B  2FAF               	goto	l634
  5009  178C                     u5820:
  5010  178C                     l3699:
  5011  178C  3023               	movlw	low (__div_to_l_@f2| 0)
  5012  178D  0084               	movwf	4
  5013  178E  0800               	movf	0,w
  5014  178F  00A6               	movwf	??__div_to_l_
  5015  1790  0A84               	incf	4,f
  5016  1791  0800               	movf	0,w
  5017  1792  00A7               	movwf	??__div_to_l_+1
  5018  1793  0A84               	incf	4,f
  5019  1794  0800               	movf	0,w
  5020  1795  00A8               	movwf	??__div_to_l_+2
  5021  1796  0A84               	incf	4,f
  5022  1797  0800               	movf	0,w
  5023  1798  00A9               	movwf	??__div_to_l_+3
  5024  1799  3020               	movlw	low (__div_to_l_@f1| 0)
  5025  179A  0084               	movwf	4
  5026  179B  0826               	movf	??__div_to_l_,w
  5027  179C  0280               	subwf	0,f
  5028  179D  0A84               	incf	4,f
  5029  179E  0827               	movf	??__div_to_l_+1,w
  5030  179F  1C03               	skipc
  5031  17A0  0F27               	incfsz	??__div_to_l_+1,w
  5032  17A1  0280               	subwf	0,f
  5033  17A2  0A84               	incf	4,f
  5034  17A3  0828               	movf	??__div_to_l_+2,w
  5035  17A4  1C03               	skipc
  5036  17A5  0F28               	incfsz	??__div_to_l_+2,w
  5037  17A6  0280               	subwf	0,f
  5038  17A7  0A84               	incf	4,f
  5039  17A8  0829               	movf	??__div_to_l_+3,w
  5040  17A9  1C03               	skipc
  5041  17AA  0A29               	incf	??__div_to_l_+3,w
  5042  17AB  0280               	subwf	0,f
  5043  17AC  3003               	movlw	3
  5044  17AD  0284               	subwf	4,f
  5045  17AE                     l3701:
  5046  17AE  142E               	bsf	__div_to_l_@quot,0
  5047  17AF                     l634:
  5048  17AF  3020               	movlw	low (__div_to_l_@f1| 0)
  5049  17B0  0084               	movwf	4
  5050  17B1  1003               	clrc
  5051  17B2  0D80               	rlf	0,f
  5052  17B3  0A84               	incf	4,f
  5053  17B4  0D80               	rlf	0,f
  5054  17B5  0A84               	incf	4,f
  5055  17B6  0D80               	rlf	0,f
  5056  17B7  0A84               	incf	4,f
  5057  17B8  0D80               	rlf	0,f
  5058  17B9  0384               	decf	4,f
  5059  17BA  0384               	decf	4,f
  5060  17BB  0384               	decf	4,f
  5061  17BC                     l3703:
  5062  17BC  3001               	movlw	1
  5063  17BD  02B2               	subwf	__div_to_l_@cntr,f
  5064  17BE  1D03               	btfss	3,2
  5065  17BF  2FC1               	goto	u5831
  5066  17C0  2FC2               	goto	u5830
  5067  17C1                     u5831:
  5068  17C1  2F57               	goto	l3695
  5069  17C2                     u5830:
  5070  17C2                     l635:
  5071  17C2  1FB3               	btfss	__div_to_l_@exp1,7
  5072  17C3  2FC5               	goto	u5841
  5073  17C4  2FC6               	goto	u5840
  5074  17C5                     u5841:
  5075  17C5  2FE0               	goto	l3713
  5076  17C6                     u5840:
  5077  17C6                     l3705:
  5078  17C6  0833               	movf	__div_to_l_@exp1,w
  5079  17C7  3A80               	xorlw	128
  5080  17C8  3E9F               	addlw	159
  5081  17C9  1803               	skipnc
  5082  17CA  2FCC               	goto	u5851
  5083  17CB  2FCD               	goto	u5850
  5084  17CC                     u5851:
  5085  17CC  2FCE               	goto	l3711
  5086  17CD                     u5850:
  5087  17CD  2EEE               	goto	l3675
  5088  17CE                     l3711:
  5089  17CE  3001               	movlw	1
  5090  17CF                     u5865:
  5091  17CF  1003               	clrc
  5092  17D0  0CB1               	rrf	__div_to_l_@quot+3,f
  5093  17D1  0CB0               	rrf	__div_to_l_@quot+2,f
  5094  17D2  0CAF               	rrf	__div_to_l_@quot+1,f
  5095  17D3  0CAE               	rrf	__div_to_l_@quot,f
  5096  17D4  3EFF               	addlw	-1
  5097  17D5  1D03               	skipz
  5098  17D6  2FCF               	goto	u5865
  5099  17D7  3001               	movlw	1
  5100  17D8  00A6               	movwf	??__div_to_l_
  5101  17D9  0826               	movf	??__div_to_l_,w
  5102  17DA  07B3               	addwf	__div_to_l_@exp1,f
  5103  17DB  1D03               	btfss	3,2
  5104  17DC  2FDE               	goto	u5871
  5105  17DD  2FDF               	goto	u5870
  5106  17DE                     u5871:
  5107  17DE  2FCE               	goto	l3711
  5108  17DF                     u5870:
  5109  17DF  2FF7               	goto	l3721
  5110  17E0                     l3713:
  5111  17E0  3020               	movlw	32
  5112  17E1  0233               	subwf	__div_to_l_@exp1,w
  5113  17E2  1C03               	skipc
  5114  17E3  2FE5               	goto	u5881
  5115  17E4  2FE6               	goto	u5880
  5116  17E5                     u5881:
  5117  17E5  2FF2               	goto	l642
  5118  17E6                     u5880:
  5119  17E6  2EEE               	goto	l3675
  5120  17E7                     l3719:
  5121  17E7  3001               	movlw	1
  5122  17E8  00A6               	movwf	??__div_to_l_
  5123  17E9                     u5895:
  5124  17E9  1003               	clrc
  5125  17EA  0DAE               	rlf	__div_to_l_@quot,f
  5126  17EB  0DAF               	rlf	__div_to_l_@quot+1,f
  5127  17EC  0DB0               	rlf	__div_to_l_@quot+2,f
  5128  17ED  0DB1               	rlf	__div_to_l_@quot+3,f
  5129  17EE  0BA6               	decfsz	??__div_to_l_,f
  5130  17EF  2FE9               	goto	u5895
  5131  17F0  3001               	movlw	1
  5132  17F1  02B3               	subwf	__div_to_l_@exp1,f
  5133  17F2                     l642:
  5134  17F2  0833               	movf	__div_to_l_@exp1,w
  5135  17F3  1D03               	btfss	3,2
  5136  17F4  2FF6               	goto	u5901
  5137  17F5  2FF7               	goto	u5900
  5138  17F6                     u5901:
  5139  17F6  2FE7               	goto	l3719
  5140  17F7                     u5900:
  5141  17F7                     l3721:
  5142  17F7  0831               	movf	__div_to_l_@quot+3,w
  5143  17F8  00A3               	movwf	?__div_to_l_+3
  5144  17F9  0830               	movf	__div_to_l_@quot+2,w
  5145  17FA  00A2               	movwf	?__div_to_l_+2
  5146  17FB  082F               	movf	__div_to_l_@quot+1,w
  5147  17FC  00A1               	movwf	?__div_to_l_+1
  5148  17FD  082E               	movf	__div_to_l_@quot,w
  5149  17FE  00A0               	movwf	?__div_to_l_
  5150  17FF                     l631:
  5151  17FF  0008               	return
  5152  1800                     __end_of__div_to_l_:
  5153                           
  5154                           	psect	text13
  5155  0801                     __ptext13:	
  5156 ;; *************** function ___wmul *****************
  5157 ;; Defined at:
  5158 ;;		line 15 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\Umul16.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  multiplier      2    3[COMMON] unsigned int 
  5161 ;;  multiplicand    2    5[COMMON] unsigned int 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;  product         2    0[BANK0 ] unsigned int 
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  2    3[COMMON] unsigned int 
  5166 ;; Registers used:
  5167 ;;		wreg, status,2, status,0
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5173 ;;      Params:         4       0       0       0       0
  5174 ;;      Locals:         0       2       0       0       0
  5175 ;;      Temps:          0       0       0       0       0
  5176 ;;      Totals:         4       2       0       0       0
  5177 ;;Total ram usage:        6 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:    2
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_sprintf
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           
  5188                           ;psect for function ___wmul
  5189  0801                     ___wmul:
  5190  0801                     l3725:	
  5191                           ;incstack = 0
  5192                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5193                           
  5194  0801  1283               	bcf	3,5	;RP0=0, select bank0
  5195  0802  1303               	bcf	3,6	;RP1=0, select bank0
  5196  0803  01A0               	clrf	___wmul@product
  5197  0804  01A1               	clrf	___wmul@product+1
  5198  0805                     l3727:
  5199  0805  1C73               	btfss	___wmul@multiplier,0
  5200  0806  2808               	goto	u5911
  5201  0807  2809               	goto	u5910
  5202  0808                     u5911:
  5203  0808  2811               	goto	l425
  5204  0809                     u5910:
  5205  0809                     l3729:
  5206  0809  0875               	movf	___wmul@multiplicand,w
  5207  080A  1283               	bcf	3,5	;RP0=0, select bank0
  5208  080B  1303               	bcf	3,6	;RP1=0, select bank0
  5209  080C  07A0               	addwf	___wmul@product,f
  5210  080D  1803               	skipnc
  5211  080E  0AA1               	incf	___wmul@product+1,f
  5212  080F  0876               	movf	___wmul@multiplicand+1,w
  5213  0810  07A1               	addwf	___wmul@product+1,f
  5214  0811                     l425:
  5215  0811  3001               	movlw	1
  5216  0812                     u5925:
  5217  0812  1003               	clrc
  5218  0813  0DF5               	rlf	___wmul@multiplicand,f
  5219  0814  0DF6               	rlf	___wmul@multiplicand+1,f
  5220  0815  3EFF               	addlw	-1
  5221  0816  1D03               	skipz
  5222  0817  2812               	goto	u5925
  5223  0818                     l3731:
  5224  0818  3001               	movlw	1
  5225  0819                     u5935:
  5226  0819  1003               	clrc
  5227  081A  0CF4               	rrf	___wmul@multiplier+1,f
  5228  081B  0CF3               	rrf	___wmul@multiplier,f
  5229  081C  3EFF               	addlw	-1
  5230  081D  1D03               	skipz
  5231  081E  2819               	goto	u5935
  5232  081F                     l3733:
  5233  081F  0873               	movf	___wmul@multiplier,w
  5234  0820  0474               	iorwf	___wmul@multiplier+1,w
  5235  0821  1D03               	btfss	3,2
  5236  0822  2824               	goto	u5941
  5237  0823  2825               	goto	u5940
  5238  0824                     u5941:
  5239  0824  2805               	goto	l3727
  5240  0825                     u5940:
  5241  0825                     l3735:
  5242  0825  1283               	bcf	3,5	;RP0=0, select bank0
  5243  0826  1303               	bcf	3,6	;RP1=0, select bank0
  5244  0827  0821               	movf	___wmul@product+1,w
  5245  0828  00F4               	movwf	?___wmul+1
  5246  0829  0820               	movf	___wmul@product,w
  5247  082A  00F3               	movwf	?___wmul
  5248  082B                     l427:
  5249  082B  0008               	return
  5250  082C                     __end_of___wmul:
  5251                           
  5252                           	psect	text14
  5253  1F93                     __ptext14:	
  5254 ;; *************** function ___lltoft *****************
  5255 ;; Defined at:
  5256 ;;		line 35 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lltoft.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;  c               4    3[BANK0 ] unsigned long 
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;  exp             1    8[BANK0 ] unsigned char 
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  3    3[BANK0 ] float 
  5263 ;; Registers used:
  5264 ;;		wreg, status,2, status,0, pclath, cstack
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5270 ;;      Params:         0       4       0       0       0
  5271 ;;      Locals:         0       1       0       0       0
  5272 ;;      Temps:          0       1       0       0       0
  5273 ;;      Totals:         0       6       0       0       0
  5274 ;;Total ram usage:        6 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:    3
  5277 ;; This function calls:
  5278 ;;		___ftpack
  5279 ;; This function is called by:
  5280 ;;		_aht_GetHumidity
  5281 ;;		_aht_GetTemperature
  5282 ;;		_sprintf
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           
  5287                           ;psect for function ___lltoft
  5288  1F93                     ___lltoft:
  5289  1F93                     l3851:	
  5290                           ;incstack = 0
  5291                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5292                           
  5293  1F93  308E               	movlw	142
  5294  1F94  1283               	bcf	3,5	;RP0=0, select bank0
  5295  1F95  1303               	bcf	3,6	;RP1=0, select bank0
  5296  1F96  00A7               	movwf	??___lltoft
  5297  1F97  0827               	movf	??___lltoft,w
  5298  1F98  00A8               	movwf	___lltoft@exp
  5299  1F99  2FA7               	goto	l3855
  5300  1F9A                     l3853:
  5301  1F9A  3001               	movlw	1
  5302  1F9B                     u6225:
  5303  1F9B  1003               	clrc
  5304  1F9C  0CA6               	rrf	___lltoft@c+3,f
  5305  1F9D  0CA5               	rrf	___lltoft@c+2,f
  5306  1F9E  0CA4               	rrf	___lltoft@c+1,f
  5307  1F9F  0CA3               	rrf	___lltoft@c,f
  5308  1FA0  3EFF               	addlw	-1
  5309  1FA1  1D03               	skipz
  5310  1FA2  2F9B               	goto	u6225
  5311  1FA3  3001               	movlw	1
  5312  1FA4  00A7               	movwf	??___lltoft
  5313  1FA5  0827               	movf	??___lltoft,w
  5314  1FA6  07A8               	addwf	___lltoft@exp,f
  5315  1FA7                     l3855:
  5316  1FA7  30FF               	movlw	255
  5317  1FA8  0526               	andwf	___lltoft@c+3,w
  5318  1FA9  1D03               	btfss	3,2
  5319  1FAA  2FAC               	goto	u6231
  5320  1FAB  2FAD               	goto	u6230
  5321  1FAC                     u6231:
  5322  1FAC  2F9A               	goto	l3853
  5323  1FAD                     u6230:
  5324  1FAD                     l3857:
  5325  1FAD  0823               	movf	___lltoft@c,w
  5326  1FAE  00F3               	movwf	___ftpack@arg
  5327  1FAF  0824               	movf	___lltoft@c+1,w
  5328  1FB0  00F4               	movwf	___ftpack@arg+1
  5329  1FB1  0825               	movf	___lltoft@c+2,w
  5330  1FB2  00F5               	movwf	___ftpack@arg+2
  5331  1FB3  0828               	movf	___lltoft@exp,w
  5332  1FB4  00A7               	movwf	??___lltoft
  5333  1FB5  0827               	movf	??___lltoft,w
  5334  1FB6  00F6               	movwf	___ftpack@exp
  5335  1FB7  01F7               	clrf	___ftpack@sign
  5336  1FB8  160A  118A  2302  160A  158A  	fcall	___ftpack
  5337  1FBD  0873               	movf	?___ftpack,w
  5338  1FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5339  1FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5340  1FC0  00A3               	movwf	?___lltoft
  5341  1FC1  0874               	movf	?___ftpack+1,w
  5342  1FC2  00A4               	movwf	?___lltoft+1
  5343  1FC3  0875               	movf	?___ftpack+2,w
  5344  1FC4  00A5               	movwf	?___lltoft+2
  5345  1FC5                     l804:
  5346  1FC5  0008               	return
  5347  1FC6                     __end_of___lltoft:
  5348                           
  5349                           	psect	text15
  5350  1180                     __ptext15:	
  5351 ;; *************** function ___llmod *****************
  5352 ;; Defined at:
  5353 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\llmod.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;  divisor         4    0[BANK0 ] unsigned long 
  5356 ;;  dividend        4    4[BANK0 ] unsigned long 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  counter         1    4[COMMON] unsigned char 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  4    0[BANK0 ] unsigned long 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5368 ;;      Params:         0       8       0       0       0
  5369 ;;      Locals:         1       0       0       0       0
  5370 ;;      Temps:          1       0       0       0       0
  5371 ;;      Totals:         2       8       0       0       0
  5372 ;;Total ram usage:       10 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    2
  5375 ;; This function calls:
  5376 ;;		Nothing
  5377 ;; This function is called by:
  5378 ;;		_sprintf
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           
  5383                           ;psect for function ___llmod
  5384  1180                     ___llmod:
  5385  1180                     l3831:	
  5386                           ;incstack = 0
  5387                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5388                           
  5389  1180  1283               	bcf	3,5	;RP0=0, select bank0
  5390  1181  1303               	bcf	3,6	;RP1=0, select bank0
  5391  1182  0823               	movf	___llmod@divisor+3,w
  5392  1183  0422               	iorwf	___llmod@divisor+2,w
  5393  1184  0421               	iorwf	___llmod@divisor+1,w
  5394  1185  0420               	iorwf	___llmod@divisor,w
  5395  1186  1903               	skipnz
  5396  1187  2989               	goto	u6161
  5397  1188  298A               	goto	u6160
  5398  1189                     u6161:
  5399  1189  29CD               	goto	l3847
  5400  118A                     u6160:
  5401  118A                     l3833:
  5402  118A  01F4               	clrf	___llmod@counter
  5403  118B  0AF4               	incf	___llmod@counter,f
  5404  118C  299A               	goto	l3837
  5405  118D                     l3835:
  5406  118D  3001               	movlw	1
  5407  118E  00F3               	movwf	??___llmod
  5408  118F                     u6175:
  5409  118F  1003               	clrc
  5410  1190  0DA0               	rlf	___llmod@divisor,f
  5411  1191  0DA1               	rlf	___llmod@divisor+1,f
  5412  1192  0DA2               	rlf	___llmod@divisor+2,f
  5413  1193  0DA3               	rlf	___llmod@divisor+3,f
  5414  1194  0BF3               	decfsz	??___llmod,f
  5415  1195  298F               	goto	u6175
  5416  1196  3001               	movlw	1
  5417  1197  00F3               	movwf	??___llmod
  5418  1198  0873               	movf	??___llmod,w
  5419  1199  07F4               	addwf	___llmod@counter,f
  5420  119A                     l3837:
  5421  119A  1FA3               	btfss	___llmod@divisor+3,7
  5422  119B  299D               	goto	u6181
  5423  119C  299E               	goto	u6180
  5424  119D                     u6181:
  5425  119D  298D               	goto	l3835
  5426  119E                     u6180:
  5427  119E                     l3839:
  5428  119E  0823               	movf	___llmod@divisor+3,w
  5429  119F  0227               	subwf	___llmod@dividend+3,w
  5430  11A0  1D03               	skipz
  5431  11A1  29AC               	goto	u6195
  5432  11A2  0822               	movf	___llmod@divisor+2,w
  5433  11A3  0226               	subwf	___llmod@dividend+2,w
  5434  11A4  1D03               	skipz
  5435  11A5  29AC               	goto	u6195
  5436  11A6  0821               	movf	___llmod@divisor+1,w
  5437  11A7  0225               	subwf	___llmod@dividend+1,w
  5438  11A8  1D03               	skipz
  5439  11A9  29AC               	goto	u6195
  5440  11AA  0820               	movf	___llmod@divisor,w
  5441  11AB  0224               	subwf	___llmod@dividend,w
  5442  11AC                     u6195:
  5443  11AC  1C03               	skipc
  5444  11AD  29AF               	goto	u6191
  5445  11AE  29B0               	goto	u6190
  5446  11AF                     u6191:
  5447  11AF  29BE               	goto	l3843
  5448  11B0                     u6190:
  5449  11B0                     l3841:
  5450  11B0  0820               	movf	___llmod@divisor,w
  5451  11B1  02A4               	subwf	___llmod@dividend,f
  5452  11B2  0821               	movf	___llmod@divisor+1,w
  5453  11B3  1C03               	skipc
  5454  11B4  0F21               	incfsz	___llmod@divisor+1,w
  5455  11B5  02A5               	subwf	___llmod@dividend+1,f
  5456  11B6  0822               	movf	___llmod@divisor+2,w
  5457  11B7  1C03               	skipc
  5458  11B8  0F22               	incfsz	___llmod@divisor+2,w
  5459  11B9  02A6               	subwf	___llmod@dividend+2,f
  5460  11BA  0823               	movf	___llmod@divisor+3,w
  5461  11BB  1C03               	skipc
  5462  11BC  0F23               	incfsz	___llmod@divisor+3,w
  5463  11BD  02A7               	subwf	___llmod@dividend+3,f
  5464  11BE                     l3843:
  5465  11BE  3001               	movlw	1
  5466  11BF                     u6205:
  5467  11BF  1003               	clrc
  5468  11C0  0CA3               	rrf	___llmod@divisor+3,f
  5469  11C1  0CA2               	rrf	___llmod@divisor+2,f
  5470  11C2  0CA1               	rrf	___llmod@divisor+1,f
  5471  11C3  0CA0               	rrf	___llmod@divisor,f
  5472  11C4  3EFF               	addlw	-1
  5473  11C5  1D03               	skipz
  5474  11C6  29BF               	goto	u6205
  5475  11C7                     l3845:
  5476  11C7  3001               	movlw	1
  5477  11C8  02F4               	subwf	___llmod@counter,f
  5478  11C9  1D03               	btfss	3,2
  5479  11CA  29CC               	goto	u6211
  5480  11CB  29CD               	goto	u6210
  5481  11CC                     u6211:
  5482  11CC  299E               	goto	l3839
  5483  11CD                     u6210:
  5484  11CD                     l3847:
  5485  11CD  0827               	movf	___llmod@dividend+3,w
  5486  11CE  00A3               	movwf	?___llmod+3
  5487  11CF  0826               	movf	___llmod@dividend+2,w
  5488  11D0  00A2               	movwf	?___llmod+2
  5489  11D1  0825               	movf	___llmod@dividend+1,w
  5490  11D2  00A1               	movwf	?___llmod+1
  5491  11D3  0824               	movf	___llmod@dividend,w
  5492  11D4  00A0               	movwf	?___llmod
  5493  11D5                     l796:
  5494  11D5  0008               	return
  5495  11D6                     __end_of___llmod:
  5496                           
  5497                           	psect	text16
  5498  1384                     __ptext16:	
  5499 ;; *************** function ___fttol *****************
  5500 ;; Defined at:
  5501 ;;		line 44 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\fttol.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  f1              3   40[BANK0 ] float 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  lval            4   49[BANK0 ] unsigned long 
  5506 ;;  exp1            1   53[BANK0 ] unsigned char 
  5507 ;;  sign1           1   48[BANK0 ] unsigned char 
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  4   40[BANK0 ] long 
  5510 ;; Registers used:
  5511 ;;		wreg, status,2, status,0
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5517 ;;      Params:         0       4       0       0       0
  5518 ;;      Locals:         0       6       0       0       0
  5519 ;;      Temps:          0       4       0       0       0
  5520 ;;      Totals:         0      14       0       0       0
  5521 ;;Total ram usage:       14 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; Hardware stack levels required when called:    2
  5524 ;; This function calls:
  5525 ;;		Nothing
  5526 ;; This function is called by:
  5527 ;;		_sprintf
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           
  5532                           ;psect for function ___fttol
  5533  1384                     ___fttol:
  5534  1384                     l2689:	
  5535                           ;incstack = 0
  5536                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5537                           
  5538  1384  1283               	bcf	3,5	;RP0=0, select bank0
  5539  1385  1303               	bcf	3,6	;RP1=0, select bank0
  5540  1386  0848               	movf	___fttol@f1,w
  5541  1387  00CC               	movwf	??___fttol
  5542  1388  0849               	movf	___fttol@f1+1,w
  5543  1389  00CD               	movwf	??___fttol+1
  5544  138A  084A               	movf	___fttol@f1+2,w
  5545  138B  00CE               	movwf	??___fttol+2
  5546  138C  1003               	clrc
  5547  138D  0D4D               	rlf	??___fttol+1,w
  5548  138E  0D4E               	rlf	??___fttol+2,w
  5549  138F  00CF               	movwf	??___fttol+3
  5550  1390  084F               	movf	??___fttol+3,w
  5551  1391  00D5               	movwf	___fttol@exp1
  5552  1392  0855               	movf	___fttol@exp1,w
  5553  1393  1D03               	btfss	3,2
  5554  1394  2B96               	goto	u3831
  5555  1395  2B97               	goto	u3830
  5556  1396                     u3831:
  5557  1396  2BA0               	goto	l2695
  5558  1397                     u3830:
  5559  1397                     l2691:
  5560  1397  3000               	movlw	0
  5561  1398  00CB               	movwf	?___fttol+3
  5562  1399  3000               	movlw	0
  5563  139A  00CA               	movwf	?___fttol+2
  5564  139B  3000               	movlw	0
  5565  139C  00C9               	movwf	?___fttol+1
  5566  139D  3000               	movlw	0
  5567  139E  00C8               	movwf	?___fttol
  5568  139F  2C0F               	goto	l755
  5569  13A0                     l2695:
  5570  13A0  0848               	movf	___fttol@f1,w
  5571  13A1  00CC               	movwf	??___fttol
  5572  13A2  0849               	movf	___fttol@f1+1,w
  5573  13A3  00CD               	movwf	??___fttol+1
  5574  13A4  084A               	movf	___fttol@f1+2,w
  5575  13A5  00CE               	movwf	??___fttol+2
  5576  13A6  3017               	movlw	23
  5577  13A7                     u3845:
  5578  13A7  1003               	clrc
  5579  13A8  0CCE               	rrf	??___fttol+2,f
  5580  13A9  0CCD               	rrf	??___fttol+1,f
  5581  13AA  0CCC               	rrf	??___fttol,f
  5582  13AB                     u3840:
  5583  13AB  3EFF               	addlw	-1
  5584  13AC  1D03               	skipz
  5585  13AD  2BA7               	goto	u3845
  5586  13AE  084C               	movf	??___fttol,w
  5587  13AF  00CF               	movwf	??___fttol+3
  5588  13B0  084F               	movf	??___fttol+3,w
  5589  13B1  00D0               	movwf	___fttol@sign1
  5590  13B2                     l2697:
  5591  13B2  17C9               	bsf	___fttol@f1+1,7
  5592  13B3                     l2699:
  5593  13B3  30FF               	movlw	255
  5594  13B4  05C8               	andwf	___fttol@f1,f
  5595  13B5  30FF               	movlw	255
  5596  13B6  05C9               	andwf	___fttol@f1+1,f
  5597  13B7  3000               	movlw	0
  5598  13B8  05CA               	andwf	___fttol@f1+2,f
  5599  13B9                     l2701:
  5600  13B9  0848               	movf	___fttol@f1,w
  5601  13BA  00D1               	movwf	___fttol@lval
  5602  13BB  0849               	movf	___fttol@f1+1,w
  5603  13BC  00D2               	movwf	___fttol@lval+1
  5604  13BD  084A               	movf	___fttol@f1+2,w
  5605  13BE  00D3               	movwf	___fttol@lval+2
  5606  13BF  01D4               	clrf	___fttol@lval+3
  5607  13C0                     l2703:
  5608  13C0  308E               	movlw	142
  5609  13C1  02D5               	subwf	___fttol@exp1,f
  5610  13C2                     l2705:
  5611  13C2  1FD5               	btfss	___fttol@exp1,7
  5612  13C3  2BC5               	goto	u3851
  5613  13C4  2BC6               	goto	u3850
  5614  13C5                     u3851:
  5615  13C5  2BE0               	goto	l2715
  5616  13C6                     u3850:
  5617  13C6                     l2707:
  5618  13C6  0855               	movf	___fttol@exp1,w
  5619  13C7  3A80               	xorlw	128
  5620  13C8  3E8F               	addlw	143
  5621  13C9  1803               	skipnc
  5622  13CA  2BCC               	goto	u3861
  5623  13CB  2BCD               	goto	u3860
  5624  13CC                     u3861:
  5625  13CC  2BCE               	goto	l2713
  5626  13CD                     u3860:
  5627  13CD  2B97               	goto	l2691
  5628  13CE                     l2713:
  5629  13CE  3001               	movlw	1
  5630  13CF                     u3875:
  5631  13CF  1003               	clrc
  5632  13D0  0CD4               	rrf	___fttol@lval+3,f
  5633  13D1  0CD3               	rrf	___fttol@lval+2,f
  5634  13D2  0CD2               	rrf	___fttol@lval+1,f
  5635  13D3  0CD1               	rrf	___fttol@lval,f
  5636  13D4  3EFF               	addlw	-1
  5637  13D5  1D03               	skipz
  5638  13D6  2BCF               	goto	u3875
  5639  13D7  3001               	movlw	1
  5640  13D8  00CC               	movwf	??___fttol
  5641  13D9  084C               	movf	??___fttol,w
  5642  13DA  07D5               	addwf	___fttol@exp1,f
  5643  13DB  1D03               	btfss	3,2
  5644  13DC  2BDE               	goto	u3881
  5645  13DD  2BDF               	goto	u3880
  5646  13DE                     u3881:
  5647  13DE  2BCE               	goto	l2713
  5648  13DF                     u3880:
  5649  13DF  2BF7               	goto	l2723
  5650  13E0                     l2715:
  5651  13E0  3018               	movlw	24
  5652  13E1  0255               	subwf	___fttol@exp1,w
  5653  13E2  1C03               	skipc
  5654  13E3  2BE5               	goto	u3891
  5655  13E4  2BE6               	goto	u3890
  5656  13E5                     u3891:
  5657  13E5  2BF2               	goto	l762
  5658  13E6                     u3890:
  5659  13E6  2B97               	goto	l2691
  5660  13E7                     l2721:
  5661  13E7  3001               	movlw	1
  5662  13E8  00CC               	movwf	??___fttol
  5663  13E9                     u3905:
  5664  13E9  1003               	clrc
  5665  13EA  0DD1               	rlf	___fttol@lval,f
  5666  13EB  0DD2               	rlf	___fttol@lval+1,f
  5667  13EC  0DD3               	rlf	___fttol@lval+2,f
  5668  13ED  0DD4               	rlf	___fttol@lval+3,f
  5669  13EE  0BCC               	decfsz	??___fttol,f
  5670  13EF  2BE9               	goto	u3905
  5671  13F0  3001               	movlw	1
  5672  13F1  02D5               	subwf	___fttol@exp1,f
  5673  13F2                     l762:
  5674  13F2  0855               	movf	___fttol@exp1,w
  5675  13F3  1D03               	btfss	3,2
  5676  13F4  2BF6               	goto	u3911
  5677  13F5  2BF7               	goto	u3910
  5678  13F6                     u3911:
  5679  13F6  2BE7               	goto	l2721
  5680  13F7                     u3910:
  5681  13F7                     l2723:
  5682  13F7  0850               	movf	___fttol@sign1,w
  5683  13F8  1903               	btfsc	3,2
  5684  13F9  2BFB               	goto	u3921
  5685  13FA  2BFC               	goto	u3920
  5686  13FB                     u3921:
  5687  13FB  2C07               	goto	l2727
  5688  13FC                     u3920:
  5689  13FC                     l2725:
  5690  13FC  09D1               	comf	___fttol@lval,f
  5691  13FD  09D2               	comf	___fttol@lval+1,f
  5692  13FE  09D3               	comf	___fttol@lval+2,f
  5693  13FF  09D4               	comf	___fttol@lval+3,f
  5694  1400  0AD1               	incf	___fttol@lval,f
  5695  1401  1903               	skipnz
  5696  1402  0AD2               	incf	___fttol@lval+1,f
  5697  1403  1903               	skipnz
  5698  1404  0AD3               	incf	___fttol@lval+2,f
  5699  1405  1903               	skipnz
  5700  1406  0AD4               	incf	___fttol@lval+3,f
  5701  1407                     l2727:
  5702  1407  0854               	movf	___fttol@lval+3,w
  5703  1408  00CB               	movwf	?___fttol+3
  5704  1409  0853               	movf	___fttol@lval+2,w
  5705  140A  00CA               	movwf	?___fttol+2
  5706  140B  0852               	movf	___fttol@lval+1,w
  5707  140C  00C9               	movwf	?___fttol+1
  5708  140D  0851               	movf	___fttol@lval,w
  5709  140E  00C8               	movwf	?___fttol
  5710  140F                     l755:
  5711  140F  0008               	return
  5712  1410                     __end_of___fttol:
  5713                           
  5714                           	psect	text17
  5715  1F43                     __ptext17:	
  5716 ;; *************** function ___ftsub *****************
  5717 ;; Defined at:
  5718 ;;		line 17 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftsub.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  f2              3   60[BANK0 ] float 
  5721 ;;  f1              3   63[BANK0 ] float 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  3   60[BANK0 ] float 
  5726 ;; Registers used:
  5727 ;;		wreg, status,2, status,0, pclath, cstack
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5733 ;;      Params:         0       6       0       0       0
  5734 ;;      Locals:         0       0       0       0       0
  5735 ;;      Temps:          0       0       0       0       0
  5736 ;;      Totals:         0       6       0       0       0
  5737 ;;Total ram usage:        6 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    4
  5740 ;; This function calls:
  5741 ;;		___ftadd
  5742 ;; This function is called by:
  5743 ;;		_sprintf
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           
  5748                           ;psect for function ___ftsub
  5749  1F43                     ___ftsub:
  5750  1F43                     l3823:	
  5751                           ;incstack = 0
  5752                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5753                           
  5754  1F43  1283               	bcf	3,5	;RP0=0, select bank0
  5755  1F44  1303               	bcf	3,6	;RP1=0, select bank0
  5756  1F45  085E               	movf	___ftsub@f2+2,w
  5757  1F46  045D               	iorwf	___ftsub@f2+1,w
  5758  1F47  045C               	iorwf	___ftsub@f2,w
  5759  1F48  1903               	skipnz
  5760  1F49  2F4B               	goto	u6151
  5761  1F4A  2F4C               	goto	u6150
  5762  1F4B                     u6151:
  5763  1F4B  2F4E               	goto	l3827
  5764  1F4C                     u6150:
  5765  1F4C                     l3825:
  5766  1F4C  3080               	movlw	128
  5767  1F4D  06DE               	xorwf	___ftsub@f2+2,f
  5768  1F4E                     l3827:
  5769  1F4E  085F               	movf	___ftsub@f1,w
  5770  1F4F  00CF               	movwf	___ftadd@f1
  5771  1F50  0860               	movf	___ftsub@f1+1,w
  5772  1F51  00D0               	movwf	___ftadd@f1+1
  5773  1F52  0861               	movf	___ftsub@f1+2,w
  5774  1F53  00D1               	movwf	___ftadd@f1+2
  5775  1F54  085C               	movf	___ftsub@f2,w
  5776  1F55  00D2               	movwf	___ftadd@f2
  5777  1F56  085D               	movf	___ftsub@f2+1,w
  5778  1F57  00D3               	movwf	___ftadd@f2+1
  5779  1F58  085E               	movf	___ftsub@f2+2,w
  5780  1F59  00D4               	movwf	___ftadd@f2+2
  5781  1F5A  120A  158A  2111  160A  158A  	fcall	___ftadd
  5782  1F5F  1283               	bcf	3,5	;RP0=0, select bank0
  5783  1F60  1303               	bcf	3,6	;RP1=0, select bank0
  5784  1F61  084F               	movf	?___ftadd,w
  5785  1F62  00DC               	movwf	?___ftsub
  5786  1F63  0850               	movf	?___ftadd+1,w
  5787  1F64  00DD               	movwf	?___ftsub+1
  5788  1F65  0851               	movf	?___ftadd+2,w
  5789  1F66  00DE               	movwf	?___ftsub+2
  5790  1F67                     l751:
  5791  1F67  0008               	return
  5792  1F68                     __end_of___ftsub:
  5793                           
  5794                           	psect	text18
  5795  0911                     __ptext18:	
  5796 ;; *************** function ___ftadd *****************
  5797 ;; Defined at:
  5798 ;;		line 86 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftadd.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  f1              3   47[BANK0 ] float 
  5801 ;;  f2              3   50[BANK0 ] float 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  exp1            1   59[BANK0 ] unsigned char 
  5804 ;;  exp2            1   58[BANK0 ] unsigned char 
  5805 ;;  sign            1   57[BANK0 ] unsigned char 
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  3   47[BANK0 ] float 
  5808 ;; Registers used:
  5809 ;;		wreg, status,2, status,0, pclath, cstack
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5815 ;;      Params:         0       6       0       0       0
  5816 ;;      Locals:         0       3       0       0       0
  5817 ;;      Temps:          0       4       0       0       0
  5818 ;;      Totals:         0      13       0       0       0
  5819 ;;Total ram usage:       13 bytes
  5820 ;; Hardware stack levels used:    1
  5821 ;; Hardware stack levels required when called:    3
  5822 ;; This function calls:
  5823 ;;		___ftpack
  5824 ;; This function is called by:
  5825 ;;		_aht_GetTemperature
  5826 ;;		_sprintf
  5827 ;;		___ftsub
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           
  5832                           ;psect for function ___ftadd
  5833  0911                     ___ftadd:
  5834  0911                     l3391:	
  5835                           ;incstack = 0
  5836                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5837                           
  5838  0911  1283               	bcf	3,5	;RP0=0, select bank0
  5839  0912  1303               	bcf	3,6	;RP1=0, select bank0
  5840  0913  084F               	movf	___ftadd@f1,w
  5841  0914  00D5               	movwf	??___ftadd
  5842  0915  0850               	movf	___ftadd@f1+1,w
  5843  0916  00D6               	movwf	??___ftadd+1
  5844  0917  0851               	movf	___ftadd@f1+2,w
  5845  0918  00D7               	movwf	??___ftadd+2
  5846  0919  1003               	clrc
  5847  091A  0D56               	rlf	??___ftadd+1,w
  5848  091B  0D57               	rlf	??___ftadd+2,w
  5849  091C  00D8               	movwf	??___ftadd+3
  5850  091D  0858               	movf	??___ftadd+3,w
  5851  091E  00DB               	movwf	___ftadd@exp1
  5852  091F  0852               	movf	___ftadd@f2,w
  5853  0920  00D5               	movwf	??___ftadd
  5854  0921  0853               	movf	___ftadd@f2+1,w
  5855  0922  00D6               	movwf	??___ftadd+1
  5856  0923  0854               	movf	___ftadd@f2+2,w
  5857  0924  00D7               	movwf	??___ftadd+2
  5858  0925  1003               	clrc
  5859  0926  0D56               	rlf	??___ftadd+1,w
  5860  0927  0D57               	rlf	??___ftadd+2,w
  5861  0928  00D8               	movwf	??___ftadd+3
  5862  0929  0858               	movf	??___ftadd+3,w
  5863  092A  00DA               	movwf	___ftadd@exp2
  5864  092B  085B               	movf	___ftadd@exp1,w
  5865  092C  1903               	btfsc	3,2
  5866  092D  292F               	goto	u5081
  5867  092E  2930               	goto	u5080
  5868  092F                     u5081:
  5869  092F  2940               	goto	l3397
  5870  0930                     u5080:
  5871  0930                     l3393:
  5872  0930  085A               	movf	___ftadd@exp2,w
  5873  0931  025B               	subwf	___ftadd@exp1,w
  5874  0932  1803               	skipnc
  5875  0933  2935               	goto	u5091
  5876  0934  2936               	goto	u5090
  5877  0935                     u5091:
  5878  0935  2947               	goto	l3401
  5879  0936                     u5090:
  5880  0936                     l3395:
  5881  0936  085A               	movf	___ftadd@exp2,w
  5882  0937  00D5               	movwf	??___ftadd
  5883  0938  085B               	movf	___ftadd@exp1,w
  5884  0939  02D5               	subwf	??___ftadd,f
  5885  093A  3019               	movlw	25
  5886  093B  0255               	subwf	??___ftadd,w
  5887  093C  1C03               	skipc
  5888  093D  293F               	goto	u5101
  5889  093E  2940               	goto	u5100
  5890  093F                     u5101:
  5891  093F  2947               	goto	l3401
  5892  0940                     u5100:
  5893  0940                     l3397:
  5894  0940  0852               	movf	___ftadd@f2,w
  5895  0941  00CF               	movwf	?___ftadd
  5896  0942  0853               	movf	___ftadd@f2+1,w
  5897  0943  00D0               	movwf	?___ftadd+1
  5898  0944  0854               	movf	___ftadd@f2+2,w
  5899  0945  00D1               	movwf	?___ftadd+2
  5900  0946  2A46               	goto	l671
  5901  0947                     l3401:
  5902  0947  085A               	movf	___ftadd@exp2,w
  5903  0948  1903               	btfsc	3,2
  5904  0949  294B               	goto	u5111
  5905  094A  294C               	goto	u5110
  5906  094B                     u5111:
  5907  094B  295C               	goto	l674
  5908  094C                     u5110:
  5909  094C                     l3403:
  5910  094C  085B               	movf	___ftadd@exp1,w
  5911  094D  025A               	subwf	___ftadd@exp2,w
  5912  094E  1803               	skipnc
  5913  094F  2951               	goto	u5121
  5914  0950  2952               	goto	u5120
  5915  0951                     u5121:
  5916  0951  295D               	goto	l3407
  5917  0952                     u5120:
  5918  0952                     l3405:
  5919  0952  085B               	movf	___ftadd@exp1,w
  5920  0953  00D5               	movwf	??___ftadd
  5921  0954  085A               	movf	___ftadd@exp2,w
  5922  0955  02D5               	subwf	??___ftadd,f
  5923  0956  3019               	movlw	25
  5924  0957  0255               	subwf	??___ftadd,w
  5925  0958  1C03               	skipc
  5926  0959  295B               	goto	u5131
  5927  095A  295C               	goto	u5130
  5928  095B                     u5131:
  5929  095B  295D               	goto	l3407
  5930  095C                     u5130:
  5931  095C                     l674:
  5932  095C  2A46               	goto	l671
  5933  095D                     l3407:
  5934  095D  3006               	movlw	6
  5935  095E  00D5               	movwf	??___ftadd
  5936  095F  0855               	movf	??___ftadd,w
  5937  0960  00D9               	movwf	___ftadd@sign
  5938  0961                     l3409:
  5939  0961  1FD1               	btfss	___ftadd@f1+2,7
  5940  0962  2964               	goto	u5141
  5941  0963  2965               	goto	u5140
  5942  0964                     u5141:
  5943  0964  2966               	goto	l675
  5944  0965                     u5140:
  5945  0965                     l3411:
  5946  0965  17D9               	bsf	___ftadd@sign,7
  5947  0966                     l675:
  5948  0966  1FD4               	btfss	___ftadd@f2+2,7
  5949  0967  2969               	goto	u5151
  5950  0968  296A               	goto	u5150
  5951  0969                     u5151:
  5952  0969  296B               	goto	l676
  5953  096A                     u5150:
  5954  096A                     l3413:
  5955  096A  1759               	bsf	___ftadd@sign,6
  5956  096B                     l676:
  5957  096B  17D0               	bsf	___ftadd@f1+1,7
  5958  096C                     l3415:
  5959  096C  30FF               	movlw	255
  5960  096D  05CF               	andwf	___ftadd@f1,f
  5961  096E  30FF               	movlw	255
  5962  096F  05D0               	andwf	___ftadd@f1+1,f
  5963  0970  3000               	movlw	0
  5964  0971  05D1               	andwf	___ftadd@f1+2,f
  5965  0972                     l3417:
  5966  0972  17D3               	bsf	___ftadd@f2+1,7
  5967  0973  30FF               	movlw	255
  5968  0974  05D2               	andwf	___ftadd@f2,f
  5969  0975  30FF               	movlw	255
  5970  0976  05D3               	andwf	___ftadd@f2+1,f
  5971  0977  3000               	movlw	0
  5972  0978  05D4               	andwf	___ftadd@f2+2,f
  5973  0979  085A               	movf	___ftadd@exp2,w
  5974  097A  025B               	subwf	___ftadd@exp1,w
  5975  097B  1803               	skipnc
  5976  097C  297E               	goto	u5161
  5977  097D  297F               	goto	u5160
  5978  097E                     u5161:
  5979  097E  29AB               	goto	l3429
  5980  097F                     u5160:
  5981  097F                     l3419:
  5982  097F  3001               	movlw	1
  5983  0980                     u5175:
  5984  0980  1003               	clrc
  5985  0981  0DD2               	rlf	___ftadd@f2,f
  5986  0982  0DD3               	rlf	___ftadd@f2+1,f
  5987  0983  0DD4               	rlf	___ftadd@f2+2,f
  5988  0984  3EFF               	addlw	-1
  5989  0985  1D03               	skipz
  5990  0986  2980               	goto	u5175
  5991  0987  3001               	movlw	1
  5992  0988  02DA               	subwf	___ftadd@exp2,f
  5993  0989                     l3421:
  5994  0989  085A               	movf	___ftadd@exp2,w
  5995  098A  065B               	xorwf	___ftadd@exp1,w
  5996  098B  1903               	skipnz
  5997  098C  298E               	goto	u5181
  5998  098D  298F               	goto	u5180
  5999  098E                     u5181:
  6000  098E  29A4               	goto	l3427
  6001  098F                     u5180:
  6002  098F                     l3423:
  6003  098F  3001               	movlw	1
  6004  0990  02D9               	subwf	___ftadd@sign,f
  6005  0991  0859               	movf	___ftadd@sign,w
  6006  0992  3907               	andlw	7
  6007  0993  1D03               	btfss	3,2
  6008  0994  2996               	goto	u5191
  6009  0995  2997               	goto	u5190
  6010  0996                     u5191:
  6011  0996  297F               	goto	l3419
  6012  0997                     u5190:
  6013  0997  29A4               	goto	l3427
  6014  0998                     l3425:
  6015  0998  3001               	movlw	1
  6016  0999                     u5205:
  6017  0999  1003               	clrc
  6018  099A  0CD1               	rrf	___ftadd@f1+2,f
  6019  099B  0CD0               	rrf	___ftadd@f1+1,f
  6020  099C  0CCF               	rrf	___ftadd@f1,f
  6021  099D  3EFF               	addlw	-1
  6022  099E  1D03               	skipz
  6023  099F  2999               	goto	u5205
  6024  09A0  3001               	movlw	1
  6025  09A1  00D5               	movwf	??___ftadd
  6026  09A2  0855               	movf	??___ftadd,w
  6027  09A3  07DB               	addwf	___ftadd@exp1,f
  6028  09A4                     l3427:
  6029  09A4  085B               	movf	___ftadd@exp1,w
  6030  09A5  065A               	xorwf	___ftadd@exp2,w
  6031  09A6  1D03               	skipz
  6032  09A7  29A9               	goto	u5211
  6033  09A8  29AA               	goto	u5210
  6034  09A9                     u5211:
  6035  09A9  2998               	goto	l3425
  6036  09AA                     u5210:
  6037  09AA  29DC               	goto	l685
  6038  09AB                     l3429:
  6039  09AB  085B               	movf	___ftadd@exp1,w
  6040  09AC  025A               	subwf	___ftadd@exp2,w
  6041  09AD  1803               	skipnc
  6042  09AE  29B0               	goto	u5221
  6043  09AF  29B1               	goto	u5220
  6044  09B0                     u5221:
  6045  09B0  29DC               	goto	l685
  6046  09B1                     u5220:
  6047  09B1                     l3431:
  6048  09B1  3001               	movlw	1
  6049  09B2                     u5235:
  6050  09B2  1003               	clrc
  6051  09B3  0DCF               	rlf	___ftadd@f1,f
  6052  09B4  0DD0               	rlf	___ftadd@f1+1,f
  6053  09B5  0DD1               	rlf	___ftadd@f1+2,f
  6054  09B6  3EFF               	addlw	-1
  6055  09B7  1D03               	skipz
  6056  09B8  29B2               	goto	u5235
  6057  09B9  3001               	movlw	1
  6058  09BA  02DB               	subwf	___ftadd@exp1,f
  6059  09BB                     l3433:
  6060  09BB  085A               	movf	___ftadd@exp2,w
  6061  09BC  065B               	xorwf	___ftadd@exp1,w
  6062  09BD  1903               	skipnz
  6063  09BE  29C0               	goto	u5241
  6064  09BF  29C1               	goto	u5240
  6065  09C0                     u5241:
  6066  09C0  29D6               	goto	l3439
  6067  09C1                     u5240:
  6068  09C1                     l3435:
  6069  09C1  3001               	movlw	1
  6070  09C2  02D9               	subwf	___ftadd@sign,f
  6071  09C3  0859               	movf	___ftadd@sign,w
  6072  09C4  3907               	andlw	7
  6073  09C5  1D03               	btfss	3,2
  6074  09C6  29C8               	goto	u5251
  6075  09C7  29C9               	goto	u5250
  6076  09C8                     u5251:
  6077  09C8  29B1               	goto	l3431
  6078  09C9                     u5250:
  6079  09C9  29D6               	goto	l3439
  6080  09CA                     l3437:
  6081  09CA  3001               	movlw	1
  6082  09CB                     u5265:
  6083  09CB  1003               	clrc
  6084  09CC  0CD4               	rrf	___ftadd@f2+2,f
  6085  09CD  0CD3               	rrf	___ftadd@f2+1,f
  6086  09CE  0CD2               	rrf	___ftadd@f2,f
  6087  09CF  3EFF               	addlw	-1
  6088  09D0  1D03               	skipz
  6089  09D1  29CB               	goto	u5265
  6090  09D2  3001               	movlw	1
  6091  09D3  00D5               	movwf	??___ftadd
  6092  09D4  0855               	movf	??___ftadd,w
  6093  09D5  07DA               	addwf	___ftadd@exp2,f
  6094  09D6                     l3439:
  6095  09D6  085B               	movf	___ftadd@exp1,w
  6096  09D7  065A               	xorwf	___ftadd@exp2,w
  6097  09D8  1D03               	skipz
  6098  09D9  29DB               	goto	u5271
  6099  09DA  29DC               	goto	u5270
  6100  09DB                     u5271:
  6101  09DB  29CA               	goto	l3437
  6102  09DC                     u5270:
  6103  09DC                     l685:
  6104  09DC  1FD9               	btfss	___ftadd@sign,7
  6105  09DD  29DF               	goto	u5281
  6106  09DE  29E0               	goto	u5280
  6107  09DF                     u5281:
  6108  09DF  29F0               	goto	l3443
  6109  09E0                     u5280:
  6110  09E0                     l3441:
  6111  09E0  30FF               	movlw	255
  6112  09E1  06CF               	xorwf	___ftadd@f1,f
  6113  09E2  30FF               	movlw	255
  6114  09E3  06D0               	xorwf	___ftadd@f1+1,f
  6115  09E4  30FF               	movlw	255
  6116  09E5  06D1               	xorwf	___ftadd@f1+2,f
  6117  09E6  3001               	movlw	1
  6118  09E7  07CF               	addwf	___ftadd@f1,f
  6119  09E8  3000               	movlw	0
  6120  09E9  1803               	skipnc
  6121  09EA  3001               	movlw	1
  6122  09EB  07D0               	addwf	___ftadd@f1+1,f
  6123  09EC  3000               	movlw	0
  6124  09ED  1803               	skipnc
  6125  09EE  3001               	movlw	1
  6126  09EF  07D1               	addwf	___ftadd@f1+2,f
  6127  09F0                     l3443:
  6128  09F0  1F59               	btfss	___ftadd@sign,6
  6129  09F1  29F3               	goto	u5291
  6130  09F2  29F4               	goto	u5290
  6131  09F3                     u5291:
  6132  09F3  2A04               	goto	l3447
  6133  09F4                     u5290:
  6134  09F4                     l3445:
  6135  09F4  30FF               	movlw	255
  6136  09F5  06D2               	xorwf	___ftadd@f2,f
  6137  09F6  30FF               	movlw	255
  6138  09F7  06D3               	xorwf	___ftadd@f2+1,f
  6139  09F8  30FF               	movlw	255
  6140  09F9  06D4               	xorwf	___ftadd@f2+2,f
  6141  09FA  3001               	movlw	1
  6142  09FB  07D2               	addwf	___ftadd@f2,f
  6143  09FC  3000               	movlw	0
  6144  09FD  1803               	skipnc
  6145  09FE  3001               	movlw	1
  6146  09FF  07D3               	addwf	___ftadd@f2+1,f
  6147  0A00  3000               	movlw	0
  6148  0A01  1803               	skipnc
  6149  0A02  3001               	movlw	1
  6150  0A03  07D4               	addwf	___ftadd@f2+2,f
  6151  0A04                     l3447:
  6152  0A04  01D9               	clrf	___ftadd@sign
  6153  0A05                     l3449:
  6154  0A05  084F               	movf	___ftadd@f1,w
  6155  0A06  07D2               	addwf	___ftadd@f2,f
  6156  0A07  0850               	movf	___ftadd@f1+1,w
  6157  0A08  1103               	clrz
  6158  0A09  1803               	skipnc
  6159  0A0A  0A50               	incf	___ftadd@f1+1,w
  6160  0A0B  1903               	skipnz
  6161  0A0C  2A0E               	goto	u5301
  6162  0A0D  07D3               	addwf	___ftadd@f2+1,f
  6163  0A0E                     u5301:
  6164  0A0E  0851               	movf	___ftadd@f1+2,w
  6165  0A0F  1103               	clrz
  6166  0A10  1803               	skipnc
  6167  0A11  0A51               	incf	___ftadd@f1+2,w
  6168  0A12  1903               	skipnz
  6169  0A13  2A15               	goto	u5302
  6170  0A14  07D4               	addwf	___ftadd@f2+2,f
  6171  0A15                     u5302:
  6172  0A15                     l3451:
  6173  0A15  1FD4               	btfss	___ftadd@f2+2,7
  6174  0A16  2A18               	goto	u5311
  6175  0A17  2A19               	goto	u5310
  6176  0A18                     u5311:
  6177  0A18  2A2B               	goto	l3457
  6178  0A19                     u5310:
  6179  0A19                     l3453:
  6180  0A19  30FF               	movlw	255
  6181  0A1A  06D2               	xorwf	___ftadd@f2,f
  6182  0A1B  30FF               	movlw	255
  6183  0A1C  06D3               	xorwf	___ftadd@f2+1,f
  6184  0A1D  30FF               	movlw	255
  6185  0A1E  06D4               	xorwf	___ftadd@f2+2,f
  6186  0A1F  3001               	movlw	1
  6187  0A20  07D2               	addwf	___ftadd@f2,f
  6188  0A21  3000               	movlw	0
  6189  0A22  1803               	skipnc
  6190  0A23  3001               	movlw	1
  6191  0A24  07D3               	addwf	___ftadd@f2+1,f
  6192  0A25  3000               	movlw	0
  6193  0A26  1803               	skipnc
  6194  0A27  3001               	movlw	1
  6195  0A28  07D4               	addwf	___ftadd@f2+2,f
  6196  0A29                     l3455:
  6197  0A29  01D9               	clrf	___ftadd@sign
  6198  0A2A  0AD9               	incf	___ftadd@sign,f
  6199  0A2B                     l3457:
  6200  0A2B  0852               	movf	___ftadd@f2,w
  6201  0A2C  00F3               	movwf	___ftpack@arg
  6202  0A2D  0853               	movf	___ftadd@f2+1,w
  6203  0A2E  00F4               	movwf	___ftpack@arg+1
  6204  0A2F  0854               	movf	___ftadd@f2+2,w
  6205  0A30  00F5               	movwf	___ftpack@arg+2
  6206  0A31  085B               	movf	___ftadd@exp1,w
  6207  0A32  00D5               	movwf	??___ftadd
  6208  0A33  0855               	movf	??___ftadd,w
  6209  0A34  00F6               	movwf	___ftpack@exp
  6210  0A35  0859               	movf	___ftadd@sign,w
  6211  0A36  00D6               	movwf	??___ftadd+1
  6212  0A37  0856               	movf	??___ftadd+1,w
  6213  0A38  00F7               	movwf	___ftpack@sign
  6214  0A39  160A  118A  2302  120A  158A  	fcall	___ftpack
  6215  0A3E  0873               	movf	?___ftpack,w
  6216  0A3F  1283               	bcf	3,5	;RP0=0, select bank0
  6217  0A40  1303               	bcf	3,6	;RP1=0, select bank0
  6218  0A41  00CF               	movwf	?___ftadd
  6219  0A42  0874               	movf	?___ftpack+1,w
  6220  0A43  00D0               	movwf	?___ftadd+1
  6221  0A44  0875               	movf	?___ftpack+2,w
  6222  0A45  00D1               	movwf	?___ftadd+2
  6223  0A46                     l671:
  6224  0A46  0008               	return
  6225  0A47                     __end_of___ftadd:
  6226                           
  6227                           	psect	text19
  6228  1302                     __ptext19:	
  6229 ;; *************** function ___ftpack *****************
  6230 ;; Defined at:
  6231 ;;		line 62 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\float.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;  arg             3    3[COMMON] unsigned um
  6234 ;;  exp             1    6[COMMON] unsigned char 
  6235 ;;  sign            1    7[COMMON] unsigned char 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;		None
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  3    3[COMMON] float 
  6240 ;; Registers used:
  6241 ;;		wreg, status,2, status,0
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6247 ;;      Params:         5       0       0       0       0
  6248 ;;      Locals:         0       0       0       0       0
  6249 ;;      Temps:          0       3       0       0       0
  6250 ;;      Totals:         5       3       0       0       0
  6251 ;;Total ram usage:        8 bytes
  6252 ;; Hardware stack levels used:    1
  6253 ;; Hardware stack levels required when called:    2
  6254 ;; This function calls:
  6255 ;;		Nothing
  6256 ;; This function is called by:
  6257 ;;		___ftadd
  6258 ;;		___ftdiv
  6259 ;;		___ftmul
  6260 ;;		___lltoft
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           
  6265                           ;psect for function ___ftpack
  6266  1302                     ___ftpack:
  6267  1302                     l3277:	
  6268                           ;incstack = 0
  6269                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6270                           
  6271  1302  0876               	movf	___ftpack@exp,w
  6272  1303  1903               	btfsc	3,2
  6273  1304  2B06               	goto	u4771
  6274  1305  2B07               	goto	u4770
  6275  1306                     u4771:
  6276  1306  2B0E               	goto	l3281
  6277  1307                     u4770:
  6278  1307                     l3279:
  6279  1307  0875               	movf	___ftpack@arg+2,w
  6280  1308  0474               	iorwf	___ftpack@arg+1,w
  6281  1309  0473               	iorwf	___ftpack@arg,w
  6282  130A  1D03               	skipz
  6283  130B  2B0D               	goto	u4781
  6284  130C  2B0E               	goto	u4780
  6285  130D                     u4781:
  6286  130D  2B23               	goto	l3287
  6287  130E                     u4780:
  6288  130E                     l3281:
  6289  130E  3000               	movlw	0
  6290  130F  00F3               	movwf	?___ftpack
  6291  1310  3000               	movlw	0
  6292  1311  00F4               	movwf	?___ftpack+1
  6293  1312  3000               	movlw	0
  6294  1313  00F5               	movwf	?___ftpack+2
  6295  1314  2B83               	goto	l650
  6296  1315                     l3285:
  6297  1315  3001               	movlw	1
  6298  1316  1283               	bcf	3,5	;RP0=0, select bank0
  6299  1317  1303               	bcf	3,6	;RP1=0, select bank0
  6300  1318  00A0               	movwf	??___ftpack
  6301  1319  0820               	movf	??___ftpack,w
  6302  131A  07F6               	addwf	___ftpack@exp,f
  6303  131B  3001               	movlw	1
  6304  131C                     u4795:
  6305  131C  1003               	clrc
  6306  131D  0CF5               	rrf	___ftpack@arg+2,f
  6307  131E  0CF4               	rrf	___ftpack@arg+1,f
  6308  131F  0CF3               	rrf	___ftpack@arg,f
  6309  1320  3EFF               	addlw	-1
  6310  1321  1D03               	skipz
  6311  1322  2B1C               	goto	u4795
  6312  1323                     l3287:
  6313  1323  30FE               	movlw	254
  6314  1324  0575               	andwf	___ftpack@arg+2,w
  6315  1325  1D03               	btfss	3,2
  6316  1326  2B28               	goto	u4801
  6317  1327  2B29               	goto	u4800
  6318  1328                     u4801:
  6319  1328  2B15               	goto	l3285
  6320  1329                     u4800:
  6321  1329  2B42               	goto	l654
  6322  132A                     l3289:
  6323  132A  3001               	movlw	1
  6324  132B  1283               	bcf	3,5	;RP0=0, select bank0
  6325  132C  1303               	bcf	3,6	;RP1=0, select bank0
  6326  132D  00A0               	movwf	??___ftpack
  6327  132E  0820               	movf	??___ftpack,w
  6328  132F  07F6               	addwf	___ftpack@exp,f
  6329  1330                     l3291:
  6330  1330  3001               	movlw	1
  6331  1331  07F3               	addwf	___ftpack@arg,f
  6332  1332  3000               	movlw	0
  6333  1333  1803               	skipnc
  6334  1334  3001               	movlw	1
  6335  1335  07F4               	addwf	___ftpack@arg+1,f
  6336  1336  3000               	movlw	0
  6337  1337  1803               	skipnc
  6338  1338  3001               	movlw	1
  6339  1339  07F5               	addwf	___ftpack@arg+2,f
  6340  133A                     l3293:
  6341  133A  3001               	movlw	1
  6342  133B                     u4815:
  6343  133B  1003               	clrc
  6344  133C  0CF5               	rrf	___ftpack@arg+2,f
  6345  133D  0CF4               	rrf	___ftpack@arg+1,f
  6346  133E  0CF3               	rrf	___ftpack@arg,f
  6347  133F  3EFF               	addlw	-1
  6348  1340  1D03               	skipz
  6349  1341  2B3B               	goto	u4815
  6350  1342                     l654:
  6351  1342  30FF               	movlw	255
  6352  1343  0575               	andwf	___ftpack@arg+2,w
  6353  1344  1D03               	btfss	3,2
  6354  1345  2B47               	goto	u4821
  6355  1346  2B48               	goto	u4820
  6356  1347                     u4821:
  6357  1347  2B2A               	goto	l3289
  6358  1348                     u4820:
  6359  1348  2B53               	goto	l3297
  6360  1349                     l3295:
  6361  1349  3001               	movlw	1
  6362  134A  02F6               	subwf	___ftpack@exp,f
  6363  134B  3001               	movlw	1
  6364  134C                     u4835:
  6365  134C  1003               	clrc
  6366  134D  0DF3               	rlf	___ftpack@arg,f
  6367  134E  0DF4               	rlf	___ftpack@arg+1,f
  6368  134F  0DF5               	rlf	___ftpack@arg+2,f
  6369  1350  3EFF               	addlw	-1
  6370  1351  1D03               	skipz
  6371  1352  2B4C               	goto	u4835
  6372  1353                     l3297:
  6373  1353  1BF4               	btfsc	___ftpack@arg+1,7
  6374  1354  2B56               	goto	u4841
  6375  1355  2B57               	goto	u4840
  6376  1356                     u4841:
  6377  1356  2B5D               	goto	l661
  6378  1357                     u4840:
  6379  1357                     l3299:
  6380  1357  3002               	movlw	2
  6381  1358  0276               	subwf	___ftpack@exp,w
  6382  1359  1803               	skipnc
  6383  135A  2B5C               	goto	u4851
  6384  135B  2B5D               	goto	u4850
  6385  135C                     u4851:
  6386  135C  2B49               	goto	l3295
  6387  135D                     u4850:
  6388  135D                     l661:
  6389  135D  1876               	btfsc	___ftpack@exp,0
  6390  135E  2B60               	goto	u4861
  6391  135F  2B61               	goto	u4860
  6392  1360                     u4861:
  6393  1360  2B67               	goto	l662
  6394  1361                     u4860:
  6395  1361                     l3301:
  6396  1361  30FF               	movlw	255
  6397  1362  05F3               	andwf	___ftpack@arg,f
  6398  1363  307F               	movlw	127
  6399  1364  05F4               	andwf	___ftpack@arg+1,f
  6400  1365  30FF               	movlw	255
  6401  1366  05F5               	andwf	___ftpack@arg+2,f
  6402  1367                     l662:
  6403  1367  1003               	clrc
  6404  1368  0CF6               	rrf	___ftpack@exp,f
  6405  1369                     l3303:
  6406  1369  0876               	movf	___ftpack@exp,w
  6407  136A  1283               	bcf	3,5	;RP0=0, select bank0
  6408  136B  1303               	bcf	3,6	;RP1=0, select bank0
  6409  136C  00A0               	movwf	??___ftpack
  6410  136D  01A1               	clrf	??___ftpack+1
  6411  136E  01A2               	clrf	??___ftpack+2
  6412  136F  3010               	movlw	16
  6413  1370                     u4875:
  6414  1370  1003               	clrc
  6415  1371  0DA0               	rlf	??___ftpack,f
  6416  1372  0DA1               	rlf	??___ftpack+1,f
  6417  1373  0DA2               	rlf	??___ftpack+2,f
  6418  1374                     u4870:
  6419  1374  3EFF               	addlw	-1
  6420  1375  1D03               	skipz
  6421  1376  2B70               	goto	u4875
  6422  1377  0820               	movf	??___ftpack,w
  6423  1378  04F3               	iorwf	___ftpack@arg,f
  6424  1379  0821               	movf	??___ftpack+1,w
  6425  137A  04F4               	iorwf	___ftpack@arg+1,f
  6426  137B  0822               	movf	??___ftpack+2,w
  6427  137C  04F5               	iorwf	___ftpack@arg+2,f
  6428  137D                     l3305:
  6429  137D  0877               	movf	___ftpack@sign,w
  6430  137E  1903               	btfsc	3,2
  6431  137F  2B81               	goto	u4881
  6432  1380  2B82               	goto	u4880
  6433  1381                     u4881:
  6434  1381  2B83               	goto	l663
  6435  1382                     u4880:
  6436  1382                     l3307:
  6437  1382  17F5               	bsf	___ftpack@arg+2,7
  6438  1383                     l663:
  6439  1383                     l650:
  6440  1383  0008               	return
  6441  1384                     __end_of___ftpack:
  6442                           
  6443                           	psect	text20
  6444  1EDC                     __ptext20:	
  6445 ;; *************** function ___ftneg *****************
  6446 ;; Defined at:
  6447 ;;		line 15 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftneg.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  f1              3    3[COMMON] float 
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;		None
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  3    3[COMMON] float 
  6454 ;; Registers used:
  6455 ;;		wreg
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6461 ;;      Params:         3       0       0       0       0
  6462 ;;      Locals:         0       0       0       0       0
  6463 ;;      Temps:          0       0       0       0       0
  6464 ;;      Totals:         3       0       0       0       0
  6465 ;;Total ram usage:        3 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    2
  6468 ;; This function calls:
  6469 ;;		Nothing
  6470 ;; This function is called by:
  6471 ;;		_sprintf
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475                           
  6476                           ;psect for function ___ftneg
  6477  1EDC                     ___ftneg:
  6478  1EDC                     l2673:	
  6479                           ;incstack = 0
  6480                           ; Regs used in ___ftneg: [wreg]
  6481                           
  6482  1EDC  0875               	movf	___ftneg@f1+2,w
  6483  1EDD  0474               	iorwf	___ftneg@f1+1,w
  6484  1EDE  0473               	iorwf	___ftneg@f1,w
  6485  1EDF  1903               	skipnz
  6486  1EE0  2EE2               	goto	u3811
  6487  1EE1  2EE3               	goto	u3810
  6488  1EE2                     u3811:
  6489  1EE2  2EE5               	goto	l2677
  6490  1EE3                     u3810:
  6491  1EE3                     l2675:
  6492  1EE3  3080               	movlw	128
  6493  1EE4  06F5               	xorwf	___ftneg@f1+2,f
  6494  1EE5                     l2677:
  6495  1EE5                     l745:
  6496  1EE5  0008               	return
  6497  1EE6                     __end_of___ftneg:
  6498                           
  6499                           	psect	text21
  6500  10C4                     __ptext21:	
  6501 ;; *************** function ___ftge *****************
  6502 ;; Defined at:
  6503 ;;		line 4 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftge.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  ff1             3    0[BANK0 ] float 
  6506 ;;  ff2             3    3[BANK0 ] float 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;		None
  6509 ;; Return value:  Size  Location     Type
  6510 ;;		None               void
  6511 ;; Registers used:
  6512 ;;		wreg, status,2, status,0
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6518 ;;      Params:         0       6       0       0       0
  6519 ;;      Locals:         0       0       0       0       0
  6520 ;;      Temps:          0       0       0       0       0
  6521 ;;      Totals:         0       6       0       0       0
  6522 ;;Total ram usage:        6 bytes
  6523 ;; Hardware stack levels used:    1
  6524 ;; Hardware stack levels required when called:    2
  6525 ;; This function calls:
  6526 ;;		Nothing
  6527 ;; This function is called by:
  6528 ;;		_sprintf
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           
  6533                           ;psect for function ___ftge
  6534  10C4                     ___ftge:
  6535  10C4                     l3803:	
  6536                           ;incstack = 0
  6537                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6538                           
  6539  10C4  1283               	bcf	3,5	;RP0=0, select bank0
  6540  10C5  1303               	bcf	3,6	;RP1=0, select bank0
  6541  10C6  1FA2               	btfss	___ftge@ff1+2,7
  6542  10C7  28C9               	goto	u6121
  6543  10C8  28CA               	goto	u6120
  6544  10C9                     u6121:
  6545  10C9  28D7               	goto	l3807
  6546  10CA                     u6120:
  6547  10CA                     l3805:
  6548  10CA  0820               	movf	___ftge@ff1,w
  6549  10CB  3C00               	sublw	0
  6550  10CC  00A0               	movwf	___ftge@ff1
  6551  10CD  0821               	movf	___ftge@ff1+1,w
  6552  10CE  1C03               	skipc
  6553  10CF  0F21               	incfsz	___ftge@ff1+1,w
  6554  10D0  3C00               	sublw	0
  6555  10D1  00A1               	movwf	___ftge@ff1+1
  6556  10D2  0822               	movf	___ftge@ff1+2,w
  6557  10D3  1C03               	skipc
  6558  10D4  0F22               	incfsz	___ftge@ff1+2,w
  6559  10D5  3C80               	sublw	128
  6560  10D6  00A2               	movwf	___ftge@ff1+2
  6561  10D7                     l3807:
  6562  10D7  1FA5               	btfss	___ftge@ff2+2,7
  6563  10D8  28DA               	goto	u6131
  6564  10D9  28DB               	goto	u6130
  6565  10DA                     u6131:
  6566  10DA  28E8               	goto	l3811
  6567  10DB                     u6130:
  6568  10DB                     l3809:
  6569  10DB  0823               	movf	___ftge@ff2,w
  6570  10DC  3C00               	sublw	0
  6571  10DD  00A3               	movwf	___ftge@ff2
  6572  10DE  0824               	movf	___ftge@ff2+1,w
  6573  10DF  1C03               	skipc
  6574  10E0  0F24               	incfsz	___ftge@ff2+1,w
  6575  10E1  3C00               	sublw	0
  6576  10E2  00A4               	movwf	___ftge@ff2+1
  6577  10E3  0825               	movf	___ftge@ff2+2,w
  6578  10E4  1C03               	skipc
  6579  10E5  0F25               	incfsz	___ftge@ff2+2,w
  6580  10E6  3C80               	sublw	128
  6581  10E7  00A5               	movwf	___ftge@ff2+2
  6582  10E8                     l3811:
  6583  10E8  3080               	movlw	128
  6584  10E9  06A2               	xorwf	___ftge@ff1+2,f
  6585  10EA                     l3813:
  6586  10EA  3080               	movlw	128
  6587  10EB  06A5               	xorwf	___ftge@ff2+2,f
  6588  10EC                     l3815:
  6589  10EC  0825               	movf	___ftge@ff2+2,w
  6590  10ED  0222               	subwf	___ftge@ff1+2,w
  6591  10EE  1D03               	skipz
  6592  10EF  28F6               	goto	u6145
  6593  10F0  0824               	movf	___ftge@ff2+1,w
  6594  10F1  0221               	subwf	___ftge@ff1+1,w
  6595  10F2  1D03               	skipz
  6596  10F3  28F6               	goto	u6145
  6597  10F4  0823               	movf	___ftge@ff2,w
  6598  10F5  0220               	subwf	___ftge@ff1,w
  6599  10F6                     u6145:
  6600  10F6  1803               	skipnc
  6601  10F7  28F9               	goto	u6141
  6602  10F8  28FA               	goto	u6140
  6603  10F9                     u6141:
  6604  10F9  28FC               	goto	l3819
  6605  10FA                     u6140:
  6606  10FA                     l3817:
  6607  10FA  1003               	clrc
  6608  10FB  28FD               	goto	l728
  6609  10FC                     l3819:
  6610  10FC  1403               	setc
  6611  10FD                     l728:
  6612  10FD  0008               	return
  6613  10FE                     __end_of___ftge:
  6614                           
  6615                           	psect	text22
  6616  1F07                     __ptext22:	
  6617 ;; *************** function _configIO *****************
  6618 ;; Defined at:
  6619 ;;		line 45 in file "pic16f.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;		None
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;		None
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  1    wreg      void 
  6626 ;; Registers used:
  6627 ;;		status,2
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6633 ;;      Params:         0       0       0       0       0
  6634 ;;      Locals:         0       0       0       0       0
  6635 ;;      Temps:          0       0       0       0       0
  6636 ;;      Totals:         0       0       0       0       0
  6637 ;;Total ram usage:        0 bytes
  6638 ;; Hardware stack levels used:    1
  6639 ;; Hardware stack levels required when called:    2
  6640 ;; This function calls:
  6641 ;;		Nothing
  6642 ;; This function is called by:
  6643 ;;		_main
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           
  6648                           ;psect for function _configIO
  6649  1F07                     _configIO:
  6650  1F07                     l2761:	
  6651                           ;incstack = 0
  6652                           ; Regs used in _configIO: [status,2]
  6653                           
  6654                           
  6655                           ;pic16f.c: 46:     TRISB=0;
  6656  1F07  1683               	bsf	3,5	;RP0=1, select bank1
  6657  1F08  1303               	bcf	3,6	;RP1=0, select bank1
  6658  1F09  0186               	clrf	6	;volatile
  6659                           
  6660                           ;pic16f.c: 47:     ANSEL=0;
  6661  1F0A  1683               	bsf	3,5	;RP0=1, select bank3
  6662  1F0B  1703               	bsf	3,6	;RP1=1, select bank3
  6663  1F0C  0188               	clrf	8	;volatile
  6664                           
  6665                           ;pic16f.c: 48:     ANSELH=0;
  6666  1F0D  0189               	clrf	9	;volatile
  6667                           
  6668                           ;pic16f.c: 49:     PORTB=0;
  6669  1F0E  1283               	bcf	3,5	;RP0=0, select bank0
  6670  1F0F  1303               	bcf	3,6	;RP1=0, select bank0
  6671  1F10  0186               	clrf	6	;volatile
  6672  1F11                     l2763:
  6673                           
  6674                           ;pic16f.c: 51:     INTCONbits.PEIE=1;
  6675  1F11  170B               	bsf	11,6	;volatile
  6676  1F12                     l2765:
  6677                           
  6678                           ;pic16f.c: 52:     PIE1bits.RCIE=1;
  6679  1F12  1683               	bsf	3,5	;RP0=1, select bank1
  6680  1F13  1303               	bcf	3,6	;RP1=0, select bank1
  6681  1F14  168C               	bsf	12,5	;volatile
  6682  1F15                     l2767:
  6683                           
  6684                           ;pic16f.c: 53:     PIR1bits.RCIF=0;
  6685  1F15  1283               	bcf	3,5	;RP0=0, select bank0
  6686  1F16  1303               	bcf	3,6	;RP1=0, select bank0
  6687  1F17  128C               	bcf	12,5	;volatile
  6688  1F18                     l2769:
  6689                           
  6690                           ;pic16f.c: 54:     INTCONbits.GIE=1;
  6691  1F18  178B               	bsf	11,7	;volatile
  6692  1F19                     l53:
  6693  1F19  0008               	return
  6694  1F1A                     __end_of_configIO:
  6695                           
  6696                           	psect	text23
  6697  1F68                     __ptext23:	
  6698 ;; *************** function _Write_USART_String *****************
  6699 ;; Defined at:
  6700 ;;		line 34 in file "USART.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;  a               2    4[COMMON] PTR unsigned char 
  6703 ;;		 -> datos(20), STR_1(12), 
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;  i               1    7[COMMON] unsigned char 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  1    wreg      void 
  6708 ;; Registers used:
  6709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6715 ;;      Params:         2       0       0       0       0
  6716 ;;      Locals:         1       0       0       0       0
  6717 ;;      Temps:          1       0       0       0       0
  6718 ;;      Totals:         4       0       0       0       0
  6719 ;;Total ram usage:        4 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    3
  6722 ;; This function calls:
  6723 ;;		_Write_USART
  6724 ;; This function is called by:
  6725 ;;		_main
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           
  6730                           ;psect for function _Write_USART_String
  6731  1F68                     _Write_USART_String:
  6732  1F68                     l2809:	
  6733                           ;incstack = 0
  6734                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6735                           
  6736                           
  6737                           ;USART.c: 35:     uint8_t i;;USART.c: 36:     for(i=0;a[i]!='\0';i++){
  6738  1F68  01F7               	clrf	Write_USART_String@i
  6739  1F69  2F7F               	goto	l2815
  6740  1F6A                     l2811:
  6741                           
  6742                           ;USART.c: 37:         Write_USART(a[i]);
  6743  1F6A  0877               	movf	Write_USART_String@i,w
  6744  1F6B  0774               	addwf	Write_USART_String@a,w
  6745  1F6C  0084               	movwf	4
  6746  1F6D  0875               	movf	Write_USART_String@a+1,w
  6747  1F6E  1803               	skipnc
  6748  1F6F  0A75               	incf	Write_USART_String@a+1,w
  6749  1F70  00FF               	movwf	btemp+1
  6750  1F71  160A  118A  2000  160A  158A  	fcall	stringtab
  6751  1F76  160A  118A  20A1  160A  158A  	fcall	_Write_USART
  6752  1F7B                     l2813:
  6753                           
  6754                           ;USART.c: 38:     }
  6755  1F7B  3001               	movlw	1
  6756  1F7C  00F6               	movwf	??_Write_USART_String
  6757  1F7D  0876               	movf	??_Write_USART_String,w
  6758  1F7E  07F7               	addwf	Write_USART_String@i,f
  6759  1F7F                     l2815:
  6760  1F7F  0877               	movf	Write_USART_String@i,w
  6761  1F80  0774               	addwf	Write_USART_String@a,w
  6762  1F81  0084               	movwf	4
  6763  1F82  0875               	movf	Write_USART_String@a+1,w
  6764  1F83  1803               	skipnc
  6765  1F84  0A75               	incf	Write_USART_String@a+1,w
  6766  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  6767  1F86  1303               	bcf	3,6	;RP1=0, select bank0
  6768  1F87  00FF               	movwf	btemp+1
  6769  1F88  160A  118A  2000  160A  158A  	fcall	stringtab
  6770  1F8D  3A00               	xorlw	0
  6771  1F8E  1D03               	skipz
  6772  1F8F  2F91               	goto	u4101
  6773  1F90  2F92               	goto	u4100
  6774  1F91                     u4101:
  6775  1F91  2F6A               	goto	l2811
  6776  1F92                     u4100:
  6777  1F92                     l163:
  6778  1F92  0008               	return
  6779  1F93                     __end_of_Write_USART_String:
  6780                           
  6781                           	psect	text24
  6782  10A1                     __ptext24:	
  6783 ;; *************** function _Write_USART *****************
  6784 ;; Defined at:
  6785 ;;		line 30 in file "USART.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;  a               1    wreg     unsigned char 
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;  a               1    3[COMMON] unsigned char 
  6790 ;; Return value:  Size  Location     Type
  6791 ;;                  1    wreg      void 
  6792 ;; Registers used:
  6793 ;;		wreg
  6794 ;; Tracked objects:
  6795 ;;		On entry : 0/0
  6796 ;;		On exit  : 0/0
  6797 ;;		Unchanged: 0/0
  6798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6799 ;;      Params:         0       0       0       0       0
  6800 ;;      Locals:         1       0       0       0       0
  6801 ;;      Temps:          0       0       0       0       0
  6802 ;;      Totals:         1       0       0       0       0
  6803 ;;Total ram usage:        1 bytes
  6804 ;; Hardware stack levels used:    1
  6805 ;; Hardware stack levels required when called:    2
  6806 ;; This function calls:
  6807 ;;		Nothing
  6808 ;; This function is called by:
  6809 ;;		_main
  6810 ;;		_Write_USART_String
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           
  6815                           ;psect for function _Write_USART
  6816  10A1                     _Write_USART:
  6817                           
  6818                           ;incstack = 0
  6819                           ; Regs used in _Write_USART: [wreg]
  6820                           ;Write_USART@a stored from wreg
  6821  10A1  00F3               	movwf	Write_USART@a
  6822  10A2                     l2389:
  6823  10A2                     l154:	
  6824                           ;USART.c: 31:     while(!TRMT);
  6825                           
  6826  10A2  1683               	bsf	3,5	;RP0=1, select bank1
  6827  10A3  1303               	bcf	3,6	;RP1=0, select bank1
  6828  10A4  1C98               	btfss	24,1	;volatile
  6829  10A5  28A7               	goto	u3201
  6830  10A6  28A8               	goto	u3200
  6831  10A7                     u3201:
  6832  10A7  28A2               	goto	l154
  6833  10A8                     u3200:
  6834  10A8                     l2391:
  6835                           
  6836                           ;USART.c: 32:     TXREG=a;
  6837  10A8  0873               	movf	Write_USART@a,w
  6838  10A9  1283               	bcf	3,5	;RP0=0, select bank0
  6839  10AA  1303               	bcf	3,6	;RP1=0, select bank0
  6840  10AB  0099               	movwf	25	;volatile
  6841  10AC                     l157:
  6842  10AC  0008               	return
  6843  10AD                     __end_of_Write_USART:
  6844                           
  6845                           	psect	text25
  6846  15F7                     __ptext25:	
  6847 ;; *************** function _USART_Init *****************
  6848 ;; Defined at:
  6849 ;;		line 9 in file "USART.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;  baudrate        4   14[BANK0 ] const long 
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;  x               2    4[COMMON] unsigned int 
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  1    wreg      unsigned char 
  6856 ;; Registers used:
  6857 ;;		wreg, status,2, status,0, pclath, cstack
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6863 ;;      Params:         0       4       0       0       0
  6864 ;;      Locals:         2       0       0       0       0
  6865 ;;      Temps:          0      12       0       0       0
  6866 ;;      Totals:         2      16       0       0       0
  6867 ;;Total ram usage:       18 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    3
  6870 ;; This function calls:
  6871 ;;		___aldiv
  6872 ;; This function is called by:
  6873 ;;		_main
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           
  6878                           ;psect for function _USART_Init
  6879  15F7                     _USART_Init:
  6880  15F7                     l3861:	
  6881                           ;incstack = 0
  6882                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  6883                           
  6884                           
  6885                           ;USART.c: 10:   unsigned int x;;USART.c: 11:   x = (8000000 - baudrate*64)/(baudrate*64)
      +                          ;
  6886  15F7  1283               	bcf	3,5	;RP0=0, select bank0
  6887  15F8  1303               	bcf	3,6	;RP1=0, select bank0
  6888  15F9  082E               	movf	USART_Init@baudrate,w
  6889  15FA  00B2               	movwf	??_USART_Init
  6890  15FB  082F               	movf	USART_Init@baudrate+1,w
  6891  15FC  00B3               	movwf	??_USART_Init+1
  6892  15FD  0830               	movf	USART_Init@baudrate+2,w
  6893  15FE  00B4               	movwf	??_USART_Init+2
  6894  15FF  0831               	movf	USART_Init@baudrate+3,w
  6895  1600  00B5               	movwf	??_USART_Init+3
  6896  1601  3006               	movlw	6
  6897  1602                     u6245:
  6898  1602  1003               	clrc
  6899  1603  0DB2               	rlf	??_USART_Init,f
  6900  1604  0DB3               	rlf	??_USART_Init+1,f
  6901  1605  0DB4               	rlf	??_USART_Init+2,f
  6902  1606  0DB5               	rlf	??_USART_Init+3,f
  6903  1607                     u6240:
  6904  1607  3EFF               	addlw	-1
  6905  1608  1D03               	skipz
  6906  1609  2E02               	goto	u6245
  6907  160A  0835               	movf	??_USART_Init+3,w
  6908  160B  00A3               	movwf	___aldiv@divisor+3
  6909  160C  0834               	movf	??_USART_Init+2,w
  6910  160D  00A2               	movwf	___aldiv@divisor+2
  6911  160E  0833               	movf	??_USART_Init+1,w
  6912  160F  00A1               	movwf	___aldiv@divisor+1
  6913  1610  0832               	movf	??_USART_Init,w
  6914  1611  00A0               	movwf	___aldiv@divisor
  6915  1612  082E               	movf	USART_Init@baudrate,w
  6916  1613  00B6               	movwf	??_USART_Init+4
  6917  1614  082F               	movf	USART_Init@baudrate+1,w
  6918  1615  00B7               	movwf	??_USART_Init+5
  6919  1616  0830               	movf	USART_Init@baudrate+2,w
  6920  1617  00B8               	movwf	??_USART_Init+6
  6921  1618  0831               	movf	USART_Init@baudrate+3,w
  6922  1619  00B9               	movwf	??_USART_Init+7
  6923  161A  3006               	movlw	6
  6924  161B                     u6255:
  6925  161B  1003               	clrc
  6926  161C  0DB6               	rlf	??_USART_Init+4,f
  6927  161D  0DB7               	rlf	??_USART_Init+5,f
  6928  161E  0DB8               	rlf	??_USART_Init+6,f
  6929  161F  0DB9               	rlf	??_USART_Init+7,f
  6930  1620                     u6250:
  6931  1620  3EFF               	addlw	-1
  6932  1621  1D03               	skipz
  6933  1622  2E1B               	goto	u6255
  6934  1623  3000               	movlw	0
  6935  1624  00BA               	movwf	??_USART_Init+8
  6936  1625  3012               	movlw	18
  6937  1626  00BB               	movwf	??_USART_Init+9
  6938  1627  307A               	movlw	122
  6939  1628  00BC               	movwf	??_USART_Init+10
  6940  1629  3000               	movlw	0
  6941  162A  00BD               	movwf	??_USART_Init+11
  6942  162B  0836               	movf	??_USART_Init+4,w
  6943  162C  02BA               	subwf	??_USART_Init+8,f
  6944  162D  0837               	movf	??_USART_Init+5,w
  6945  162E  1C03               	skipc
  6946  162F  0F37               	incfsz	??_USART_Init+5,w
  6947  1630  2E32               	goto	u6261
  6948  1631  2E33               	goto	u6262
  6949  1632                     u6261:
  6950  1632  02BB               	subwf	??_USART_Init+9,f
  6951  1633                     u6262:
  6952  1633  0838               	movf	??_USART_Init+6,w
  6953  1634  1C03               	skipc
  6954  1635  0F38               	incfsz	??_USART_Init+6,w
  6955  1636  2E38               	goto	u6263
  6956  1637  2E39               	goto	u6264
  6957  1638                     u6263:
  6958  1638  02BC               	subwf	??_USART_Init+10,f
  6959  1639                     u6264:
  6960  1639  0839               	movf	??_USART_Init+7,w
  6961  163A  1C03               	skipc
  6962  163B  0F39               	incfsz	??_USART_Init+7,w
  6963  163C  2E3E               	goto	u6265
  6964  163D  2E3F               	goto	u6266
  6965  163E                     u6265:
  6966  163E  02BD               	subwf	??_USART_Init+11,f
  6967  163F                     u6266:
  6968  163F  083D               	movf	??_USART_Init+11,w
  6969  1640  00A7               	movwf	___aldiv@dividend+3
  6970  1641  083C               	movf	??_USART_Init+10,w
  6971  1642  00A6               	movwf	___aldiv@dividend+2
  6972  1643  083B               	movf	??_USART_Init+9,w
  6973  1644  00A5               	movwf	___aldiv@dividend+1
  6974  1645  083A               	movf	??_USART_Init+8,w
  6975  1646  00A4               	movwf	___aldiv@dividend
  6976  1647  160A  118A  249D  160A  118A  	fcall	___aldiv
  6977  164C  1283               	bcf	3,5	;RP0=0, select bank0
  6978  164D  1303               	bcf	3,6	;RP1=0, select bank0
  6979  164E  0821               	movf	?___aldiv+1,w
  6980  164F  00F5               	movwf	USART_Init@x+1
  6981  1650  0820               	movf	?___aldiv,w
  6982  1651  00F4               	movwf	USART_Init@x
  6983  1652                     l3863:
  6984                           
  6985                           ;USART.c: 12:   if(x>255)
  6986  1652  3001               	movlw	1
  6987  1653  0275               	subwf	USART_Init@x+1,w
  6988  1654  3000               	movlw	0
  6989  1655  1903               	skipnz
  6990  1656  0274               	subwf	USART_Init@x,w
  6991  1657  1C03               	skipc
  6992  1658  2E5A               	goto	u6271
  6993  1659  2E5B               	goto	u6270
  6994  165A                     u6271:
  6995  165A  2EB7               	goto	l3869
  6996  165B                     u6270:
  6997  165B                     l3865:
  6998                           
  6999                           ;USART.c: 13:   {;USART.c: 14:     x = (8000000 - baudrate*16)/(baudrate*16);
  7000  165B  082E               	movf	USART_Init@baudrate,w
  7001  165C  00B2               	movwf	??_USART_Init
  7002  165D  082F               	movf	USART_Init@baudrate+1,w
  7003  165E  00B3               	movwf	??_USART_Init+1
  7004  165F  0830               	movf	USART_Init@baudrate+2,w
  7005  1660  00B4               	movwf	??_USART_Init+2
  7006  1661  0831               	movf	USART_Init@baudrate+3,w
  7007  1662  00B5               	movwf	??_USART_Init+3
  7008  1663  3004               	movlw	4
  7009  1664                     u6285:
  7010  1664  1003               	clrc
  7011  1665  0DB2               	rlf	??_USART_Init,f
  7012  1666  0DB3               	rlf	??_USART_Init+1,f
  7013  1667  0DB4               	rlf	??_USART_Init+2,f
  7014  1668  0DB5               	rlf	??_USART_Init+3,f
  7015  1669                     u6280:
  7016  1669  3EFF               	addlw	-1
  7017  166A  1D03               	skipz
  7018  166B  2E64               	goto	u6285
  7019  166C  0835               	movf	??_USART_Init+3,w
  7020  166D  00A3               	movwf	___aldiv@divisor+3
  7021  166E  0834               	movf	??_USART_Init+2,w
  7022  166F  00A2               	movwf	___aldiv@divisor+2
  7023  1670  0833               	movf	??_USART_Init+1,w
  7024  1671  00A1               	movwf	___aldiv@divisor+1
  7025  1672  0832               	movf	??_USART_Init,w
  7026  1673  00A0               	movwf	___aldiv@divisor
  7027  1674  082E               	movf	USART_Init@baudrate,w
  7028  1675  00B6               	movwf	??_USART_Init+4
  7029  1676  082F               	movf	USART_Init@baudrate+1,w
  7030  1677  00B7               	movwf	??_USART_Init+5
  7031  1678  0830               	movf	USART_Init@baudrate+2,w
  7032  1679  00B8               	movwf	??_USART_Init+6
  7033  167A  0831               	movf	USART_Init@baudrate+3,w
  7034  167B  00B9               	movwf	??_USART_Init+7
  7035  167C  3004               	movlw	4
  7036  167D                     u6295:
  7037  167D  1003               	clrc
  7038  167E  0DB6               	rlf	??_USART_Init+4,f
  7039  167F  0DB7               	rlf	??_USART_Init+5,f
  7040  1680  0DB8               	rlf	??_USART_Init+6,f
  7041  1681  0DB9               	rlf	??_USART_Init+7,f
  7042  1682                     u6290:
  7043  1682  3EFF               	addlw	-1
  7044  1683  1D03               	skipz
  7045  1684  2E7D               	goto	u6295
  7046  1685  3000               	movlw	0
  7047  1686  00BA               	movwf	??_USART_Init+8
  7048  1687  3012               	movlw	18
  7049  1688  00BB               	movwf	??_USART_Init+9
  7050  1689  307A               	movlw	122
  7051  168A  00BC               	movwf	??_USART_Init+10
  7052  168B  3000               	movlw	0
  7053  168C  00BD               	movwf	??_USART_Init+11
  7054  168D  0836               	movf	??_USART_Init+4,w
  7055  168E  02BA               	subwf	??_USART_Init+8,f
  7056  168F  0837               	movf	??_USART_Init+5,w
  7057  1690  1C03               	skipc
  7058  1691  0F37               	incfsz	??_USART_Init+5,w
  7059  1692  2E94               	goto	u6301
  7060  1693  2E95               	goto	u6302
  7061  1694                     u6301:
  7062  1694  02BB               	subwf	??_USART_Init+9,f
  7063  1695                     u6302:
  7064  1695  0838               	movf	??_USART_Init+6,w
  7065  1696  1C03               	skipc
  7066  1697  0F38               	incfsz	??_USART_Init+6,w
  7067  1698  2E9A               	goto	u6303
  7068  1699  2E9B               	goto	u6304
  7069  169A                     u6303:
  7070  169A  02BC               	subwf	??_USART_Init+10,f
  7071  169B                     u6304:
  7072  169B  0839               	movf	??_USART_Init+7,w
  7073  169C  1C03               	skipc
  7074  169D  0F39               	incfsz	??_USART_Init+7,w
  7075  169E  2EA0               	goto	u6305
  7076  169F  2EA1               	goto	u6306
  7077  16A0                     u6305:
  7078  16A0  02BD               	subwf	??_USART_Init+11,f
  7079  16A1                     u6306:
  7080  16A1  083D               	movf	??_USART_Init+11,w
  7081  16A2  00A7               	movwf	___aldiv@dividend+3
  7082  16A3  083C               	movf	??_USART_Init+10,w
  7083  16A4  00A6               	movwf	___aldiv@dividend+2
  7084  16A5  083B               	movf	??_USART_Init+9,w
  7085  16A6  00A5               	movwf	___aldiv@dividend+1
  7086  16A7  083A               	movf	??_USART_Init+8,w
  7087  16A8  00A4               	movwf	___aldiv@dividend
  7088  16A9  160A  118A  249D  160A  118A  	fcall	___aldiv
  7089  16AE  1283               	bcf	3,5	;RP0=0, select bank0
  7090  16AF  1303               	bcf	3,6	;RP1=0, select bank0
  7091  16B0  0821               	movf	?___aldiv+1,w
  7092  16B1  00F5               	movwf	USART_Init@x+1
  7093  16B2  0820               	movf	?___aldiv,w
  7094  16B3  00F4               	movwf	USART_Init@x
  7095  16B4                     l3867:
  7096                           
  7097                           ;USART.c: 15:     BRGH = 1;
  7098  16B4  1683               	bsf	3,5	;RP0=1, select bank1
  7099  16B5  1303               	bcf	3,6	;RP1=0, select bank1
  7100  16B6  1518               	bsf	24,2	;volatile
  7101  16B7                     l3869:
  7102                           
  7103                           ;USART.c: 17:   if(x<256)
  7104  16B7  3001               	movlw	1
  7105  16B8  0275               	subwf	USART_Init@x+1,w
  7106  16B9  3000               	movlw	0
  7107  16BA  1903               	skipnz
  7108  16BB  0274               	subwf	USART_Init@x,w
  7109  16BC  1803               	skipnc
  7110  16BD  2EBF               	goto	u6311
  7111  16BE  2EC0               	goto	u6310
  7112  16BF                     u6311:
  7113  16BF  2ED2               	goto	l151
  7114  16C0                     u6310:
  7115  16C0                     l3871:
  7116                           
  7117                           ;USART.c: 18:   {;USART.c: 19:     SPBRG = x;
  7118  16C0  0874               	movf	USART_Init@x,w
  7119  16C1  1683               	bsf	3,5	;RP0=1, select bank1
  7120  16C2  1303               	bcf	3,6	;RP1=0, select bank1
  7121  16C3  0099               	movwf	25	;volatile
  7122  16C4                     l3873:
  7123                           
  7124                           ;USART.c: 20:     SYNC = 0;
  7125  16C4  1218               	bcf	24,4	;volatile
  7126  16C5                     l3875:
  7127                           
  7128                           ;USART.c: 21:     SPEN = 1;
  7129  16C5  1283               	bcf	3,5	;RP0=0, select bank0
  7130  16C6  1303               	bcf	3,6	;RP1=0, select bank0
  7131  16C7  1798               	bsf	24,7	;volatile
  7132  16C8                     l3877:
  7133                           
  7134                           ;USART.c: 22:     TRISC7 = 1;
  7135  16C8  1683               	bsf	3,5	;RP0=1, select bank1
  7136  16C9  1303               	bcf	3,6	;RP1=0, select bank1
  7137  16CA  1787               	bsf	7,7	;volatile
  7138  16CB                     l3879:
  7139                           
  7140                           ;USART.c: 23:     TRISC6 = 0;
  7141  16CB  1307               	bcf	7,6	;volatile
  7142  16CC                     l3881:
  7143                           
  7144                           ;USART.c: 24:     CREN = 1;
  7145  16CC  1283               	bcf	3,5	;RP0=0, select bank0
  7146  16CD  1303               	bcf	3,6	;RP1=0, select bank0
  7147  16CE  1618               	bsf	24,4	;volatile
  7148  16CF                     l3883:
  7149                           
  7150                           ;USART.c: 25:     TXEN = 1;
  7151  16CF  1683               	bsf	3,5	;RP0=1, select bank1
  7152  16D0  1303               	bcf	3,6	;RP1=0, select bank1
  7153  16D1  1698               	bsf	24,5	;volatile
  7154  16D2                     l151:
  7155  16D2  0008               	return
  7156  16D3                     __end_of_USART_Init:
  7157                           
  7158                           	psect	text26
  7159  149D                     __ptext26:	
  7160 ;; *************** function ___aldiv *****************
  7161 ;; Defined at:
  7162 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\aldiv.c"
  7163 ;; Parameters:    Size  Location     Type
  7164 ;;  divisor         4    0[BANK0 ] long 
  7165 ;;  dividend        4    4[BANK0 ] long 
  7166 ;; Auto vars:     Size  Location     Type
  7167 ;;  quotient        4   10[BANK0 ] long 
  7168 ;;  sign            1    9[BANK0 ] unsigned char 
  7169 ;;  counter         1    8[BANK0 ] unsigned char 
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  4    0[BANK0 ] long 
  7172 ;; Registers used:
  7173 ;;		wreg, status,2, status,0
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7179 ;;      Params:         0       8       0       0       0
  7180 ;;      Locals:         0       6       0       0       0
  7181 ;;      Temps:          1       0       0       0       0
  7182 ;;      Totals:         1      14       0       0       0
  7183 ;;Total ram usage:       15 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:    2
  7186 ;; This function calls:
  7187 ;;		Nothing
  7188 ;; This function is called by:
  7189 ;;		_USART_Init
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           
  7194                           ;psect for function ___aldiv
  7195  149D                     ___aldiv:
  7196  149D                     l3763:	
  7197                           ;incstack = 0
  7198                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7199                           
  7200  149D  1283               	bcf	3,5	;RP0=0, select bank0
  7201  149E  1303               	bcf	3,6	;RP1=0, select bank0
  7202  149F  01A9               	clrf	___aldiv@sign
  7203  14A0                     l3765:
  7204  14A0  1FA3               	btfss	___aldiv@divisor+3,7
  7205  14A1  2CA3               	goto	u6021
  7206  14A2  2CA4               	goto	u6020
  7207  14A3                     u6021:
  7208  14A3  2CB1               	goto	l496
  7209  14A4                     u6020:
  7210  14A4                     l3767:
  7211  14A4  09A0               	comf	___aldiv@divisor,f
  7212  14A5  09A1               	comf	___aldiv@divisor+1,f
  7213  14A6  09A2               	comf	___aldiv@divisor+2,f
  7214  14A7  09A3               	comf	___aldiv@divisor+3,f
  7215  14A8  0AA0               	incf	___aldiv@divisor,f
  7216  14A9  1903               	skipnz
  7217  14AA  0AA1               	incf	___aldiv@divisor+1,f
  7218  14AB  1903               	skipnz
  7219  14AC  0AA2               	incf	___aldiv@divisor+2,f
  7220  14AD  1903               	skipnz
  7221  14AE  0AA3               	incf	___aldiv@divisor+3,f
  7222  14AF  01A9               	clrf	___aldiv@sign
  7223  14B0  0AA9               	incf	___aldiv@sign,f
  7224  14B1                     l496:
  7225  14B1  1FA7               	btfss	___aldiv@dividend+3,7
  7226  14B2  2CB4               	goto	u6031
  7227  14B3  2CB5               	goto	u6030
  7228  14B4                     u6031:
  7229  14B4  2CC4               	goto	l3773
  7230  14B5                     u6030:
  7231  14B5                     l3769:
  7232  14B5  09A4               	comf	___aldiv@dividend,f
  7233  14B6  09A5               	comf	___aldiv@dividend+1,f
  7234  14B7  09A6               	comf	___aldiv@dividend+2,f
  7235  14B8  09A7               	comf	___aldiv@dividend+3,f
  7236  14B9  0AA4               	incf	___aldiv@dividend,f
  7237  14BA  1903               	skipnz
  7238  14BB  0AA5               	incf	___aldiv@dividend+1,f
  7239  14BC  1903               	skipnz
  7240  14BD  0AA6               	incf	___aldiv@dividend+2,f
  7241  14BE  1903               	skipnz
  7242  14BF  0AA7               	incf	___aldiv@dividend+3,f
  7243  14C0                     l3771:
  7244  14C0  3001               	movlw	1
  7245  14C1  00F3               	movwf	??___aldiv
  7246  14C2  0873               	movf	??___aldiv,w
  7247  14C3  06A9               	xorwf	___aldiv@sign,f
  7248  14C4                     l3773:
  7249  14C4  3000               	movlw	0
  7250  14C5  00AD               	movwf	___aldiv@quotient+3
  7251  14C6  3000               	movlw	0
  7252  14C7  00AC               	movwf	___aldiv@quotient+2
  7253  14C8  3000               	movlw	0
  7254  14C9  00AB               	movwf	___aldiv@quotient+1
  7255  14CA  3000               	movlw	0
  7256  14CB  00AA               	movwf	___aldiv@quotient
  7257  14CC                     l3775:
  7258  14CC  0823               	movf	___aldiv@divisor+3,w
  7259  14CD  0422               	iorwf	___aldiv@divisor+2,w
  7260  14CE  0421               	iorwf	___aldiv@divisor+1,w
  7261  14CF  0420               	iorwf	___aldiv@divisor,w
  7262  14D0  1903               	skipnz
  7263  14D1  2CD3               	goto	u6041
  7264  14D2  2CD4               	goto	u6040
  7265  14D3                     u6041:
  7266  14D3  2D21               	goto	l3795
  7267  14D4                     u6040:
  7268  14D4                     l3777:
  7269  14D4  01A8               	clrf	___aldiv@counter
  7270  14D5  0AA8               	incf	___aldiv@counter,f
  7271  14D6  2CE4               	goto	l3781
  7272  14D7                     l3779:
  7273  14D7  3001               	movlw	1
  7274  14D8  00F3               	movwf	??___aldiv
  7275  14D9                     u6055:
  7276  14D9  1003               	clrc
  7277  14DA  0DA0               	rlf	___aldiv@divisor,f
  7278  14DB  0DA1               	rlf	___aldiv@divisor+1,f
  7279  14DC  0DA2               	rlf	___aldiv@divisor+2,f
  7280  14DD  0DA3               	rlf	___aldiv@divisor+3,f
  7281  14DE  0BF3               	decfsz	??___aldiv,f
  7282  14DF  2CD9               	goto	u6055
  7283  14E0  3001               	movlw	1
  7284  14E1  00F3               	movwf	??___aldiv
  7285  14E2  0873               	movf	??___aldiv,w
  7286  14E3  07A8               	addwf	___aldiv@counter,f
  7287  14E4                     l3781:
  7288  14E4  1FA3               	btfss	___aldiv@divisor+3,7
  7289  14E5  2CE7               	goto	u6061
  7290  14E6  2CE8               	goto	u6060
  7291  14E7                     u6061:
  7292  14E7  2CD7               	goto	l3779
  7293  14E8                     u6060:
  7294  14E8                     l3783:
  7295  14E8  3001               	movlw	1
  7296  14E9  00F3               	movwf	??___aldiv
  7297  14EA                     u6075:
  7298  14EA  1003               	clrc
  7299  14EB  0DAA               	rlf	___aldiv@quotient,f
  7300  14EC  0DAB               	rlf	___aldiv@quotient+1,f
  7301  14ED  0DAC               	rlf	___aldiv@quotient+2,f
  7302  14EE  0DAD               	rlf	___aldiv@quotient+3,f
  7303  14EF  0BF3               	decfsz	??___aldiv,f
  7304  14F0  2CEA               	goto	u6075
  7305  14F1                     l3785:
  7306  14F1  0823               	movf	___aldiv@divisor+3,w
  7307  14F2  0227               	subwf	___aldiv@dividend+3,w
  7308  14F3  1D03               	skipz
  7309  14F4  2CFF               	goto	u6085
  7310  14F5  0822               	movf	___aldiv@divisor+2,w
  7311  14F6  0226               	subwf	___aldiv@dividend+2,w
  7312  14F7  1D03               	skipz
  7313  14F8  2CFF               	goto	u6085
  7314  14F9  0821               	movf	___aldiv@divisor+1,w
  7315  14FA  0225               	subwf	___aldiv@dividend+1,w
  7316  14FB  1D03               	skipz
  7317  14FC  2CFF               	goto	u6085
  7318  14FD  0820               	movf	___aldiv@divisor,w
  7319  14FE  0224               	subwf	___aldiv@dividend,w
  7320  14FF                     u6085:
  7321  14FF  1C03               	skipc
  7322  1500  2D02               	goto	u6081
  7323  1501  2D03               	goto	u6080
  7324  1502                     u6081:
  7325  1502  2D12               	goto	l3791
  7326  1503                     u6080:
  7327  1503                     l3787:
  7328  1503  0820               	movf	___aldiv@divisor,w
  7329  1504  02A4               	subwf	___aldiv@dividend,f
  7330  1505  0821               	movf	___aldiv@divisor+1,w
  7331  1506  1C03               	skipc
  7332  1507  0F21               	incfsz	___aldiv@divisor+1,w
  7333  1508  02A5               	subwf	___aldiv@dividend+1,f
  7334  1509  0822               	movf	___aldiv@divisor+2,w
  7335  150A  1C03               	skipc
  7336  150B  0F22               	incfsz	___aldiv@divisor+2,w
  7337  150C  02A6               	subwf	___aldiv@dividend+2,f
  7338  150D  0823               	movf	___aldiv@divisor+3,w
  7339  150E  1C03               	skipc
  7340  150F  0F23               	incfsz	___aldiv@divisor+3,w
  7341  1510  02A7               	subwf	___aldiv@dividend+3,f
  7342  1511                     l3789:
  7343  1511  142A               	bsf	___aldiv@quotient,0
  7344  1512                     l3791:
  7345  1512  3001               	movlw	1
  7346  1513                     u6095:
  7347  1513  1003               	clrc
  7348  1514  0CA3               	rrf	___aldiv@divisor+3,f
  7349  1515  0CA2               	rrf	___aldiv@divisor+2,f
  7350  1516  0CA1               	rrf	___aldiv@divisor+1,f
  7351  1517  0CA0               	rrf	___aldiv@divisor,f
  7352  1518  3EFF               	addlw	-1
  7353  1519  1D03               	skipz
  7354  151A  2D13               	goto	u6095
  7355  151B                     l3793:
  7356  151B  3001               	movlw	1
  7357  151C  02A8               	subwf	___aldiv@counter,f
  7358  151D  1D03               	btfss	3,2
  7359  151E  2D20               	goto	u6101
  7360  151F  2D21               	goto	u6100
  7361  1520                     u6101:
  7362  1520  2CE8               	goto	l3783
  7363  1521                     u6100:
  7364  1521                     l3795:
  7365  1521  0829               	movf	___aldiv@sign,w
  7366  1522  1903               	btfsc	3,2
  7367  1523  2D25               	goto	u6111
  7368  1524  2D26               	goto	u6110
  7369  1525                     u6111:
  7370  1525  2D31               	goto	l3799
  7371  1526                     u6110:
  7372  1526                     l3797:
  7373  1526  09AA               	comf	___aldiv@quotient,f
  7374  1527  09AB               	comf	___aldiv@quotient+1,f
  7375  1528  09AC               	comf	___aldiv@quotient+2,f
  7376  1529  09AD               	comf	___aldiv@quotient+3,f
  7377  152A  0AAA               	incf	___aldiv@quotient,f
  7378  152B  1903               	skipnz
  7379  152C  0AAB               	incf	___aldiv@quotient+1,f
  7380  152D  1903               	skipnz
  7381  152E  0AAC               	incf	___aldiv@quotient+2,f
  7382  152F  1903               	skipnz
  7383  1530  0AAD               	incf	___aldiv@quotient+3,f
  7384  1531                     l3799:
  7385  1531  082D               	movf	___aldiv@quotient+3,w
  7386  1532  00A3               	movwf	?___aldiv+3
  7387  1533  082C               	movf	___aldiv@quotient+2,w
  7388  1534  00A2               	movwf	?___aldiv+2
  7389  1535  082B               	movf	___aldiv@quotient+1,w
  7390  1536  00A1               	movwf	?___aldiv+1
  7391  1537  082A               	movf	___aldiv@quotient,w
  7392  1538  00A0               	movwf	?___aldiv
  7393  1539                     l506:
  7394  1539  0008               	return
  7395  153A                     __end_of___aldiv:
  7396                           
  7397                           	psect	text27
  7398  1FC6                     __ptext27:	
  7399 ;; *************** function _I2C_Master_Init *****************
  7400 ;; Defined at:
  7401 ;;		line 16 in file "I2C.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;  c               4   13[BANK0 ] const unsigned long 
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;		None
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  1    wreg      void 
  7408 ;; Registers used:
  7409 ;;		wreg, status,2, status,0, pclath, cstack
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7415 ;;      Params:         0       4       0       0       0
  7416 ;;      Locals:         0       0       0       0       0
  7417 ;;      Temps:          4       0       0       0       0
  7418 ;;      Totals:         4       4       0       0       0
  7419 ;;Total ram usage:        8 bytes
  7420 ;; Hardware stack levels used:    1
  7421 ;; Hardware stack levels required when called:    3
  7422 ;; This function calls:
  7423 ;;		___lldiv
  7424 ;; This function is called by:
  7425 ;;		_main
  7426 ;;		_aht_begin
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           
  7431                           ;psect for function _I2C_Master_Init
  7432  1FC6                     _I2C_Master_Init:
  7433  1FC6                     l3887:	
  7434                           ;incstack = 0
  7435                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  7436                           
  7437                           
  7438                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  7439  1FC6  3028               	movlw	40
  7440  1FC7  1283               	bcf	3,5	;RP0=0, select bank0
  7441  1FC8  1303               	bcf	3,6	;RP1=0, select bank0
  7442  1FC9  0094               	movwf	20	;volatile
  7443  1FCA                     l3889:
  7444                           
  7445                           ;I2C.c: 19:     SSPCON2 = 0;
  7446  1FCA  1683               	bsf	3,5	;RP0=1, select bank1
  7447  1FCB  1303               	bcf	3,6	;RP1=0, select bank1
  7448  1FCC  0191               	clrf	17	;volatile
  7449  1FCD                     l3891:
  7450                           
  7451                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  7452  1FCD  1283               	bcf	3,5	;RP0=0, select bank0
  7453  1FCE  1303               	bcf	3,6	;RP1=0, select bank0
  7454  1FCF  082D               	movf	I2C_Master_Init@c,w
  7455  1FD0  00F4               	movwf	??_I2C_Master_Init
  7456  1FD1  082E               	movf	I2C_Master_Init@c+1,w
  7457  1FD2  00F5               	movwf	??_I2C_Master_Init+1
  7458  1FD3  082F               	movf	I2C_Master_Init@c+2,w
  7459  1FD4  00F6               	movwf	??_I2C_Master_Init+2
  7460  1FD5  0830               	movf	I2C_Master_Init@c+3,w
  7461  1FD6  00F7               	movwf	??_I2C_Master_Init+3
  7462  1FD7  3002               	movlw	2
  7463  1FD8                     u6325:
  7464  1FD8  1003               	clrc
  7465  1FD9  0DF4               	rlf	??_I2C_Master_Init,f
  7466  1FDA  0DF5               	rlf	??_I2C_Master_Init+1,f
  7467  1FDB  0DF6               	rlf	??_I2C_Master_Init+2,f
  7468  1FDC  0DF7               	rlf	??_I2C_Master_Init+3,f
  7469  1FDD                     u6320:
  7470  1FDD  3EFF               	addlw	-1
  7471  1FDE  1D03               	skipz
  7472  1FDF  2FD8               	goto	u6325
  7473  1FE0  0877               	movf	??_I2C_Master_Init+3,w
  7474  1FE1  00A3               	movwf	___lldiv@divisor+3
  7475  1FE2  0876               	movf	??_I2C_Master_Init+2,w
  7476  1FE3  00A2               	movwf	___lldiv@divisor+2
  7477  1FE4  0875               	movf	??_I2C_Master_Init+1,w
  7478  1FE5  00A1               	movwf	___lldiv@divisor+1
  7479  1FE6  0874               	movf	??_I2C_Master_Init,w
  7480  1FE7  00A0               	movwf	___lldiv@divisor
  7481  1FE8  3000               	movlw	0
  7482  1FE9  00A7               	movwf	___lldiv@dividend+3
  7483  1FEA  307A               	movlw	122
  7484  1FEB  00A6               	movwf	___lldiv@dividend+2
  7485  1FEC  3012               	movlw	18
  7486  1FED  00A5               	movwf	___lldiv@dividend+1
  7487  1FEE  3000               	movlw	0
  7488  1FEF  00A4               	movwf	___lldiv@dividend
  7489  1FF0  160A  118A  2231  160A  158A  	fcall	___lldiv
  7490  1FF5  1283               	bcf	3,5	;RP0=0, select bank0
  7491  1FF6  1303               	bcf	3,6	;RP1=0, select bank0
  7492  1FF7  0820               	movf	?___lldiv,w
  7493  1FF8  3EFF               	addlw	255
  7494  1FF9  1683               	bsf	3,5	;RP0=1, select bank1
  7495  1FFA  1303               	bcf	3,6	;RP1=0, select bank1
  7496  1FFB  0093               	movwf	19	;volatile
  7497  1FFC                     l3893:
  7498                           
  7499                           ;I2C.c: 21:     SSPSTAT = 0;
  7500  1FFC  0194               	clrf	20	;volatile
  7501  1FFD                     l3895:
  7502                           
  7503                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  7504  1FFD  1587               	bsf	7,3	;volatile
  7505  1FFE                     l3897:
  7506                           
  7507                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  7508  1FFE  1607               	bsf	7,4	;volatile
  7509  1FFF                     l96:
  7510  1FFF  0008               	return
  7511  2000                     __end_of_I2C_Master_Init:
  7512                           
  7513                           	psect	text28
  7514  1231                     __ptext28:	
  7515 ;; *************** function ___lldiv *****************
  7516 ;; Defined at:
  7517 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\__lldiv.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;  divisor         4    0[BANK0 ] unsigned long 
  7520 ;;  dividend        4    4[BANK0 ] unsigned long 
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;  quotient        4    8[BANK0 ] unsigned long 
  7523 ;;  counter         1   12[BANK0 ] unsigned char 
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  4    0[BANK0 ] unsigned long 
  7526 ;; Registers used:
  7527 ;;		wreg, status,2, status,0
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7533 ;;      Params:         0       8       0       0       0
  7534 ;;      Locals:         0       5       0       0       0
  7535 ;;      Temps:          1       0       0       0       0
  7536 ;;      Totals:         1      13       0       0       0
  7537 ;;Total ram usage:       14 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; Hardware stack levels required when called:    2
  7540 ;; This function calls:
  7541 ;;		Nothing
  7542 ;; This function is called by:
  7543 ;;		_I2C_Master_Init
  7544 ;;		_sprintf
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           
  7549                           ;psect for function ___lldiv
  7550  1231                     ___lldiv:
  7551  1231                     l3739:	
  7552                           ;incstack = 0
  7553                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7554                           
  7555  1231  3000               	movlw	0
  7556  1232  1283               	bcf	3,5	;RP0=0, select bank0
  7557  1233  1303               	bcf	3,6	;RP1=0, select bank0
  7558  1234  00AB               	movwf	___lldiv@quotient+3
  7559  1235  3000               	movlw	0
  7560  1236  00AA               	movwf	___lldiv@quotient+2
  7561  1237  3000               	movlw	0
  7562  1238  00A9               	movwf	___lldiv@quotient+1
  7563  1239  3000               	movlw	0
  7564  123A  00A8               	movwf	___lldiv@quotient
  7565  123B  0823               	movf	___lldiv@divisor+3,w
  7566  123C  0422               	iorwf	___lldiv@divisor+2,w
  7567  123D  0421               	iorwf	___lldiv@divisor+1,w
  7568  123E  0420               	iorwf	___lldiv@divisor,w
  7569  123F  1903               	skipnz
  7570  1240  2A42               	goto	u5951
  7571  1241  2A43               	goto	u5950
  7572  1242                     u5951:
  7573  1242  2A90               	goto	l3759
  7574  1243                     u5950:
  7575  1243                     l3741:
  7576  1243  01AC               	clrf	___lldiv@counter
  7577  1244  0AAC               	incf	___lldiv@counter,f
  7578  1245  2A53               	goto	l3745
  7579  1246                     l3743:
  7580  1246  3001               	movlw	1
  7581  1247  00F3               	movwf	??___lldiv
  7582  1248                     u5965:
  7583  1248  1003               	clrc
  7584  1249  0DA0               	rlf	___lldiv@divisor,f
  7585  124A  0DA1               	rlf	___lldiv@divisor+1,f
  7586  124B  0DA2               	rlf	___lldiv@divisor+2,f
  7587  124C  0DA3               	rlf	___lldiv@divisor+3,f
  7588  124D  0BF3               	decfsz	??___lldiv,f
  7589  124E  2A48               	goto	u5965
  7590  124F  3001               	movlw	1
  7591  1250  00F3               	movwf	??___lldiv
  7592  1251  0873               	movf	??___lldiv,w
  7593  1252  07AC               	addwf	___lldiv@counter,f
  7594  1253                     l3745:
  7595  1253  1FA3               	btfss	___lldiv@divisor+3,7
  7596  1254  2A56               	goto	u5971
  7597  1255  2A57               	goto	u5970
  7598  1256                     u5971:
  7599  1256  2A46               	goto	l3743
  7600  1257                     u5970:
  7601  1257                     l3747:
  7602  1257  3001               	movlw	1
  7603  1258  00F3               	movwf	??___lldiv
  7604  1259                     u5985:
  7605  1259  1003               	clrc
  7606  125A  0DA8               	rlf	___lldiv@quotient,f
  7607  125B  0DA9               	rlf	___lldiv@quotient+1,f
  7608  125C  0DAA               	rlf	___lldiv@quotient+2,f
  7609  125D  0DAB               	rlf	___lldiv@quotient+3,f
  7610  125E  0BF3               	decfsz	??___lldiv,f
  7611  125F  2A59               	goto	u5985
  7612  1260                     l3749:
  7613  1260  0823               	movf	___lldiv@divisor+3,w
  7614  1261  0227               	subwf	___lldiv@dividend+3,w
  7615  1262  1D03               	skipz
  7616  1263  2A6E               	goto	u5995
  7617  1264  0822               	movf	___lldiv@divisor+2,w
  7618  1265  0226               	subwf	___lldiv@dividend+2,w
  7619  1266  1D03               	skipz
  7620  1267  2A6E               	goto	u5995
  7621  1268  0821               	movf	___lldiv@divisor+1,w
  7622  1269  0225               	subwf	___lldiv@dividend+1,w
  7623  126A  1D03               	skipz
  7624  126B  2A6E               	goto	u5995
  7625  126C  0820               	movf	___lldiv@divisor,w
  7626  126D  0224               	subwf	___lldiv@dividend,w
  7627  126E                     u5995:
  7628  126E  1C03               	skipc
  7629  126F  2A71               	goto	u5991
  7630  1270  2A72               	goto	u5990
  7631  1271                     u5991:
  7632  1271  2A81               	goto	l3755
  7633  1272                     u5990:
  7634  1272                     l3751:
  7635  1272  0820               	movf	___lldiv@divisor,w
  7636  1273  02A4               	subwf	___lldiv@dividend,f
  7637  1274  0821               	movf	___lldiv@divisor+1,w
  7638  1275  1C03               	skipc
  7639  1276  0F21               	incfsz	___lldiv@divisor+1,w
  7640  1277  02A5               	subwf	___lldiv@dividend+1,f
  7641  1278  0822               	movf	___lldiv@divisor+2,w
  7642  1279  1C03               	skipc
  7643  127A  0F22               	incfsz	___lldiv@divisor+2,w
  7644  127B  02A6               	subwf	___lldiv@dividend+2,f
  7645  127C  0823               	movf	___lldiv@divisor+3,w
  7646  127D  1C03               	skipc
  7647  127E  0F23               	incfsz	___lldiv@divisor+3,w
  7648  127F  02A7               	subwf	___lldiv@dividend+3,f
  7649  1280                     l3753:
  7650  1280  1428               	bsf	___lldiv@quotient,0
  7651  1281                     l3755:
  7652  1281  3001               	movlw	1
  7653  1282                     u6005:
  7654  1282  1003               	clrc
  7655  1283  0CA3               	rrf	___lldiv@divisor+3,f
  7656  1284  0CA2               	rrf	___lldiv@divisor+2,f
  7657  1285  0CA1               	rrf	___lldiv@divisor+1,f
  7658  1286  0CA0               	rrf	___lldiv@divisor,f
  7659  1287  3EFF               	addlw	-1
  7660  1288  1D03               	skipz
  7661  1289  2A82               	goto	u6005
  7662  128A                     l3757:
  7663  128A  3001               	movlw	1
  7664  128B  02AC               	subwf	___lldiv@counter,f
  7665  128C  1D03               	btfss	3,2
  7666  128D  2A8F               	goto	u6011
  7667  128E  2A90               	goto	u6010
  7668  128F                     u6011:
  7669  128F  2A57               	goto	l3747
  7670  1290                     u6010:
  7671  1290                     l3759:
  7672  1290  082B               	movf	___lldiv@quotient+3,w
  7673  1291  00A3               	movwf	?___lldiv+3
  7674  1292  082A               	movf	___lldiv@quotient+2,w
  7675  1293  00A2               	movwf	?___lldiv+2
  7676  1294  0829               	movf	___lldiv@quotient+1,w
  7677  1295  00A1               	movwf	?___lldiv+1
  7678  1296  0828               	movf	___lldiv@quotient,w
  7679  1297  00A0               	movwf	?___lldiv
  7680  1298                     l461:
  7681  1298  0008               	return
  7682  1299                     __end_of___lldiv:
  7683                           
  7684                           	psect	text29
  7685  1F2D                     __ptext29:	
  7686 ;; *************** function _ISR *****************
  7687 ;; Defined at:
  7688 ;;		line 57 in file "pic16f.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;		None
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;		None
  7693 ;; Return value:  Size  Location     Type
  7694 ;;                  1    wreg      void 
  7695 ;; Registers used:
  7696 ;;		wreg, pclath, cstack
  7697 ;; Tracked objects:
  7698 ;;		On entry : 0/0
  7699 ;;		On exit  : 0/0
  7700 ;;		Unchanged: 0/0
  7701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7702 ;;      Params:         0       0       0       0       0
  7703 ;;      Locals:         0       0       0       0       0
  7704 ;;      Temps:          3       0       0       0       0
  7705 ;;      Totals:         3       0       0       0       0
  7706 ;;Total ram usage:        3 bytes
  7707 ;; Hardware stack levels used:    1
  7708 ;; Hardware stack levels required when called:    1
  7709 ;; This function calls:
  7710 ;;		_Read_USART
  7711 ;; This function is called by:
  7712 ;;		Interrupt level 1
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           
  7717                           ;psect for function _ISR
  7718  1F2D                     _ISR:
  7719  1F2D                     i1l1943:
  7720                           
  7721                           ;pic16f.c: 58:     if (RCIF==1){
  7722  1F2D  1283               	bcf	3,5	;RP0=0, select bank0
  7723  1F2E  1303               	bcf	3,6	;RP1=0, select bank0
  7724  1F2F  1E8C               	btfss	12,5	;volatile
  7725  1F30  2F32               	goto	u226_21
  7726  1F31  2F33               	goto	u226_20
  7727  1F32                     u226_21:
  7728  1F32  2F3C               	goto	i1l59
  7729  1F33                     u226_20:
  7730  1F33                     i1l1945:
  7731                           
  7732                           ;pic16f.c: 59:         RCIF=0;
  7733  1F33  128C               	bcf	12,5	;volatile
  7734  1F34                     i1l1947:
  7735                           
  7736                           ;pic16f.c: 60:         LecturaUSART=Read_USART();
  7737  1F34  160A  158A  26CC  160A  158A  	fcall	_Read_USART
  7738  1F39  00F0               	movwf	??_ISR
  7739  1F3A  0870               	movf	??_ISR,w
  7740  1F3B  00FA               	movwf	_LecturaUSART
  7741  1F3C                     i1l59:
  7742  1F3C  0872               	movf	??_ISR+2,w
  7743  1F3D  008A               	movwf	10
  7744  1F3E  0E71               	swapf	??_ISR+1,w
  7745  1F3F  0083               	movwf	3
  7746  1F40  0EFE               	swapf	btemp,f
  7747  1F41  0E7E               	swapf	btemp,w
  7748  1F42  0009               	retfie
  7749  1F43                     __end_of_ISR:
  7750                           
  7751                           	psect	intentry
  7752  0004                     __pintentry:	
  7753                           ;incstack = 0
  7754                           ; Regs used in _ISR: [wreg+pclath+cstack]
  7755                           
  7756  0004                     interrupt_function:
  7757  007E                     saved_w	set	btemp
  7758  0004  00FE               	movwf	btemp
  7759  0005  0E03               	swapf	3,w
  7760  0006  00F1               	movwf	??_ISR+1
  7761  0007  080A               	movf	10,w
  7762  0008  00F2               	movwf	??_ISR+2
  7763  0009  160A  158A  2F2D   	ljmp	_ISR
  7764                           
  7765                           	psect	text30
  7766  1ECC                     __ptext30:	
  7767 ;; *************** function _Read_USART *****************
  7768 ;; Defined at:
  7769 ;;		line 40 in file "USART.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;		None
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;		None
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  1    wreg      unsigned char 
  7776 ;; Registers used:
  7777 ;;		wreg
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7783 ;;      Params:         0       0       0       0       0
  7784 ;;      Locals:         0       0       0       0       0
  7785 ;;      Temps:          0       0       0       0       0
  7786 ;;      Totals:         0       0       0       0       0
  7787 ;;Total ram usage:        0 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; This function calls:
  7790 ;;		Nothing
  7791 ;; This function is called by:
  7792 ;;		_ISR
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           
  7797                           ;psect for function _Read_USART
  7798  1ECC                     _Read_USART:
  7799  1ECC                     i1l1603:	
  7800                           ;incstack = 0
  7801                           ; Regs used in _Read_USART: [wreg]
  7802                           
  7803  1ECC                     i1l166:	
  7804                           ;USART.c: 41:   while(!RCIF);
  7805                           
  7806  1ECC  1283               	bcf	3,5	;RP0=0, select bank0
  7807  1ECD  1303               	bcf	3,6	;RP1=0, select bank0
  7808  1ECE  1E8C               	btfss	12,5	;volatile
  7809  1ECF  2ED1               	goto	u166_21
  7810  1ED0  2ED2               	goto	u166_20
  7811  1ED1                     u166_21:
  7812  1ED1  2ECC               	goto	i1l166
  7813  1ED2                     u166_20:
  7814  1ED2                     i1l1605:
  7815                           
  7816                           ;USART.c: 42:   return RCREG;
  7817  1ED2  081A               	movf	26,w	;volatile
  7818  1ED3                     i1l169:
  7819  1ED3  0008               	return
  7820  1ED4                     __end_of_Read_USART:
  7821  0002                     
  7822                           	psect	functab
  7823  0037                     __pfunctab:
  7824  0037                     __fptable:
  7825  0037                     fptable:
  7826  0037  00FF               	movwf	(btemp+1)& (0+127)
  7827  0038  3000               	movlw	high fptable
  7828  0039  008A               	movwf	10
  7829  003A  087F               	movf	(btemp+1)& (0+127),w
  7830  003B  0782               	addwf	2,f
  7831  003C                     fpbase:
  7832  003C  283C               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  7833  003D                     __end_of__fptable:
  7834  007E                     btemp	set	126	;btemp
  7835  007E                     wtemp0	set	126
  7836                           
  7837                           	psect	config
  7838                           
  7839                           ;Config register CONFIG1 @ 0x2007
  7840                           ;	Oscillator Selection bits
  7841                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  7842                           ;	Watchdog Timer Enable bit
  7843                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7844                           ;	Power-up Timer Enable bit
  7845                           ;	PWRTE = OFF, PWRT disabled
  7846                           ;	RE3/MCLR pin function select bit
  7847                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  7848                           ;	Code Protection bit
  7849                           ;	CP = OFF, Program memory code protection is disabled
  7850                           ;	Data Code Protection bit
  7851                           ;	CPD = OFF, Data memory code protection is disabled
  7852                           ;	Brown Out Reset Selection bits
  7853                           ;	BOREN = OFF, BOR disabled
  7854                           ;	Internal External Switchover bit
  7855                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7856                           ;	Fail-Safe Clock Monitor Enabled bit
  7857                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7858                           ;	Low Voltage Programming Enable bit
  7859                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7860                           ;	In-Circuit Debugger Mode bit
  7861                           ;	DEBUG = 0x1, unprogrammed default
  7862  2007                     	org	8199
  7863  2007  20D4               	dw	8404
  7864                           
  7865                           ;Config register CONFIG2 @ 0x2008
  7866                           ;	Brown-out Reset Selection bit
  7867                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  7868                           ;	Flash Program Memory Self Write Enable bits
  7869                           ;	WRT = OFF, Write protection off
  7870  2008                     	org	8200
  7871  2008  3FFF               	dw	16383
  7872                           
  7873                           	psect	text1_split_1
  7874  003D                     u6470:
  7875  003D                     l3995:
  7876  003D  1683               	bsf	3,5	;RP0=1, select bank1
  7877  003E  1303               	bcf	3,6	;RP1=0, select bank1
  7878  003F  0835               	movf	(sprintf@fval+2)^(0+128),w
  7879  0040  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  7880  0041  0433               	iorwf	sprintf@fval^(0+128),w
  7881  0042  1903               	skipnz
  7882  0043  2845               	goto	u6481
  7883  0044  2846               	goto	u6480
  7884  0045                     u6481:
  7885  0045  2904               	goto	l4015
  7886  0046                     u6480:
  7887  0046                     l3997:
  7888  0046  0833               	movf	sprintf@fval^(0+128),w
  7889  0047  1283               	bcf	3,5	;RP0=0, select bank0
  7890  0048  1303               	bcf	3,6	;RP1=0, select bank0
  7891  0049  00C8               	movwf	___fttol@f1
  7892  004A  1683               	bsf	3,5	;RP0=1, select bank1
  7893  004B  1303               	bcf	3,6	;RP1=0, select bank1
  7894  004C  0834               	movf	(sprintf@fval+1)^(0+128),w
  7895  004D  1283               	bcf	3,5	;RP0=0, select bank0
  7896  004E  1303               	bcf	3,6	;RP1=0, select bank0
  7897  004F  00C9               	movwf	___fttol@f1+1
  7898  0050  1683               	bsf	3,5	;RP0=1, select bank1
  7899  0051  1303               	bcf	3,6	;RP1=0, select bank1
  7900  0052  0835               	movf	(sprintf@fval+2)^(0+128),w
  7901  0053  1283               	bcf	3,5	;RP0=0, select bank0
  7902  0054  1303               	bcf	3,6	;RP1=0, select bank0
  7903  0055  00CA               	movwf	___fttol@f1+2
  7904  0056  160A  118A  2384  120A  118A  	fcall	___fttol
  7905  005B  1283               	bcf	3,5	;RP0=0, select bank0
  7906  005C  1303               	bcf	3,6	;RP1=0, select bank0
  7907  005D  084B               	movf	?___fttol+3,w
  7908  005E  044A               	iorwf	?___fttol+2,w
  7909  005F  0449               	iorwf	?___fttol+1,w
  7910  0060  0448               	iorwf	?___fttol,w
  7911  0061  1D03               	skipz
  7912  0062  2864               	goto	u6491
  7913  0063  2865               	goto	u6490
  7914  0064                     u6491:
  7915  0064  2904               	goto	l4015
  7916  0065                     u6490:
  7917  0065                     l3999:
  7918  0065  1683               	bsf	3,5	;RP0=1, select bank1
  7919  0066  1303               	bcf	3,6	;RP1=0, select bank1
  7920  0067  0831               	movf	(sprintf@eexp+1)^(0+128),w
  7921  0068  3A80               	xorlw	128
  7922  0069  00FF               	movwf	btemp+1
  7923  006A  3080               	movlw	128
  7924  006B  027F               	subwf	btemp+1,w
  7925  006C  1D03               	skipz
  7926  006D  2870               	goto	u6505
  7927  006E  3002               	movlw	2
  7928  006F  0230               	subwf	sprintf@eexp^(0+128),w
  7929  0070                     u6505:
  7930  0070  1C03               	skipc
  7931  0071  2873               	goto	u6501
  7932  0072  2874               	goto	u6500
  7933  0073                     u6501:
  7934  0073  2904               	goto	l4015
  7935  0074                     u6500:
  7936  0074                     l4001:
  7937                           
  7938                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1146:      if(tmpval.integ < 4.2
      +                          94967296){
  7939  0074  1683               	bsf	3,5	;RP0=1, select bank1
  7940  0075  1303               	bcf	3,6	;RP1=0, select bank1
  7941  0076  082C               	movf	sprintf@tmpval^(0+128),w
  7942  0077  1283               	bcf	3,5	;RP0=0, select bank0
  7943  0078  1303               	bcf	3,6	;RP1=0, select bank0
  7944  0079  00A0               	movwf	___ftge@ff1
  7945  007A  1683               	bsf	3,5	;RP0=1, select bank1
  7946  007B  1303               	bcf	3,6	;RP1=0, select bank1
  7947  007C  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  7948  007D  1283               	bcf	3,5	;RP0=0, select bank0
  7949  007E  1303               	bcf	3,6	;RP1=0, select bank0
  7950  007F  00A1               	movwf	___ftge@ff1+1
  7951  0080  1683               	bsf	3,5	;RP0=1, select bank1
  7952  0081  1303               	bcf	3,6	;RP1=0, select bank1
  7953  0082  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  7954  0083  1283               	bcf	3,5	;RP0=0, select bank0
  7955  0084  1303               	bcf	3,6	;RP1=0, select bank0
  7956  0085  00A2               	movwf	___ftge@ff1+2
  7957  0086  3070               	movlw	112
  7958  0087  00A3               	movwf	___ftge@ff2
  7959  0088  3089               	movlw	137
  7960  0089  00A4               	movwf	___ftge@ff2+1
  7961  008A  3040               	movlw	64
  7962  008B  00A5               	movwf	___ftge@ff2+2
  7963  008C  160A  118A  20C4  120A  118A  	fcall	___ftge
  7964  0091  1803               	btfsc	3,0
  7965  0092  2894               	goto	u6511
  7966  0093  2895               	goto	u6510
  7967  0094                     u6511:
  7968  0094  289E               	goto	l4005
  7969  0095                     u6510:
  7970  0095                     l4003:
  7971                           
  7972                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1147:       eexp -= (sizeof dpow
      +                          ers/sizeof dpowers[0])-1;
  7973  0095  30F7               	movlw	247
  7974  0096  1683               	bsf	3,5	;RP0=1, select bank1
  7975  0097  1303               	bcf	3,6	;RP1=0, select bank1
  7976  0098  07B0               	addwf	sprintf@eexp^(0+128),f
  7977  0099  1803               	skipnc
  7978  009A  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  7979  009B  30FF               	movlw	255
  7980  009C  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  7981                           
  7982                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1148:      }else{
  7983  009D  28A6               	goto	l4007
  7984  009E                     l4005:
  7985                           
  7986                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1149:       eexp -= (sizeof dpow
      +                          ers/sizeof dpowers[0])-2;
  7987  009E  30F8               	movlw	248
  7988  009F  1683               	bsf	3,5	;RP0=1, select bank1
  7989  00A0  1303               	bcf	3,6	;RP1=0, select bank1
  7990  00A1  07B0               	addwf	sprintf@eexp^(0+128),f
  7991  00A2  1803               	skipnc
  7992  00A3  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  7993  00A4  30FF               	movlw	255
  7994  00A5  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  7995  00A6                     l4007:
  7996                           
  7997                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1151:      tmpval.integ = scale(
      +                          eexp);
  7998  00A6  0830               	movf	sprintf@eexp^(0+128),w
  7999  00A7  120A  158A  2247  120A  118A  	fcall	_scale
  8000  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  8001  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  8002  00AE  083F               	movf	?_scale,w
  8003  00AF  1683               	bsf	3,5	;RP0=1, select bank1
  8004  00B0  1303               	bcf	3,6	;RP1=0, select bank1
  8005  00B1  00AC               	movwf	sprintf@tmpval^(0+128)
  8006  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  8007  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  8008  00B4  0840               	movf	?_scale+1,w
  8009  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  8010  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  8011  00B7  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  8012  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  8013  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  8014  00BA  0841               	movf	?_scale+2,w
  8015  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  8016  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  8017  00BD  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  8018  00BE                     l4011:	
  8019                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1152:      val = ((sizeof(double
      +                          )== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  8020                           
  8021  00BE  0833               	movf	sprintf@fval^(0+128),w
  8022  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  8023  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  8024  00C1  00A0               	movwf	__tdiv_to_l_@f1
  8025  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  8026  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  8027  00C4  0834               	movf	(sprintf@fval+1)^(0+128),w
  8028  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  8029  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  8030  00C7  00A1               	movwf	__tdiv_to_l_@f1+1
  8031  00C8  1683               	bsf	3,5	;RP0=1, select bank1
  8032  00C9  1303               	bcf	3,6	;RP1=0, select bank1
  8033  00CA  0835               	movf	(sprintf@fval+2)^(0+128),w
  8034  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  8035  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  8036  00CD  00A2               	movwf	__tdiv_to_l_@f1+2
  8037  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  8038  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  8039  00D0  082C               	movf	sprintf@tmpval^(0+128),w
  8040  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  8041  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  8042  00D3  00A3               	movwf	__tdiv_to_l_@f2
  8043  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  8044  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  8045  00D6  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  8046  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  8047  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  8048  00D9  00A4               	movwf	__tdiv_to_l_@f2+1
  8049  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  8050  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  8051  00DC  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  8052  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  8053  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  8054  00DF  00A5               	movwf	__tdiv_to_l_@f2+2
  8055  00E0  160A  118A  253A  120A  118A  	fcall	__tdiv_to_l_
  8056  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  8057  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  8058  00E7  0823               	movf	?__tdiv_to_l_+3,w
  8059  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  8060  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  8061  00EA  00A7               	movwf	(sprintf@val+3)^(0+128)
  8062  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  8063  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  8064  00ED  0822               	movf	?__tdiv_to_l_+2,w
  8065  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  8066  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  8067  00F0  00A6               	movwf	(sprintf@val+2)^(0+128)
  8068  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  8069  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  8070  00F3  0821               	movf	?__tdiv_to_l_+1,w
  8071  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  8072  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  8073  00F6  00A5               	movwf	(sprintf@val+1)^(0+128)
  8074  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  8075  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  8076  00F9  0820               	movf	?__tdiv_to_l_,w
  8077  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  8078  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  8079  00FC  00A4               	movwf	sprintf@val^(0+128)
  8080  00FD                     l4013:
  8081                           
  8082                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1155:      fval = 0.0;
  8083  00FD  3000               	movlw	0
  8084  00FE  00B3               	movwf	sprintf@fval^(0+128)
  8085  00FF  3000               	movlw	0
  8086  0100  00B4               	movwf	(sprintf@fval+1)^(0+128)
  8087  0101  3000               	movlw	0
  8088  0102  00B5               	movwf	(sprintf@fval+2)^(0+128)
  8089                           
  8090                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1156:     } else {
  8091  0103  2981               	goto	l4019
  8092  0104                     l4015:
  8093                           
  8094                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1157:      val = (unsigned long)
      +                          fval;
  8095  0104  1683               	bsf	3,5	;RP0=1, select bank1
  8096  0105  1303               	bcf	3,6	;RP1=0, select bank1
  8097  0106  0833               	movf	sprintf@fval^(0+128),w
  8098  0107  1283               	bcf	3,5	;RP0=0, select bank0
  8099  0108  1303               	bcf	3,6	;RP1=0, select bank0
  8100  0109  00C8               	movwf	___fttol@f1
  8101  010A  1683               	bsf	3,5	;RP0=1, select bank1
  8102  010B  1303               	bcf	3,6	;RP1=0, select bank1
  8103  010C  0834               	movf	(sprintf@fval+1)^(0+128),w
  8104  010D  1283               	bcf	3,5	;RP0=0, select bank0
  8105  010E  1303               	bcf	3,6	;RP1=0, select bank0
  8106  010F  00C9               	movwf	___fttol@f1+1
  8107  0110  1683               	bsf	3,5	;RP0=1, select bank1
  8108  0111  1303               	bcf	3,6	;RP1=0, select bank1
  8109  0112  0835               	movf	(sprintf@fval+2)^(0+128),w
  8110  0113  1283               	bcf	3,5	;RP0=0, select bank0
  8111  0114  1303               	bcf	3,6	;RP1=0, select bank0
  8112  0115  00CA               	movwf	___fttol@f1+2
  8113  0116  160A  118A  2384  120A  118A  	fcall	___fttol
  8114  011B  1283               	bcf	3,5	;RP0=0, select bank0
  8115  011C  1303               	bcf	3,6	;RP1=0, select bank0
  8116  011D  084B               	movf	?___fttol+3,w
  8117  011E  1683               	bsf	3,5	;RP0=1, select bank1
  8118  011F  1303               	bcf	3,6	;RP1=0, select bank1
  8119  0120  00A7               	movwf	(sprintf@val+3)^(0+128)
  8120  0121  1283               	bcf	3,5	;RP0=0, select bank0
  8121  0122  1303               	bcf	3,6	;RP1=0, select bank0
  8122  0123  084A               	movf	?___fttol+2,w
  8123  0124  1683               	bsf	3,5	;RP0=1, select bank1
  8124  0125  1303               	bcf	3,6	;RP1=0, select bank1
  8125  0126  00A6               	movwf	(sprintf@val+2)^(0+128)
  8126  0127  1283               	bcf	3,5	;RP0=0, select bank0
  8127  0128  1303               	bcf	3,6	;RP1=0, select bank0
  8128  0129  0849               	movf	?___fttol+1,w
  8129  012A  1683               	bsf	3,5	;RP0=1, select bank1
  8130  012B  1303               	bcf	3,6	;RP1=0, select bank1
  8131  012C  00A5               	movwf	(sprintf@val+1)^(0+128)
  8132  012D  1283               	bcf	3,5	;RP0=0, select bank0
  8133  012E  1303               	bcf	3,6	;RP1=0, select bank0
  8134  012F  0848               	movf	?___fttol,w
  8135  0130  1683               	bsf	3,5	;RP0=1, select bank1
  8136  0131  1303               	bcf	3,6	;RP1=0, select bank1
  8137  0132  00A4               	movwf	sprintf@val^(0+128)
  8138                           
  8139                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1158:      fval -= (double)val;
  8140  0133  0827               	movf	(sprintf@val+3)^(0+128),w
  8141  0134  1283               	bcf	3,5	;RP0=0, select bank0
  8142  0135  1303               	bcf	3,6	;RP1=0, select bank0
  8143  0136  00A6               	movwf	___lltoft@c+3
  8144  0137  1683               	bsf	3,5	;RP0=1, select bank1
  8145  0138  1303               	bcf	3,6	;RP1=0, select bank1
  8146  0139  0826               	movf	(sprintf@val+2)^(0+128),w
  8147  013A  1283               	bcf	3,5	;RP0=0, select bank0
  8148  013B  1303               	bcf	3,6	;RP1=0, select bank0
  8149  013C  00A5               	movwf	___lltoft@c+2
  8150  013D  1683               	bsf	3,5	;RP0=1, select bank1
  8151  013E  1303               	bcf	3,6	;RP1=0, select bank1
  8152  013F  0825               	movf	(sprintf@val+1)^(0+128),w
  8153  0140  1283               	bcf	3,5	;RP0=0, select bank0
  8154  0141  1303               	bcf	3,6	;RP1=0, select bank0
  8155  0142  00A4               	movwf	___lltoft@c+1
  8156  0143  1683               	bsf	3,5	;RP0=1, select bank1
  8157  0144  1303               	bcf	3,6	;RP1=0, select bank1
  8158  0145  0824               	movf	sprintf@val^(0+128),w
  8159  0146  1283               	bcf	3,5	;RP0=0, select bank0
  8160  0147  1303               	bcf	3,6	;RP1=0, select bank0
  8161  0148  00A3               	movwf	___lltoft@c
  8162  0149  160A  158A  2793  120A  118A  	fcall	___lltoft
  8163  014E  1283               	bcf	3,5	;RP0=0, select bank0
  8164  014F  1303               	bcf	3,6	;RP1=0, select bank0
  8165  0150  0823               	movf	?___lltoft,w
  8166  0151  00DC               	movwf	___ftsub@f2
  8167  0152  0824               	movf	?___lltoft+1,w
  8168  0153  00DD               	movwf	___ftsub@f2+1
  8169  0154  0825               	movf	?___lltoft+2,w
  8170  0155  00DE               	movwf	___ftsub@f2+2
  8171  0156  1683               	bsf	3,5	;RP0=1, select bank1
  8172  0157  1303               	bcf	3,6	;RP1=0, select bank1
  8173  0158  0833               	movf	sprintf@fval^(0+128),w
  8174  0159  1283               	bcf	3,5	;RP0=0, select bank0
  8175  015A  1303               	bcf	3,6	;RP1=0, select bank0
  8176  015B  00DF               	movwf	___ftsub@f1
  8177  015C  1683               	bsf	3,5	;RP0=1, select bank1
  8178  015D  1303               	bcf	3,6	;RP1=0, select bank1
  8179  015E  0834               	movf	(sprintf@fval+1)^(0+128),w
  8180  015F  1283               	bcf	3,5	;RP0=0, select bank0
  8181  0160  1303               	bcf	3,6	;RP1=0, select bank0
  8182  0161  00E0               	movwf	___ftsub@f1+1
  8183  0162  1683               	bsf	3,5	;RP0=1, select bank1
  8184  0163  1303               	bcf	3,6	;RP1=0, select bank1
  8185  0164  0835               	movf	(sprintf@fval+2)^(0+128),w
  8186  0165  1283               	bcf	3,5	;RP0=0, select bank0
  8187  0166  1303               	bcf	3,6	;RP1=0, select bank0
  8188  0167  00E1               	movwf	___ftsub@f1+2
  8189  0168  160A  158A  2743  120A  118A  	fcall	___ftsub
  8190  016D  1283               	bcf	3,5	;RP0=0, select bank0
  8191  016E  1303               	bcf	3,6	;RP1=0, select bank0
  8192  016F  085C               	movf	?___ftsub,w
  8193  0170  1683               	bsf	3,5	;RP0=1, select bank1
  8194  0171  1303               	bcf	3,6	;RP1=0, select bank1
  8195  0172  00B3               	movwf	sprintf@fval^(0+128)
  8196  0173  1283               	bcf	3,5	;RP0=0, select bank0
  8197  0174  1303               	bcf	3,6	;RP1=0, select bank0
  8198  0175  085D               	movf	?___ftsub+1,w
  8199  0176  1683               	bsf	3,5	;RP0=1, select bank1
  8200  0177  1303               	bcf	3,6	;RP1=0, select bank1
  8201  0178  00B4               	movwf	(sprintf@fval+1)^(0+128)
  8202  0179  1283               	bcf	3,5	;RP0=0, select bank0
  8203  017A  1303               	bcf	3,6	;RP1=0, select bank0
  8204  017B  085E               	movf	?___ftsub+2,w
  8205  017C  1683               	bsf	3,5	;RP0=1, select bank1
  8206  017D  1303               	bcf	3,6	;RP1=0, select bank1
  8207  017E  00B5               	movwf	(sprintf@fval+2)^(0+128)
  8208  017F                     l4017:
  8209                           
  8210                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1159:      eexp = 0;
  8211  017F  01B0               	clrf	sprintf@eexp^(0+128)
  8212  0180  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  8213  0181                     l4019:
  8214                           
  8215                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1162:     for(c = 1 ; c != (size
      +                          of dpowers/sizeof dpowers[0]) ; c++)
  8216  0181  01B8               	clrf	sprintf@c^(0+128)
  8217  0182  0AB8               	incf	sprintf@c^(0+128),f
  8218  0183                     l4025:
  8219                           
  8220                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1163:      if(val < dpowers[c])
  8221  0183  0838               	movf	sprintf@c^(0+128),w
  8222  0184  1283               	bcf	3,5	;RP0=0, select bank0
  8223  0185  1303               	bcf	3,6	;RP1=0, select bank0
  8224  0186  00E7               	movwf	??_sprintf
  8225  0187  3001               	movlw	1
  8226  0188                     u6525:
  8227  0188  1003               	clrc
  8228  0189  0DE7               	rlf	??_sprintf,f
  8229  018A  3EFF               	addlw	-1
  8230  018B  1D03               	skipz
  8231  018C  2988               	goto	u6525
  8232  018D  1003               	clrc
  8233  018E  0D67               	rlf	??_sprintf,w
  8234  018F  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8235  0190  0084               	movwf	4
  8236  0191  160A  118A  200A  120A  118A  	fcall	stringdir
  8237  0196  00E8               	movwf	??_sprintf+1
  8238  0197  160A  118A  200A  120A  118A  	fcall	stringdir
  8239  019C  00E9               	movwf	??_sprintf+2
  8240  019D  160A  118A  200A  120A  118A  	fcall	stringdir
  8241  01A2  00EA               	movwf	??_sprintf+3
  8242  01A3  160A  118A  200A  120A  118A  	fcall	stringdir
  8243  01A8  00EB               	movwf	??_sprintf+4
  8244  01A9  086B               	movf	??_sprintf+4,w
  8245  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  8246  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  8247  01AC  0227               	subwf	(sprintf@val+3)^(0+128),w
  8248  01AD  1D03               	skipz
  8249  01AE  29C5               	goto	u6535
  8250  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  8251  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  8252  01B1  086A               	movf	??_sprintf+3,w
  8253  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  8254  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  8255  01B4  0226               	subwf	(sprintf@val+2)^(0+128),w
  8256  01B5  1D03               	skipz
  8257  01B6  29C5               	goto	u6535
  8258  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  8259  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  8260  01B9  0869               	movf	??_sprintf+2,w
  8261  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  8262  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  8263  01BC  0225               	subwf	(sprintf@val+1)^(0+128),w
  8264  01BD  1D03               	skipz
  8265  01BE  29C5               	goto	u6535
  8266  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  8267  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  8268  01C1  0868               	movf	??_sprintf+1,w
  8269  01C2  1683               	bsf	3,5	;RP0=1, select bank1
  8270  01C3  1303               	bcf	3,6	;RP1=0, select bank1
  8271  01C4  0224               	subwf	sprintf@val^(0+128),w
  8272  01C5                     u6535:
  8273  01C5  1803               	skipnc
  8274  01C6  29C8               	goto	u6531
  8275  01C7  29C9               	goto	u6530
  8276  01C8                     u6531:
  8277  01C8  29CA               	goto	l4029
  8278  01C9                     u6530:
  8279  01C9  29D8               	goto	l4031
  8280  01CA                     l4029:
  8281  01CA  3001               	movlw	1
  8282  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  8283  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  8284  01CD  00E7               	movwf	??_sprintf
  8285  01CE  0867               	movf	??_sprintf,w
  8286  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  8287  01D0  1303               	bcf	3,6	;RP1=0, select bank1
  8288  01D1  07B8               	addwf	sprintf@c^(0+128),f
  8289  01D2  300A               	movlw	10
  8290  01D3  0638               	xorwf	sprintf@c^(0+128),w
  8291  01D4  1D03               	btfss	3,2
  8292  01D5  29D7               	goto	u6541
  8293  01D6  29D8               	goto	u6540
  8294  01D7                     u6541:
  8295  01D7  2983               	goto	l4025
  8296  01D8                     u6540:
  8297  01D8                     l4031:
  8298                           
  8299                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1168:     width -= prec + c + ee
      +                          xp;
  8300  01D8  0838               	movf	sprintf@c^(0+128),w
  8301  01D9  0736               	addwf	sprintf@prec^(0+128),w
  8302  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  8303  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  8304  01DC  00E7               	movwf	??_sprintf
  8305  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  8306  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  8307  01DF  0837               	movf	(sprintf@prec+1)^(0+128),w
  8308  01E0  1803               	skipnc
  8309  01E1  0A37               	incf	(sprintf@prec+1)^(0+128),w
  8310  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  8311  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  8312  01E4  00E8               	movwf	??_sprintf+1
  8313  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  8314  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  8315  01E7  0830               	movf	sprintf@eexp^(0+128),w
  8316  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  8317  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  8318  01EA  0767               	addwf	??_sprintf,w
  8319  01EB  00E9               	movwf	??_sprintf+2
  8320  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  8321  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  8322  01EE  0831               	movf	(sprintf@eexp+1)^(0+128),w
  8323  01EF  1803               	skipnc
  8324  01F0  0A31               	incf	(sprintf@eexp+1)^(0+128),w
  8325  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  8326  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  8327  01F3  0768               	addwf	??_sprintf+1,w
  8328  01F4  00EA               	movwf	??_sprintf+3
  8329  01F5  0869               	movf	??_sprintf+2,w
  8330  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  8331  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  8332  01F8  02AA               	subwf	sprintf@width^(0+128),f
  8333  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  8334  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  8335  01FB  086A               	movf	??_sprintf+3,w
  8336  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  8337  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  8338  01FE  1C03               	skipc
  8339  01FF  03AB               	decf	(sprintf@width+1)^(0+128),f
  8340  0200  02AB               	subwf	(sprintf@width+1)^(0+128),f
  8341                           
  8342                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1169:     if(
  8343  0201  0836               	movf	sprintf@prec^(0+128),w
  8344  0202  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  8345  0203  1903               	btfsc	3,2
  8346  0204  2A06               	goto	u6551
  8347  0205  2A07               	goto	u6550
  8348  0206                     u6551:
  8349  0206  2A0D               	goto	l4035
  8350  0207                     u6550:
  8351  0207                     l4033:
  8352                           
  8353                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1174:      width--;
  8354  0207  30FF               	movlw	255
  8355  0208  07AA               	addwf	sprintf@width^(0+128),f
  8356  0209  1803               	skipnc
  8357  020A  0AAB               	incf	(sprintf@width+1)^(0+128),f
  8358  020B  30FF               	movlw	255
  8359  020C  07AB               	addwf	(sprintf@width+1)^(0+128),f
  8360  020D                     l4035:
  8361                           
  8362                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1175:     if(flag & 0x03)
  8363  020D  3003               	movlw	3
  8364  020E  0528               	andwf	sprintf@flag^(0+128),w
  8365  020F  1283               	bcf	3,5	;RP0=0, select bank0
  8366  0210  1303               	bcf	3,6	;RP1=0, select bank0
  8367  0211  00E7               	movwf	??_sprintf
  8368  0212  3000               	movlw	0
  8369  0213  1683               	bsf	3,5	;RP0=1, select bank1
  8370  0214  1303               	bcf	3,6	;RP1=0, select bank1
  8371  0215  0529               	andwf	(sprintf@flag+1)^(0+128),w
  8372  0216  1283               	bcf	3,5	;RP0=0, select bank0
  8373  0217  1303               	bcf	3,6	;RP1=0, select bank0
  8374  0218  00E8               	movwf	??_sprintf+1
  8375  0219  0867               	movf	??_sprintf,w
  8376  021A  0468               	iorwf	??_sprintf+1,w
  8377  021B  1903               	btfsc	3,2
  8378  021C  2A1E               	goto	u6561
  8379  021D  2A1F               	goto	u6560
  8380  021E                     u6561:
  8381  021E  2A3C               	goto	l4045
  8382  021F                     u6560:
  8383  021F                     l4037:
  8384                           
  8385                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1176:      width--;
  8386  021F  30FF               	movlw	255
  8387  0220  1683               	bsf	3,5	;RP0=1, select bank1
  8388  0221  1303               	bcf	3,6	;RP1=0, select bank1
  8389  0222  07AA               	addwf	sprintf@width^(0+128),f
  8390  0223  1803               	skipnc
  8391  0224  0AAB               	incf	(sprintf@width+1)^(0+128),f
  8392  0225  30FF               	movlw	255
  8393  0226  07AB               	addwf	(sprintf@width+1)^(0+128),f
  8394  0227  2A3C               	goto	l4045
  8395  0228                     l4039:
  8396                           
  8397                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1207:       ((*sp++ = (' ')));
  8398  0228  3020               	movlw	32
  8399  0229  1283               	bcf	3,5	;RP0=0, select bank0
  8400  022A  1303               	bcf	3,6	;RP1=0, select bank0
  8401  022B  00E7               	movwf	??_sprintf
  8402  022C  1683               	bsf	3,5	;RP0=1, select bank1
  8403  022D  1303               	bcf	3,6	;RP1=0, select bank1
  8404  022E  0832               	movf	sprintf@sp^(0+128),w
  8405  022F  0084               	movwf	4
  8406  0230  1283               	bcf	3,5	;RP0=0, select bank0
  8407  0231  1303               	bcf	3,6	;RP1=0, select bank0
  8408  0232  0867               	movf	??_sprintf,w
  8409  0233  1383               	bcf	3,7	;select IRP bank0
  8410  0234  0080               	movwf	0
  8411  0235                     l4041:
  8412  0235  3001               	movlw	1
  8413  0236  00E7               	movwf	??_sprintf
  8414  0237  0867               	movf	??_sprintf,w
  8415  0238  1683               	bsf	3,5	;RP0=1, select bank1
  8416  0239  1303               	bcf	3,6	;RP1=0, select bank1
  8417  023A  07B2               	addwf	sprintf@sp^(0+128),f
  8418  023B  2A1F               	goto	l4037
  8419  023C                     l4045:
  8420                           
  8421                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1206:      while(width > 0) {
  8422  023C  1683               	bsf	3,5	;RP0=1, select bank1
  8423  023D  1303               	bcf	3,6	;RP1=0, select bank1
  8424  023E  082B               	movf	(sprintf@width+1)^(0+128),w
  8425  023F  3A80               	xorlw	128
  8426  0240  00FF               	movwf	btemp+1
  8427  0241  3080               	movlw	128
  8428  0242  027F               	subwf	btemp+1,w
  8429  0243  1D03               	skipz
  8430  0244  2A47               	goto	u6575
  8431  0245  3001               	movlw	1
  8432  0246  022A               	subwf	sprintf@width^(0+128),w
  8433  0247                     u6575:
  8434  0247  1803               	skipnc
  8435  0248  2A4A               	goto	u6571
  8436  0249  2A4B               	goto	u6570
  8437  024A                     u6571:
  8438  024A  2A28               	goto	l4039
  8439  024B                     u6570:
  8440  024B                     l4047:
  8441                           
  8442                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x03)
  8443  024B  3003               	movlw	3
  8444  024C  1683               	bsf	3,5	;RP0=1, select bank1
  8445  024D  1303               	bcf	3,6	;RP1=0, select bank1
  8446  024E  0528               	andwf	sprintf@flag^(0+128),w
  8447  024F  1283               	bcf	3,5	;RP0=0, select bank0
  8448  0250  1303               	bcf	3,6	;RP1=0, select bank0
  8449  0251  00E7               	movwf	??_sprintf
  8450  0252  3000               	movlw	0
  8451  0253  1683               	bsf	3,5	;RP0=1, select bank1
  8452  0254  1303               	bcf	3,6	;RP1=0, select bank1
  8453  0255  0529               	andwf	(sprintf@flag+1)^(0+128),w
  8454  0256  1283               	bcf	3,5	;RP0=0, select bank0
  8455  0257  1303               	bcf	3,6	;RP1=0, select bank0
  8456  0258  00E8               	movwf	??_sprintf+1
  8457  0259  0867               	movf	??_sprintf,w
  8458  025A  0468               	iorwf	??_sprintf+1,w
  8459  025B  1903               	btfsc	3,2
  8460  025C  2A5E               	goto	u6581
  8461  025D  2A5F               	goto	u6580
  8462  025E                     u6581:
  8463  025E  2B1F               	goto	l391
  8464  025F                     u6580:
  8465  025F                     l4049:
  8466                           
  8467                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1216:      ((*sp++ = ('-')));
  8468  025F  302D               	movlw	45
  8469  0260  00E7               	movwf	??_sprintf
  8470  0261  1683               	bsf	3,5	;RP0=1, select bank1
  8471  0262  1303               	bcf	3,6	;RP1=0, select bank1
  8472  0263  0832               	movf	sprintf@sp^(0+128),w
  8473  0264  0084               	movwf	4
  8474  0265  1283               	bcf	3,5	;RP0=0, select bank0
  8475  0266  1303               	bcf	3,6	;RP1=0, select bank0
  8476  0267  0867               	movf	??_sprintf,w
  8477  0268  1383               	bcf	3,7	;select IRP bank0
  8478  0269  0080               	movwf	0
  8479  026A                     l4051:
  8480  026A  3001               	movlw	1
  8481  026B  00E7               	movwf	??_sprintf
  8482  026C  0867               	movf	??_sprintf,w
  8483  026D  1683               	bsf	3,5	;RP0=1, select bank1
  8484  026E  1303               	bcf	3,6	;RP1=0, select bank1
  8485  026F  07B2               	addwf	sprintf@sp^(0+128),f
  8486  0270  2B1F               	goto	l391
  8487  0271                     l4053:
  8488                           
  8489                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1226:     {;D:\MPLAB XC8 compile
      +                          r\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = val/dpowers[c];
  8490  0271  0838               	movf	sprintf@c^(0+128),w
  8491  0272  1283               	bcf	3,5	;RP0=0, select bank0
  8492  0273  1303               	bcf	3,6	;RP1=0, select bank0
  8493  0274  00E7               	movwf	??_sprintf
  8494  0275  3001               	movlw	1
  8495  0276                     u6595:
  8496  0276  1003               	clrc
  8497  0277  0DE7               	rlf	??_sprintf,f
  8498  0278  3EFF               	addlw	-1
  8499  0279  1D03               	skipz
  8500  027A  2A76               	goto	u6595
  8501  027B  1003               	clrc
  8502  027C  0D67               	rlf	??_sprintf,w
  8503  027D  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8504  027E  0084               	movwf	4
  8505  027F  160A  118A  200A  120A  118A  	fcall	stringdir
  8506  0284  00A0               	movwf	___lldiv@divisor
  8507  0285  160A  118A  200A  120A  118A  	fcall	stringdir
  8508  028A  00A1               	movwf	___lldiv@divisor+1
  8509  028B  160A  118A  200A  120A  118A  	fcall	stringdir
  8510  0290  00A2               	movwf	___lldiv@divisor+2
  8511  0291  160A  118A  200A  120A  118A  	fcall	stringdir
  8512  0296  00A3               	movwf	___lldiv@divisor+3
  8513  0297  1683               	bsf	3,5	;RP0=1, select bank1
  8514  0298  1303               	bcf	3,6	;RP1=0, select bank1
  8515  0299  0827               	movf	(sprintf@val+3)^(0+128),w
  8516  029A  1283               	bcf	3,5	;RP0=0, select bank0
  8517  029B  1303               	bcf	3,6	;RP1=0, select bank0
  8518  029C  00A7               	movwf	___lldiv@dividend+3
  8519  029D  1683               	bsf	3,5	;RP0=1, select bank1
  8520  029E  1303               	bcf	3,6	;RP1=0, select bank1
  8521  029F  0826               	movf	(sprintf@val+2)^(0+128),w
  8522  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  8523  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  8524  02A2  00A6               	movwf	___lldiv@dividend+2
  8525  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  8526  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  8527  02A5  0825               	movf	(sprintf@val+1)^(0+128),w
  8528  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  8529  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  8530  02A8  00A5               	movwf	___lldiv@dividend+1
  8531  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  8532  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  8533  02AB  0824               	movf	sprintf@val^(0+128),w
  8534  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  8535  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  8536  02AE  00A4               	movwf	___lldiv@dividend
  8537  02AF  160A  118A  2231  120A  118A  	fcall	___lldiv
  8538  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  8539  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  8540  02B6  0823               	movf	?___lldiv+3,w
  8541  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  8542  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  8543  02B9  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  8544  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  8545  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  8546  02BC  0822               	movf	?___lldiv+2,w
  8547  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  8548  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  8549  02BF  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  8550  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  8551  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  8552  02C2  0821               	movf	?___lldiv+1,w
  8553  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  8554  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  8555  02C5  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  8556  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  8557  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  8558  02C8  0820               	movf	?___lldiv,w
  8559  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  8560  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  8561  02CB  00AC               	movwf	sprintf@tmpval^(0+128)
  8562  02CC                     l4055:
  8563                           
  8564                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1228:      tmpval.vd %= 10;
  8565  02CC  3000               	movlw	0
  8566  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  8567  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  8568  02CF  00A3               	movwf	___llmod@divisor+3
  8569  02D0  3000               	movlw	0
  8570  02D1  00A2               	movwf	___llmod@divisor+2
  8571  02D2  3000               	movlw	0
  8572  02D3  00A1               	movwf	___llmod@divisor+1
  8573  02D4  300A               	movlw	10
  8574  02D5  00A0               	movwf	___llmod@divisor
  8575  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  8576  02D7  1303               	bcf	3,6	;RP1=0, select bank1
  8577  02D8  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  8578  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  8579  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  8580  02DB  00A7               	movwf	___llmod@dividend+3
  8581  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  8582  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  8583  02DE  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  8584  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  8585  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  8586  02E1  00A6               	movwf	___llmod@dividend+2
  8587  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  8588  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  8589  02E4  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  8590  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  8591  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  8592  02E7  00A5               	movwf	___llmod@dividend+1
  8593  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  8594  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  8595  02EA  082C               	movf	sprintf@tmpval^(0+128),w
  8596  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  8597  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  8598  02ED  00A4               	movwf	___llmod@dividend
  8599  02EE  160A  118A  2180  120A  118A  	fcall	___llmod
  8600  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  8601  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  8602  02F5  0823               	movf	?___llmod+3,w
  8603  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  8604  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  8605  02F8  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  8606  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  8607  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  8608  02FB  0822               	movf	?___llmod+2,w
  8609  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  8610  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  8611  02FE  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  8612  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  8613  0300  1303               	bcf	3,6	;RP1=0, select bank0
  8614  0301  0821               	movf	?___llmod+1,w
  8615  0302  1683               	bsf	3,5	;RP0=1, select bank1
  8616  0303  1303               	bcf	3,6	;RP1=0, select bank1
  8617  0304  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  8618  0305  1283               	bcf	3,5	;RP0=0, select bank0
  8619  0306  1303               	bcf	3,6	;RP1=0, select bank0
  8620  0307  0820               	movf	?___llmod,w
  8621  0308  1683               	bsf	3,5	;RP0=1, select bank1
  8622  0309  1303               	bcf	3,6	;RP1=0, select bank1
  8623  030A  00AC               	movwf	sprintf@tmpval^(0+128)
  8624  030B                     l4057:
  8625                           
  8626                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1229:      ((*sp++ = ('0' + tmpv
      +                          al.vd)));
  8627  030B  082C               	movf	sprintf@tmpval^(0+128),w
  8628  030C  3E30               	addlw	48
  8629  030D  1283               	bcf	3,5	;RP0=0, select bank0
  8630  030E  1303               	bcf	3,6	;RP1=0, select bank0
  8631  030F  00E7               	movwf	??_sprintf
  8632  0310  1683               	bsf	3,5	;RP0=1, select bank1
  8633  0311  1303               	bcf	3,6	;RP1=0, select bank1
  8634  0312  0832               	movf	sprintf@sp^(0+128),w
  8635  0313  0084               	movwf	4
  8636  0314  1283               	bcf	3,5	;RP0=0, select bank0
  8637  0315  1303               	bcf	3,6	;RP1=0, select bank0
  8638  0316  0867               	movf	??_sprintf,w
  8639  0317  1383               	bcf	3,7	;select IRP bank0
  8640  0318  0080               	movwf	0
  8641  0319  3001               	movlw	1
  8642  031A  00E7               	movwf	??_sprintf
  8643  031B  0867               	movf	??_sprintf,w
  8644  031C  1683               	bsf	3,5	;RP0=1, select bank1
  8645  031D  1303               	bcf	3,6	;RP1=0, select bank1
  8646  031E  07B2               	addwf	sprintf@sp^(0+128),f
  8647  031F                     l391:	
  8648                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1230:     };D:\MPLAB XC8 compile
      +                          r\pic\sources\c90\common\doprnt.c: 1232:    }
  8649                           
  8650                           
  8651                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1222:    while(c--) {
  8652  031F  3001               	movlw	1
  8653  0320  1683               	bsf	3,5	;RP0=1, select bank1
  8654  0321  1303               	bcf	3,6	;RP1=0, select bank1
  8655  0322  02B8               	subwf	sprintf@c^(0+128),f
  8656  0323  0A38               	incf	sprintf@c^(0+128),w
  8657  0324  1D03               	btfss	3,2
  8658  0325  2B27               	goto	u6601
  8659  0326  2B28               	goto	u6600
  8660  0327                     u6601:
  8661  0327  2A71               	goto	l4053
  8662  0328                     u6600:
  8663  0328  2B42               	goto	l4065
  8664  0329                     l4059:
  8665                           
  8666                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++ = ('0')));
  8667  0329  3030               	movlw	48
  8668  032A  1283               	bcf	3,5	;RP0=0, select bank0
  8669  032B  1303               	bcf	3,6	;RP1=0, select bank0
  8670  032C  00E7               	movwf	??_sprintf
  8671  032D  1683               	bsf	3,5	;RP0=1, select bank1
  8672  032E  1303               	bcf	3,6	;RP1=0, select bank1
  8673  032F  0832               	movf	sprintf@sp^(0+128),w
  8674  0330  0084               	movwf	4
  8675  0331  1283               	bcf	3,5	;RP0=0, select bank0
  8676  0332  1303               	bcf	3,6	;RP1=0, select bank0
  8677  0333  0867               	movf	??_sprintf,w
  8678  0334  1383               	bcf	3,7	;select IRP bank0
  8679  0335  0080               	movwf	0
  8680  0336                     l4061:
  8681  0336  3001               	movlw	1
  8682  0337  00E7               	movwf	??_sprintf
  8683  0338  0867               	movf	??_sprintf,w
  8684  0339  1683               	bsf	3,5	;RP0=1, select bank1
  8685  033A  1303               	bcf	3,6	;RP1=0, select bank1
  8686  033B  07B2               	addwf	sprintf@sp^(0+128),f
  8687  033C                     l4063:
  8688                           
  8689                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  8690  033C  30FF               	movlw	255
  8691  033D  07B0               	addwf	sprintf@eexp^(0+128),f
  8692  033E  1803               	skipnc
  8693  033F  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  8694  0340  30FF               	movlw	255
  8695  0341  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  8696  0342                     l4065:
  8697                           
  8698                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1233:    while(eexp > 0) {
  8699  0342  0831               	movf	(sprintf@eexp+1)^(0+128),w
  8700  0343  3A80               	xorlw	128
  8701  0344  00FF               	movwf	btemp+1
  8702  0345  3080               	movlw	128
  8703  0346  027F               	subwf	btemp+1,w
  8704  0347  1D03               	skipz
  8705  0348  2B4B               	goto	u6615
  8706  0349  3001               	movlw	1
  8707  034A  0230               	subwf	sprintf@eexp^(0+128),w
  8708  034B                     u6615:
  8709  034B  1803               	skipnc
  8710  034C  2B4E               	goto	u6611
  8711  034D  2B4F               	goto	u6610
  8712  034E                     u6611:
  8713  034E  2B29               	goto	l4059
  8714  034F                     u6610:
  8715  034F                     l4067:
  8716                           
  8717                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1237:    if(prec > (int)((sizeof
      +                           dpowers/sizeof dpowers[0])-2))
  8718  034F  1683               	bsf	3,5	;RP0=1, select bank1
  8719  0350  1303               	bcf	3,6	;RP1=0, select bank1
  8720  0351  0837               	movf	(sprintf@prec+1)^(0+128),w
  8721  0352  3A80               	xorlw	128
  8722  0353  00FF               	movwf	btemp+1
  8723  0354  3080               	movlw	128
  8724  0355  027F               	subwf	btemp+1,w
  8725  0356  1D03               	skipz
  8726  0357  2B5A               	goto	u6625
  8727  0358  3009               	movlw	9
  8728  0359  0236               	subwf	sprintf@prec^(0+128),w
  8729  035A                     u6625:
  8730  035A  1C03               	skipc
  8731  035B  2B5D               	goto	u6621
  8732  035C  2B5E               	goto	u6620
  8733  035D                     u6621:
  8734  035D  2B67               	goto	l4071
  8735  035E                     u6620:
  8736  035E                     l4069:
  8737                           
  8738                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1238:     c = (sizeof dpowers/si
      +                          zeof dpowers[0])-2;
  8739  035E  3008               	movlw	8
  8740  035F  1283               	bcf	3,5	;RP0=0, select bank0
  8741  0360  1303               	bcf	3,6	;RP1=0, select bank0
  8742  0361  00E7               	movwf	??_sprintf
  8743  0362  0867               	movf	??_sprintf,w
  8744  0363  1683               	bsf	3,5	;RP0=1, select bank1
  8745  0364  1303               	bcf	3,6	;RP1=0, select bank1
  8746  0365  00B8               	movwf	sprintf@c^(0+128)
  8747  0366  2B71               	goto	l398
  8748  0367                     l4071:
  8749                           
  8750                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1240:     c = (char)prec;
  8751  0367  1683               	bsf	3,5	;RP0=1, select bank1
  8752  0368  1303               	bcf	3,6	;RP1=0, select bank1
  8753  0369  0836               	movf	sprintf@prec^(0+128),w
  8754  036A  1283               	bcf	3,5	;RP0=0, select bank0
  8755  036B  1303               	bcf	3,6	;RP1=0, select bank0
  8756  036C  00E7               	movwf	??_sprintf
  8757  036D  0867               	movf	??_sprintf,w
  8758  036E  1683               	bsf	3,5	;RP0=1, select bank1
  8759  036F  1303               	bcf	3,6	;RP1=0, select bank1
  8760  0370  00B8               	movwf	sprintf@c^(0+128)
  8761  0371                     l398:
  8762                           
  8763                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1241:    prec -= (int)c;
  8764  0371  0838               	movf	sprintf@c^(0+128),w
  8765  0372  1283               	bcf	3,5	;RP0=0, select bank0
  8766  0373  1303               	bcf	3,6	;RP1=0, select bank0
  8767  0374  00E7               	movwf	??_sprintf
  8768  0375  01E8               	clrf	??_sprintf+1
  8769  0376  0867               	movf	??_sprintf,w
  8770  0377  1683               	bsf	3,5	;RP0=1, select bank1
  8771  0378  1303               	bcf	3,6	;RP1=0, select bank1
  8772  0379  02B6               	subwf	sprintf@prec^(0+128),f
  8773  037A  1283               	bcf	3,5	;RP0=0, select bank0
  8774  037B  1303               	bcf	3,6	;RP1=0, select bank0
  8775  037C  0868               	movf	??_sprintf+1,w
  8776  037D  1683               	bsf	3,5	;RP0=1, select bank1
  8777  037E  1303               	bcf	3,6	;RP1=0, select bank1
  8778  037F  1C03               	skipc
  8779  0380  03B7               	decf	(sprintf@prec+1)^(0+128),f
  8780  0381  02B7               	subwf	(sprintf@prec+1)^(0+128),f
  8781  0382                     l4073:
  8782                           
  8783                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  8784  0382  0838               	movf	sprintf@c^(0+128),w
  8785  0383  1903               	btfsc	3,2
  8786  0384  2B86               	goto	u6631
  8787  0385  2B87               	goto	u6630
  8788  0386                     u6631:
  8789  0386  2B9A               	goto	l4079
  8790  0387                     u6630:
  8791  0387                     l4075:
  8792                           
  8793                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++ = ('.')));
  8794  0387  302E               	movlw	46
  8795  0388  1283               	bcf	3,5	;RP0=0, select bank0
  8796  0389  1303               	bcf	3,6	;RP1=0, select bank0
  8797  038A  00E7               	movwf	??_sprintf
  8798  038B  1683               	bsf	3,5	;RP0=1, select bank1
  8799  038C  1303               	bcf	3,6	;RP1=0, select bank1
  8800  038D  0832               	movf	sprintf@sp^(0+128),w
  8801  038E  0084               	movwf	4
  8802  038F  1283               	bcf	3,5	;RP0=0, select bank0
  8803  0390  1303               	bcf	3,6	;RP1=0, select bank0
  8804  0391  0867               	movf	??_sprintf,w
  8805  0392  1383               	bcf	3,7	;select IRP bank0
  8806  0393  0080               	movwf	0
  8807  0394                     l4077:
  8808  0394  3001               	movlw	1
  8809  0395  00E7               	movwf	??_sprintf
  8810  0396  0867               	movf	??_sprintf,w
  8811  0397  1683               	bsf	3,5	;RP0=1, select bank1
  8812  0398  1303               	bcf	3,6	;RP1=0, select bank1
  8813  0399  07B2               	addwf	sprintf@sp^(0+128),f
  8814  039A                     l4079:
  8815                           
  8816                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(f
      +                          val * scale((signed char)c));
  8817  039A  0838               	movf	sprintf@c^(0+128),w
  8818  039B  120A  158A  2247  120A  118A  	fcall	_scale
  8819  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  8820  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  8821  03A2  083F               	movf	?_scale,w
  8822  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  8823  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  8824  03A5  00A0               	movwf	_sprintf$960^(0+128)
  8825  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  8826  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  8827  03A8  0840               	movf	?_scale+1,w
  8828  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  8829  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  8830  03AB  00A1               	movwf	(_sprintf$960+1)^(0+128)
  8831  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  8832  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  8833  03AE  0841               	movf	?_scale+2,w
  8834  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  8835  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  8836  03B1  00A2               	movwf	(_sprintf$960+2)^(0+128)
  8837  03B2                     l4081:
  8838                           
  8839                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(f
      +                          val * scale((signed char)c));
  8840  03B2  0820               	movf	_sprintf$960^(0+128),w
  8841  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  8842  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  8843  03B5  00B2               	movwf	___ftmul@f2
  8844  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  8845  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  8846  03B8  0821               	movf	(_sprintf$960+1)^(0+128),w
  8847  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  8848  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  8849  03BB  00B3               	movwf	___ftmul@f2+1
  8850  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  8851  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  8852  03BE  0822               	movf	(_sprintf$960+2)^(0+128),w
  8853  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  8854  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  8855  03C1  00B4               	movwf	___ftmul@f2+2
  8856  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  8857  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  8858  03C4  0833               	movf	sprintf@fval^(0+128),w
  8859  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  8860  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  8861  03C7  00AF               	movwf	___ftmul@f1
  8862  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  8863  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  8864  03CA  0834               	movf	(sprintf@fval+1)^(0+128),w
  8865  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  8866  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  8867  03CD  00B0               	movwf	___ftmul@f1+1
  8868  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  8869  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  8870  03D0  0835               	movf	(sprintf@fval+2)^(0+128),w
  8871  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  8872  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  8873  03D3  00B1               	movwf	___ftmul@f1+2
  8874  03D4  120A  158A  202C  120A  118A  	fcall	___ftmul
  8875  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  8876  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  8877  03DB  082F               	movf	?___ftmul,w
  8878  03DC  00C8               	movwf	___fttol@f1
  8879  03DD  0830               	movf	?___ftmul+1,w
  8880  03DE  00C9               	movwf	___fttol@f1+1
  8881  03DF  0831               	movf	?___ftmul+2,w
  8882  03E0  00CA               	movwf	___fttol@f1+2
  8883  03E1  160A  118A  2384  120A  118A  	fcall	___fttol
  8884  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  8885  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  8886  03E8  084B               	movf	?___fttol+3,w
  8887  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  8888  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  8889  03EB  00A7               	movwf	(sprintf@val+3)^(0+128)
  8890  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  8891  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  8892  03EE  084A               	movf	?___fttol+2,w
  8893  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  8894  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  8895  03F1  00A6               	movwf	(sprintf@val+2)^(0+128)
  8896  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  8897  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  8898  03F4  0849               	movf	?___fttol+1,w
  8899  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  8900  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  8901  03F7  00A5               	movwf	(sprintf@val+1)^(0+128)
  8902  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  8903  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  8904  03FA  0848               	movf	?___fttol,w
  8905  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  8906  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  8907  03FD  00A4               	movwf	sprintf@val^(0+128)
  8908                           
  8909                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
  8910  03FE  2D08               	goto	l4091
  8911  03FF                     l4083:
  8912                           
  8913                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1255:     tmpval.vd = val/dpower
      +                          s[c];
  8914  03FF  0838               	movf	sprintf@c^(0+128),w
  8915  0400  1283               	bcf	3,5	;RP0=0, select bank0
  8916  0401  1303               	bcf	3,6	;RP1=0, select bank0
  8917  0402  00E7               	movwf	??_sprintf
  8918  0403  3001               	movlw	1
  8919  0404                     u6645:
  8920  0404  1003               	clrc
  8921  0405  0DE7               	rlf	??_sprintf,f
  8922  0406  3EFF               	addlw	-1
  8923  0407  1D03               	skipz
  8924  0408  2C04               	goto	u6645
  8925  0409  1003               	clrc
  8926  040A  0D67               	rlf	??_sprintf,w
  8927  040B  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8928  040C  0084               	movwf	4
  8929  040D  160A  118A  200A  120A  118A  	fcall	stringdir
  8930  0412  00A0               	movwf	___lldiv@divisor
  8931  0413  160A  118A  200A  120A  118A  	fcall	stringdir
  8932  0418  00A1               	movwf	___lldiv@divisor+1
  8933  0419  160A  118A  200A  120A  118A  	fcall	stringdir
  8934  041E  00A2               	movwf	___lldiv@divisor+2
  8935  041F  160A  118A  200A  120A  118A  	fcall	stringdir
  8936  0424  00A3               	movwf	___lldiv@divisor+3
  8937  0425  1683               	bsf	3,5	;RP0=1, select bank1
  8938  0426  1303               	bcf	3,6	;RP1=0, select bank1
  8939  0427  0827               	movf	(sprintf@val+3)^(0+128),w
  8940  0428  1283               	bcf	3,5	;RP0=0, select bank0
  8941  0429  1303               	bcf	3,6	;RP1=0, select bank0
  8942  042A  00A7               	movwf	___lldiv@dividend+3
  8943  042B  1683               	bsf	3,5	;RP0=1, select bank1
  8944  042C  1303               	bcf	3,6	;RP1=0, select bank1
  8945  042D  0826               	movf	(sprintf@val+2)^(0+128),w
  8946  042E  1283               	bcf	3,5	;RP0=0, select bank0
  8947  042F  1303               	bcf	3,6	;RP1=0, select bank0
  8948  0430  00A6               	movwf	___lldiv@dividend+2
  8949  0431  1683               	bsf	3,5	;RP0=1, select bank1
  8950  0432  1303               	bcf	3,6	;RP1=0, select bank1
  8951  0433  0825               	movf	(sprintf@val+1)^(0+128),w
  8952  0434  1283               	bcf	3,5	;RP0=0, select bank0
  8953  0435  1303               	bcf	3,6	;RP1=0, select bank0
  8954  0436  00A5               	movwf	___lldiv@dividend+1
  8955  0437  1683               	bsf	3,5	;RP0=1, select bank1
  8956  0438  1303               	bcf	3,6	;RP1=0, select bank1
  8957  0439  0824               	movf	sprintf@val^(0+128),w
  8958  043A  1283               	bcf	3,5	;RP0=0, select bank0
  8959  043B  1303               	bcf	3,6	;RP1=0, select bank0
  8960  043C  00A4               	movwf	___lldiv@dividend
  8961  043D  160A  118A  2231  120A  118A  	fcall	___lldiv
  8962  0442  1283               	bcf	3,5	;RP0=0, select bank0
  8963  0443  1303               	bcf	3,6	;RP1=0, select bank0
  8964  0444  0823               	movf	?___lldiv+3,w
  8965  0445  1683               	bsf	3,5	;RP0=1, select bank1
  8966  0446  1303               	bcf	3,6	;RP1=0, select bank1
  8967  0447  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  8968  0448  1283               	bcf	3,5	;RP0=0, select bank0
  8969  0449  1303               	bcf	3,6	;RP1=0, select bank0
  8970  044A  0822               	movf	?___lldiv+2,w
  8971  044B  1683               	bsf	3,5	;RP0=1, select bank1
  8972  044C  1303               	bcf	3,6	;RP1=0, select bank1
  8973  044D  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  8974  044E  1283               	bcf	3,5	;RP0=0, select bank0
  8975  044F  1303               	bcf	3,6	;RP1=0, select bank0
  8976  0450  0821               	movf	?___lldiv+1,w
  8977  0451  1683               	bsf	3,5	;RP0=1, select bank1
  8978  0452  1303               	bcf	3,6	;RP1=0, select bank1
  8979  0453  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  8980  0454  1283               	bcf	3,5	;RP0=0, select bank0
  8981  0455  1303               	bcf	3,6	;RP1=0, select bank0
  8982  0456  0820               	movf	?___lldiv,w
  8983  0457  1683               	bsf	3,5	;RP0=1, select bank1
  8984  0458  1303               	bcf	3,6	;RP1=0, select bank1
  8985  0459  00AC               	movwf	sprintf@tmpval^(0+128)
  8986  045A                     l4085:
  8987                           
  8988                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1256:     tmpval.vd %= 10;
  8989  045A  3000               	movlw	0
  8990  045B  1283               	bcf	3,5	;RP0=0, select bank0
  8991  045C  1303               	bcf	3,6	;RP1=0, select bank0
  8992  045D  00A3               	movwf	___llmod@divisor+3
  8993  045E  3000               	movlw	0
  8994  045F  00A2               	movwf	___llmod@divisor+2
  8995  0460  3000               	movlw	0
  8996  0461  00A1               	movwf	___llmod@divisor+1
  8997  0462  300A               	movlw	10
  8998  0463  00A0               	movwf	___llmod@divisor
  8999  0464  1683               	bsf	3,5	;RP0=1, select bank1
  9000  0465  1303               	bcf	3,6	;RP1=0, select bank1
  9001  0466  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  9002  0467  1283               	bcf	3,5	;RP0=0, select bank0
  9003  0468  1303               	bcf	3,6	;RP1=0, select bank0
  9004  0469  00A7               	movwf	___llmod@dividend+3
  9005  046A  1683               	bsf	3,5	;RP0=1, select bank1
  9006  046B  1303               	bcf	3,6	;RP1=0, select bank1
  9007  046C  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  9008  046D  1283               	bcf	3,5	;RP0=0, select bank0
  9009  046E  1303               	bcf	3,6	;RP1=0, select bank0
  9010  046F  00A6               	movwf	___llmod@dividend+2
  9011  0470  1683               	bsf	3,5	;RP0=1, select bank1
  9012  0471  1303               	bcf	3,6	;RP1=0, select bank1
  9013  0472  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  9014  0473  1283               	bcf	3,5	;RP0=0, select bank0
  9015  0474  1303               	bcf	3,6	;RP1=0, select bank0
  9016  0475  00A5               	movwf	___llmod@dividend+1
  9017  0476  1683               	bsf	3,5	;RP0=1, select bank1
  9018  0477  1303               	bcf	3,6	;RP1=0, select bank1
  9019  0478  082C               	movf	sprintf@tmpval^(0+128),w
  9020  0479  1283               	bcf	3,5	;RP0=0, select bank0
  9021  047A  1303               	bcf	3,6	;RP1=0, select bank0
  9022  047B  00A4               	movwf	___llmod@dividend
  9023  047C  160A  118A  2180  120A  118A  	fcall	___llmod
  9024  0481  1283               	bcf	3,5	;RP0=0, select bank0
  9025  0482  1303               	bcf	3,6	;RP1=0, select bank0
  9026  0483  0823               	movf	?___llmod+3,w
  9027  0484  1683               	bsf	3,5	;RP0=1, select bank1
  9028  0485  1303               	bcf	3,6	;RP1=0, select bank1
  9029  0486  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  9030  0487  1283               	bcf	3,5	;RP0=0, select bank0
  9031  0488  1303               	bcf	3,6	;RP1=0, select bank0
  9032  0489  0822               	movf	?___llmod+2,w
  9033  048A  1683               	bsf	3,5	;RP0=1, select bank1
  9034  048B  1303               	bcf	3,6	;RP1=0, select bank1
  9035  048C  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  9036  048D  1283               	bcf	3,5	;RP0=0, select bank0
  9037  048E  1303               	bcf	3,6	;RP1=0, select bank0
  9038  048F  0821               	movf	?___llmod+1,w
  9039  0490  1683               	bsf	3,5	;RP0=1, select bank1
  9040  0491  1303               	bcf	3,6	;RP1=0, select bank1
  9041  0492  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  9042  0493  1283               	bcf	3,5	;RP0=0, select bank0
  9043  0494  1303               	bcf	3,6	;RP1=0, select bank0
  9044  0495  0820               	movf	?___llmod,w
  9045  0496  1683               	bsf	3,5	;RP0=1, select bank1
  9046  0497  1303               	bcf	3,6	;RP1=0, select bank1
  9047  0498  00AC               	movwf	sprintf@tmpval^(0+128)
  9048  0499                     l4087:
  9049                           
  9050                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++ = ('0' + tmpva
      +                          l.vd)));
  9051  0499  082C               	movf	sprintf@tmpval^(0+128),w
  9052  049A  3E30               	addlw	48
  9053  049B  1283               	bcf	3,5	;RP0=0, select bank0
  9054  049C  1303               	bcf	3,6	;RP1=0, select bank0
  9055  049D  00E7               	movwf	??_sprintf
  9056  049E  1683               	bsf	3,5	;RP0=1, select bank1
  9057  049F  1303               	bcf	3,6	;RP1=0, select bank1
  9058  04A0  0832               	movf	sprintf@sp^(0+128),w
  9059  04A1  0084               	movwf	4
  9060  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  9061  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  9062  04A4  0867               	movf	??_sprintf,w
  9063  04A5  1383               	bcf	3,7	;select IRP bank0
  9064  04A6  0080               	movwf	0
  9065  04A7  3001               	movlw	1
  9066  04A8  00E7               	movwf	??_sprintf
  9067  04A9  0867               	movf	??_sprintf,w
  9068  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  9069  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  9070  04AC  07B2               	addwf	sprintf@sp^(0+128),f
  9071  04AD                     l4089:
  9072                           
  9073                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1258:     val %= dpowers[c];
  9074  04AD  0838               	movf	sprintf@c^(0+128),w
  9075  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  9076  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  9077  04B0  00E7               	movwf	??_sprintf
  9078  04B1  3001               	movlw	1
  9079  04B2                     u6655:
  9080  04B2  1003               	clrc
  9081  04B3  0DE7               	rlf	??_sprintf,f
  9082  04B4  3EFF               	addlw	-1
  9083  04B5  1D03               	skipz
  9084  04B6  2CB2               	goto	u6655
  9085  04B7  1003               	clrc
  9086  04B8  0D67               	rlf	??_sprintf,w
  9087  04B9  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9088  04BA  0084               	movwf	4
  9089  04BB  160A  118A  200A  120A  118A  	fcall	stringdir
  9090  04C0  00A0               	movwf	___llmod@divisor
  9091  04C1  160A  118A  200A  120A  118A  	fcall	stringdir
  9092  04C6  00A1               	movwf	___llmod@divisor+1
  9093  04C7  160A  118A  200A  120A  118A  	fcall	stringdir
  9094  04CC  00A2               	movwf	___llmod@divisor+2
  9095  04CD  160A  118A  200A  120A  118A  	fcall	stringdir
  9096  04D2  00A3               	movwf	___llmod@divisor+3
  9097  04D3  1683               	bsf	3,5	;RP0=1, select bank1
  9098  04D4  1303               	bcf	3,6	;RP1=0, select bank1
  9099  04D5  0827               	movf	(sprintf@val+3)^(0+128),w
  9100  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  9101  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  9102  04D8  00A7               	movwf	___llmod@dividend+3
  9103  04D9  1683               	bsf	3,5	;RP0=1, select bank1
  9104  04DA  1303               	bcf	3,6	;RP1=0, select bank1
  9105  04DB  0826               	movf	(sprintf@val+2)^(0+128),w
  9106  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  9107  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  9108  04DE  00A6               	movwf	___llmod@dividend+2
  9109  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  9110  04E0  1303               	bcf	3,6	;RP1=0, select bank1
  9111  04E1  0825               	movf	(sprintf@val+1)^(0+128),w
  9112  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  9113  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  9114  04E4  00A5               	movwf	___llmod@dividend+1
  9115  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  9116  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  9117  04E7  0824               	movf	sprintf@val^(0+128),w
  9118  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  9119  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  9120  04EA  00A4               	movwf	___llmod@dividend
  9121  04EB  160A  118A  2180  120A  118A  	fcall	___llmod
  9122  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  9123  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  9124  04F2  0823               	movf	?___llmod+3,w
  9125  04F3  1683               	bsf	3,5	;RP0=1, select bank1
  9126  04F4  1303               	bcf	3,6	;RP1=0, select bank1
  9127  04F5  00A7               	movwf	(sprintf@val+3)^(0+128)
  9128  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  9129  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  9130  04F8  0822               	movf	?___llmod+2,w
  9131  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  9132  04FA  1303               	bcf	3,6	;RP1=0, select bank1
  9133  04FB  00A6               	movwf	(sprintf@val+2)^(0+128)
  9134  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  9135  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  9136  04FE  0821               	movf	?___llmod+1,w
  9137  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  9138  0500  1303               	bcf	3,6	;RP1=0, select bank1
  9139  0501  00A5               	movwf	(sprintf@val+1)^(0+128)
  9140  0502  1283               	bcf	3,5	;RP0=0, select bank0
  9141  0503  1303               	bcf	3,6	;RP1=0, select bank0
  9142  0504  0820               	movf	?___llmod,w
  9143  0505  1683               	bsf	3,5	;RP0=1, select bank1
  9144  0506  1303               	bcf	3,6	;RP1=0, select bank1
  9145  0507  00A4               	movwf	sprintf@val^(0+128)
  9146  0508                     l4091:
  9147                           
  9148                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
  9149  0508  3001               	movlw	1
  9150  0509  02B8               	subwf	sprintf@c^(0+128),f
  9151  050A  0A38               	incf	sprintf@c^(0+128),w
  9152  050B  1D03               	btfss	3,2
  9153  050C  2D0E               	goto	u6661
  9154  050D  2D0F               	goto	u6660
  9155  050E                     u6661:
  9156  050E  2BFF               	goto	l4083
  9157  050F                     u6660:
  9158  050F  2D29               	goto	l4099
  9159  0510                     l4093:
  9160                           
  9161                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++ = ('0')));
  9162  0510  3030               	movlw	48
  9163  0511  1283               	bcf	3,5	;RP0=0, select bank0
  9164  0512  1303               	bcf	3,6	;RP1=0, select bank0
  9165  0513  00E7               	movwf	??_sprintf
  9166  0514  1683               	bsf	3,5	;RP0=1, select bank1
  9167  0515  1303               	bcf	3,6	;RP1=0, select bank1
  9168  0516  0832               	movf	sprintf@sp^(0+128),w
  9169  0517  0084               	movwf	4
  9170  0518  1283               	bcf	3,5	;RP0=0, select bank0
  9171  0519  1303               	bcf	3,6	;RP1=0, select bank0
  9172  051A  0867               	movf	??_sprintf,w
  9173  051B  1383               	bcf	3,7	;select IRP bank0
  9174  051C  0080               	movwf	0
  9175  051D                     l4095:
  9176  051D  3001               	movlw	1
  9177  051E  00E7               	movwf	??_sprintf
  9178  051F  0867               	movf	??_sprintf,w
  9179  0520  1683               	bsf	3,5	;RP0=1, select bank1
  9180  0521  1303               	bcf	3,6	;RP1=0, select bank1
  9181  0522  07B2               	addwf	sprintf@sp^(0+128),f
  9182  0523                     l4097:
  9183                           
  9184                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  9185  0523  30FF               	movlw	255
  9186  0524  07B6               	addwf	sprintf@prec^(0+128),f
  9187  0525  1803               	skipnc
  9188  0526  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  9189  0527  30FF               	movlw	255
  9190  0528  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  9191  0529                     l4099:
  9192                           
  9193                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1261:    while(prec) {
  9194  0529  0836               	movf	sprintf@prec^(0+128),w
  9195  052A  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9196  052B  1D03               	btfss	3,2
  9197  052C  2D2E               	goto	u6671
  9198  052D  2D2F               	goto	u6670
  9199  052E                     u6671:
  9200  052E  2D10               	goto	l4093
  9201  052F                     u6670:
  9202  052F  2E33               	goto	l4147
  9203  0530                     l4101:
  9204                           
  9205                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && val == 0
      +                          )
  9206  0530  1683               	bsf	3,5	;RP0=1, select bank1
  9207  0531  1303               	bcf	3,6	;RP1=0, select bank1
  9208  0532  0836               	movf	sprintf@prec^(0+128),w
  9209  0533  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9210  0534  1D03               	btfss	3,2
  9211  0535  2D37               	goto	u6681
  9212  0536  2D38               	goto	u6680
  9213  0537                     u6681:
  9214  0537  2D46               	goto	l406
  9215  0538                     u6680:
  9216  0538                     l4103:
  9217  0538  0827               	movf	(sprintf@val+3)^(0+128),w
  9218  0539  0426               	iorwf	(sprintf@val+2)^(0+128),w
  9219  053A  0425               	iorwf	(sprintf@val+1)^(0+128),w
  9220  053B  0424               	iorwf	sprintf@val^(0+128),w
  9221  053C  1D03               	skipz
  9222  053D  2D3F               	goto	u6691
  9223  053E  2D40               	goto	u6690
  9224  053F                     u6691:
  9225  053F  2D46               	goto	l406
  9226  0540                     u6690:
  9227  0540                     l4105:
  9228                           
  9229                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  9230  0540  3001               	movlw	1
  9231  0541  07B6               	addwf	sprintf@prec^(0+128),f
  9232  0542  1803               	skipnc
  9233  0543  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  9234  0544  3000               	movlw	0
  9235  0545  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  9236  0546                     l406:
  9237                           
  9238                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
  9239  0546  0837               	movf	(sprintf@prec+1)^(0+128),w
  9240  0547  3A80               	xorlw	128
  9241  0548  3C80               	sublw	128
  9242  0549  1D03               	skipz
  9243  054A  2D4D               	goto	u6705
  9244  054B  0836               	movf	sprintf@prec^(0+128),w
  9245  054C  0238               	subwf	sprintf@c^(0+128),w
  9246  054D                     u6705:
  9247  054D  1803               	skipnc
  9248  054E  2D50               	goto	u6701
  9249  054F  2D51               	goto	u6700
  9250  0550                     u6701:
  9251  0550  2D5C               	goto	l4109
  9252  0551                     u6700:
  9253  0551                     l4107:
  9254                           
  9255                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1366:    c = (char)prec;
  9256  0551  1683               	bsf	3,5	;RP0=1, select bank1
  9257  0552  1303               	bcf	3,6	;RP1=0, select bank1
  9258  0553  0836               	movf	sprintf@prec^(0+128),w
  9259  0554  1283               	bcf	3,5	;RP0=0, select bank0
  9260  0555  1303               	bcf	3,6	;RP1=0, select bank0
  9261  0556  00E7               	movwf	??_sprintf
  9262  0557  0867               	movf	??_sprintf,w
  9263  0558  1683               	bsf	3,5	;RP0=1, select bank1
  9264  0559  1303               	bcf	3,6	;RP1=0, select bank1
  9265  055A  00B8               	movwf	sprintf@c^(0+128)
  9266  055B  2D80               	goto	l4113
  9267  055C                     l4109:
  9268  055C  1683               	bsf	3,5	;RP0=1, select bank1
  9269  055D  1303               	bcf	3,6	;RP1=0, select bank1
  9270  055E  0837               	movf	(sprintf@prec+1)^(0+128),w
  9271  055F  3A80               	xorlw	128
  9272  0560  1283               	bcf	3,5	;RP0=0, select bank0
  9273  0561  1303               	bcf	3,6	;RP1=0, select bank0
  9274  0562  00E7               	movwf	??_sprintf
  9275  0563  3080               	movlw	128
  9276  0564  0267               	subwf	??_sprintf,w
  9277  0565  1D03               	skipz
  9278  0566  2D6B               	goto	u6715
  9279  0567  1683               	bsf	3,5	;RP0=1, select bank1
  9280  0568  1303               	bcf	3,6	;RP1=0, select bank1
  9281  0569  0838               	movf	sprintf@c^(0+128),w
  9282  056A  0236               	subwf	sprintf@prec^(0+128),w
  9283  056B                     u6715:
  9284  056B  1803               	skipnc
  9285  056C  2D6E               	goto	u6711
  9286  056D  2D6F               	goto	u6710
  9287  056E                     u6711:
  9288  056E  2D80               	goto	l4113
  9289  056F                     u6710:
  9290  056F                     l4111:
  9291                           
  9292                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
  9293  056F  1683               	bsf	3,5	;RP0=1, select bank1
  9294  0570  1303               	bcf	3,6	;RP1=0, select bank1
  9295  0571  0838               	movf	sprintf@c^(0+128),w
  9296  0572  1283               	bcf	3,5	;RP0=0, select bank0
  9297  0573  1303               	bcf	3,6	;RP1=0, select bank0
  9298  0574  00E7               	movwf	??_sprintf
  9299  0575  01E8               	clrf	??_sprintf+1
  9300  0576  0867               	movf	??_sprintf,w
  9301  0577  1683               	bsf	3,5	;RP0=1, select bank1
  9302  0578  1303               	bcf	3,6	;RP1=0, select bank1
  9303  0579  00B6               	movwf	sprintf@prec^(0+128)
  9304  057A  1283               	bcf	3,5	;RP0=0, select bank0
  9305  057B  1303               	bcf	3,6	;RP1=0, select bank0
  9306  057C  0868               	movf	??_sprintf+1,w
  9307  057D  1683               	bsf	3,5	;RP0=1, select bank1
  9308  057E  1303               	bcf	3,6	;RP1=0, select bank1
  9309  057F  00B7               	movwf	(sprintf@prec+1)^(0+128)
  9310  0580                     l4113:
  9311                           
  9312                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0x03)
  9313  0580  1683               	bsf	3,5	;RP0=1, select bank1
  9314  0581  1303               	bcf	3,6	;RP1=0, select bank1
  9315  0582  082A               	movf	sprintf@width^(0+128),w
  9316  0583  042B               	iorwf	(sprintf@width+1)^(0+128),w
  9317  0584  1903               	btfsc	3,2
  9318  0585  2D87               	goto	u6721
  9319  0586  2D88               	goto	u6720
  9320  0587                     u6721:
  9321  0587  2DA2               	goto	l4119
  9322  0588                     u6720:
  9323  0588                     l4115:
  9324  0588  3003               	movlw	3
  9325  0589  0528               	andwf	sprintf@flag^(0+128),w
  9326  058A  1283               	bcf	3,5	;RP0=0, select bank0
  9327  058B  1303               	bcf	3,6	;RP1=0, select bank0
  9328  058C  00E7               	movwf	??_sprintf
  9329  058D  3000               	movlw	0
  9330  058E  1683               	bsf	3,5	;RP0=1, select bank1
  9331  058F  1303               	bcf	3,6	;RP1=0, select bank1
  9332  0590  0529               	andwf	(sprintf@flag+1)^(0+128),w
  9333  0591  1283               	bcf	3,5	;RP0=0, select bank0
  9334  0592  1303               	bcf	3,6	;RP1=0, select bank0
  9335  0593  00E8               	movwf	??_sprintf+1
  9336  0594  0867               	movf	??_sprintf,w
  9337  0595  0468               	iorwf	??_sprintf+1,w
  9338  0596  1903               	btfsc	3,2
  9339  0597  2D99               	goto	u6731
  9340  0598  2D9A               	goto	u6730
  9341  0599                     u6731:
  9342  0599  2DA2               	goto	l4119
  9343  059A                     u6730:
  9344  059A                     l4117:
  9345                           
  9346                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1372:    width--;
  9347  059A  30FF               	movlw	255
  9348  059B  1683               	bsf	3,5	;RP0=1, select bank1
  9349  059C  1303               	bcf	3,6	;RP1=0, select bank1
  9350  059D  07AA               	addwf	sprintf@width^(0+128),f
  9351  059E  1803               	skipnc
  9352  059F  0AAB               	incf	(sprintf@width+1)^(0+128),f
  9353  05A0  30FF               	movlw	255
  9354  05A1  07AB               	addwf	(sprintf@width+1)^(0+128),f
  9355  05A2                     l4119:
  9356                           
  9357                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1374:   if(flag & 0x4000) {
  9358  05A2  1683               	bsf	3,5	;RP0=1, select bank1
  9359  05A3  1303               	bcf	3,6	;RP1=0, select bank1
  9360  05A4  1F29               	btfss	(sprintf@flag+1)^(0+128),6
  9361  05A5  2DA7               	goto	u6741
  9362  05A6  2DA8               	goto	u6740
  9363  05A7                     u6741:
  9364  05A7  2DCB               	goto	l4127
  9365  05A8                     u6740:
  9366  05A8                     l4121:
  9367                           
  9368                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1375:    if(width > prec)
  9369  05A8  0837               	movf	(sprintf@prec+1)^(0+128),w
  9370  05A9  3A80               	xorlw	128
  9371  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  9372  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  9373  05AC  00E7               	movwf	??_sprintf
  9374  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  9375  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  9376  05AF  082B               	movf	(sprintf@width+1)^(0+128),w
  9377  05B0  3A80               	xorlw	128
  9378  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  9379  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  9380  05B3  0267               	subwf	??_sprintf,w
  9381  05B4  1D03               	skipz
  9382  05B5  2DBA               	goto	u6755
  9383  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  9384  05B7  1303               	bcf	3,6	;RP1=0, select bank1
  9385  05B8  082A               	movf	sprintf@width^(0+128),w
  9386  05B9  0236               	subwf	sprintf@prec^(0+128),w
  9387  05BA                     u6755:
  9388  05BA  1803               	skipnc
  9389  05BB  2DBD               	goto	u6751
  9390  05BC  2DBE               	goto	u6750
  9391  05BD                     u6751:
  9392  05BD  2DC7               	goto	l4125
  9393  05BE                     u6750:
  9394  05BE                     l4123:
  9395                           
  9396                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1376:     width -= prec;
  9397  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  9398  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  9399  05C0  0836               	movf	sprintf@prec^(0+128),w
  9400  05C1  02AA               	subwf	sprintf@width^(0+128),f
  9401  05C2  0837               	movf	(sprintf@prec+1)^(0+128),w
  9402  05C3  1C03               	skipc
  9403  05C4  03AB               	decf	(sprintf@width+1)^(0+128),f
  9404  05C5  02AB               	subwf	(sprintf@width+1)^(0+128),f
  9405  05C6  2DCB               	goto	l4127
  9406  05C7                     l4125:
  9407                           
  9408                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1378:     width = 0;
  9409  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  9410  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  9411  05C9  01AA               	clrf	sprintf@width^(0+128)
  9412  05CA  01AB               	clrf	(sprintf@width+1)^(0+128)
  9413  05CB                     l4127:
  9414                           
  9415                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
  9416  05CB  082B               	movf	(sprintf@width+1)^(0+128),w
  9417  05CC  3A80               	xorlw	128
  9418  05CD  3C80               	sublw	128
  9419  05CE  1D03               	skipz
  9420  05CF  2DD2               	goto	u6765
  9421  05D0  082A               	movf	sprintf@width^(0+128),w
  9422  05D1  0238               	subwf	sprintf@c^(0+128),w
  9423  05D2                     u6765:
  9424  05D2  1803               	skipnc
  9425  05D3  2DD5               	goto	u6761
  9426  05D4  2DD6               	goto	u6760
  9427  05D5                     u6761:
  9428  05D5  2DEA               	goto	l4131
  9429  05D6                     u6760:
  9430  05D6                     l4129:
  9431                           
  9432                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
  9433  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  9434  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  9435  05D8  0838               	movf	sprintf@c^(0+128),w
  9436  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  9437  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  9438  05DB  00E7               	movwf	??_sprintf
  9439  05DC  01E8               	clrf	??_sprintf+1
  9440  05DD  0867               	movf	??_sprintf,w
  9441  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  9442  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  9443  05E0  02AA               	subwf	sprintf@width^(0+128),f
  9444  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  9445  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  9446  05E3  0868               	movf	??_sprintf+1,w
  9447  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  9448  05E5  1303               	bcf	3,6	;RP1=0, select bank1
  9449  05E6  1C03               	skipc
  9450  05E7  03AB               	decf	(sprintf@width+1)^(0+128),f
  9451  05E8  02AB               	subwf	(sprintf@width+1)^(0+128),f
  9452  05E9  2DEE               	goto	l4133
  9453  05EA                     l4131:
  9454                           
  9455                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
  9456  05EA  1683               	bsf	3,5	;RP0=1, select bank1
  9457  05EB  1303               	bcf	3,6	;RP1=0, select bank1
  9458  05EC  01AA               	clrf	sprintf@width^(0+128)
  9459  05ED  01AB               	clrf	(sprintf@width+1)^(0+128)
  9460  05EE                     l4133:
  9461                           
  9462                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1448:   {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 1450:    if(width
  9463  05EE  082A               	movf	sprintf@width^(0+128),w
  9464  05EF  042B               	iorwf	(sprintf@width+1)^(0+128),w
  9465  05F0  1903               	btfsc	3,2
  9466  05F1  2DF3               	goto	u6771
  9467  05F2  2DF4               	goto	u6770
  9468  05F3                     u6771:
  9469  05F3  2E13               	goto	l4141
  9470  05F4                     u6770:
  9471  05F4                     l4135:
  9472                           
  9473                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')));
  9474  05F4  3020               	movlw	32
  9475  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  9476  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  9477  05F7  00E7               	movwf	??_sprintf
  9478  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  9479  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  9480  05FA  0832               	movf	sprintf@sp^(0+128),w
  9481  05FB  0084               	movwf	4
  9482  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  9483  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  9484  05FE  0867               	movf	??_sprintf,w
  9485  05FF  1383               	bcf	3,7	;select IRP bank0
  9486  0600  0080               	movwf	0
  9487  0601                     l4137:
  9488  0601  3001               	movlw	1
  9489  0602  00E7               	movwf	??_sprintf
  9490  0603  0867               	movf	??_sprintf,w
  9491  0604  1683               	bsf	3,5	;RP0=1, select bank1
  9492  0605  1303               	bcf	3,6	;RP1=0, select bank1
  9493  0606  07B2               	addwf	sprintf@sp^(0+128),f
  9494  0607                     l4139:
  9495  0607  30FF               	movlw	255
  9496  0608  07AA               	addwf	sprintf@width^(0+128),f
  9497  0609  1803               	skipnc
  9498  060A  0AAB               	incf	(sprintf@width+1)^(0+128),f
  9499  060B  30FF               	movlw	255
  9500  060C  07AB               	addwf	(sprintf@width+1)^(0+128),f
  9501  060D  082A               	movf	sprintf@width^(0+128),w
  9502  060E  042B               	iorwf	(sprintf@width+1)^(0+128),w
  9503  060F  1D03               	btfss	3,2
  9504  0610  2E12               	goto	u6781
  9505  0611  2E13               	goto	u6780
  9506  0612                     u6781:
  9507  0612  2DF4               	goto	l4135
  9508  0613                     u6780:
  9509  0613                     l4141:
  9510                           
  9511                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  9512  0613  3003               	movlw	3
  9513  0614  0528               	andwf	sprintf@flag^(0+128),w
  9514  0615  1283               	bcf	3,5	;RP0=0, select bank0
  9515  0616  1303               	bcf	3,6	;RP1=0, select bank0
  9516  0617  00E7               	movwf	??_sprintf
  9517  0618  3000               	movlw	0
  9518  0619  1683               	bsf	3,5	;RP0=1, select bank1
  9519  061A  1303               	bcf	3,6	;RP1=0, select bank1
  9520  061B  0529               	andwf	(sprintf@flag+1)^(0+128),w
  9521  061C  1283               	bcf	3,5	;RP0=0, select bank0
  9522  061D  1303               	bcf	3,6	;RP1=0, select bank0
  9523  061E  00E8               	movwf	??_sprintf+1
  9524  061F  0867               	movf	??_sprintf,w
  9525  0620  0468               	iorwf	??_sprintf+1,w
  9526  0621  1903               	btfsc	3,2
  9527  0622  2E24               	goto	u6791
  9528  0623  2E25               	goto	u6790
  9529  0624                     u6791:
  9530  0624  2E33               	goto	l4147
  9531  0625                     u6790:
  9532  0625                     l4143:
  9533                           
  9534                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
  9535  0625  302D               	movlw	45
  9536  0626  00E7               	movwf	??_sprintf
  9537  0627  1683               	bsf	3,5	;RP0=1, select bank1
  9538  0628  1303               	bcf	3,6	;RP1=0, select bank1
  9539  0629  0832               	movf	sprintf@sp^(0+128),w
  9540  062A  0084               	movwf	4
  9541  062B  1283               	bcf	3,5	;RP0=0, select bank0
  9542  062C  1303               	bcf	3,6	;RP1=0, select bank0
  9543  062D  0867               	movf	??_sprintf,w
  9544  062E  1383               	bcf	3,7	;select IRP bank0
  9545  062F  0080               	movwf	0
  9546  0630  120A  158A  2D23   	goto	l3905
  9547  0633                     l4147:
  9548                           
  9549                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  9550  0633  3001               	movlw	1
  9551  0634  1283               	bcf	3,5	;RP0=0, select bank0
  9552  0635  07E2               	addwf	sprintf@f,f
  9553  0636  30FF               	movlw	-1
  9554  0637  0762               	addwf	sprintf@f,w
  9555  0638  0084               	movwf	4
  9556  0639  160A  118A  200A  120A  118A  	fcall	stringdir
  9557  063E  00E7               	movwf	??_sprintf
  9558  063F  0867               	movf	??_sprintf,w
  9559  0640  1683               	bsf	3,5	;RP0=1, select bank1
  9560  0641  1303               	bcf	3,6	;RP1=0, select bank1
  9561  0642  00B8               	movwf	sprintf@c^(0+128)
  9562  0643  0838               	movf	sprintf@c^(0+128),w
  9563  0644  1D03               	btfss	3,2
  9564  0645  2E47               	goto	u6801
  9565  0646  2E4A               	goto	u6800
  9566  0647                     u6801:
  9567  0647  120A  158A  2D10   	goto	l3901
  9568  064A                     u6800:
  9569  064A                     l4149:
  9570                           
  9571                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  9572  064A  1683               	bsf	3,5	;RP0=1, select bank1
  9573  064B  1303               	bcf	3,6	;RP1=0, select bank1
  9574  064C  0832               	movf	sprintf@sp^(0+128),w
  9575  064D  0084               	movwf	4
  9576  064E  1383               	bcf	3,7	;select IRP bank0
  9577  064F  0180               	clrf	0
  9578  0650                     l421:
  9579  0650  0008               	return
  9580  0651                     __end_of_sprintf:

Data Sizes:
    Strings     27
    Constant    118
    Data        17
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     77      78
    BANK1            80     30      74
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> datos(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> datos(BANK1[20]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_I2C_Master_Init
    _main->_Write_USART_String
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___ftmul->___awmod
    ___ftmul->___ftpack
    ___ftmul->___lwmod
    ___bmul->___awmod
    ___bmul->___lwmod
    ___lltoft->___ftpack
    ___ftadd->___ftpack
    _Write_USART_String->_Write_USART
    _USART_Init->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    ___awdiv->___awmod
    _fround->___ftmul
    ___lwdiv->___lwmod
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___lltoft->___ftpack
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _USART_Init->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   43659
                                             25 BANK1      5     5      0
                    _I2C_Master_Init
                         _USART_Init
                        _Write_USART
                 _Write_USART_String
                           _configIO
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             41    36      5   41634
                                             66 BANK0     11     6      5
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    8615
                                             31 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1213
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1355
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    7021
                                             31 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     622
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     631
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4858
                                             15 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             11 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     584
                                              3 COMMON     4     4      0
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     803
                                              0 BANK0     20    14      6
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1606
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2587
                                              3 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     622
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             40 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4131
                                             60 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3905
                                             47 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2290
                                              3 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              3 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     718
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     218
                                              4 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          18    14      4     993
                                              4 COMMON     2     2      0
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     705
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     792
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     631
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (6) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _USART_Init
     ___aldiv
   _Write_USART
   _Write_USART_String
     _Write_USART
   _configIO
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1E      4A       7       92.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A3      12        0.0%
ABS                  0      0      A3       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 05 21:59:35 2021

                          pc 0002               ___bmul@product 002D                           l53 1F19  
                         l96 1FFF                 ___awdiv@sign 0028                           fsr 0004  
        ___wmul@multiplicand 0075                 ___ftadd@exp1 005B                 ___ftadd@exp2 005A  
       __size_of_Write_USART 000C                 ___ftadd@sign 0059                          l151 16D2  
                        l154 10A2                          l163 1F92                          l331 07F9  
                        l157 10AC                          l421 0650                          l406 0546  
                        l360 0DF4                          l425 0811                          l506 1539  
                        l338 0D01                          l427 082B                          l451 10C3  
                        l461 1298                          l621 1230                          l710 15F6  
                        l631 17FF                          l711 1568                          l391 031F  
                        l608 1301                          l721 15E9                          l650 1383  
                        l642 17F2                          l634 17AF                          l714 15B9  
                        l635 17C2                          l804 1FC5                          l661 135D  
                        l662 1367                          l654 1342                          l734 0910  
                        l398 0371                          l663 1383                          l671 0A46  
                        l751 1F67                          l496 14B1                          l728 10FD  
                        l745 1EE5                          l674 095C                          l762 13F2  
                        l675 0966                          l755 140F                          l676 096B  
                        l685 09DC                          l867 117F                          l796 11D5  
                        l877 1139                          l887 1F06                          _GIE 005F  
                        _ISR 1F2D                          fsr0 0004                          indf 0000  
               ___awmod@sign 0021                  _sprintf$960 00A0  __size_of_Write_USART_String 002B  
                       ?_ISR 0070                         l2131 10B9                         l2133 10BB  
                       l2125 10B0                         l2135 10C2                         l2127 10B1  
                       l2129 10B5                         l4001 0074                         l4011 00BE  
                       l4003 0095                         l3301 1361                         l4013 00FD  
                       l4005 009E                         l4101 0530                         l3303 1369  
                       l3311 129C                         l4111 056F                         l4103 0538  
                       l4031 01D8                         l4007 00A6                         l4015 0104  
                       l3305 137D                         l3401 0947                         l3321 12B0  
                       l3313 12A0                         l4121 05A8                         l4113 0580  
                       l4105 0540                         l4041 0235                         l4033 0207  
                       l4025 0183                         l4017 017F                         l3307 1382  
                       l3411 0965                         l3403 094C                         l3331 12C6  
                       l3323 12B4                         l3315 12A5                         l4131 05EA  
                       l4123 05BE                         l4115 0588                         l4107 0551  
                       l4051 026A                         l4035 020D                         l4019 0181  
                       l3421 0989                         l3413 096A                         l3405 0952  
                       l2701 13B9                         l3501 08DF                         l2461 1EF7  
                       l3341 12E6                         l3333 12CA                         l3325 12B6  
                       l3317 12A7                         l3309 1299                         l4141 0613  
                       l4133 05EE                         l4125 05C7                         l4117 059A  
                       l4109 055C                         l4061 0336                         l4053 0271  
                       l4037 021F                         l4045 023C                         l4029 01CA  
                       l2391 10A8                         l3431 09B1                         l3423 098F  
                       l3415 096C                         l3407 095D                         l2703 13C0  
                       l3503 08E7                         l3511 113A                         l2463 1EFD  
                       l3343 12ED                         l3335 12CE                         l3327 12BC  
                       l3319 12AB                         l4143 0625                         l4135 05F4  
                       l4127 05CB                         l4119 05A2                         l4071 0367  
                       l4063 033C                         l4055 02CC                         l4047 024B  
                       l4039 0228                         l3281 130E                         l3441 09E0  
                       l3433 09BB                         l3425 0998                         l3417 0972  
                       l3409 0961                         l2721 13E7                         l2713 13CE  
                       l2705 13C2                         l3505 08EF                         l3521 1152  
                       l3513 113E                         l2465 1F03                         l3337 12DF  
                       l3329 12BF                         l3345 12F3                         l3361 11E4  
                       l3353 11D6                         l4137 0601                         l4129 05D6  
                       l4081 03B2                         l4073 0382                         l4065 0342  
                       l4057 030B                         l4049 025F                         l4161 1415  
                       l2811 1F6A                         l3291 1330                         l3451 0A15  
                       l3443 09F0                         l3435 09C1                         l3427 09A4  
                       l3419 097F                         l2723 13F7                         l2707 13C6  
                       l2715 13E0                         l3507 08F5                         l3531 1175  
                       l3523 1156                         l3515 1144                         l2467 1F05  
                       l2459 1EF6                         l3347 12F8                         l3339 12E5  
                       l3371 11FD                         l3363 11E8                         l3355 11D9  
                       l3611 0C6E                         l3603 0BA9                         l4139 0607  
                       l4083 03FF                         l4091 0508                         l4075 0387  
                       l4067 034F                         l4059 0329                         l4147 0633  
                       l4171 144A                         l4163 1424                         l2389 10A2  
                       l2813 1F7B                         l3293 133A                         l3285 1315  
                       l3277 1302                         l3453 0A19                         l3445 09F4  
                       l3437 09CA                         l3429 09AB                         l2725 13FC  
                       l3701 17AE                         l3621 153A                         l3461 082C  
                       l3525 1167                         l3517 1147                         l3533 117B  
                       l3541 1109                         l3349 12FD                         l3381 121C  
                       l3373 1201                         l3365 11ED                         l3357 11DD  
                       l3613 0C75                         l3605 0BB0                         l4093 0510  
                       l4085 045A                         l4077 0394                         l4069 035E  
                       l4149 064A                         l4173 1476                         l4165 1433  
                       l2815 1F7F                         l3295 1349                         l3287 1323  
                       l3279 1307                         l3455 0A29                         l3447 0A04  
                       l3439 09D6                         l3391 0911                         l2727 1407  
                       l3711 17CE                         l3703 17BC                         l3623 154D  
                       l3463 083F                         l3527 116D                         l3519 114E  
                       l3551 1128                         l3543 1110                         l3375 1205  
                       l3367 11F3                         l3383 1222                         l3359 11E2  
                       l4095 051D                         l4087 0499                         l4079 039A  
                       l4175 147F                         l4167 143B                         l4159 1410  
                       l2809 1F68                         l2761 1F07                         l2673 1EDC  
                       l3297 1353                         l3289 132A                         l3457 0A2B  
                       l3449 0A05                         l3393 0930                         l3721 17F7  
                       l3705 17C6                         l3713 17E0                         l3641 1589  
                       l3633 1569                         l3481 0893                         l3473 085E  
                       l3529 116E                         l3553 112F                         l3545 1114  
                       l3537 10FE                         l3561 065A                         l3385 1227  
                       l3377 120F                         l3369 11F6                         l3617 0CE1  
                       l4097 0523                         l4089 04AD                         l4177 1485  
                       l4169 1441                         l2763 1F11                         l3811 10E8  
                       l3803 10C4                         l2675 1EE3                         l3299 1357  
                       l3395 0936                         l2691 1397                         l3731 0818  
                       l3651 15B3                         l3643 1592                         l3635 156F  
                       l3627 1556                         l3491 08B9                         l3483 0899  
                       l3475 088B                         l3467 0846                         l3547 1118  
                       l3539 1104                         l3555 1135                         l3571 073D  
                       l3563 071D                         l3387 122C                         l3379 1215  
                       l4099 0529                         l4179 148B                         l3741 1243  
                       l2765 1F12                         l3813 10EA                         l3805 10CA  
                       l2677 1EE5                         l3397 0940                         l3733 081F  
                       l3725 0801                         l3653 15BD                         l3661 15D7  
                       l3645 15A0                         l3637 157E                         l3493 08C1  
                       l3485 089D                         l3477 088C                         l3469 0857  
                       l3549 1122                         l3573 07AC                         l3581 0A4A  
                       l4285 0E10                         l3901 0D10                         l3751 1272  
                       l3743 1246                         l2767 1F15                         l3815 10EC  
                       l3807 10D7                         l3823 1F43                         l2695 13A0  
                       l3831 1180                         l3735 0825                         l3727 0805  
                       l3719 17E7                         l3647 15AA                         l3639 1580  
                       l3495 08C7                         l3487 08A1                         l3479 088D  
                       l3559 0654                         l3583 0A4E                         l3911 0D40  
                       l3903 0D16                         l3753 1280                         l3745 1253  
                       l2769 1F18                         l3817 10FA                         l3809 10DB  
                       l3825 1F4C                         l2697 13B2                         l2689 1384  
                       l3841 11B0                         l3833 118A                         l3729 0809  
                       l3673 16D3                         l3649 15AB                         l3497 08CB  
                       l3489 08B1                         l3577 07C6                         l3569 0737  
                       l3593 0B15                         l3585 0A50                         l3913 0D44  
                       l3921 0D8A                         l3905 0D23                         l3755 1281  
                       l3747 1257                         l3739 1231                         l3771 14C0  
                       l3763 149D                         l3819 10FC                         l3827 1F4E  
                       l2699 13B3                         l3843 11BE                         l3835 118D  
                       l3851 1F93                         l3691 174E                         l3675 16EE  
                       l3667 15DE                         l3659 15C5                         l3499 08CF  
                       l3595 0B1C                         l3587 0A57                         l3931 0DBB  
                       l3923 0D98                         l3915 0D59                         l3907 0D2A  
                       l3757 128A                         l3749 1260                         l3781 14E4  
                       l3773 14C4                         l3765 14A0                         l3861 15F7  
                       l3845 11C7                         l3837 119A                         l3853 1F9A  
                       l3693 1753                         l3685 1710                         l3669 15EE  
                       l3933 0DD6                         l3925 0D9B                         l3917 0D74  
                       l3909 0D2E                         l3759 1290                         l3791 1512  
                       l3783 14E8                         l3775 14CC                         l3767 14A4  
                       l3871 16C0                         l3863 1652                         l3839 119E  
                       l3847 11CD                         l3855 1FA7                         l3695 1757  
                       l3687 1744                         l3679 16F7                         l3599 0B88  
                       l3951 0E36                         l3943 0DF8                         l3935 0DDC  
                       l3927 0DA1                         l3919 0D7A                         l3793 151B  
                       l3785 14F1                         l3777 14D4                         l3769 14B5  
                       l3881 16CC                         l3873 16C4                         l3865 165B  
                       l3857 1FAD                         l3697 1760                         l3689 174C  
                       l3961 0E81                         l3953 0E41                         l3945 0E18  
                       l3929 0DA6                         l3937 0DEE                         l3891 1FCD  
                       l3787 1503                         l3779 14D7                         l3795 1521  
                       l3883 16CF                         l3875 16C5                         l3867 16B4  
                       l3699 178C                         l3971 0ED2                         l3963 0E85  
                       l3955 0E49                         l3947 0E2C                         l3939 0DF2  
                       l3893 1FFC                         l3797 1526                         l3789 1511  
                       l3877 16C8                         l3869 16B7                         l3981 0F51  
                       l3973 0EF5                         l3965 0E8C                         l3957 0E68  
                       l3949 0E32                         l3895 1FFD                         l3887 1FC6  
                       l3799 1531                         l3879 16CB                         l3991 0FB1  
                       l3983 0F70                         l3975 0EF9                         l3967 0EB9  
                       l3959 0E7D                         l3897 1FFE                         l3889 1FCA  
                       l3993 0FEA                         l3985 0F79                         l3977 0EFF  
                       l3969 0EBF                         l3995 003D                         l3987 0F9A  
                       l3979 0F18                         l3899 0D05                         l3997 0046  
                       l3989 0FA2                         l3999 0065                         STR_1 1095  
                       STR_2 1086                         _BRGH 04C2                         _CREN 00C4  
                       u3200 10A8                         u3201 10A7                         u4100 1F92  
                       u3300 1EFD                         u4101 1F91                         u3301 1EFC  
                       u3310 1F03                         u3311 1F02                         u5000 11E8  
                       u5001 11E7                         u5010 11F3                         u5011 11F2  
                       u5100 0940                         u5101 093F                         u5110 094C  
                       u5030 1205                         u5111 094B                         u5031 1204  
                       u5120 0952                         u2480 10B5                         u5040 120F  
                       u5121 0951                         u2481 10B4                         u5041 120E  
                       u5025 11F7                         u6010 1290                         u5210 09AA  
                       u5130 095C                         u2490 10C2                         u6011 128F  
                       u5211 09A9                         u5131 095B                         u2491 10C1  
                       u6100 1521                         u6020 14A4                         u5220 09B1  
                       u5140 0965                         u5060 1222                         u6005 1282  
                       u6101 1520                         u6021 14A3                         u5301 0A0E  
                       u5221 09B0                         u5205 0999                         u5141 0964  
                       u5061 1221                         u5045 120B                         u6110 1526  
                       u6030 14B5                         u5310 0A19                         u5302 0A15  
                       u5150 096A                         u5070 1227                         u6111 1525  
                       u6031 14B4                         u5311 0A18                         u5151 0969  
                       u5071 1226                         u5055 1216                         u6040 14D4  
                       u6120 10CA                         u5240 09C1                         u5160 097F  
                       u5080 0930                         u5400 08C7                         u5320 083F  
                       u6041 14D3                         u6121 10C9                         u5241 09C0  
                       u5161 097E                         u5081 092F                         u5401 08C6  
                       u5321 083E                         u6130 10DB                         u3810 1EE3  
                       u5250 09C9                         u5090 0936                         u6210 11CD  
                       u5410 08CF                         u5330 0857                         u6131 10DA  
                       u3811 1EE2                         u5251 09C8                         u5235 09B2  
                       u5091 0935                         u6211 11CC                         u5411 08CE  
                       u5331 0856                         _PEIE 005E                         u6060 14E8  
                       u6140 10FA                         u5180 098F                         u5340 086E  
                       u5500 1167                         u6061 14E7                         u6301 1694  
                       u6141 10F9                         u5181 098E                         u6205 11BF  
                       u5421 08D8                         u5501 1166                         u6310 16C0  
                       u6302 1695                         u5270 09DC                         u5190 0997  
                       u6150 1F4C                         u3910 13F7                         u3830 1397  
                       u6230 1FAD                         u5422 08DF                         u5350 0880  
                       u6055 14D9                         u6311 16BF                         u6303 169A  
                       u5271 09DB                         u5191 0996                         u5175 0980  
                       u6151 1F4B                         u3911 13F6                         u3831 1396  
                       u6231 1FAC                         u6320 1FDD                         u6080 1503  
                       u6304 169B                         u6240 1607                         u4800 1329  
                       u5280 09E0                         u3920 13FC                         u3840 13AB  
                       u6160 118A                         u5360 08A1                         u5520 117B  
                       u5600 073D                         u6400 0E68                         u6081 1502  
                       u6305 16A0                         u6145 10F6                         u4801 1328  
                       u5281 09DF                         u5265 09CB                         u3921 13FB  
                       u3905 13E9                         u6161 1189                         u6225 1F9B  
                       u5361 08A0                         u5345 086A                         u5521 117A  
                       u5505 1163                         u5601 073C                         u6401 0E67  
                       u6306 16A1                         u6250 1620                         u5290 09F4  
                       u3850 13C6                         u5450 08F5                         u5530 1104  
                       u5610 0A4E                         u6410 0E8C                         u6330 0D16  
                       u6075 14EA                         u5291 09F3                         u3851 13C5  
                       u5451 08F4                         u5435 08E0                         u5371 08AA  
                       u5355 087C                         u5515 116F                         u5531 1103  
                       u5611 0A4D                         u6411 0E8B                         u6331 0D15  
                       u4820 1348                         u3860 13CD                         u6180 119E  
                       u5372 08B1                         u5460 1144                         u4900 12AB  
                       u5620 0A57                         u6500 0074                         u6420 0EA2  
                       u6340 0D40                         _RCIF 0065                         u6325 1FD8  
                       u6085 14FF                         u6261 1632                         u6245 1602  
                       u4821 1347                         u3861 13CC                         u3845 13A7  
                       u6181 119D                         u5445 08E8                         u5461 1143  
                       u4901 12AA                         u5621 0A56                         u6501 0073  
                       u6341 0D3F                         u6270 165B                         u6262 1633  
                       u6190 11B0                         u5710 15B9                         u5550 1118  
                       u4910 12BC                         u5630 0B1C                         u6510 0095  
                       u6430 0EF9                         u6350 0D8A                         u6095 1513  
                       u6271 165A                         u6263 1638                         u6255 161B  
                       u4815 133B                         u6191 11AF                         u6175 118F  
                       u5711 15B8                         u5551 1117                         u4911 12BB  
                       u5631 0B1B                         u6511 0094                         u6431 0EF8  
                       u6351 0D89                         u6280 1669                         u6264 1639  
                       u4840 1357                         u3880 13DF                         u5800 170F  
                       u5720 15BD                         u5480 1156                         u5560 1122  
                       u5640 0BB0                         u6600 0328                         u6440 0F70  
                       u6360 0D98                         u6265 163E                         u4841 1356  
                       u3881 13DE                         u5801 170E                         u5721 15BC  
                       u5705 15AC                         u5385 08B2                         u5481 1155  
                       u5561 1121                         u5545 110A                         u5641 0BAF  
                       u6601 0327                         u6505 0070                         u6441 0F6F  
                       u6425 0E9D                         u6361 0D97                         u6290 1682  
                       u6266 163F                         u4850 135D                         u4770 1307  
                       u3890 13E6                         u5730 15C4                         u4930 12CE  
                       u5650 0C75                         u6610 034F                         u6530 01C9  
                       u6450 0F9A                         u6370 0DED                         i1l59 1F3C  
                       u4851 135C                         u4835 134C                         u4771 1306  
                       u3891 13E5                         u3875 13CF                         u6195 11AC  
                       u5731 15C3                         u5395 08BA                         u5475 1148  
                       u4931 12CD                         u5651 0C74                         u6611 034E  
                       u6531 01C8                         u6451 0F99                         u6371 0DEC  
                       u4860 1361                         u4780 130E                         u5900 17F7  
                       u5820 178C                         u5660 154D                         u5580 1135  
                       u6700 0551                         u6620 035E                         u6540 01D8  
                       u6460 0FB1                         u6380 0E2C                         u6285 1664  
                       u4861 1360                         u4781 130D                         u5901 17F6  
                       u5821 178B                         u5661 154C                         u5581 1134  
                       u5565 111E                         u4925 12C0                         u6701 0550  
                       u6621 035D                         u6541 01D7                         u6525 0188  
                       u6461 0FB0                         u6381 0E29                         u4870 1374  
                       u5910 0809                         u5830 17C2                         u5750 15D6  
                       u5670 1567                         u5590 065A                         u4950 12DF  
                       u6710 056F                         u6630 0387                         u6550 0207  
                       u6470 003D                         u6390 0E32                         u6295 167D  
                       u5911 0808                         u5831 17C1                         u5815 1759  
                       u5751 15D5                         u5671 1566                         u5495 1157  
                       u5575 1129                         u5591 0659                         u4951 12DE  
                       u6711 056E                         u6631 0386                         u6615 034B  
                       u6551 0206                         u6535 01C5                         u6471 0FFA  
                       u6391 0E31                         u4880 1382                         u5840 17C6  
                       u5760 15DD                         u6800 064A                         u6720 0588  
                       u6560 021F                         u6480 0046                         u4881 1381  
                       u5841 17C5                         u5825 1788                         u5761 15DC  
                       u5745 15C6                         u4945 12CF                         u6801 0647  
                       u6721 0587                         u6705 054D                         u6625 035A  
                       u6561 021E                         u6481 0045                         u6465 0FAD  
                       u5850 17CD                         u5690 15A0                         u4970 12F3  
                       u4890 12A0                         u6730 059A                         u6570 024B  
                       u6490 0065                         u4875 1370                         u4795 131C  
                       u5851 17CC                         u5691 159F                         u4971 12F2  
                       u4955 12DB                         u4891 129F                         u6731 0599  
                       u6715 056B                         u6571 024A                         u6491 0064  
                       u6475 0FF5                         u5940 0825                         u5780 15EE  
                       u4980 12F8                         u6740 05A8                         u6660 050F  
                       u6580 025F                         u5941 0824                         u5925 0812  
                       u5781 15ED                         u5685 158B                         u4981 12F7  
                       u4965 12E7                         u6741 05A7                         u6661 050E  
                       u6645 0404                         u6581 025E                         u5950 1243  
                       u5870 17DF                         u5790 16EE                         u4990 11DD  
                       u6750 05BE                         u6670 052F                         u5951 1242  
                       u5935 0819                         u5871 17DE                         u5791 16ED  
                       u5775 15E0                         u5695 159C                         u4991 11DC  
                       u6751 05BD                         u6671 052E                         u6655 04B2  
                       u6575 0247                         u5880 17E6                         u6760 05D6  
                       u6680 0538                         u5881 17E5                         u5865 17CF  
                       u6761 05D5                         u6681 0537                         u5970 1257  
                       u6770 05F4                         u6690 0540                         u5971 1256  
                       u6771 05F3                         u6755 05BA                         u6691 053F  
                       u6595 0276                         u6907 1493                         u6780 0613  
                       u5965 1248                         u6781 0612                         u6765 05D2  
                       u5990 1272                         u6790 0625                         u5991 1271  
                       u5895 17E9                         u6791 0624                         u5985 1259  
                       u5995 126E                         _SPEN 00C7                         _TRMT 04C1  
                       _TXEN 04C5                         _SYNC 04C4                         _main 1410  
               ___ftpack@arg 0073                 ___ftpack@exp 0076                         btemp 007E  
                       start 000C            ___bmul@multiplier 002E                 ___ftmul@cntr 003D  
               ___ftmul@sign 003E                        ??_ISR 0070                 ___fttol@exp1 0055  
               ___fttol@lval 0051                   _GetTempCmd 00C4             ?_I2C_Master_Init 002D  
            __end_of___aldiv 153A                        ?_main 0070              __end_of___awdiv 1302  
            __end_of___ftadd 0A47              __end_of___awmod 1231              __end_of___ftneg 1EE6  
                      _ANSEL 0188              __end_of___lldiv 1299              __end_of___ftmul 0911  
            ___awdiv@divisor 0022              __end_of___llmod 11D6              __end_of___ftsub 1F68  
            __end_of___fttol 1410              __end_of___lwdiv 1180                        i1l166 1ECC  
                      i1l169 1ED3              __end_of___lwmod 113A              ___awdiv@counter 0027  
                      _RCREG 001A                        _SPBRG 0099                        _PORTB 0006  
                      _TRISB 0086                        _SSPIE 0463                        _SSPIF 0063  
                      _TXREG 0019                 ___lltoft@exp 0028                        _datos 00C7  
            __end_of_dpowers 1086                        _scale 0A47              __end_of_isdigit 1F07  
              ___ftpack@sign 0077              _GetRHumidityCmd 00E4                        fpbase 003C  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __end_of_sprintf 0651                  ?_USART_Init 002E              __initialization 000F  
                 _Read_USART 1ECC                 __end_of_main 149D                       ??_main 00B9  
              ___fttol@sign1 0050                _AHT10_address 0078         __size_of__tdiv_to_l_ 00BD  
           ___llmod@dividend 0024                       ?_scale 003F             ___awdiv@dividend 0024  
           __end_of___ftpack 1384                       _ANSELH 0189             __end_of___lltoft 1FC6  
                     i1l1603 1ECC                       i1l1605 1ED2                       i1l1943 1F2D  
                     i1l1945 1F33                       i1l1947 1F34                       u226_20 1F33  
                     u226_21 1F32                       u166_20 1ED2                       u166_21 1ED1  
                     _SSPADD 0093                       _TRISC3 043B                       _TRISC4 043C  
                     _TRISC6 043E                       _TRISC7 043F                       _SSPCON 0014  
                     _SSPBUF 0013             __end_of__fptable 003D             __end_of__powers_ 1037  
           __end_of_configIO 1F1A                       ___bmul 10AD                       ___ftge 10C4  
                  ??___aldiv 0073                       ___wmul 0801                    ??___awdiv 0026  
                  ??___ftadd 0055                    ??___awmod 0077                    ??___ftneg 0076  
                  ??___lldiv 0073                    ??___ftmul 0035                    ??___llmod 0073  
                  ??___ftsub 0078                    ??___fttol 004C                    ??___lwdiv 0025  
                  ??___lwmod 0077                       _fround 0651             ___awdiv@quotient 0029  
            ___awmod@divisor 0073              ___awmod@counter 0020        ___ftmul@f3_as_product 003A  
                     fptable 0037                 __pdataCOMMON 0078                       fptotal 0002  
                  ??_isdigit 0073                       saved_w 007E          __size_of_USART_Init 00DC  
                  ??_sprintf 0067      __end_of__initialization 0033                   ___ftadd@f1 004F  
                 ___ftadd@f2 0052                   ___ftge@ff1 0020                   ___ftge@ff2 0023  
                 ___ftneg@f1 0073          ___bmul@multiplicand 002B                   ___ftmul@f1 002F  
                 ___ftmul@f2 0032                  ?_Read_USART 0070                   ___ftsub@f1 005F  
                 ___ftsub@f2 005C                   ___fttol@f1 0048               __pcstackCOMMON 0070  
               __pidataBANK1 1EE6                   ___lltoft@c 0023                __end_of_scale 0D02  
                 __div_to_l_ 16D3              __div_to_l_@exp1 0033              __div_to_l_@cntr 0032  
                    ??_scale 0042              __div_to_l_@quot 002E                 sprintf@width 00AA  
               Write_USART@a 0073                   __pbssBANK0 006D                   __pbssBANK1 00BE  
              __div_to_l_@f1 0020                __div_to_l_@f2 0023                   __pmaintext 1410  
                    ?___bmul 002B                      ?___ftge 0020                      ?___wmul 0073  
              ??_Write_USART 0073                   __pintentry 0004                      ?_fround 003F  
                  ?___ftpack 0073                    ?___lltoft 0023   __end_of_Write_USART_String 1F93  
        __size_of_Read_USART 0008                      _SSPCON2 0091                    ?_configIO 0070  
                    _SSPSTAT 0094                   __stringtab 1000              _eSensorResetCmd 0079  
               ??_USART_Init 0032            __end_of__npowers_ 105E                      ___aldiv 149D  
            __size_of___bmul 0017              __size_of___ftge 003A                      ___awdiv 1299  
                    ___ftadd 0911                      ___awmod 11D6                      ___ftneg 1EDC  
                    ___lldiv 1231              __size_of___wmul 002B                      ___ftmul 082C  
                    ___llmod 1180                      ___ftsub 1F43                      ___fttol 1384  
                    ___lwdiv 113A                   _fround$957 004B                   _fround$958 0048  
                    ___lwmod 10FE                   ??___ftpack 0020              __size_of_fround 01A9  
                 ??___lltoft 0027                      __ptext1 0D02                      __ptext2 0A47  
                    __ptext3 11D6                      __ptext4 1299                      __ptext5 1EF5  
                    __ptext6 0651                      __ptext7 10FE                      __ptext8 113A  
                    __ptext9 082C                 __size_of_ISR 0016                  ?__div_to_l_ 0020  
                    _dpowers 105E          __end_of_Write_USART 10AD                      _isdigit 1EF5  
                    _humeda1 00BE                      _humedad 00C6             ___awmod@dividend 0075  
         fp__aht_GetHumidity 0000             ___aldiv@dividend 0024     __size_of_I2C_Master_Init 003A  
         __end_of_USART_Init 16D3                   ??_configIO 0073                      _sprintf 0D02  
                    clrloop0 1ED5         end_of_initialization 0033              ___lldiv@divisor 0020  
            ___lldiv@counter 002C            _eSensorMeasureCmd 00DB             ___aldiv@quotient 002A  
           I2C_Master_Init@c 002D                      psplit$0 110032               __tdiv_to_l_@f1 0020  
             __tdiv_to_l_@f2 0023          _eSensorCalibrateCmd 00E1                ??__tdiv_to_l_ 0073  
                  _TRISCbits 0087                 _LecturaUSART 007A        fp__aht_GetTemperature 0000  
        __size_of__div_to_l_ 012D                 ??_Read_USART 0070                  ___ftmul@exp 0039  
             __end_of___bmul 10C4               __end_of___ftge 10FE                  _Write_USART 10A1  
             __end_of___wmul 082C                __pidataCOMMON 07FA            pnum$text1_split_1 0032  
                USART_Init@x 0074               __end_of_fround 07FA            _AHT10Address_High 00E6  
        start_initialization 000F                  __end_of_ISR 1F43          __end_of__tdiv_to_l_ 15F7  
         __end_of_Read_USART 1ED4            ??_I2C_Master_Init 0074              ___llmod@divisor 0020  
            ___llmod@counter 0074                     ??___bmul 002C                     ??___ftge 0073  
                   ??___wmul 0077                   init_fetch0 1F1A                  __pdataBANK1 00DB  
                   ??_fround 0042                sprintf@tmpval 00AC                   fround@prec 004E  
          __size_of___ftpack 0082            __size_of___lltoft 0033                  __pbssCOMMON 007A  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
          __size_of__fptable 0006            __size_of_configIO 0013                  sprintf@flag 00A8  
                sprintf@eexp 00B0                  sprintf@fval 00B3           _Write_USART_String 1F68  
                sprintf@prec 00B6             ___lwdiv@dividend 0023           _aht_GetTemperature 0000  
                  __pfunctab 0037          ?_Write_USART_String 0074                     ?___aldiv 0020  
                   ?___awdiv 0022                     ?___ftadd 004F                     ?___awmod 0073  
                   ?___ftneg 0073                     ?___lldiv 0020                     ?___ftmul 002F  
                   ?___llmod 0020                     ?___ftsub 005C                    __npowers_ 1037  
                   ?___fttol 0048                     ?___lwdiv 0021                     ?___lwmod 0073  
                  __pstrings 1000                  __tdiv_to_l_ 153A                 ??__div_to_l_ 0026  
                   ?_isdigit 0070                    _scale$959 0044         ??_Write_USART_String 0076  
           ___lwdiv@quotient 0027                     ?_sprintf 0062               __size_of_scale 02BB  
            ___aldiv@divisor 0020            interrupt_function 0004              ___aldiv@counter 0028  
             ___wmul@product 0020                    clear_ram0 1ED4                     _PIE1bits 008C  
                   _PIR1bits 000C           __end_of__div_to_l_ 1800                  __stringbase 100F  
          ___wmul@multiplier 0073           USART_Init@baudrate 002E             _eSensorNormalCmd 00DE  
           _AHT10Address_Low 00E8                 ?_Write_USART 0070             __size_of___aldiv 009D  
           __size_of___awdiv 0069             __size_of___ftadd 0136             __size_of___awmod 005B  
           __size_of___ftneg 000A             __size_of___lldiv 0068             __size_of___ftmul 00E5  
           __size_of___llmod 0056             __size_of___ftsub 0025             __size_of___fttol 008C  
           __size_of___lwdiv 0046             __size_of___lwmod 003C                     ___ftpack 1302  
         __end_of__stringtab 1010                     ___lltoft 1F93                  _isdigit$749 0073  
            _aht_GetHumidity 0000                   sprintf@val 00A4                     __fptable 0037  
            _I2C_Master_Init 1FC6             __size_of_isdigit 0012              ___lwdiv@divisor 0021  
            ___lwdiv@counter 0026                     __ptext10 10AD                     __ptext11 153A  
                   __ptext20 1EDC                     __ptext12 16D3                     __ptext21 10C4  
                   __ptext13 0801                     __ptext30 1ECC                     __ptext22 1F07  
                   __ptext14 1F93                     __ptext23 1F68                     __ptext15 1180  
                   __ptext24 10A1                     __ptext16 1384                     __ptext25 15F7  
                   __ptext17 1F43                     __ptext26 149D                     __ptext18 0911  
                   __ptext27 1FC6                     __ptext19 1302                     __ptext28 1231  
                   __ptext29 1F2D                     __powers_ 1010                     _configIO 1F07  
           __size_of_sprintf F94F                __size_of_main 008D                    pnum$text1 0011  
                   _tempera1 00C1                   _INTCONbits 000B          Write_USART_String@a 0074  
        Write_USART_String@i 0077                     init_ram0 1F1E                     isdigit@c 0074  
                   scale@scl 0047                     intlevel1 0037                    sprintf@ap 00A3  
           __tdiv_to_l_@exp1 002B             __tdiv_to_l_@cntr 002A                    sprintf@sp 00B2  
           __tdiv_to_l_@quot 0026             ___lwmod@dividend 0075             ___lldiv@dividend 0024  
                  stringcode 100A      __end_of_I2C_Master_Init 2000                 ?__tdiv_to_l_ 0020  
                _temperatura 006D                     sprintf@c 00B8                     sprintf@f 0062  
           ___lldiv@quotient 0028              ___lwmod@divisor 0073              ___lwmod@counter 0020  
                   stringdir 100A                     stringtab 1000                 ___aldiv@sign 0029  
                _SSPCON2bits 0091                   _USART_Init 15F7  
