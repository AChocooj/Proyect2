

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 04 22:57:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	functab,global,class=ENTRY,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  0088                     	;# 
   409  0089                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0094                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009A                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  009F                     	;# 
   432  0105                     	;# 
   433  0107                     	;# 
   434  0108                     	;# 
   435  0109                     	;# 
   436  010C                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  010F                     	;# 
   441  0185                     	;# 
   442  0187                     	;# 
   443  0188                     	;# 
   444  0189                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447                           
   448 ;; Function _aht_GetHumidity is unused but had its address taken
   449  0000                     
   450 ;; Function _aht_GetTemperature is unused but had its address taken
   451  0000                     
   452                           	psect	idataBANK0
   453  0561                     __pidataBANK0:
   454                           
   455                           ;initializer for _eSensorMeasureCmd
   456  0561  34AC               	retlw	172
   457  0562  3433               	retlw	51
   458  0563  3400               	retlw	0
   459                           
   460                           ;initializer for _eSensorNormalCmd
   461  0564  34A8               	retlw	168
   462  0565  3400               	retlw	0
   463  0566  3400               	retlw	0
   464                           
   465                           ;initializer for _eSensorCalibrateCmd
   466  0567  34E1               	retlw	225
   467  0568  3408               	retlw	8
   468  0569  3400               	retlw	0
   469                           
   470                           ;initializer for _GetRHumidityCmd
   471  056A  3401               	retlw	1
   472  056B  3400               	retlw	0
   473                           
   474                           ;initializer for _AHT10Address_High
   475  056C  3439               	retlw	57
   476  056D  3400               	retlw	0
   477                           
   478                           ;initializer for _AHT10Address_Low
   479  056E  3438               	retlw	56
   480  056F  3400               	retlw	0
   481                           
   482                           ;initializer for _AHT10_address
   483  0570  3438               	retlw	56
   484                           
   485                           ;initializer for _eSensorResetCmd
   486  0571  34BA               	retlw	186
   487  001A                     _RCREG	set	26
   488  0019                     _TXREG	set	25
   489  0013                     _SSPBUF	set	19
   490  0014                     _SSPCON	set	20
   491  0065                     _RCIF	set	101
   492  00C4                     _CREN	set	196
   493  00C7                     _SPEN	set	199
   494  0063                     _SSPIF	set	99
   495  005E                     _PEIE	set	94
   496  005F                     _GIE	set	95
   497  0099                     _SPBRG	set	153
   498  0091                     _SSPCON2bits	set	145
   499  0087                     _TRISCbits	set	135
   500  0094                     _SSPSTAT	set	148
   501  0093                     _SSPADD	set	147
   502  0091                     _SSPCON2	set	145
   503  04C1                     _TRMT	set	1217
   504  04C5                     _TXEN	set	1221
   505  043E                     _TRISC6	set	1086
   506  043F                     _TRISC7	set	1087
   507  04C4                     _SYNC	set	1220
   508  04C2                     _BRGH	set	1218
   509  0463                     _SSPIE	set	1123
   510  043C                     _TRISC4	set	1084
   511  043B                     _TRISC3	set	1083
   512                           
   513                           	psect	strings
   514  0009                     __pstrings:
   515  0009                     stringtab:
   516  0009                     __stringtab:
   517  0009                     stringcode:	
   518                           ;	String table - string pointers are 1 byte each
   519                           
   520  0009                     stringdir:
   521  0009  3000               	movlw	high stringdir
   522  000A  008A               	movwf	10
   523  000B  0804               	movf	4,w
   524  000C  0A84               	incf	4,f
   525  000D  0782               	addwf	2,f
   526  000E                     __stringbase:
   527  000E  3400               	retlw	0
   528  000F                     __end_of__stringtab:
   529  000F                     STR_1:
   530  000F  3461               	retlw	97	;'a'
   531  0010  3400               	retlw	0
   532                           
   533                           	psect	cinit
   534  07EC                     start_initialization:	
   535                           ; #config settings
   536                           
   537  07EC                     __initialization:
   538                           
   539                           ; Initialize objects allocated to BANK0
   540  07EC  1383               	bcf	3,7	;select IRP bank0
   541  07ED  3047               	movlw	low (__pdataBANK0+17)
   542  07EE  00FD               	movwf	btemp+-1
   543  07EF  3005               	movlw	high __pidataBANK0
   544  07F0  00FE               	movwf	btemp
   545  07F1  3061               	movlw	low __pidataBANK0
   546  07F2  00FF               	movwf	btemp+1
   547  07F3  3036               	movlw	low __pdataBANK0
   548  07F4  0084               	movwf	4
   549  07F5  120A  118A  2576  120A  118A  	fcall	init_ram0
   550                           
   551                           ; Clear objects allocated to BANK0
   552  07FA  01C7               	clrf	__pbssBANK0& (0+127)
   553  07FB  01C8               	clrf	(__pbssBANK0+1)& (0+127)
   554  07FC                     end_of_initialization:	
   555                           ;End of C runtime variable initialization code
   556                           
   557  07FC                     __end_of__initialization:
   558  07FC  0183               	clrf	3
   559  07FD  120A  118A  2DA3   	ljmp	_main	;jump to C main() function
   560                           
   561                           	psect	bssBANK0
   562  0047                     __pbssBANK0:
   563  0047                     _GetTempCmd:
   564  0047                     	ds	2
   565                           
   566                           	psect	dataBANK0
   567  0036                     __pdataBANK0:
   568  0036                     _eSensorMeasureCmd:
   569  0036                     	ds	3
   570  0039                     _eSensorNormalCmd:
   571  0039                     	ds	3
   572  003C                     _eSensorCalibrateCmd:
   573  003C                     	ds	3
   574  003F                     _GetRHumidityCmd:
   575  003F                     	ds	2
   576  0041                     _AHT10Address_High:
   577  0041                     	ds	2
   578  0043                     _AHT10Address_Low:
   579  0043                     	ds	2
   580  0045                     _AHT10_address:
   581  0045                     	ds	1
   582  0046                     _eSensorResetCmd:
   583  0046                     	ds	1
   584                           
   585                           	psect	inittext
   586  0572                     init_fetch0:	
   587                           ;	Called with low address in FSR and high address in W
   588                           
   589  0572  087E               	movf	btemp,w
   590  0573  008A               	movwf	10
   591  0574  087F               	movf	btemp+1,w
   592  0575  0082               	movwf	2
   593  0576                     init_ram0:	
   594                           ;Called with:
   595                           ;	high address of idata address in btemp 
   596                           ;	low address of idata address in btemp+1 
   597                           ;	low address of data in FSR
   598                           ;	high address + 1 of data in btemp-1
   599                           
   600  0576  120A  118A  2572  120A  118A  	fcall	init_fetch0
   601  057B  0080               	movwf	0
   602  057C  0A84               	incf	4,f
   603  057D  0804               	movf	4,w
   604  057E  067D               	xorwf	btemp+-1,w
   605  057F  1903               	btfsc	3,2
   606  0580  3400               	retlw	0
   607  0581  0AFF               	incf	btemp+1,f
   608  0582  1903               	btfsc	3,2
   609  0583  0AFE               	incf	btemp,f
   610  0584  2D76               	goto	init_ram0
   611                           
   612                           	psect	cstackCOMMON
   613  0070                     __pcstackCOMMON:
   614  0070                     ?_Write_USART:
   615  0070                     ??_Write_USART:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_Write_USART_String:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_main:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?___lldiv:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?___aldiv:	
   628                           ; 4 bytes @ 0x0
   629                           
   630  0070                     Write_USART@a:	
   631                           ; 4 bytes @ 0x0
   632                           
   633  0070                     ___lldiv@divisor:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ___aldiv@divisor:	
   637                           ; 4 bytes @ 0x0
   638                           
   639                           
   640                           ; 4 bytes @ 0x0
   641  0070                     	ds	1
   642  0071                     ??_Write_USART_String:
   643                           
   644                           ; 1 bytes @ 0x1
   645  0071                     	ds	1
   646  0072                     Write_USART_String@i:
   647                           
   648                           ; 1 bytes @ 0x2
   649  0072                     	ds	1
   650  0073                     Write_USART_String@a:
   651                           
   652                           ; 1 bytes @ 0x3
   653  0073                     	ds	1
   654  0074                     ___lldiv@dividend:
   655  0074                     ___aldiv@dividend:	
   656                           ; 4 bytes @ 0x4
   657                           
   658                           
   659                           ; 4 bytes @ 0x4
   660  0074                     	ds	4
   661  0078                     ??___lldiv:
   662  0078                     ??___aldiv:	
   663                           ; 1 bytes @ 0x8
   664                           
   665                           
   666                           ; 1 bytes @ 0x8
   667  0078                     	ds	1
   668  0079                     USART_Init@x:
   669  0079                     ___lldiv@quotient:	
   670                           ; 2 bytes @ 0x9
   671                           
   672                           
   673                           ; 4 bytes @ 0x9
   674  0079                     	ds	4
   675  007D                     ___lldiv@counter:
   676                           
   677                           ; 1 bytes @ 0xD
   678  007D                     	ds	1
   679  007E                     ??_main:
   680                           
   681                           	psect	cstackBANK0
   682  0020                     __pcstackBANK0:	
   683                           ; 1 bytes @ 0xE
   684                           
   685  0020                     ?_I2C_Master_Init:
   686  0020                     ___aldiv@counter:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0020                     I2C_Master_Init@c:	
   690                           ; 1 bytes @ 0x0
   691                           
   692                           
   693                           ; 4 bytes @ 0x0
   694  0020                     	ds	1
   695  0021                     ___aldiv@sign:
   696                           
   697                           ; 1 bytes @ 0x1
   698  0021                     	ds	1
   699  0022                     ___aldiv@quotient:
   700                           
   701                           ; 4 bytes @ 0x2
   702  0022                     	ds	2
   703  0024                     ??_I2C_Master_Init:
   704                           
   705                           ; 1 bytes @ 0x4
   706  0024                     	ds	2
   707  0026                     ?_USART_Init:
   708  0026                     USART_Init@baudrate:	
   709                           ; 1 bytes @ 0x6
   710                           
   711                           
   712                           ; 4 bytes @ 0x6
   713  0026                     	ds	4
   714  002A                     ??_USART_Init:
   715                           
   716                           ; 1 bytes @ 0xA
   717  002A                     	ds	12
   718                           
   719                           	psect	maintext
   720  05A3                     __pmaintext:	
   721 ;;
   722 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   723 ;;
   724 ;; *************** function _main *****************
   725 ;; Defined at:
   726 ;;		line 31 in file "pic16f.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : B00/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         0       0       0       0       0
   741 ;;      Locals:         0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0
   743 ;;      Totals:         0       0       0       0       0
   744 ;;Total ram usage:        0 bytes
   745 ;; Hardware stack levels required when called:    2
   746 ;; This function calls:
   747 ;;		_I2C_Master_Init
   748 ;;		_USART_Init
   749 ;;		_Write_USART
   750 ;;		_Write_USART_String
   751 ;; This function is called by:
   752 ;;		Startup code after reset
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           
   757                           ;psect for function _main
   758  05A3                     _main:
   759  05A3                     l1352:	
   760                           ;incstack = 0
   761                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   762                           
   763                           
   764                           ;pic16f.c: 32:     USART_Init(9600);
   765  05A3  3000               	movlw	0
   766  05A4  1283               	bcf	3,5	;RP0=0, select bank0
   767  05A5  1303               	bcf	3,6	;RP1=0, select bank0
   768  05A6  00A9               	movwf	USART_Init@baudrate+3
   769  05A7  3000               	movlw	0
   770  05A8  00A8               	movwf	USART_Init@baudrate+2
   771  05A9  3025               	movlw	37
   772  05AA  00A7               	movwf	USART_Init@baudrate+1
   773  05AB  3080               	movlw	128
   774  05AC  00A6               	movwf	USART_Init@baudrate
   775  05AD  120A  118A  2712  120A  118A  	fcall	_USART_Init
   776                           
   777                           ;pic16f.c: 33:     I2C_Master_Init(100000);
   778  05B2  3000               	movlw	0
   779  05B3  1283               	bcf	3,5	;RP0=0, select bank0
   780  05B4  1303               	bcf	3,6	;RP1=0, select bank0
   781  05B5  00A3               	movwf	I2C_Master_Init@c+3
   782  05B6  3001               	movlw	1
   783  05B7  00A2               	movwf	I2C_Master_Init@c+2
   784  05B8  3086               	movlw	134
   785  05B9  00A1               	movwf	I2C_Master_Init@c+1
   786  05BA  30A0               	movlw	160
   787  05BB  00A0               	movwf	I2C_Master_Init@c
   788  05BC  120A  118A  25D7  120A  118A  	fcall	_I2C_Master_Init
   789  05C1                     l21:	
   790                           ;pic16f.c: 35:     while(1){
   791                           
   792                           
   793                           ;pic16f.c: 36:         Write_USART("a");
   794  05C1  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   795  05C2  120A  118A  2555  120A  118A  	fcall	_Write_USART
   796  05C7                     l1354:
   797                           
   798                           ;pic16f.c: 37:         Write_USART_String(aht_GetHumidity);
   799  05C7  30F8               	movlw	(low (0-fpbase))& (0+255)
   800  05C8  120A  118A  2585  120A  118A  	fcall	_Write_USART_String
   801  05CD                     l1356:
   802                           
   803                           ;pic16f.c: 38:         Write_USART_String(aht_GetTemperature);
   804  05CD  30F8               	movlw	(low (0-fpbase))& (0+255)
   805  05CE  120A  118A  2585  120A  118A  	fcall	_Write_USART_String
   806  05D3  2DC1               	goto	l21
   807  05D4  120A  118A  2800   	ljmp	start
   808  05D7                     __end_of_main:
   809                           
   810                           	psect	text1
   811  0585                     __ptext1:	
   812 ;; *************** function _Write_USART_String *****************
   813 ;; Defined at:
   814 ;;		line 34 in file "USART.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  a               1    wreg     PTR unsigned char 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  a               1    3[COMMON] PTR unsigned char 
   819 ;;  i               1    2[COMMON] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   829 ;;      Params:         0       0       0       0       0
   830 ;;      Locals:         2       0       0       0       0
   831 ;;      Temps:          1       0       0       0       0
   832 ;;      Totals:         3       0       0       0       0
   833 ;;Total ram usage:        3 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    1
   836 ;; This function calls:
   837 ;;		_Write_USART
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _Write_USART_String
   845  0585                     _Write_USART_String:
   846                           
   847                           ;incstack = 0
   848                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   849                           ;Write_USART_String@a stored from wreg
   850  0585  00F3               	movwf	Write_USART_String@a
   851  0586                     l888:
   852                           
   853                           ;USART.c: 35:     uint8_t i;;USART.c: 36:     for(i=0;a[i]!='\0';i++){
   854  0586  01F2               	clrf	Write_USART_String@i
   855  0587  2D97               	goto	l894
   856  0588                     l890:
   857                           
   858                           ;USART.c: 37:         Write_USART(a[i]);
   859  0588  0872               	movf	Write_USART_String@i,w
   860  0589  0773               	addwf	Write_USART_String@a,w
   861  058A  00F1               	movwf	??_Write_USART_String
   862  058B  0871               	movf	??_Write_USART_String,w
   863  058C  0084               	movwf	4
   864  058D  0800               	movf	0,w
   865  058E  120A  118A  2555  120A  118A  	fcall	_Write_USART
   866  0593                     l892:
   867                           
   868                           ;USART.c: 38:     }
   869  0593  3001               	movlw	1
   870  0594  00F1               	movwf	??_Write_USART_String
   871  0595  0871               	movf	??_Write_USART_String,w
   872  0596  07F2               	addwf	Write_USART_String@i,f
   873  0597                     l894:
   874  0597  0872               	movf	Write_USART_String@i,w
   875  0598  0773               	addwf	Write_USART_String@a,w
   876  0599  00F1               	movwf	??_Write_USART_String
   877  059A  0871               	movf	??_Write_USART_String,w
   878  059B  0084               	movwf	4
   879  059C  1383               	bcf	3,7	;select IRP bank0
   880  059D  0800               	movf	0,w
   881  059E  1D03               	btfss	3,2
   882  059F  2DA1               	goto	u301
   883  05A0  2DA2               	goto	u300
   884  05A1                     u301:
   885  05A1  2D88               	goto	l890
   886  05A2                     u300:
   887  05A2                     l120:
   888  05A2  0008               	return
   889  05A3                     __end_of_Write_USART_String:
   890                           
   891                           	psect	text2
   892  0555                     __ptext2:	
   893 ;; *************** function _Write_USART *****************
   894 ;; Defined at:
   895 ;;		line 30 in file "USART.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;  a               1    wreg     unsigned char 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  a               1    0[COMMON] unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         0       0       0       0       0
   910 ;;      Locals:         1       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0
   912 ;;      Totals:         1       0       0       0       0
   913 ;;Total ram usage:        1 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_main
   919 ;;		_Write_USART_String
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           
   924                           ;psect for function _Write_USART
   925  0555                     _Write_USART:
   926                           
   927                           ;incstack = 0
   928                           ; Regs used in _Write_USART: [wreg]
   929                           ;Write_USART@a stored from wreg
   930  0555  00F0               	movwf	Write_USART@a
   931  0556                     l778:
   932  0556                     l111:	
   933                           ;USART.c: 31:     while(!TRMT);
   934                           
   935  0556  1683               	bsf	3,5	;RP0=1, select bank1
   936  0557  1303               	bcf	3,6	;RP1=0, select bank1
   937  0558  1C98               	btfss	24,1	;volatile
   938  0559  2D5B               	goto	u11
   939  055A  2D5C               	goto	u10
   940  055B                     u11:
   941  055B  2D56               	goto	l111
   942  055C                     u10:
   943  055C                     l780:
   944                           
   945                           ;USART.c: 32:     TXREG=a;
   946  055C  0870               	movf	Write_USART@a,w
   947  055D  1283               	bcf	3,5	;RP0=0, select bank0
   948  055E  1303               	bcf	3,6	;RP1=0, select bank0
   949  055F  0099               	movwf	25	;volatile
   950  0560                     l114:
   951  0560  0008               	return
   952  0561                     __end_of_Write_USART:
   953                           
   954                           	psect	text3
   955  0712                     __ptext3:	
   956 ;; *************** function _USART_Init *****************
   957 ;; Defined at:
   958 ;;		line 9 in file "USART.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  baudrate        4    6[BANK0 ] const long 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  x               2    9[COMMON] unsigned int 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      unsigned char 
   965 ;; Registers used:
   966 ;;		wreg, status,2, status,0, pclath, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   972 ;;      Params:         0       4       0       0       0
   973 ;;      Locals:         2       0       0       0       0
   974 ;;      Temps:          0      12       0       0       0
   975 ;;      Totals:         2      16       0       0       0
   976 ;;Total ram usage:       18 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; Hardware stack levels required when called:    1
   979 ;; This function calls:
   980 ;;		___aldiv
   981 ;; This function is called by:
   982 ;;		_main
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           
   987                           ;psect for function _USART_Init
   988  0712                     _USART_Init:
   989  0712                     l1092:	
   990                           ;incstack = 0
   991                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
   992                           
   993                           
   994                           ;USART.c: 10:   unsigned int x;;USART.c: 11:   x = (8000000 - baudrate*64)/(baudrate*64)
      +                          ;
   995  0712  1283               	bcf	3,5	;RP0=0, select bank0
   996  0713  1303               	bcf	3,6	;RP1=0, select bank0
   997  0714  0826               	movf	USART_Init@baudrate,w
   998  0715  00AA               	movwf	??_USART_Init
   999  0716  0827               	movf	USART_Init@baudrate+1,w
  1000  0717  00AB               	movwf	??_USART_Init+1
  1001  0718  0828               	movf	USART_Init@baudrate+2,w
  1002  0719  00AC               	movwf	??_USART_Init+2
  1003  071A  0829               	movf	USART_Init@baudrate+3,w
  1004  071B  00AD               	movwf	??_USART_Init+3
  1005  071C  3006               	movlw	6
  1006  071D                     u615:
  1007  071D  1003               	clrc
  1008  071E  0DAA               	rlf	??_USART_Init,f
  1009  071F  0DAB               	rlf	??_USART_Init+1,f
  1010  0720  0DAC               	rlf	??_USART_Init+2,f
  1011  0721  0DAD               	rlf	??_USART_Init+3,f
  1012  0722                     u610:
  1013  0722  3EFF               	addlw	-1
  1014  0723  1D03               	skipz
  1015  0724  2F1D               	goto	u615
  1016  0725  082D               	movf	??_USART_Init+3,w
  1017  0726  00F3               	movwf	___aldiv@divisor+3
  1018  0727  082C               	movf	??_USART_Init+2,w
  1019  0728  00F2               	movwf	___aldiv@divisor+2
  1020  0729  082B               	movf	??_USART_Init+1,w
  1021  072A  00F1               	movwf	___aldiv@divisor+1
  1022  072B  082A               	movf	??_USART_Init,w
  1023  072C  00F0               	movwf	___aldiv@divisor
  1024  072D  0826               	movf	USART_Init@baudrate,w
  1025  072E  00AE               	movwf	??_USART_Init+4
  1026  072F  0827               	movf	USART_Init@baudrate+1,w
  1027  0730  00AF               	movwf	??_USART_Init+5
  1028  0731  0828               	movf	USART_Init@baudrate+2,w
  1029  0732  00B0               	movwf	??_USART_Init+6
  1030  0733  0829               	movf	USART_Init@baudrate+3,w
  1031  0734  00B1               	movwf	??_USART_Init+7
  1032  0735  3006               	movlw	6
  1033  0736                     u625:
  1034  0736  1003               	clrc
  1035  0737  0DAE               	rlf	??_USART_Init+4,f
  1036  0738  0DAF               	rlf	??_USART_Init+5,f
  1037  0739  0DB0               	rlf	??_USART_Init+6,f
  1038  073A  0DB1               	rlf	??_USART_Init+7,f
  1039  073B                     u620:
  1040  073B  3EFF               	addlw	-1
  1041  073C  1D03               	skipz
  1042  073D  2F36               	goto	u625
  1043  073E  3000               	movlw	0
  1044  073F  00B2               	movwf	??_USART_Init+8
  1045  0740  3012               	movlw	18
  1046  0741  00B3               	movwf	??_USART_Init+9
  1047  0742  307A               	movlw	122
  1048  0743  00B4               	movwf	??_USART_Init+10
  1049  0744  3000               	movlw	0
  1050  0745  00B5               	movwf	??_USART_Init+11
  1051  0746  082E               	movf	??_USART_Init+4,w
  1052  0747  02B2               	subwf	??_USART_Init+8,f
  1053  0748  082F               	movf	??_USART_Init+5,w
  1054  0749  1C03               	skipc
  1055  074A  0F2F               	incfsz	??_USART_Init+5,w
  1056  074B  2F4D               	goto	u631
  1057  074C  2F4E               	goto	u632
  1058  074D                     u631:
  1059  074D  02B3               	subwf	??_USART_Init+9,f
  1060  074E                     u632:
  1061  074E  0830               	movf	??_USART_Init+6,w
  1062  074F  1C03               	skipc
  1063  0750  0F30               	incfsz	??_USART_Init+6,w
  1064  0751  2F53               	goto	u633
  1065  0752  2F54               	goto	u634
  1066  0753                     u633:
  1067  0753  02B4               	subwf	??_USART_Init+10,f
  1068  0754                     u634:
  1069  0754  0831               	movf	??_USART_Init+7,w
  1070  0755  1C03               	skipc
  1071  0756  0F31               	incfsz	??_USART_Init+7,w
  1072  0757  2F59               	goto	u635
  1073  0758  2F5A               	goto	u636
  1074  0759                     u635:
  1075  0759  02B5               	subwf	??_USART_Init+11,f
  1076  075A                     u636:
  1077  075A  0835               	movf	??_USART_Init+11,w
  1078  075B  00F7               	movwf	___aldiv@dividend+3
  1079  075C  0834               	movf	??_USART_Init+10,w
  1080  075D  00F6               	movwf	___aldiv@dividend+2
  1081  075E  0833               	movf	??_USART_Init+9,w
  1082  075F  00F5               	movwf	___aldiv@dividend+1
  1083  0760  0832               	movf	??_USART_Init+8,w
  1084  0761  00F4               	movwf	___aldiv@dividend
  1085  0762  120A  118A  2675  120A  118A  	fcall	___aldiv
  1086  0767  0871               	movf	?___aldiv+1,w
  1087  0768  00FA               	movwf	USART_Init@x+1
  1088  0769  0870               	movf	?___aldiv,w
  1089  076A  00F9               	movwf	USART_Init@x
  1090  076B                     l1094:
  1091                           
  1092                           ;USART.c: 12:   if(x>255)
  1093  076B  3001               	movlw	1
  1094  076C  027A               	subwf	USART_Init@x+1,w
  1095  076D  3000               	movlw	0
  1096  076E  1903               	skipnz
  1097  076F  0279               	subwf	USART_Init@x,w
  1098  0770  1C03               	skipc
  1099  0771  2F73               	goto	u641
  1100  0772  2F74               	goto	u640
  1101  0773                     u641:
  1102  0773  2FD0               	goto	l1100
  1103  0774                     u640:
  1104  0774                     l1096:
  1105                           
  1106                           ;USART.c: 13:   {;USART.c: 14:     x = (8000000 - baudrate*16)/(baudrate*16);
  1107  0774  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0775  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0776  0826               	movf	USART_Init@baudrate,w
  1110  0777  00AA               	movwf	??_USART_Init
  1111  0778  0827               	movf	USART_Init@baudrate+1,w
  1112  0779  00AB               	movwf	??_USART_Init+1
  1113  077A  0828               	movf	USART_Init@baudrate+2,w
  1114  077B  00AC               	movwf	??_USART_Init+2
  1115  077C  0829               	movf	USART_Init@baudrate+3,w
  1116  077D  00AD               	movwf	??_USART_Init+3
  1117  077E  3004               	movlw	4
  1118  077F                     u655:
  1119  077F  1003               	clrc
  1120  0780  0DAA               	rlf	??_USART_Init,f
  1121  0781  0DAB               	rlf	??_USART_Init+1,f
  1122  0782  0DAC               	rlf	??_USART_Init+2,f
  1123  0783  0DAD               	rlf	??_USART_Init+3,f
  1124  0784                     u650:
  1125  0784  3EFF               	addlw	-1
  1126  0785  1D03               	skipz
  1127  0786  2F7F               	goto	u655
  1128  0787  082D               	movf	??_USART_Init+3,w
  1129  0788  00F3               	movwf	___aldiv@divisor+3
  1130  0789  082C               	movf	??_USART_Init+2,w
  1131  078A  00F2               	movwf	___aldiv@divisor+2
  1132  078B  082B               	movf	??_USART_Init+1,w
  1133  078C  00F1               	movwf	___aldiv@divisor+1
  1134  078D  082A               	movf	??_USART_Init,w
  1135  078E  00F0               	movwf	___aldiv@divisor
  1136  078F  0826               	movf	USART_Init@baudrate,w
  1137  0790  00AE               	movwf	??_USART_Init+4
  1138  0791  0827               	movf	USART_Init@baudrate+1,w
  1139  0792  00AF               	movwf	??_USART_Init+5
  1140  0793  0828               	movf	USART_Init@baudrate+2,w
  1141  0794  00B0               	movwf	??_USART_Init+6
  1142  0795  0829               	movf	USART_Init@baudrate+3,w
  1143  0796  00B1               	movwf	??_USART_Init+7
  1144  0797  3004               	movlw	4
  1145  0798                     u665:
  1146  0798  1003               	clrc
  1147  0799  0DAE               	rlf	??_USART_Init+4,f
  1148  079A  0DAF               	rlf	??_USART_Init+5,f
  1149  079B  0DB0               	rlf	??_USART_Init+6,f
  1150  079C  0DB1               	rlf	??_USART_Init+7,f
  1151  079D                     u660:
  1152  079D  3EFF               	addlw	-1
  1153  079E  1D03               	skipz
  1154  079F  2F98               	goto	u665
  1155  07A0  3000               	movlw	0
  1156  07A1  00B2               	movwf	??_USART_Init+8
  1157  07A2  3012               	movlw	18
  1158  07A3  00B3               	movwf	??_USART_Init+9
  1159  07A4  307A               	movlw	122
  1160  07A5  00B4               	movwf	??_USART_Init+10
  1161  07A6  3000               	movlw	0
  1162  07A7  00B5               	movwf	??_USART_Init+11
  1163  07A8  082E               	movf	??_USART_Init+4,w
  1164  07A9  02B2               	subwf	??_USART_Init+8,f
  1165  07AA  082F               	movf	??_USART_Init+5,w
  1166  07AB  1C03               	skipc
  1167  07AC  0F2F               	incfsz	??_USART_Init+5,w
  1168  07AD  2FAF               	goto	u671
  1169  07AE  2FB0               	goto	u672
  1170  07AF                     u671:
  1171  07AF  02B3               	subwf	??_USART_Init+9,f
  1172  07B0                     u672:
  1173  07B0  0830               	movf	??_USART_Init+6,w
  1174  07B1  1C03               	skipc
  1175  07B2  0F30               	incfsz	??_USART_Init+6,w
  1176  07B3  2FB5               	goto	u673
  1177  07B4  2FB6               	goto	u674
  1178  07B5                     u673:
  1179  07B5  02B4               	subwf	??_USART_Init+10,f
  1180  07B6                     u674:
  1181  07B6  0831               	movf	??_USART_Init+7,w
  1182  07B7  1C03               	skipc
  1183  07B8  0F31               	incfsz	??_USART_Init+7,w
  1184  07B9  2FBB               	goto	u675
  1185  07BA  2FBC               	goto	u676
  1186  07BB                     u675:
  1187  07BB  02B5               	subwf	??_USART_Init+11,f
  1188  07BC                     u676:
  1189  07BC  0835               	movf	??_USART_Init+11,w
  1190  07BD  00F7               	movwf	___aldiv@dividend+3
  1191  07BE  0834               	movf	??_USART_Init+10,w
  1192  07BF  00F6               	movwf	___aldiv@dividend+2
  1193  07C0  0833               	movf	??_USART_Init+9,w
  1194  07C1  00F5               	movwf	___aldiv@dividend+1
  1195  07C2  0832               	movf	??_USART_Init+8,w
  1196  07C3  00F4               	movwf	___aldiv@dividend
  1197  07C4  120A  118A  2675  120A  118A  	fcall	___aldiv
  1198  07C9  0871               	movf	?___aldiv+1,w
  1199  07CA  00FA               	movwf	USART_Init@x+1
  1200  07CB  0870               	movf	?___aldiv,w
  1201  07CC  00F9               	movwf	USART_Init@x
  1202  07CD                     l1098:
  1203                           
  1204                           ;USART.c: 15:     BRGH = 1;
  1205  07CD  1683               	bsf	3,5	;RP0=1, select bank1
  1206  07CE  1303               	bcf	3,6	;RP1=0, select bank1
  1207  07CF  1518               	bsf	24,2	;volatile
  1208  07D0                     l1100:
  1209                           
  1210                           ;USART.c: 17:   if(x<256)
  1211  07D0  3001               	movlw	1
  1212  07D1  027A               	subwf	USART_Init@x+1,w
  1213  07D2  3000               	movlw	0
  1214  07D3  1903               	skipnz
  1215  07D4  0279               	subwf	USART_Init@x,w
  1216  07D5  1803               	skipnc
  1217  07D6  2FD8               	goto	u681
  1218  07D7  2FD9               	goto	u680
  1219  07D8                     u681:
  1220  07D8  2FEB               	goto	l108
  1221  07D9                     u680:
  1222  07D9                     l1102:
  1223                           
  1224                           ;USART.c: 18:   {;USART.c: 19:     SPBRG = x;
  1225  07D9  0879               	movf	USART_Init@x,w
  1226  07DA  1683               	bsf	3,5	;RP0=1, select bank1
  1227  07DB  1303               	bcf	3,6	;RP1=0, select bank1
  1228  07DC  0099               	movwf	25	;volatile
  1229  07DD                     l1104:
  1230                           
  1231                           ;USART.c: 20:     SYNC = 0;
  1232  07DD  1218               	bcf	24,4	;volatile
  1233  07DE                     l1106:
  1234                           
  1235                           ;USART.c: 21:     SPEN = 1;
  1236  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1237  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1238  07E0  1798               	bsf	24,7	;volatile
  1239  07E1                     l1108:
  1240                           
  1241                           ;USART.c: 22:     TRISC7 = 1;
  1242  07E1  1683               	bsf	3,5	;RP0=1, select bank1
  1243  07E2  1303               	bcf	3,6	;RP1=0, select bank1
  1244  07E3  1787               	bsf	7,7	;volatile
  1245  07E4                     l1110:
  1246                           
  1247                           ;USART.c: 23:     TRISC6 = 0;
  1248  07E4  1307               	bcf	7,6	;volatile
  1249  07E5                     l1112:
  1250                           
  1251                           ;USART.c: 24:     CREN = 1;
  1252  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1253  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1254  07E7  1618               	bsf	24,4	;volatile
  1255  07E8                     l1114:
  1256                           
  1257                           ;USART.c: 25:     TXEN = 1;
  1258  07E8  1683               	bsf	3,5	;RP0=1, select bank1
  1259  07E9  1303               	bcf	3,6	;RP1=0, select bank1
  1260  07EA  1698               	bsf	24,5	;volatile
  1261  07EB                     l108:
  1262  07EB  0008               	return
  1263  07EC                     __end_of_USART_Init:
  1264                           
  1265                           	psect	text4
  1266  0675                     __ptext4:	
  1267 ;; *************** function ___aldiv *****************
  1268 ;; Defined at:
  1269 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\aldiv.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  divisor         4    0[COMMON] long 
  1272 ;;  dividend        4    4[COMMON] long 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  quotient        4    2[BANK0 ] long 
  1275 ;;  sign            1    1[BANK0 ] unsigned char 
  1276 ;;  counter         1    0[BANK0 ] unsigned char 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  4    0[COMMON] long 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2, status,0
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1286 ;;      Params:         8       0       0       0       0
  1287 ;;      Locals:         0       6       0       0       0
  1288 ;;      Temps:          1       0       0       0       0
  1289 ;;      Totals:         9       6       0       0       0
  1290 ;;Total ram usage:       15 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_USART_Init
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           
  1300                           ;psect for function ___aldiv
  1301  0675                     ___aldiv:
  1302  0675                     l1052:	
  1303                           ;incstack = 0
  1304                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1305                           
  1306  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1308  0677  01A1               	clrf	___aldiv@sign
  1309  0678                     l1054:
  1310  0678  1FF3               	btfss	___aldiv@divisor+3,7
  1311  0679  2E7B               	goto	u511
  1312  067A  2E7C               	goto	u510
  1313  067B                     u511:
  1314  067B  2E89               	goto	l337
  1315  067C                     u510:
  1316  067C                     l1056:
  1317  067C  09F0               	comf	___aldiv@divisor,f
  1318  067D  09F1               	comf	___aldiv@divisor+1,f
  1319  067E  09F2               	comf	___aldiv@divisor+2,f
  1320  067F  09F3               	comf	___aldiv@divisor+3,f
  1321  0680  0AF0               	incf	___aldiv@divisor,f
  1322  0681  1903               	skipnz
  1323  0682  0AF1               	incf	___aldiv@divisor+1,f
  1324  0683  1903               	skipnz
  1325  0684  0AF2               	incf	___aldiv@divisor+2,f
  1326  0685  1903               	skipnz
  1327  0686  0AF3               	incf	___aldiv@divisor+3,f
  1328  0687  01A1               	clrf	___aldiv@sign
  1329  0688  0AA1               	incf	___aldiv@sign,f
  1330  0689                     l337:
  1331  0689  1FF7               	btfss	___aldiv@dividend+3,7
  1332  068A  2E8C               	goto	u521
  1333  068B  2E8D               	goto	u520
  1334  068C                     u521:
  1335  068C  2E9C               	goto	l1062
  1336  068D                     u520:
  1337  068D                     l1058:
  1338  068D  09F4               	comf	___aldiv@dividend,f
  1339  068E  09F5               	comf	___aldiv@dividend+1,f
  1340  068F  09F6               	comf	___aldiv@dividend+2,f
  1341  0690  09F7               	comf	___aldiv@dividend+3,f
  1342  0691  0AF4               	incf	___aldiv@dividend,f
  1343  0692  1903               	skipnz
  1344  0693  0AF5               	incf	___aldiv@dividend+1,f
  1345  0694  1903               	skipnz
  1346  0695  0AF6               	incf	___aldiv@dividend+2,f
  1347  0696  1903               	skipnz
  1348  0697  0AF7               	incf	___aldiv@dividend+3,f
  1349  0698                     l1060:
  1350  0698  3001               	movlw	1
  1351  0699  00F8               	movwf	??___aldiv
  1352  069A  0878               	movf	??___aldiv,w
  1353  069B  06A1               	xorwf	___aldiv@sign,f
  1354  069C                     l1062:
  1355  069C  3000               	movlw	0
  1356  069D  00A5               	movwf	___aldiv@quotient+3
  1357  069E  3000               	movlw	0
  1358  069F  00A4               	movwf	___aldiv@quotient+2
  1359  06A0  3000               	movlw	0
  1360  06A1  00A3               	movwf	___aldiv@quotient+1
  1361  06A2  3000               	movlw	0
  1362  06A3  00A2               	movwf	___aldiv@quotient
  1363  06A4                     l1064:
  1364  06A4  0873               	movf	___aldiv@divisor+3,w
  1365  06A5  0472               	iorwf	___aldiv@divisor+2,w
  1366  06A6  0471               	iorwf	___aldiv@divisor+1,w
  1367  06A7  0470               	iorwf	___aldiv@divisor,w
  1368  06A8  1903               	skipnz
  1369  06A9  2EAB               	goto	u531
  1370  06AA  2EAC               	goto	u530
  1371  06AB                     u531:
  1372  06AB  2EF9               	goto	l1084
  1373  06AC                     u530:
  1374  06AC                     l1066:
  1375  06AC  01A0               	clrf	___aldiv@counter
  1376  06AD  0AA0               	incf	___aldiv@counter,f
  1377  06AE  2EBC               	goto	l1070
  1378  06AF                     l1068:
  1379  06AF  3001               	movlw	1
  1380  06B0  00F8               	movwf	??___aldiv
  1381  06B1                     u545:
  1382  06B1  1003               	clrc
  1383  06B2  0DF0               	rlf	___aldiv@divisor,f
  1384  06B3  0DF1               	rlf	___aldiv@divisor+1,f
  1385  06B4  0DF2               	rlf	___aldiv@divisor+2,f
  1386  06B5  0DF3               	rlf	___aldiv@divisor+3,f
  1387  06B6  0BF8               	decfsz	??___aldiv,f
  1388  06B7  2EB1               	goto	u545
  1389  06B8  3001               	movlw	1
  1390  06B9  00F8               	movwf	??___aldiv
  1391  06BA  0878               	movf	??___aldiv,w
  1392  06BB  07A0               	addwf	___aldiv@counter,f
  1393  06BC                     l1070:
  1394  06BC  1FF3               	btfss	___aldiv@divisor+3,7
  1395  06BD  2EBF               	goto	u551
  1396  06BE  2EC0               	goto	u550
  1397  06BF                     u551:
  1398  06BF  2EAF               	goto	l1068
  1399  06C0                     u550:
  1400  06C0                     l1072:
  1401  06C0  3001               	movlw	1
  1402  06C1  00F8               	movwf	??___aldiv
  1403  06C2                     u565:
  1404  06C2  1003               	clrc
  1405  06C3  0DA2               	rlf	___aldiv@quotient,f
  1406  06C4  0DA3               	rlf	___aldiv@quotient+1,f
  1407  06C5  0DA4               	rlf	___aldiv@quotient+2,f
  1408  06C6  0DA5               	rlf	___aldiv@quotient+3,f
  1409  06C7  0BF8               	decfsz	??___aldiv,f
  1410  06C8  2EC2               	goto	u565
  1411  06C9                     l1074:
  1412  06C9  0873               	movf	___aldiv@divisor+3,w
  1413  06CA  0277               	subwf	___aldiv@dividend+3,w
  1414  06CB  1D03               	skipz
  1415  06CC  2ED7               	goto	u575
  1416  06CD  0872               	movf	___aldiv@divisor+2,w
  1417  06CE  0276               	subwf	___aldiv@dividend+2,w
  1418  06CF  1D03               	skipz
  1419  06D0  2ED7               	goto	u575
  1420  06D1  0871               	movf	___aldiv@divisor+1,w
  1421  06D2  0275               	subwf	___aldiv@dividend+1,w
  1422  06D3  1D03               	skipz
  1423  06D4  2ED7               	goto	u575
  1424  06D5  0870               	movf	___aldiv@divisor,w
  1425  06D6  0274               	subwf	___aldiv@dividend,w
  1426  06D7                     u575:
  1427  06D7  1C03               	skipc
  1428  06D8  2EDA               	goto	u571
  1429  06D9  2EDB               	goto	u570
  1430  06DA                     u571:
  1431  06DA  2EEA               	goto	l1080
  1432  06DB                     u570:
  1433  06DB                     l1076:
  1434  06DB  0870               	movf	___aldiv@divisor,w
  1435  06DC  02F4               	subwf	___aldiv@dividend,f
  1436  06DD  0871               	movf	___aldiv@divisor+1,w
  1437  06DE  1C03               	skipc
  1438  06DF  0F71               	incfsz	___aldiv@divisor+1,w
  1439  06E0  02F5               	subwf	___aldiv@dividend+1,f
  1440  06E1  0872               	movf	___aldiv@divisor+2,w
  1441  06E2  1C03               	skipc
  1442  06E3  0F72               	incfsz	___aldiv@divisor+2,w
  1443  06E4  02F6               	subwf	___aldiv@dividend+2,f
  1444  06E5  0873               	movf	___aldiv@divisor+3,w
  1445  06E6  1C03               	skipc
  1446  06E7  0F73               	incfsz	___aldiv@divisor+3,w
  1447  06E8  02F7               	subwf	___aldiv@dividend+3,f
  1448  06E9                     l1078:
  1449  06E9  1422               	bsf	___aldiv@quotient,0
  1450  06EA                     l1080:
  1451  06EA  3001               	movlw	1
  1452  06EB                     u585:
  1453  06EB  1003               	clrc
  1454  06EC  0CF3               	rrf	___aldiv@divisor+3,f
  1455  06ED  0CF2               	rrf	___aldiv@divisor+2,f
  1456  06EE  0CF1               	rrf	___aldiv@divisor+1,f
  1457  06EF  0CF0               	rrf	___aldiv@divisor,f
  1458  06F0  3EFF               	addlw	-1
  1459  06F1  1D03               	skipz
  1460  06F2  2EEB               	goto	u585
  1461  06F3                     l1082:
  1462  06F3  3001               	movlw	1
  1463  06F4  02A0               	subwf	___aldiv@counter,f
  1464  06F5  1D03               	btfss	3,2
  1465  06F6  2EF8               	goto	u591
  1466  06F7  2EF9               	goto	u590
  1467  06F8                     u591:
  1468  06F8  2EC0               	goto	l1072
  1469  06F9                     u590:
  1470  06F9                     l1084:
  1471  06F9  0821               	movf	___aldiv@sign,w
  1472  06FA  1903               	btfsc	3,2
  1473  06FB  2EFD               	goto	u601
  1474  06FC  2EFE               	goto	u600
  1475  06FD                     u601:
  1476  06FD  2F09               	goto	l1088
  1477  06FE                     u600:
  1478  06FE                     l1086:
  1479  06FE  09A2               	comf	___aldiv@quotient,f
  1480  06FF  09A3               	comf	___aldiv@quotient+1,f
  1481  0700  09A4               	comf	___aldiv@quotient+2,f
  1482  0701  09A5               	comf	___aldiv@quotient+3,f
  1483  0702  0AA2               	incf	___aldiv@quotient,f
  1484  0703  1903               	skipnz
  1485  0704  0AA3               	incf	___aldiv@quotient+1,f
  1486  0705  1903               	skipnz
  1487  0706  0AA4               	incf	___aldiv@quotient+2,f
  1488  0707  1903               	skipnz
  1489  0708  0AA5               	incf	___aldiv@quotient+3,f
  1490  0709                     l1088:
  1491  0709  0825               	movf	___aldiv@quotient+3,w
  1492  070A  00F3               	movwf	?___aldiv+3
  1493  070B  0824               	movf	___aldiv@quotient+2,w
  1494  070C  00F2               	movwf	?___aldiv+2
  1495  070D  0823               	movf	___aldiv@quotient+1,w
  1496  070E  00F1               	movwf	?___aldiv+1
  1497  070F  0822               	movf	___aldiv@quotient,w
  1498  0710  00F0               	movwf	?___aldiv
  1499  0711                     l347:
  1500  0711  0008               	return
  1501  0712                     __end_of___aldiv:
  1502                           
  1503                           	psect	text5
  1504  05D7                     __ptext5:	
  1505 ;; *************** function _I2C_Master_Init *****************
  1506 ;; Defined at:
  1507 ;;		line 16 in file "I2C.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  c               4    0[BANK0 ] const unsigned long 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;		None
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, status,0, pclath, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1521 ;;      Params:         0       4       0       0       0
  1522 ;;      Locals:         0       0       0       0       0
  1523 ;;      Temps:          0       4       0       0       0
  1524 ;;      Totals:         0       8       0       0       0
  1525 ;;Total ram usage:        8 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; Hardware stack levels required when called:    1
  1528 ;; This function calls:
  1529 ;;		___lldiv
  1530 ;; This function is called by:
  1531 ;;		_main
  1532 ;;		_aht_begin
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           
  1537                           ;psect for function _I2C_Master_Init
  1538  05D7                     _I2C_Master_Init:
  1539  05D7                     l1118:	
  1540                           ;incstack = 0
  1541                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1542                           
  1543                           
  1544                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1545  05D7  3028               	movlw	40
  1546  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  1547  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  1548  05DA  0094               	movwf	20	;volatile
  1549  05DB                     l1120:
  1550                           
  1551                           ;I2C.c: 19:     SSPCON2 = 0;
  1552  05DB  1683               	bsf	3,5	;RP0=1, select bank1
  1553  05DC  1303               	bcf	3,6	;RP1=0, select bank1
  1554  05DD  0191               	clrf	17	;volatile
  1555  05DE                     l1122:
  1556                           
  1557                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1558  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1559  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1560  05E0  0820               	movf	I2C_Master_Init@c,w
  1561  05E1  00A4               	movwf	??_I2C_Master_Init
  1562  05E2  0821               	movf	I2C_Master_Init@c+1,w
  1563  05E3  00A5               	movwf	??_I2C_Master_Init+1
  1564  05E4  0822               	movf	I2C_Master_Init@c+2,w
  1565  05E5  00A6               	movwf	??_I2C_Master_Init+2
  1566  05E6  0823               	movf	I2C_Master_Init@c+3,w
  1567  05E7  00A7               	movwf	??_I2C_Master_Init+3
  1568  05E8  3002               	movlw	2
  1569  05E9                     u695:
  1570  05E9  1003               	clrc
  1571  05EA  0DA4               	rlf	??_I2C_Master_Init,f
  1572  05EB  0DA5               	rlf	??_I2C_Master_Init+1,f
  1573  05EC  0DA6               	rlf	??_I2C_Master_Init+2,f
  1574  05ED  0DA7               	rlf	??_I2C_Master_Init+3,f
  1575  05EE                     u690:
  1576  05EE  3EFF               	addlw	-1
  1577  05EF  1D03               	skipz
  1578  05F0  2DE9               	goto	u695
  1579  05F1  0827               	movf	??_I2C_Master_Init+3,w
  1580  05F2  00F3               	movwf	___lldiv@divisor+3
  1581  05F3  0826               	movf	??_I2C_Master_Init+2,w
  1582  05F4  00F2               	movwf	___lldiv@divisor+2
  1583  05F5  0825               	movf	??_I2C_Master_Init+1,w
  1584  05F6  00F1               	movwf	___lldiv@divisor+1
  1585  05F7  0824               	movf	??_I2C_Master_Init,w
  1586  05F8  00F0               	movwf	___lldiv@divisor
  1587  05F9  3000               	movlw	0
  1588  05FA  00F7               	movwf	___lldiv@dividend+3
  1589  05FB  307A               	movlw	122
  1590  05FC  00F6               	movwf	___lldiv@dividend+2
  1591  05FD  3012               	movlw	18
  1592  05FE  00F5               	movwf	___lldiv@dividend+1
  1593  05FF  3000               	movlw	0
  1594  0600  00F4               	movwf	___lldiv@dividend
  1595  0601  120A  118A  260F  120A  118A  	fcall	___lldiv
  1596  0606  0870               	movf	?___lldiv,w
  1597  0607  3EFF               	addlw	255
  1598  0608  1683               	bsf	3,5	;RP0=1, select bank1
  1599  0609  1303               	bcf	3,6	;RP1=0, select bank1
  1600  060A  0093               	movwf	19	;volatile
  1601  060B                     l1124:
  1602                           
  1603                           ;I2C.c: 21:     SSPSTAT = 0;
  1604  060B  0194               	clrf	20	;volatile
  1605  060C                     l1126:
  1606                           
  1607                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1608  060C  1587               	bsf	7,3	;volatile
  1609  060D                     l1128:
  1610                           
  1611                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1612  060D  1607               	bsf	7,4	;volatile
  1613  060E                     l53:
  1614  060E  0008               	return
  1615  060F                     __end_of_I2C_Master_Init:
  1616                           
  1617                           	psect	text6
  1618  060F                     __ptext6:	
  1619 ;; *************** function ___lldiv *****************
  1620 ;; Defined at:
  1621 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\__lldiv.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  divisor         4    0[COMMON] unsigned long 
  1624 ;;  dividend        4    4[COMMON] unsigned long 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  quotient        4    9[COMMON] unsigned long 
  1627 ;;  counter         1   13[COMMON] unsigned char 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  4    0[COMMON] unsigned long 
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, status,0
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1637 ;;      Params:         8       0       0       0       0
  1638 ;;      Locals:         5       0       0       0       0
  1639 ;;      Temps:          1       0       0       0       0
  1640 ;;      Totals:        14       0       0       0       0
  1641 ;;Total ram usage:       14 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_I2C_Master_Init
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           
  1651                           ;psect for function ___lldiv
  1652  060F                     ___lldiv:
  1653  060F                     l1028:	
  1654                           ;incstack = 0
  1655                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1656                           
  1657  060F  3000               	movlw	0
  1658  0610  00FC               	movwf	___lldiv@quotient+3
  1659  0611  3000               	movlw	0
  1660  0612  00FB               	movwf	___lldiv@quotient+2
  1661  0613  3000               	movlw	0
  1662  0614  00FA               	movwf	___lldiv@quotient+1
  1663  0615  3000               	movlw	0
  1664  0616  00F9               	movwf	___lldiv@quotient
  1665  0617  0873               	movf	___lldiv@divisor+3,w
  1666  0618  0472               	iorwf	___lldiv@divisor+2,w
  1667  0619  0471               	iorwf	___lldiv@divisor+1,w
  1668  061A  0470               	iorwf	___lldiv@divisor,w
  1669  061B  1903               	skipnz
  1670  061C  2E1E               	goto	u441
  1671  061D  2E1F               	goto	u440
  1672  061E                     u441:
  1673  061E  2E6C               	goto	l1048
  1674  061F                     u440:
  1675  061F                     l1030:
  1676  061F  01FD               	clrf	___lldiv@counter
  1677  0620  0AFD               	incf	___lldiv@counter,f
  1678  0621  2E2F               	goto	l1034
  1679  0622                     l1032:
  1680  0622  3001               	movlw	1
  1681  0623  00F8               	movwf	??___lldiv
  1682  0624                     u455:
  1683  0624  1003               	clrc
  1684  0625  0DF0               	rlf	___lldiv@divisor,f
  1685  0626  0DF1               	rlf	___lldiv@divisor+1,f
  1686  0627  0DF2               	rlf	___lldiv@divisor+2,f
  1687  0628  0DF3               	rlf	___lldiv@divisor+3,f
  1688  0629  0BF8               	decfsz	??___lldiv,f
  1689  062A  2E24               	goto	u455
  1690  062B  3001               	movlw	1
  1691  062C  00F8               	movwf	??___lldiv
  1692  062D  0878               	movf	??___lldiv,w
  1693  062E  07FD               	addwf	___lldiv@counter,f
  1694  062F                     l1034:
  1695  062F  1FF3               	btfss	___lldiv@divisor+3,7
  1696  0630  2E32               	goto	u461
  1697  0631  2E33               	goto	u460
  1698  0632                     u461:
  1699  0632  2E22               	goto	l1032
  1700  0633                     u460:
  1701  0633                     l1036:
  1702  0633  3001               	movlw	1
  1703  0634  00F8               	movwf	??___lldiv
  1704  0635                     u475:
  1705  0635  1003               	clrc
  1706  0636  0DF9               	rlf	___lldiv@quotient,f
  1707  0637  0DFA               	rlf	___lldiv@quotient+1,f
  1708  0638  0DFB               	rlf	___lldiv@quotient+2,f
  1709  0639  0DFC               	rlf	___lldiv@quotient+3,f
  1710  063A  0BF8               	decfsz	??___lldiv,f
  1711  063B  2E35               	goto	u475
  1712  063C                     l1038:
  1713  063C  0873               	movf	___lldiv@divisor+3,w
  1714  063D  0277               	subwf	___lldiv@dividend+3,w
  1715  063E  1D03               	skipz
  1716  063F  2E4A               	goto	u485
  1717  0640  0872               	movf	___lldiv@divisor+2,w
  1718  0641  0276               	subwf	___lldiv@dividend+2,w
  1719  0642  1D03               	skipz
  1720  0643  2E4A               	goto	u485
  1721  0644  0871               	movf	___lldiv@divisor+1,w
  1722  0645  0275               	subwf	___lldiv@dividend+1,w
  1723  0646  1D03               	skipz
  1724  0647  2E4A               	goto	u485
  1725  0648  0870               	movf	___lldiv@divisor,w
  1726  0649  0274               	subwf	___lldiv@dividend,w
  1727  064A                     u485:
  1728  064A  1C03               	skipc
  1729  064B  2E4D               	goto	u481
  1730  064C  2E4E               	goto	u480
  1731  064D                     u481:
  1732  064D  2E5D               	goto	l1044
  1733  064E                     u480:
  1734  064E                     l1040:
  1735  064E  0870               	movf	___lldiv@divisor,w
  1736  064F  02F4               	subwf	___lldiv@dividend,f
  1737  0650  0871               	movf	___lldiv@divisor+1,w
  1738  0651  1C03               	skipc
  1739  0652  0F71               	incfsz	___lldiv@divisor+1,w
  1740  0653  02F5               	subwf	___lldiv@dividend+1,f
  1741  0654  0872               	movf	___lldiv@divisor+2,w
  1742  0655  1C03               	skipc
  1743  0656  0F72               	incfsz	___lldiv@divisor+2,w
  1744  0657  02F6               	subwf	___lldiv@dividend+2,f
  1745  0658  0873               	movf	___lldiv@divisor+3,w
  1746  0659  1C03               	skipc
  1747  065A  0F73               	incfsz	___lldiv@divisor+3,w
  1748  065B  02F7               	subwf	___lldiv@dividend+3,f
  1749  065C                     l1042:
  1750  065C  1479               	bsf	___lldiv@quotient,0
  1751  065D                     l1044:
  1752  065D  3001               	movlw	1
  1753  065E                     u495:
  1754  065E  1003               	clrc
  1755  065F  0CF3               	rrf	___lldiv@divisor+3,f
  1756  0660  0CF2               	rrf	___lldiv@divisor+2,f
  1757  0661  0CF1               	rrf	___lldiv@divisor+1,f
  1758  0662  0CF0               	rrf	___lldiv@divisor,f
  1759  0663  3EFF               	addlw	-1
  1760  0664  1D03               	skipz
  1761  0665  2E5E               	goto	u495
  1762  0666                     l1046:
  1763  0666  3001               	movlw	1
  1764  0667  02FD               	subwf	___lldiv@counter,f
  1765  0668  1D03               	btfss	3,2
  1766  0669  2E6B               	goto	u501
  1767  066A  2E6C               	goto	u500
  1768  066B                     u501:
  1769  066B  2E33               	goto	l1036
  1770  066C                     u500:
  1771  066C                     l1048:
  1772  066C  087C               	movf	___lldiv@quotient+3,w
  1773  066D  00F3               	movwf	?___lldiv+3
  1774  066E  087B               	movf	___lldiv@quotient+2,w
  1775  066F  00F2               	movwf	?___lldiv+2
  1776  0670  087A               	movf	___lldiv@quotient+1,w
  1777  0671  00F1               	movwf	?___lldiv+1
  1778  0672  0879               	movf	___lldiv@quotient,w
  1779  0673  00F0               	movwf	?___lldiv
  1780  0674                     l308:
  1781  0674  0008               	return
  1782  0675                     __end_of___lldiv:
  1783  0002                     
  1784                           	psect	functab
  1785  0003                     __pfunctab:
  1786  0003                     __fptable:
  1787  0003                     fptable:
  1788  0003  00FF               	movwf	(btemp+1)& (0+127)
  1789  0004  3000               	movlw	high fptable
  1790  0005  008A               	movwf	10
  1791  0006  087F               	movf	(btemp+1)& (0+127),w
  1792  0007  0782               	addwf	2,f
  1793  0008                     fpbase:
  1794  0008  2808               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  1795  0009                     __end_of__fptable:
  1796  007E                     btemp	set	126	;btemp
  1797  007E                     wtemp0	set	126
  1798                           
  1799                           	psect	config
  1800                           
  1801                           ;Config register CONFIG1 @ 0x2007
  1802                           ;	Oscillator Selection bits
  1803                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1804                           ;	Watchdog Timer Enable bit
  1805                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1806                           ;	Power-up Timer Enable bit
  1807                           ;	PWRTE = OFF, PWRT disabled
  1808                           ;	RE3/MCLR pin function select bit
  1809                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1810                           ;	Code Protection bit
  1811                           ;	CP = OFF, Program memory code protection is disabled
  1812                           ;	Data Code Protection bit
  1813                           ;	CPD = OFF, Data memory code protection is disabled
  1814                           ;	Brown Out Reset Selection bits
  1815                           ;	BOREN = OFF, BOR disabled
  1816                           ;	Internal External Switchover bit
  1817                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1818                           ;	Fail-Safe Clock Monitor Enabled bit
  1819                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1820                           ;	Low Voltage Programming Enable bit
  1821                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1822                           ;	In-Circuit Debugger Mode bit
  1823                           ;	DEBUG = 0x1, unprogrammed default
  1824  2007                     	org	8199
  1825  2007  30F4               	dw	12532
  1826                           
  1827                           ;Config register CONFIG2 @ 0x2008
  1828                           ;	Brown-out Reset Selection bit
  1829                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1830                           ;	Flash Program Memory Self Write Enable bits
  1831                           ;	WRT = OFF, Write protection off
  1832  2008                     	org	8200
  1833  2008  3FFF               	dw	16383

Data Sizes:
    Strings     2
    Constant    0
    Data        17
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Write_USART_String@a	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _Write_USART_String->_Write_USART
    _USART_Init->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1504
                    _I2C_Master_Init
                         _USART_Init
                        _Write_USART
                 _Write_USART_String
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   3     3      0     165
                                              1 COMMON     3     3      0
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          18    14      4     836
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     488
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _USART_Init
     ___aldiv
   _Write_USART
   _Write_USART_String
     _Write_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      29       5       51.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      37      12        0.0%
ABS                  0      0      37       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 04 22:57:55 2021

                          pc 0002                           l21 05C1                           l53 060E  
                         u10 055C                           u11 055B                           fsr 0004  
       __size_of_Write_USART 000C                          l111 0556                          l120 05A2  
                        l114 0560                          l108 07EB                          l308 0674  
                        l337 0689                          l347 0711                          l780 055C  
                        l778 0556                          l890 0588                          l892 0593  
                        l894 0597                          l888 0586                          _GIE 005F  
                        u300 05A2                          u301 05A1                          u500 066C  
                        u501 066B                          u510 067C                          u511 067B  
                        u440 061F                          u600 06FE                          u520 068D  
                        u441 061E                          u601 06FD                          u521 068C  
                        u530 06AC                          u610 0722                          u531 06AB  
                        u460 0633                          u620 073B                          u461 0632  
                        u550 06C0                          u455 0624                          u551 06BF  
                        u631 074D                          u615 071D                          u480 064E  
                        u640 0774                          u632 074E                          u481 064D  
                        u545 06B1                          u641 0773                          u633 0753  
                        u625 0736                          u570 06DB                          u650 0784  
                        u634 0754                          u475 0635                          u571 06DA  
                        u635 0759                          u660 079D                          u636 075A  
                        u485 064A                          u565 06C2                          u590 06F9  
                        u495 065E                          u591 06F8                          u575 06D7  
                        u671 07AF                          u655 077F                          u680 07D9  
                        u672 07B0                          u585 06EB                          u681 07D8  
                        u673 07B5                          u665 0798                          u690 05EE  
                        u674 07B6                          u675 07BB                          u676 07BC  
                        u695 05E9                          fsr0 0004                          indf 0000  
__size_of_Write_USART_String 001E                         l1100 07D0                         l1030 061F  
                       l1110 07E4                         l1102 07D9                         l1040 064E  
                       l1032 0622                         l1120 05DB                         l1112 07E5  
                       l1104 07DD                         l1042 065C                         l1034 062F  
                       l1122 05DE                         l1114 07E8                         l1106 07DE  
                       l1044 065D                         l1036 0633                         l1028 060F  
                       l1124 060B                         l1060 0698                         l1052 0675  
                       l1108 07E1                         l1046 0666                         l1038 063C  
                       l1126 060C                         l1118 05D7                         l1070 06BC  
                       l1062 069C                         l1054 0678                         l1048 066C  
                       l1128 060D                         l1080 06EA                         l1072 06C0  
                       l1064 06A4                         l1056 067C                         l1082 06F3  
                       l1074 06C9                         l1066 06AC                         l1058 068D  
                       l1076 06DB                         l1068 06AF                         l1084 06F9  
                       l1092 0712                         l1086 06FE                         l1078 06E9  
                       l1094 076B                         l1088 0709                         l1096 0774  
                       l1352 05A3                         l1098 07CD                         l1354 05C7  
                       l1356 05CD                         STR_1 000F                         _BRGH 04C2  
                       _CREN 00C4                         _PEIE 005E                         _RCIF 0065  
                       _SPEN 00C7                         _TRMT 04C1                         _TXEN 04C5  
                       _SYNC 04C4                         _main 05A3                         btemp 007E  
                       start 0000                   _GetTempCmd 0047             ?_I2C_Master_Init 0020  
            __end_of___aldiv 0712                        ?_main 0070              __end_of___lldiv 0675  
                      _RCREG 001A                        _SPBRG 0099                        _SSPIE 0463  
                      _SSPIF 0063                        _TXREG 0019              _GetRHumidityCmd 003F  
                      fpbase 0008                        pclath 000A                        status 0003  
                      wtemp0 007E                  ?_USART_Init 0026              __initialization 07EC  
               __end_of_main 05D7                       ??_main 007E                _AHT10_address 0045  
                     _SSPADD 0093                       _TRISC3 043B                       _TRISC4 043C  
                     _TRISC6 043E                       _TRISC7 043F                       _SSPCON 0014  
                     _SSPBUF 0013             __end_of__fptable 0009                    ??___aldiv 0078  
                  ??___lldiv 0078                       fptable 0003                       fptotal 0002  
        __size_of_USART_Init 00DA      __end_of__initialization 07FC               __pcstackCOMMON 0070  
               __pidataBANK0 0561                 Write_USART@a 0070                   __pbssBANK0 0047  
                 __pmaintext 05A3                ??_Write_USART 0070   __end_of_Write_USART_String 05A3  
                    _SSPCON2 0091                      _SSPSTAT 0094                   __stringtab 0009  
            _eSensorResetCmd 0046                 ??_USART_Init 002A                      ___aldiv 0675  
                    ___lldiv 060F                      __ptext1 0585                      __ptext2 0555  
                    __ptext3 0712                      __ptext4 0675                      __ptext5 05D7  
                    __ptext6 060F          __end_of_Write_USART 0561           fp__aht_GetHumidity 0000  
           ___aldiv@dividend 0074     __size_of_I2C_Master_Init 0038           __end_of_USART_Init 07EC  
       end_of_initialization 07FC              ___lldiv@divisor 0070              ___lldiv@counter 007D  
          _eSensorMeasureCmd 0036             ___aldiv@quotient 0022             I2C_Master_Init@c 0020  
        _eSensorCalibrateCmd 003C                    _TRISCbits 0087        fp__aht_GetTemperature 0000  
                _Write_USART 0555                  USART_Init@x 0079            _AHT10Address_High 0041  
        start_initialization 07EC            ??_I2C_Master_Init 0024                   init_fetch0 0572  
                __pdataBANK0 0036                    ___latbits 0002                __pcstackBANK0 0020  
          __size_of__fptable 0006           _Write_USART_String 0585           _aht_GetTemperature 0000  
                  __pfunctab 0003          ?_Write_USART_String 0070                     ?___aldiv 0070  
                   ?___lldiv 0070                    __pstrings 0009         ??_Write_USART_String 0071  
            ___aldiv@divisor 0070              ___aldiv@counter 0020                  __stringbase 000E  
         USART_Init@baudrate 0026             _eSensorNormalCmd 0039             _AHT10Address_Low 0043  
               ?_Write_USART 0070             __size_of___aldiv 009D             __size_of___lldiv 0066  
         __end_of__stringtab 000F              _aht_GetHumidity 0000                     __fptable 0003  
            _I2C_Master_Init 05D7                __size_of_main 0034          Write_USART_String@a 0073  
        Write_USART_String@i 0072                     init_ram0 0576             ___lldiv@dividend 0074  
                  stringcode 0009      __end_of_I2C_Master_Init 060F             ___lldiv@quotient 0079  
                   stringdir 0009                     stringtab 0009                 ___aldiv@sign 0021  
                _SSPCON2bits 0091                   _USART_Init 0712  
