

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 09:14:41 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    61                           	psect	text5_split_1,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 2.20
    65                           ; Generated 12/02/2020 GMT
    66                           ; 
    67                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F887 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0008                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  000E                     	;# 
   114  000F                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001B                     	;# 
   128  001B                     	;# 
   129  001C                     	;# 
   130  001D                     	;# 
   131  001E                     	;# 
   132  001F                     	;# 
   133  0081                     	;# 
   134  0085                     	;# 
   135  0086                     	;# 
   136  0087                     	;# 
   137  0088                     	;# 
   138  0089                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  008F                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0093                     	;# 
   148  0093                     	;# 
   149  0094                     	;# 
   150  0095                     	;# 
   151  0096                     	;# 
   152  0097                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009A                     	;# 
   156  009B                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  0105                     	;# 
   162  0107                     	;# 
   163  0108                     	;# 
   164  0109                     	;# 
   165  010C                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  0185                     	;# 
   171  0187                     	;# 
   172  0188                     	;# 
   173  0189                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  0000                     	;# 
   177  0001                     	;# 
   178  0002                     	;# 
   179  0003                     	;# 
   180  0004                     	;# 
   181  0005                     	;# 
   182  0006                     	;# 
   183  0007                     	;# 
   184  0008                     	;# 
   185  0009                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001D                     	;# 
   209  001E                     	;# 
   210  001F                     	;# 
   211  0081                     	;# 
   212  0085                     	;# 
   213  0086                     	;# 
   214  0087                     	;# 
   215  0088                     	;# 
   216  0089                     	;# 
   217  008C                     	;# 
   218  008D                     	;# 
   219  008E                     	;# 
   220  008F                     	;# 
   221  0090                     	;# 
   222  0091                     	;# 
   223  0092                     	;# 
   224  0093                     	;# 
   225  0093                     	;# 
   226  0093                     	;# 
   227  0094                     	;# 
   228  0095                     	;# 
   229  0096                     	;# 
   230  0097                     	;# 
   231  0098                     	;# 
   232  0099                     	;# 
   233  009A                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  009F                     	;# 
   239  0105                     	;# 
   240  0107                     	;# 
   241  0108                     	;# 
   242  0109                     	;# 
   243  010C                     	;# 
   244  010C                     	;# 
   245  010D                     	;# 
   246  010E                     	;# 
   247  010F                     	;# 
   248  0185                     	;# 
   249  0187                     	;# 
   250  0188                     	;# 
   251  0189                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  000E                     	;# 
   270  000F                     	;# 
   271  0010                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001D                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  0081                     	;# 
   290  0085                     	;# 
   291  0086                     	;# 
   292  0087                     	;# 
   293  0088                     	;# 
   294  0089                     	;# 
   295  008C                     	;# 
   296  008D                     	;# 
   297  008E                     	;# 
   298  008F                     	;# 
   299  0090                     	;# 
   300  0091                     	;# 
   301  0092                     	;# 
   302  0093                     	;# 
   303  0093                     	;# 
   304  0093                     	;# 
   305  0094                     	;# 
   306  0095                     	;# 
   307  0096                     	;# 
   308  0097                     	;# 
   309  0098                     	;# 
   310  0099                     	;# 
   311  009A                     	;# 
   312  009B                     	;# 
   313  009C                     	;# 
   314  009D                     	;# 
   315  009E                     	;# 
   316  009F                     	;# 
   317  0105                     	;# 
   318  0107                     	;# 
   319  0108                     	;# 
   320  0109                     	;# 
   321  010C                     	;# 
   322  010C                     	;# 
   323  010D                     	;# 
   324  010E                     	;# 
   325  010F                     	;# 
   326  0185                     	;# 
   327  0187                     	;# 
   328  0188                     	;# 
   329  0189                     	;# 
   330  018C                     	;# 
   331  018D                     	;# 
   332  0000                     	;# 
   333  0001                     	;# 
   334  0002                     	;# 
   335  0003                     	;# 
   336  0004                     	;# 
   337  0005                     	;# 
   338  0006                     	;# 
   339  0007                     	;# 
   340  0008                     	;# 
   341  0009                     	;# 
   342  000A                     	;# 
   343  000B                     	;# 
   344  000C                     	;# 
   345  000D                     	;# 
   346  000E                     	;# 
   347  000E                     	;# 
   348  000F                     	;# 
   349  0010                     	;# 
   350  0011                     	;# 
   351  0012                     	;# 
   352  0013                     	;# 
   353  0014                     	;# 
   354  0015                     	;# 
   355  0015                     	;# 
   356  0016                     	;# 
   357  0017                     	;# 
   358  0018                     	;# 
   359  0019                     	;# 
   360  001A                     	;# 
   361  001B                     	;# 
   362  001B                     	;# 
   363  001C                     	;# 
   364  001D                     	;# 
   365  001E                     	;# 
   366  001F                     	;# 
   367  0081                     	;# 
   368  0085                     	;# 
   369  0086                     	;# 
   370  0087                     	;# 
   371  0088                     	;# 
   372  0089                     	;# 
   373  008C                     	;# 
   374  008D                     	;# 
   375  008E                     	;# 
   376  008F                     	;# 
   377  0090                     	;# 
   378  0091                     	;# 
   379  0092                     	;# 
   380  0093                     	;# 
   381  0093                     	;# 
   382  0093                     	;# 
   383  0094                     	;# 
   384  0095                     	;# 
   385  0096                     	;# 
   386  0097                     	;# 
   387  0098                     	;# 
   388  0099                     	;# 
   389  009A                     	;# 
   390  009B                     	;# 
   391  009C                     	;# 
   392  009D                     	;# 
   393  009E                     	;# 
   394  009F                     	;# 
   395  0105                     	;# 
   396  0107                     	;# 
   397  0108                     	;# 
   398  0109                     	;# 
   399  010C                     	;# 
   400  010C                     	;# 
   401  010D                     	;# 
   402  010E                     	;# 
   403  010F                     	;# 
   404  0185                     	;# 
   405  0187                     	;# 
   406  0188                     	;# 
   407  0189                     	;# 
   408  018C                     	;# 
   409  018D                     	;# 
   410  0000                     	;# 
   411  0001                     	;# 
   412  0002                     	;# 
   413  0003                     	;# 
   414  0004                     	;# 
   415  0005                     	;# 
   416  0006                     	;# 
   417  0007                     	;# 
   418  0008                     	;# 
   419  0009                     	;# 
   420  000A                     	;# 
   421  000B                     	;# 
   422  000C                     	;# 
   423  000D                     	;# 
   424  000E                     	;# 
   425  000E                     	;# 
   426  000F                     	;# 
   427  0010                     	;# 
   428  0011                     	;# 
   429  0012                     	;# 
   430  0013                     	;# 
   431  0014                     	;# 
   432  0015                     	;# 
   433  0015                     	;# 
   434  0016                     	;# 
   435  0017                     	;# 
   436  0018                     	;# 
   437  0019                     	;# 
   438  001A                     	;# 
   439  001B                     	;# 
   440  001B                     	;# 
   441  001C                     	;# 
   442  001D                     	;# 
   443  001E                     	;# 
   444  001F                     	;# 
   445  0081                     	;# 
   446  0085                     	;# 
   447  0086                     	;# 
   448  0087                     	;# 
   449  0088                     	;# 
   450  0089                     	;# 
   451  008C                     	;# 
   452  008D                     	;# 
   453  008E                     	;# 
   454  008F                     	;# 
   455  0090                     	;# 
   456  0091                     	;# 
   457  0092                     	;# 
   458  0093                     	;# 
   459  0093                     	;# 
   460  0093                     	;# 
   461  0094                     	;# 
   462  0095                     	;# 
   463  0096                     	;# 
   464  0097                     	;# 
   465  0098                     	;# 
   466  0099                     	;# 
   467  009A                     	;# 
   468  009B                     	;# 
   469  009C                     	;# 
   470  009D                     	;# 
   471  009E                     	;# 
   472  009F                     	;# 
   473  0105                     	;# 
   474  0107                     	;# 
   475  0108                     	;# 
   476  0109                     	;# 
   477  010C                     	;# 
   478  010C                     	;# 
   479  010D                     	;# 
   480  010E                     	;# 
   481  010F                     	;# 
   482  0185                     	;# 
   483  0187                     	;# 
   484  0188                     	;# 
   485  0189                     	;# 
   486  018C                     	;# 
   487  018D                     	;# 
   488                           
   489                           	psect	idataCOMMON
   490  0801                     __pidataCOMMON:
   491                           
   492                           ;initializer for _AHT10_address
   493  0801  3438               	retlw	56
   494                           
   495                           ;initializer for _eSensorResetCmd
   496  0802  34BA               	retlw	186
   497                           
   498                           	psect	idataBANK0
   499  109A                     __pidataBANK0:
   500                           
   501                           ;initializer for _AHT10Address_Low
   502  109A  3438               	retlw	56
   503  109B  3400               	retlw	0
   504                           
   505                           	psect	idataBANK1
   506  0803                     __pidataBANK1:
   507                           
   508                           ;initializer for _eSensorMeasureCmd
   509  0803  34AC               	retlw	172
   510  0804  3433               	retlw	51
   511  0805  3400               	retlw	0
   512                           
   513                           ;initializer for _eSensorNormalCmd
   514  0806  34A8               	retlw	168
   515  0807  3400               	retlw	0
   516  0808  3400               	retlw	0
   517                           
   518                           ;initializer for _eSensorCalibrateCmd
   519  0809  34E1               	retlw	225
   520  080A  3408               	retlw	8
   521  080B  3400               	retlw	0
   522                           
   523                           ;initializer for _GetRHumidityCmd
   524  080C  3401               	retlw	1
   525  080D  3400               	retlw	0
   526                           
   527                           ;initializer for _AHT10Address_High
   528  080E  3439               	retlw	57
   529  080F  3400               	retlw	0
   530                           
   531                           	psect	strings
   532  1000                     __pstrings:
   533  1000                     stringtab:
   534  1000                     __stringtab:
   535  1000                     stringcode:	
   536                           ;	String table - string pointers are 1 byte each
   537                           
   538  1000                     stringdir:
   539  1000  3010               	movlw	high stringdir
   540  1001  008A               	movwf	10
   541  1002  0804               	movf	4,w
   542  1003  0A84               	incf	4,f
   543  1004  0782               	addwf	2,f
   544  1005                     __stringbase:
   545  1005  3400               	retlw	0
   546  1006                     __end_of__stringtab:
   547  1006                     __powers_:
   548  1006  3400               	retlw	0
   549  1007  3480               	retlw	128
   550  1008  343F               	retlw	63
   551  1009  3400               	retlw	0
   552  100A  3420               	retlw	32
   553  100B  3441               	retlw	65
   554  100C  3400               	retlw	0
   555  100D  34C8               	retlw	200
   556  100E  3442               	retlw	66
   557  100F  3400               	retlw	0
   558  1010  347A               	retlw	122
   559  1011  3444               	retlw	68
   560  1012  3440               	retlw	64
   561  1013  341C               	retlw	28
   562  1014  3446               	retlw	70
   563  1015  3450               	retlw	80
   564  1016  34C3               	retlw	195
   565  1017  3447               	retlw	71
   566  1018  3424               	retlw	36
   567  1019  3474               	retlw	116
   568  101A  3449               	retlw	73
   569  101B  3497               	retlw	151
   570  101C  3418               	retlw	24
   571  101D  344B               	retlw	75
   572  101E  34BC               	retlw	188
   573  101F  34BE               	retlw	190
   574  1020  344C               	retlw	76
   575  1021  346B               	retlw	107
   576  1022  346E               	retlw	110
   577  1023  344E               	retlw	78
   578  1024  3403               	retlw	3
   579  1025  3415               	retlw	21
   580  1026  3450               	retlw	80
   581  1027  3479               	retlw	121
   582  1028  34AD               	retlw	173
   583  1029  3460               	retlw	96
   584  102A  34F3               	retlw	243
   585  102B  3449               	retlw	73
   586  102C  3471               	retlw	113
   587  102D                     __end_of__powers_:
   588  102D                     __npowers_:
   589  102D  3400               	retlw	0
   590  102E  3480               	retlw	128
   591  102F  343F               	retlw	63
   592  1030  34CD               	retlw	205
   593  1031  34CC               	retlw	204
   594  1032  343D               	retlw	61
   595  1033  34D7               	retlw	215
   596  1034  3423               	retlw	35
   597  1035  343C               	retlw	60
   598  1036  3412               	retlw	18
   599  1037  3483               	retlw	131
   600  1038  343A               	retlw	58
   601  1039  34B7               	retlw	183
   602  103A  34D1               	retlw	209
   603  103B  3438               	retlw	56
   604  103C  34C6               	retlw	198
   605  103D  3427               	retlw	39
   606  103E  3437               	retlw	55
   607  103F  3438               	retlw	56
   608  1040  3486               	retlw	134
   609  1041  3435               	retlw	53
   610  1042  34C0               	retlw	192
   611  1043  34D6               	retlw	214
   612  1044  3433               	retlw	51
   613  1045  34CC               	retlw	204
   614  1046  342B               	retlw	43
   615  1047  3432               	retlw	50
   616  1048  3470               	retlw	112
   617  1049  3489               	retlw	137
   618  104A  3430               	retlw	48
   619  104B  34E7               	retlw	231
   620  104C  34DB               	retlw	219
   621  104D  342E               	retlw	46
   622  104E  34E5               	retlw	229
   623  104F  343C               	retlw	60
   624  1050  341E               	retlw	30
   625  1051  3442               	retlw	66
   626  1052  34A2               	retlw	162
   627  1053  340D               	retlw	13
   628  1054                     __end_of__npowers_:
   629  1054                     _dpowers:
   630  1054  3401               	retlw	1
   631  1055  3400               	retlw	0
   632  1056  3400               	retlw	0
   633  1057  3400               	retlw	0
   634  1058  340A               	retlw	10
   635  1059  3400               	retlw	0
   636  105A  3400               	retlw	0
   637  105B  3400               	retlw	0
   638  105C  3464               	retlw	100
   639  105D  3400               	retlw	0
   640  105E  3400               	retlw	0
   641  105F  3400               	retlw	0
   642  1060  34E8               	retlw	232
   643  1061  3403               	retlw	3
   644  1062  3400               	retlw	0
   645  1063  3400               	retlw	0
   646  1064  3410               	retlw	16
   647  1065  3427               	retlw	39
   648  1066  3400               	retlw	0
   649  1067  3400               	retlw	0
   650  1068  34A0               	retlw	160
   651  1069  3486               	retlw	134
   652  106A  3401               	retlw	1
   653  106B  3400               	retlw	0
   654  106C  3440               	retlw	64
   655  106D  3442               	retlw	66
   656  106E  340F               	retlw	15
   657  106F  3400               	retlw	0
   658  1070  3480               	retlw	128
   659  1071  3496               	retlw	150
   660  1072  3498               	retlw	152
   661  1073  3400               	retlw	0
   662  1074  3400               	retlw	0
   663  1075  34E1               	retlw	225
   664  1076  34F5               	retlw	245
   665  1077  3405               	retlw	5
   666  1078  3400               	retlw	0
   667  1079  34CA               	retlw	202
   668  107A  349A               	retlw	154
   669  107B  343B               	retlw	59
   670  107C                     __end_of_dpowers:
   671  0019                     _TXREG	set	25
   672  001A                     _RCREG	set	26
   673  0018                     _RCSTAbits	set	24
   674  0013                     _SSPBUF	set	19
   675  0014                     _SSPCON	set	20
   676  000C                     _PIR1bits	set	12
   677  000B                     _INTCONbits	set	11
   678  0006                     _PORTB	set	6
   679  0063                     _SSPIF	set	99
   680  005E                     _PEIE	set	94
   681  005F                     _GIE	set	95
   682  0065                     _RCIF	set	101
   683  0099                     _SPBRG	set	153
   684  0098                     _TXSTAbits	set	152
   685  0091                     _SSPCON2bits	set	145
   686  0087                     _TRISCbits	set	135
   687  0094                     _SSPSTAT	set	148
   688  0093                     _SSPADD	set	147
   689  0091                     _SSPCON2	set	145
   690  008C                     _PIE1bits	set	140
   691  0086                     _TRISB	set	134
   692  0463                     _SSPIE	set	1123
   693  043C                     _TRISC4	set	1084
   694  043B                     _TRISC3	set	1083
   695  0189                     _ANSELH	set	393
   696  0188                     _ANSEL	set	392
   697  107C                     STR_3:
   698  107C  3425               	retlw	37	;'%'
   699  107D  3432               	retlw	50	;'2'
   700  107E  342E               	retlw	46	;'.'
   701  107F  3431               	retlw	49	;'1'
   702  1080  3466               	retlw	102	;'f'
   703  1081  3420               	retlw	32	;' '
   704  1082  3420               	retlw	32	;' '
   705  1083  3420               	retlw	32	;' '
   706  1084  3425               	retlw	37	;'%'
   707  1085  3432               	retlw	50	;'2'
   708  1086  342E               	retlw	46	;'.'
   709  1087  3431               	retlw	49	;'1'
   710  1088  3466               	retlw	102	;'f'
   711  1089  3420               	retlw	32	;' '
   712  108A  3400               	retlw	0
   713  108B                     STR_2:
   714  108B  3454               	retlw	84	;'T'
   715  108C  3431               	retlw	49	;'1'
   716  108D  3420               	retlw	32	;' '
   717  108E  3420               	retlw	32	;' '
   718  108F  3420               	retlw	32	;' '
   719  1090  3448               	retlw	72	;'H'
   720  1091  3431               	retlw	49	;'1'
   721  1092  3420               	retlw	32	;' '
   722  1093  3420               	retlw	32	;' '
   723  1094  3420               	retlw	32	;' '
   724  1095  340A               	retlw	10
   725  1096  3400               	retlw	0
   726  1097                     STR_1:
   727  1097  3461               	retlw	97	;'a'
   728  1098  3400               	retlw	0
   729                           
   730                           	psect	cinit
   731  000F                     start_initialization:	
   732                           ; #config settings
   733                           
   734  000F                     __initialization:
   735                           
   736                           ; Initialize objects allocated to BANK1
   737  000F  1383               	bcf	3,7	;select IRP bank0
   738  0010  30EA               	movlw	low (__pdataBANK1+13)
   739  0011  00FD               	movwf	btemp+-1
   740  0012  3008               	movlw	high __pidataBANK1
   741  0013  00FE               	movwf	btemp
   742  0014  3003               	movlw	low __pidataBANK1
   743  0015  00FF               	movwf	btemp+1
   744  0016  30DD               	movlw	low __pdataBANK1
   745  0017  0084               	movwf	4
   746  0018  160A  158A  24BE  120A  118A  	fcall	init_ram0
   747                           
   748                           ; Initialize objects allocated to BANK0
   749  001D  160A  118A  209A  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   750  0022  00EE               	movwf	__pdataBANK0& (0+127)
   751  0023  160A  118A  209B  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   752  0028  00EF               	movwf	(__pdataBANK0+1)& (0+127)
   753                           
   754                           ; Initialize objects allocated to COMMON
   755  0029  120A  158A  2001  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   756  002E  00F9               	movwf	__pdataCOMMON& (0+127)
   757  002F  120A  158A  2002  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   758  0034  00FA               	movwf	(__pdataCOMMON+1)& (0+127)
   759                           
   760                           ; Clear objects allocated to BANK1
   761  0035  30C1               	movlw	low __pbssBANK1
   762  0036  0084               	movwf	4
   763  0037  30DD               	movlw	low (__pbssBANK1+28)
   764  0038  160A  158A  2474  120A  118A  	fcall	clear_ram0
   765                           
   766                           ; Clear objects allocated to COMMON
   767  003D  01F6               	clrf	__pbssCOMMON& (0+127)
   768  003E  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   769  003F  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   770  0040                     end_of_initialization:	
   771                           ;End of C runtime variable initialization code
   772                           
   773  0040                     __end_of__initialization:
   774  0040  0183               	clrf	3
   775  0041  120A  118A  2F4C   	ljmp	_main	;jump to C main() function
   776                           
   777                           	psect	bssCOMMON
   778  0076                     __pbssCOMMON:
   779  0076                     _humedad:
   780  0076                     	ds	1
   781  0077                     _temperatura:
   782  0077                     	ds	1
   783  0078                     _LecturaUSART:
   784  0078                     	ds	1
   785                           
   786                           	psect	dataCOMMON
   787  0079                     __pdataCOMMON:
   788  0079                     _AHT10_address:
   789  0079                     	ds	1
   790  007A                     _eSensorResetCmd:
   791  007A                     	ds	1
   792                           
   793                           	psect	dataBANK0
   794  006E                     __pdataBANK0:
   795  006E                     _AHT10Address_Low:
   796  006E                     	ds	2
   797                           
   798                           	psect	bssBANK1
   799  00C1                     __pbssBANK1:
   800  00C1                     _humeda1:
   801  00C1                     	ds	3
   802  00C4                     _tempera1:
   803  00C4                     	ds	3
   804  00C7                     _GetTempCmd:
   805  00C7                     	ds	2
   806  00C9                     _datos:
   807  00C9                     	ds	20
   808                           
   809                           	psect	dataBANK1
   810  00DD                     __pdataBANK1:
   811  00DD                     _eSensorMeasureCmd:
   812  00DD                     	ds	3
   813  00E0                     _eSensorNormalCmd:
   814  00E0                     	ds	3
   815  00E3                     _eSensorCalibrateCmd:
   816  00E3                     	ds	3
   817  00E6                     _GetRHumidityCmd:
   818  00E6                     	ds	2
   819  00E8                     _AHT10Address_High:
   820  00E8                     	ds	2
   821                           
   822                           	psect	inittext
   823  1CBA                     init_fetch0:	
   824                           ;	Called with low address in FSR and high address in W
   825                           
   826  1CBA  087E               	movf	btemp,w
   827  1CBB  008A               	movwf	10
   828  1CBC  087F               	movf	btemp+1,w
   829  1CBD  0082               	movwf	2
   830  1CBE                     init_ram0:	
   831                           ;Called with:
   832                           ;	high address of idata address in btemp 
   833                           ;	low address of idata address in btemp+1 
   834                           ;	low address of data in FSR
   835                           ;	high address + 1 of data in btemp-1
   836                           
   837  1CBE  160A  158A  24BA  160A  158A  	fcall	init_fetch0
   838  1CC3  0080               	movwf	0
   839  1CC4  0A84               	incf	4,f
   840  1CC5  0804               	movf	4,w
   841  1CC6  067D               	xorwf	btemp+-1,w
   842  1CC7  1903               	btfsc	3,2
   843  1CC8  3400               	retlw	0
   844  1CC9  0AFF               	incf	btemp+1,f
   845  1CCA  1903               	btfsc	3,2
   846  1CCB  0AFE               	incf	btemp,f
   847  1CCC  2CBE               	goto	init_ram0
   848                           
   849                           	psect	clrtext
   850  1C74                     clear_ram0:	
   851                           ;	Called with FSR containing the base address, and
   852                           ;	W with the last address+1
   853                           
   854  1C74  0064               	clrwdt	;clear the watchdog before getting into this loop
   855  1C75                     clrloop0:
   856  1C75  0180               	clrf	0	;clear RAM location pointed to by FSR
   857  1C76  0A84               	incf	4,f	;increment pointer
   858  1C77  0604               	xorwf	4,w	;XOR with final address
   859  1C78  1903               	btfsc	3,2	;have we reached the end yet?
   860  1C79  3400               	retlw	0	;all done for this memory range, return
   861  1C7A  0604               	xorwf	4,w	;XOR again to restore value
   862  1C7B  2C75               	goto	clrloop0	;do the next byte
   863                           
   864                           	psect	cstackBANK1
   865  00A0                     __pcstackBANK1:
   866  00A0                     ??_sprintf:
   867                           
   868                           ; 1 bytes @ 0x0
   869  00A0                     	ds	6
   870  00A6                     _sprintf$1052:
   871                           
   872                           ; 3 bytes @ 0x6
   873  00A6                     	ds	3
   874  00A9                     sprintf@ap:
   875                           
   876                           ; 1 bytes @ 0x9
   877  00A9                     	ds	1
   878  00AA                     sprintf@val:
   879                           
   880                           ; 4 bytes @ 0xA
   881  00AA                     	ds	4
   882  00AE                     sprintf@flag:
   883                           
   884                           ; 2 bytes @ 0xE
   885  00AE                     	ds	2
   886  00B0                     sprintf@width:
   887                           
   888                           ; 2 bytes @ 0x10
   889  00B0                     	ds	2
   890  00B2                     sprintf@tmpval:
   891                           
   892                           ; 4 bytes @ 0x12
   893  00B2                     	ds	4
   894  00B6                     sprintf@eexp:
   895                           
   896                           ; 2 bytes @ 0x16
   897  00B6                     	ds	2
   898  00B8                     sprintf@sp:
   899                           
   900                           ; 1 bytes @ 0x18
   901  00B8                     	ds	1
   902  00B9                     sprintf@fval:
   903                           
   904                           ; 3 bytes @ 0x19
   905  00B9                     	ds	3
   906  00BC                     sprintf@prec:
   907                           
   908                           ; 2 bytes @ 0x1C
   909  00BC                     	ds	2
   910  00BE                     sprintf@c:
   911                           
   912                           ; 1 bytes @ 0x1E
   913  00BE                     	ds	1
   914  00BF                     ??_main:
   915                           
   916                           ; 1 bytes @ 0x1F
   917  00BF                     	ds	2
   918                           
   919                           	psect	cstackCOMMON
   920  0070                     __pcstackCOMMON:
   921  0070                     ?_isdigit:
   922  0070                     ?_uartRC_Read:	
   923                           ; 1 bit 
   924                           
   925  0070                     ??_uartRC_Read:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0070                     ?_uartTX_Write:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0070                     ?_uartTX_Write_Str:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0070                     ?_configIO:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0070                     ?_ISR:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0070                     ?_main:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0070                     ?_I2C_Master_Wait:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0070                     ?_I2C_Master_Start:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0070                     ?_I2C_Master_Stop:	
   950                           ; 1 bytes @ 0x0
   951                           
   952                           
   953                           ; 1 bytes @ 0x0
   954  0070                     	ds	3
   955  0073                     ??_ISR:
   956                           
   957                           ; 1 bytes @ 0x3
   958  0073                     	ds	3
   959                           
   960                           	psect	cstackBANK0
   961  0020                     __pcstackBANK0:
   962  0020                     ?___ftge:
   963  0020                     ??_uartTX_Write:	
   964                           ; 1 bit 
   965                           
   966  0020                     ??_isdigit:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0020                     ??_configIO:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0020                     ??_I2C_Master_Wait:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0020                     ??_I2C_Master_Start:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0020                     ??_I2C_Master_Stop:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0020                     ?_I2C_Master_Write:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0020                     ?_I2C_Master_Read:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0020                     ?___wmul:	
   988                           ; 2 bytes @ 0x0
   989                           
   990  0020                     ?___awmod:	
   991                           ; 2 bytes @ 0x0
   992                           
   993  0020                     ?___lwmod:	
   994                           ; 2 bytes @ 0x0
   995                           
   996  0020                     ?___ftpack:	
   997                           ; 2 bytes @ 0x0
   998                           
   999  0020                     ?___ftneg:	
  1000                           ; 3 bytes @ 0x0
  1001                           
  1002  0020                     ?__tdiv_to_l_:	
  1003                           ; 3 bytes @ 0x0
  1004                           
  1005  0020                     ?__div_to_l_:	
  1006                           ; 4 bytes @ 0x0
  1007                           
  1008  0020                     ?___lldiv:	
  1009                           ; 4 bytes @ 0x0
  1010                           
  1011  0020                     ?___aldiv:	
  1012                           ; 4 bytes @ 0x0
  1013                           
  1014  0020                     ?___llmod:	
  1015                           ; 4 bytes @ 0x0
  1016                           
  1017  0020                     _isdigit$841:	
  1018                           ; 4 bytes @ 0x0
  1019                           
  1020  0020                     I2C_Master_Write@d:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0020                     I2C_Master_Read@a:	
  1024                           ; 2 bytes @ 0x0
  1025                           
  1026  0020                     ___wmul@multiplier:	
  1027                           ; 2 bytes @ 0x0
  1028                           
  1029  0020                     ___awmod@divisor:	
  1030                           ; 2 bytes @ 0x0
  1031                           
  1032  0020                     ___lwmod@divisor:	
  1033                           ; 2 bytes @ 0x0
  1034                           
  1035  0020                     __div_to_l_@f1:	
  1036                           ; 2 bytes @ 0x0
  1037                           
  1038  0020                     ___ftpack@arg:	
  1039                           ; 3 bytes @ 0x0
  1040                           
  1041  0020                     __tdiv_to_l_@f1:	
  1042                           ; 3 bytes @ 0x0
  1043                           
  1044  0020                     ___ftge@ff1:	
  1045                           ; 3 bytes @ 0x0
  1046                           
  1047  0020                     ___ftneg@f1:	
  1048                           ; 3 bytes @ 0x0
  1049                           
  1050  0020                     ___lldiv@divisor:	
  1051                           ; 3 bytes @ 0x0
  1052                           
  1053  0020                     ___aldiv@divisor:	
  1054                           ; 4 bytes @ 0x0
  1055                           
  1056  0020                     ___llmod@divisor:	
  1057                           ; 4 bytes @ 0x0
  1058                           
  1059                           
  1060                           ; 4 bytes @ 0x0
  1061  0020                     	ds	1
  1062  0021                     uartTX_Write@dato:
  1063  0021                     isdigit@c:	
  1064                           ; 1 bytes @ 0x1
  1065                           
  1066                           
  1067                           ; 1 bytes @ 0x1
  1068  0021                     	ds	1
  1069  0022                     ??_uartTX_Write_Str:
  1070  0022                     ??_I2C_Master_Write:	
  1071                           ; 1 bytes @ 0x2
  1072                           
  1073  0022                     ??_I2C_Master_Read:	
  1074                           ; 1 bytes @ 0x2
  1075                           
  1076  0022                     uartTX_Write_Str@string:	
  1077                           ; 1 bytes @ 0x2
  1078                           
  1079  0022                     ___wmul@multiplicand:	
  1080                           ; 1 bytes @ 0x2
  1081                           
  1082  0022                     ___awmod@dividend:	
  1083                           ; 2 bytes @ 0x2
  1084                           
  1085  0022                     ___lwmod@dividend:	
  1086                           ; 2 bytes @ 0x2
  1087                           
  1088                           
  1089                           ; 2 bytes @ 0x2
  1090  0022                     	ds	1
  1091  0023                     ??___ftneg:
  1092  0023                     ___ftpack@exp:	
  1093                           ; 1 bytes @ 0x3
  1094                           
  1095  0023                     uartTX_Write_Str@n:	
  1096                           ; 1 bytes @ 0x3
  1097                           
  1098  0023                     __div_to_l_@f2:	
  1099                           ; 2 bytes @ 0x3
  1100                           
  1101  0023                     __tdiv_to_l_@f2:	
  1102                           ; 3 bytes @ 0x3
  1103                           
  1104  0023                     ___ftge@ff2:	
  1105                           ; 3 bytes @ 0x3
  1106                           
  1107                           
  1108                           ; 3 bytes @ 0x3
  1109  0023                     	ds	1
  1110  0024                     ??___wmul:
  1111  0024                     ??___awmod:	
  1112                           ; 1 bytes @ 0x4
  1113                           
  1114  0024                     ??___lwmod:	
  1115                           ; 1 bytes @ 0x4
  1116                           
  1117  0024                     ___ftpack@sign:	
  1118                           ; 1 bytes @ 0x4
  1119                           
  1120  0024                     I2C_Master_Read@temp:	
  1121                           ; 1 bytes @ 0x4
  1122                           
  1123  0024                     ___wmul@product:	
  1124                           ; 2 bytes @ 0x4
  1125                           
  1126  0024                     ___lldiv@dividend:	
  1127                           ; 2 bytes @ 0x4
  1128                           
  1129  0024                     ___aldiv@dividend:	
  1130                           ; 4 bytes @ 0x4
  1131                           
  1132  0024                     ___llmod@dividend:	
  1133                           ; 4 bytes @ 0x4
  1134                           
  1135                           
  1136                           ; 4 bytes @ 0x4
  1137  0024                     	ds	1
  1138  0025                     ??___ftpack:
  1139  0025                     ___awmod@counter:	
  1140                           ; 1 bytes @ 0x5
  1141                           
  1142  0025                     ___lwmod@counter:	
  1143                           ; 1 bytes @ 0x5
  1144                           
  1145                           
  1146                           ; 1 bytes @ 0x5
  1147  0025                     	ds	1
  1148  0026                     ??__tdiv_to_l_:
  1149  0026                     ??__div_to_l_:	
  1150                           ; 1 bytes @ 0x6
  1151                           
  1152  0026                     ??___ftge:	
  1153                           ; 1 bytes @ 0x6
  1154                           
  1155  0026                     ?___lwdiv:	
  1156                           ; 1 bytes @ 0x6
  1157                           
  1158  0026                     ?_aht_readSensor:	
  1159                           ; 2 bytes @ 0x6
  1160                           
  1161  0026                     ___awmod@sign:	
  1162                           ; 4 bytes @ 0x6
  1163                           
  1164  0026                     aht_readSensor@GetDataCmd:	
  1165                           ; 1 bytes @ 0x6
  1166                           
  1167  0026                     ___lwdiv@divisor:	
  1168                           ; 2 bytes @ 0x6
  1169                           
  1170                           
  1171                           ; 2 bytes @ 0x6
  1172  0026                     	ds	1
  1173  0027                     ?___awdiv:
  1174  0027                     ___awdiv@divisor:	
  1175                           ; 2 bytes @ 0x7
  1176                           
  1177                           
  1178                           ; 2 bytes @ 0x7
  1179  0027                     	ds	1
  1180  0028                     ??___lldiv:
  1181  0028                     ??___aldiv:	
  1182                           ; 1 bytes @ 0x8
  1183                           
  1184  0028                     ??___llmod:	
  1185                           ; 1 bytes @ 0x8
  1186                           
  1187  0028                     ___lwdiv@dividend:	
  1188                           ; 1 bytes @ 0x8
  1189                           
  1190                           
  1191                           ; 2 bytes @ 0x8
  1192  0028                     	ds	1
  1193  0029                     ___aldiv@counter:
  1194  0029                     ___llmod@counter:	
  1195                           ; 1 bytes @ 0x9
  1196                           
  1197  0029                     ___awdiv@dividend:	
  1198                           ; 1 bytes @ 0x9
  1199                           
  1200  0029                     ___lldiv@quotient:	
  1201                           ; 2 bytes @ 0x9
  1202                           
  1203                           
  1204                           ; 4 bytes @ 0x9
  1205  0029                     	ds	1
  1206  002A                     ??_aht_readSensor:
  1207  002A                     ??___lwdiv:	
  1208                           ; 1 bytes @ 0xA
  1209                           
  1210  002A                     ___aldiv@sign:	
  1211                           ; 1 bytes @ 0xA
  1212                           
  1213  002A                     __tdiv_to_l_@quot:	
  1214                           ; 1 bytes @ 0xA
  1215                           
  1216                           
  1217                           ; 4 bytes @ 0xA
  1218  002A                     	ds	1
  1219  002B                     ??___awdiv:
  1220  002B                     ___lwdiv@quotient:	
  1221                           ; 1 bytes @ 0xB
  1222                           
  1223  002B                     ___aldiv@quotient:	
  1224                           ; 2 bytes @ 0xB
  1225                           
  1226                           
  1227                           ; 4 bytes @ 0xB
  1228  002B                     	ds	1
  1229  002C                     ___awdiv@counter:
  1230                           
  1231                           ; 1 bytes @ 0xC
  1232  002C                     	ds	1
  1233  002D                     ___lldiv@counter:
  1234  002D                     ___awdiv@sign:	
  1235                           ; 1 bytes @ 0xD
  1236                           
  1237  002D                     ___lwdiv@counter:	
  1238                           ; 1 bytes @ 0xD
  1239                           
  1240                           
  1241                           ; 1 bytes @ 0xD
  1242  002D                     	ds	1
  1243  002E                     ?_I2C_Master_Init:
  1244  002E                     __tdiv_to_l_@cntr:	
  1245                           ; 1 bytes @ 0xE
  1246                           
  1247  002E                     ___awdiv@quotient:	
  1248                           ; 1 bytes @ 0xE
  1249                           
  1250  002E                     I2C_Master_Init@c:	
  1251                           ; 2 bytes @ 0xE
  1252                           
  1253  002E                     __div_to_l_@quot:	
  1254                           ; 4 bytes @ 0xE
  1255                           
  1256                           
  1257                           ; 4 bytes @ 0xE
  1258  002E                     	ds	1
  1259  002F                     ?_uartRC_init:
  1260  002F                     __tdiv_to_l_@exp1:	
  1261                           ; 1 bytes @ 0xF
  1262                           
  1263  002F                     uartRC_init@baudrate:	
  1264                           ; 1 bytes @ 0xF
  1265                           
  1266                           
  1267                           ; 2 bytes @ 0xF
  1268  002F                     	ds	1
  1269  0030                     ?___bmul:
  1270  0030                     ___bmul@multiplicand:	
  1271                           ; 1 bytes @ 0x10
  1272                           
  1273                           
  1274                           ; 1 bytes @ 0x10
  1275  0030                     	ds	1
  1276  0031                     ??_uartRC_init:
  1277  0031                     ??___bmul:	
  1278                           ; 1 bytes @ 0x11
  1279                           
  1280                           
  1281                           ; 1 bytes @ 0x11
  1282  0031                     	ds	1
  1283  0032                     ??_I2C_Master_Init:
  1284  0032                     ___bmul@product:	
  1285                           ; 1 bytes @ 0x12
  1286                           
  1287  0032                     __div_to_l_@cntr:	
  1288                           ; 1 bytes @ 0x12
  1289                           
  1290                           
  1291                           ; 1 bytes @ 0x12
  1292  0032                     	ds	1
  1293  0033                     ___bmul@multiplier:
  1294  0033                     __div_to_l_@exp1:	
  1295                           ; 1 bytes @ 0x13
  1296                           
  1297                           
  1298                           ; 1 bytes @ 0x13
  1299  0033                     	ds	1
  1300  0034                     ?___ftmul:
  1301  0034                     ___ftmul@f1:	
  1302                           ; 3 bytes @ 0x14
  1303                           
  1304                           
  1305                           ; 3 bytes @ 0x14
  1306  0034                     	ds	2
  1307  0036                     aht_readSensor@temp:
  1308                           
  1309                           ; 24 bytes @ 0x16
  1310  0036                     	ds	1
  1311  0037                     ___ftmul@f2:
  1312                           
  1313                           ; 3 bytes @ 0x17
  1314  0037                     	ds	3
  1315  003A                     ??___ftmul:
  1316                           
  1317                           ; 1 bytes @ 0x1A
  1318  003A                     	ds	3
  1319  003D                     uartRC_init@n:
  1320                           
  1321                           ; 2 bytes @ 0x1D
  1322  003D                     	ds	1
  1323  003E                     ___ftmul@exp:
  1324                           
  1325                           ; 1 bytes @ 0x1E
  1326  003E                     	ds	1
  1327  003F                     ___ftmul@f3_as_product:
  1328                           
  1329                           ; 3 bytes @ 0x1F
  1330  003F                     	ds	3
  1331  0042                     ___ftmul@cntr:
  1332                           
  1333                           ; 1 bytes @ 0x22
  1334  0042                     	ds	1
  1335  0043                     ___ftmul@sign:
  1336                           
  1337                           ; 1 bytes @ 0x23
  1338  0043                     	ds	1
  1339  0044                     ?_fround:
  1340  0044                     ?_scale:	
  1341                           ; 3 bytes @ 0x24
  1342                           
  1343  0044                     ?___ftdiv:	
  1344                           ; 3 bytes @ 0x24
  1345                           
  1346  0044                     ___ftdiv@f2:	
  1347                           ; 3 bytes @ 0x24
  1348                           
  1349                           
  1350                           ; 3 bytes @ 0x24
  1351  0044                     	ds	3
  1352  0047                     ??_fround:
  1353  0047                     ??_scale:	
  1354                           ; 1 bytes @ 0x27
  1355                           
  1356  0047                     ___ftdiv@f1:	
  1357                           ; 1 bytes @ 0x27
  1358                           
  1359                           
  1360                           ; 3 bytes @ 0x27
  1361  0047                     	ds	2
  1362  0049                     _scale$1051:
  1363                           
  1364                           ; 3 bytes @ 0x29
  1365  0049                     	ds	1
  1366  004A                     ??___ftdiv:
  1367                           
  1368                           ; 1 bytes @ 0x2A
  1369  004A                     	ds	2
  1370  004C                     scale@scl:
  1371                           
  1372                           ; 1 bytes @ 0x2C
  1373  004C                     	ds	1
  1374  004D                     ?___fttol:
  1375  004D                     ___fttol@f1:	
  1376                           ; 4 bytes @ 0x2D
  1377                           
  1378  004D                     _fround$1050:	
  1379                           ; 3 bytes @ 0x2D
  1380                           
  1381                           
  1382                           ; 3 bytes @ 0x2D
  1383  004D                     	ds	1
  1384  004E                     ___ftdiv@cntr:
  1385  004E                     aht_readSensor@result:	
  1386                           ; 1 bytes @ 0x2E
  1387                           
  1388                           
  1389                           ; 4 bytes @ 0x2E
  1390  004E                     	ds	1
  1391  004F                     ___ftdiv@f3:
  1392                           
  1393                           ; 3 bytes @ 0x2F
  1394  004F                     	ds	1
  1395  0050                     _fround$1049:
  1396                           
  1397                           ; 3 bytes @ 0x30
  1398  0050                     	ds	1
  1399  0051                     ??___fttol:
  1400                           
  1401                           ; 1 bytes @ 0x31
  1402  0051                     	ds	1
  1403  0052                     aht_readSensor@i:
  1404  0052                     ___ftdiv@exp:	
  1405                           ; 1 bytes @ 0x32
  1406                           
  1407                           
  1408                           ; 1 bytes @ 0x32
  1409  0052                     	ds	1
  1410  0053                     ?___lltoft:
  1411  0053                     fround@prec:	
  1412                           ; 3 bytes @ 0x33
  1413                           
  1414  0053                     ___ftdiv@sign:	
  1415                           ; 1 bytes @ 0x33
  1416                           
  1417  0053                     ___lltoft@c:	
  1418                           ; 1 bytes @ 0x33
  1419                           
  1420                           
  1421                           ; 4 bytes @ 0x33
  1422  0053                     	ds	1
  1423  0054                     ?___ftadd:
  1424  0054                     ___ftadd@f1:	
  1425                           ; 3 bytes @ 0x34
  1426                           
  1427                           
  1428                           ; 3 bytes @ 0x34
  1429  0054                     	ds	1
  1430  0055                     ___fttol@sign1:
  1431                           
  1432                           ; 1 bytes @ 0x35
  1433  0055                     	ds	1
  1434  0056                     ___fttol@lval:
  1435                           
  1436                           ; 4 bytes @ 0x36
  1437  0056                     	ds	1
  1438  0057                     ??___lltoft:
  1439  0057                     ___ftadd@f2:	
  1440                           ; 1 bytes @ 0x37
  1441                           
  1442                           
  1443                           ; 3 bytes @ 0x37
  1444  0057                     	ds	1
  1445  0058                     ___lltoft@exp:
  1446                           
  1447                           ; 1 bytes @ 0x38
  1448  0058                     	ds	1
  1449  0059                     ?_aht_GetHumidity:
  1450                           
  1451                           ; 3 bytes @ 0x39
  1452  0059                     	ds	1
  1453  005A                     ??___ftadd:
  1454  005A                     ___fttol@exp1:	
  1455                           ; 1 bytes @ 0x3A
  1456                           
  1457                           
  1458                           ; 1 bytes @ 0x3A
  1459  005A                     	ds	2
  1460  005C                     ??_aht_GetHumidity:
  1461  005C                     aht_GetHumidity@value:	
  1462                           ; 1 bytes @ 0x3C
  1463                           
  1464                           
  1465                           ; 3 bytes @ 0x3C
  1466  005C                     	ds	2
  1467  005E                     ___ftadd@sign:
  1468                           
  1469                           ; 1 bytes @ 0x3E
  1470  005E                     	ds	1
  1471  005F                     ___ftadd@exp2:
  1472                           
  1473                           ; 1 bytes @ 0x3F
  1474  005F                     	ds	1
  1475  0060                     ___ftadd@exp1:
  1476                           
  1477                           ; 1 bytes @ 0x40
  1478  0060                     	ds	1
  1479  0061                     ?_aht_GetTemperature:
  1480  0061                     ?___ftsub:	
  1481                           ; 3 bytes @ 0x41
  1482                           
  1483  0061                     ___ftsub@f2:	
  1484                           ; 3 bytes @ 0x41
  1485                           
  1486                           
  1487                           ; 3 bytes @ 0x41
  1488  0061                     	ds	3
  1489  0064                     ??_aht_GetTemperature:
  1490  0064                     aht_GetTemperature@value:	
  1491                           ; 1 bytes @ 0x44
  1492                           
  1493  0064                     ___ftsub@f1:	
  1494                           ; 3 bytes @ 0x44
  1495                           
  1496                           
  1497                           ; 3 bytes @ 0x44
  1498  0064                     	ds	3
  1499  0067                     ??___ftsub:
  1500  0067                     ?_sprintf:	
  1501                           ; 1 bytes @ 0x47
  1502                           
  1503  0067                     sprintf@f:	
  1504                           ; 2 bytes @ 0x47
  1505                           
  1506                           
  1507                           ; 1 bytes @ 0x47
  1508  0067                     	ds	7
  1509                           
  1510                           	psect	maintext
  1511  074C                     __pmaintext:	
  1512 ;;
  1513 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1514 ;;
  1515 ;; *************** function _main *****************
  1516 ;; Defined at:
  1517 ;;		line 64 in file "pic16f.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;		None
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;		None
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : B00/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1531 ;;      Params:         0       0       0       0       0
  1532 ;;      Locals:         0       0       0       0       0
  1533 ;;      Temps:          0       0       2       0       0
  1534 ;;      Totals:         0       0       2       0       0
  1535 ;;Total ram usage:        2 bytes
  1536 ;; Hardware stack levels required when called:    6
  1537 ;; This function calls:
  1538 ;;		_I2C_Master_Init
  1539 ;;		_aht_GetHumidity
  1540 ;;		_aht_GetTemperature
  1541 ;;		_configIO
  1542 ;;		_sprintf
  1543 ;;		_uartRC_init
  1544 ;;		_uartTX_Write
  1545 ;;		_uartTX_Write_Str
  1546 ;; This function is called by:
  1547 ;;		Startup code after reset
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           
  1552                           ;psect for function _main
  1553  074C                     _main:
  1554  074C                     l4008:	
  1555                           ;incstack = 0
  1556                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1557                           
  1558                           
  1559                           ;pic16f.c: 65:     configIO();
  1560  074C  160A  158A  24A7  120A  118A  	fcall	_configIO
  1561  0751                     l4010:
  1562                           
  1563                           ;pic16f.c: 66:     uartRC_init(115200);
  1564  0751  3000               	movlw	0
  1565  0752  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0753  1303               	bcf	3,6	;RP1=0, select bank0
  1567  0754  00AF               	movwf	uartRC_init@baudrate
  1568  0755  30C2               	movlw	194
  1569  0756  00B0               	movwf	uartRC_init@baudrate+1
  1570  0757  160A  118A  2501  120A  118A  	fcall	_uartRC_init
  1571  075C                     l4012:
  1572                           
  1573                           ;pic16f.c: 67:     I2C_Master_Init(100000);
  1574  075C  3000               	movlw	0
  1575  075D  1283               	bcf	3,5	;RP0=0, select bank0
  1576  075E  1303               	bcf	3,6	;RP1=0, select bank0
  1577  075F  00B1               	movwf	I2C_Master_Init@c+3
  1578  0760  3001               	movlw	1
  1579  0761  00B0               	movwf	I2C_Master_Init@c+2
  1580  0762  3086               	movlw	134
  1581  0763  00AF               	movwf	I2C_Master_Init@c+1
  1582  0764  30A0               	movlw	160
  1583  0765  00AE               	movwf	I2C_Master_Init@c
  1584  0766  160A  158A  25FC  120A  118A  	fcall	_I2C_Master_Init
  1585  076B                     l4014:
  1586                           
  1587                           ;pic16f.c: 74:         uartTX_Write("a");
  1588  076B  3092               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1589  076C  160A  158A  24E1  120A  118A  	fcall	_uartTX_Write
  1590  0771                     l4016:
  1591                           
  1592                           ;pic16f.c: 75:         tempera1 = aht_GetHumidity();
  1593  0771  160A  158A  27A3  120A  118A  	fcall	_aht_GetHumidity
  1594  0776  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0777  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0778  0859               	movf	?_aht_GetHumidity,w
  1597  0779  1683               	bsf	3,5	;RP0=1, select bank1
  1598  077A  1303               	bcf	3,6	;RP1=0, select bank1
  1599  077B  00C4               	movwf	_tempera1^(0+128)
  1600  077C  1283               	bcf	3,5	;RP0=0, select bank0
  1601  077D  1303               	bcf	3,6	;RP1=0, select bank0
  1602  077E  085A               	movf	?_aht_GetHumidity+1,w
  1603  077F  1683               	bsf	3,5	;RP0=1, select bank1
  1604  0780  1303               	bcf	3,6	;RP1=0, select bank1
  1605  0781  00C5               	movwf	(_tempera1+1)^(0+128)
  1606  0782  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0783  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0784  085B               	movf	?_aht_GetHumidity+2,w
  1609  0785  1683               	bsf	3,5	;RP0=1, select bank1
  1610  0786  1303               	bcf	3,6	;RP1=0, select bank1
  1611  0787  00C6               	movwf	(_tempera1+2)^(0+128)
  1612  0788                     l4018:
  1613                           
  1614                           ;pic16f.c: 76:         humeda1 = aht_GetTemperature();
  1615  0788  160A  118A  20A9  120A  118A  	fcall	_aht_GetTemperature
  1616  078D  1283               	bcf	3,5	;RP0=0, select bank0
  1617  078E  1303               	bcf	3,6	;RP1=0, select bank0
  1618  078F  0861               	movf	?_aht_GetTemperature,w
  1619  0790  1683               	bsf	3,5	;RP0=1, select bank1
  1620  0791  1303               	bcf	3,6	;RP1=0, select bank1
  1621  0792  00C1               	movwf	_humeda1^(0+128)
  1622  0793  1283               	bcf	3,5	;RP0=0, select bank0
  1623  0794  1303               	bcf	3,6	;RP1=0, select bank0
  1624  0795  0862               	movf	?_aht_GetTemperature+1,w
  1625  0796  1683               	bsf	3,5	;RP0=1, select bank1
  1626  0797  1303               	bcf	3,6	;RP1=0, select bank1
  1627  0798  00C2               	movwf	(_humeda1+1)^(0+128)
  1628  0799  1283               	bcf	3,5	;RP0=0, select bank0
  1629  079A  1303               	bcf	3,6	;RP1=0, select bank0
  1630  079B  0863               	movf	?_aht_GetTemperature+2,w
  1631  079C  1683               	bsf	3,5	;RP0=1, select bank1
  1632  079D  1303               	bcf	3,6	;RP1=0, select bank1
  1633  079E  00C3               	movwf	(_humeda1+2)^(0+128)
  1634  079F                     l4020:
  1635                           
  1636                           ;pic16f.c: 80:         uartTX_Write_Str("T1   H1   \n");
  1637  079F  3086               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1638  07A0  160A  158A  256E  120A  118A  	fcall	_uartTX_Write_Str
  1639  07A5                     l4022:
  1640                           
  1641                           ;pic16f.c: 81:         sprintf(datos, "%2.1f   %2.1f ", tempera1,humeda1);
  1642  07A5  3077               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1643  07A6  1683               	bsf	3,5	;RP0=1, select bank1
  1644  07A7  1303               	bcf	3,6	;RP1=0, select bank1
  1645  07A8  00BF               	movwf	??_main^(0+128)
  1646  07A9  083F               	movf	??_main^(0+128),w
  1647  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1648  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1649  07AC  00E7               	movwf	sprintf@f
  1650  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  1651  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  1652  07AF  0844               	movf	_tempera1^(0+128),w
  1653  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  1654  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  1655  07B2  00E8               	movwf	?_sprintf+1
  1656  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  1657  07B4  1303               	bcf	3,6	;RP1=0, select bank1
  1658  07B5  0845               	movf	(_tempera1+1)^(0+128),w
  1659  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  1660  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  1661  07B8  00E9               	movwf	?_sprintf+2
  1662  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  1663  07BA  1303               	bcf	3,6	;RP1=0, select bank1
  1664  07BB  0846               	movf	(_tempera1+2)^(0+128),w
  1665  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  1666  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  1667  07BE  00EA               	movwf	?_sprintf+3
  1668  07BF  1683               	bsf	3,5	;RP0=1, select bank1
  1669  07C0  1303               	bcf	3,6	;RP1=0, select bank1
  1670  07C1  0841               	movf	_humeda1^(0+128),w
  1671  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1672  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1673  07C4  00EB               	movwf	?_sprintf+4
  1674  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  1675  07C6  1303               	bcf	3,6	;RP1=0, select bank1
  1676  07C7  0842               	movf	(_humeda1+1)^(0+128),w
  1677  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1678  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1679  07CA  00EC               	movwf	?_sprintf+5
  1680  07CB  1683               	bsf	3,5	;RP0=1, select bank1
  1681  07CC  1303               	bcf	3,6	;RP1=0, select bank1
  1682  07CD  0843               	movf	(_humeda1+2)^(0+128),w
  1683  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  1684  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  1685  07D0  00ED               	movwf	?_sprintf+6
  1686  07D1  30C9               	movlw	(low (_datos| 0))& (0+255)
  1687  07D2  120A  158A  24EE  120A  118A  	fcall	_sprintf
  1688  07D7                     l4024:
  1689                           
  1690                           ;pic16f.c: 82:         uartTX_Write(datos);
  1691  07D7  30C9               	movlw	(low _datos)& (0+255)
  1692  07D8  160A  158A  24E1  120A  118A  	fcall	_uartTX_Write
  1693  07DD                     l4026:
  1694                           
  1695                           ;pic16f.c: 83:        uartTX_Write(13);
  1696  07DD  300D               	movlw	13
  1697  07DE  160A  158A  24E1  120A  118A  	fcall	_uartTX_Write
  1698  07E3                     l4028:
  1699                           
  1700                           ;pic16f.c: 84:        uartTX_Write(10);
  1701  07E3  300A               	movlw	10
  1702  07E4  160A  158A  24E1  120A  118A  	fcall	_uartTX_Write
  1703  07E9                     l4030:
  1704                           
  1705                           ;pic16f.c: 85:         _delay((unsigned long)((1000)*(400000/4000.0)));
  1706  07E9  3082               	movlw	130
  1707  07EA  1683               	bsf	3,5	;RP0=1, select bank1
  1708  07EB  1303               	bcf	3,6	;RP1=0, select bank1
  1709  07EC  00C0               	movwf	(??_main^(0+128)+1)
  1710  07ED  30DD               	movlw	221
  1711  07EE  00BF               	movwf	??_main^(0+128)
  1712  07EF                     u6157:
  1713  07EF  0BBF               	decfsz	??_main^(0+128),f
  1714  07F0  2FEF               	goto	u6157
  1715  07F1  0BC0               	decfsz	(??_main^(0+128)+1),f
  1716  07F2  2FEF               	goto	u6157
  1717  07F3  2F6B               	goto	l4014
  1718  07F4  120A  118A  280C   	ljmp	start
  1719  07F7                     __end_of_main:
  1720                           
  1721                           	psect	text1
  1722  1D6E                     __ptext1:	
  1723 ;; *************** function _uartTX_Write_Str *****************
  1724 ;; Defined at:
  1725 ;;		line 43 in file "USART.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  string          1    wreg     PTR unsigned char 
  1728 ;;		 -> STR_2(12), 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  string          1    2[BANK0 ] PTR unsigned char 
  1731 ;;		 -> STR_2(12), 
  1732 ;;  n               2    3[BANK0 ] int 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1742 ;;      Params:         0       0       0       0       0
  1743 ;;      Locals:         0       3       0       0       0
  1744 ;;      Temps:          0       0       0       0       0
  1745 ;;      Totals:         0       3       0       0       0
  1746 ;;Total ram usage:        3 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    3
  1749 ;; This function calls:
  1750 ;;		_uartTX_Write
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function _uartTX_Write_Str
  1758  1D6E                     _uartTX_Write_Str:
  1759                           
  1760                           ;incstack = 0
  1761                           ; Regs used in _uartTX_Write_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1762                           ;uartTX_Write_Str@string stored from wreg
  1763  1D6E  1283               	bcf	3,5	;RP0=0, select bank0
  1764  1D6F  1303               	bcf	3,6	;RP1=0, select bank0
  1765  1D70  00A2               	movwf	uartTX_Write_Str@string
  1766  1D71                     l3740:
  1767                           
  1768                           ;USART.c: 44:     int n;;USART.c: 45:     for (n=0; string[n] != '\n'; n++){
  1769  1D71  01A3               	clrf	uartTX_Write_Str@n
  1770  1D72  01A4               	clrf	uartTX_Write_Str@n+1
  1771  1D73  2D89               	goto	l3746
  1772  1D74                     l3742:
  1773                           
  1774                           ;USART.c: 46:         uartTX_Write(string[n]);
  1775  1D74  0823               	movf	uartTX_Write_Str@n,w
  1776  1D75  0722               	addwf	uartTX_Write_Str@string,w
  1777  1D76  0084               	movwf	4
  1778  1D77  160A  118A  2000  160A  158A  	fcall	stringdir
  1779  1D7C  160A  158A  24E1  160A  158A  	fcall	_uartTX_Write
  1780  1D81                     l3744:
  1781                           
  1782                           ;USART.c: 47:     }
  1783  1D81  3001               	movlw	1
  1784  1D82  1283               	bcf	3,5	;RP0=0, select bank0
  1785  1D83  1303               	bcf	3,6	;RP1=0, select bank0
  1786  1D84  07A3               	addwf	uartTX_Write_Str@n,f
  1787  1D85  1803               	skipnc
  1788  1D86  0AA4               	incf	uartTX_Write_Str@n+1,f
  1789  1D87  3000               	movlw	0
  1790  1D88  07A4               	addwf	uartTX_Write_Str@n+1,f
  1791  1D89                     l3746:
  1792  1D89  0823               	movf	uartTX_Write_Str@n,w
  1793  1D8A  0722               	addwf	uartTX_Write_Str@string,w
  1794  1D8B  0084               	movwf	4
  1795  1D8C  160A  118A  2000  160A  158A  	fcall	stringdir
  1796  1D91  3A0A               	xorlw	10
  1797  1D92  1D03               	skipz
  1798  1D93  2D95               	goto	u5661
  1799  1D94  2D96               	goto	u5660
  1800  1D95                     u5661:
  1801  1D95  2D74               	goto	l3742
  1802  1D96                     u5660:
  1803  1D96                     l214:
  1804  1D96  0008               	return
  1805  1D97                     __end_of_uartTX_Write_Str:
  1806                           
  1807                           	psect	text2
  1808  1CE1                     __ptext2:	
  1809 ;; *************** function _uartTX_Write *****************
  1810 ;; Defined at:
  1811 ;;		line 36 in file "USART.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  dato            1    wreg     unsigned char 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  dato            1    1[BANK0 ] unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         0       0       0       0       0
  1826 ;;      Locals:         0       1       0       0       0
  1827 ;;      Temps:          0       1       0       0       0
  1828 ;;      Totals:         0       2       0       0       0
  1829 ;;Total ram usage:        2 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    2
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_main
  1836 ;;		_uartTX_Write_Str
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           
  1841                           ;psect for function _uartTX_Write
  1842  1CE1                     _uartTX_Write:
  1843                           
  1844                           ;incstack = 0
  1845                           ; Regs used in _uartTX_Write: [wreg]
  1846                           ;uartTX_Write@dato stored from wreg
  1847  1CE1  1283               	bcf	3,5	;RP0=0, select bank0
  1848  1CE2  1303               	bcf	3,6	;RP1=0, select bank0
  1849  1CE3  00A1               	movwf	uartTX_Write@dato
  1850  1CE4                     l3440:
  1851                           
  1852                           ;USART.c: 37:         TXREG = dato;
  1853  1CE4  0821               	movf	uartTX_Write@dato,w
  1854  1CE5  0099               	movwf	25	;volatile
  1855                           
  1856                           ;USART.c: 38:         while(TXSTAbits.TRMT == 0){
  1857  1CE6  2CEE               	goto	l3444
  1858  1CE7                     l3442:
  1859                           
  1860                           ;USART.c: 39:             _delay((unsigned long)((500)*(4000000/4000000.0)));
  1861  1CE7  30A5               	movlw	165
  1862  1CE8  1283               	bcf	3,5	;RP0=0, select bank0
  1863  1CE9  1303               	bcf	3,6	;RP1=0, select bank0
  1864  1CEA  00A0               	movwf	??_uartTX_Write
  1865  1CEB                     u6167:
  1866  1CEB  0BA0               	decfsz	??_uartTX_Write,f
  1867  1CEC  2CEB               	goto	u6167
  1868  1CED  2CEE               	nop2
  1869  1CEE                     l3444:
  1870                           
  1871                           ;USART.c: 38:         while(TXSTAbits.TRMT == 0){
  1872  1CEE  1683               	bsf	3,5	;RP0=1, select bank1
  1873  1CEF  1303               	bcf	3,6	;RP1=0, select bank1
  1874  1CF0  1C98               	btfss	24,1	;volatile
  1875  1CF1  2CF3               	goto	u5081
  1876  1CF2  2CF4               	goto	u5080
  1877  1CF3                     u5081:
  1878  1CF3  2CE7               	goto	l3442
  1879  1CF4                     u5080:
  1880  1CF4                     l208:
  1881  1CF4  0008               	return
  1882  1CF5                     __end_of_uartTX_Write:
  1883                           
  1884                           	psect	text3
  1885  1501                     __ptext3:	
  1886 ;; *************** function _uartRC_init *****************
  1887 ;; Defined at:
  1888 ;;		line 13 in file "USART.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  baudrate        2   15[BANK0 ] unsigned int 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  n               2   29[BANK0 ] unsigned int 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      unsigned char 
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1902 ;;      Params:         0       2       0       0       0
  1903 ;;      Locals:         0       2       0       0       0
  1904 ;;      Temps:          0      12       0       0       0
  1905 ;;      Totals:         0      16       0       0       0
  1906 ;;Total ram usage:       16 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    3
  1909 ;; This function calls:
  1910 ;;		___aldiv
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function _uartRC_init
  1918  1501                     _uartRC_init:
  1919  1501                     l3688:	
  1920                           ;incstack = 0
  1921                           ; Regs used in _uartRC_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1922                           
  1923                           
  1924                           ;USART.c: 14:     uint16_t n;;USART.c: 15:     n = (4000000 - baudrate*64)/(baudrate*64)
      +                          ;
  1925  1501  1283               	bcf	3,5	;RP0=0, select bank0
  1926  1502  1303               	bcf	3,6	;RP1=0, select bank0
  1927  1503  0830               	movf	uartRC_init@baudrate+1,w
  1928  1504  00B2               	movwf	??_uartRC_init+1
  1929  1505  082F               	movf	uartRC_init@baudrate,w
  1930  1506  00B1               	movwf	??_uartRC_init
  1931  1507  3006               	movlw	6
  1932  1508  00FF               	movwf	btemp+1
  1933  1509                     u5585:
  1934  1509  1003               	clrc
  1935  150A  0DB1               	rlf	??_uartRC_init,f
  1936  150B  0DB2               	rlf	??_uartRC_init+1,f
  1937  150C  0BFF               	decfsz	btemp+1,f
  1938  150D  2D09               	goto	u5585
  1939  150E  0831               	movf	??_uartRC_init,w
  1940  150F  00A0               	movwf	___aldiv@divisor
  1941  1510  0832               	movf	??_uartRC_init+1,w
  1942  1511  00A1               	movwf	___aldiv@divisor+1
  1943  1512  01A2               	clrf	___aldiv@divisor+2
  1944  1513  01A3               	clrf	___aldiv@divisor+3
  1945  1514  0830               	movf	uartRC_init@baudrate+1,w
  1946  1515  00B4               	movwf	??_uartRC_init+3
  1947  1516  082F               	movf	uartRC_init@baudrate,w
  1948  1517  00B3               	movwf	??_uartRC_init+2
  1949  1518  3006               	movlw	6
  1950  1519  00FF               	movwf	btemp+1
  1951  151A                     u5595:
  1952  151A  1003               	clrc
  1953  151B  0DB3               	rlf	??_uartRC_init+2,f
  1954  151C  0DB4               	rlf	??_uartRC_init+3,f
  1955  151D  0BFF               	decfsz	btemp+1,f
  1956  151E  2D1A               	goto	u5595
  1957  151F  0833               	movf	??_uartRC_init+2,w
  1958  1520  00B5               	movwf	??_uartRC_init+4
  1959  1521  0834               	movf	??_uartRC_init+3,w
  1960  1522  00B6               	movwf	??_uartRC_init+5
  1961  1523  01B7               	clrf	??_uartRC_init+6
  1962  1524  01B8               	clrf	??_uartRC_init+7
  1963  1525  3000               	movlw	0
  1964  1526  00B9               	movwf	??_uartRC_init+8
  1965  1527  3009               	movlw	9
  1966  1528  00BA               	movwf	??_uartRC_init+9
  1967  1529  303D               	movlw	61
  1968  152A  00BB               	movwf	??_uartRC_init+10
  1969  152B  3000               	movlw	0
  1970  152C  00BC               	movwf	??_uartRC_init+11
  1971  152D  0835               	movf	??_uartRC_init+4,w
  1972  152E  02B9               	subwf	??_uartRC_init+8,f
  1973  152F  0836               	movf	??_uartRC_init+5,w
  1974  1530  1C03               	skipc
  1975  1531  0F36               	incfsz	??_uartRC_init+5,w
  1976  1532  2D34               	goto	u5601
  1977  1533  2D35               	goto	u5602
  1978  1534                     u5601:
  1979  1534  02BA               	subwf	??_uartRC_init+9,f
  1980  1535                     u5602:
  1981  1535  0837               	movf	??_uartRC_init+6,w
  1982  1536  1C03               	skipc
  1983  1537  0F37               	incfsz	??_uartRC_init+6,w
  1984  1538  2D3A               	goto	u5603
  1985  1539  2D3B               	goto	u5604
  1986  153A                     u5603:
  1987  153A  02BB               	subwf	??_uartRC_init+10,f
  1988  153B                     u5604:
  1989  153B  0838               	movf	??_uartRC_init+7,w
  1990  153C  1C03               	skipc
  1991  153D  0F38               	incfsz	??_uartRC_init+7,w
  1992  153E  2D40               	goto	u5605
  1993  153F  2D41               	goto	u5606
  1994  1540                     u5605:
  1995  1540  02BC               	subwf	??_uartRC_init+11,f
  1996  1541                     u5606:
  1997  1541  083C               	movf	??_uartRC_init+11,w
  1998  1542  00A7               	movwf	___aldiv@dividend+3
  1999  1543  083B               	movf	??_uartRC_init+10,w
  2000  1544  00A6               	movwf	___aldiv@dividend+2
  2001  1545  083A               	movf	??_uartRC_init+9,w
  2002  1546  00A5               	movwf	___aldiv@dividend+1
  2003  1547  0839               	movf	??_uartRC_init+8,w
  2004  1548  00A4               	movwf	___aldiv@dividend
  2005  1549  160A  118A  22E5  160A  118A  	fcall	___aldiv
  2006  154E  1283               	bcf	3,5	;RP0=0, select bank0
  2007  154F  1303               	bcf	3,6	;RP1=0, select bank0
  2008  1550  0821               	movf	?___aldiv+1,w
  2009  1551  00BE               	movwf	uartRC_init@n+1
  2010  1552  0820               	movf	?___aldiv,w
  2011  1553  00BD               	movwf	uartRC_init@n
  2012  1554                     l3690:
  2013                           
  2014                           ;USART.c: 16:     if (n > 255){
  2015  1554  3001               	movlw	1
  2016  1555  023E               	subwf	uartRC_init@n+1,w
  2017  1556  3000               	movlw	0
  2018  1557  1903               	skipnz
  2019  1558  023D               	subwf	uartRC_init@n,w
  2020  1559  1C03               	skipc
  2021  155A  2D5C               	goto	u5611
  2022  155B  2D5D               	goto	u5610
  2023  155C                     u5611:
  2024  155C  2DB5               	goto	l3696
  2025  155D                     u5610:
  2026  155D                     l3692:
  2027                           
  2028                           ;USART.c: 17:         n = (4000000 - baudrate*16)/(baudrate*16);
  2029  155D  0830               	movf	uartRC_init@baudrate+1,w
  2030  155E  00B2               	movwf	??_uartRC_init+1
  2031  155F  082F               	movf	uartRC_init@baudrate,w
  2032  1560  00B1               	movwf	??_uartRC_init
  2033  1561  0EB1               	swapf	??_uartRC_init,f
  2034  1562  0EB2               	swapf	??_uartRC_init+1,f
  2035  1563  30F0               	movlw	240
  2036  1564  05B2               	andwf	??_uartRC_init+1,f
  2037  1565  0831               	movf	??_uartRC_init,w
  2038  1566  390F               	andlw	15
  2039  1567  04B2               	iorwf	??_uartRC_init+1,f
  2040  1568  30F0               	movlw	240
  2041  1569  05B1               	andwf	??_uartRC_init,f
  2042  156A  0831               	movf	??_uartRC_init,w
  2043  156B  00A0               	movwf	___aldiv@divisor
  2044  156C  0832               	movf	??_uartRC_init+1,w
  2045  156D  00A1               	movwf	___aldiv@divisor+1
  2046  156E  01A2               	clrf	___aldiv@divisor+2
  2047  156F  01A3               	clrf	___aldiv@divisor+3
  2048  1570  0830               	movf	uartRC_init@baudrate+1,w
  2049  1571  00B4               	movwf	??_uartRC_init+3
  2050  1572  082F               	movf	uartRC_init@baudrate,w
  2051  1573  00B3               	movwf	??_uartRC_init+2
  2052  1574  0EB3               	swapf	??_uartRC_init+2,f
  2053  1575  0EB4               	swapf	??_uartRC_init+3,f
  2054  1576  30F0               	movlw	240
  2055  1577  05B4               	andwf	??_uartRC_init+3,f
  2056  1578  0833               	movf	??_uartRC_init+2,w
  2057  1579  390F               	andlw	15
  2058  157A  04B4               	iorwf	??_uartRC_init+3,f
  2059  157B  30F0               	movlw	240
  2060  157C  05B3               	andwf	??_uartRC_init+2,f
  2061  157D  0833               	movf	??_uartRC_init+2,w
  2062  157E  00B5               	movwf	??_uartRC_init+4
  2063  157F  0834               	movf	??_uartRC_init+3,w
  2064  1580  00B6               	movwf	??_uartRC_init+5
  2065  1581  01B7               	clrf	??_uartRC_init+6
  2066  1582  01B8               	clrf	??_uartRC_init+7
  2067  1583  3000               	movlw	0
  2068  1584  00B9               	movwf	??_uartRC_init+8
  2069  1585  3009               	movlw	9
  2070  1586  00BA               	movwf	??_uartRC_init+9
  2071  1587  303D               	movlw	61
  2072  1588  00BB               	movwf	??_uartRC_init+10
  2073  1589  3000               	movlw	0
  2074  158A  00BC               	movwf	??_uartRC_init+11
  2075  158B  0835               	movf	??_uartRC_init+4,w
  2076  158C  02B9               	subwf	??_uartRC_init+8,f
  2077  158D  0836               	movf	??_uartRC_init+5,w
  2078  158E  1C03               	skipc
  2079  158F  0F36               	incfsz	??_uartRC_init+5,w
  2080  1590  2D92               	goto	u5621
  2081  1591  2D93               	goto	u5622
  2082  1592                     u5621:
  2083  1592  02BA               	subwf	??_uartRC_init+9,f
  2084  1593                     u5622:
  2085  1593  0837               	movf	??_uartRC_init+6,w
  2086  1594  1C03               	skipc
  2087  1595  0F37               	incfsz	??_uartRC_init+6,w
  2088  1596  2D98               	goto	u5623
  2089  1597  2D99               	goto	u5624
  2090  1598                     u5623:
  2091  1598  02BB               	subwf	??_uartRC_init+10,f
  2092  1599                     u5624:
  2093  1599  0838               	movf	??_uartRC_init+7,w
  2094  159A  1C03               	skipc
  2095  159B  0F38               	incfsz	??_uartRC_init+7,w
  2096  159C  2D9E               	goto	u5625
  2097  159D  2D9F               	goto	u5626
  2098  159E                     u5625:
  2099  159E  02BC               	subwf	??_uartRC_init+11,f
  2100  159F                     u5626:
  2101  159F  083C               	movf	??_uartRC_init+11,w
  2102  15A0  00A7               	movwf	___aldiv@dividend+3
  2103  15A1  083B               	movf	??_uartRC_init+10,w
  2104  15A2  00A6               	movwf	___aldiv@dividend+2
  2105  15A3  083A               	movf	??_uartRC_init+9,w
  2106  15A4  00A5               	movwf	___aldiv@dividend+1
  2107  15A5  0839               	movf	??_uartRC_init+8,w
  2108  15A6  00A4               	movwf	___aldiv@dividend
  2109  15A7  160A  118A  22E5  160A  118A  	fcall	___aldiv
  2110  15AC  1283               	bcf	3,5	;RP0=0, select bank0
  2111  15AD  1303               	bcf	3,6	;RP1=0, select bank0
  2112  15AE  0821               	movf	?___aldiv+1,w
  2113  15AF  00BE               	movwf	uartRC_init@n+1
  2114  15B0  0820               	movf	?___aldiv,w
  2115  15B1  00BD               	movwf	uartRC_init@n
  2116  15B2                     l3694:
  2117                           
  2118                           ;USART.c: 18:         TXSTAbits.BRGH = 1;
  2119  15B2  1683               	bsf	3,5	;RP0=1, select bank1
  2120  15B3  1303               	bcf	3,6	;RP1=0, select bank1
  2121  15B4  1518               	bsf	24,2	;volatile
  2122  15B5                     l3696:
  2123                           
  2124                           ;USART.c: 20:     if (n < 256){
  2125  15B5  3001               	movlw	1
  2126  15B6  1283               	bcf	3,5	;RP0=0, select bank0
  2127  15B7  023E               	subwf	uartRC_init@n+1,w
  2128  15B8  3000               	movlw	0
  2129  15B9  1903               	skipnz
  2130  15BA  023D               	subwf	uartRC_init@n,w
  2131  15BB  1803               	skipnc
  2132  15BC  2DBE               	goto	u5631
  2133  15BD  2DBF               	goto	u5630
  2134  15BE                     u5631:
  2135  15BE  2DCB               	goto	l199
  2136  15BF                     u5630:
  2137  15BF                     l3698:
  2138                           
  2139                           ;USART.c: 21:         SPBRG = n;
  2140  15BF  083D               	movf	uartRC_init@n,w
  2141  15C0  1683               	bsf	3,5	;RP0=1, select bank1
  2142  15C1  1303               	bcf	3,6	;RP1=0, select bank1
  2143  15C2  0099               	movwf	25	;volatile
  2144  15C3                     l3700:
  2145                           
  2146                           ;USART.c: 22:         TXSTAbits.SYNC = 0;
  2147  15C3  1218               	bcf	24,4	;volatile
  2148  15C4                     l3702:
  2149                           
  2150                           ;USART.c: 23:         RCSTAbits.SPEN = 1;
  2151  15C4  1283               	bcf	3,5	;RP0=0, select bank0
  2152  15C5  1303               	bcf	3,6	;RP1=0, select bank0
  2153  15C6  1798               	bsf	24,7	;volatile
  2154  15C7                     l3704:
  2155                           
  2156                           ;USART.c: 24:         RCSTAbits.CREN = 1;
  2157  15C7  1618               	bsf	24,4	;volatile
  2158  15C8                     l3706:
  2159                           
  2160                           ;USART.c: 25:         TXSTAbits.TXEN = 1;
  2161  15C8  1683               	bsf	3,5	;RP0=1, select bank1
  2162  15C9  1303               	bcf	3,6	;RP1=0, select bank1
  2163  15CA  1698               	bsf	24,5	;volatile
  2164  15CB                     l199:
  2165  15CB  0008               	return
  2166  15CC                     __end_of_uartRC_init:
  2167                           
  2168                           	psect	text4
  2169  12E5                     __ptext4:	
  2170 ;; *************** function ___aldiv *****************
  2171 ;; Defined at:
  2172 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\aldiv.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  divisor         4    0[BANK0 ] long 
  2175 ;;  dividend        4    4[BANK0 ] long 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  quotient        4   11[BANK0 ] long 
  2178 ;;  sign            1   10[BANK0 ] unsigned char 
  2179 ;;  counter         1    9[BANK0 ] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  4    0[BANK0 ] long 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2189 ;;      Params:         0       8       0       0       0
  2190 ;;      Locals:         0       6       0       0       0
  2191 ;;      Temps:          0       1       0       0       0
  2192 ;;      Totals:         0      15       0       0       0
  2193 ;;Total ram usage:       15 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    2
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_uartRC_init
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           
  2204                           ;psect for function ___aldiv
  2205  12E5                     ___aldiv:
  2206  12E5                     l3582:	
  2207                           ;incstack = 0
  2208                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2209                           
  2210  12E5  1283               	bcf	3,5	;RP0=0, select bank0
  2211  12E6  1303               	bcf	3,6	;RP1=0, select bank0
  2212  12E7  01AA               	clrf	___aldiv@sign
  2213  12E8                     l3584:
  2214  12E8  1FA3               	btfss	___aldiv@divisor+3,7
  2215  12E9  2AEB               	goto	u5371
  2216  12EA  2AEC               	goto	u5370
  2217  12EB                     u5371:
  2218  12EB  2AF9               	goto	l481
  2219  12EC                     u5370:
  2220  12EC                     l3586:
  2221  12EC  09A0               	comf	___aldiv@divisor,f
  2222  12ED  09A1               	comf	___aldiv@divisor+1,f
  2223  12EE  09A2               	comf	___aldiv@divisor+2,f
  2224  12EF  09A3               	comf	___aldiv@divisor+3,f
  2225  12F0  0AA0               	incf	___aldiv@divisor,f
  2226  12F1  1903               	skipnz
  2227  12F2  0AA1               	incf	___aldiv@divisor+1,f
  2228  12F3  1903               	skipnz
  2229  12F4  0AA2               	incf	___aldiv@divisor+2,f
  2230  12F5  1903               	skipnz
  2231  12F6  0AA3               	incf	___aldiv@divisor+3,f
  2232  12F7  01AA               	clrf	___aldiv@sign
  2233  12F8  0AAA               	incf	___aldiv@sign,f
  2234  12F9                     l481:
  2235  12F9  1FA7               	btfss	___aldiv@dividend+3,7
  2236  12FA  2AFC               	goto	u5381
  2237  12FB  2AFD               	goto	u5380
  2238  12FC                     u5381:
  2239  12FC  2B0C               	goto	l3592
  2240  12FD                     u5380:
  2241  12FD                     l3588:
  2242  12FD  09A4               	comf	___aldiv@dividend,f
  2243  12FE  09A5               	comf	___aldiv@dividend+1,f
  2244  12FF  09A6               	comf	___aldiv@dividend+2,f
  2245  1300  09A7               	comf	___aldiv@dividend+3,f
  2246  1301  0AA4               	incf	___aldiv@dividend,f
  2247  1302  1903               	skipnz
  2248  1303  0AA5               	incf	___aldiv@dividend+1,f
  2249  1304  1903               	skipnz
  2250  1305  0AA6               	incf	___aldiv@dividend+2,f
  2251  1306  1903               	skipnz
  2252  1307  0AA7               	incf	___aldiv@dividend+3,f
  2253  1308                     l3590:
  2254  1308  3001               	movlw	1
  2255  1309  00A8               	movwf	??___aldiv
  2256  130A  0828               	movf	??___aldiv,w
  2257  130B  06AA               	xorwf	___aldiv@sign,f
  2258  130C                     l3592:
  2259  130C  3000               	movlw	0
  2260  130D  00AE               	movwf	___aldiv@quotient+3
  2261  130E  3000               	movlw	0
  2262  130F  00AD               	movwf	___aldiv@quotient+2
  2263  1310  3000               	movlw	0
  2264  1311  00AC               	movwf	___aldiv@quotient+1
  2265  1312  3000               	movlw	0
  2266  1313  00AB               	movwf	___aldiv@quotient
  2267  1314                     l3594:
  2268  1314  0823               	movf	___aldiv@divisor+3,w
  2269  1315  0422               	iorwf	___aldiv@divisor+2,w
  2270  1316  0421               	iorwf	___aldiv@divisor+1,w
  2271  1317  0420               	iorwf	___aldiv@divisor,w
  2272  1318  1903               	skipnz
  2273  1319  2B1B               	goto	u5391
  2274  131A  2B1C               	goto	u5390
  2275  131B                     u5391:
  2276  131B  2B69               	goto	l3614
  2277  131C                     u5390:
  2278  131C                     l3596:
  2279  131C  01A9               	clrf	___aldiv@counter
  2280  131D  0AA9               	incf	___aldiv@counter,f
  2281  131E  2B2C               	goto	l3600
  2282  131F                     l3598:
  2283  131F  3001               	movlw	1
  2284  1320  00A8               	movwf	??___aldiv
  2285  1321                     u5405:
  2286  1321  1003               	clrc
  2287  1322  0DA0               	rlf	___aldiv@divisor,f
  2288  1323  0DA1               	rlf	___aldiv@divisor+1,f
  2289  1324  0DA2               	rlf	___aldiv@divisor+2,f
  2290  1325  0DA3               	rlf	___aldiv@divisor+3,f
  2291  1326  0BA8               	decfsz	??___aldiv,f
  2292  1327  2B21               	goto	u5405
  2293  1328  3001               	movlw	1
  2294  1329  00A8               	movwf	??___aldiv
  2295  132A  0828               	movf	??___aldiv,w
  2296  132B  07A9               	addwf	___aldiv@counter,f
  2297  132C                     l3600:
  2298  132C  1FA3               	btfss	___aldiv@divisor+3,7
  2299  132D  2B2F               	goto	u5411
  2300  132E  2B30               	goto	u5410
  2301  132F                     u5411:
  2302  132F  2B1F               	goto	l3598
  2303  1330                     u5410:
  2304  1330                     l3602:
  2305  1330  3001               	movlw	1
  2306  1331  00A8               	movwf	??___aldiv
  2307  1332                     u5425:
  2308  1332  1003               	clrc
  2309  1333  0DAB               	rlf	___aldiv@quotient,f
  2310  1334  0DAC               	rlf	___aldiv@quotient+1,f
  2311  1335  0DAD               	rlf	___aldiv@quotient+2,f
  2312  1336  0DAE               	rlf	___aldiv@quotient+3,f
  2313  1337  0BA8               	decfsz	??___aldiv,f
  2314  1338  2B32               	goto	u5425
  2315  1339                     l3604:
  2316  1339  0823               	movf	___aldiv@divisor+3,w
  2317  133A  0227               	subwf	___aldiv@dividend+3,w
  2318  133B  1D03               	skipz
  2319  133C  2B47               	goto	u5435
  2320  133D  0822               	movf	___aldiv@divisor+2,w
  2321  133E  0226               	subwf	___aldiv@dividend+2,w
  2322  133F  1D03               	skipz
  2323  1340  2B47               	goto	u5435
  2324  1341  0821               	movf	___aldiv@divisor+1,w
  2325  1342  0225               	subwf	___aldiv@dividend+1,w
  2326  1343  1D03               	skipz
  2327  1344  2B47               	goto	u5435
  2328  1345  0820               	movf	___aldiv@divisor,w
  2329  1346  0224               	subwf	___aldiv@dividend,w
  2330  1347                     u5435:
  2331  1347  1C03               	skipc
  2332  1348  2B4A               	goto	u5431
  2333  1349  2B4B               	goto	u5430
  2334  134A                     u5431:
  2335  134A  2B5A               	goto	l3610
  2336  134B                     u5430:
  2337  134B                     l3606:
  2338  134B  0820               	movf	___aldiv@divisor,w
  2339  134C  02A4               	subwf	___aldiv@dividend,f
  2340  134D  0821               	movf	___aldiv@divisor+1,w
  2341  134E  1C03               	skipc
  2342  134F  0F21               	incfsz	___aldiv@divisor+1,w
  2343  1350  02A5               	subwf	___aldiv@dividend+1,f
  2344  1351  0822               	movf	___aldiv@divisor+2,w
  2345  1352  1C03               	skipc
  2346  1353  0F22               	incfsz	___aldiv@divisor+2,w
  2347  1354  02A6               	subwf	___aldiv@dividend+2,f
  2348  1355  0823               	movf	___aldiv@divisor+3,w
  2349  1356  1C03               	skipc
  2350  1357  0F23               	incfsz	___aldiv@divisor+3,w
  2351  1358  02A7               	subwf	___aldiv@dividend+3,f
  2352  1359                     l3608:
  2353  1359  142B               	bsf	___aldiv@quotient,0
  2354  135A                     l3610:
  2355  135A  3001               	movlw	1
  2356  135B                     u5445:
  2357  135B  1003               	clrc
  2358  135C  0CA3               	rrf	___aldiv@divisor+3,f
  2359  135D  0CA2               	rrf	___aldiv@divisor+2,f
  2360  135E  0CA1               	rrf	___aldiv@divisor+1,f
  2361  135F  0CA0               	rrf	___aldiv@divisor,f
  2362  1360  3EFF               	addlw	-1
  2363  1361  1D03               	skipz
  2364  1362  2B5B               	goto	u5445
  2365  1363                     l3612:
  2366  1363  3001               	movlw	1
  2367  1364  02A9               	subwf	___aldiv@counter,f
  2368  1365  1D03               	btfss	3,2
  2369  1366  2B68               	goto	u5451
  2370  1367  2B69               	goto	u5450
  2371  1368                     u5451:
  2372  1368  2B30               	goto	l3602
  2373  1369                     u5450:
  2374  1369                     l3614:
  2375  1369  082A               	movf	___aldiv@sign,w
  2376  136A  1903               	btfsc	3,2
  2377  136B  2B6D               	goto	u5461
  2378  136C  2B6E               	goto	u5460
  2379  136D                     u5461:
  2380  136D  2B79               	goto	l3618
  2381  136E                     u5460:
  2382  136E                     l3616:
  2383  136E  09AB               	comf	___aldiv@quotient,f
  2384  136F  09AC               	comf	___aldiv@quotient+1,f
  2385  1370  09AD               	comf	___aldiv@quotient+2,f
  2386  1371  09AE               	comf	___aldiv@quotient+3,f
  2387  1372  0AAB               	incf	___aldiv@quotient,f
  2388  1373  1903               	skipnz
  2389  1374  0AAC               	incf	___aldiv@quotient+1,f
  2390  1375  1903               	skipnz
  2391  1376  0AAD               	incf	___aldiv@quotient+2,f
  2392  1377  1903               	skipnz
  2393  1378  0AAE               	incf	___aldiv@quotient+3,f
  2394  1379                     l3618:
  2395  1379  082E               	movf	___aldiv@quotient+3,w
  2396  137A  00A3               	movwf	?___aldiv+3
  2397  137B  082D               	movf	___aldiv@quotient+2,w
  2398  137C  00A2               	movwf	?___aldiv+2
  2399  137D  082C               	movf	___aldiv@quotient+1,w
  2400  137E  00A1               	movwf	?___aldiv+1
  2401  137F  082B               	movf	___aldiv@quotient,w
  2402  1380  00A0               	movwf	?___aldiv
  2403  1381                     l491:
  2404  1381  0008               	return
  2405  1382                     __end_of___aldiv:
  2406                           
  2407                           	psect	text5
  2408  0CEE                     __ptext5:	
  2409 ;; *************** function _sprintf *****************
  2410 ;; Defined at:
  2411 ;;		line 505 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  sp              1    wreg     PTR unsigned char 
  2414 ;;		 -> datos(20), 
  2415 ;;  f               1   71[BANK0 ] PTR const unsigned char 
  2416 ;;		 -> STR_3(15), 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  sp              1   24[BANK1 ] PTR unsigned char 
  2419 ;;		 -> datos(20), 
  2420 ;;  tmpval          4   18[BANK1 ] struct .
  2421 ;;  val             4   10[BANK1 ] unsigned long 
  2422 ;;  fval            3   25[BANK1 ] unsigned long 
  2423 ;;  prec            2   28[BANK1 ] int 
  2424 ;;  eexp            2   22[BANK1 ] int 
  2425 ;;  width           2   16[BANK1 ] int 
  2426 ;;  flag            2   14[BANK1 ] unsigned short 
  2427 ;;  cp              2    0        PTR const unsigned char 
  2428 ;;  len             2    0        unsigned int 
  2429 ;;  c               1   30[BANK1 ] unsigned char 
  2430 ;;  ap              1    9[BANK1 ] PTR void [1]
  2431 ;;		 -> ?_sprintf(2), 
  2432 ;;  d               1    0        unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  2   71[BANK0 ] int 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2442 ;;      Params:         0       7       0       0       0
  2443 ;;      Locals:         0       0      25       0       0
  2444 ;;      Temps:          0       0       6       0       0
  2445 ;;      Totals:         0       7      31       0       0
  2446 ;;Total ram usage:       38 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    5
  2449 ;; This function calls:
  2450 ;;		___awdiv
  2451 ;;		___ftadd
  2452 ;;		___ftge
  2453 ;;		___ftmul
  2454 ;;		___ftneg
  2455 ;;		___ftsub
  2456 ;;		___fttol
  2457 ;;		___lldiv
  2458 ;;		___llmod
  2459 ;;		___lltoft
  2460 ;;		___wmul
  2461 ;;		__div_to_l_
  2462 ;;		__tdiv_to_l_
  2463 ;;		_fround
  2464 ;;		_isdigit
  2465 ;;		_scale
  2466 ;; This function is called by:
  2467 ;;		_main
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           
  2472                           ;psect for function _sprintf
  2473  0CEE                     _sprintf:
  2474                           
  2475                           ;incstack = 0
  2476                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2477                           ;sprintf@sp stored from wreg
  2478  0CEE  1683               	bsf	3,5	;RP0=1, select bank1
  2479  0CEF  1303               	bcf	3,6	;RP1=0, select bank1
  2480  0CF0  00B8               	movwf	sprintf@sp^(0+128)
  2481  0CF1                     l3748:
  2482                           
  2483                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const ch
      +                          ar * f, ...);D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 506: {;D:\MPLAB XC8 
      +                          compiler\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\MPLAB XC8 compiler\pic\so
      +                          urces\c90\common\doprnt.c: 512:  char c;;D:\MPLAB XC8 compiler\pic\sources\c90\common\do
      +                          prnt.c: 514:  int width;;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 517:  in
      +                          t prec;;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 525:  unsigned short flag
      +                          ;
  2484  0CF1  3068               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2485  0CF2  00A0               	movwf	??_sprintf^(0+128)
  2486  0CF3  0820               	movf	??_sprintf^(0+128),w
  2487  0CF4  00A9               	movwf	sprintf@ap^(0+128)
  2488  0CF5                     L1:
  2489                           
  2490                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  2491  0CF5  120A  118A  2D82   	goto	l3996
  2492  0CF8                     l3750:
  2493                           
  2494                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  2495  0CF8  3025               	movlw	37
  2496  0CF9  063E               	xorwf	sprintf@c^(0+128),w
  2497  0CFA  1903               	btfsc	3,2
  2498  0CFB  2CFD               	goto	u5671
  2499  0CFC  2CFE               	goto	u5670
  2500  0CFD                     u5671:
  2501  0CFD  2D0A               	goto	l3756
  2502  0CFE                     u5670:
  2503  0CFE                     l3752:
  2504                           
  2505                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 557:   {;D:\MPLAB XC8 compiler\p
      +                          ic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2506  0CFE  083E               	movf	sprintf@c^(0+128),w
  2507  0CFF  00A0               	movwf	??_sprintf^(0+128)
  2508  0D00  0838               	movf	sprintf@sp^(0+128),w
  2509  0D01  0084               	movwf	4
  2510  0D02  0820               	movf	??_sprintf^(0+128),w
  2511  0D03  1383               	bcf	3,7	;select IRP bank0
  2512  0D04  0080               	movwf	0
  2513  0D05                     l3754:
  2514  0D05  3001               	movlw	1
  2515  0D06  00A0               	movwf	??_sprintf^(0+128)
  2516  0D07  0820               	movf	??_sprintf^(0+128),w
  2517  0D08  07B8               	addwf	sprintf@sp^(0+128),f
  2518                           
  2519                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 559:    continue;
  2520  0D09  2CF5               	goto	L1
  2521  0D0A                     l3756:
  2522                           
  2523                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2524  0D0A  01B0               	clrf	sprintf@width^(0+128)
  2525  0D0B  01B1               	clrf	(sprintf@width+1)^(0+128)
  2526                           
  2527                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2528  0D0C  01AE               	clrf	sprintf@flag^(0+128)
  2529  0D0D  01AF               	clrf	(sprintf@flag+1)^(0+128)
  2530  0D0E                     l3758:
  2531                           
  2532                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)*f))
      +                           {
  2533  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  2535  0D10  0867               	movf	sprintf@f,w
  2536  0D11  0084               	movwf	4
  2537  0D12  160A  118A  2000  120A  158A  	fcall	stringdir
  2538  0D17  160A  158A  24CD  120A  158A  	fcall	_isdigit
  2539  0D1C  1C03               	btfss	3,0
  2540  0D1D  2D1F               	goto	u5681
  2541  0D1E  2D20               	goto	u5680
  2542  0D1F                     u5681:
  2543  0D1F  2D74               	goto	l3770
  2544  0D20                     u5680:
  2545  0D20                     l3760:
  2546                           
  2547                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  2548  0D20  1683               	bsf	3,5	;RP0=1, select bank1
  2549  0D21  1303               	bcf	3,6	;RP1=0, select bank1
  2550  0D22  01B0               	clrf	sprintf@width^(0+128)
  2551  0D23  01B1               	clrf	(sprintf@width+1)^(0+128)
  2552  0D24                     l3762:
  2553                           
  2554                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  2555  0D24  300A               	movlw	10
  2556  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0D27  00A0               	movwf	___wmul@multiplier
  2559  0D28  3000               	movlw	0
  2560  0D29  00A1               	movwf	___wmul@multiplier+1
  2561  0D2A  1683               	bsf	3,5	;RP0=1, select bank1
  2562  0D2B  1303               	bcf	3,6	;RP1=0, select bank1
  2563  0D2C  0831               	movf	(sprintf@width+1)^(0+128),w
  2564  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  2565  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  2566  0D2F  00A3               	movwf	___wmul@multiplicand+1
  2567  0D30  1683               	bsf	3,5	;RP0=1, select bank1
  2568  0D31  1303               	bcf	3,6	;RP1=0, select bank1
  2569  0D32  0830               	movf	sprintf@width^(0+128),w
  2570  0D33  1283               	bcf	3,5	;RP0=0, select bank0
  2571  0D34  1303               	bcf	3,6	;RP1=0, select bank0
  2572  0D35  00A2               	movwf	___wmul@multiplicand
  2573  0D36  160A  158A  2547  120A  158A  	fcall	___wmul
  2574  0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  2575  0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  2576  0D3D  0821               	movf	?___wmul+1,w
  2577  0D3E  1683               	bsf	3,5	;RP0=1, select bank1
  2578  0D3F  1303               	bcf	3,6	;RP1=0, select bank1
  2579  0D40  00B1               	movwf	(sprintf@width+1)^(0+128)
  2580  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  2581  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  2582  0D43  0820               	movf	?___wmul,w
  2583  0D44  1683               	bsf	3,5	;RP0=1, select bank1
  2584  0D45  1303               	bcf	3,6	;RP1=0, select bank1
  2585  0D46  00B0               	movwf	sprintf@width^(0+128)
  2586  0D47                     l3764:
  2587                           
  2588                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - '0';
  2589  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  2590  0D48  1303               	bcf	3,6	;RP1=0, select bank0
  2591  0D49  0867               	movf	sprintf@f,w
  2592  0D4A  0084               	movwf	4
  2593  0D4B  160A  118A  2000  120A  158A  	fcall	stringdir
  2594  0D50  3ED0               	addlw	208
  2595  0D51  1683               	bsf	3,5	;RP0=1, select bank1
  2596  0D52  1303               	bcf	3,6	;RP1=0, select bank1
  2597  0D53  00A0               	movwf	??_sprintf^(0+128)
  2598  0D54  30FF               	movlw	255
  2599  0D55  1803               	skipnc
  2600  0D56  3000               	movlw	0
  2601  0D57  00A1               	movwf	(??_sprintf^(0+128)+1)
  2602  0D58  0820               	movf	??_sprintf^(0+128),w
  2603  0D59  07B0               	addwf	sprintf@width^(0+128),f
  2604  0D5A  1803               	skipnc
  2605  0D5B  0AB1               	incf	(sprintf@width+1)^(0+128),f
  2606  0D5C  0821               	movf	(??_sprintf+1)^(0+128),w
  2607  0D5D  07B1               	addwf	(sprintf@width+1)^(0+128),f
  2608  0D5E                     l3766:
  2609  0D5E  3001               	movlw	1
  2610  0D5F  00A0               	movwf	??_sprintf^(0+128)
  2611  0D60  0820               	movf	??_sprintf^(0+128),w
  2612  0D61  1283               	bcf	3,5	;RP0=0, select bank0
  2613  0D62  1303               	bcf	3,6	;RP1=0, select bank0
  2614  0D63  07E7               	addwf	sprintf@f,f
  2615  0D64                     l3768:
  2616                           
  2617                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((unsigne
      +                          d)*f));
  2618  0D64  0867               	movf	sprintf@f,w
  2619  0D65  0084               	movwf	4
  2620  0D66  160A  118A  2000  120A  158A  	fcall	stringdir
  2621  0D6B  160A  158A  24CD  120A  158A  	fcall	_isdigit
  2622  0D70  1803               	btfsc	3,0
  2623  0D71  2D73               	goto	u5691
  2624  0D72  2D74               	goto	u5690
  2625  0D73                     u5691:
  2626  0D73  2D24               	goto	l3762
  2627  0D74                     u5690:
  2628  0D74                     l3770:
  2629                           
  2630                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
  2631  0D74  1283               	bcf	3,5	;RP0=0, select bank0
  2632  0D75  1303               	bcf	3,6	;RP1=0, select bank0
  2633  0D76  0867               	movf	sprintf@f,w
  2634  0D77  0084               	movwf	4
  2635  0D78  160A  118A  2000  120A  158A  	fcall	stringdir
  2636  0D7D  3A2E               	xorlw	46
  2637  0D7E  1D03               	skipz
  2638  0D7F  2D81               	goto	u5701
  2639  0D80  2D82               	goto	u5700
  2640  0D81                     u5701:
  2641  0D81  2DE2               	goto	l3786
  2642  0D82                     u5700:
  2643  0D82                     l3772:
  2644                           
  2645                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 629:    flag |= 0x4000;
  2646  0D82  1683               	bsf	3,5	;RP0=1, select bank1
  2647  0D83  1303               	bcf	3,6	;RP1=0, select bank1
  2648  0D84  172F               	bsf	(sprintf@flag^(0+128)+1),6
  2649  0D85                     l3774:
  2650                           
  2651                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 630:    f++;
  2652  0D85  3001               	movlw	1
  2653  0D86  00A0               	movwf	??_sprintf^(0+128)
  2654  0D87  0820               	movf	??_sprintf^(0+128),w
  2655  0D88  1283               	bcf	3,5	;RP0=0, select bank0
  2656  0D89  1303               	bcf	3,6	;RP1=0, select bank0
  2657  0D8A  07E7               	addwf	sprintf@f,f
  2658  0D8B                     l3776:
  2659                           
  2660                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 644:    {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2661  0D8B  1683               	bsf	3,5	;RP0=1, select bank1
  2662  0D8C  1303               	bcf	3,6	;RP1=0, select bank1
  2663  0D8D  01BC               	clrf	sprintf@prec^(0+128)
  2664  0D8E  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2665                           
  2666                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned
      +                          )*f)) {
  2667  0D8F  2DD0               	goto	l3784
  2668  0D90                     l3778:
  2669                           
  2670                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  2671  0D90  300A               	movlw	10
  2672  0D91  1283               	bcf	3,5	;RP0=0, select bank0
  2673  0D92  1303               	bcf	3,6	;RP1=0, select bank0
  2674  0D93  00A0               	movwf	___wmul@multiplier
  2675  0D94  3000               	movlw	0
  2676  0D95  00A1               	movwf	___wmul@multiplier+1
  2677  0D96  1683               	bsf	3,5	;RP0=1, select bank1
  2678  0D97  1303               	bcf	3,6	;RP1=0, select bank1
  2679  0D98  083D               	movf	(sprintf@prec+1)^(0+128),w
  2680  0D99  1283               	bcf	3,5	;RP0=0, select bank0
  2681  0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  2682  0D9B  00A3               	movwf	___wmul@multiplicand+1
  2683  0D9C  1683               	bsf	3,5	;RP0=1, select bank1
  2684  0D9D  1303               	bcf	3,6	;RP1=0, select bank1
  2685  0D9E  083C               	movf	sprintf@prec^(0+128),w
  2686  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  2687  0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  2688  0DA1  00A2               	movwf	___wmul@multiplicand
  2689  0DA2  160A  158A  2547  120A  158A  	fcall	___wmul
  2690  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  2691  0DA8  1303               	bcf	3,6	;RP1=0, select bank0
  2692  0DA9  0821               	movf	?___wmul+1,w
  2693  0DAA  1683               	bsf	3,5	;RP0=1, select bank1
  2694  0DAB  1303               	bcf	3,6	;RP1=0, select bank1
  2695  0DAC  00BD               	movwf	(sprintf@prec+1)^(0+128)
  2696  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2698  0DAF  0820               	movf	?___wmul,w
  2699  0DB0  1683               	bsf	3,5	;RP0=1, select bank1
  2700  0DB1  1303               	bcf	3,6	;RP1=0, select bank1
  2701  0DB2  00BC               	movwf	sprintf@prec^(0+128)
  2702  0DB3                     l3780:
  2703                           
  2704                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0';
  2705  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  2707  0DB5  0867               	movf	sprintf@f,w
  2708  0DB6  0084               	movwf	4
  2709  0DB7  160A  118A  2000  120A  158A  	fcall	stringdir
  2710  0DBC  3ED0               	addlw	208
  2711  0DBD  1683               	bsf	3,5	;RP0=1, select bank1
  2712  0DBE  1303               	bcf	3,6	;RP1=0, select bank1
  2713  0DBF  00A0               	movwf	??_sprintf^(0+128)
  2714  0DC0  30FF               	movlw	255
  2715  0DC1  1803               	skipnc
  2716  0DC2  3000               	movlw	0
  2717  0DC3  00A1               	movwf	(??_sprintf^(0+128)+1)
  2718  0DC4  0820               	movf	??_sprintf^(0+128),w
  2719  0DC5  07BC               	addwf	sprintf@prec^(0+128),f
  2720  0DC6  1803               	skipnc
  2721  0DC7  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2722  0DC8  0821               	movf	(??_sprintf+1)^(0+128),w
  2723  0DC9  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2724  0DCA                     l3782:
  2725  0DCA  3001               	movlw	1
  2726  0DCB  00A0               	movwf	??_sprintf^(0+128)
  2727  0DCC  0820               	movf	??_sprintf^(0+128),w
  2728  0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  2729  0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  2730  0DCF  07E7               	addwf	sprintf@f,f
  2731  0DD0                     l3784:
  2732                           
  2733                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned
      +                          )*f)) {
  2734  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0DD1  0867               	movf	sprintf@f,w
  2736  0DD2  0084               	movwf	4
  2737  0DD3  160A  118A  2000  120A  158A  	fcall	stringdir
  2738  0DD8  160A  158A  24CD  120A  158A  	fcall	_isdigit
  2739  0DDD  1803               	btfsc	3,0
  2740  0DDE  2DE0               	goto	u5711
  2741  0DDF  2DE1               	goto	u5710
  2742  0DE0                     u5711:
  2743  0DE0  2D90               	goto	l3778
  2744  0DE1                     u5710:
  2745  0DE1  2DEA               	goto	l3792
  2746  0DE2                     l3786:
  2747                           
  2748                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2749  0DE2  1683               	bsf	3,5	;RP0=1, select bank1
  2750  0DE3  1303               	bcf	3,6	;RP1=0, select bank1
  2751  0DE4  01BC               	clrf	sprintf@prec^(0+128)
  2752  0DE5  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2753  0DE6                     l3788:
  2754                           
  2755                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 654:    flag |= 0x1000;
  2756  0DE6  162F               	bsf	(sprintf@flag^(0+128)+1),4
  2757  0DE7  2DEA               	goto	l3792
  2758  0DE8                     l345:	
  2759                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2760                           
  2761                           
  2762                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 689:    flag |= 0x400;
  2763  0DE8  152F               	bsf	(sprintf@flag^(0+128)+1),2
  2764                           
  2765                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 690:    break;
  2766  0DE9  2E08               	goto	l3794
  2767  0DEA                     l3792:
  2768  0DEA  3001               	movlw	1
  2769  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  2771  0DED  07E7               	addwf	sprintf@f,f
  2772  0DEE  30FF               	movlw	-1
  2773  0DEF  0767               	addwf	sprintf@f,w
  2774  0DF0  0084               	movwf	4
  2775  0DF1  160A  118A  2000  120A  158A  	fcall	stringdir
  2776  0DF6  1683               	bsf	3,5	;RP0=1, select bank1
  2777  0DF7  1303               	bcf	3,6	;RP1=0, select bank1
  2778  0DF8  00BE               	movwf	sprintf@c^(0+128)
  2779  0DF9  00A0               	movwf	??_sprintf^(0+128)
  2780  0DFA  01A1               	clrf	(??_sprintf^(0+128)+1)
  2781                           
  2782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2783                           ; Switch size 1, requested type "simple"
  2784                           ; Number of cases is 1, Range of values is 0 to 0
  2785                           ; switch strategies available:
  2786                           ; Name         Instructions Cycles
  2787                           ; simple_byte            4     3 (average)
  2788                           ; direct_byte           11     8 (fixed)
  2789                           ; jumptable            260     6 (fixed)
  2790                           ;	Chosen strategy is simple_byte
  2791  0DFB  0821               	movf	(??_sprintf+1)^(0+128),w
  2792  0DFC  3A00               	xorlw	0	; case 0
  2793  0DFD  1903               	skipnz
  2794  0DFE  2E00               	goto	l4096
  2795  0DFF  2CF5               	goto	L1
  2796  0E00                     l4096:
  2797                           
  2798                           ; Switch size 1, requested type "simple"
  2799                           ; Number of cases is 2, Range of values is 0 to 102
  2800                           ; switch strategies available:
  2801                           ; Name         Instructions Cycles
  2802                           ; simple_byte            7     4 (average)
  2803                           ; jumptable            260     6 (fixed)
  2804                           ;	Chosen strategy is simple_byte
  2805  0E00  0820               	movf	??_sprintf^(0+128),w
  2806  0E01  3A00               	xorlw	0	; case 0
  2807  0E02  1903               	skipnz
  2808  0E03  2FFD               	goto	L3
  2809  0E04  3A66               	xorlw	102	; case 102
  2810  0E05  1903               	skipnz
  2811  0E06  2DE8               	goto	l345
  2812  0E07  2CF5               	goto	L1
  2813  0E08                     l3794:
  2814                           
  2815                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 851:   if(flag & (0x700)) {
  2816  0E08  3000               	movlw	0
  2817  0E09  052E               	andwf	sprintf@flag^(0+128),w
  2818  0E0A  00A0               	movwf	??_sprintf^(0+128)
  2819  0E0B  3007               	movlw	7
  2820  0E0C  052F               	andwf	(sprintf@flag+1)^(0+128),w
  2821  0E0D  00A1               	movwf	(??_sprintf+1)^(0+128)
  2822  0E0E  0820               	movf	??_sprintf^(0+128),w
  2823  0E0F  0421               	iorwf	(??_sprintf^(0+128)+1),w
  2824  0E10  1903               	btfsc	3,2
  2825  0E11  2E13               	goto	u5721
  2826  0E12  2E16               	goto	u5720
  2827  0E13                     u5721:
  2828  0E13  120A  118A  2CBD   	goto	l3950
  2829  0E16                     u5720:
  2830  0E16                     l3796:
  2831                           
  2832                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 853:    if(flag & 0x1000)
  2833  0E16  1E2F               	btfss	(sprintf@flag+1)^(0+128),4
  2834  0E17  2E19               	goto	u5731
  2835  0E18  2E1A               	goto	u5730
  2836  0E19                     u5731:
  2837  0E19  2E1E               	goto	l3800
  2838  0E1A                     u5730:
  2839  0E1A                     l3798:
  2840                           
  2841                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 855:     prec = 6;
  2842  0E1A  3006               	movlw	6
  2843  0E1B  00BC               	movwf	sprintf@prec^(0+128)
  2844  0E1C  3000               	movlw	0
  2845  0E1D  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2846  0E1E                     l3800:
  2847                           
  2848                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 856:    fval = (*(double *)__va_
      +                          arg((*(double **)ap), (double)0));
  2849  0E1E  0829               	movf	sprintf@ap^(0+128),w
  2850  0E1F  0084               	movwf	4
  2851  0E20  1383               	bcf	3,7	;select IRP bank0
  2852  0E21  0800               	movf	0,w
  2853  0E22  00B9               	movwf	sprintf@fval^(0+128)
  2854  0E23  0A84               	incf	4,f
  2855  0E24  0800               	movf	0,w
  2856  0E25  00BA               	movwf	(sprintf@fval+1)^(0+128)
  2857  0E26  0A84               	incf	4,f
  2858  0E27  0800               	movf	0,w
  2859  0E28  00BB               	movwf	(sprintf@fval+2)^(0+128)
  2860  0E29                     l3802:
  2861  0E29  3003               	movlw	3
  2862  0E2A  00A0               	movwf	??_sprintf^(0+128)
  2863  0E2B  0820               	movf	??_sprintf^(0+128),w
  2864  0E2C  07A9               	addwf	sprintf@ap^(0+128),f
  2865  0E2D                     l3804:
  2866                           
  2867                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 857:    if(fval < 0.0) {
  2868  0E2D  0839               	movf	sprintf@fval^(0+128),w
  2869  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0E30  00A0               	movwf	___ftge@ff1
  2872  0E31  1683               	bsf	3,5	;RP0=1, select bank1
  2873  0E32  1303               	bcf	3,6	;RP1=0, select bank1
  2874  0E33  083A               	movf	(sprintf@fval+1)^(0+128),w
  2875  0E34  1283               	bcf	3,5	;RP0=0, select bank0
  2876  0E35  1303               	bcf	3,6	;RP1=0, select bank0
  2877  0E36  00A1               	movwf	___ftge@ff1+1
  2878  0E37  1683               	bsf	3,5	;RP0=1, select bank1
  2879  0E38  1303               	bcf	3,6	;RP1=0, select bank1
  2880  0E39  083B               	movf	(sprintf@fval+2)^(0+128),w
  2881  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  2882  0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  2883  0E3C  00A2               	movwf	___ftge@ff1+2
  2884  0E3D  3000               	movlw	0
  2885  0E3E  00A3               	movwf	___ftge@ff2
  2886  0E3F  3000               	movlw	0
  2887  0E40  00A4               	movwf	___ftge@ff2+1
  2888  0E41  3000               	movlw	0
  2889  0E42  00A5               	movwf	___ftge@ff2+2
  2890  0E43  160A  158A  2636  120A  158A  	fcall	___ftge
  2891  0E48  1803               	btfsc	3,0
  2892  0E49  2E4B               	goto	u5741
  2893  0E4A  2E4C               	goto	u5740
  2894  0E4B                     u5741:
  2895  0E4B  2E79               	goto	l3810
  2896  0E4C                     u5740:
  2897  0E4C                     l3806:
  2898                           
  2899                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 858:     fval = -fval;
  2900  0E4C  1683               	bsf	3,5	;RP0=1, select bank1
  2901  0E4D  1303               	bcf	3,6	;RP1=0, select bank1
  2902  0E4E  0839               	movf	sprintf@fval^(0+128),w
  2903  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  2904  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  2905  0E51  00A0               	movwf	___ftneg@f1
  2906  0E52  1683               	bsf	3,5	;RP0=1, select bank1
  2907  0E53  1303               	bcf	3,6	;RP1=0, select bank1
  2908  0E54  083A               	movf	(sprintf@fval+1)^(0+128),w
  2909  0E55  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0E56  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0E57  00A1               	movwf	___ftneg@f1+1
  2912  0E58  1683               	bsf	3,5	;RP0=1, select bank1
  2913  0E59  1303               	bcf	3,6	;RP1=0, select bank1
  2914  0E5A  083B               	movf	(sprintf@fval+2)^(0+128),w
  2915  0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  2916  0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  2917  0E5D  00A2               	movwf	___ftneg@f1+2
  2918  0E5E  160A  158A  249B  120A  158A  	fcall	___ftneg
  2919  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  2920  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  2921  0E65  0820               	movf	?___ftneg,w
  2922  0E66  1683               	bsf	3,5	;RP0=1, select bank1
  2923  0E67  1303               	bcf	3,6	;RP1=0, select bank1
  2924  0E68  00B9               	movwf	sprintf@fval^(0+128)
  2925  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  2926  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  2927  0E6B  0821               	movf	?___ftneg+1,w
  2928  0E6C  1683               	bsf	3,5	;RP0=1, select bank1
  2929  0E6D  1303               	bcf	3,6	;RP1=0, select bank1
  2930  0E6E  00BA               	movwf	(sprintf@fval+1)^(0+128)
  2931  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  2932  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  2933  0E71  0822               	movf	?___ftneg+2,w
  2934  0E72  1683               	bsf	3,5	;RP0=1, select bank1
  2935  0E73  1303               	bcf	3,6	;RP1=0, select bank1
  2936  0E74  00BB               	movwf	(sprintf@fval+2)^(0+128)
  2937  0E75                     l3808:
  2938                           
  2939                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 859:     flag |= 0x03;
  2940  0E75  3003               	movlw	3
  2941  0E76  04AE               	iorwf	sprintf@flag^(0+128),f
  2942  0E77  3000               	movlw	0
  2943  0E78  04AF               	iorwf	(sprintf@flag+1)^(0+128),f
  2944  0E79                     l3810:
  2945                           
  2946                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2947  0E79  1683               	bsf	3,5	;RP0=1, select bank1
  2948  0E7A  1303               	bcf	3,6	;RP1=0, select bank1
  2949  0E7B  01B6               	clrf	sprintf@eexp^(0+128)
  2950  0E7C  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  2951  0E7D                     l3812:
  2952                           
  2953                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 862:    if( fval!=0) {
  2954  0E7D  083B               	movf	(sprintf@fval+2)^(0+128),w
  2955  0E7E  043A               	iorwf	(sprintf@fval+1)^(0+128),w
  2956  0E7F  0439               	iorwf	sprintf@fval^(0+128),w
  2957  0E80  1903               	skipnz
  2958  0E81  2E83               	goto	u5751
  2959  0E82  2E84               	goto	u5750
  2960  0E83                     u5751:
  2961  0E83  2FA2               	goto	l3838
  2962  0E84                     u5750:
  2963  0E84                     l3814:
  2964                           
  2965                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 863:     (void)(*(&eexp) = ((*(u
      +                          nsigned long *)&fval >> 15) & 255) - 126);
  2966  0E84  30B9               	movlw	low (sprintf@fval| 0)
  2967  0E85  0084               	movwf	4
  2968  0E86  1383               	bcf	3,7	;select IRP bank1
  2969  0E87  0800               	movf	0,w
  2970  0E88  00A0               	movwf	??_sprintf^(0+128)
  2971  0E89  0A84               	incf	4,f
  2972  0E8A  0800               	movf	0,w
  2973  0E8B  00A1               	movwf	(??_sprintf^(0+128)+1)
  2974  0E8C  0A84               	incf	4,f
  2975  0E8D  0800               	movf	0,w
  2976  0E8E  00A2               	movwf	(??_sprintf^(0+128)+2)
  2977  0E8F  0A84               	incf	4,f
  2978  0E90  0800               	movf	0,w
  2979  0E91  00A3               	movwf	(??_sprintf^(0+128)+3)
  2980  0E92  300F               	movlw	15
  2981  0E93                     u5765:
  2982  0E93  1003               	clrc
  2983  0E94  0CA3               	rrf	(??_sprintf^(0+128)+3),f
  2984  0E95  0CA2               	rrf	(??_sprintf^(0+128)+2),f
  2985  0E96  0CA1               	rrf	(??_sprintf^(0+128)+1),f
  2986  0E97  0CA0               	rrf	??_sprintf^(0+128),f
  2987  0E98                     u5760:
  2988  0E98  3EFF               	addlw	-1
  2989  0E99  1D03               	skipz
  2990  0E9A  2E93               	goto	u5765
  2991  0E9B  30FF               	movlw	255
  2992  0E9C  0520               	andwf	??_sprintf^(0+128),w
  2993  0E9D  00A4               	movwf	(??_sprintf+4)^(0+128)
  2994  0E9E  3000               	movlw	0
  2995  0E9F  0521               	andwf	(??_sprintf+1)^(0+128),w
  2996  0EA0  00A5               	movwf	(??_sprintf+5)^(0+128)
  2997  0EA1  0824               	movf	(??_sprintf+4)^(0+128),w
  2998  0EA2  3E82               	addlw	130
  2999  0EA3  00B6               	movwf	sprintf@eexp^(0+128)
  3000  0EA4  0825               	movf	(??_sprintf+5)^(0+128),w
  3001  0EA5  1803               	skipnc
  3002  0EA6  3E01               	addlw	1
  3003  0EA7  3EFF               	addlw	255
  3004  0EA8  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  3005  0EA9                     l3816:
  3006                           
  3007                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  3008  0EA9  30FF               	movlw	255
  3009  0EAA  07B6               	addwf	sprintf@eexp^(0+128),f
  3010  0EAB  1803               	skipnc
  3011  0EAC  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  3012  0EAD  30FF               	movlw	255
  3013  0EAE  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  3014  0EAF                     l3818:
  3015                           
  3016                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 865:     eexp *= 3;
  3017  0EAF  3003               	movlw	3
  3018  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0EB2  00A0               	movwf	___wmul@multiplier
  3021  0EB3  3000               	movlw	0
  3022  0EB4  00A1               	movwf	___wmul@multiplier+1
  3023  0EB5  1683               	bsf	3,5	;RP0=1, select bank1
  3024  0EB6  1303               	bcf	3,6	;RP1=0, select bank1
  3025  0EB7  0837               	movf	(sprintf@eexp+1)^(0+128),w
  3026  0EB8  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0EB9  1303               	bcf	3,6	;RP1=0, select bank0
  3028  0EBA  00A3               	movwf	___wmul@multiplicand+1
  3029  0EBB  1683               	bsf	3,5	;RP0=1, select bank1
  3030  0EBC  1303               	bcf	3,6	;RP1=0, select bank1
  3031  0EBD  0836               	movf	sprintf@eexp^(0+128),w
  3032  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  3034  0EC0  00A2               	movwf	___wmul@multiplicand
  3035  0EC1  160A  158A  2547  120A  158A  	fcall	___wmul
  3036  0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  3037  0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  3038  0EC8  0821               	movf	?___wmul+1,w
  3039  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  3040  0ECA  1303               	bcf	3,6	;RP1=0, select bank1
  3041  0ECB  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  3042  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  3043  0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  3044  0ECE  0820               	movf	?___wmul,w
  3045  0ECF  1683               	bsf	3,5	;RP0=1, select bank1
  3046  0ED0  1303               	bcf	3,6	;RP1=0, select bank1
  3047  0ED1  00B6               	movwf	sprintf@eexp^(0+128)
  3048  0ED2                     l3820:
  3049                           
  3050                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 866:     eexp /= 10;
  3051  0ED2  300A               	movlw	10
  3052  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  3053  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  3054  0ED5  00A7               	movwf	___awdiv@divisor
  3055  0ED6  3000               	movlw	0
  3056  0ED7  00A8               	movwf	___awdiv@divisor+1
  3057  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  3058  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  3059  0EDA  0837               	movf	(sprintf@eexp+1)^(0+128),w
  3060  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  3061  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  3062  0EDD  00AA               	movwf	___awdiv@dividend+1
  3063  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  3064  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  3065  0EE0  0836               	movf	sprintf@eexp^(0+128),w
  3066  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3067  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  3068  0EE3  00A9               	movwf	___awdiv@dividend
  3069  0EE4  160A  118A  2172  120A  158A  	fcall	___awdiv
  3070  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  3072  0EEB  0828               	movf	?___awdiv+1,w
  3073  0EEC  1683               	bsf	3,5	;RP0=1, select bank1
  3074  0EED  1303               	bcf	3,6	;RP1=0, select bank1
  3075  0EEE  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  3076  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  3077  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  3078  0EF1  0827               	movf	?___awdiv,w
  3079  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  3080  0EF3  1303               	bcf	3,6	;RP1=0, select bank1
  3081  0EF4  00B6               	movwf	sprintf@eexp^(0+128)
  3082  0EF5                     l3822:
  3083                           
  3084                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 867:     if(eexp < 0)
  3085  0EF5  1FB7               	btfss	(sprintf@eexp+1)^(0+128),7
  3086  0EF6  2EF8               	goto	u5771
  3087  0EF7  2EF9               	goto	u5770
  3088  0EF8                     u5771:
  3089  0EF8  2EFF               	goto	l3826
  3090  0EF9                     u5770:
  3091  0EF9                     l3824:
  3092                           
  3093                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  3094  0EF9  30FF               	movlw	255
  3095  0EFA  07B6               	addwf	sprintf@eexp^(0+128),f
  3096  0EFB  1803               	skipnc
  3097  0EFC  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  3098  0EFD  30FF               	movlw	255
  3099  0EFE  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  3100  0EFF                     l3826:
  3101                           
  3102                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 872:     tmpval.integ = scale(-e
      +                          exp);
  3103  0EFF  0336               	decf	sprintf@eexp^(0+128),w
  3104  0F00  3AFF               	xorlw	255
  3105  0F01  120A  158A  222B  120A  158A  	fcall	_scale
  3106  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  3107  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  3108  0F08  0844               	movf	?_scale,w
  3109  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  3110  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  3111  0F0B  00B2               	movwf	sprintf@tmpval^(0+128)
  3112  0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  3113  0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  3114  0F0E  0845               	movf	?_scale+1,w
  3115  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  3116  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  3117  0F11  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  3118  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  3119  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  3120  0F14  0846               	movf	?_scale+2,w
  3121  0F15  1683               	bsf	3,5	;RP0=1, select bank1
  3122  0F16  1303               	bcf	3,6	;RP1=0, select bank1
  3123  0F17  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  3124  0F18                     l3828:
  3125                           
  3126                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 873:     tmpval.integ *= fval;
  3127  0F18  0839               	movf	sprintf@fval^(0+128),w
  3128  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3129  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  3130  0F1B  00B4               	movwf	___ftmul@f1
  3131  0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  3132  0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  3133  0F1E  083A               	movf	(sprintf@fval+1)^(0+128),w
  3134  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  3135  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  3136  0F21  00B5               	movwf	___ftmul@f1+1
  3137  0F22  1683               	bsf	3,5	;RP0=1, select bank1
  3138  0F23  1303               	bcf	3,6	;RP1=0, select bank1
  3139  0F24  083B               	movf	(sprintf@fval+2)^(0+128),w
  3140  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  3142  0F27  00B6               	movwf	___ftmul@f1+2
  3143  0F28  1683               	bsf	3,5	;RP0=1, select bank1
  3144  0F29  1303               	bcf	3,6	;RP1=0, select bank1
  3145  0F2A  0832               	movf	sprintf@tmpval^(0+128),w
  3146  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  3147  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  3148  0F2D  00B7               	movwf	___ftmul@f2
  3149  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
  3150  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
  3151  0F30  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  3152  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  3153  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  3154  0F33  00B8               	movwf	___ftmul@f2+1
  3155  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  3156  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  3157  0F36  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  3158  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  3159  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  3160  0F39  00B9               	movwf	___ftmul@f2+2
  3161  0F3A  120A  158A  2010  120A  158A  	fcall	___ftmul
  3162  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3163  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3164  0F41  0834               	movf	?___ftmul,w
  3165  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  3166  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  3167  0F44  00B2               	movwf	sprintf@tmpval^(0+128)
  3168  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0F47  0835               	movf	?___ftmul+1,w
  3171  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  3172  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  3173  0F4A  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  3174  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  3175  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  3176  0F4D  0836               	movf	?___ftmul+2,w
  3177  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  3178  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  3179  0F50  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  3180  0F51                     l3830:
  3181                           
  3182                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 874:     if(tmpval.integ < 1.0)
  3183  0F51  0832               	movf	sprintf@tmpval^(0+128),w
  3184  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3185  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  3186  0F54  00A0               	movwf	___ftge@ff1
  3187  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  3188  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  3189  0F57  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  3190  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  3191  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  3192  0F5A  00A1               	movwf	___ftge@ff1+1
  3193  0F5B  1683               	bsf	3,5	;RP0=1, select bank1
  3194  0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  3195  0F5D  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  3196  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0F60  00A2               	movwf	___ftge@ff1+2
  3199  0F61  3000               	movlw	0
  3200  0F62  00A3               	movwf	___ftge@ff2
  3201  0F63  3080               	movlw	128
  3202  0F64  00A4               	movwf	___ftge@ff2+1
  3203  0F65  303F               	movlw	63
  3204  0F66  00A5               	movwf	___ftge@ff2+2
  3205  0F67  160A  158A  2636  120A  158A  	fcall	___ftge
  3206  0F6C  1803               	btfsc	3,0
  3207  0F6D  2F6F               	goto	u5781
  3208  0F6E  2F70               	goto	u5780
  3209  0F6F                     u5781:
  3210  0F6F  2F79               	goto	l3834
  3211  0F70                     u5780:
  3212  0F70                     l3832:
  3213                           
  3214                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3215  0F70  30FF               	movlw	255
  3216  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  3217  0F72  1303               	bcf	3,6	;RP1=0, select bank1
  3218  0F73  07B6               	addwf	sprintf@eexp^(0+128),f
  3219  0F74  1803               	skipnc
  3220  0F75  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  3221  0F76  30FF               	movlw	255
  3222  0F77  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  3223  0F78  2FA2               	goto	l3838
  3224  0F79                     l3834:
  3225  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  3226  0F7A  1303               	bcf	3,6	;RP1=0, select bank1
  3227  0F7B  0832               	movf	sprintf@tmpval^(0+128),w
  3228  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  3230  0F7E  00A0               	movwf	___ftge@ff1
  3231  0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  3232  0F80  1303               	bcf	3,6	;RP1=0, select bank1
  3233  0F81  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  3234  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  3235  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  3236  0F84  00A1               	movwf	___ftge@ff1+1
  3237  0F85  1683               	bsf	3,5	;RP0=1, select bank1
  3238  0F86  1303               	bcf	3,6	;RP1=0, select bank1
  3239  0F87  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  3240  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  3241  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  3242  0F8A  00A2               	movwf	___ftge@ff1+2
  3243  0F8B  3000               	movlw	0
  3244  0F8C  00A3               	movwf	___ftge@ff2
  3245  0F8D  3020               	movlw	32
  3246  0F8E  00A4               	movwf	___ftge@ff2+1
  3247  0F8F  3041               	movlw	65
  3248  0F90  00A5               	movwf	___ftge@ff2+2
  3249  0F91  160A  158A  2636  120A  158A  	fcall	___ftge
  3250  0F96  1C03               	btfss	3,0
  3251  0F97  2F99               	goto	u5791
  3252  0F98  2F9A               	goto	u5790
  3253  0F99                     u5791:
  3254  0F99  2FA2               	goto	l3838
  3255  0F9A                     u5790:
  3256  0F9A                     l3836:
  3257                           
  3258                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3259  0F9A  3001               	movlw	1
  3260  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  3261  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  3262  0F9D  07B6               	addwf	sprintf@eexp^(0+128),f
  3263  0F9E  1803               	skipnc
  3264  0F9F  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  3265  0FA0  3000               	movlw	0
  3266  0FA1  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  3267  0FA2                     l3838:
  3268                           
  3269                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1138:      if(prec <= 12)
  3270  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  3271  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  3272  0FA4  083D               	movf	(sprintf@prec+1)^(0+128),w
  3273  0FA5  3A80               	xorlw	128
  3274  0FA6  00FF               	movwf	btemp+1
  3275  0FA7  3080               	movlw	128
  3276  0FA8  027F               	subwf	btemp+1,w
  3277  0FA9  1D03               	skipz
  3278  0FAA  2FAD               	goto	u5805
  3279  0FAB  300D               	movlw	13
  3280  0FAC  023C               	subwf	sprintf@prec^(0+128),w
  3281  0FAD                     u5805:
  3282  0FAD  1803               	skipnc
  3283  0FAE  2FB0               	goto	u5801
  3284  0FAF  2FB1               	goto	u5800
  3285  0FB0                     u5801:
  3286  0FB0  2FEA               	goto	l3842
  3287  0FB1                     u5800:
  3288  0FB1                     l3840:
  3289                           
  3290                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1139:       fval += fround((unsi
      +                          gned int)prec);
  3291  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  3292  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  3293  0FB3  083C               	movf	sprintf@prec^(0+128),w
  3294  0FB4  120A  118A  259F  120A  158A  	fcall	_fround
  3295  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  3296  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  3297  0FBB  0844               	movf	?_fround,w
  3298  0FBC  00D4               	movwf	___ftadd@f1
  3299  0FBD  0845               	movf	?_fround+1,w
  3300  0FBE  00D5               	movwf	___ftadd@f1+1
  3301  0FBF  0846               	movf	?_fround+2,w
  3302  0FC0  00D6               	movwf	___ftadd@f1+2
  3303  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  3304  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  3305  0FC3  0839               	movf	sprintf@fval^(0+128),w
  3306  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  3307  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  3308  0FC6  00D7               	movwf	___ftadd@f2
  3309  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  3310  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  3311  0FC9  083A               	movf	(sprintf@fval+1)^(0+128),w
  3312  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3314  0FCC  00D8               	movwf	___ftadd@f2+1
  3315  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  3316  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  3317  0FCF  083B               	movf	(sprintf@fval+2)^(0+128),w
  3318  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3319  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  3320  0FD2  00D9               	movwf	___ftadd@f2+2
  3321  0FD3  120A  158A  20F5  120A  158A  	fcall	___ftadd
  3322  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  3324  0FDA  0854               	movf	?___ftadd,w
  3325  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3326  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  3327  0FDD  00B9               	movwf	sprintf@fval^(0+128)
  3328  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  3330  0FE0  0855               	movf	?___ftadd+1,w
  3331  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  3332  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  3333  0FE3  00BA               	movwf	(sprintf@fval+1)^(0+128)
  3334  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  3335  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  3336  0FE6  0856               	movf	?___ftadd+2,w
  3337  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  3338  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  3339  0FE9  00BB               	movwf	(sprintf@fval+2)^(0+128)
  3340  0FEA                     l3842:
  3341                           
  3342                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1142:     if((eexp > 9)||(fval !
      +                          = 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3343  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  3344  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  3345  0FEC  0837               	movf	(sprintf@eexp+1)^(0+128),w
  3346  0FED  3A80               	xorlw	128
  3347  0FEE  00FF               	movwf	btemp+1
  3348  0FEF  3080               	movlw	128
  3349  0FF0  027F               	subwf	btemp+1,w
  3350  0FF1  1D03               	skipz
  3351  0FF2  2FF5               	goto	u5815
  3352  0FF3  300A               	movlw	10
  3353  0FF4  0236               	subwf	sprintf@eexp^(0+128),w
  3354  0FF5                     u5815:
  3355  0FF5  1803               	skipnc
  3356  0FF6  2FFA               	goto	u5811
  3357  0FF7  120A  118A  2844   	goto	u5810
  3358  0FFA                     u5811:
  3359  0FFA  120A  118A  287B   	goto	l3850
  3360  0FFD                     L3:
  3361  0FFD                     L2:
  3362  0FFD  120A  118A  2D9A   	ljmp	l3998
  3363                           
  3364                           	psect	text6
  3365  0A2B                     __ptext6:	
  3366 ;; *************** function _scale *****************
  3367 ;; Defined at:
  3368 ;;		line 433 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  scl             1    wreg     char 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  scl             1   44[BANK0 ] char 
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  3   36[BANK0 ] char 
  3375 ;; Registers used:
  3376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3382 ;;      Params:         0       3       0       0       0
  3383 ;;      Locals:         0       4       0       0       0
  3384 ;;      Temps:          0       2       0       0       0
  3385 ;;      Totals:         0       9       0       0       0
  3386 ;;Total ram usage:        9 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    4
  3389 ;; This function calls:
  3390 ;;		___awdiv
  3391 ;;		___awmod
  3392 ;;		___bmul
  3393 ;;		___ftmul
  3394 ;; This function is called by:
  3395 ;;		_sprintf
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           
  3400                           ;psect for function _scale
  3401  0A2B                     _scale:
  3402                           
  3403                           ;incstack = 0
  3404                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3405                           ;scale@scl stored from wreg
  3406  0A2B  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0A2C  1303               	bcf	3,6	;RP1=0, select bank0
  3408  0A2D  00CC               	movwf	scale@scl
  3409  0A2E                     l3492:
  3410                           
  3411                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 433: scale(signed char scl);D:\M
      +                          PLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 434: {;D:\MPLAB XC8 compiler\pic\sour
      +                          ces\c90\common\doprnt.c: 436:  if(scl < 0) {
  3412  0A2E  1FCC               	btfss	scale@scl,7
  3413  0A2F  2A31               	goto	u5191
  3414  0A30  2A32               	goto	u5190
  3415  0A31                     u5191:
  3416  0A31  2B91               	goto	l3514
  3417  0A32                     u5190:
  3418  0A32                     l3494:
  3419                           
  3420                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 437:   scl = -scl;
  3421  0A32  09CC               	comf	scale@scl,f
  3422  0A33  0ACC               	incf	scale@scl,f
  3423  0A34                     l3496:
  3424                           
  3425                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 438:   if(scl>=110)
  3426  0A34  084C               	movf	scale@scl,w
  3427  0A35  3A80               	xorlw	128
  3428  0A36  3E12               	addlw	-238
  3429  0A37  1C03               	skipc
  3430  0A38  2A3A               	goto	u5201
  3431  0A39  2A3B               	goto	u5200
  3432  0A3A                     u5201:
  3433  0A3A  2AFB               	goto	l3504
  3434  0A3B                     u5200:
  3435  0A3B                     l3498:
  3436                           
  3437                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsign
      +                          ed char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigned
      +                           char)(scl%10)];
  3438  0A3B  3003               	movlw	3
  3439  0A3C  00C7               	movwf	??_scale
  3440  0A3D  0847               	movf	??_scale,w
  3441  0A3E  00B0               	movwf	___bmul@multiplicand
  3442  0A3F  084C               	movf	scale@scl,w
  3443  0A40  00A2               	movwf	___awmod@dividend
  3444  0A41  01A3               	clrf	___awmod@dividend+1
  3445  0A42  1BA2               	btfsc	___awmod@dividend,7
  3446  0A43  03A3               	decf	___awmod@dividend+1,f
  3447  0A44  3064               	movlw	100
  3448  0A45  00A0               	movwf	___awmod@divisor
  3449  0A46  3000               	movlw	0
  3450  0A47  00A1               	movwf	___awmod@divisor+1
  3451  0A48  160A  158A  2748  120A  158A  	fcall	___awmod
  3452  0A4D  1283               	bcf	3,5	;RP0=0, select bank0
  3453  0A4E  1303               	bcf	3,6	;RP1=0, select bank0
  3454  0A4F  0821               	movf	?___awmod+1,w
  3455  0A50  00AA               	movwf	___awdiv@dividend+1
  3456  0A51  0820               	movf	?___awmod,w
  3457  0A52  00A9               	movwf	___awdiv@dividend
  3458  0A53  300A               	movlw	10
  3459  0A54  00A7               	movwf	___awdiv@divisor
  3460  0A55  3000               	movlw	0
  3461  0A56  00A8               	movwf	___awdiv@divisor+1
  3462  0A57  160A  118A  2172  120A  158A  	fcall	___awdiv
  3463  0A5C  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0A5D  1303               	bcf	3,6	;RP1=0, select bank0
  3465  0A5E  0827               	movf	?___awdiv,w
  3466  0A5F  160A  158A  250B  120A  158A  	fcall	___bmul
  3467  0A64  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3468  0A65  0084               	movwf	4
  3469  0A66  160A  118A  2000  120A  158A  	fcall	stringdir
  3470  0A6B  1283               	bcf	3,5	;RP0=0, select bank0
  3471  0A6C  1303               	bcf	3,6	;RP1=0, select bank0
  3472  0A6D  00B4               	movwf	___ftmul@f1
  3473  0A6E  160A  118A  2000  120A  158A  	fcall	stringdir
  3474  0A73  00B5               	movwf	___ftmul@f1+1
  3475  0A74  160A  118A  2000  120A  158A  	fcall	stringdir
  3476  0A79  00B6               	movwf	___ftmul@f1+2
  3477  0A7A  3003               	movlw	3
  3478  0A7B  00C8               	movwf	??_scale+1
  3479  0A7C  0848               	movf	??_scale+1,w
  3480  0A7D  00B0               	movwf	___bmul@multiplicand
  3481  0A7E  084C               	movf	scale@scl,w
  3482  0A7F  00A9               	movwf	___awdiv@dividend
  3483  0A80  01AA               	clrf	___awdiv@dividend+1
  3484  0A81  1BA9               	btfsc	___awdiv@dividend,7
  3485  0A82  03AA               	decf	___awdiv@dividend+1,f
  3486  0A83  3064               	movlw	100
  3487  0A84  00A7               	movwf	___awdiv@divisor
  3488  0A85  3000               	movlw	0
  3489  0A86  00A8               	movwf	___awdiv@divisor+1
  3490  0A87  160A  118A  2172  120A  158A  	fcall	___awdiv
  3491  0A8C  1283               	bcf	3,5	;RP0=0, select bank0
  3492  0A8D  1303               	bcf	3,6	;RP1=0, select bank0
  3493  0A8E  0827               	movf	?___awdiv,w
  3494  0A8F  160A  158A  250B  120A  158A  	fcall	___bmul
  3495  0A94  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3496  0A95  0084               	movwf	4
  3497  0A96  160A  118A  2000  120A  158A  	fcall	stringdir
  3498  0A9B  1283               	bcf	3,5	;RP0=0, select bank0
  3499  0A9C  1303               	bcf	3,6	;RP1=0, select bank0
  3500  0A9D  00B7               	movwf	___ftmul@f2
  3501  0A9E  160A  118A  2000  120A  158A  	fcall	stringdir
  3502  0AA3  00B8               	movwf	___ftmul@f2+1
  3503  0AA4  160A  118A  2000  120A  158A  	fcall	stringdir
  3504  0AA9  00B9               	movwf	___ftmul@f2+2
  3505  0AAA  120A  158A  2010  120A  158A  	fcall	___ftmul
  3506  0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  3507  0AB0  1303               	bcf	3,6	;RP1=0, select bank0
  3508  0AB1  0834               	movf	?___ftmul,w
  3509  0AB2  00C9               	movwf	_scale$1051
  3510  0AB3  0835               	movf	?___ftmul+1,w
  3511  0AB4  00CA               	movwf	_scale$1051+1
  3512  0AB5  0836               	movf	?___ftmul+2,w
  3513  0AB6  00CB               	movwf	_scale$1051+2
  3514                           
  3515                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsign
      +                          ed char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigned
      +                           char)(scl%10)];
  3516  0AB7  3003               	movlw	3
  3517  0AB8  00C7               	movwf	??_scale
  3518  0AB9  0847               	movf	??_scale,w
  3519  0ABA  00B0               	movwf	___bmul@multiplicand
  3520  0ABB  084C               	movf	scale@scl,w
  3521  0ABC  00A2               	movwf	___awmod@dividend
  3522  0ABD  01A3               	clrf	___awmod@dividend+1
  3523  0ABE  1BA2               	btfsc	___awmod@dividend,7
  3524  0ABF  03A3               	decf	___awmod@dividend+1,f
  3525  0AC0  300A               	movlw	10
  3526  0AC1  00A0               	movwf	___awmod@divisor
  3527  0AC2  3000               	movlw	0
  3528  0AC3  00A1               	movwf	___awmod@divisor+1
  3529  0AC4  160A  158A  2748  120A  158A  	fcall	___awmod
  3530  0AC9  1283               	bcf	3,5	;RP0=0, select bank0
  3531  0ACA  1303               	bcf	3,6	;RP1=0, select bank0
  3532  0ACB  0820               	movf	?___awmod,w
  3533  0ACC  160A  158A  250B  120A  158A  	fcall	___bmul
  3534  0AD1  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3535  0AD2  0084               	movwf	4
  3536  0AD3  160A  118A  2000  120A  158A  	fcall	stringdir
  3537  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
  3538  0AD9  1303               	bcf	3,6	;RP1=0, select bank0
  3539  0ADA  00B4               	movwf	___ftmul@f1
  3540  0ADB  160A  118A  2000  120A  158A  	fcall	stringdir
  3541  0AE0  00B5               	movwf	___ftmul@f1+1
  3542  0AE1  160A  118A  2000  120A  158A  	fcall	stringdir
  3543  0AE6  00B6               	movwf	___ftmul@f1+2
  3544  0AE7  0849               	movf	_scale$1051,w
  3545  0AE8  00B7               	movwf	___ftmul@f2
  3546  0AE9  084A               	movf	_scale$1051+1,w
  3547  0AEA  00B8               	movwf	___ftmul@f2+1
  3548  0AEB  084B               	movf	_scale$1051+2,w
  3549  0AEC  00B9               	movwf	___ftmul@f2+2
  3550  0AED  120A  158A  2010  120A  158A  	fcall	___ftmul
  3551  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  3552  0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  3553  0AF4  0834               	movf	?___ftmul,w
  3554  0AF5  00C4               	movwf	?_scale
  3555  0AF6  0835               	movf	?___ftmul+1,w
  3556  0AF7  00C5               	movwf	?_scale+1
  3557  0AF8  0836               	movf	?___ftmul+2,w
  3558  0AF9  00C6               	movwf	?_scale+2
  3559  0AFA  2CED               	goto	l323
  3560  0AFB                     l3504:
  3561  0AFB  084C               	movf	scale@scl,w
  3562  0AFC  3A80               	xorlw	128
  3563  0AFD  3E75               	addlw	-139
  3564  0AFE  1C03               	skipc
  3565  0AFF  2B01               	goto	u5211
  3566  0B00  2B02               	goto	u5210
  3567  0B01                     u5211:
  3568  0B01  2B70               	goto	l3510
  3569  0B02                     u5210:
  3570  0B02                     l3506:
  3571                           
  3572                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 441:    return _npowers_[(unsign
      +                          ed char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3573  0B02  3003               	movlw	3
  3574  0B03  00C7               	movwf	??_scale
  3575  0B04  0847               	movf	??_scale,w
  3576  0B05  00B0               	movwf	___bmul@multiplicand
  3577  0B06  084C               	movf	scale@scl,w
  3578  0B07  00A2               	movwf	___awmod@dividend
  3579  0B08  01A3               	clrf	___awmod@dividend+1
  3580  0B09  1BA2               	btfsc	___awmod@dividend,7
  3581  0B0A  03A3               	decf	___awmod@dividend+1,f
  3582  0B0B  300A               	movlw	10
  3583  0B0C  00A0               	movwf	___awmod@divisor
  3584  0B0D  3000               	movlw	0
  3585  0B0E  00A1               	movwf	___awmod@divisor+1
  3586  0B0F  160A  158A  2748  120A  158A  	fcall	___awmod
  3587  0B14  1283               	bcf	3,5	;RP0=0, select bank0
  3588  0B15  1303               	bcf	3,6	;RP1=0, select bank0
  3589  0B16  0820               	movf	?___awmod,w
  3590  0B17  160A  158A  250B  120A  158A  	fcall	___bmul
  3591  0B1C  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3592  0B1D  0084               	movwf	4
  3593  0B1E  160A  118A  2000  120A  158A  	fcall	stringdir
  3594  0B23  1283               	bcf	3,5	;RP0=0, select bank0
  3595  0B24  1303               	bcf	3,6	;RP1=0, select bank0
  3596  0B25  00B4               	movwf	___ftmul@f1
  3597  0B26  160A  118A  2000  120A  158A  	fcall	stringdir
  3598  0B2B  00B5               	movwf	___ftmul@f1+1
  3599  0B2C  160A  118A  2000  120A  158A  	fcall	stringdir
  3600  0B31  00B6               	movwf	___ftmul@f1+2
  3601  0B32  3003               	movlw	3
  3602  0B33  00C8               	movwf	??_scale+1
  3603  0B34  0848               	movf	??_scale+1,w
  3604  0B35  00B0               	movwf	___bmul@multiplicand
  3605  0B36  084C               	movf	scale@scl,w
  3606  0B37  00A9               	movwf	___awdiv@dividend
  3607  0B38  01AA               	clrf	___awdiv@dividend+1
  3608  0B39  1BA9               	btfsc	___awdiv@dividend,7
  3609  0B3A  03AA               	decf	___awdiv@dividend+1,f
  3610  0B3B  300A               	movlw	10
  3611  0B3C  00A7               	movwf	___awdiv@divisor
  3612  0B3D  3000               	movlw	0
  3613  0B3E  00A8               	movwf	___awdiv@divisor+1
  3614  0B3F  160A  118A  2172  120A  158A  	fcall	___awdiv
  3615  0B44  1283               	bcf	3,5	;RP0=0, select bank0
  3616  0B45  1303               	bcf	3,6	;RP1=0, select bank0
  3617  0B46  0827               	movf	?___awdiv,w
  3618  0B47  160A  158A  250B  120A  158A  	fcall	___bmul
  3619  0B4C  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3620  0B4D  0084               	movwf	4
  3621  0B4E  160A  118A  2000  120A  158A  	fcall	stringdir
  3622  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  3623  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  3624  0B55  00B7               	movwf	___ftmul@f2
  3625  0B56  160A  118A  2000  120A  158A  	fcall	stringdir
  3626  0B5B  00B8               	movwf	___ftmul@f2+1
  3627  0B5C  160A  118A  2000  120A  158A  	fcall	stringdir
  3628  0B61  00B9               	movwf	___ftmul@f2+2
  3629  0B62  120A  158A  2010  120A  158A  	fcall	___ftmul
  3630  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  3631  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  3632  0B69  0834               	movf	?___ftmul,w
  3633  0B6A  00C4               	movwf	?_scale
  3634  0B6B  0835               	movf	?___ftmul+1,w
  3635  0B6C  00C5               	movwf	?_scale+1
  3636  0B6D  0836               	movf	?___ftmul+2,w
  3637  0B6E  00C6               	movwf	?_scale+2
  3638  0B6F  2CED               	goto	l323
  3639  0B70                     l3510:
  3640                           
  3641                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 442:   return _npowers_[(unsigne
      +                          d char)scl];
  3642  0B70  3003               	movlw	3
  3643  0B71  00C7               	movwf	??_scale
  3644  0B72  0847               	movf	??_scale,w
  3645  0B73  00B0               	movwf	___bmul@multiplicand
  3646  0B74  084C               	movf	scale@scl,w
  3647  0B75  160A  158A  250B  120A  158A  	fcall	___bmul
  3648  0B7A  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3649  0B7B  0084               	movwf	4
  3650  0B7C  160A  118A  2000  120A  158A  	fcall	stringdir
  3651  0B81  1283               	bcf	3,5	;RP0=0, select bank0
  3652  0B82  1303               	bcf	3,6	;RP1=0, select bank0
  3653  0B83  00C4               	movwf	?_scale
  3654  0B84  160A  118A  2000  120A  158A  	fcall	stringdir
  3655  0B89  00C5               	movwf	?_scale+1
  3656  0B8A  160A  118A  2000  120A  158A  	fcall	stringdir
  3657  0B8F  00C6               	movwf	?_scale+2
  3658  0B90  2CED               	goto	l323
  3659  0B91                     l3514:
  3660                           
  3661                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110)
  3662  0B91  084C               	movf	scale@scl,w
  3663  0B92  3A80               	xorlw	128
  3664  0B93  3E12               	addlw	-238
  3665  0B94  1C03               	skipc
  3666  0B95  2B97               	goto	u5221
  3667  0B96  2B98               	goto	u5220
  3668  0B97                     u5221:
  3669  0B97  2C58               	goto	l3522
  3670  0B98                     u5220:
  3671  0B98                     l3516:
  3672                           
  3673                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigned
      +                           char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned cha
      +                          r)(scl%10)];
  3674  0B98  3003               	movlw	3
  3675  0B99  00C7               	movwf	??_scale
  3676  0B9A  0847               	movf	??_scale,w
  3677  0B9B  00B0               	movwf	___bmul@multiplicand
  3678  0B9C  084C               	movf	scale@scl,w
  3679  0B9D  00A2               	movwf	___awmod@dividend
  3680  0B9E  01A3               	clrf	___awmod@dividend+1
  3681  0B9F  1BA2               	btfsc	___awmod@dividend,7
  3682  0BA0  03A3               	decf	___awmod@dividend+1,f
  3683  0BA1  3064               	movlw	100
  3684  0BA2  00A0               	movwf	___awmod@divisor
  3685  0BA3  3000               	movlw	0
  3686  0BA4  00A1               	movwf	___awmod@divisor+1
  3687  0BA5  160A  158A  2748  120A  158A  	fcall	___awmod
  3688  0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  3689  0BAB  1303               	bcf	3,6	;RP1=0, select bank0
  3690  0BAC  0821               	movf	?___awmod+1,w
  3691  0BAD  00AA               	movwf	___awdiv@dividend+1
  3692  0BAE  0820               	movf	?___awmod,w
  3693  0BAF  00A9               	movwf	___awdiv@dividend
  3694  0BB0  300A               	movlw	10
  3695  0BB1  00A7               	movwf	___awdiv@divisor
  3696  0BB2  3000               	movlw	0
  3697  0BB3  00A8               	movwf	___awdiv@divisor+1
  3698  0BB4  160A  118A  2172  120A  158A  	fcall	___awdiv
  3699  0BB9  1283               	bcf	3,5	;RP0=0, select bank0
  3700  0BBA  1303               	bcf	3,6	;RP1=0, select bank0
  3701  0BBB  0827               	movf	?___awdiv,w
  3702  0BBC  160A  158A  250B  120A  158A  	fcall	___bmul
  3703  0BC1  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3704  0BC2  0084               	movwf	4
  3705  0BC3  160A  118A  2000  120A  158A  	fcall	stringdir
  3706  0BC8  1283               	bcf	3,5	;RP0=0, select bank0
  3707  0BC9  1303               	bcf	3,6	;RP1=0, select bank0
  3708  0BCA  00B4               	movwf	___ftmul@f1
  3709  0BCB  160A  118A  2000  120A  158A  	fcall	stringdir
  3710  0BD0  00B5               	movwf	___ftmul@f1+1
  3711  0BD1  160A  118A  2000  120A  158A  	fcall	stringdir
  3712  0BD6  00B6               	movwf	___ftmul@f1+2
  3713  0BD7  3003               	movlw	3
  3714  0BD8  00C8               	movwf	??_scale+1
  3715  0BD9  0848               	movf	??_scale+1,w
  3716  0BDA  00B0               	movwf	___bmul@multiplicand
  3717  0BDB  084C               	movf	scale@scl,w
  3718  0BDC  00A9               	movwf	___awdiv@dividend
  3719  0BDD  01AA               	clrf	___awdiv@dividend+1
  3720  0BDE  1BA9               	btfsc	___awdiv@dividend,7
  3721  0BDF  03AA               	decf	___awdiv@dividend+1,f
  3722  0BE0  3064               	movlw	100
  3723  0BE1  00A7               	movwf	___awdiv@divisor
  3724  0BE2  3000               	movlw	0
  3725  0BE3  00A8               	movwf	___awdiv@divisor+1
  3726  0BE4  160A  118A  2172  120A  158A  	fcall	___awdiv
  3727  0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  3728  0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  3729  0BEB  0827               	movf	?___awdiv,w
  3730  0BEC  160A  158A  250B  120A  158A  	fcall	___bmul
  3731  0BF1  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  3732  0BF2  0084               	movwf	4
  3733  0BF3  160A  118A  2000  120A  158A  	fcall	stringdir
  3734  0BF8  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0BF9  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0BFA  00B7               	movwf	___ftmul@f2
  3737  0BFB  160A  118A  2000  120A  158A  	fcall	stringdir
  3738  0C00  00B8               	movwf	___ftmul@f2+1
  3739  0C01  160A  118A  2000  120A  158A  	fcall	stringdir
  3740  0C06  00B9               	movwf	___ftmul@f2+2
  3741  0C07  120A  158A  2010  120A  158A  	fcall	___ftmul
  3742  0C0C  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0C0D  1303               	bcf	3,6	;RP1=0, select bank0
  3744  0C0E  0834               	movf	?___ftmul,w
  3745  0C0F  00C9               	movwf	_scale$1051
  3746  0C10  0835               	movf	?___ftmul+1,w
  3747  0C11  00CA               	movwf	_scale$1051+1
  3748  0C12  0836               	movf	?___ftmul+2,w
  3749  0C13  00CB               	movwf	_scale$1051+2
  3750                           
  3751                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigned
      +                           char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned cha
      +                          r)(scl%10)];
  3752  0C14  3003               	movlw	3
  3753  0C15  00C7               	movwf	??_scale
  3754  0C16  0847               	movf	??_scale,w
  3755  0C17  00B0               	movwf	___bmul@multiplicand
  3756  0C18  084C               	movf	scale@scl,w
  3757  0C19  00A2               	movwf	___awmod@dividend
  3758  0C1A  01A3               	clrf	___awmod@dividend+1
  3759  0C1B  1BA2               	btfsc	___awmod@dividend,7
  3760  0C1C  03A3               	decf	___awmod@dividend+1,f
  3761  0C1D  300A               	movlw	10
  3762  0C1E  00A0               	movwf	___awmod@divisor
  3763  0C1F  3000               	movlw	0
  3764  0C20  00A1               	movwf	___awmod@divisor+1
  3765  0C21  160A  158A  2748  120A  158A  	fcall	___awmod
  3766  0C26  1283               	bcf	3,5	;RP0=0, select bank0
  3767  0C27  1303               	bcf	3,6	;RP1=0, select bank0
  3768  0C28  0820               	movf	?___awmod,w
  3769  0C29  160A  158A  250B  120A  158A  	fcall	___bmul
  3770  0C2E  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3771  0C2F  0084               	movwf	4
  3772  0C30  160A  118A  2000  120A  158A  	fcall	stringdir
  3773  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3774  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3775  0C37  00B4               	movwf	___ftmul@f1
  3776  0C38  160A  118A  2000  120A  158A  	fcall	stringdir
  3777  0C3D  00B5               	movwf	___ftmul@f1+1
  3778  0C3E  160A  118A  2000  120A  158A  	fcall	stringdir
  3779  0C43  00B6               	movwf	___ftmul@f1+2
  3780  0C44  0849               	movf	_scale$1051,w
  3781  0C45  00B7               	movwf	___ftmul@f2
  3782  0C46  084A               	movf	_scale$1051+1,w
  3783  0C47  00B8               	movwf	___ftmul@f2+1
  3784  0C48  084B               	movf	_scale$1051+2,w
  3785  0C49  00B9               	movwf	___ftmul@f2+2
  3786  0C4A  120A  158A  2010  120A  158A  	fcall	___ftmul
  3787  0C4F  1283               	bcf	3,5	;RP0=0, select bank0
  3788  0C50  1303               	bcf	3,6	;RP1=0, select bank0
  3789  0C51  0834               	movf	?___ftmul,w
  3790  0C52  00C4               	movwf	?_scale
  3791  0C53  0835               	movf	?___ftmul+1,w
  3792  0C54  00C5               	movwf	?_scale+1
  3793  0C55  0836               	movf	?___ftmul+2,w
  3794  0C56  00C6               	movwf	?_scale+2
  3795  0C57  2CED               	goto	l323
  3796  0C58                     l3522:
  3797  0C58  084C               	movf	scale@scl,w
  3798  0C59  3A80               	xorlw	128
  3799  0C5A  3E75               	addlw	-139
  3800  0C5B  1C03               	skipc
  3801  0C5C  2C5E               	goto	u5231
  3802  0C5D  2C5F               	goto	u5230
  3803  0C5E                     u5231:
  3804  0C5E  2CCD               	goto	l3528
  3805  0C5F                     u5230:
  3806  0C5F                     l3524:
  3807                           
  3808                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 447:   return _powers_[(unsigned
      +                           char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3809  0C5F  3003               	movlw	3
  3810  0C60  00C7               	movwf	??_scale
  3811  0C61  0847               	movf	??_scale,w
  3812  0C62  00B0               	movwf	___bmul@multiplicand
  3813  0C63  084C               	movf	scale@scl,w
  3814  0C64  00A2               	movwf	___awmod@dividend
  3815  0C65  01A3               	clrf	___awmod@dividend+1
  3816  0C66  1BA2               	btfsc	___awmod@dividend,7
  3817  0C67  03A3               	decf	___awmod@dividend+1,f
  3818  0C68  300A               	movlw	10
  3819  0C69  00A0               	movwf	___awmod@divisor
  3820  0C6A  3000               	movlw	0
  3821  0C6B  00A1               	movwf	___awmod@divisor+1
  3822  0C6C  160A  158A  2748  120A  158A  	fcall	___awmod
  3823  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  3824  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  3825  0C73  0820               	movf	?___awmod,w
  3826  0C74  160A  158A  250B  120A  158A  	fcall	___bmul
  3827  0C79  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3828  0C7A  0084               	movwf	4
  3829  0C7B  160A  118A  2000  120A  158A  	fcall	stringdir
  3830  0C80  1283               	bcf	3,5	;RP0=0, select bank0
  3831  0C81  1303               	bcf	3,6	;RP1=0, select bank0
  3832  0C82  00B4               	movwf	___ftmul@f1
  3833  0C83  160A  118A  2000  120A  158A  	fcall	stringdir
  3834  0C88  00B5               	movwf	___ftmul@f1+1
  3835  0C89  160A  118A  2000  120A  158A  	fcall	stringdir
  3836  0C8E  00B6               	movwf	___ftmul@f1+2
  3837  0C8F  3003               	movlw	3
  3838  0C90  00C8               	movwf	??_scale+1
  3839  0C91  0848               	movf	??_scale+1,w
  3840  0C92  00B0               	movwf	___bmul@multiplicand
  3841  0C93  084C               	movf	scale@scl,w
  3842  0C94  00A9               	movwf	___awdiv@dividend
  3843  0C95  01AA               	clrf	___awdiv@dividend+1
  3844  0C96  1BA9               	btfsc	___awdiv@dividend,7
  3845  0C97  03AA               	decf	___awdiv@dividend+1,f
  3846  0C98  300A               	movlw	10
  3847  0C99  00A7               	movwf	___awdiv@divisor
  3848  0C9A  3000               	movlw	0
  3849  0C9B  00A8               	movwf	___awdiv@divisor+1
  3850  0C9C  160A  118A  2172  120A  158A  	fcall	___awdiv
  3851  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  3852  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  3853  0CA3  0827               	movf	?___awdiv,w
  3854  0CA4  160A  158A  250B  120A  158A  	fcall	___bmul
  3855  0CA9  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3856  0CAA  0084               	movwf	4
  3857  0CAB  160A  118A  2000  120A  158A  	fcall	stringdir
  3858  0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  3859  0CB1  1303               	bcf	3,6	;RP1=0, select bank0
  3860  0CB2  00B7               	movwf	___ftmul@f2
  3861  0CB3  160A  118A  2000  120A  158A  	fcall	stringdir
  3862  0CB8  00B8               	movwf	___ftmul@f2+1
  3863  0CB9  160A  118A  2000  120A  158A  	fcall	stringdir
  3864  0CBE  00B9               	movwf	___ftmul@f2+2
  3865  0CBF  120A  158A  2010  120A  158A  	fcall	___ftmul
  3866  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  3867  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  3868  0CC6  0834               	movf	?___ftmul,w
  3869  0CC7  00C4               	movwf	?_scale
  3870  0CC8  0835               	movf	?___ftmul+1,w
  3871  0CC9  00C5               	movwf	?_scale+1
  3872  0CCA  0836               	movf	?___ftmul+2,w
  3873  0CCB  00C6               	movwf	?_scale+2
  3874  0CCC  2CED               	goto	l323
  3875  0CCD                     l3528:
  3876                           
  3877                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 448:  return _powers_[(unsigned 
      +                          char)scl];
  3878  0CCD  3003               	movlw	3
  3879  0CCE  00C7               	movwf	??_scale
  3880  0CCF  0847               	movf	??_scale,w
  3881  0CD0  00B0               	movwf	___bmul@multiplicand
  3882  0CD1  084C               	movf	scale@scl,w
  3883  0CD2  160A  158A  250B  120A  158A  	fcall	___bmul
  3884  0CD7  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3885  0CD8  0084               	movwf	4
  3886  0CD9  160A  118A  2000  120A  158A  	fcall	stringdir
  3887  0CDE  1283               	bcf	3,5	;RP0=0, select bank0
  3888  0CDF  1303               	bcf	3,6	;RP1=0, select bank0
  3889  0CE0  00C4               	movwf	?_scale
  3890  0CE1  160A  118A  2000  120A  158A  	fcall	stringdir
  3891  0CE6  00C5               	movwf	?_scale+1
  3892  0CE7  160A  118A  2000  120A  158A  	fcall	stringdir
  3893  0CEC  00C6               	movwf	?_scale+2
  3894  0CED                     l323:
  3895  0CED  0008               	return
  3896  0CEE                     __end_of_scale:
  3897                           
  3898                           	psect	text7
  3899  1F48                     __ptext7:	
  3900 ;; *************** function ___awmod *****************
  3901 ;; Defined at:
  3902 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\awmod.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;  divisor         2    0[BANK0 ] int 
  3905 ;;  dividend        2    2[BANK0 ] int 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  sign            1    6[BANK0 ] unsigned char 
  3908 ;;  counter         1    5[BANK0 ] unsigned char 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  2    0[BANK0 ] int 
  3911 ;; Registers used:
  3912 ;;		wreg, status,2, status,0
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3918 ;;      Params:         0       4       0       0       0
  3919 ;;      Locals:         0       2       0       0       0
  3920 ;;      Temps:          0       1       0       0       0
  3921 ;;      Totals:         0       7       0       0       0
  3922 ;;Total ram usage:        7 bytes
  3923 ;; Hardware stack levels used:    1
  3924 ;; Hardware stack levels required when called:    2
  3925 ;; This function calls:
  3926 ;;		Nothing
  3927 ;; This function is called by:
  3928 ;;		_scale
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           
  3933                           ;psect for function ___awmod
  3934  1F48                     ___awmod:
  3935  1F48                     l3380:	
  3936                           ;incstack = 0
  3937                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3938                           
  3939  1F48  1283               	bcf	3,5	;RP0=0, select bank0
  3940  1F49  1303               	bcf	3,6	;RP1=0, select bank0
  3941  1F4A  01A6               	clrf	___awmod@sign
  3942  1F4B                     l3382:
  3943  1F4B  1FA3               	btfss	___awmod@dividend+1,7
  3944  1F4C  2F4E               	goto	u4931
  3945  1F4D  2F4F               	goto	u4930
  3946  1F4E                     u4931:
  3947  1F4E  2F56               	goto	l3388
  3948  1F4F                     u4930:
  3949  1F4F                     l3384:
  3950  1F4F  09A2               	comf	___awmod@dividend,f
  3951  1F50  09A3               	comf	___awmod@dividend+1,f
  3952  1F51  0AA2               	incf	___awmod@dividend,f
  3953  1F52  1903               	skipnz
  3954  1F53  0AA3               	incf	___awmod@dividend+1,f
  3955  1F54                     l3386:
  3956  1F54  01A6               	clrf	___awmod@sign
  3957  1F55  0AA6               	incf	___awmod@sign,f
  3958  1F56                     l3388:
  3959  1F56  1FA1               	btfss	___awmod@divisor+1,7
  3960  1F57  2F59               	goto	u4941
  3961  1F58  2F5A               	goto	u4940
  3962  1F59                     u4941:
  3963  1F59  2F5F               	goto	l3392
  3964  1F5A                     u4940:
  3965  1F5A                     l3390:
  3966  1F5A  09A0               	comf	___awmod@divisor,f
  3967  1F5B  09A1               	comf	___awmod@divisor+1,f
  3968  1F5C  0AA0               	incf	___awmod@divisor,f
  3969  1F5D  1903               	skipnz
  3970  1F5E  0AA1               	incf	___awmod@divisor+1,f
  3971  1F5F                     l3392:
  3972  1F5F  0820               	movf	___awmod@divisor,w
  3973  1F60  0421               	iorwf	___awmod@divisor+1,w
  3974  1F61  1903               	btfsc	3,2
  3975  1F62  2F64               	goto	u4951
  3976  1F63  2F65               	goto	u4950
  3977  1F64                     u4951:
  3978  1F64  2F94               	goto	l3410
  3979  1F65                     u4950:
  3980  1F65                     l3394:
  3981  1F65  01A5               	clrf	___awmod@counter
  3982  1F66  0AA5               	incf	___awmod@counter,f
  3983  1F67  2F73               	goto	l3400
  3984  1F68                     l3396:
  3985  1F68  3001               	movlw	1
  3986  1F69                     u4965:
  3987  1F69  1003               	clrc
  3988  1F6A  0DA0               	rlf	___awmod@divisor,f
  3989  1F6B  0DA1               	rlf	___awmod@divisor+1,f
  3990  1F6C  3EFF               	addlw	-1
  3991  1F6D  1D03               	skipz
  3992  1F6E  2F69               	goto	u4965
  3993  1F6F                     l3398:
  3994  1F6F  3001               	movlw	1
  3995  1F70  00A4               	movwf	??___awmod
  3996  1F71  0824               	movf	??___awmod,w
  3997  1F72  07A5               	addwf	___awmod@counter,f
  3998  1F73                     l3400:
  3999  1F73  1FA1               	btfss	___awmod@divisor+1,7
  4000  1F74  2F76               	goto	u4971
  4001  1F75  2F77               	goto	u4970
  4002  1F76                     u4971:
  4003  1F76  2F68               	goto	l3396
  4004  1F77                     u4970:
  4005  1F77                     l3402:
  4006  1F77  0821               	movf	___awmod@divisor+1,w
  4007  1F78  0223               	subwf	___awmod@dividend+1,w
  4008  1F79  1D03               	skipz
  4009  1F7A  2F7D               	goto	u4985
  4010  1F7B  0820               	movf	___awmod@divisor,w
  4011  1F7C  0222               	subwf	___awmod@dividend,w
  4012  1F7D                     u4985:
  4013  1F7D  1C03               	skipc
  4014  1F7E  2F80               	goto	u4981
  4015  1F7F  2F81               	goto	u4980
  4016  1F80                     u4981:
  4017  1F80  2F87               	goto	l3406
  4018  1F81                     u4980:
  4019  1F81                     l3404:
  4020  1F81  0820               	movf	___awmod@divisor,w
  4021  1F82  02A2               	subwf	___awmod@dividend,f
  4022  1F83  0821               	movf	___awmod@divisor+1,w
  4023  1F84  1C03               	skipc
  4024  1F85  03A3               	decf	___awmod@dividend+1,f
  4025  1F86  02A3               	subwf	___awmod@dividend+1,f
  4026  1F87                     l3406:
  4027  1F87  3001               	movlw	1
  4028  1F88                     u4995:
  4029  1F88  1003               	clrc
  4030  1F89  0CA1               	rrf	___awmod@divisor+1,f
  4031  1F8A  0CA0               	rrf	___awmod@divisor,f
  4032  1F8B  3EFF               	addlw	-1
  4033  1F8C  1D03               	skipz
  4034  1F8D  2F88               	goto	u4995
  4035  1F8E                     l3408:
  4036  1F8E  3001               	movlw	1
  4037  1F8F  02A5               	subwf	___awmod@counter,f
  4038  1F90  1D03               	btfss	3,2
  4039  1F91  2F93               	goto	u5001
  4040  1F92  2F94               	goto	u5000
  4041  1F93                     u5001:
  4042  1F93  2F77               	goto	l3402
  4043  1F94                     u5000:
  4044  1F94                     l3410:
  4045  1F94  0826               	movf	___awmod@sign,w
  4046  1F95  1903               	btfsc	3,2
  4047  1F96  2F98               	goto	u5011
  4048  1F97  2F99               	goto	u5010
  4049  1F98                     u5011:
  4050  1F98  2F9E               	goto	l3414
  4051  1F99                     u5010:
  4052  1F99                     l3412:
  4053  1F99  09A2               	comf	___awmod@dividend,f
  4054  1F9A  09A3               	comf	___awmod@dividend+1,f
  4055  1F9B  0AA2               	incf	___awmod@dividend,f
  4056  1F9C  1903               	skipnz
  4057  1F9D  0AA3               	incf	___awmod@dividend+1,f
  4058  1F9E                     l3414:
  4059  1F9E  0823               	movf	___awmod@dividend+1,w
  4060  1F9F  00A1               	movwf	?___awmod+1
  4061  1FA0  0822               	movf	___awmod@dividend,w
  4062  1FA1  00A0               	movwf	?___awmod
  4063  1FA2                     l606:
  4064  1FA2  0008               	return
  4065  1FA3                     __end_of___awmod:
  4066                           
  4067                           	psect	text8
  4068  1172                     __ptext8:	
  4069 ;; *************** function ___awdiv *****************
  4070 ;; Defined at:
  4071 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\awdiv.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  divisor         2    7[BANK0 ] int 
  4074 ;;  dividend        2    9[BANK0 ] int 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  quotient        2   14[BANK0 ] int 
  4077 ;;  sign            1   13[BANK0 ] unsigned char 
  4078 ;;  counter         1   12[BANK0 ] unsigned char 
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  2    7[BANK0 ] int 
  4081 ;; Registers used:
  4082 ;;		wreg, status,2, status,0
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4088 ;;      Params:         0       4       0       0       0
  4089 ;;      Locals:         0       4       0       0       0
  4090 ;;      Temps:          0       1       0       0       0
  4091 ;;      Totals:         0       9       0       0       0
  4092 ;;Total ram usage:        9 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; Hardware stack levels required when called:    2
  4095 ;; This function calls:
  4096 ;;		Nothing
  4097 ;; This function is called by:
  4098 ;;		_scale
  4099 ;;		_sprintf
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           
  4104                           ;psect for function ___awdiv
  4105  1172                     ___awdiv:
  4106  1172                     l3336:	
  4107                           ;incstack = 0
  4108                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4109                           
  4110  1172  1283               	bcf	3,5	;RP0=0, select bank0
  4111  1173  1303               	bcf	3,6	;RP1=0, select bank0
  4112  1174  01AD               	clrf	___awdiv@sign
  4113  1175                     l3338:
  4114  1175  1FA8               	btfss	___awdiv@divisor+1,7
  4115  1176  2978               	goto	u4831
  4116  1177  2979               	goto	u4830
  4117  1178                     u4831:
  4118  1178  2980               	goto	l3344
  4119  1179                     u4830:
  4120  1179                     l3340:
  4121  1179  09A7               	comf	___awdiv@divisor,f
  4122  117A  09A8               	comf	___awdiv@divisor+1,f
  4123  117B  0AA7               	incf	___awdiv@divisor,f
  4124  117C  1903               	skipnz
  4125  117D  0AA8               	incf	___awdiv@divisor+1,f
  4126  117E                     l3342:
  4127  117E  01AD               	clrf	___awdiv@sign
  4128  117F  0AAD               	incf	___awdiv@sign,f
  4129  1180                     l3344:
  4130  1180  1FAA               	btfss	___awdiv@dividend+1,7
  4131  1181  2983               	goto	u4841
  4132  1182  2984               	goto	u4840
  4133  1183                     u4841:
  4134  1183  298D               	goto	l3350
  4135  1184                     u4840:
  4136  1184                     l3346:
  4137  1184  09A9               	comf	___awdiv@dividend,f
  4138  1185  09AA               	comf	___awdiv@dividend+1,f
  4139  1186  0AA9               	incf	___awdiv@dividend,f
  4140  1187  1903               	skipnz
  4141  1188  0AAA               	incf	___awdiv@dividend+1,f
  4142  1189                     l3348:
  4143  1189  3001               	movlw	1
  4144  118A  00AB               	movwf	??___awdiv
  4145  118B  082B               	movf	??___awdiv,w
  4146  118C  06AD               	xorwf	___awdiv@sign,f
  4147  118D                     l3350:
  4148  118D  01AE               	clrf	___awdiv@quotient
  4149  118E  01AF               	clrf	___awdiv@quotient+1
  4150  118F                     l3352:
  4151  118F  0827               	movf	___awdiv@divisor,w
  4152  1190  0428               	iorwf	___awdiv@divisor+1,w
  4153  1191  1903               	btfsc	3,2
  4154  1192  2994               	goto	u4851
  4155  1193  2995               	goto	u4850
  4156  1194                     u4851:
  4157  1194  29CC               	goto	l3372
  4158  1195                     u4850:
  4159  1195                     l3354:
  4160  1195  01AC               	clrf	___awdiv@counter
  4161  1196  0AAC               	incf	___awdiv@counter,f
  4162  1197  29A3               	goto	l3360
  4163  1198                     l3356:
  4164  1198  3001               	movlw	1
  4165  1199                     u4865:
  4166  1199  1003               	clrc
  4167  119A  0DA7               	rlf	___awdiv@divisor,f
  4168  119B  0DA8               	rlf	___awdiv@divisor+1,f
  4169  119C  3EFF               	addlw	-1
  4170  119D  1D03               	skipz
  4171  119E  2999               	goto	u4865
  4172  119F                     l3358:
  4173  119F  3001               	movlw	1
  4174  11A0  00AB               	movwf	??___awdiv
  4175  11A1  082B               	movf	??___awdiv,w
  4176  11A2  07AC               	addwf	___awdiv@counter,f
  4177  11A3                     l3360:
  4178  11A3  1FA8               	btfss	___awdiv@divisor+1,7
  4179  11A4  29A6               	goto	u4871
  4180  11A5  29A7               	goto	u4870
  4181  11A6                     u4871:
  4182  11A6  2998               	goto	l3356
  4183  11A7                     u4870:
  4184  11A7                     l3362:
  4185  11A7  3001               	movlw	1
  4186  11A8                     u4885:
  4187  11A8  1003               	clrc
  4188  11A9  0DAE               	rlf	___awdiv@quotient,f
  4189  11AA  0DAF               	rlf	___awdiv@quotient+1,f
  4190  11AB  3EFF               	addlw	-1
  4191  11AC  1D03               	skipz
  4192  11AD  29A8               	goto	u4885
  4193  11AE  0828               	movf	___awdiv@divisor+1,w
  4194  11AF  022A               	subwf	___awdiv@dividend+1,w
  4195  11B0  1D03               	skipz
  4196  11B1  29B4               	goto	u4895
  4197  11B2  0827               	movf	___awdiv@divisor,w
  4198  11B3  0229               	subwf	___awdiv@dividend,w
  4199  11B4                     u4895:
  4200  11B4  1C03               	skipc
  4201  11B5  29B7               	goto	u4891
  4202  11B6  29B8               	goto	u4890
  4203  11B7                     u4891:
  4204  11B7  29BF               	goto	l3368
  4205  11B8                     u4890:
  4206  11B8                     l3364:
  4207  11B8  0827               	movf	___awdiv@divisor,w
  4208  11B9  02A9               	subwf	___awdiv@dividend,f
  4209  11BA  0828               	movf	___awdiv@divisor+1,w
  4210  11BB  1C03               	skipc
  4211  11BC  03AA               	decf	___awdiv@dividend+1,f
  4212  11BD  02AA               	subwf	___awdiv@dividend+1,f
  4213  11BE                     l3366:
  4214  11BE  142E               	bsf	___awdiv@quotient,0
  4215  11BF                     l3368:
  4216  11BF  3001               	movlw	1
  4217  11C0                     u4905:
  4218  11C0  1003               	clrc
  4219  11C1  0CA8               	rrf	___awdiv@divisor+1,f
  4220  11C2  0CA7               	rrf	___awdiv@divisor,f
  4221  11C3  3EFF               	addlw	-1
  4222  11C4  1D03               	skipz
  4223  11C5  29C0               	goto	u4905
  4224  11C6                     l3370:
  4225  11C6  3001               	movlw	1
  4226  11C7  02AC               	subwf	___awdiv@counter,f
  4227  11C8  1D03               	btfss	3,2
  4228  11C9  29CB               	goto	u4911
  4229  11CA  29CC               	goto	u4910
  4230  11CB                     u4911:
  4231  11CB  29A7               	goto	l3362
  4232  11CC                     u4910:
  4233  11CC                     l3372:
  4234  11CC  082D               	movf	___awdiv@sign,w
  4235  11CD  1903               	btfsc	3,2
  4236  11CE  29D0               	goto	u4921
  4237  11CF  29D1               	goto	u4920
  4238  11D0                     u4921:
  4239  11D0  29D6               	goto	l3376
  4240  11D1                     u4920:
  4241  11D1                     l3374:
  4242  11D1  09AE               	comf	___awdiv@quotient,f
  4243  11D2  09AF               	comf	___awdiv@quotient+1,f
  4244  11D3  0AAE               	incf	___awdiv@quotient,f
  4245  11D4  1903               	skipnz
  4246  11D5  0AAF               	incf	___awdiv@quotient+1,f
  4247  11D6                     l3376:
  4248  11D6  082F               	movf	___awdiv@quotient+1,w
  4249  11D7  00A8               	movwf	?___awdiv+1
  4250  11D8  082E               	movf	___awdiv@quotient,w
  4251  11D9  00A7               	movwf	?___awdiv
  4252  11DA                     l593:
  4253  11DA  0008               	return
  4254  11DB                     __end_of___awdiv:
  4255                           
  4256                           	psect	text9
  4257  1CCD                     __ptext9:	
  4258 ;; *************** function _isdigit *****************
  4259 ;; Defined at:
  4260 ;;		line 8 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\isdigit.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  c               1    wreg     unsigned char 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  c               1    1[BANK0 ] unsigned char 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;		None               void
  4267 ;; Registers used:
  4268 ;;		wreg, status,2, status,0
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4274 ;;      Params:         0       0       0       0       0
  4275 ;;      Locals:         0       2       0       0       0
  4276 ;;      Temps:          0       0       0       0       0
  4277 ;;      Totals:         0       2       0       0       0
  4278 ;;Total ram usage:        2 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    2
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_sprintf
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           
  4289                           ;psect for function _isdigit
  4290  1CCD                     _isdigit:
  4291                           
  4292                           ;incstack = 0
  4293                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4294                           ;isdigit@c stored from wreg
  4295  1CCD  1283               	bcf	3,5	;RP0=0, select bank0
  4296  1CCE  1303               	bcf	3,6	;RP1=0, select bank0
  4297  1CCF  00A1               	movwf	isdigit@c
  4298  1CD0                     l3532:
  4299  1CD0  01A0               	clrf	_isdigit$841
  4300  1CD1                     l3534:
  4301  1CD1  303A               	movlw	58
  4302  1CD2  0221               	subwf	isdigit@c,w
  4303  1CD3  1803               	skipnc
  4304  1CD4  2CD6               	goto	u5241
  4305  1CD5  2CD7               	goto	u5240
  4306  1CD6                     u5241:
  4307  1CD6  2CDF               	goto	l3540
  4308  1CD7                     u5240:
  4309  1CD7                     l3536:
  4310  1CD7  3030               	movlw	48
  4311  1CD8  0221               	subwf	isdigit@c,w
  4312  1CD9  1C03               	skipc
  4313  1CDA  2CDC               	goto	u5251
  4314  1CDB  2CDD               	goto	u5250
  4315  1CDC                     u5251:
  4316  1CDC  2CDF               	goto	l3540
  4317  1CDD                     u5250:
  4318  1CDD                     l3538:
  4319  1CDD  01A0               	clrf	_isdigit$841
  4320  1CDE  0AA0               	incf	_isdigit$841,f
  4321  1CDF                     l3540:
  4322  1CDF  0C20               	rrf	_isdigit$841,w
  4323  1CE0                     l872:
  4324  1CE0  0008               	return
  4325  1CE1                     __end_of_isdigit:
  4326                           
  4327                           	psect	text10
  4328  059F                     __ptext10:	
  4329 ;; *************** function _fround *****************
  4330 ;; Defined at:
  4331 ;;		line 417 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  prec            1    wreg     unsigned char 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  prec            1   51[BANK0 ] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  3   36[BANK0 ] unsigned char 
  4338 ;; Registers used:
  4339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4345 ;;      Params:         0       3       0       0       0
  4346 ;;      Locals:         0       7       0       0       0
  4347 ;;      Temps:          0       6       0       0       0
  4348 ;;      Totals:         0      16       0       0       0
  4349 ;;Total ram usage:       16 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    4
  4352 ;; This function calls:
  4353 ;;		___bmul
  4354 ;;		___ftmul
  4355 ;;		___lwdiv
  4356 ;;		___lwmod
  4357 ;; This function is called by:
  4358 ;;		_sprintf
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           
  4363                           ;psect for function _fround
  4364  059F                     _fround:
  4365                           
  4366                           ;incstack = 0
  4367                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4368                           ;fround@prec stored from wreg
  4369  059F  1283               	bcf	3,5	;RP0=0, select bank0
  4370  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  4371  05A1  00D3               	movwf	fround@prec
  4372  05A2                     l3470:
  4373                           
  4374                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 417: fround(unsigned char prec);
      +                          D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 418: {;D:\MPLAB XC8 compiler\pic\
      +                          sources\c90\common\doprnt.c: 421:  if(prec>=110)
  4375  05A2  306E               	movlw	110
  4376  05A3  0253               	subwf	fround@prec,w
  4377  05A4  1C03               	skipc
  4378  05A5  2DA7               	goto	u5171
  4379  05A6  2DA8               	goto	u5170
  4380  05A7                     u5171:
  4381  05A7  2E87               	goto	l3480
  4382  05A8                     u5170:
  4383  05A8                     l3472:
  4384                           
  4385                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4386  05A8  3003               	movlw	3
  4387  05A9  00C7               	movwf	??_fround
  4388  05AA  0847               	movf	??_fround,w
  4389  05AB  00B0               	movwf	___bmul@multiplicand
  4390  05AC  0853               	movf	fround@prec,w
  4391  05AD  00C8               	movwf	??_fround+1
  4392  05AE  01C9               	clrf	??_fround+2
  4393  05AF  0848               	movf	??_fround+1,w
  4394  05B0  00A2               	movwf	___lwmod@dividend
  4395  05B1  0849               	movf	??_fround+2,w
  4396  05B2  00A3               	movwf	___lwmod@dividend+1
  4397  05B3  3064               	movlw	100
  4398  05B4  00A0               	movwf	___lwmod@divisor
  4399  05B5  3000               	movlw	0
  4400  05B6  00A1               	movwf	___lwmod@divisor+1
  4401  05B7  160A  158A  2670  120A  118A  	fcall	___lwmod
  4402  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  4403  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  4404  05BE  0821               	movf	?___lwmod+1,w
  4405  05BF  00A9               	movwf	___lwdiv@dividend+1
  4406  05C0  0820               	movf	?___lwmod,w
  4407  05C1  00A8               	movwf	___lwdiv@dividend
  4408  05C2  300A               	movlw	10
  4409  05C3  00A6               	movwf	___lwdiv@divisor
  4410  05C4  3000               	movlw	0
  4411  05C5  00A7               	movwf	___lwdiv@divisor+1
  4412  05C6  160A  158A  26AC  120A  118A  	fcall	___lwdiv
  4413  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  4414  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  4415  05CD  0826               	movf	?___lwdiv,w
  4416  05CE  160A  158A  250B  120A  118A  	fcall	___bmul
  4417  05D3  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  4418  05D4  0084               	movwf	4
  4419  05D5  160A  118A  2000  120A  118A  	fcall	stringdir
  4420  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  4421  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  4422  05DC  00B4               	movwf	___ftmul@f1
  4423  05DD  160A  118A  2000  120A  118A  	fcall	stringdir
  4424  05E2  00B5               	movwf	___ftmul@f1+1
  4425  05E3  160A  118A  2000  120A  118A  	fcall	stringdir
  4426  05E8  00B6               	movwf	___ftmul@f1+2
  4427  05E9  3003               	movlw	3
  4428  05EA  00CA               	movwf	??_fround+3
  4429  05EB  084A               	movf	??_fround+3,w
  4430  05EC  00B0               	movwf	___bmul@multiplicand
  4431  05ED  0853               	movf	fround@prec,w
  4432  05EE  00CB               	movwf	??_fround+4
  4433  05EF  01CC               	clrf	??_fround+5
  4434  05F0  084B               	movf	??_fround+4,w
  4435  05F1  00A8               	movwf	___lwdiv@dividend
  4436  05F2  084C               	movf	??_fround+5,w
  4437  05F3  00A9               	movwf	___lwdiv@dividend+1
  4438  05F4  3064               	movlw	100
  4439  05F5  00A6               	movwf	___lwdiv@divisor
  4440  05F6  3000               	movlw	0
  4441  05F7  00A7               	movwf	___lwdiv@divisor+1
  4442  05F8  160A  158A  26AC  120A  118A  	fcall	___lwdiv
  4443  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  4444  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  4445  05FF  0826               	movf	?___lwdiv,w
  4446  0600  160A  158A  250B  120A  118A  	fcall	___bmul
  4447  0605  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  4448  0606  0084               	movwf	4
  4449  0607  160A  118A  2000  120A  118A  	fcall	stringdir
  4450  060C  1283               	bcf	3,5	;RP0=0, select bank0
  4451  060D  1303               	bcf	3,6	;RP1=0, select bank0
  4452  060E  00B7               	movwf	___ftmul@f2
  4453  060F  160A  118A  2000  120A  118A  	fcall	stringdir
  4454  0614  00B8               	movwf	___ftmul@f2+1
  4455  0615  160A  118A  2000  120A  118A  	fcall	stringdir
  4456  061A  00B9               	movwf	___ftmul@f2+2
  4457  061B  120A  158A  2010  120A  118A  	fcall	___ftmul
  4458  0620  1283               	bcf	3,5	;RP0=0, select bank0
  4459  0621  1303               	bcf	3,6	;RP1=0, select bank0
  4460  0622  0834               	movf	?___ftmul,w
  4461  0623  00D0               	movwf	_fround$1049
  4462  0624  0835               	movf	?___ftmul+1,w
  4463  0625  00D1               	movwf	_fround$1049+1
  4464  0626  0836               	movf	?___ftmul+2,w
  4465  0627  00D2               	movwf	_fround$1049+2
  4466                           
  4467                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4468  0628  3003               	movlw	3
  4469  0629  00C7               	movwf	??_fround
  4470  062A  0847               	movf	??_fround,w
  4471  062B  00B0               	movwf	___bmul@multiplicand
  4472  062C  0853               	movf	fround@prec,w
  4473  062D  00C8               	movwf	??_fround+1
  4474  062E  01C9               	clrf	??_fround+2
  4475  062F  0848               	movf	??_fround+1,w
  4476  0630  00A2               	movwf	___lwmod@dividend
  4477  0631  0849               	movf	??_fround+2,w
  4478  0632  00A3               	movwf	___lwmod@dividend+1
  4479  0633  300A               	movlw	10
  4480  0634  00A0               	movwf	___lwmod@divisor
  4481  0635  3000               	movlw	0
  4482  0636  00A1               	movwf	___lwmod@divisor+1
  4483  0637  160A  158A  2670  120A  118A  	fcall	___lwmod
  4484  063C  1283               	bcf	3,5	;RP0=0, select bank0
  4485  063D  1303               	bcf	3,6	;RP1=0, select bank0
  4486  063E  0820               	movf	?___lwmod,w
  4487  063F  160A  158A  250B  120A  118A  	fcall	___bmul
  4488  0644  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4489  0645  0084               	movwf	4
  4490  0646  160A  118A  2000  120A  118A  	fcall	stringdir
  4491  064B  1283               	bcf	3,5	;RP0=0, select bank0
  4492  064C  1303               	bcf	3,6	;RP1=0, select bank0
  4493  064D  00B4               	movwf	___ftmul@f1
  4494  064E  160A  118A  2000  120A  118A  	fcall	stringdir
  4495  0653  00B5               	movwf	___ftmul@f1+1
  4496  0654  160A  118A  2000  120A  118A  	fcall	stringdir
  4497  0659  00B6               	movwf	___ftmul@f1+2
  4498  065A  0850               	movf	_fround$1049,w
  4499  065B  00B7               	movwf	___ftmul@f2
  4500  065C  0851               	movf	_fround$1049+1,w
  4501  065D  00B8               	movwf	___ftmul@f2+1
  4502  065E  0852               	movf	_fround$1049+2,w
  4503  065F  00B9               	movwf	___ftmul@f2+2
  4504  0660  120A  158A  2010  120A  118A  	fcall	___ftmul
  4505  0665  1283               	bcf	3,5	;RP0=0, select bank0
  4506  0666  1303               	bcf	3,6	;RP1=0, select bank0
  4507  0667  0834               	movf	?___ftmul,w
  4508  0668  00CD               	movwf	_fround$1050
  4509  0669  0835               	movf	?___ftmul+1,w
  4510  066A  00CE               	movwf	_fround$1050+1
  4511  066B  0836               	movf	?___ftmul+2,w
  4512  066C  00CF               	movwf	_fround$1050+2
  4513  066D                     l3474:
  4514                           
  4515                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4516  066D  3000               	movlw	0
  4517  066E  00B4               	movwf	___ftmul@f1
  4518  066F  3000               	movlw	0
  4519  0670  00B5               	movwf	___ftmul@f1+1
  4520  0671  303F               	movlw	63
  4521  0672  00B6               	movwf	___ftmul@f1+2
  4522  0673  084D               	movf	_fround$1050,w
  4523  0674  00B7               	movwf	___ftmul@f2
  4524  0675  084E               	movf	_fround$1050+1,w
  4525  0676  00B8               	movwf	___ftmul@f2+1
  4526  0677  084F               	movf	_fround$1050+2,w
  4527  0678  00B9               	movwf	___ftmul@f2+2
  4528  0679  120A  158A  2010  120A  118A  	fcall	___ftmul
  4529  067E  1283               	bcf	3,5	;RP0=0, select bank0
  4530  067F  1303               	bcf	3,6	;RP1=0, select bank0
  4531  0680  0834               	movf	?___ftmul,w
  4532  0681  00C4               	movwf	?_fround
  4533  0682  0835               	movf	?___ftmul+1,w
  4534  0683  00C5               	movwf	?_fround+1
  4535  0684  0836               	movf	?___ftmul+2,w
  4536  0685  00C6               	movwf	?_fround+2
  4537  0686  2F4B               	goto	l316
  4538  0687                     l3480:
  4539  0687  300B               	movlw	11
  4540  0688  0253               	subwf	fround@prec,w
  4541  0689  1C03               	skipc
  4542  068A  2E8C               	goto	u5181
  4543  068B  2E8D               	goto	u5180
  4544  068C                     u5181:
  4545  068C  2F18               	goto	l3488
  4546  068D                     u5180:
  4547  068D                     l3482:
  4548                           
  4549                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[pr
      +                          ec/10U+9U] * _npowers_[prec%10U];
  4550  068D  3003               	movlw	3
  4551  068E  00C7               	movwf	??_fround
  4552  068F  0847               	movf	??_fround,w
  4553  0690  00B0               	movwf	___bmul@multiplicand
  4554  0691  0853               	movf	fround@prec,w
  4555  0692  00C8               	movwf	??_fround+1
  4556  0693  01C9               	clrf	??_fround+2
  4557  0694  0848               	movf	??_fround+1,w
  4558  0695  00A2               	movwf	___lwmod@dividend
  4559  0696  0849               	movf	??_fround+2,w
  4560  0697  00A3               	movwf	___lwmod@dividend+1
  4561  0698  300A               	movlw	10
  4562  0699  00A0               	movwf	___lwmod@divisor
  4563  069A  3000               	movlw	0
  4564  069B  00A1               	movwf	___lwmod@divisor+1
  4565  069C  160A  158A  2670  120A  118A  	fcall	___lwmod
  4566  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  4567  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  4568  06A3  0820               	movf	?___lwmod,w
  4569  06A4  160A  158A  250B  120A  118A  	fcall	___bmul
  4570  06A9  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4571  06AA  0084               	movwf	4
  4572  06AB  160A  118A  2000  120A  118A  	fcall	stringdir
  4573  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  4574  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  4575  06B2  00B4               	movwf	___ftmul@f1
  4576  06B3  160A  118A  2000  120A  118A  	fcall	stringdir
  4577  06B8  00B5               	movwf	___ftmul@f1+1
  4578  06B9  160A  118A  2000  120A  118A  	fcall	stringdir
  4579  06BE  00B6               	movwf	___ftmul@f1+2
  4580  06BF  3003               	movlw	3
  4581  06C0  00CA               	movwf	??_fround+3
  4582  06C1  084A               	movf	??_fround+3,w
  4583  06C2  00B0               	movwf	___bmul@multiplicand
  4584  06C3  0853               	movf	fround@prec,w
  4585  06C4  00CB               	movwf	??_fround+4
  4586  06C5  01CC               	clrf	??_fround+5
  4587  06C6  084B               	movf	??_fround+4,w
  4588  06C7  00A8               	movwf	___lwdiv@dividend
  4589  06C8  084C               	movf	??_fround+5,w
  4590  06C9  00A9               	movwf	___lwdiv@dividend+1
  4591  06CA  300A               	movlw	10
  4592  06CB  00A6               	movwf	___lwdiv@divisor
  4593  06CC  3000               	movlw	0
  4594  06CD  00A7               	movwf	___lwdiv@divisor+1
  4595  06CE  160A  158A  26AC  120A  118A  	fcall	___lwdiv
  4596  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  4597  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  4598  06D5  0826               	movf	?___lwdiv,w
  4599  06D6  160A  158A  250B  120A  118A  	fcall	___bmul
  4600  06DB  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  4601  06DC  0084               	movwf	4
  4602  06DD  160A  118A  2000  120A  118A  	fcall	stringdir
  4603  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  4604  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  4605  06E4  00B7               	movwf	___ftmul@f2
  4606  06E5  160A  118A  2000  120A  118A  	fcall	stringdir
  4607  06EA  00B8               	movwf	___ftmul@f2+1
  4608  06EB  160A  118A  2000  120A  118A  	fcall	stringdir
  4609  06F0  00B9               	movwf	___ftmul@f2+2
  4610  06F1  120A  158A  2010  120A  118A  	fcall	___ftmul
  4611  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  4612  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  4613  06F8  0834               	movf	?___ftmul,w
  4614  06F9  00D0               	movwf	_fround$1049
  4615  06FA  0835               	movf	?___ftmul+1,w
  4616  06FB  00D1               	movwf	_fround$1049+1
  4617  06FC  0836               	movf	?___ftmul+2,w
  4618  06FD  00D2               	movwf	_fround$1049+2
  4619  06FE                     l3484:
  4620                           
  4621                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[pr
      +                          ec/10U+9U] * _npowers_[prec%10U];
  4622  06FE  3000               	movlw	0
  4623  06FF  00B4               	movwf	___ftmul@f1
  4624  0700  3000               	movlw	0
  4625  0701  00B5               	movwf	___ftmul@f1+1
  4626  0702  303F               	movlw	63
  4627  0703  00B6               	movwf	___ftmul@f1+2
  4628  0704  0850               	movf	_fround$1049,w
  4629  0705  00B7               	movwf	___ftmul@f2
  4630  0706  0851               	movf	_fround$1049+1,w
  4631  0707  00B8               	movwf	___ftmul@f2+1
  4632  0708  0852               	movf	_fround$1049+2,w
  4633  0709  00B9               	movwf	___ftmul@f2+2
  4634  070A  120A  158A  2010  120A  118A  	fcall	___ftmul
  4635  070F  1283               	bcf	3,5	;RP0=0, select bank0
  4636  0710  1303               	bcf	3,6	;RP1=0, select bank0
  4637  0711  0834               	movf	?___ftmul,w
  4638  0712  00C4               	movwf	?_fround
  4639  0713  0835               	movf	?___ftmul+1,w
  4640  0714  00C5               	movwf	?_fround+1
  4641  0715  0836               	movf	?___ftmul+2,w
  4642  0716  00C6               	movwf	?_fround+2
  4643  0717  2F4B               	goto	l316
  4644  0718                     l3488:
  4645                           
  4646                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 425:  return 0.5 * _npowers_[pre
      +                          c];
  4647  0718  3000               	movlw	0
  4648  0719  00B4               	movwf	___ftmul@f1
  4649  071A  3000               	movlw	0
  4650  071B  00B5               	movwf	___ftmul@f1+1
  4651  071C  303F               	movlw	63
  4652  071D  00B6               	movwf	___ftmul@f1+2
  4653  071E  3003               	movlw	3
  4654  071F  00C7               	movwf	??_fround
  4655  0720  0847               	movf	??_fround,w
  4656  0721  00B0               	movwf	___bmul@multiplicand
  4657  0722  0853               	movf	fround@prec,w
  4658  0723  160A  158A  250B  120A  118A  	fcall	___bmul
  4659  0728  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4660  0729  0084               	movwf	4
  4661  072A  160A  118A  2000  120A  118A  	fcall	stringdir
  4662  072F  1283               	bcf	3,5	;RP0=0, select bank0
  4663  0730  1303               	bcf	3,6	;RP1=0, select bank0
  4664  0731  00B7               	movwf	___ftmul@f2
  4665  0732  160A  118A  2000  120A  118A  	fcall	stringdir
  4666  0737  00B8               	movwf	___ftmul@f2+1
  4667  0738  160A  118A  2000  120A  118A  	fcall	stringdir
  4668  073D  00B9               	movwf	___ftmul@f2+2
  4669  073E  120A  158A  2010  120A  118A  	fcall	___ftmul
  4670  0743  1283               	bcf	3,5	;RP0=0, select bank0
  4671  0744  1303               	bcf	3,6	;RP1=0, select bank0
  4672  0745  0834               	movf	?___ftmul,w
  4673  0746  00C4               	movwf	?_fround
  4674  0747  0835               	movf	?___ftmul+1,w
  4675  0748  00C5               	movwf	?_fround+1
  4676  0749  0836               	movf	?___ftmul+2,w
  4677  074A  00C6               	movwf	?_fround+2
  4678  074B                     l316:
  4679  074B  0008               	return
  4680  074C                     __end_of_fround:
  4681                           
  4682                           	psect	text11
  4683  1E70                     __ptext11:	
  4684 ;; *************** function ___lwmod *****************
  4685 ;; Defined at:
  4686 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lwmod.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;  divisor         2    0[BANK0 ] unsigned int 
  4689 ;;  dividend        2    2[BANK0 ] unsigned int 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  counter         1    5[BANK0 ] unsigned char 
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  2    0[BANK0 ] unsigned int 
  4694 ;; Registers used:
  4695 ;;		wreg, status,2, status,0
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4701 ;;      Params:         0       4       0       0       0
  4702 ;;      Locals:         0       1       0       0       0
  4703 ;;      Temps:          0       1       0       0       0
  4704 ;;      Totals:         0       6       0       0       0
  4705 ;;Total ram usage:        6 bytes
  4706 ;; Hardware stack levels used:    1
  4707 ;; Hardware stack levels required when called:    2
  4708 ;; This function calls:
  4709 ;;		Nothing
  4710 ;; This function is called by:
  4711 ;;		_fround
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           
  4716                           ;psect for function ___lwmod
  4717  1E70                     ___lwmod:
  4718  1E70                     l3418:	
  4719                           ;incstack = 0
  4720                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4721                           
  4722  1E70  1283               	bcf	3,5	;RP0=0, select bank0
  4723  1E71  1303               	bcf	3,6	;RP1=0, select bank0
  4724  1E72  0820               	movf	___lwmod@divisor,w
  4725  1E73  0421               	iorwf	___lwmod@divisor+1,w
  4726  1E74  1903               	btfsc	3,2
  4727  1E75  2E77               	goto	u5021
  4728  1E76  2E78               	goto	u5020
  4729  1E77                     u5021:
  4730  1E77  2EA7               	goto	l3436
  4731  1E78                     u5020:
  4732  1E78                     l3420:
  4733  1E78  01A5               	clrf	___lwmod@counter
  4734  1E79  0AA5               	incf	___lwmod@counter,f
  4735  1E7A  2E86               	goto	l3426
  4736  1E7B                     l3422:
  4737  1E7B  3001               	movlw	1
  4738  1E7C                     u5035:
  4739  1E7C  1003               	clrc
  4740  1E7D  0DA0               	rlf	___lwmod@divisor,f
  4741  1E7E  0DA1               	rlf	___lwmod@divisor+1,f
  4742  1E7F  3EFF               	addlw	-1
  4743  1E80  1D03               	skipz
  4744  1E81  2E7C               	goto	u5035
  4745  1E82                     l3424:
  4746  1E82  3001               	movlw	1
  4747  1E83  00A4               	movwf	??___lwmod
  4748  1E84  0824               	movf	??___lwmod,w
  4749  1E85  07A5               	addwf	___lwmod@counter,f
  4750  1E86                     l3426:
  4751  1E86  1FA1               	btfss	___lwmod@divisor+1,7
  4752  1E87  2E89               	goto	u5041
  4753  1E88  2E8A               	goto	u5040
  4754  1E89                     u5041:
  4755  1E89  2E7B               	goto	l3422
  4756  1E8A                     u5040:
  4757  1E8A                     l3428:
  4758  1E8A  0821               	movf	___lwmod@divisor+1,w
  4759  1E8B  0223               	subwf	___lwmod@dividend+1,w
  4760  1E8C  1D03               	skipz
  4761  1E8D  2E90               	goto	u5055
  4762  1E8E  0820               	movf	___lwmod@divisor,w
  4763  1E8F  0222               	subwf	___lwmod@dividend,w
  4764  1E90                     u5055:
  4765  1E90  1C03               	skipc
  4766  1E91  2E93               	goto	u5051
  4767  1E92  2E94               	goto	u5050
  4768  1E93                     u5051:
  4769  1E93  2E9A               	goto	l3432
  4770  1E94                     u5050:
  4771  1E94                     l3430:
  4772  1E94  0820               	movf	___lwmod@divisor,w
  4773  1E95  02A2               	subwf	___lwmod@dividend,f
  4774  1E96  0821               	movf	___lwmod@divisor+1,w
  4775  1E97  1C03               	skipc
  4776  1E98  03A3               	decf	___lwmod@dividend+1,f
  4777  1E99  02A3               	subwf	___lwmod@dividend+1,f
  4778  1E9A                     l3432:
  4779  1E9A  3001               	movlw	1
  4780  1E9B                     u5065:
  4781  1E9B  1003               	clrc
  4782  1E9C  0CA1               	rrf	___lwmod@divisor+1,f
  4783  1E9D  0CA0               	rrf	___lwmod@divisor,f
  4784  1E9E  3EFF               	addlw	-1
  4785  1E9F  1D03               	skipz
  4786  1EA0  2E9B               	goto	u5065
  4787  1EA1                     l3434:
  4788  1EA1  3001               	movlw	1
  4789  1EA2  02A5               	subwf	___lwmod@counter,f
  4790  1EA3  1D03               	btfss	3,2
  4791  1EA4  2EA6               	goto	u5071
  4792  1EA5  2EA7               	goto	u5070
  4793  1EA6                     u5071:
  4794  1EA6  2E8A               	goto	l3428
  4795  1EA7                     u5070:
  4796  1EA7                     l3436:
  4797  1EA7  0823               	movf	___lwmod@dividend+1,w
  4798  1EA8  00A1               	movwf	?___lwmod+1
  4799  1EA9  0822               	movf	___lwmod@dividend,w
  4800  1EAA  00A0               	movwf	?___lwmod
  4801  1EAB                     l862:
  4802  1EAB  0008               	return
  4803  1EAC                     __end_of___lwmod:
  4804                           
  4805                           	psect	text12
  4806  1EAC                     __ptext12:	
  4807 ;; *************** function ___lwdiv *****************
  4808 ;; Defined at:
  4809 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lwdiv.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  divisor         2    6[BANK0 ] unsigned int 
  4812 ;;  dividend        2    8[BANK0 ] unsigned int 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  quotient        2   11[BANK0 ] unsigned int 
  4815 ;;  counter         1   13[BANK0 ] unsigned char 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  2    6[BANK0 ] unsigned int 
  4818 ;; Registers used:
  4819 ;;		wreg, status,2, status,0
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4825 ;;      Params:         0       4       0       0       0
  4826 ;;      Locals:         0       3       0       0       0
  4827 ;;      Temps:          0       1       0       0       0
  4828 ;;      Totals:         0       8       0       0       0
  4829 ;;Total ram usage:        8 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:    2
  4832 ;; This function calls:
  4833 ;;		Nothing
  4834 ;; This function is called by:
  4835 ;;		_fround
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           
  4840                           ;psect for function ___lwdiv
  4841  1EAC                     ___lwdiv:
  4842  1EAC                     l2398:	
  4843                           ;incstack = 0
  4844                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4845                           
  4846  1EAC  1283               	bcf	3,5	;RP0=0, select bank0
  4847  1EAD  1303               	bcf	3,6	;RP1=0, select bank0
  4848  1EAE  01AB               	clrf	___lwdiv@quotient
  4849  1EAF  01AC               	clrf	___lwdiv@quotient+1
  4850  1EB0                     l2400:
  4851  1EB0  0826               	movf	___lwdiv@divisor,w
  4852  1EB1  0427               	iorwf	___lwdiv@divisor+1,w
  4853  1EB2  1903               	btfsc	3,2
  4854  1EB3  2EB5               	goto	u3151
  4855  1EB4  2EB6               	goto	u3150
  4856  1EB5                     u3151:
  4857  1EB5  2EED               	goto	l2420
  4858  1EB6                     u3150:
  4859  1EB6                     l2402:
  4860  1EB6  01AD               	clrf	___lwdiv@counter
  4861  1EB7  0AAD               	incf	___lwdiv@counter,f
  4862  1EB8  2EC4               	goto	l2408
  4863  1EB9                     l2404:
  4864  1EB9  3001               	movlw	1
  4865  1EBA                     u3165:
  4866  1EBA  1003               	clrc
  4867  1EBB  0DA6               	rlf	___lwdiv@divisor,f
  4868  1EBC  0DA7               	rlf	___lwdiv@divisor+1,f
  4869  1EBD  3EFF               	addlw	-1
  4870  1EBE  1D03               	skipz
  4871  1EBF  2EBA               	goto	u3165
  4872  1EC0                     l2406:
  4873  1EC0  3001               	movlw	1
  4874  1EC1  00AA               	movwf	??___lwdiv
  4875  1EC2  082A               	movf	??___lwdiv,w
  4876  1EC3  07AD               	addwf	___lwdiv@counter,f
  4877  1EC4                     l2408:
  4878  1EC4  1FA7               	btfss	___lwdiv@divisor+1,7
  4879  1EC5  2EC7               	goto	u3171
  4880  1EC6  2EC8               	goto	u3170
  4881  1EC7                     u3171:
  4882  1EC7  2EB9               	goto	l2404
  4883  1EC8                     u3170:
  4884  1EC8                     l2410:
  4885  1EC8  3001               	movlw	1
  4886  1EC9                     u3185:
  4887  1EC9  1003               	clrc
  4888  1ECA  0DAB               	rlf	___lwdiv@quotient,f
  4889  1ECB  0DAC               	rlf	___lwdiv@quotient+1,f
  4890  1ECC  3EFF               	addlw	-1
  4891  1ECD  1D03               	skipz
  4892  1ECE  2EC9               	goto	u3185
  4893  1ECF  0827               	movf	___lwdiv@divisor+1,w
  4894  1ED0  0229               	subwf	___lwdiv@dividend+1,w
  4895  1ED1  1D03               	skipz
  4896  1ED2  2ED5               	goto	u3195
  4897  1ED3  0826               	movf	___lwdiv@divisor,w
  4898  1ED4  0228               	subwf	___lwdiv@dividend,w
  4899  1ED5                     u3195:
  4900  1ED5  1C03               	skipc
  4901  1ED6  2ED8               	goto	u3191
  4902  1ED7  2ED9               	goto	u3190
  4903  1ED8                     u3191:
  4904  1ED8  2EE0               	goto	l2416
  4905  1ED9                     u3190:
  4906  1ED9                     l2412:
  4907  1ED9  0826               	movf	___lwdiv@divisor,w
  4908  1EDA  02A8               	subwf	___lwdiv@dividend,f
  4909  1EDB  0827               	movf	___lwdiv@divisor+1,w
  4910  1EDC  1C03               	skipc
  4911  1EDD  03A9               	decf	___lwdiv@dividend+1,f
  4912  1EDE  02A9               	subwf	___lwdiv@dividend+1,f
  4913  1EDF                     l2414:
  4914  1EDF  142B               	bsf	___lwdiv@quotient,0
  4915  1EE0                     l2416:
  4916  1EE0  3001               	movlw	1
  4917  1EE1                     u3205:
  4918  1EE1  1003               	clrc
  4919  1EE2  0CA7               	rrf	___lwdiv@divisor+1,f
  4920  1EE3  0CA6               	rrf	___lwdiv@divisor,f
  4921  1EE4  3EFF               	addlw	-1
  4922  1EE5  1D03               	skipz
  4923  1EE6  2EE1               	goto	u3205
  4924  1EE7                     l2418:
  4925  1EE7  3001               	movlw	1
  4926  1EE8  02AD               	subwf	___lwdiv@counter,f
  4927  1EE9  1D03               	btfss	3,2
  4928  1EEA  2EEC               	goto	u3211
  4929  1EEB  2EED               	goto	u3210
  4930  1EEC                     u3211:
  4931  1EEC  2EC8               	goto	l2410
  4932  1EED                     u3210:
  4933  1EED                     l2420:
  4934  1EED  082C               	movf	___lwdiv@quotient+1,w
  4935  1EEE  00A7               	movwf	?___lwdiv+1
  4936  1EEF  082B               	movf	___lwdiv@quotient,w
  4937  1EF0  00A6               	movwf	?___lwdiv
  4938  1EF1                     l852:
  4939  1EF1  0008               	return
  4940  1EF2                     __end_of___lwdiv:
  4941                           
  4942                           	psect	text13
  4943  1D0B                     __ptext13:	
  4944 ;; *************** function ___bmul *****************
  4945 ;; Defined at:
  4946 ;;		line 4 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\Umul8.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  multiplier      1    wreg     unsigned char 
  4949 ;;  multiplicand    1   16[BANK0 ] unsigned char 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  multiplier      1   19[BANK0 ] unsigned char 
  4952 ;;  product         1   18[BANK0 ] unsigned char 
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      unsigned char 
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4962 ;;      Params:         0       1       0       0       0
  4963 ;;      Locals:         0       2       0       0       0
  4964 ;;      Temps:          0       1       0       0       0
  4965 ;;      Totals:         0       4       0       0       0
  4966 ;;Total ram usage:        4 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; Hardware stack levels required when called:    2
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_fround
  4973 ;;		_scale
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           
  4978                           ;psect for function ___bmul
  4979  1D0B                     ___bmul:
  4980                           
  4981                           ;incstack = 0
  4982                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4983                           ;___bmul@multiplier stored from wreg
  4984  1D0B  1283               	bcf	3,5	;RP0=0, select bank0
  4985  1D0C  1303               	bcf	3,6	;RP1=0, select bank0
  4986  1D0D  00B3               	movwf	___bmul@multiplier
  4987  1D0E                     l2182:
  4988  1D0E  01B2               	clrf	___bmul@product
  4989  1D0F                     l2184:
  4990  1D0F  1C33               	btfss	___bmul@multiplier,0
  4991  1D10  2D12               	goto	u2561
  4992  1D11  2D13               	goto	u2560
  4993  1D12                     u2561:
  4994  1D12  2D17               	goto	l2188
  4995  1D13                     u2560:
  4996  1D13                     l2186:
  4997  1D13  0830               	movf	___bmul@multiplicand,w
  4998  1D14  00B1               	movwf	??___bmul
  4999  1D15  0831               	movf	??___bmul,w
  5000  1D16  07B2               	addwf	___bmul@product,f
  5001  1D17                     l2188:
  5002  1D17  1003               	clrc
  5003  1D18  0DB0               	rlf	___bmul@multiplicand,f
  5004  1D19                     l2190:
  5005  1D19  1003               	clrc
  5006  1D1A  0CB3               	rrf	___bmul@multiplier,f
  5007  1D1B  0833               	movf	___bmul@multiplier,w
  5008  1D1C  1D03               	btfss	3,2
  5009  1D1D  2D1F               	goto	u2571
  5010  1D1E  2D20               	goto	u2570
  5011  1D1F                     u2571:
  5012  1D1F  2D0F               	goto	l2184
  5013  1D20                     u2570:
  5014  1D20                     l2192:
  5015  1D20  0832               	movf	___bmul@product,w
  5016  1D21                     l436:
  5017  1D21  0008               	return
  5018  1D22                     __end_of___bmul:
  5019                           
  5020                           	psect	text14
  5021  1382                     __ptext14:	
  5022 ;; *************** function __tdiv_to_l_ *****************
  5023 ;; Defined at:
  5024 ;;		line 60 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftdivl.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;  f1              3    0[BANK0 ] float 
  5027 ;;  f2              3    3[BANK0 ] float 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  quot            4   10[BANK0 ] unsigned long 
  5030 ;;  exp1            1   15[BANK0 ] unsigned char 
  5031 ;;  cntr            1   14[BANK0 ] unsigned char 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  4    0[BANK0 ] unsigned long 
  5034 ;; Registers used:
  5035 ;;		wreg, status,2, status,0
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5041 ;;      Params:         0       6       0       0       0
  5042 ;;      Locals:         0       6       0       0       0
  5043 ;;      Temps:          0       4       0       0       0
  5044 ;;      Totals:         0      16       0       0       0
  5045 ;;Total ram usage:       16 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    2
  5048 ;; This function calls:
  5049 ;;		Nothing
  5050 ;; This function is called by:
  5051 ;;		_sprintf
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           
  5056                           ;psect for function __tdiv_to_l_
  5057  1382                     __tdiv_to_l_:
  5058  1382                     l2550:	
  5059                           ;incstack = 0
  5060                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5061                           
  5062  1382  1283               	bcf	3,5	;RP0=0, select bank0
  5063  1383  1303               	bcf	3,6	;RP1=0, select bank0
  5064  1384  0820               	movf	__tdiv_to_l_@f1,w
  5065  1385  00A6               	movwf	??__tdiv_to_l_
  5066  1386  0821               	movf	__tdiv_to_l_@f1+1,w
  5067  1387  00A7               	movwf	??__tdiv_to_l_+1
  5068  1388  0822               	movf	__tdiv_to_l_@f1+2,w
  5069  1389  00A8               	movwf	??__tdiv_to_l_+2
  5070  138A  1003               	clrc
  5071  138B  0D27               	rlf	??__tdiv_to_l_+1,w
  5072  138C  0D28               	rlf	??__tdiv_to_l_+2,w
  5073  138D  00A9               	movwf	??__tdiv_to_l_+3
  5074  138E  0829               	movf	??__tdiv_to_l_+3,w
  5075  138F  00AF               	movwf	__tdiv_to_l_@exp1
  5076  1390  082F               	movf	__tdiv_to_l_@exp1,w
  5077  1391  1D03               	btfss	3,2
  5078  1392  2B94               	goto	u3461
  5079  1393  2B95               	goto	u3460
  5080  1394                     u3461:
  5081  1394  2B9E               	goto	l2556
  5082  1395                     u3460:
  5083  1395                     l2552:
  5084  1395  3000               	movlw	0
  5085  1396  00A3               	movwf	?__tdiv_to_l_+3
  5086  1397  3000               	movlw	0
  5087  1398  00A2               	movwf	?__tdiv_to_l_+2
  5088  1399  3000               	movlw	0
  5089  139A  00A1               	movwf	?__tdiv_to_l_+1
  5090  139B  3000               	movlw	0
  5091  139C  00A0               	movwf	?__tdiv_to_l_
  5092  139D  2C3E               	goto	l695
  5093  139E                     l2556:
  5094  139E  0823               	movf	__tdiv_to_l_@f2,w
  5095  139F  00A6               	movwf	??__tdiv_to_l_
  5096  13A0  0824               	movf	__tdiv_to_l_@f2+1,w
  5097  13A1  00A7               	movwf	??__tdiv_to_l_+1
  5098  13A2  0825               	movf	__tdiv_to_l_@f2+2,w
  5099  13A3  00A8               	movwf	??__tdiv_to_l_+2
  5100  13A4  1003               	clrc
  5101  13A5  0D27               	rlf	??__tdiv_to_l_+1,w
  5102  13A6  0D28               	rlf	??__tdiv_to_l_+2,w
  5103  13A7  00A9               	movwf	??__tdiv_to_l_+3
  5104  13A8  0829               	movf	??__tdiv_to_l_+3,w
  5105  13A9  00AE               	movwf	__tdiv_to_l_@cntr
  5106  13AA  082E               	movf	__tdiv_to_l_@cntr,w
  5107  13AB  1D03               	btfss	3,2
  5108  13AC  2BAE               	goto	u3471
  5109  13AD  2BAF               	goto	u3470
  5110  13AE                     u3471:
  5111  13AE  2BB0               	goto	l696
  5112  13AF                     u3470:
  5113  13AF  2B95               	goto	l2552
  5114  13B0                     l696:
  5115  13B0  17A1               	bsf	__tdiv_to_l_@f1+1,7
  5116  13B1                     l2562:
  5117  13B1  30FF               	movlw	255
  5118  13B2  05A0               	andwf	__tdiv_to_l_@f1,f
  5119  13B3  30FF               	movlw	255
  5120  13B4  05A1               	andwf	__tdiv_to_l_@f1+1,f
  5121  13B5  3000               	movlw	0
  5122  13B6  05A2               	andwf	__tdiv_to_l_@f1+2,f
  5123  13B7                     l2564:
  5124  13B7  17A4               	bsf	__tdiv_to_l_@f2+1,7
  5125  13B8  30FF               	movlw	255
  5126  13B9  05A3               	andwf	__tdiv_to_l_@f2,f
  5127  13BA  30FF               	movlw	255
  5128  13BB  05A4               	andwf	__tdiv_to_l_@f2+1,f
  5129  13BC  3000               	movlw	0
  5130  13BD  05A5               	andwf	__tdiv_to_l_@f2+2,f
  5131  13BE  3000               	movlw	0
  5132  13BF  00AD               	movwf	__tdiv_to_l_@quot+3
  5133  13C0  3000               	movlw	0
  5134  13C1  00AC               	movwf	__tdiv_to_l_@quot+2
  5135  13C2  3000               	movlw	0
  5136  13C3  00AB               	movwf	__tdiv_to_l_@quot+1
  5137  13C4  3000               	movlw	0
  5138  13C5  00AA               	movwf	__tdiv_to_l_@quot
  5139  13C6                     l2566:
  5140  13C6  307F               	movlw	127
  5141  13C7  02AF               	subwf	__tdiv_to_l_@exp1,f
  5142  13C8                     l2568:
  5143  13C8  3098               	movlw	152
  5144  13C9  072E               	addwf	__tdiv_to_l_@cntr,w
  5145  13CA  00A6               	movwf	??__tdiv_to_l_
  5146  13CB  0826               	movf	??__tdiv_to_l_,w
  5147  13CC  02AF               	subwf	__tdiv_to_l_@exp1,f
  5148  13CD  3018               	movlw	24
  5149  13CE  00A6               	movwf	??__tdiv_to_l_
  5150  13CF  0826               	movf	??__tdiv_to_l_,w
  5151  13D0  00AE               	movwf	__tdiv_to_l_@cntr
  5152  13D1                     l2570:
  5153  13D1  3001               	movlw	1
  5154  13D2  00A6               	movwf	??__tdiv_to_l_
  5155  13D3                     u3485:
  5156  13D3  1003               	clrc
  5157  13D4  0DAA               	rlf	__tdiv_to_l_@quot,f
  5158  13D5  0DAB               	rlf	__tdiv_to_l_@quot+1,f
  5159  13D6  0DAC               	rlf	__tdiv_to_l_@quot+2,f
  5160  13D7  0DAD               	rlf	__tdiv_to_l_@quot+3,f
  5161  13D8  0BA6               	decfsz	??__tdiv_to_l_,f
  5162  13D9  2BD3               	goto	u3485
  5163  13DA                     l2572:
  5164  13DA  0825               	movf	__tdiv_to_l_@f2+2,w
  5165  13DB  0222               	subwf	__tdiv_to_l_@f1+2,w
  5166  13DC  1D03               	skipz
  5167  13DD  2BE4               	goto	u3495
  5168  13DE  0824               	movf	__tdiv_to_l_@f2+1,w
  5169  13DF  0221               	subwf	__tdiv_to_l_@f1+1,w
  5170  13E0  1D03               	skipz
  5171  13E1  2BE4               	goto	u3495
  5172  13E2  0823               	movf	__tdiv_to_l_@f2,w
  5173  13E3  0220               	subwf	__tdiv_to_l_@f1,w
  5174  13E4                     u3495:
  5175  13E4  1C03               	skipc
  5176  13E5  2BE7               	goto	u3491
  5177  13E6  2BE8               	goto	u3490
  5178  13E7                     u3491:
  5179  13E7  2BF3               	goto	l2578
  5180  13E8                     u3490:
  5181  13E8                     l2574:
  5182  13E8  0823               	movf	__tdiv_to_l_@f2,w
  5183  13E9  02A0               	subwf	__tdiv_to_l_@f1,f
  5184  13EA  0824               	movf	__tdiv_to_l_@f2+1,w
  5185  13EB  1C03               	skipc
  5186  13EC  0F24               	incfsz	__tdiv_to_l_@f2+1,w
  5187  13ED  02A1               	subwf	__tdiv_to_l_@f1+1,f
  5188  13EE  0825               	movf	__tdiv_to_l_@f2+2,w
  5189  13EF  1C03               	skipc
  5190  13F0  0A25               	incf	__tdiv_to_l_@f2+2,w
  5191  13F1  02A2               	subwf	__tdiv_to_l_@f1+2,f
  5192  13F2                     l2576:
  5193  13F2  142A               	bsf	__tdiv_to_l_@quot,0
  5194  13F3                     l2578:
  5195  13F3  3001               	movlw	1
  5196  13F4                     u3505:
  5197  13F4  1003               	clrc
  5198  13F5  0DA0               	rlf	__tdiv_to_l_@f1,f
  5199  13F6  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  5200  13F7  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  5201  13F8  3EFF               	addlw	-1
  5202  13F9  1D03               	skipz
  5203  13FA  2BF4               	goto	u3505
  5204  13FB                     l2580:
  5205  13FB  3001               	movlw	1
  5206  13FC  02AE               	subwf	__tdiv_to_l_@cntr,f
  5207  13FD  1D03               	btfss	3,2
  5208  13FE  2C00               	goto	u3511
  5209  13FF  2C01               	goto	u3510
  5210  1400                     u3511:
  5211  1400  2BD1               	goto	l2570
  5212  1401                     u3510:
  5213  1401                     l699:
  5214  1401  1FAF               	btfss	__tdiv_to_l_@exp1,7
  5215  1402  2C04               	goto	u3521
  5216  1403  2C05               	goto	u3520
  5217  1404                     u3521:
  5218  1404  2C1F               	goto	l2590
  5219  1405                     u3520:
  5220  1405                     l2582:
  5221  1405  082F               	movf	__tdiv_to_l_@exp1,w
  5222  1406  3A80               	xorlw	128
  5223  1407  3E97               	addlw	151
  5224  1408  1803               	skipnc
  5225  1409  2C0B               	goto	u3531
  5226  140A  2C0C               	goto	u3530
  5227  140B                     u3531:
  5228  140B  2C0D               	goto	l2588
  5229  140C                     u3530:
  5230  140C  2B95               	goto	l2552
  5231  140D                     l2588:
  5232  140D  3001               	movlw	1
  5233  140E                     u3545:
  5234  140E  1003               	clrc
  5235  140F  0CAD               	rrf	__tdiv_to_l_@quot+3,f
  5236  1410  0CAC               	rrf	__tdiv_to_l_@quot+2,f
  5237  1411  0CAB               	rrf	__tdiv_to_l_@quot+1,f
  5238  1412  0CAA               	rrf	__tdiv_to_l_@quot,f
  5239  1413  3EFF               	addlw	-1
  5240  1414  1D03               	skipz
  5241  1415  2C0E               	goto	u3545
  5242  1416  3001               	movlw	1
  5243  1417  00A6               	movwf	??__tdiv_to_l_
  5244  1418  0826               	movf	??__tdiv_to_l_,w
  5245  1419  07AF               	addwf	__tdiv_to_l_@exp1,f
  5246  141A  1D03               	btfss	3,2
  5247  141B  2C1D               	goto	u3551
  5248  141C  2C1E               	goto	u3550
  5249  141D                     u3551:
  5250  141D  2C0D               	goto	l2588
  5251  141E                     u3550:
  5252  141E  2C36               	goto	l2598
  5253  141F                     l2590:
  5254  141F  3018               	movlw	24
  5255  1420  022F               	subwf	__tdiv_to_l_@exp1,w
  5256  1421  1C03               	skipc
  5257  1422  2C24               	goto	u3561
  5258  1423  2C25               	goto	u3560
  5259  1424                     u3561:
  5260  1424  2C31               	goto	l706
  5261  1425                     u3560:
  5262  1425  2B95               	goto	l2552
  5263  1426                     l2596:
  5264  1426  3001               	movlw	1
  5265  1427  00A6               	movwf	??__tdiv_to_l_
  5266  1428                     u3575:
  5267  1428  1003               	clrc
  5268  1429  0DAA               	rlf	__tdiv_to_l_@quot,f
  5269  142A  0DAB               	rlf	__tdiv_to_l_@quot+1,f
  5270  142B  0DAC               	rlf	__tdiv_to_l_@quot+2,f
  5271  142C  0DAD               	rlf	__tdiv_to_l_@quot+3,f
  5272  142D  0BA6               	decfsz	??__tdiv_to_l_,f
  5273  142E  2C28               	goto	u3575
  5274  142F  3001               	movlw	1
  5275  1430  02AF               	subwf	__tdiv_to_l_@exp1,f
  5276  1431                     l706:
  5277  1431  082F               	movf	__tdiv_to_l_@exp1,w
  5278  1432  1D03               	btfss	3,2
  5279  1433  2C35               	goto	u3581
  5280  1434  2C36               	goto	u3580
  5281  1435                     u3581:
  5282  1435  2C26               	goto	l2596
  5283  1436                     u3580:
  5284  1436                     l2598:
  5285  1436  082D               	movf	__tdiv_to_l_@quot+3,w
  5286  1437  00A3               	movwf	?__tdiv_to_l_+3
  5287  1438  082C               	movf	__tdiv_to_l_@quot+2,w
  5288  1439  00A2               	movwf	?__tdiv_to_l_+2
  5289  143A  082B               	movf	__tdiv_to_l_@quot+1,w
  5290  143B  00A1               	movwf	?__tdiv_to_l_+1
  5291  143C  082A               	movf	__tdiv_to_l_@quot,w
  5292  143D  00A0               	movwf	?__tdiv_to_l_
  5293  143E                     l695:
  5294  143E  0008               	return
  5295  143F                     __end_of__tdiv_to_l_:
  5296                           
  5297                           	psect	text15
  5298  16D3                     __ptext15:	
  5299 ;; *************** function __div_to_l_ *****************
  5300 ;; Defined at:
  5301 ;;		line 60 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\fldivl.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  f1              3    0[BANK0 ] unsigned long 
  5304 ;;  f2              3    3[BANK0 ] unsigned long 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  quot            4   14[BANK0 ] unsigned long 
  5307 ;;  exp1            1   19[BANK0 ] unsigned char 
  5308 ;;  cntr            1   18[BANK0 ] unsigned char 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  4    0[BANK0 ] unsigned long 
  5311 ;; Registers used:
  5312 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5318 ;;      Params:         0       6       0       0       0
  5319 ;;      Locals:         0       6       0       0       0
  5320 ;;      Temps:          0       8       0       0       0
  5321 ;;      Totals:         0      20       0       0       0
  5322 ;;Total ram usage:       20 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    2
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_sprintf
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           
  5333                           ;psect for function __div_to_l_
  5334  16D3                     __div_to_l_:
  5335  16D3                     l2602:	
  5336                           ;incstack = 0
  5337                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5338                           
  5339  16D3  3020               	movlw	low (__div_to_l_@f1| 0)
  5340  16D4  0084               	movwf	4
  5341  16D5  1383               	bcf	3,7	;select IRP bank0
  5342  16D6  0800               	movf	0,w
  5343  16D7  1283               	bcf	3,5	;RP0=0, select bank0
  5344  16D8  1303               	bcf	3,6	;RP1=0, select bank0
  5345  16D9  00A6               	movwf	??__div_to_l_
  5346  16DA  0A84               	incf	4,f
  5347  16DB  0800               	movf	0,w
  5348  16DC  00A7               	movwf	??__div_to_l_+1
  5349  16DD  0A84               	incf	4,f
  5350  16DE  0800               	movf	0,w
  5351  16DF  00A8               	movwf	??__div_to_l_+2
  5352  16E0  0A84               	incf	4,f
  5353  16E1  0800               	movf	0,w
  5354  16E2  00A9               	movwf	??__div_to_l_+3
  5355  16E3  1003               	clrc
  5356  16E4  0D28               	rlf	??__div_to_l_+2,w
  5357  16E5  0D29               	rlf	??__div_to_l_+3,w
  5358  16E6  00AA               	movwf	??__div_to_l_+4
  5359  16E7  082A               	movf	??__div_to_l_+4,w
  5360  16E8  00B3               	movwf	__div_to_l_@exp1
  5361  16E9  0833               	movf	__div_to_l_@exp1,w
  5362  16EA  1D03               	btfss	3,2
  5363  16EB  2EED               	goto	u3591
  5364  16EC  2EEE               	goto	u3590
  5365  16ED                     u3591:
  5366  16ED  2EF7               	goto	l2608
  5367  16EE                     u3590:
  5368  16EE                     l2604:
  5369  16EE  3000               	movlw	0
  5370  16EF  00A3               	movwf	?__div_to_l_+3
  5371  16F0  3000               	movlw	0
  5372  16F1  00A2               	movwf	?__div_to_l_+2
  5373  16F2  3000               	movlw	0
  5374  16F3  00A1               	movwf	?__div_to_l_+1
  5375  16F4  3000               	movlw	0
  5376  16F5  00A0               	movwf	?__div_to_l_
  5377  16F6  2FFF               	goto	l616
  5378  16F7                     l2608:
  5379  16F7  3023               	movlw	low (__div_to_l_@f2| 0)
  5380  16F8  0084               	movwf	4
  5381  16F9  0800               	movf	0,w
  5382  16FA  00A6               	movwf	??__div_to_l_
  5383  16FB  0A84               	incf	4,f
  5384  16FC  0800               	movf	0,w
  5385  16FD  00A7               	movwf	??__div_to_l_+1
  5386  16FE  0A84               	incf	4,f
  5387  16FF  0800               	movf	0,w
  5388  1700  00A8               	movwf	??__div_to_l_+2
  5389  1701  0A84               	incf	4,f
  5390  1702  0800               	movf	0,w
  5391  1703  00A9               	movwf	??__div_to_l_+3
  5392  1704  1003               	clrc
  5393  1705  0D28               	rlf	??__div_to_l_+2,w
  5394  1706  0D29               	rlf	??__div_to_l_+3,w
  5395  1707  00AA               	movwf	??__div_to_l_+4
  5396  1708  082A               	movf	??__div_to_l_+4,w
  5397  1709  00B2               	movwf	__div_to_l_@cntr
  5398  170A  0832               	movf	__div_to_l_@cntr,w
  5399  170B  1D03               	btfss	3,2
  5400  170C  2F0E               	goto	u3601
  5401  170D  2F0F               	goto	u3600
  5402  170E                     u3601:
  5403  170E  2F10               	goto	l2614
  5404  170F                     u3600:
  5405  170F  2EEE               	goto	l2604
  5406  1710                     l2614:
  5407  1710  3020               	movlw	low (__div_to_l_@f1| 0)
  5408  1711  0084               	movwf	4
  5409  1712  3000               	movlw	0
  5410  1713  0480               	iorwf	0,f
  5411  1714  0A84               	incf	4,f
  5412  1715  3000               	movlw	0
  5413  1716  0480               	iorwf	0,f
  5414  1717  0A84               	incf	4,f
  5415  1718  3080               	movlw	128
  5416  1719  0480               	iorwf	0,f
  5417  171A  0A84               	incf	4,f
  5418  171B  3000               	movlw	0
  5419  171C  0480               	iorwf	0,f
  5420  171D  3020               	movlw	low (__div_to_l_@f1| 0)
  5421  171E  0084               	movwf	4
  5422  171F  30FF               	movlw	255
  5423  1720  0580               	andwf	0,f
  5424  1721  0A84               	incf	4,f
  5425  1722  30FF               	movlw	255
  5426  1723  0580               	andwf	0,f
  5427  1724  0A84               	incf	4,f
  5428  1725  30FF               	movlw	255
  5429  1726  0580               	andwf	0,f
  5430  1727  0A84               	incf	4,f
  5431  1728  3000               	movlw	0
  5432  1729  0580               	andwf	0,f
  5433  172A  3023               	movlw	low (__div_to_l_@f2| 0)
  5434  172B  0084               	movwf	4
  5435  172C  3000               	movlw	0
  5436  172D  0480               	iorwf	0,f
  5437  172E  0A84               	incf	4,f
  5438  172F  3000               	movlw	0
  5439  1730  0480               	iorwf	0,f
  5440  1731  0A84               	incf	4,f
  5441  1732  3080               	movlw	128
  5442  1733  0480               	iorwf	0,f
  5443  1734  0A84               	incf	4,f
  5444  1735  3000               	movlw	0
  5445  1736  0480               	iorwf	0,f
  5446  1737  3023               	movlw	low (__div_to_l_@f2| 0)
  5447  1738  0084               	movwf	4
  5448  1739  30FF               	movlw	255
  5449  173A  0580               	andwf	0,f
  5450  173B  0A84               	incf	4,f
  5451  173C  30FF               	movlw	255
  5452  173D  0580               	andwf	0,f
  5453  173E  0A84               	incf	4,f
  5454  173F  30FF               	movlw	255
  5455  1740  0580               	andwf	0,f
  5456  1741  0A84               	incf	4,f
  5457  1742  3000               	movlw	0
  5458  1743  0580               	andwf	0,f
  5459  1744                     l2616:
  5460  1744  3000               	movlw	0
  5461  1745  00B1               	movwf	__div_to_l_@quot+3
  5462  1746  3000               	movlw	0
  5463  1747  00B0               	movwf	__div_to_l_@quot+2
  5464  1748  3000               	movlw	0
  5465  1749  00AF               	movwf	__div_to_l_@quot+1
  5466  174A  3000               	movlw	0
  5467  174B  00AE               	movwf	__div_to_l_@quot
  5468  174C                     l2618:
  5469  174C  307F               	movlw	127
  5470  174D  02B3               	subwf	__div_to_l_@exp1,f
  5471  174E                     l2620:
  5472  174E  30A0               	movlw	160
  5473  174F  0732               	addwf	__div_to_l_@cntr,w
  5474  1750  00A6               	movwf	??__div_to_l_
  5475  1751  0826               	movf	??__div_to_l_,w
  5476  1752  02B3               	subwf	__div_to_l_@exp1,f
  5477  1753                     l2622:
  5478  1753  3020               	movlw	32
  5479  1754  00A6               	movwf	??__div_to_l_
  5480  1755  0826               	movf	??__div_to_l_,w
  5481  1756  00B2               	movwf	__div_to_l_@cntr
  5482  1757                     l2624:
  5483  1757  3001               	movlw	1
  5484  1758  00A6               	movwf	??__div_to_l_
  5485  1759                     u3615:
  5486  1759  1003               	clrc
  5487  175A  0DAE               	rlf	__div_to_l_@quot,f
  5488  175B  0DAF               	rlf	__div_to_l_@quot+1,f
  5489  175C  0DB0               	rlf	__div_to_l_@quot+2,f
  5490  175D  0DB1               	rlf	__div_to_l_@quot+3,f
  5491  175E  0BA6               	decfsz	??__div_to_l_,f
  5492  175F  2F59               	goto	u3615
  5493  1760                     l2626:
  5494  1760  3023               	movlw	low (__div_to_l_@f2| 0)
  5495  1761  0084               	movwf	4
  5496  1762  0800               	movf	0,w
  5497  1763  00A6               	movwf	??__div_to_l_
  5498  1764  0A84               	incf	4,f
  5499  1765  0800               	movf	0,w
  5500  1766  00A7               	movwf	??__div_to_l_+1
  5501  1767  0A84               	incf	4,f
  5502  1768  0800               	movf	0,w
  5503  1769  00A8               	movwf	??__div_to_l_+2
  5504  176A  0A84               	incf	4,f
  5505  176B  0800               	movf	0,w
  5506  176C  00A9               	movwf	??__div_to_l_+3
  5507  176D  3020               	movlw	low (__div_to_l_@f1| 0)
  5508  176E  0084               	movwf	4
  5509  176F  0800               	movf	0,w
  5510  1770  00AA               	movwf	??__div_to_l_+4
  5511  1771  0A84               	incf	4,f
  5512  1772  0800               	movf	0,w
  5513  1773  00AB               	movwf	??__div_to_l_+5
  5514  1774  0A84               	incf	4,f
  5515  1775  0800               	movf	0,w
  5516  1776  00AC               	movwf	??__div_to_l_+6
  5517  1777  0A84               	incf	4,f
  5518  1778  0800               	movf	0,w
  5519  1779  00AD               	movwf	??__div_to_l_+7
  5520  177A  0829               	movf	??__div_to_l_+3,w
  5521  177B  022D               	subwf	??__div_to_l_+7,w
  5522  177C  1D03               	skipz
  5523  177D  2F88               	goto	u3625
  5524  177E  0828               	movf	??__div_to_l_+2,w
  5525  177F  022C               	subwf	??__div_to_l_+6,w
  5526  1780  1D03               	skipz
  5527  1781  2F88               	goto	u3625
  5528  1782  0827               	movf	??__div_to_l_+1,w
  5529  1783  022B               	subwf	??__div_to_l_+5,w
  5530  1784  1D03               	skipz
  5531  1785  2F88               	goto	u3625
  5532  1786  0826               	movf	??__div_to_l_,w
  5533  1787  022A               	subwf	??__div_to_l_+4,w
  5534  1788                     u3625:
  5535  1788  1C03               	skipc
  5536  1789  2F8B               	goto	u3621
  5537  178A  2F8C               	goto	u3620
  5538  178B                     u3621:
  5539  178B  2FAF               	goto	l619
  5540  178C                     u3620:
  5541  178C                     l2628:
  5542  178C  3023               	movlw	low (__div_to_l_@f2| 0)
  5543  178D  0084               	movwf	4
  5544  178E  0800               	movf	0,w
  5545  178F  00A6               	movwf	??__div_to_l_
  5546  1790  0A84               	incf	4,f
  5547  1791  0800               	movf	0,w
  5548  1792  00A7               	movwf	??__div_to_l_+1
  5549  1793  0A84               	incf	4,f
  5550  1794  0800               	movf	0,w
  5551  1795  00A8               	movwf	??__div_to_l_+2
  5552  1796  0A84               	incf	4,f
  5553  1797  0800               	movf	0,w
  5554  1798  00A9               	movwf	??__div_to_l_+3
  5555  1799  3020               	movlw	low (__div_to_l_@f1| 0)
  5556  179A  0084               	movwf	4
  5557  179B  0826               	movf	??__div_to_l_,w
  5558  179C  0280               	subwf	0,f
  5559  179D  0A84               	incf	4,f
  5560  179E  0827               	movf	??__div_to_l_+1,w
  5561  179F  1C03               	skipc
  5562  17A0  0F27               	incfsz	??__div_to_l_+1,w
  5563  17A1  0280               	subwf	0,f
  5564  17A2  0A84               	incf	4,f
  5565  17A3  0828               	movf	??__div_to_l_+2,w
  5566  17A4  1C03               	skipc
  5567  17A5  0F28               	incfsz	??__div_to_l_+2,w
  5568  17A6  0280               	subwf	0,f
  5569  17A7  0A84               	incf	4,f
  5570  17A8  0829               	movf	??__div_to_l_+3,w
  5571  17A9  1C03               	skipc
  5572  17AA  0A29               	incf	??__div_to_l_+3,w
  5573  17AB  0280               	subwf	0,f
  5574  17AC  3003               	movlw	3
  5575  17AD  0284               	subwf	4,f
  5576  17AE                     l2630:
  5577  17AE  142E               	bsf	__div_to_l_@quot,0
  5578  17AF                     l619:
  5579  17AF  3020               	movlw	low (__div_to_l_@f1| 0)
  5580  17B0  0084               	movwf	4
  5581  17B1  1003               	clrc
  5582  17B2  0D80               	rlf	0,f
  5583  17B3  0A84               	incf	4,f
  5584  17B4  0D80               	rlf	0,f
  5585  17B5  0A84               	incf	4,f
  5586  17B6  0D80               	rlf	0,f
  5587  17B7  0A84               	incf	4,f
  5588  17B8  0D80               	rlf	0,f
  5589  17B9  0384               	decf	4,f
  5590  17BA  0384               	decf	4,f
  5591  17BB  0384               	decf	4,f
  5592  17BC                     l2632:
  5593  17BC  3001               	movlw	1
  5594  17BD  02B2               	subwf	__div_to_l_@cntr,f
  5595  17BE  1D03               	btfss	3,2
  5596  17BF  2FC1               	goto	u3631
  5597  17C0  2FC2               	goto	u3630
  5598  17C1                     u3631:
  5599  17C1  2F57               	goto	l2624
  5600  17C2                     u3630:
  5601  17C2                     l620:
  5602  17C2  1FB3               	btfss	__div_to_l_@exp1,7
  5603  17C3  2FC5               	goto	u3641
  5604  17C4  2FC6               	goto	u3640
  5605  17C5                     u3641:
  5606  17C5  2FE0               	goto	l2642
  5607  17C6                     u3640:
  5608  17C6                     l2634:
  5609  17C6  0833               	movf	__div_to_l_@exp1,w
  5610  17C7  3A80               	xorlw	128
  5611  17C8  3E9F               	addlw	159
  5612  17C9  1803               	skipnc
  5613  17CA  2FCC               	goto	u3651
  5614  17CB  2FCD               	goto	u3650
  5615  17CC                     u3651:
  5616  17CC  2FCE               	goto	l2640
  5617  17CD                     u3650:
  5618  17CD  2EEE               	goto	l2604
  5619  17CE                     l2640:
  5620  17CE  3001               	movlw	1
  5621  17CF                     u3665:
  5622  17CF  1003               	clrc
  5623  17D0  0CB1               	rrf	__div_to_l_@quot+3,f
  5624  17D1  0CB0               	rrf	__div_to_l_@quot+2,f
  5625  17D2  0CAF               	rrf	__div_to_l_@quot+1,f
  5626  17D3  0CAE               	rrf	__div_to_l_@quot,f
  5627  17D4  3EFF               	addlw	-1
  5628  17D5  1D03               	skipz
  5629  17D6  2FCF               	goto	u3665
  5630  17D7  3001               	movlw	1
  5631  17D8  00A6               	movwf	??__div_to_l_
  5632  17D9  0826               	movf	??__div_to_l_,w
  5633  17DA  07B3               	addwf	__div_to_l_@exp1,f
  5634  17DB  1D03               	btfss	3,2
  5635  17DC  2FDE               	goto	u3671
  5636  17DD  2FDF               	goto	u3670
  5637  17DE                     u3671:
  5638  17DE  2FCE               	goto	l2640
  5639  17DF                     u3670:
  5640  17DF  2FF7               	goto	l2650
  5641  17E0                     l2642:
  5642  17E0  3020               	movlw	32
  5643  17E1  0233               	subwf	__div_to_l_@exp1,w
  5644  17E2  1C03               	skipc
  5645  17E3  2FE5               	goto	u3681
  5646  17E4  2FE6               	goto	u3680
  5647  17E5                     u3681:
  5648  17E5  2FF2               	goto	l627
  5649  17E6                     u3680:
  5650  17E6  2EEE               	goto	l2604
  5651  17E7                     l2648:
  5652  17E7  3001               	movlw	1
  5653  17E8  00A6               	movwf	??__div_to_l_
  5654  17E9                     u3695:
  5655  17E9  1003               	clrc
  5656  17EA  0DAE               	rlf	__div_to_l_@quot,f
  5657  17EB  0DAF               	rlf	__div_to_l_@quot+1,f
  5658  17EC  0DB0               	rlf	__div_to_l_@quot+2,f
  5659  17ED  0DB1               	rlf	__div_to_l_@quot+3,f
  5660  17EE  0BA6               	decfsz	??__div_to_l_,f
  5661  17EF  2FE9               	goto	u3695
  5662  17F0  3001               	movlw	1
  5663  17F1  02B3               	subwf	__div_to_l_@exp1,f
  5664  17F2                     l627:
  5665  17F2  0833               	movf	__div_to_l_@exp1,w
  5666  17F3  1D03               	btfss	3,2
  5667  17F4  2FF6               	goto	u3701
  5668  17F5  2FF7               	goto	u3700
  5669  17F6                     u3701:
  5670  17F6  2FE7               	goto	l2648
  5671  17F7                     u3700:
  5672  17F7                     l2650:
  5673  17F7  0831               	movf	__div_to_l_@quot+3,w
  5674  17F8  00A3               	movwf	?__div_to_l_+3
  5675  17F9  0830               	movf	__div_to_l_@quot+2,w
  5676  17FA  00A2               	movwf	?__div_to_l_+2
  5677  17FB  082F               	movf	__div_to_l_@quot+1,w
  5678  17FC  00A1               	movwf	?__div_to_l_+1
  5679  17FD  082E               	movf	__div_to_l_@quot,w
  5680  17FE  00A0               	movwf	?__div_to_l_
  5681  17FF                     l616:
  5682  17FF  0008               	return
  5683  1800                     __end_of__div_to_l_:
  5684                           
  5685                           	psect	text16
  5686  1D47                     __ptext16:	
  5687 ;; *************** function ___wmul *****************
  5688 ;; Defined at:
  5689 ;;		line 15 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\Umul16.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5692 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;  product         2    4[BANK0 ] unsigned int 
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  2    0[BANK0 ] unsigned int 
  5697 ;; Registers used:
  5698 ;;		wreg, status,2, status,0
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5704 ;;      Params:         0       4       0       0       0
  5705 ;;      Locals:         0       2       0       0       0
  5706 ;;      Temps:          0       0       0       0       0
  5707 ;;      Totals:         0       6       0       0       0
  5708 ;;Total ram usage:        6 bytes
  5709 ;; Hardware stack levels used:    1
  5710 ;; Hardware stack levels required when called:    2
  5711 ;; This function calls:
  5712 ;;		Nothing
  5713 ;; This function is called by:
  5714 ;;		_sprintf
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           
  5719                           ;psect for function ___wmul
  5720  1D47                     ___wmul:
  5721  1D47                     l3544:	
  5722                           ;incstack = 0
  5723                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5724                           
  5725  1D47  1283               	bcf	3,5	;RP0=0, select bank0
  5726  1D48  1303               	bcf	3,6	;RP1=0, select bank0
  5727  1D49  01A4               	clrf	___wmul@product
  5728  1D4A  01A5               	clrf	___wmul@product+1
  5729  1D4B                     l3546:
  5730  1D4B  1C20               	btfss	___wmul@multiplier,0
  5731  1D4C  2D4E               	goto	u5261
  5732  1D4D  2D4F               	goto	u5260
  5733  1D4E                     u5261:
  5734  1D4E  2D55               	goto	l410
  5735  1D4F                     u5260:
  5736  1D4F                     l3548:
  5737  1D4F  0822               	movf	___wmul@multiplicand,w
  5738  1D50  07A4               	addwf	___wmul@product,f
  5739  1D51  1803               	skipnc
  5740  1D52  0AA5               	incf	___wmul@product+1,f
  5741  1D53  0823               	movf	___wmul@multiplicand+1,w
  5742  1D54  07A5               	addwf	___wmul@product+1,f
  5743  1D55                     l410:
  5744  1D55  3001               	movlw	1
  5745  1D56                     u5275:
  5746  1D56  1003               	clrc
  5747  1D57  0DA2               	rlf	___wmul@multiplicand,f
  5748  1D58  0DA3               	rlf	___wmul@multiplicand+1,f
  5749  1D59  3EFF               	addlw	-1
  5750  1D5A  1D03               	skipz
  5751  1D5B  2D56               	goto	u5275
  5752  1D5C                     l3550:
  5753  1D5C  3001               	movlw	1
  5754  1D5D                     u5285:
  5755  1D5D  1003               	clrc
  5756  1D5E  0CA1               	rrf	___wmul@multiplier+1,f
  5757  1D5F  0CA0               	rrf	___wmul@multiplier,f
  5758  1D60  3EFF               	addlw	-1
  5759  1D61  1D03               	skipz
  5760  1D62  2D5D               	goto	u5285
  5761  1D63                     l3552:
  5762  1D63  0820               	movf	___wmul@multiplier,w
  5763  1D64  0421               	iorwf	___wmul@multiplier+1,w
  5764  1D65  1D03               	btfss	3,2
  5765  1D66  2D68               	goto	u5291
  5766  1D67  2D69               	goto	u5290
  5767  1D68                     u5291:
  5768  1D68  2D4B               	goto	l3546
  5769  1D69                     u5290:
  5770  1D69                     l3554:
  5771  1D69  0825               	movf	___wmul@product+1,w
  5772  1D6A  00A1               	movwf	?___wmul+1
  5773  1D6B  0824               	movf	___wmul@product,w
  5774  1D6C  00A0               	movwf	?___wmul
  5775  1D6D                     l412:
  5776  1D6D  0008               	return
  5777  1D6E                     __end_of___wmul:
  5778                           
  5779                           	psect	text17
  5780  1EF2                     __ptext17:	
  5781 ;; *************** function ___llmod *****************
  5782 ;; Defined at:
  5783 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\llmod.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  divisor         4    0[BANK0 ] unsigned long 
  5786 ;;  dividend        4    4[BANK0 ] unsigned long 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  counter         1    9[BANK0 ] unsigned char 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  4    0[BANK0 ] unsigned long 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5798 ;;      Params:         0       8       0       0       0
  5799 ;;      Locals:         0       1       0       0       0
  5800 ;;      Temps:          0       1       0       0       0
  5801 ;;      Totals:         0      10       0       0       0
  5802 ;;Total ram usage:       10 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    2
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_sprintf
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           
  5813                           ;psect for function ___llmod
  5814  1EF2                     ___llmod:
  5815  1EF2                     l3658:	
  5816                           ;incstack = 0
  5817                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5818                           
  5819  1EF2  1283               	bcf	3,5	;RP0=0, select bank0
  5820  1EF3  1303               	bcf	3,6	;RP1=0, select bank0
  5821  1EF4  0823               	movf	___llmod@divisor+3,w
  5822  1EF5  0422               	iorwf	___llmod@divisor+2,w
  5823  1EF6  0421               	iorwf	___llmod@divisor+1,w
  5824  1EF7  0420               	iorwf	___llmod@divisor,w
  5825  1EF8  1903               	skipnz
  5826  1EF9  2EFB               	goto	u5521
  5827  1EFA  2EFC               	goto	u5520
  5828  1EFB                     u5521:
  5829  1EFB  2F3F               	goto	l3674
  5830  1EFC                     u5520:
  5831  1EFC                     l3660:
  5832  1EFC  01A9               	clrf	___llmod@counter
  5833  1EFD  0AA9               	incf	___llmod@counter,f
  5834  1EFE  2F0C               	goto	l3664
  5835  1EFF                     l3662:
  5836  1EFF  3001               	movlw	1
  5837  1F00  00A8               	movwf	??___llmod
  5838  1F01                     u5535:
  5839  1F01  1003               	clrc
  5840  1F02  0DA0               	rlf	___llmod@divisor,f
  5841  1F03  0DA1               	rlf	___llmod@divisor+1,f
  5842  1F04  0DA2               	rlf	___llmod@divisor+2,f
  5843  1F05  0DA3               	rlf	___llmod@divisor+3,f
  5844  1F06  0BA8               	decfsz	??___llmod,f
  5845  1F07  2F01               	goto	u5535
  5846  1F08  3001               	movlw	1
  5847  1F09  00A8               	movwf	??___llmod
  5848  1F0A  0828               	movf	??___llmod,w
  5849  1F0B  07A9               	addwf	___llmod@counter,f
  5850  1F0C                     l3664:
  5851  1F0C  1FA3               	btfss	___llmod@divisor+3,7
  5852  1F0D  2F0F               	goto	u5541
  5853  1F0E  2F10               	goto	u5540
  5854  1F0F                     u5541:
  5855  1F0F  2EFF               	goto	l3662
  5856  1F10                     u5540:
  5857  1F10                     l3666:
  5858  1F10  0823               	movf	___llmod@divisor+3,w
  5859  1F11  0227               	subwf	___llmod@dividend+3,w
  5860  1F12  1D03               	skipz
  5861  1F13  2F1E               	goto	u5555
  5862  1F14  0822               	movf	___llmod@divisor+2,w
  5863  1F15  0226               	subwf	___llmod@dividend+2,w
  5864  1F16  1D03               	skipz
  5865  1F17  2F1E               	goto	u5555
  5866  1F18  0821               	movf	___llmod@divisor+1,w
  5867  1F19  0225               	subwf	___llmod@dividend+1,w
  5868  1F1A  1D03               	skipz
  5869  1F1B  2F1E               	goto	u5555
  5870  1F1C  0820               	movf	___llmod@divisor,w
  5871  1F1D  0224               	subwf	___llmod@dividend,w
  5872  1F1E                     u5555:
  5873  1F1E  1C03               	skipc
  5874  1F1F  2F21               	goto	u5551
  5875  1F20  2F22               	goto	u5550
  5876  1F21                     u5551:
  5877  1F21  2F30               	goto	l3670
  5878  1F22                     u5550:
  5879  1F22                     l3668:
  5880  1F22  0820               	movf	___llmod@divisor,w
  5881  1F23  02A4               	subwf	___llmod@dividend,f
  5882  1F24  0821               	movf	___llmod@divisor+1,w
  5883  1F25  1C03               	skipc
  5884  1F26  0F21               	incfsz	___llmod@divisor+1,w
  5885  1F27  02A5               	subwf	___llmod@dividend+1,f
  5886  1F28  0822               	movf	___llmod@divisor+2,w
  5887  1F29  1C03               	skipc
  5888  1F2A  0F22               	incfsz	___llmod@divisor+2,w
  5889  1F2B  02A6               	subwf	___llmod@dividend+2,f
  5890  1F2C  0823               	movf	___llmod@divisor+3,w
  5891  1F2D  1C03               	skipc
  5892  1F2E  0F23               	incfsz	___llmod@divisor+3,w
  5893  1F2F  02A7               	subwf	___llmod@dividend+3,f
  5894  1F30                     l3670:
  5895  1F30  3001               	movlw	1
  5896  1F31                     u5565:
  5897  1F31  1003               	clrc
  5898  1F32  0CA3               	rrf	___llmod@divisor+3,f
  5899  1F33  0CA2               	rrf	___llmod@divisor+2,f
  5900  1F34  0CA1               	rrf	___llmod@divisor+1,f
  5901  1F35  0CA0               	rrf	___llmod@divisor,f
  5902  1F36  3EFF               	addlw	-1
  5903  1F37  1D03               	skipz
  5904  1F38  2F31               	goto	u5565
  5905  1F39                     l3672:
  5906  1F39  3001               	movlw	1
  5907  1F3A  02A9               	subwf	___llmod@counter,f
  5908  1F3B  1D03               	btfss	3,2
  5909  1F3C  2F3E               	goto	u5571
  5910  1F3D  2F3F               	goto	u5570
  5911  1F3E                     u5571:
  5912  1F3E  2F10               	goto	l3666
  5913  1F3F                     u5570:
  5914  1F3F                     l3674:
  5915  1F3F  0827               	movf	___llmod@dividend+3,w
  5916  1F40  00A3               	movwf	?___llmod+3
  5917  1F41  0826               	movf	___llmod@dividend+2,w
  5918  1F42  00A2               	movwf	?___llmod+2
  5919  1F43  0825               	movf	___llmod@dividend+1,w
  5920  1F44  00A1               	movwf	?___llmod+1
  5921  1F45  0824               	movf	___llmod@dividend,w
  5922  1F46  00A0               	movwf	?___llmod
  5923  1F47                     l781:
  5924  1F47  0008               	return
  5925  1F48                     __end_of___llmod:
  5926                           
  5927                           	psect	text18
  5928  1259                     __ptext18:	
  5929 ;; *************** function ___fttol *****************
  5930 ;; Defined at:
  5931 ;;		line 44 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\fttol.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  f1              3   45[BANK0 ] float 
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;  lval            4   54[BANK0 ] unsigned long 
  5936 ;;  exp1            1   58[BANK0 ] unsigned char 
  5937 ;;  sign1           1   53[BANK0 ] unsigned char 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  4   45[BANK0 ] long 
  5940 ;; Registers used:
  5941 ;;		wreg, status,2, status,0
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5947 ;;      Params:         0       4       0       0       0
  5948 ;;      Locals:         0       6       0       0       0
  5949 ;;      Temps:          0       4       0       0       0
  5950 ;;      Totals:         0      14       0       0       0
  5951 ;;Total ram usage:       14 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    2
  5954 ;; This function calls:
  5955 ;;		Nothing
  5956 ;; This function is called by:
  5957 ;;		_sprintf
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           
  5962                           ;psect for function ___fttol
  5963  1259                     ___fttol:
  5964  1259                     l2810:	
  5965                           ;incstack = 0
  5966                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5967                           
  5968  1259  1283               	bcf	3,5	;RP0=0, select bank0
  5969  125A  1303               	bcf	3,6	;RP1=0, select bank0
  5970  125B  084D               	movf	___fttol@f1,w
  5971  125C  00D1               	movwf	??___fttol
  5972  125D  084E               	movf	___fttol@f1+1,w
  5973  125E  00D2               	movwf	??___fttol+1
  5974  125F  084F               	movf	___fttol@f1+2,w
  5975  1260  00D3               	movwf	??___fttol+2
  5976  1261  1003               	clrc
  5977  1262  0D52               	rlf	??___fttol+1,w
  5978  1263  0D53               	rlf	??___fttol+2,w
  5979  1264  00D4               	movwf	??___fttol+3
  5980  1265  0854               	movf	??___fttol+3,w
  5981  1266  00DA               	movwf	___fttol@exp1
  5982  1267  085A               	movf	___fttol@exp1,w
  5983  1268  1D03               	btfss	3,2
  5984  1269  2A6B               	goto	u4051
  5985  126A  2A6C               	goto	u4050
  5986  126B                     u4051:
  5987  126B  2A75               	goto	l2816
  5988  126C                     u4050:
  5989  126C                     l2812:
  5990  126C  3000               	movlw	0
  5991  126D  00D0               	movwf	?___fttol+3
  5992  126E  3000               	movlw	0
  5993  126F  00CF               	movwf	?___fttol+2
  5994  1270  3000               	movlw	0
  5995  1271  00CE               	movwf	?___fttol+1
  5996  1272  3000               	movlw	0
  5997  1273  00CD               	movwf	?___fttol
  5998  1274  2AE4               	goto	l740
  5999  1275                     l2816:
  6000  1275  084D               	movf	___fttol@f1,w
  6001  1276  00D1               	movwf	??___fttol
  6002  1277  084E               	movf	___fttol@f1+1,w
  6003  1278  00D2               	movwf	??___fttol+1
  6004  1279  084F               	movf	___fttol@f1+2,w
  6005  127A  00D3               	movwf	??___fttol+2
  6006  127B  3017               	movlw	23
  6007  127C                     u4065:
  6008  127C  1003               	clrc
  6009  127D  0CD3               	rrf	??___fttol+2,f
  6010  127E  0CD2               	rrf	??___fttol+1,f
  6011  127F  0CD1               	rrf	??___fttol,f
  6012  1280                     u4060:
  6013  1280  3EFF               	addlw	-1
  6014  1281  1D03               	skipz
  6015  1282  2A7C               	goto	u4065
  6016  1283  0851               	movf	??___fttol,w
  6017  1284  00D4               	movwf	??___fttol+3
  6018  1285  0854               	movf	??___fttol+3,w
  6019  1286  00D5               	movwf	___fttol@sign1
  6020  1287                     l2818:
  6021  1287  17CE               	bsf	___fttol@f1+1,7
  6022  1288                     l2820:
  6023  1288  30FF               	movlw	255
  6024  1289  05CD               	andwf	___fttol@f1,f
  6025  128A  30FF               	movlw	255
  6026  128B  05CE               	andwf	___fttol@f1+1,f
  6027  128C  3000               	movlw	0
  6028  128D  05CF               	andwf	___fttol@f1+2,f
  6029  128E                     l2822:
  6030  128E  084D               	movf	___fttol@f1,w
  6031  128F  00D6               	movwf	___fttol@lval
  6032  1290  084E               	movf	___fttol@f1+1,w
  6033  1291  00D7               	movwf	___fttol@lval+1
  6034  1292  084F               	movf	___fttol@f1+2,w
  6035  1293  00D8               	movwf	___fttol@lval+2
  6036  1294  01D9               	clrf	___fttol@lval+3
  6037  1295                     l2824:
  6038  1295  308E               	movlw	142
  6039  1296  02DA               	subwf	___fttol@exp1,f
  6040  1297                     l2826:
  6041  1297  1FDA               	btfss	___fttol@exp1,7
  6042  1298  2A9A               	goto	u4071
  6043  1299  2A9B               	goto	u4070
  6044  129A                     u4071:
  6045  129A  2AB5               	goto	l2836
  6046  129B                     u4070:
  6047  129B                     l2828:
  6048  129B  085A               	movf	___fttol@exp1,w
  6049  129C  3A80               	xorlw	128
  6050  129D  3E8F               	addlw	143
  6051  129E  1803               	skipnc
  6052  129F  2AA1               	goto	u4081
  6053  12A0  2AA2               	goto	u4080
  6054  12A1                     u4081:
  6055  12A1  2AA3               	goto	l2834
  6056  12A2                     u4080:
  6057  12A2  2A6C               	goto	l2812
  6058  12A3                     l2834:
  6059  12A3  3001               	movlw	1
  6060  12A4                     u4095:
  6061  12A4  1003               	clrc
  6062  12A5  0CD9               	rrf	___fttol@lval+3,f
  6063  12A6  0CD8               	rrf	___fttol@lval+2,f
  6064  12A7  0CD7               	rrf	___fttol@lval+1,f
  6065  12A8  0CD6               	rrf	___fttol@lval,f
  6066  12A9  3EFF               	addlw	-1
  6067  12AA  1D03               	skipz
  6068  12AB  2AA4               	goto	u4095
  6069  12AC  3001               	movlw	1
  6070  12AD  00D1               	movwf	??___fttol
  6071  12AE  0851               	movf	??___fttol,w
  6072  12AF  07DA               	addwf	___fttol@exp1,f
  6073  12B0  1D03               	btfss	3,2
  6074  12B1  2AB3               	goto	u4101
  6075  12B2  2AB4               	goto	u4100
  6076  12B3                     u4101:
  6077  12B3  2AA3               	goto	l2834
  6078  12B4                     u4100:
  6079  12B4  2ACC               	goto	l2844
  6080  12B5                     l2836:
  6081  12B5  3018               	movlw	24
  6082  12B6  025A               	subwf	___fttol@exp1,w
  6083  12B7  1C03               	skipc
  6084  12B8  2ABA               	goto	u4111
  6085  12B9  2ABB               	goto	u4110
  6086  12BA                     u4111:
  6087  12BA  2AC7               	goto	l747
  6088  12BB                     u4110:
  6089  12BB  2A6C               	goto	l2812
  6090  12BC                     l2842:
  6091  12BC  3001               	movlw	1
  6092  12BD  00D1               	movwf	??___fttol
  6093  12BE                     u4125:
  6094  12BE  1003               	clrc
  6095  12BF  0DD6               	rlf	___fttol@lval,f
  6096  12C0  0DD7               	rlf	___fttol@lval+1,f
  6097  12C1  0DD8               	rlf	___fttol@lval+2,f
  6098  12C2  0DD9               	rlf	___fttol@lval+3,f
  6099  12C3  0BD1               	decfsz	??___fttol,f
  6100  12C4  2ABE               	goto	u4125
  6101  12C5  3001               	movlw	1
  6102  12C6  02DA               	subwf	___fttol@exp1,f
  6103  12C7                     l747:
  6104  12C7  085A               	movf	___fttol@exp1,w
  6105  12C8  1D03               	btfss	3,2
  6106  12C9  2ACB               	goto	u4131
  6107  12CA  2ACC               	goto	u4130
  6108  12CB                     u4131:
  6109  12CB  2ABC               	goto	l2842
  6110  12CC                     u4130:
  6111  12CC                     l2844:
  6112  12CC  0855               	movf	___fttol@sign1,w
  6113  12CD  1903               	btfsc	3,2
  6114  12CE  2AD0               	goto	u4141
  6115  12CF  2AD1               	goto	u4140
  6116  12D0                     u4141:
  6117  12D0  2ADC               	goto	l2848
  6118  12D1                     u4140:
  6119  12D1                     l2846:
  6120  12D1  09D6               	comf	___fttol@lval,f
  6121  12D2  09D7               	comf	___fttol@lval+1,f
  6122  12D3  09D8               	comf	___fttol@lval+2,f
  6123  12D4  09D9               	comf	___fttol@lval+3,f
  6124  12D5  0AD6               	incf	___fttol@lval,f
  6125  12D6  1903               	skipnz
  6126  12D7  0AD7               	incf	___fttol@lval+1,f
  6127  12D8  1903               	skipnz
  6128  12D9  0AD8               	incf	___fttol@lval+2,f
  6129  12DA  1903               	skipnz
  6130  12DB  0AD9               	incf	___fttol@lval+3,f
  6131  12DC                     l2848:
  6132  12DC  0859               	movf	___fttol@lval+3,w
  6133  12DD  00D0               	movwf	?___fttol+3
  6134  12DE  0858               	movf	___fttol@lval+2,w
  6135  12DF  00CF               	movwf	?___fttol+2
  6136  12E0  0857               	movf	___fttol@lval+1,w
  6137  12E1  00CE               	movwf	?___fttol+1
  6138  12E2  0856               	movf	___fttol@lval,w
  6139  12E3  00CD               	movwf	?___fttol
  6140  12E4                     l740:
  6141  12E4  0008               	return
  6142  12E5                     __end_of___fttol:
  6143                           
  6144                           	psect	text19
  6145  1D22                     __ptext19:	
  6146 ;; *************** function ___ftsub *****************
  6147 ;; Defined at:
  6148 ;;		line 17 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftsub.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;  f2              3   65[BANK0 ] float 
  6151 ;;  f1              3   68[BANK0 ] float 
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  3   65[BANK0 ] float 
  6156 ;; Registers used:
  6157 ;;		wreg, status,2, status,0, pclath, cstack
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6163 ;;      Params:         0       6       0       0       0
  6164 ;;      Locals:         0       0       0       0       0
  6165 ;;      Temps:          0       0       0       0       0
  6166 ;;      Totals:         0       6       0       0       0
  6167 ;;Total ram usage:        6 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:    4
  6170 ;; This function calls:
  6171 ;;		___ftadd
  6172 ;; This function is called by:
  6173 ;;		_sprintf
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           
  6178                           ;psect for function ___ftsub
  6179  1D22                     ___ftsub:
  6180  1D22                     l3650:	
  6181                           ;incstack = 0
  6182                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6183                           
  6184  1D22  1283               	bcf	3,5	;RP0=0, select bank0
  6185  1D23  1303               	bcf	3,6	;RP1=0, select bank0
  6186  1D24  0863               	movf	___ftsub@f2+2,w
  6187  1D25  0462               	iorwf	___ftsub@f2+1,w
  6188  1D26  0461               	iorwf	___ftsub@f2,w
  6189  1D27  1903               	skipnz
  6190  1D28  2D2A               	goto	u5511
  6191  1D29  2D2B               	goto	u5510
  6192  1D2A                     u5511:
  6193  1D2A  2D2D               	goto	l3654
  6194  1D2B                     u5510:
  6195  1D2B                     l3652:
  6196  1D2B  3080               	movlw	128
  6197  1D2C  06E3               	xorwf	___ftsub@f2+2,f
  6198  1D2D                     l3654:
  6199  1D2D  0864               	movf	___ftsub@f1,w
  6200  1D2E  00D4               	movwf	___ftadd@f1
  6201  1D2F  0865               	movf	___ftsub@f1+1,w
  6202  1D30  00D5               	movwf	___ftadd@f1+1
  6203  1D31  0866               	movf	___ftsub@f1+2,w
  6204  1D32  00D6               	movwf	___ftadd@f1+2
  6205  1D33  0861               	movf	___ftsub@f2,w
  6206  1D34  00D7               	movwf	___ftadd@f2
  6207  1D35  0862               	movf	___ftsub@f2+1,w
  6208  1D36  00D8               	movwf	___ftadd@f2+1
  6209  1D37  0863               	movf	___ftsub@f2+2,w
  6210  1D38  00D9               	movwf	___ftadd@f2+2
  6211  1D39  120A  158A  20F5  160A  158A  	fcall	___ftadd
  6212  1D3E  1283               	bcf	3,5	;RP0=0, select bank0
  6213  1D3F  1303               	bcf	3,6	;RP1=0, select bank0
  6214  1D40  0854               	movf	?___ftadd,w
  6215  1D41  00E1               	movwf	?___ftsub
  6216  1D42  0855               	movf	?___ftadd+1,w
  6217  1D43  00E2               	movwf	?___ftsub+1
  6218  1D44  0856               	movf	?___ftadd+2,w
  6219  1D45  00E3               	movwf	?___ftsub+2
  6220  1D46                     l736:
  6221  1D46  0008               	return
  6222  1D47                     __end_of___ftsub:
  6223                           
  6224                           	psect	text20
  6225  1C9B                     __ptext20:	
  6226 ;; *************** function ___ftneg *****************
  6227 ;; Defined at:
  6228 ;;		line 15 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftneg.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  f1              3    0[BANK0 ] float 
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;		None
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  3    0[BANK0 ] float 
  6235 ;; Registers used:
  6236 ;;		wreg
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6242 ;;      Params:         0       3       0       0       0
  6243 ;;      Locals:         0       0       0       0       0
  6244 ;;      Temps:          0       0       0       0       0
  6245 ;;      Totals:         0       3       0       0       0
  6246 ;;Total ram usage:        3 bytes
  6247 ;; Hardware stack levels used:    1
  6248 ;; Hardware stack levels required when called:    2
  6249 ;; This function calls:
  6250 ;;		Nothing
  6251 ;; This function is called by:
  6252 ;;		_sprintf
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           
  6257                           ;psect for function ___ftneg
  6258  1C9B                     ___ftneg:
  6259  1C9B                     l3642:	
  6260                           ;incstack = 0
  6261                           ; Regs used in ___ftneg: [wreg]
  6262                           
  6263  1C9B  1283               	bcf	3,5	;RP0=0, select bank0
  6264  1C9C  1303               	bcf	3,6	;RP1=0, select bank0
  6265  1C9D  0822               	movf	___ftneg@f1+2,w
  6266  1C9E  0421               	iorwf	___ftneg@f1+1,w
  6267  1C9F  0420               	iorwf	___ftneg@f1,w
  6268  1CA0  1903               	skipnz
  6269  1CA1  2CA3               	goto	u5501
  6270  1CA2  2CA4               	goto	u5500
  6271  1CA3                     u5501:
  6272  1CA3  2CA6               	goto	l3646
  6273  1CA4                     u5500:
  6274  1CA4                     l3644:
  6275  1CA4  3080               	movlw	128
  6276  1CA5  06A2               	xorwf	___ftneg@f1+2,f
  6277  1CA6                     l3646:
  6278  1CA6                     l730:
  6279  1CA6  0008               	return
  6280  1CA7                     __end_of___ftneg:
  6281                           
  6282                           	psect	text21
  6283  1E36                     __ptext21:	
  6284 ;; *************** function ___ftge *****************
  6285 ;; Defined at:
  6286 ;;		line 4 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftge.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  ff1             3    0[BANK0 ] float 
  6289 ;;  ff2             3    3[BANK0 ] float 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;		None
  6292 ;; Return value:  Size  Location     Type
  6293 ;;		None               void
  6294 ;; Registers used:
  6295 ;;		wreg, status,2, status,0
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6301 ;;      Params:         0       6       0       0       0
  6302 ;;      Locals:         0       0       0       0       0
  6303 ;;      Temps:          0       0       0       0       0
  6304 ;;      Totals:         0       6       0       0       0
  6305 ;;Total ram usage:        6 bytes
  6306 ;; Hardware stack levels used:    1
  6307 ;; Hardware stack levels required when called:    2
  6308 ;; This function calls:
  6309 ;;		Nothing
  6310 ;; This function is called by:
  6311 ;;		_sprintf
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           
  6316                           ;psect for function ___ftge
  6317  1E36                     ___ftge:
  6318  1E36                     l3622:	
  6319                           ;incstack = 0
  6320                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6321                           
  6322  1E36  1283               	bcf	3,5	;RP0=0, select bank0
  6323  1E37  1303               	bcf	3,6	;RP1=0, select bank0
  6324  1E38  1FA2               	btfss	___ftge@ff1+2,7
  6325  1E39  2E3B               	goto	u5471
  6326  1E3A  2E3C               	goto	u5470
  6327  1E3B                     u5471:
  6328  1E3B  2E49               	goto	l3626
  6329  1E3C                     u5470:
  6330  1E3C                     l3624:
  6331  1E3C  0820               	movf	___ftge@ff1,w
  6332  1E3D  3C00               	sublw	0
  6333  1E3E  00A0               	movwf	___ftge@ff1
  6334  1E3F  0821               	movf	___ftge@ff1+1,w
  6335  1E40  1C03               	skipc
  6336  1E41  0F21               	incfsz	___ftge@ff1+1,w
  6337  1E42  3C00               	sublw	0
  6338  1E43  00A1               	movwf	___ftge@ff1+1
  6339  1E44  0822               	movf	___ftge@ff1+2,w
  6340  1E45  1C03               	skipc
  6341  1E46  0F22               	incfsz	___ftge@ff1+2,w
  6342  1E47  3C80               	sublw	128
  6343  1E48  00A2               	movwf	___ftge@ff1+2
  6344  1E49                     l3626:
  6345  1E49  1FA5               	btfss	___ftge@ff2+2,7
  6346  1E4A  2E4C               	goto	u5481
  6347  1E4B  2E4D               	goto	u5480
  6348  1E4C                     u5481:
  6349  1E4C  2E5A               	goto	l3630
  6350  1E4D                     u5480:
  6351  1E4D                     l3628:
  6352  1E4D  0823               	movf	___ftge@ff2,w
  6353  1E4E  3C00               	sublw	0
  6354  1E4F  00A3               	movwf	___ftge@ff2
  6355  1E50  0824               	movf	___ftge@ff2+1,w
  6356  1E51  1C03               	skipc
  6357  1E52  0F24               	incfsz	___ftge@ff2+1,w
  6358  1E53  3C00               	sublw	0
  6359  1E54  00A4               	movwf	___ftge@ff2+1
  6360  1E55  0825               	movf	___ftge@ff2+2,w
  6361  1E56  1C03               	skipc
  6362  1E57  0F25               	incfsz	___ftge@ff2+2,w
  6363  1E58  3C80               	sublw	128
  6364  1E59  00A5               	movwf	___ftge@ff2+2
  6365  1E5A                     l3630:
  6366  1E5A  3080               	movlw	128
  6367  1E5B  06A2               	xorwf	___ftge@ff1+2,f
  6368  1E5C                     l3632:
  6369  1E5C  3080               	movlw	128
  6370  1E5D  06A5               	xorwf	___ftge@ff2+2,f
  6371  1E5E                     l3634:
  6372  1E5E  0825               	movf	___ftge@ff2+2,w
  6373  1E5F  0222               	subwf	___ftge@ff1+2,w
  6374  1E60  1D03               	skipz
  6375  1E61  2E68               	goto	u5495
  6376  1E62  0824               	movf	___ftge@ff2+1,w
  6377  1E63  0221               	subwf	___ftge@ff1+1,w
  6378  1E64  1D03               	skipz
  6379  1E65  2E68               	goto	u5495
  6380  1E66  0823               	movf	___ftge@ff2,w
  6381  1E67  0220               	subwf	___ftge@ff1,w
  6382  1E68                     u5495:
  6383  1E68  1803               	skipnc
  6384  1E69  2E6B               	goto	u5491
  6385  1E6A  2E6C               	goto	u5490
  6386  1E6B                     u5491:
  6387  1E6B  2E6E               	goto	l3638
  6388  1E6C                     u5490:
  6389  1E6C                     l3636:
  6390  1E6C  1003               	clrc
  6391  1E6D  2E6F               	goto	l713
  6392  1E6E                     l3638:
  6393  1E6E  1403               	setc
  6394  1E6F                     l713:
  6395  1E6F  0008               	return
  6396  1E70                     __end_of___ftge:
  6397                           
  6398                           	psect	text22
  6399  1CA7                     __ptext22:	
  6400 ;; *************** function _configIO *****************
  6401 ;; Defined at:
  6402 ;;		line 45 in file "pic16f.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;		None
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;		None
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  1    wreg      void 
  6409 ;; Registers used:
  6410 ;;		status,2
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6416 ;;      Params:         0       0       0       0       0
  6417 ;;      Locals:         0       0       0       0       0
  6418 ;;      Temps:          0       0       0       0       0
  6419 ;;      Totals:         0       0       0       0       0
  6420 ;;Total ram usage:        0 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; Hardware stack levels required when called:    2
  6423 ;; This function calls:
  6424 ;;		Nothing
  6425 ;; This function is called by:
  6426 ;;		_main
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           
  6431                           ;psect for function _configIO
  6432  1CA7                     _configIO:
  6433  1CA7                     l3678:	
  6434                           ;incstack = 0
  6435                           ; Regs used in _configIO: [status,2]
  6436                           
  6437                           
  6438                           ;pic16f.c: 46:     TRISB=0;
  6439  1CA7  1683               	bsf	3,5	;RP0=1, select bank1
  6440  1CA8  1303               	bcf	3,6	;RP1=0, select bank1
  6441  1CA9  0186               	clrf	6	;volatile
  6442                           
  6443                           ;pic16f.c: 47:     ANSEL=0;
  6444  1CAA  1683               	bsf	3,5	;RP0=1, select bank3
  6445  1CAB  1703               	bsf	3,6	;RP1=1, select bank3
  6446  1CAC  0188               	clrf	8	;volatile
  6447                           
  6448                           ;pic16f.c: 48:     ANSELH=0;
  6449  1CAD  0189               	clrf	9	;volatile
  6450                           
  6451                           ;pic16f.c: 49:     PORTB=0;
  6452  1CAE  1283               	bcf	3,5	;RP0=0, select bank0
  6453  1CAF  1303               	bcf	3,6	;RP1=0, select bank0
  6454  1CB0  0186               	clrf	6	;volatile
  6455  1CB1                     l3680:
  6456                           
  6457                           ;pic16f.c: 51:     INTCONbits.PEIE=1;
  6458  1CB1  170B               	bsf	11,6	;volatile
  6459  1CB2                     l3682:
  6460                           
  6461                           ;pic16f.c: 52:     PIE1bits.RCIE=1;
  6462  1CB2  1683               	bsf	3,5	;RP0=1, select bank1
  6463  1CB3  1303               	bcf	3,6	;RP1=0, select bank1
  6464  1CB4  168C               	bsf	12,5	;volatile
  6465  1CB5                     l3684:
  6466                           
  6467                           ;pic16f.c: 53:     PIR1bits.RCIF=0;
  6468  1CB5  1283               	bcf	3,5	;RP0=0, select bank0
  6469  1CB6  1303               	bcf	3,6	;RP1=0, select bank0
  6470  1CB7  128C               	bcf	12,5	;volatile
  6471  1CB8                     l3686:
  6472                           
  6473                           ;pic16f.c: 54:     INTCONbits.GIE=1;
  6474  1CB8  178B               	bsf	11,7	;volatile
  6475  1CB9                     l53:
  6476  1CB9  0008               	return
  6477  1CBA                     __end_of_configIO:
  6478                           
  6479                           	psect	text23
  6480  10A9                     __ptext23:	
  6481 ;; *************** function _aht_GetTemperature *****************
  6482 ;; Defined at:
  6483 ;;		line 62 in file "aht10.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;		None
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  value           3   68[BANK0 ] float 
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  3   65[BANK0 ] float 
  6490 ;; Registers used:
  6491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6497 ;;      Params:         0       3       0       0       0
  6498 ;;      Locals:         0       3       0       0       0
  6499 ;;      Temps:          0       0       0       0       0
  6500 ;;      Totals:         0       6       0       0       0
  6501 ;;Total ram usage:        6 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; Hardware stack levels required when called:    5
  6504 ;; This function calls:
  6505 ;;		___ftadd
  6506 ;;		___ftdiv
  6507 ;;		___ftmul
  6508 ;;		___lltoft
  6509 ;;		_aht_readSensor
  6510 ;; This function is called by:
  6511 ;;		_main
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           
  6516                           ;psect for function _aht_GetTemperature
  6517  10A9                     _aht_GetTemperature:
  6518  10A9                     l3734:	
  6519                           ;incstack = 0
  6520                           ; Regs used in _aht_GetTemperature: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6521                           
  6522                           
  6523                           ;aht10.c: 64:     float value = aht_readSensor(GetTempCmd);
  6524  10A9  3000               	movlw	0
  6525  10AA  1283               	bcf	3,5	;RP0=0, select bank0
  6526  10AB  1303               	bcf	3,6	;RP1=0, select bank0
  6527  10AC  00A6               	movwf	aht_readSensor@GetDataCmd
  6528  10AD  00A7               	movwf	aht_readSensor@GetDataCmd+1
  6529  10AE  160A  118A  25CC  160A  118A  	fcall	_aht_readSensor
  6530  10B3  1283               	bcf	3,5	;RP0=0, select bank0
  6531  10B4  1303               	bcf	3,6	;RP1=0, select bank0
  6532  10B5  0829               	movf	?_aht_readSensor+3,w
  6533  10B6  00D6               	movwf	___lltoft@c+3
  6534  10B7  0828               	movf	?_aht_readSensor+2,w
  6535  10B8  00D5               	movwf	___lltoft@c+2
  6536  10B9  0827               	movf	?_aht_readSensor+1,w
  6537  10BA  00D4               	movwf	___lltoft@c+1
  6538  10BB  0826               	movf	?_aht_readSensor,w
  6539  10BC  00D3               	movwf	___lltoft@c
  6540  10BD  160A  158A  25C9  160A  118A  	fcall	___lltoft
  6541  10C2  1283               	bcf	3,5	;RP0=0, select bank0
  6542  10C3  1303               	bcf	3,6	;RP1=0, select bank0
  6543  10C4  0853               	movf	?___lltoft,w
  6544  10C5  00E4               	movwf	aht_GetTemperature@value
  6545  10C6  0854               	movf	?___lltoft+1,w
  6546  10C7  00E5               	movwf	aht_GetTemperature@value+1
  6547  10C8  0855               	movf	?___lltoft+2,w
  6548  10C9  00E6               	movwf	aht_GetTemperature@value+2
  6549  10CA                     l3736:
  6550                           
  6551                           ;aht10.c: 65:     return ((200 * value) / 1048576) - 50;
  6552  10CA  3000               	movlw	0
  6553  10CB  00D4               	movwf	___ftadd@f1
  6554  10CC  3048               	movlw	72
  6555  10CD  00D5               	movwf	___ftadd@f1+1
  6556  10CE  30C2               	movlw	194
  6557  10CF  00D6               	movwf	___ftadd@f1+2
  6558  10D0  3000               	movlw	0
  6559  10D1  00C4               	movwf	___ftdiv@f2
  6560  10D2  3080               	movlw	128
  6561  10D3  00C5               	movwf	___ftdiv@f2+1
  6562  10D4  3049               	movlw	73
  6563  10D5  00C6               	movwf	___ftdiv@f2+2
  6564  10D6  3000               	movlw	0
  6565  10D7  00B4               	movwf	___ftmul@f1
  6566  10D8  3048               	movlw	72
  6567  10D9  00B5               	movwf	___ftmul@f1+1
  6568  10DA  3043               	movlw	67
  6569  10DB  00B6               	movwf	___ftmul@f1+2
  6570  10DC  0864               	movf	aht_GetTemperature@value,w
  6571  10DD  00B7               	movwf	___ftmul@f2
  6572  10DE  0865               	movf	aht_GetTemperature@value+1,w
  6573  10DF  00B8               	movwf	___ftmul@f2+1
  6574  10E0  0866               	movf	aht_GetTemperature@value+2,w
  6575  10E1  00B9               	movwf	___ftmul@f2+2
  6576  10E2  120A  158A  2010  160A  118A  	fcall	___ftmul
  6577  10E7  1283               	bcf	3,5	;RP0=0, select bank0
  6578  10E8  1303               	bcf	3,6	;RP1=0, select bank0
  6579  10E9  0834               	movf	?___ftmul,w
  6580  10EA  00C7               	movwf	___ftdiv@f1
  6581  10EB  0835               	movf	?___ftmul+1,w
  6582  10EC  00C8               	movwf	___ftdiv@f1+1
  6583  10ED  0836               	movf	?___ftmul+2,w
  6584  10EE  00C9               	movwf	___ftdiv@f1+2
  6585  10EF  160A  118A  243F  160A  118A  	fcall	___ftdiv
  6586  10F4  1283               	bcf	3,5	;RP0=0, select bank0
  6587  10F5  1303               	bcf	3,6	;RP1=0, select bank0
  6588  10F6  0844               	movf	?___ftdiv,w
  6589  10F7  00D7               	movwf	___ftadd@f2
  6590  10F8  0845               	movf	?___ftdiv+1,w
  6591  10F9  00D8               	movwf	___ftadd@f2+1
  6592  10FA  0846               	movf	?___ftdiv+2,w
  6593  10FB  00D9               	movwf	___ftadd@f2+2
  6594  10FC  120A  158A  20F5  160A  118A  	fcall	___ftadd
  6595  1101  1283               	bcf	3,5	;RP0=0, select bank0
  6596  1102  1303               	bcf	3,6	;RP1=0, select bank0
  6597  1103  0854               	movf	?___ftadd,w
  6598  1104  00E1               	movwf	?_aht_GetTemperature
  6599  1105  0855               	movf	?___ftadd+1,w
  6600  1106  00E2               	movwf	?_aht_GetTemperature+1
  6601  1107  0856               	movf	?___ftadd+2,w
  6602  1108  00E3               	movwf	?_aht_GetTemperature+2
  6603  1109                     l168:
  6604  1109  0008               	return
  6605  110A                     __end_of_aht_GetTemperature:
  6606                           
  6607                           	psect	text24
  6608  08F5                     __ptext24:	
  6609 ;; *************** function ___ftadd *****************
  6610 ;; Defined at:
  6611 ;;		line 86 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftadd.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;  f1              3   52[BANK0 ] float 
  6614 ;;  f2              3   55[BANK0 ] float 
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;  exp1            1   64[BANK0 ] unsigned char 
  6617 ;;  exp2            1   63[BANK0 ] unsigned char 
  6618 ;;  sign            1   62[BANK0 ] unsigned char 
  6619 ;; Return value:  Size  Location     Type
  6620 ;;                  3   52[BANK0 ] float 
  6621 ;; Registers used:
  6622 ;;		wreg, status,2, status,0, pclath, cstack
  6623 ;; Tracked objects:
  6624 ;;		On entry : 0/0
  6625 ;;		On exit  : 0/0
  6626 ;;		Unchanged: 0/0
  6627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6628 ;;      Params:         0       6       0       0       0
  6629 ;;      Locals:         0       3       0       0       0
  6630 ;;      Temps:          0       4       0       0       0
  6631 ;;      Totals:         0      13       0       0       0
  6632 ;;Total ram usage:       13 bytes
  6633 ;; Hardware stack levels used:    1
  6634 ;; Hardware stack levels required when called:    3
  6635 ;; This function calls:
  6636 ;;		___ftpack
  6637 ;; This function is called by:
  6638 ;;		_aht_GetTemperature
  6639 ;;		_sprintf
  6640 ;;		___ftsub
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           
  6645                           ;psect for function ___ftadd
  6646  08F5                     ___ftadd:
  6647  08F5                     l2278:	
  6648                           ;incstack = 0
  6649                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6650                           
  6651  08F5  1283               	bcf	3,5	;RP0=0, select bank0
  6652  08F6  1303               	bcf	3,6	;RP1=0, select bank0
  6653  08F7  0854               	movf	___ftadd@f1,w
  6654  08F8  00DA               	movwf	??___ftadd
  6655  08F9  0855               	movf	___ftadd@f1+1,w
  6656  08FA  00DB               	movwf	??___ftadd+1
  6657  08FB  0856               	movf	___ftadd@f1+2,w
  6658  08FC  00DC               	movwf	??___ftadd+2
  6659  08FD  1003               	clrc
  6660  08FE  0D5B               	rlf	??___ftadd+1,w
  6661  08FF  0D5C               	rlf	??___ftadd+2,w
  6662  0900  00DD               	movwf	??___ftadd+3
  6663  0901  085D               	movf	??___ftadd+3,w
  6664  0902  00E0               	movwf	___ftadd@exp1
  6665  0903  0857               	movf	___ftadd@f2,w
  6666  0904  00DA               	movwf	??___ftadd
  6667  0905  0858               	movf	___ftadd@f2+1,w
  6668  0906  00DB               	movwf	??___ftadd+1
  6669  0907  0859               	movf	___ftadd@f2+2,w
  6670  0908  00DC               	movwf	??___ftadd+2
  6671  0909  1003               	clrc
  6672  090A  0D5B               	rlf	??___ftadd+1,w
  6673  090B  0D5C               	rlf	??___ftadd+2,w
  6674  090C  00DD               	movwf	??___ftadd+3
  6675  090D  085D               	movf	??___ftadd+3,w
  6676  090E  00DF               	movwf	___ftadd@exp2
  6677  090F  0860               	movf	___ftadd@exp1,w
  6678  0910  1903               	btfsc	3,2
  6679  0911  2913               	goto	u2771
  6680  0912  2914               	goto	u2770
  6681  0913                     u2771:
  6682  0913  2924               	goto	l2284
  6683  0914                     u2770:
  6684  0914                     l2280:
  6685  0914  085F               	movf	___ftadd@exp2,w
  6686  0915  0260               	subwf	___ftadd@exp1,w
  6687  0916  1803               	skipnc
  6688  0917  2919               	goto	u2781
  6689  0918  291A               	goto	u2780
  6690  0919                     u2781:
  6691  0919  292B               	goto	l2288
  6692  091A                     u2780:
  6693  091A                     l2282:
  6694  091A  085F               	movf	___ftadd@exp2,w
  6695  091B  00DA               	movwf	??___ftadd
  6696  091C  0860               	movf	___ftadd@exp1,w
  6697  091D  02DA               	subwf	??___ftadd,f
  6698  091E  3019               	movlw	25
  6699  091F  025A               	subwf	??___ftadd,w
  6700  0920  1C03               	skipc
  6701  0921  2923               	goto	u2791
  6702  0922  2924               	goto	u2790
  6703  0923                     u2791:
  6704  0923  292B               	goto	l2288
  6705  0924                     u2790:
  6706  0924                     l2284:
  6707  0924  0857               	movf	___ftadd@f2,w
  6708  0925  00D4               	movwf	?___ftadd
  6709  0926  0858               	movf	___ftadd@f2+1,w
  6710  0927  00D5               	movwf	?___ftadd+1
  6711  0928  0859               	movf	___ftadd@f2+2,w
  6712  0929  00D6               	movwf	?___ftadd+2
  6713  092A  2A2A               	goto	l656
  6714  092B                     l2288:
  6715  092B  085F               	movf	___ftadd@exp2,w
  6716  092C  1903               	btfsc	3,2
  6717  092D  292F               	goto	u2801
  6718  092E  2930               	goto	u2800
  6719  092F                     u2801:
  6720  092F  2940               	goto	l659
  6721  0930                     u2800:
  6722  0930                     l2290:
  6723  0930  0860               	movf	___ftadd@exp1,w
  6724  0931  025F               	subwf	___ftadd@exp2,w
  6725  0932  1803               	skipnc
  6726  0933  2935               	goto	u2811
  6727  0934  2936               	goto	u2810
  6728  0935                     u2811:
  6729  0935  2941               	goto	l2294
  6730  0936                     u2810:
  6731  0936                     l2292:
  6732  0936  0860               	movf	___ftadd@exp1,w
  6733  0937  00DA               	movwf	??___ftadd
  6734  0938  085F               	movf	___ftadd@exp2,w
  6735  0939  02DA               	subwf	??___ftadd,f
  6736  093A  3019               	movlw	25
  6737  093B  025A               	subwf	??___ftadd,w
  6738  093C  1C03               	skipc
  6739  093D  293F               	goto	u2821
  6740  093E  2940               	goto	u2820
  6741  093F                     u2821:
  6742  093F  2941               	goto	l2294
  6743  0940                     u2820:
  6744  0940                     l659:
  6745  0940  2A2A               	goto	l656
  6746  0941                     l2294:
  6747  0941  3006               	movlw	6
  6748  0942  00DA               	movwf	??___ftadd
  6749  0943  085A               	movf	??___ftadd,w
  6750  0944  00DE               	movwf	___ftadd@sign
  6751  0945                     l2296:
  6752  0945  1FD6               	btfss	___ftadd@f1+2,7
  6753  0946  2948               	goto	u2831
  6754  0947  2949               	goto	u2830
  6755  0948                     u2831:
  6756  0948  294A               	goto	l660
  6757  0949                     u2830:
  6758  0949                     l2298:
  6759  0949  17DE               	bsf	___ftadd@sign,7
  6760  094A                     l660:
  6761  094A  1FD9               	btfss	___ftadd@f2+2,7
  6762  094B  294D               	goto	u2841
  6763  094C  294E               	goto	u2840
  6764  094D                     u2841:
  6765  094D  294F               	goto	l661
  6766  094E                     u2840:
  6767  094E                     l2300:
  6768  094E  175E               	bsf	___ftadd@sign,6
  6769  094F                     l661:
  6770  094F  17D5               	bsf	___ftadd@f1+1,7
  6771  0950                     l2302:
  6772  0950  30FF               	movlw	255
  6773  0951  05D4               	andwf	___ftadd@f1,f
  6774  0952  30FF               	movlw	255
  6775  0953  05D5               	andwf	___ftadd@f1+1,f
  6776  0954  3000               	movlw	0
  6777  0955  05D6               	andwf	___ftadd@f1+2,f
  6778  0956                     l2304:
  6779  0956  17D8               	bsf	___ftadd@f2+1,7
  6780  0957  30FF               	movlw	255
  6781  0958  05D7               	andwf	___ftadd@f2,f
  6782  0959  30FF               	movlw	255
  6783  095A  05D8               	andwf	___ftadd@f2+1,f
  6784  095B  3000               	movlw	0
  6785  095C  05D9               	andwf	___ftadd@f2+2,f
  6786  095D  085F               	movf	___ftadd@exp2,w
  6787  095E  0260               	subwf	___ftadd@exp1,w
  6788  095F  1803               	skipnc
  6789  0960  2962               	goto	u2851
  6790  0961  2963               	goto	u2850
  6791  0962                     u2851:
  6792  0962  298F               	goto	l2316
  6793  0963                     u2850:
  6794  0963                     l2306:
  6795  0963  3001               	movlw	1
  6796  0964                     u2865:
  6797  0964  1003               	clrc
  6798  0965  0DD7               	rlf	___ftadd@f2,f
  6799  0966  0DD8               	rlf	___ftadd@f2+1,f
  6800  0967  0DD9               	rlf	___ftadd@f2+2,f
  6801  0968  3EFF               	addlw	-1
  6802  0969  1D03               	skipz
  6803  096A  2964               	goto	u2865
  6804  096B  3001               	movlw	1
  6805  096C  02DF               	subwf	___ftadd@exp2,f
  6806  096D                     l2308:
  6807  096D  085F               	movf	___ftadd@exp2,w
  6808  096E  0660               	xorwf	___ftadd@exp1,w
  6809  096F  1903               	skipnz
  6810  0970  2972               	goto	u2871
  6811  0971  2973               	goto	u2870
  6812  0972                     u2871:
  6813  0972  2988               	goto	l2314
  6814  0973                     u2870:
  6815  0973                     l2310:
  6816  0973  3001               	movlw	1
  6817  0974  02DE               	subwf	___ftadd@sign,f
  6818  0975  085E               	movf	___ftadd@sign,w
  6819  0976  3907               	andlw	7
  6820  0977  1D03               	btfss	3,2
  6821  0978  297A               	goto	u2881
  6822  0979  297B               	goto	u2880
  6823  097A                     u2881:
  6824  097A  2963               	goto	l2306
  6825  097B                     u2880:
  6826  097B  2988               	goto	l2314
  6827  097C                     l2312:
  6828  097C  3001               	movlw	1
  6829  097D                     u2895:
  6830  097D  1003               	clrc
  6831  097E  0CD6               	rrf	___ftadd@f1+2,f
  6832  097F  0CD5               	rrf	___ftadd@f1+1,f
  6833  0980  0CD4               	rrf	___ftadd@f1,f
  6834  0981  3EFF               	addlw	-1
  6835  0982  1D03               	skipz
  6836  0983  297D               	goto	u2895
  6837  0984  3001               	movlw	1
  6838  0985  00DA               	movwf	??___ftadd
  6839  0986  085A               	movf	??___ftadd,w
  6840  0987  07E0               	addwf	___ftadd@exp1,f
  6841  0988                     l2314:
  6842  0988  0860               	movf	___ftadd@exp1,w
  6843  0989  065F               	xorwf	___ftadd@exp2,w
  6844  098A  1D03               	skipz
  6845  098B  298D               	goto	u2901
  6846  098C  298E               	goto	u2900
  6847  098D                     u2901:
  6848  098D  297C               	goto	l2312
  6849  098E                     u2900:
  6850  098E  29C0               	goto	l670
  6851  098F                     l2316:
  6852  098F  0860               	movf	___ftadd@exp1,w
  6853  0990  025F               	subwf	___ftadd@exp2,w
  6854  0991  1803               	skipnc
  6855  0992  2994               	goto	u2911
  6856  0993  2995               	goto	u2910
  6857  0994                     u2911:
  6858  0994  29C0               	goto	l670
  6859  0995                     u2910:
  6860  0995                     l2318:
  6861  0995  3001               	movlw	1
  6862  0996                     u2925:
  6863  0996  1003               	clrc
  6864  0997  0DD4               	rlf	___ftadd@f1,f
  6865  0998  0DD5               	rlf	___ftadd@f1+1,f
  6866  0999  0DD6               	rlf	___ftadd@f1+2,f
  6867  099A  3EFF               	addlw	-1
  6868  099B  1D03               	skipz
  6869  099C  2996               	goto	u2925
  6870  099D  3001               	movlw	1
  6871  099E  02E0               	subwf	___ftadd@exp1,f
  6872  099F                     l2320:
  6873  099F  085F               	movf	___ftadd@exp2,w
  6874  09A0  0660               	xorwf	___ftadd@exp1,w
  6875  09A1  1903               	skipnz
  6876  09A2  29A4               	goto	u2931
  6877  09A3  29A5               	goto	u2930
  6878  09A4                     u2931:
  6879  09A4  29BA               	goto	l2326
  6880  09A5                     u2930:
  6881  09A5                     l2322:
  6882  09A5  3001               	movlw	1
  6883  09A6  02DE               	subwf	___ftadd@sign,f
  6884  09A7  085E               	movf	___ftadd@sign,w
  6885  09A8  3907               	andlw	7
  6886  09A9  1D03               	btfss	3,2
  6887  09AA  29AC               	goto	u2941
  6888  09AB  29AD               	goto	u2940
  6889  09AC                     u2941:
  6890  09AC  2995               	goto	l2318
  6891  09AD                     u2940:
  6892  09AD  29BA               	goto	l2326
  6893  09AE                     l2324:
  6894  09AE  3001               	movlw	1
  6895  09AF                     u2955:
  6896  09AF  1003               	clrc
  6897  09B0  0CD9               	rrf	___ftadd@f2+2,f
  6898  09B1  0CD8               	rrf	___ftadd@f2+1,f
  6899  09B2  0CD7               	rrf	___ftadd@f2,f
  6900  09B3  3EFF               	addlw	-1
  6901  09B4  1D03               	skipz
  6902  09B5  29AF               	goto	u2955
  6903  09B6  3001               	movlw	1
  6904  09B7  00DA               	movwf	??___ftadd
  6905  09B8  085A               	movf	??___ftadd,w
  6906  09B9  07DF               	addwf	___ftadd@exp2,f
  6907  09BA                     l2326:
  6908  09BA  0860               	movf	___ftadd@exp1,w
  6909  09BB  065F               	xorwf	___ftadd@exp2,w
  6910  09BC  1D03               	skipz
  6911  09BD  29BF               	goto	u2961
  6912  09BE  29C0               	goto	u2960
  6913  09BF                     u2961:
  6914  09BF  29AE               	goto	l2324
  6915  09C0                     u2960:
  6916  09C0                     l670:
  6917  09C0  1FDE               	btfss	___ftadd@sign,7
  6918  09C1  29C3               	goto	u2971
  6919  09C2  29C4               	goto	u2970
  6920  09C3                     u2971:
  6921  09C3  29D4               	goto	l2330
  6922  09C4                     u2970:
  6923  09C4                     l2328:
  6924  09C4  30FF               	movlw	255
  6925  09C5  06D4               	xorwf	___ftadd@f1,f
  6926  09C6  30FF               	movlw	255
  6927  09C7  06D5               	xorwf	___ftadd@f1+1,f
  6928  09C8  30FF               	movlw	255
  6929  09C9  06D6               	xorwf	___ftadd@f1+2,f
  6930  09CA  3001               	movlw	1
  6931  09CB  07D4               	addwf	___ftadd@f1,f
  6932  09CC  3000               	movlw	0
  6933  09CD  1803               	skipnc
  6934  09CE  3001               	movlw	1
  6935  09CF  07D5               	addwf	___ftadd@f1+1,f
  6936  09D0  3000               	movlw	0
  6937  09D1  1803               	skipnc
  6938  09D2  3001               	movlw	1
  6939  09D3  07D6               	addwf	___ftadd@f1+2,f
  6940  09D4                     l2330:
  6941  09D4  1F5E               	btfss	___ftadd@sign,6
  6942  09D5  29D7               	goto	u2981
  6943  09D6  29D8               	goto	u2980
  6944  09D7                     u2981:
  6945  09D7  29E8               	goto	l2334
  6946  09D8                     u2980:
  6947  09D8                     l2332:
  6948  09D8  30FF               	movlw	255
  6949  09D9  06D7               	xorwf	___ftadd@f2,f
  6950  09DA  30FF               	movlw	255
  6951  09DB  06D8               	xorwf	___ftadd@f2+1,f
  6952  09DC  30FF               	movlw	255
  6953  09DD  06D9               	xorwf	___ftadd@f2+2,f
  6954  09DE  3001               	movlw	1
  6955  09DF  07D7               	addwf	___ftadd@f2,f
  6956  09E0  3000               	movlw	0
  6957  09E1  1803               	skipnc
  6958  09E2  3001               	movlw	1
  6959  09E3  07D8               	addwf	___ftadd@f2+1,f
  6960  09E4  3000               	movlw	0
  6961  09E5  1803               	skipnc
  6962  09E6  3001               	movlw	1
  6963  09E7  07D9               	addwf	___ftadd@f2+2,f
  6964  09E8                     l2334:
  6965  09E8  01DE               	clrf	___ftadd@sign
  6966  09E9                     l2336:
  6967  09E9  0854               	movf	___ftadd@f1,w
  6968  09EA  07D7               	addwf	___ftadd@f2,f
  6969  09EB  0855               	movf	___ftadd@f1+1,w
  6970  09EC  1103               	clrz
  6971  09ED  1803               	skipnc
  6972  09EE  0A55               	incf	___ftadd@f1+1,w
  6973  09EF  1903               	skipnz
  6974  09F0  29F2               	goto	u2991
  6975  09F1  07D8               	addwf	___ftadd@f2+1,f
  6976  09F2                     u2991:
  6977  09F2  0856               	movf	___ftadd@f1+2,w
  6978  09F3  1103               	clrz
  6979  09F4  1803               	skipnc
  6980  09F5  0A56               	incf	___ftadd@f1+2,w
  6981  09F6  1903               	skipnz
  6982  09F7  29F9               	goto	u2992
  6983  09F8  07D9               	addwf	___ftadd@f2+2,f
  6984  09F9                     u2992:
  6985  09F9                     l2338:
  6986  09F9  1FD9               	btfss	___ftadd@f2+2,7
  6987  09FA  29FC               	goto	u3001
  6988  09FB  29FD               	goto	u3000
  6989  09FC                     u3001:
  6990  09FC  2A0F               	goto	l2344
  6991  09FD                     u3000:
  6992  09FD                     l2340:
  6993  09FD  30FF               	movlw	255
  6994  09FE  06D7               	xorwf	___ftadd@f2,f
  6995  09FF  30FF               	movlw	255
  6996  0A00  06D8               	xorwf	___ftadd@f2+1,f
  6997  0A01  30FF               	movlw	255
  6998  0A02  06D9               	xorwf	___ftadd@f2+2,f
  6999  0A03  3001               	movlw	1
  7000  0A04  07D7               	addwf	___ftadd@f2,f
  7001  0A05  3000               	movlw	0
  7002  0A06  1803               	skipnc
  7003  0A07  3001               	movlw	1
  7004  0A08  07D8               	addwf	___ftadd@f2+1,f
  7005  0A09  3000               	movlw	0
  7006  0A0A  1803               	skipnc
  7007  0A0B  3001               	movlw	1
  7008  0A0C  07D9               	addwf	___ftadd@f2+2,f
  7009  0A0D                     l2342:
  7010  0A0D  01DE               	clrf	___ftadd@sign
  7011  0A0E  0ADE               	incf	___ftadd@sign,f
  7012  0A0F                     l2344:
  7013  0A0F  0857               	movf	___ftadd@f2,w
  7014  0A10  00A0               	movwf	___ftpack@arg
  7015  0A11  0858               	movf	___ftadd@f2+1,w
  7016  0A12  00A1               	movwf	___ftpack@arg+1
  7017  0A13  0859               	movf	___ftadd@f2+2,w
  7018  0A14  00A2               	movwf	___ftpack@arg+2
  7019  0A15  0860               	movf	___ftadd@exp1,w
  7020  0A16  00DA               	movwf	??___ftadd
  7021  0A17  085A               	movf	??___ftadd,w
  7022  0A18  00A3               	movwf	___ftpack@exp
  7023  0A19  085E               	movf	___ftadd@sign,w
  7024  0A1A  00DB               	movwf	??___ftadd+1
  7025  0A1B  085B               	movf	??___ftadd+1,w
  7026  0A1C  00A4               	movwf	___ftpack@sign
  7027  0A1D  160A  118A  21DB  120A  158A  	fcall	___ftpack
  7028  0A22  1283               	bcf	3,5	;RP0=0, select bank0
  7029  0A23  1303               	bcf	3,6	;RP1=0, select bank0
  7030  0A24  0820               	movf	?___ftpack,w
  7031  0A25  00D4               	movwf	?___ftadd
  7032  0A26  0821               	movf	?___ftpack+1,w
  7033  0A27  00D5               	movwf	?___ftadd+1
  7034  0A28  0822               	movf	?___ftpack+2,w
  7035  0A29  00D6               	movwf	?___ftadd+2
  7036  0A2A                     l656:
  7037  0A2A  0008               	return
  7038  0A2B                     __end_of___ftadd:
  7039                           
  7040                           	psect	text25
  7041  1FA3                     __ptext25:	
  7042 ;; *************** function _aht_GetHumidity *****************
  7043 ;; Defined at:
  7044 ;;		line 47 in file "aht10.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;		None
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;  value           3   60[BANK0 ] float 
  7049 ;; Return value:  Size  Location     Type
  7050 ;;                  3   57[BANK0 ] float 
  7051 ;; Registers used:
  7052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7058 ;;      Params:         0       3       0       0       0
  7059 ;;      Locals:         0       3       0       0       0
  7060 ;;      Temps:          0       0       0       0       0
  7061 ;;      Totals:         0       6       0       0       0
  7062 ;;Total ram usage:        6 bytes
  7063 ;; Hardware stack levels used:    1
  7064 ;; Hardware stack levels required when called:    5
  7065 ;; This function calls:
  7066 ;;		___ftdiv
  7067 ;;		___ftmul
  7068 ;;		___lltoft
  7069 ;;		_aht_readSensor
  7070 ;; This function is called by:
  7071 ;;		_main
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           
  7076                           ;psect for function _aht_GetHumidity
  7077  1FA3                     _aht_GetHumidity:
  7078  1FA3                     l3722:	
  7079                           ;incstack = 0
  7080                           ; Regs used in _aht_GetHumidity: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7081                           
  7082                           
  7083                           ;aht10.c: 49:     float value = aht_readSensor(GetRHumidityCmd);
  7084  1FA3  3001               	movlw	1
  7085  1FA4  1283               	bcf	3,5	;RP0=0, select bank0
  7086  1FA5  1303               	bcf	3,6	;RP1=0, select bank0
  7087  1FA6  00A6               	movwf	aht_readSensor@GetDataCmd
  7088  1FA7  3000               	movlw	0
  7089  1FA8  00A7               	movwf	aht_readSensor@GetDataCmd+1
  7090  1FA9  160A  118A  25CC  160A  158A  	fcall	_aht_readSensor
  7091  1FAE  1283               	bcf	3,5	;RP0=0, select bank0
  7092  1FAF  1303               	bcf	3,6	;RP1=0, select bank0
  7093  1FB0  0829               	movf	?_aht_readSensor+3,w
  7094  1FB1  00D6               	movwf	___lltoft@c+3
  7095  1FB2  0828               	movf	?_aht_readSensor+2,w
  7096  1FB3  00D5               	movwf	___lltoft@c+2
  7097  1FB4  0827               	movf	?_aht_readSensor+1,w
  7098  1FB5  00D4               	movwf	___lltoft@c+1
  7099  1FB6  0826               	movf	?_aht_readSensor,w
  7100  1FB7  00D3               	movwf	___lltoft@c
  7101  1FB8  160A  158A  25C9  160A  158A  	fcall	___lltoft
  7102  1FBD  1283               	bcf	3,5	;RP0=0, select bank0
  7103  1FBE  1303               	bcf	3,6	;RP1=0, select bank0
  7104  1FBF  0853               	movf	?___lltoft,w
  7105  1FC0  00DC               	movwf	aht_GetHumidity@value
  7106  1FC1  0854               	movf	?___lltoft+1,w
  7107  1FC2  00DD               	movwf	aht_GetHumidity@value+1
  7108  1FC3  0855               	movf	?___lltoft+2,w
  7109  1FC4  00DE               	movwf	aht_GetHumidity@value+2
  7110  1FC5                     l3724:
  7111                           
  7112                           ;aht10.c: 50:     if (value == 0) {
  7113  1FC5  085E               	movf	aht_GetHumidity@value+2,w
  7114  1FC6  045D               	iorwf	aht_GetHumidity@value+1,w
  7115  1FC7  045C               	iorwf	aht_GetHumidity@value,w
  7116  1FC8  1D03               	skipz
  7117  1FC9  2FCB               	goto	u5651
  7118  1FCA  2FCC               	goto	u5650
  7119  1FCB                     u5651:
  7120  1FCB  2FD3               	goto	l3730
  7121  1FCC                     u5650:
  7122  1FCC                     l3726:
  7123                           
  7124                           ;aht10.c: 51:         return 0;
  7125  1FCC  3000               	movlw	0
  7126  1FCD  00D9               	movwf	?_aht_GetHumidity
  7127  1FCE  3000               	movlw	0
  7128  1FCF  00DA               	movwf	?_aht_GetHumidity+1
  7129  1FD0  3000               	movlw	0
  7130  1FD1  00DB               	movwf	?_aht_GetHumidity+2
  7131  1FD2  2FFF               	goto	l165
  7132  1FD3                     l3730:
  7133                           
  7134                           ;aht10.c: 53:     return value * 100 / 1048576;
  7135  1FD3  3000               	movlw	0
  7136  1FD4  00C4               	movwf	___ftdiv@f2
  7137  1FD5  3080               	movlw	128
  7138  1FD6  00C5               	movwf	___ftdiv@f2+1
  7139  1FD7  3049               	movlw	73
  7140  1FD8  00C6               	movwf	___ftdiv@f2+2
  7141  1FD9  3000               	movlw	0
  7142  1FDA  00B4               	movwf	___ftmul@f1
  7143  1FDB  30C8               	movlw	200
  7144  1FDC  00B5               	movwf	___ftmul@f1+1
  7145  1FDD  3042               	movlw	66
  7146  1FDE  00B6               	movwf	___ftmul@f1+2
  7147  1FDF  085C               	movf	aht_GetHumidity@value,w
  7148  1FE0  00B7               	movwf	___ftmul@f2
  7149  1FE1  085D               	movf	aht_GetHumidity@value+1,w
  7150  1FE2  00B8               	movwf	___ftmul@f2+1
  7151  1FE3  085E               	movf	aht_GetHumidity@value+2,w
  7152  1FE4  00B9               	movwf	___ftmul@f2+2
  7153  1FE5  120A  158A  2010  160A  158A  	fcall	___ftmul
  7154  1FEA  1283               	bcf	3,5	;RP0=0, select bank0
  7155  1FEB  1303               	bcf	3,6	;RP1=0, select bank0
  7156  1FEC  0834               	movf	?___ftmul,w
  7157  1FED  00C7               	movwf	___ftdiv@f1
  7158  1FEE  0835               	movf	?___ftmul+1,w
  7159  1FEF  00C8               	movwf	___ftdiv@f1+1
  7160  1FF0  0836               	movf	?___ftmul+2,w
  7161  1FF1  00C9               	movwf	___ftdiv@f1+2
  7162  1FF2  160A  118A  243F  160A  158A  	fcall	___ftdiv
  7163  1FF7  1283               	bcf	3,5	;RP0=0, select bank0
  7164  1FF8  1303               	bcf	3,6	;RP1=0, select bank0
  7165  1FF9  0844               	movf	?___ftdiv,w
  7166  1FFA  00D9               	movwf	?_aht_GetHumidity
  7167  1FFB  0845               	movf	?___ftdiv+1,w
  7168  1FFC  00DA               	movwf	?_aht_GetHumidity+1
  7169  1FFD  0846               	movf	?___ftdiv+2,w
  7170  1FFE  00DB               	movwf	?_aht_GetHumidity+2
  7171  1FFF                     l165:
  7172  1FFF  0008               	return
  7173  2000                     __end_of_aht_GetHumidity:
  7174                           
  7175                           	psect	text26
  7176  15CC                     __ptext26:	
  7177 ;; *************** function _aht_readSensor *****************
  7178 ;; Defined at:
  7179 ;;		line 72 in file "aht10.c"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;  GetDataCmd      2    6[BANK0 ] int 
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;  i               1   50[BANK0 ] unsigned char 
  7184 ;;  temp           24   22[BANK0 ] unsigned long [6]
  7185 ;;  result          4   46[BANK0 ] unsigned long 
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  4    6[BANK0 ] unsigned long 
  7188 ;; Registers used:
  7189 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7195 ;;      Params:         0       4       0       0       0
  7196 ;;      Locals:         0      29       0       0       0
  7197 ;;      Temps:          0      12       0       0       0
  7198 ;;      Totals:         0      45       0       0       0
  7199 ;;Total ram usage:       45 bytes
  7200 ;; Hardware stack levels used:    1
  7201 ;; Hardware stack levels required when called:    4
  7202 ;; This function calls:
  7203 ;;		_I2C_Master_Read
  7204 ;;		_I2C_Master_Start
  7205 ;;		_I2C_Master_Stop
  7206 ;;		_I2C_Master_Write
  7207 ;; This function is called by:
  7208 ;;		_aht_GetHumidity
  7209 ;;		_aht_GetTemperature
  7210 ;; This function uses a non-reentrant model
  7211 ;;
  7212                           
  7213                           
  7214                           ;psect for function _aht_readSensor
  7215  15CC                     _aht_readSensor:
  7216  15CC                     l3446:	
  7217                           ;incstack = 0
  7218                           ; Regs used in _aht_readSensor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7219                           
  7220                           
  7221                           ;aht10.c: 72: unsigned long aht_readSensor(int GetDataCmd);aht10.c: 73: {;aht10.c: 74:  
      +                             unsigned long result, temp[6];;aht10.c: 76:     I2C_Master_Start();
  7222  15CC  160A  158A  247C  160A  118A  	fcall	_I2C_Master_Start
  7223                           
  7224                           ;aht10.c: 77:     I2C_Master_Write(eSensorMeasureCmd[2]);
  7225  15D1  1683               	bsf	3,5	;RP0=1, select bank1
  7226  15D2  1303               	bcf	3,6	;RP1=0, select bank1
  7227  15D3  085F               	movf	(_eSensorMeasureCmd^(0+128)+2),w
  7228  15D4  1283               	bcf	3,5	;RP0=0, select bank0
  7229  15D5  1303               	bcf	3,6	;RP1=0, select bank0
  7230  15D6  00AA               	movwf	??_aht_readSensor
  7231  15D7  01AB               	clrf	??_aht_readSensor+1
  7232  15D8  082A               	movf	??_aht_readSensor,w
  7233  15D9  00A0               	movwf	I2C_Master_Write@d
  7234  15DA  082B               	movf	??_aht_readSensor+1,w
  7235  15DB  00A1               	movwf	I2C_Master_Write@d+1
  7236  15DC  160A  158A  2485  160A  118A  	fcall	_I2C_Master_Write
  7237                           
  7238                           ;aht10.c: 78:     I2C_Master_Stop();
  7239  15E1  120A  118A  27F7  160A  118A  	fcall	_I2C_Master_Stop
  7240  15E6                     l3448:
  7241                           
  7242                           ;aht10.c: 79:     _delay((unsigned long)((100)*(4000000/4000.0)));
  7243  15E6  3082               	movlw	130
  7244  15E7  1283               	bcf	3,5	;RP0=0, select bank0
  7245  15E8  1303               	bcf	3,6	;RP1=0, select bank0
  7246  15E9  00AB               	movwf	??_aht_readSensor+1
  7247  15EA  30DD               	movlw	221
  7248  15EB  00AA               	movwf	??_aht_readSensor
  7249  15EC                     u6177:
  7250  15EC  0BAA               	decfsz	??_aht_readSensor,f
  7251  15ED  2DEC               	goto	u6177
  7252  15EE  0BAB               	decfsz	??_aht_readSensor+1,f
  7253  15EF  2DEC               	goto	u6177
  7254  15F0                     l3450:
  7255                           
  7256                           ;aht10.c: 81:     I2C_Master_Start();
  7257  15F0  160A  158A  247C  160A  118A  	fcall	_I2C_Master_Start
  7258  15F5                     l3452:
  7259                           
  7260                           ;aht10.c: 83:     for(unsigned char i = 0; I2C_Master_Read(1) > 0; i++)
  7261  15F5  1283               	bcf	3,5	;RP0=0, select bank0
  7262  15F6  1303               	bcf	3,6	;RP1=0, select bank0
  7263  15F7  01D2               	clrf	aht_readSensor@i
  7264  15F8  2E26               	goto	l3458
  7265  15F9                     l3454:
  7266                           
  7267                           ;aht10.c: 84:     {;aht10.c: 85:         temp[i] = I2C_Master_Read(1);
  7268  15F9  3001               	movlw	1
  7269  15FA  00A0               	movwf	I2C_Master_Read@a
  7270  15FB  3000               	movlw	0
  7271  15FC  00A1               	movwf	I2C_Master_Read@a+1
  7272  15FD  160A  158A  2597  160A  118A  	fcall	_I2C_Master_Read
  7273  1602  1283               	bcf	3,5	;RP0=0, select bank0
  7274  1603  1303               	bcf	3,6	;RP1=0, select bank0
  7275  1604  0820               	movf	?_I2C_Master_Read,w
  7276  1605  00AA               	movwf	??_aht_readSensor
  7277  1606  0821               	movf	?_I2C_Master_Read+1,w
  7278  1607  00AB               	movwf	??_aht_readSensor+1
  7279  1608  01AC               	clrf	??_aht_readSensor+2
  7280  1609  01AD               	clrf	??_aht_readSensor+3
  7281  160A  0852               	movf	aht_readSensor@i,w
  7282  160B  00AE               	movwf	??_aht_readSensor+4
  7283  160C  3001               	movlw	1
  7284  160D                     u5095:
  7285  160D  1003               	clrc
  7286  160E  0DAE               	rlf	??_aht_readSensor+4,f
  7287  160F  3EFF               	addlw	-1
  7288  1610  1D03               	skipz
  7289  1611  2E0D               	goto	u5095
  7290  1612  1003               	clrc
  7291  1613  0D2E               	rlf	??_aht_readSensor+4,w
  7292  1614  3E36               	addlw	(low (aht_readSensor@temp| 0))& (0+255)
  7293  1615  0084               	movwf	4
  7294  1616  082A               	movf	??_aht_readSensor,w
  7295  1617  1383               	bcf	3,7	;select IRP bank0
  7296  1618  0080               	movwf	0
  7297  1619  0A84               	incf	4,f
  7298  161A  082B               	movf	??_aht_readSensor+1,w
  7299  161B  0080               	movwf	0
  7300  161C  0A84               	incf	4,f
  7301  161D  082C               	movf	??_aht_readSensor+2,w
  7302  161E  0080               	movwf	0
  7303  161F  0A84               	incf	4,f
  7304  1620  082D               	movf	??_aht_readSensor+3,w
  7305  1621  0080               	movwf	0
  7306  1622                     l3456:
  7307                           
  7308                           ;aht10.c: 86:     }
  7309  1622  3001               	movlw	1
  7310  1623  00AA               	movwf	??_aht_readSensor
  7311  1624  082A               	movf	??_aht_readSensor,w
  7312  1625  07D2               	addwf	aht_readSensor@i,f
  7313  1626                     l3458:
  7314  1626  3001               	movlw	1
  7315  1627  00A0               	movwf	I2C_Master_Read@a
  7316  1628  3000               	movlw	0
  7317  1629  00A1               	movwf	I2C_Master_Read@a+1
  7318  162A  160A  158A  2597  160A  118A  	fcall	_I2C_Master_Read
  7319  162F  1283               	bcf	3,5	;RP0=0, select bank0
  7320  1630  1303               	bcf	3,6	;RP1=0, select bank0
  7321  1631  0820               	movf	?_I2C_Master_Read,w
  7322  1632  0421               	iorwf	?_I2C_Master_Read+1,w
  7323  1633  1D03               	btfss	3,2
  7324  1634  2E36               	goto	u5101
  7325  1635  2E37               	goto	u5100
  7326  1636                     u5101:
  7327  1636  2DF9               	goto	l3454
  7328  1637                     u5100:
  7329  1637                     l3460:
  7330                           
  7331                           ;aht10.c: 88:     if(GetDataCmd)
  7332  1637  0826               	movf	aht_readSensor@GetDataCmd,w
  7333  1638  0427               	iorwf	aht_readSensor@GetDataCmd+1,w
  7334  1639  1903               	btfsc	3,2
  7335  163A  2E3C               	goto	u5111
  7336  163B  2E3D               	goto	u5110
  7337  163C                     u5111:
  7338  163C  2E89               	goto	l3464
  7339  163D                     u5110:
  7340  163D                     l3462:
  7341                           
  7342                           ;aht10.c: 89:     {;aht10.c: 90:         result = ((temp[1] << 16) | (temp[2] << 8) | te
      +                          mp[3]) >> 4;
  7343  163D  0842               	movf	aht_readSensor@temp+12,w
  7344  163E  00AA               	movwf	??_aht_readSensor
  7345  163F  0843               	movf	aht_readSensor@temp+13,w
  7346  1640  00AB               	movwf	??_aht_readSensor+1
  7347  1641  0844               	movf	aht_readSensor@temp+14,w
  7348  1642  00AC               	movwf	??_aht_readSensor+2
  7349  1643  0845               	movf	aht_readSensor@temp+15,w
  7350  1644  00AD               	movwf	??_aht_readSensor+3
  7351  1645  083E               	movf	aht_readSensor@temp+8,w
  7352  1646  00AE               	movwf	??_aht_readSensor+4
  7353  1647  083F               	movf	aht_readSensor@temp+9,w
  7354  1648  00AF               	movwf	??_aht_readSensor+5
  7355  1649  0840               	movf	aht_readSensor@temp+10,w
  7356  164A  00B0               	movwf	??_aht_readSensor+6
  7357  164B  0841               	movf	aht_readSensor@temp+11,w
  7358  164C  00B1               	movwf	??_aht_readSensor+7
  7359  164D  3008               	movlw	8
  7360  164E                     u5125:
  7361  164E  1003               	clrc
  7362  164F  0DAE               	rlf	??_aht_readSensor+4,f
  7363  1650  0DAF               	rlf	??_aht_readSensor+5,f
  7364  1651  0DB0               	rlf	??_aht_readSensor+6,f
  7365  1652  0DB1               	rlf	??_aht_readSensor+7,f
  7366  1653                     u5120:
  7367  1653  3EFF               	addlw	-1
  7368  1654  1D03               	skipz
  7369  1655  2E4E               	goto	u5125
  7370  1656  083A               	movf	aht_readSensor@temp+4,w
  7371  1657  00B2               	movwf	??_aht_readSensor+8
  7372  1658  083B               	movf	aht_readSensor@temp+5,w
  7373  1659  00B3               	movwf	??_aht_readSensor+9
  7374  165A  083C               	movf	aht_readSensor@temp+6,w
  7375  165B  00B4               	movwf	??_aht_readSensor+10
  7376  165C  083D               	movf	aht_readSensor@temp+7,w
  7377  165D  00B5               	movwf	??_aht_readSensor+11
  7378  165E  3010               	movlw	16
  7379  165F                     u5135:
  7380  165F  1003               	clrc
  7381  1660  0DB2               	rlf	??_aht_readSensor+8,f
  7382  1661  0DB3               	rlf	??_aht_readSensor+9,f
  7383  1662  0DB4               	rlf	??_aht_readSensor+10,f
  7384  1663  0DB5               	rlf	??_aht_readSensor+11,f
  7385  1664                     u5130:
  7386  1664  3EFF               	addlw	-1
  7387  1665  1D03               	skipz
  7388  1666  2E5F               	goto	u5135
  7389  1667  0832               	movf	??_aht_readSensor+8,w
  7390  1668  04AE               	iorwf	??_aht_readSensor+4,f
  7391  1669  0833               	movf	??_aht_readSensor+9,w
  7392  166A  04AF               	iorwf	??_aht_readSensor+5,f
  7393  166B  0834               	movf	??_aht_readSensor+10,w
  7394  166C  04B0               	iorwf	??_aht_readSensor+6,f
  7395  166D  0835               	movf	??_aht_readSensor+11,w
  7396  166E  04B1               	iorwf	??_aht_readSensor+7,f
  7397  166F  082E               	movf	??_aht_readSensor+4,w
  7398  1670  04AA               	iorwf	??_aht_readSensor,f
  7399  1671  082F               	movf	??_aht_readSensor+5,w
  7400  1672  04AB               	iorwf	??_aht_readSensor+1,f
  7401  1673  0830               	movf	??_aht_readSensor+6,w
  7402  1674  04AC               	iorwf	??_aht_readSensor+2,f
  7403  1675  0831               	movf	??_aht_readSensor+7,w
  7404  1676  04AD               	iorwf	??_aht_readSensor+3,f
  7405  1677  3004               	movlw	4
  7406  1678                     u5145:
  7407  1678  1003               	clrc
  7408  1679  0CAD               	rrf	??_aht_readSensor+3,f
  7409  167A  0CAC               	rrf	??_aht_readSensor+2,f
  7410  167B  0CAB               	rrf	??_aht_readSensor+1,f
  7411  167C  0CAA               	rrf	??_aht_readSensor,f
  7412  167D                     u5140:
  7413  167D  3EFF               	addlw	-1
  7414  167E  1D03               	skipz
  7415  167F  2E78               	goto	u5145
  7416  1680  082D               	movf	??_aht_readSensor+3,w
  7417  1681  00D1               	movwf	aht_readSensor@result+3
  7418  1682  082C               	movf	??_aht_readSensor+2,w
  7419  1683  00D0               	movwf	aht_readSensor@result+2
  7420  1684  082B               	movf	??_aht_readSensor+1,w
  7421  1685  00CF               	movwf	aht_readSensor@result+1
  7422  1686  082A               	movf	??_aht_readSensor,w
  7423  1687  00CE               	movwf	aht_readSensor@result
  7424                           
  7425                           ;aht10.c: 91:     }
  7426  1688  2ECA               	goto	l3466
  7427  1689                     l3464:
  7428                           
  7429                           ;aht10.c: 93:     {;aht10.c: 94:         result = ((temp[3] & 0x0F) << 16) | (temp[4] <<
      +                           8) | temp[5];
  7430  1689  0846               	movf	aht_readSensor@temp+16,w
  7431  168A  00AA               	movwf	??_aht_readSensor
  7432  168B  0847               	movf	aht_readSensor@temp+17,w
  7433  168C  00AB               	movwf	??_aht_readSensor+1
  7434  168D  0848               	movf	aht_readSensor@temp+18,w
  7435  168E  00AC               	movwf	??_aht_readSensor+2
  7436  168F  0849               	movf	aht_readSensor@temp+19,w
  7437  1690  00AD               	movwf	??_aht_readSensor+3
  7438  1691  3008               	movlw	8
  7439  1692                     u5155:
  7440  1692  1003               	clrc
  7441  1693  0DAA               	rlf	??_aht_readSensor,f
  7442  1694  0DAB               	rlf	??_aht_readSensor+1,f
  7443  1695  0DAC               	rlf	??_aht_readSensor+2,f
  7444  1696  0DAD               	rlf	??_aht_readSensor+3,f
  7445  1697                     u5150:
  7446  1697  3EFF               	addlw	-1
  7447  1698  1D03               	skipz
  7448  1699  2E92               	goto	u5155
  7449  169A  300C               	movlw	12
  7450  169B  3E36               	addlw	(low (aht_readSensor@temp| 0))& (0+255)
  7451  169C  0084               	movwf	4
  7452  169D  300F               	movlw	15
  7453  169E  1383               	bcf	3,7	;select IRP bank0
  7454  169F  0500               	andwf	0,w
  7455  16A0  00AE               	movwf	??_aht_readSensor+4
  7456  16A1  0A84               	incf	4,f
  7457  16A2  3000               	movlw	0
  7458  16A3  0500               	andwf	0,w
  7459  16A4  00AF               	movwf	??_aht_readSensor+5
  7460  16A5  0A84               	incf	4,f
  7461  16A6  3000               	movlw	0
  7462  16A7  0500               	andwf	0,w
  7463  16A8  00B0               	movwf	??_aht_readSensor+6
  7464  16A9  0A84               	incf	4,f
  7465  16AA  3000               	movlw	0
  7466  16AB  0500               	andwf	0,w
  7467  16AC  00B1               	movwf	??_aht_readSensor+7
  7468  16AD  3010               	movlw	16
  7469  16AE                     u5165:
  7470  16AE  1003               	clrc
  7471  16AF  0DAE               	rlf	??_aht_readSensor+4,f
  7472  16B0  0DAF               	rlf	??_aht_readSensor+5,f
  7473  16B1  0DB0               	rlf	??_aht_readSensor+6,f
  7474  16B2  0DB1               	rlf	??_aht_readSensor+7,f
  7475  16B3                     u5160:
  7476  16B3  3EFF               	addlw	-1
  7477  16B4  1D03               	skipz
  7478  16B5  2EAE               	goto	u5165
  7479  16B6  082E               	movf	??_aht_readSensor+4,w
  7480  16B7  04AA               	iorwf	??_aht_readSensor,f
  7481  16B8  082F               	movf	??_aht_readSensor+5,w
  7482  16B9  04AB               	iorwf	??_aht_readSensor+1,f
  7483  16BA  0830               	movf	??_aht_readSensor+6,w
  7484  16BB  04AC               	iorwf	??_aht_readSensor+2,f
  7485  16BC  0831               	movf	??_aht_readSensor+7,w
  7486  16BD  04AD               	iorwf	??_aht_readSensor+3,f
  7487  16BE  084A               	movf	aht_readSensor@temp+20,w
  7488  16BF  042A               	iorwf	??_aht_readSensor,w
  7489  16C0  00CE               	movwf	aht_readSensor@result
  7490  16C1  084B               	movf	aht_readSensor@temp+21,w
  7491  16C2  042B               	iorwf	??_aht_readSensor+1,w
  7492  16C3  00CF               	movwf	aht_readSensor@result+1
  7493  16C4  084C               	movf	aht_readSensor@temp+22,w
  7494  16C5  042C               	iorwf	??_aht_readSensor+2,w
  7495  16C6  00D0               	movwf	aht_readSensor@result+2
  7496  16C7  084D               	movf	aht_readSensor@temp+23,w
  7497  16C8  042D               	iorwf	??_aht_readSensor+3,w
  7498  16C9  00D1               	movwf	aht_readSensor@result+3
  7499  16CA                     l3466:
  7500                           
  7501                           ;aht10.c: 97:     return result;
  7502  16CA  0851               	movf	aht_readSensor@result+3,w
  7503  16CB  00A9               	movwf	?_aht_readSensor+3
  7504  16CC  0850               	movf	aht_readSensor@result+2,w
  7505  16CD  00A8               	movwf	?_aht_readSensor+2
  7506  16CE  084F               	movf	aht_readSensor@result+1,w
  7507  16CF  00A7               	movwf	?_aht_readSensor+1
  7508  16D0  084E               	movf	aht_readSensor@result,w
  7509  16D1  00A6               	movwf	?_aht_readSensor
  7510  16D2                     l176:
  7511  16D2  0008               	return
  7512  16D3                     __end_of_aht_readSensor:
  7513                           
  7514                           	psect	text27
  7515  1C85                     __ptext27:	
  7516 ;; *************** function _I2C_Master_Write *****************
  7517 ;; Defined at:
  7518 ;;		line 65 in file "I2C.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  d               2    0[BANK0 ] unsigned int 
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;		None
  7523 ;; Return value:  Size  Location     Type
  7524 ;;                  1    wreg      void 
  7525 ;; Registers used:
  7526 ;;		wreg, status,2, status,0, pclath, cstack
  7527 ;; Tracked objects:
  7528 ;;		On entry : 0/0
  7529 ;;		On exit  : 0/0
  7530 ;;		Unchanged: 0/0
  7531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7532 ;;      Params:         0       2       0       0       0
  7533 ;;      Locals:         0       0       0       0       0
  7534 ;;      Temps:          0       0       0       0       0
  7535 ;;      Totals:         0       2       0       0       0
  7536 ;;Total ram usage:        2 bytes
  7537 ;; Hardware stack levels used:    1
  7538 ;; Hardware stack levels required when called:    3
  7539 ;; This function calls:
  7540 ;;		_I2C_Master_Wait
  7541 ;; This function is called by:
  7542 ;;		_aht_readSensor
  7543 ;;		_aht_begin
  7544 ;;		_aht_Reset
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           
  7549                           ;psect for function _I2C_Master_Write
  7550  1C85                     _I2C_Master_Write:
  7551  1C85                     l3316:	
  7552                           ;incstack = 0
  7553                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  7554                           
  7555                           
  7556                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  7557  1C85  160A  118A  209C  160A  158A  	fcall	_I2C_Master_Wait
  7558  1C8A                     l3318:
  7559                           
  7560                           ;I2C.c: 68:     SSPBUF = d;
  7561  1C8A  1283               	bcf	3,5	;RP0=0, select bank0
  7562  1C8B  1303               	bcf	3,6	;RP1=0, select bank0
  7563  1C8C  0820               	movf	I2C_Master_Write@d,w
  7564  1C8D  0093               	movwf	19	;volatile
  7565  1C8E                     l114:
  7566  1C8E  0008               	return
  7567  1C8F                     __end_of_I2C_Master_Write:
  7568                           
  7569                           	psect	text28
  7570  07F7                     __ptext28:	
  7571 ;; *************** function _I2C_Master_Stop *****************
  7572 ;; Defined at:
  7573 ;;		line 55 in file "I2C.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;		None
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;		None
  7578 ;; Return value:  Size  Location     Type
  7579 ;;                  1    wreg      void 
  7580 ;; Registers used:
  7581 ;;		wreg, status,2, status,0, pclath, cstack
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7587 ;;      Params:         0       0       0       0       0
  7588 ;;      Locals:         0       0       0       0       0
  7589 ;;      Temps:          0       0       0       0       0
  7590 ;;      Totals:         0       0       0       0       0
  7591 ;;Total ram usage:        0 bytes
  7592 ;; Hardware stack levels used:    1
  7593 ;; Hardware stack levels required when called:    3
  7594 ;; This function calls:
  7595 ;;		_I2C_Master_Wait
  7596 ;; This function is called by:
  7597 ;;		_aht_readSensor
  7598 ;;		_aht_begin
  7599 ;;		_aht_Reset
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           
  7604                           ;psect for function _I2C_Master_Stop
  7605  07F7                     _I2C_Master_Stop:
  7606  07F7                     l3312:	
  7607                           ;incstack = 0
  7608                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  7609                           
  7610                           
  7611                           ;I2C.c: 57:     I2C_Master_Wait();
  7612  07F7  160A  118A  209C  120A  118A  	fcall	_I2C_Master_Wait
  7613  07FC                     l3314:
  7614                           
  7615                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  7616  07FC  1683               	bsf	3,5	;RP0=1, select bank1
  7617  07FD  1303               	bcf	3,6	;RP1=0, select bank1
  7618  07FE  1511               	bsf	17,2	;volatile
  7619  07FF                     l111:
  7620  07FF  0008               	return
  7621  0800                     __end_of_I2C_Master_Stop:
  7622                           
  7623                           	psect	text29
  7624  1C7C                     __ptext29:	
  7625 ;; *************** function _I2C_Master_Start *****************
  7626 ;; Defined at:
  7627 ;;		line 39 in file "I2C.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;		None
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1    wreg      void 
  7634 ;; Registers used:
  7635 ;;		wreg, status,2, status,0, pclath, cstack
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7641 ;;      Params:         0       0       0       0       0
  7642 ;;      Locals:         0       0       0       0       0
  7643 ;;      Temps:          0       0       0       0       0
  7644 ;;      Totals:         0       0       0       0       0
  7645 ;;Total ram usage:        0 bytes
  7646 ;; Hardware stack levels used:    1
  7647 ;; Hardware stack levels required when called:    3
  7648 ;; This function calls:
  7649 ;;		_I2C_Master_Wait
  7650 ;; This function is called by:
  7651 ;;		_aht_readSensor
  7652 ;;		_aht_begin
  7653 ;;		_aht_readStatus
  7654 ;;		_aht_Reset
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           
  7659                           ;psect for function _I2C_Master_Start
  7660  1C7C                     _I2C_Master_Start:
  7661  1C7C                     l3308:	
  7662                           ;incstack = 0
  7663                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  7664                           
  7665                           
  7666                           ;I2C.c: 41:     I2C_Master_Wait();
  7667  1C7C  160A  118A  209C  160A  158A  	fcall	_I2C_Master_Wait
  7668  1C81                     l3310:
  7669                           
  7670                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  7671  1C81  1683               	bsf	3,5	;RP0=1, select bank1
  7672  1C82  1303               	bcf	3,6	;RP1=0, select bank1
  7673  1C83  1411               	bsf	17,0	;volatile
  7674  1C84                     l105:
  7675  1C84  0008               	return
  7676  1C85                     __end_of_I2C_Master_Start:
  7677                           
  7678                           	psect	text30
  7679  1D97                     __ptext30:	
  7680 ;; *************** function _I2C_Master_Read *****************
  7681 ;; Defined at:
  7682 ;;		line 74 in file "I2C.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;  a               2    0[BANK0 ] unsigned short 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;  temp            2    4[BANK0 ] unsigned short 
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  2    0[BANK0 ] unsigned short 
  7689 ;; Registers used:
  7690 ;;		wreg, status,2, status,0, pclath, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7696 ;;      Params:         0       2       0       0       0
  7697 ;;      Locals:         0       2       0       0       0
  7698 ;;      Temps:          0       2       0       0       0
  7699 ;;      Totals:         0       6       0       0       0
  7700 ;;Total ram usage:        6 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; Hardware stack levels required when called:    3
  7703 ;; This function calls:
  7704 ;;		_I2C_Master_Wait
  7705 ;; This function is called by:
  7706 ;;		_aht_readSensor
  7707 ;;		_aht_readStatus
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           
  7712                           ;psect for function _I2C_Master_Read
  7713  1D97                     _I2C_Master_Read:
  7714  1D97                     l3320:	
  7715                           ;incstack = 0
  7716                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  7717                           
  7718                           
  7719                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  7720  1D97  160A  118A  209C  160A  158A  	fcall	_I2C_Master_Wait
  7721  1D9C                     l3322:
  7722                           
  7723                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  7724  1D9C  1683               	bsf	3,5	;RP0=1, select bank1
  7725  1D9D  1303               	bcf	3,6	;RP1=0, select bank1
  7726  1D9E  1591               	bsf	17,3	;volatile
  7727                           
  7728                           ;I2C.c: 79:     I2C_Master_Wait();
  7729  1D9F  160A  118A  209C  160A  158A  	fcall	_I2C_Master_Wait
  7730  1DA4                     l3324:
  7731                           
  7732                           ;I2C.c: 80:     temp = SSPBUF;
  7733  1DA4  1283               	bcf	3,5	;RP0=0, select bank0
  7734  1DA5  1303               	bcf	3,6	;RP1=0, select bank0
  7735  1DA6  0813               	movf	19,w	;volatile
  7736  1DA7  00A2               	movwf	??_I2C_Master_Read
  7737  1DA8  01A3               	clrf	??_I2C_Master_Read+1
  7738  1DA9  0822               	movf	??_I2C_Master_Read,w
  7739  1DAA  00A4               	movwf	I2C_Master_Read@temp
  7740  1DAB  0823               	movf	??_I2C_Master_Read+1,w
  7741  1DAC  00A5               	movwf	I2C_Master_Read@temp+1
  7742  1DAD                     l3326:
  7743                           
  7744                           ;I2C.c: 81:     I2C_Master_Wait();
  7745  1DAD  160A  118A  209C  160A  158A  	fcall	_I2C_Master_Wait
  7746  1DB2                     l3328:
  7747                           
  7748                           ;I2C.c: 82:     if(a == 1){
  7749  1DB2  1283               	bcf	3,5	;RP0=0, select bank0
  7750  1DB3  1303               	bcf	3,6	;RP1=0, select bank0
  7751  1DB4  0320               	decf	I2C_Master_Read@a,w
  7752  1DB5  0421               	iorwf	I2C_Master_Read@a+1,w
  7753  1DB6  1D03               	btfss	3,2
  7754  1DB7  2DB9               	goto	u4821
  7755  1DB8  2DBA               	goto	u4820
  7756  1DB9                     u4821:
  7757  1DB9  2DBE               	goto	l117
  7758  1DBA                     u4820:
  7759  1DBA                     l3330:
  7760                           
  7761                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  7762  1DBA  1683               	bsf	3,5	;RP0=1, select bank1
  7763  1DBB  1303               	bcf	3,6	;RP1=0, select bank1
  7764  1DBC  1291               	bcf	17,5	;volatile
  7765                           
  7766                           ;I2C.c: 84:     }else{
  7767  1DBD  2DC1               	goto	l118
  7768  1DBE                     l117:
  7769                           
  7770                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  7771  1DBE  1683               	bsf	3,5	;RP0=1, select bank1
  7772  1DBF  1303               	bcf	3,6	;RP1=0, select bank1
  7773  1DC0  1691               	bsf	17,5	;volatile
  7774  1DC1                     l118:	
  7775                           ;I2C.c: 86:     }
  7776                           
  7777                           
  7778                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  7779  1DC1  1611               	bsf	17,4	;volatile
  7780  1DC2                     l3332:
  7781                           
  7782                           ;I2C.c: 88:     return temp;
  7783  1DC2  1283               	bcf	3,5	;RP0=0, select bank0
  7784  1DC3  1303               	bcf	3,6	;RP1=0, select bank0
  7785  1DC4  0825               	movf	I2C_Master_Read@temp+1,w
  7786  1DC5  00A1               	movwf	?_I2C_Master_Read+1
  7787  1DC6  0824               	movf	I2C_Master_Read@temp,w
  7788  1DC7  00A0               	movwf	?_I2C_Master_Read
  7789  1DC8                     l119:
  7790  1DC8  0008               	return
  7791  1DC9                     __end_of_I2C_Master_Read:
  7792                           
  7793                           	psect	text31
  7794  109C                     __ptext31:	
  7795 ;; *************** function _I2C_Master_Wait *****************
  7796 ;; Defined at:
  7797 ;;		line 32 in file "I2C.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;		None
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;		None
  7802 ;; Return value:  Size  Location     Type
  7803 ;;                  1    wreg      void 
  7804 ;; Registers used:
  7805 ;;		wreg, status,2
  7806 ;; Tracked objects:
  7807 ;;		On entry : 0/0
  7808 ;;		On exit  : 0/0
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7811 ;;      Params:         0       0       0       0       0
  7812 ;;      Locals:         0       0       0       0       0
  7813 ;;      Temps:          0       0       0       0       0
  7814 ;;      Totals:         0       0       0       0       0
  7815 ;;Total ram usage:        0 bytes
  7816 ;; Hardware stack levels used:    1
  7817 ;; Hardware stack levels required when called:    2
  7818 ;; This function calls:
  7819 ;;		Nothing
  7820 ;; This function is called by:
  7821 ;;		_I2C_Master_Start
  7822 ;;		_I2C_Master_Stop
  7823 ;;		_I2C_Master_Write
  7824 ;;		_I2C_Master_Read
  7825 ;;		_I2C_Master_RepeatedStart
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829                           
  7830                           ;psect for function _I2C_Master_Wait
  7831  109C                     _I2C_Master_Wait:
  7832  109C                     l3304:	
  7833                           ;incstack = 0
  7834                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  7835                           
  7836  109C                     l99:	
  7837                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  7838                           
  7839  109C  1683               	bsf	3,5	;RP0=1, select bank1
  7840  109D  1303               	bcf	3,6	;RP1=0, select bank1
  7841  109E  1914               	btfsc	20,2	;volatile
  7842  109F  28A1               	goto	u4801
  7843  10A0  28A2               	goto	u4800
  7844  10A1                     u4801:
  7845  10A1  289C               	goto	l99
  7846  10A2                     u4800:
  7847  10A2                     l3306:
  7848  10A2  0811               	movf	17,w	;volatile
  7849  10A3  391F               	andlw	31
  7850  10A4  1D03               	btfss	3,2
  7851  10A5  28A7               	goto	u4811
  7852  10A6  28A8               	goto	u4810
  7853  10A7                     u4811:
  7854  10A7  289C               	goto	l99
  7855  10A8                     u4810:
  7856  10A8                     l102:
  7857  10A8  0008               	return
  7858  10A9                     __end_of_I2C_Master_Wait:
  7859                           
  7860                           	psect	text32
  7861  1DC9                     __ptext32:	
  7862 ;; *************** function ___lltoft *****************
  7863 ;; Defined at:
  7864 ;;		line 35 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lltoft.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;  c               4   51[BANK0 ] unsigned long 
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;  exp             1   56[BANK0 ] unsigned char 
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  3   51[BANK0 ] float 
  7871 ;; Registers used:
  7872 ;;		wreg, status,2, status,0, pclath, cstack
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7878 ;;      Params:         0       4       0       0       0
  7879 ;;      Locals:         0       1       0       0       0
  7880 ;;      Temps:          0       1       0       0       0
  7881 ;;      Totals:         0       6       0       0       0
  7882 ;;Total ram usage:        6 bytes
  7883 ;; Hardware stack levels used:    1
  7884 ;; Hardware stack levels required when called:    3
  7885 ;; This function calls:
  7886 ;;		___ftpack
  7887 ;; This function is called by:
  7888 ;;		_aht_GetHumidity
  7889 ;;		_aht_GetTemperature
  7890 ;;		_sprintf
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           
  7895                           ;psect for function ___lltoft
  7896  1DC9                     ___lltoft:
  7897  1DC9                     l2872:	
  7898                           ;incstack = 0
  7899                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  7900                           
  7901  1DC9  308E               	movlw	142
  7902  1DCA  1283               	bcf	3,5	;RP0=0, select bank0
  7903  1DCB  1303               	bcf	3,6	;RP1=0, select bank0
  7904  1DCC  00D7               	movwf	??___lltoft
  7905  1DCD  0857               	movf	??___lltoft,w
  7906  1DCE  00D8               	movwf	___lltoft@exp
  7907  1DCF  2DDD               	goto	l2876
  7908  1DD0                     l2874:
  7909  1DD0  3001               	movlw	1
  7910  1DD1                     u4215:
  7911  1DD1  1003               	clrc
  7912  1DD2  0CD6               	rrf	___lltoft@c+3,f
  7913  1DD3  0CD5               	rrf	___lltoft@c+2,f
  7914  1DD4  0CD4               	rrf	___lltoft@c+1,f
  7915  1DD5  0CD3               	rrf	___lltoft@c,f
  7916  1DD6  3EFF               	addlw	-1
  7917  1DD7  1D03               	skipz
  7918  1DD8  2DD1               	goto	u4215
  7919  1DD9  3001               	movlw	1
  7920  1DDA  00D7               	movwf	??___lltoft
  7921  1DDB  0857               	movf	??___lltoft,w
  7922  1DDC  07D8               	addwf	___lltoft@exp,f
  7923  1DDD                     l2876:
  7924  1DDD  30FF               	movlw	255
  7925  1DDE  0556               	andwf	___lltoft@c+3,w
  7926  1DDF  1D03               	btfss	3,2
  7927  1DE0  2DE2               	goto	u4221
  7928  1DE1  2DE3               	goto	u4220
  7929  1DE2                     u4221:
  7930  1DE2  2DD0               	goto	l2874
  7931  1DE3                     u4220:
  7932  1DE3                     l2878:
  7933  1DE3  0853               	movf	___lltoft@c,w
  7934  1DE4  00A0               	movwf	___ftpack@arg
  7935  1DE5  0854               	movf	___lltoft@c+1,w
  7936  1DE6  00A1               	movwf	___ftpack@arg+1
  7937  1DE7  0855               	movf	___lltoft@c+2,w
  7938  1DE8  00A2               	movwf	___ftpack@arg+2
  7939  1DE9  0858               	movf	___lltoft@exp,w
  7940  1DEA  00D7               	movwf	??___lltoft
  7941  1DEB  0857               	movf	??___lltoft,w
  7942  1DEC  00A3               	movwf	___ftpack@exp
  7943  1DED  01A4               	clrf	___ftpack@sign
  7944  1DEE  160A  118A  21DB  160A  158A  	fcall	___ftpack
  7945  1DF3  1283               	bcf	3,5	;RP0=0, select bank0
  7946  1DF4  1303               	bcf	3,6	;RP1=0, select bank0
  7947  1DF5  0820               	movf	?___ftpack,w
  7948  1DF6  00D3               	movwf	?___lltoft
  7949  1DF7  0821               	movf	?___ftpack+1,w
  7950  1DF8  00D4               	movwf	?___lltoft+1
  7951  1DF9  0822               	movf	?___ftpack+2,w
  7952  1DFA  00D5               	movwf	?___lltoft+2
  7953  1DFB                     l789:
  7954  1DFB  0008               	return
  7955  1DFC                     __end_of___lltoft:
  7956                           
  7957                           	psect	text33
  7958  0810                     __ptext33:	
  7959 ;; *************** function ___ftmul *****************
  7960 ;; Defined at:
  7961 ;;		line 62 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftmul.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;  f1              3   20[BANK0 ] float 
  7964 ;;  f2              3   23[BANK0 ] float 
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;  f3_as_produc    3   31[BANK0 ] unsigned um
  7967 ;;  sign            1   35[BANK0 ] unsigned char 
  7968 ;;  cntr            1   34[BANK0 ] unsigned char 
  7969 ;;  exp             1   30[BANK0 ] unsigned char 
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  3   20[BANK0 ] float 
  7972 ;; Registers used:
  7973 ;;		wreg, status,2, status,0, pclath, cstack
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7979 ;;      Params:         0       6       0       0       0
  7980 ;;      Locals:         0       6       0       0       0
  7981 ;;      Temps:          0       4       0       0       0
  7982 ;;      Totals:         0      16       0       0       0
  7983 ;;Total ram usage:       16 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:    3
  7986 ;; This function calls:
  7987 ;;		___ftpack
  7988 ;; This function is called by:
  7989 ;;		_aht_GetHumidity
  7990 ;;		_aht_GetTemperature
  7991 ;;		_fround
  7992 ;;		_scale
  7993 ;;		_sprintf
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997                           
  7998                           ;psect for function ___ftmul
  7999  0810                     ___ftmul:
  8000  0810                     l2348:	
  8001                           ;incstack = 0
  8002                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8003                           
  8004  0810  1283               	bcf	3,5	;RP0=0, select bank0
  8005  0811  1303               	bcf	3,6	;RP1=0, select bank0
  8006  0812  0834               	movf	___ftmul@f1,w
  8007  0813  00BA               	movwf	??___ftmul
  8008  0814  0835               	movf	___ftmul@f1+1,w
  8009  0815  00BB               	movwf	??___ftmul+1
  8010  0816  0836               	movf	___ftmul@f1+2,w
  8011  0817  00BC               	movwf	??___ftmul+2
  8012  0818  1003               	clrc
  8013  0819  0D3B               	rlf	??___ftmul+1,w
  8014  081A  0D3C               	rlf	??___ftmul+2,w
  8015  081B  00BD               	movwf	??___ftmul+3
  8016  081C  083D               	movf	??___ftmul+3,w
  8017  081D  00BE               	movwf	___ftmul@exp
  8018  081E  083E               	movf	___ftmul@exp,w
  8019  081F  1D03               	btfss	3,2
  8020  0820  2822               	goto	u3011
  8021  0821  2823               	goto	u3010
  8022  0822                     u3011:
  8023  0822  282A               	goto	l2354
  8024  0823                     u3010:
  8025  0823                     l2350:
  8026  0823  3000               	movlw	0
  8027  0824  00B4               	movwf	?___ftmul
  8028  0825  3000               	movlw	0
  8029  0826  00B5               	movwf	?___ftmul+1
  8030  0827  3000               	movlw	0
  8031  0828  00B6               	movwf	?___ftmul+2
  8032  0829  28F4               	goto	l719
  8033  082A                     l2354:
  8034  082A  0837               	movf	___ftmul@f2,w
  8035  082B  00BA               	movwf	??___ftmul
  8036  082C  0838               	movf	___ftmul@f2+1,w
  8037  082D  00BB               	movwf	??___ftmul+1
  8038  082E  0839               	movf	___ftmul@f2+2,w
  8039  082F  00BC               	movwf	??___ftmul+2
  8040  0830  1003               	clrc
  8041  0831  0D3B               	rlf	??___ftmul+1,w
  8042  0832  0D3C               	rlf	??___ftmul+2,w
  8043  0833  00BD               	movwf	??___ftmul+3
  8044  0834  083D               	movf	??___ftmul+3,w
  8045  0835  00C3               	movwf	___ftmul@sign
  8046  0836  0843               	movf	___ftmul@sign,w
  8047  0837  1D03               	btfss	3,2
  8048  0838  283A               	goto	u3021
  8049  0839  283B               	goto	u3020
  8050  083A                     u3021:
  8051  083A  2842               	goto	l2360
  8052  083B                     u3020:
  8053  083B                     l2356:
  8054  083B  3000               	movlw	0
  8055  083C  00B4               	movwf	?___ftmul
  8056  083D  3000               	movlw	0
  8057  083E  00B5               	movwf	?___ftmul+1
  8058  083F  3000               	movlw	0
  8059  0840  00B6               	movwf	?___ftmul+2
  8060  0841  28F4               	goto	l719
  8061  0842                     l2360:
  8062  0842  0843               	movf	___ftmul@sign,w
  8063  0843  3E7B               	addlw	123
  8064  0844  00BA               	movwf	??___ftmul
  8065  0845  083A               	movf	??___ftmul,w
  8066  0846  07BE               	addwf	___ftmul@exp,f
  8067  0847  0834               	movf	___ftmul@f1,w
  8068  0848  00BA               	movwf	??___ftmul
  8069  0849  0835               	movf	___ftmul@f1+1,w
  8070  084A  00BB               	movwf	??___ftmul+1
  8071  084B  0836               	movf	___ftmul@f1+2,w
  8072  084C  00BC               	movwf	??___ftmul+2
  8073  084D  3010               	movlw	16
  8074  084E                     u3035:
  8075  084E  1003               	clrc
  8076  084F  0CBC               	rrf	??___ftmul+2,f
  8077  0850  0CBB               	rrf	??___ftmul+1,f
  8078  0851  0CBA               	rrf	??___ftmul,f
  8079  0852                     u3030:
  8080  0852  3EFF               	addlw	-1
  8081  0853  1D03               	skipz
  8082  0854  284E               	goto	u3035
  8083  0855  083A               	movf	??___ftmul,w
  8084  0856  00BD               	movwf	??___ftmul+3
  8085  0857  083D               	movf	??___ftmul+3,w
  8086  0858  00C3               	movwf	___ftmul@sign
  8087  0859  0837               	movf	___ftmul@f2,w
  8088  085A  00BA               	movwf	??___ftmul
  8089  085B  0838               	movf	___ftmul@f2+1,w
  8090  085C  00BB               	movwf	??___ftmul+1
  8091  085D  0839               	movf	___ftmul@f2+2,w
  8092  085E  00BC               	movwf	??___ftmul+2
  8093  085F  3010               	movlw	16
  8094  0860                     u3045:
  8095  0860  1003               	clrc
  8096  0861  0CBC               	rrf	??___ftmul+2,f
  8097  0862  0CBB               	rrf	??___ftmul+1,f
  8098  0863  0CBA               	rrf	??___ftmul,f
  8099  0864                     u3040:
  8100  0864  3EFF               	addlw	-1
  8101  0865  1D03               	skipz
  8102  0866  2860               	goto	u3045
  8103  0867  083A               	movf	??___ftmul,w
  8104  0868  00BD               	movwf	??___ftmul+3
  8105  0869  083D               	movf	??___ftmul+3,w
  8106  086A  06C3               	xorwf	___ftmul@sign,f
  8107  086B  3080               	movlw	128
  8108  086C  00BA               	movwf	??___ftmul
  8109  086D  083A               	movf	??___ftmul,w
  8110  086E  05C3               	andwf	___ftmul@sign,f
  8111  086F                     l2362:
  8112  086F  17B5               	bsf	___ftmul@f1+1,7
  8113  0870                     l2364:
  8114  0870  17B8               	bsf	___ftmul@f2+1,7
  8115  0871                     l2366:
  8116  0871  30FF               	movlw	255
  8117  0872  05B7               	andwf	___ftmul@f2,f
  8118  0873  30FF               	movlw	255
  8119  0874  05B8               	andwf	___ftmul@f2+1,f
  8120  0875  3000               	movlw	0
  8121  0876  05B9               	andwf	___ftmul@f2+2,f
  8122  0877                     l2368:
  8123  0877  3000               	movlw	0
  8124  0878  00BF               	movwf	___ftmul@f3_as_product
  8125  0879  3000               	movlw	0
  8126  087A  00C0               	movwf	___ftmul@f3_as_product+1
  8127  087B  3000               	movlw	0
  8128  087C  00C1               	movwf	___ftmul@f3_as_product+2
  8129  087D                     l2370:
  8130  087D  3007               	movlw	7
  8131  087E  00BA               	movwf	??___ftmul
  8132  087F  083A               	movf	??___ftmul,w
  8133  0880  00C2               	movwf	___ftmul@cntr
  8134  0881                     l2372:
  8135  0881  1C34               	btfss	___ftmul@f1,0
  8136  0882  2884               	goto	u3051
  8137  0883  2885               	goto	u3050
  8138  0884                     u3051:
  8139  0884  2895               	goto	l2376
  8140  0885                     u3050:
  8141  0885                     l2374:
  8142  0885  0837               	movf	___ftmul@f2,w
  8143  0886  07BF               	addwf	___ftmul@f3_as_product,f
  8144  0887  0838               	movf	___ftmul@f2+1,w
  8145  0888  1103               	clrz
  8146  0889  1803               	skipnc
  8147  088A  0A38               	incf	___ftmul@f2+1,w
  8148  088B  1903               	skipnz
  8149  088C  288E               	goto	u3061
  8150  088D  07C0               	addwf	___ftmul@f3_as_product+1,f
  8151  088E                     u3061:
  8152  088E  0839               	movf	___ftmul@f2+2,w
  8153  088F  1103               	clrz
  8154  0890  1803               	skipnc
  8155  0891  0A39               	incf	___ftmul@f2+2,w
  8156  0892  1903               	skipnz
  8157  0893  2895               	goto	u3062
  8158  0894  07C1               	addwf	___ftmul@f3_as_product+2,f
  8159  0895                     u3062:
  8160  0895                     l2376:
  8161  0895  3001               	movlw	1
  8162  0896                     u3075:
  8163  0896  1003               	clrc
  8164  0897  0CB6               	rrf	___ftmul@f1+2,f
  8165  0898  0CB5               	rrf	___ftmul@f1+1,f
  8166  0899  0CB4               	rrf	___ftmul@f1,f
  8167  089A  3EFF               	addlw	-1
  8168  089B  1D03               	skipz
  8169  089C  2896               	goto	u3075
  8170  089D                     l2378:
  8171  089D  3001               	movlw	1
  8172  089E                     u3085:
  8173  089E  1003               	clrc
  8174  089F  0DB7               	rlf	___ftmul@f2,f
  8175  08A0  0DB8               	rlf	___ftmul@f2+1,f
  8176  08A1  0DB9               	rlf	___ftmul@f2+2,f
  8177  08A2  3EFF               	addlw	-1
  8178  08A3  1D03               	skipz
  8179  08A4  289E               	goto	u3085
  8180  08A5                     l2380:
  8181  08A5  3001               	movlw	1
  8182  08A6  02C2               	subwf	___ftmul@cntr,f
  8183  08A7  1D03               	btfss	3,2
  8184  08A8  28AA               	goto	u3091
  8185  08A9  28AB               	goto	u3090
  8186  08AA                     u3091:
  8187  08AA  2881               	goto	l2372
  8188  08AB                     u3090:
  8189  08AB                     l2382:
  8190  08AB  3009               	movlw	9
  8191  08AC  00BA               	movwf	??___ftmul
  8192  08AD  083A               	movf	??___ftmul,w
  8193  08AE  00C2               	movwf	___ftmul@cntr
  8194  08AF                     l2384:
  8195  08AF  1C34               	btfss	___ftmul@f1,0
  8196  08B0  28B2               	goto	u3101
  8197  08B1  28B3               	goto	u3100
  8198  08B2                     u3101:
  8199  08B2  28C3               	goto	l2388
  8200  08B3                     u3100:
  8201  08B3                     l2386:
  8202  08B3  0837               	movf	___ftmul@f2,w
  8203  08B4  07BF               	addwf	___ftmul@f3_as_product,f
  8204  08B5  0838               	movf	___ftmul@f2+1,w
  8205  08B6  1103               	clrz
  8206  08B7  1803               	skipnc
  8207  08B8  0A38               	incf	___ftmul@f2+1,w
  8208  08B9  1903               	skipnz
  8209  08BA  28BC               	goto	u3111
  8210  08BB  07C0               	addwf	___ftmul@f3_as_product+1,f
  8211  08BC                     u3111:
  8212  08BC  0839               	movf	___ftmul@f2+2,w
  8213  08BD  1103               	clrz
  8214  08BE  1803               	skipnc
  8215  08BF  0A39               	incf	___ftmul@f2+2,w
  8216  08C0  1903               	skipnz
  8217  08C1  28C3               	goto	u3112
  8218  08C2  07C1               	addwf	___ftmul@f3_as_product+2,f
  8219  08C3                     u3112:
  8220  08C3                     l2388:
  8221  08C3  3001               	movlw	1
  8222  08C4                     u3125:
  8223  08C4  1003               	clrc
  8224  08C5  0CB6               	rrf	___ftmul@f1+2,f
  8225  08C6  0CB5               	rrf	___ftmul@f1+1,f
  8226  08C7  0CB4               	rrf	___ftmul@f1,f
  8227  08C8  3EFF               	addlw	-1
  8228  08C9  1D03               	skipz
  8229  08CA  28C4               	goto	u3125
  8230  08CB                     l2390:
  8231  08CB  3001               	movlw	1
  8232  08CC                     u3135:
  8233  08CC  1003               	clrc
  8234  08CD  0CC1               	rrf	___ftmul@f3_as_product+2,f
  8235  08CE  0CC0               	rrf	___ftmul@f3_as_product+1,f
  8236  08CF  0CBF               	rrf	___ftmul@f3_as_product,f
  8237  08D0  3EFF               	addlw	-1
  8238  08D1  1D03               	skipz
  8239  08D2  28CC               	goto	u3135
  8240  08D3                     l2392:
  8241  08D3  3001               	movlw	1
  8242  08D4  02C2               	subwf	___ftmul@cntr,f
  8243  08D5  1D03               	btfss	3,2
  8244  08D6  28D8               	goto	u3141
  8245  08D7  28D9               	goto	u3140
  8246  08D8                     u3141:
  8247  08D8  28AF               	goto	l2384
  8248  08D9                     u3140:
  8249  08D9                     l2394:
  8250  08D9  083F               	movf	___ftmul@f3_as_product,w
  8251  08DA  00A0               	movwf	___ftpack@arg
  8252  08DB  0840               	movf	___ftmul@f3_as_product+1,w
  8253  08DC  00A1               	movwf	___ftpack@arg+1
  8254  08DD  0841               	movf	___ftmul@f3_as_product+2,w
  8255  08DE  00A2               	movwf	___ftpack@arg+2
  8256  08DF  083E               	movf	___ftmul@exp,w
  8257  08E0  00BA               	movwf	??___ftmul
  8258  08E1  083A               	movf	??___ftmul,w
  8259  08E2  00A3               	movwf	___ftpack@exp
  8260  08E3  0843               	movf	___ftmul@sign,w
  8261  08E4  00BB               	movwf	??___ftmul+1
  8262  08E5  083B               	movf	??___ftmul+1,w
  8263  08E6  00A4               	movwf	___ftpack@sign
  8264  08E7  160A  118A  21DB  120A  158A  	fcall	___ftpack
  8265  08EC  1283               	bcf	3,5	;RP0=0, select bank0
  8266  08ED  1303               	bcf	3,6	;RP1=0, select bank0
  8267  08EE  0820               	movf	?___ftpack,w
  8268  08EF  00B4               	movwf	?___ftmul
  8269  08F0  0821               	movf	?___ftpack+1,w
  8270  08F1  00B5               	movwf	?___ftmul+1
  8271  08F2  0822               	movf	?___ftpack+2,w
  8272  08F3  00B6               	movwf	?___ftmul+2
  8273  08F4                     l719:
  8274  08F4  0008               	return
  8275  08F5                     __end_of___ftmul:
  8276                           
  8277                           	psect	text34
  8278  143F                     __ptext34:	
  8279 ;; *************** function ___ftdiv *****************
  8280 ;; Defined at:
  8281 ;;		line 56 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftdiv.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;  f2              3   36[BANK0 ] float 
  8284 ;;  f1              3   39[BANK0 ] float 
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;  f3              3   47[BANK0 ] float 
  8287 ;;  sign            1   51[BANK0 ] unsigned char 
  8288 ;;  exp             1   50[BANK0 ] unsigned char 
  8289 ;;  cntr            1   46[BANK0 ] unsigned char 
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  3   36[BANK0 ] float 
  8292 ;; Registers used:
  8293 ;;		wreg, status,2, status,0, pclath, cstack
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8299 ;;      Params:         0       6       0       0       0
  8300 ;;      Locals:         0       6       0       0       0
  8301 ;;      Temps:          0       4       0       0       0
  8302 ;;      Totals:         0      16       0       0       0
  8303 ;;Total ram usage:       16 bytes
  8304 ;; Hardware stack levels used:    1
  8305 ;; Hardware stack levels required when called:    3
  8306 ;; This function calls:
  8307 ;;		___ftpack
  8308 ;; This function is called by:
  8309 ;;		_aht_GetHumidity
  8310 ;;		_aht_GetTemperature
  8311 ;; This function uses a non-reentrant model
  8312 ;;
  8313                           
  8314                           
  8315                           ;psect for function ___ftdiv
  8316  143F                     ___ftdiv:
  8317  143F                     l2732:	
  8318                           ;incstack = 0
  8319                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8320                           
  8321  143F  1283               	bcf	3,5	;RP0=0, select bank0
  8322  1440  1303               	bcf	3,6	;RP1=0, select bank0
  8323  1441  0847               	movf	___ftdiv@f1,w
  8324  1442  00CA               	movwf	??___ftdiv
  8325  1443  0848               	movf	___ftdiv@f1+1,w
  8326  1444  00CB               	movwf	??___ftdiv+1
  8327  1445  0849               	movf	___ftdiv@f1+2,w
  8328  1446  00CC               	movwf	??___ftdiv+2
  8329  1447  1003               	clrc
  8330  1448  0D4B               	rlf	??___ftdiv+1,w
  8331  1449  0D4C               	rlf	??___ftdiv+2,w
  8332  144A  00CD               	movwf	??___ftdiv+3
  8333  144B  084D               	movf	??___ftdiv+3,w
  8334  144C  00D2               	movwf	___ftdiv@exp
  8335  144D  0852               	movf	___ftdiv@exp,w
  8336  144E  1D03               	btfss	3,2
  8337  144F  2C51               	goto	u3921
  8338  1450  2C52               	goto	u3920
  8339  1451                     u3921:
  8340  1451  2C59               	goto	l2738
  8341  1452                     u3920:
  8342  1452                     l2734:
  8343  1452  3000               	movlw	0
  8344  1453  00C4               	movwf	?___ftdiv
  8345  1454  3000               	movlw	0
  8346  1455  00C5               	movwf	?___ftdiv+1
  8347  1456  3000               	movlw	0
  8348  1457  00C6               	movwf	?___ftdiv+2
  8349  1458  2D00               	goto	l687
  8350  1459                     l2738:
  8351  1459  0844               	movf	___ftdiv@f2,w
  8352  145A  00CA               	movwf	??___ftdiv
  8353  145B  0845               	movf	___ftdiv@f2+1,w
  8354  145C  00CB               	movwf	??___ftdiv+1
  8355  145D  0846               	movf	___ftdiv@f2+2,w
  8356  145E  00CC               	movwf	??___ftdiv+2
  8357  145F  1003               	clrc
  8358  1460  0D4B               	rlf	??___ftdiv+1,w
  8359  1461  0D4C               	rlf	??___ftdiv+2,w
  8360  1462  00CD               	movwf	??___ftdiv+3
  8361  1463  084D               	movf	??___ftdiv+3,w
  8362  1464  00D3               	movwf	___ftdiv@sign
  8363  1465  0853               	movf	___ftdiv@sign,w
  8364  1466  1D03               	btfss	3,2
  8365  1467  2C69               	goto	u3931
  8366  1468  2C6A               	goto	u3930
  8367  1469                     u3931:
  8368  1469  2C71               	goto	l2744
  8369  146A                     u3930:
  8370  146A                     l2740:
  8371  146A  3000               	movlw	0
  8372  146B  00C4               	movwf	?___ftdiv
  8373  146C  3000               	movlw	0
  8374  146D  00C5               	movwf	?___ftdiv+1
  8375  146E  3000               	movlw	0
  8376  146F  00C6               	movwf	?___ftdiv+2
  8377  1470  2D00               	goto	l687
  8378  1471                     l2744:
  8379  1471  3000               	movlw	0
  8380  1472  00CF               	movwf	___ftdiv@f3
  8381  1473  3000               	movlw	0
  8382  1474  00D0               	movwf	___ftdiv@f3+1
  8383  1475  3000               	movlw	0
  8384  1476  00D1               	movwf	___ftdiv@f3+2
  8385  1477                     l2746:
  8386  1477  3089               	movlw	137
  8387  1478  0753               	addwf	___ftdiv@sign,w
  8388  1479  00CA               	movwf	??___ftdiv
  8389  147A  084A               	movf	??___ftdiv,w
  8390  147B  02D2               	subwf	___ftdiv@exp,f
  8391  147C                     l2748:
  8392  147C  0847               	movf	___ftdiv@f1,w
  8393  147D  00CA               	movwf	??___ftdiv
  8394  147E  0848               	movf	___ftdiv@f1+1,w
  8395  147F  00CB               	movwf	??___ftdiv+1
  8396  1480  0849               	movf	___ftdiv@f1+2,w
  8397  1481  00CC               	movwf	??___ftdiv+2
  8398  1482  3010               	movlw	16
  8399  1483                     u3945:
  8400  1483  1003               	clrc
  8401  1484  0CCC               	rrf	??___ftdiv+2,f
  8402  1485  0CCB               	rrf	??___ftdiv+1,f
  8403  1486  0CCA               	rrf	??___ftdiv,f
  8404  1487                     u3940:
  8405  1487  3EFF               	addlw	-1
  8406  1488  1D03               	skipz
  8407  1489  2C83               	goto	u3945
  8408  148A  084A               	movf	??___ftdiv,w
  8409  148B  00CD               	movwf	??___ftdiv+3
  8410  148C  084D               	movf	??___ftdiv+3,w
  8411  148D  00D3               	movwf	___ftdiv@sign
  8412  148E                     l2750:
  8413  148E  0844               	movf	___ftdiv@f2,w
  8414  148F  00CA               	movwf	??___ftdiv
  8415  1490  0845               	movf	___ftdiv@f2+1,w
  8416  1491  00CB               	movwf	??___ftdiv+1
  8417  1492  0846               	movf	___ftdiv@f2+2,w
  8418  1493  00CC               	movwf	??___ftdiv+2
  8419  1494  3010               	movlw	16
  8420  1495                     u3955:
  8421  1495  1003               	clrc
  8422  1496  0CCC               	rrf	??___ftdiv+2,f
  8423  1497  0CCB               	rrf	??___ftdiv+1,f
  8424  1498  0CCA               	rrf	??___ftdiv,f
  8425  1499                     u3950:
  8426  1499  3EFF               	addlw	-1
  8427  149A  1D03               	skipz
  8428  149B  2C95               	goto	u3955
  8429  149C  084A               	movf	??___ftdiv,w
  8430  149D  00CD               	movwf	??___ftdiv+3
  8431  149E  084D               	movf	??___ftdiv+3,w
  8432  149F  06D3               	xorwf	___ftdiv@sign,f
  8433  14A0                     l2752:
  8434  14A0  3080               	movlw	128
  8435  14A1  00CA               	movwf	??___ftdiv
  8436  14A2  084A               	movf	??___ftdiv,w
  8437  14A3  05D3               	andwf	___ftdiv@sign,f
  8438  14A4                     l2754:
  8439  14A4  17C8               	bsf	___ftdiv@f1+1,7
  8440  14A5  30FF               	movlw	255
  8441  14A6  05C7               	andwf	___ftdiv@f1,f
  8442  14A7  30FF               	movlw	255
  8443  14A8  05C8               	andwf	___ftdiv@f1+1,f
  8444  14A9  3000               	movlw	0
  8445  14AA  05C9               	andwf	___ftdiv@f1+2,f
  8446  14AB                     l2756:
  8447  14AB  17C5               	bsf	___ftdiv@f2+1,7
  8448  14AC  30FF               	movlw	255
  8449  14AD  05C4               	andwf	___ftdiv@f2,f
  8450  14AE  30FF               	movlw	255
  8451  14AF  05C5               	andwf	___ftdiv@f2+1,f
  8452  14B0  3000               	movlw	0
  8453  14B1  05C6               	andwf	___ftdiv@f2+2,f
  8454  14B2  3018               	movlw	24
  8455  14B3  00CA               	movwf	??___ftdiv
  8456  14B4  084A               	movf	??___ftdiv,w
  8457  14B5  00CE               	movwf	___ftdiv@cntr
  8458  14B6                     l2758:
  8459  14B6  3001               	movlw	1
  8460  14B7                     u3965:
  8461  14B7  1003               	clrc
  8462  14B8  0DCF               	rlf	___ftdiv@f3,f
  8463  14B9  0DD0               	rlf	___ftdiv@f3+1,f
  8464  14BA  0DD1               	rlf	___ftdiv@f3+2,f
  8465  14BB  3EFF               	addlw	-1
  8466  14BC  1D03               	skipz
  8467  14BD  2CB7               	goto	u3965
  8468  14BE                     l2760:
  8469  14BE  0846               	movf	___ftdiv@f2+2,w
  8470  14BF  0249               	subwf	___ftdiv@f1+2,w
  8471  14C0  1D03               	skipz
  8472  14C1  2CC8               	goto	u3975
  8473  14C2  0845               	movf	___ftdiv@f2+1,w
  8474  14C3  0248               	subwf	___ftdiv@f1+1,w
  8475  14C4  1D03               	skipz
  8476  14C5  2CC8               	goto	u3975
  8477  14C6  0844               	movf	___ftdiv@f2,w
  8478  14C7  0247               	subwf	___ftdiv@f1,w
  8479  14C8                     u3975:
  8480  14C8  1C03               	skipc
  8481  14C9  2CCB               	goto	u3971
  8482  14CA  2CCC               	goto	u3970
  8483  14CB                     u3971:
  8484  14CB  2CD7               	goto	l2766
  8485  14CC                     u3970:
  8486  14CC                     l2762:
  8487  14CC  0844               	movf	___ftdiv@f2,w
  8488  14CD  02C7               	subwf	___ftdiv@f1,f
  8489  14CE  0845               	movf	___ftdiv@f2+1,w
  8490  14CF  1C03               	skipc
  8491  14D0  0F45               	incfsz	___ftdiv@f2+1,w
  8492  14D1  02C8               	subwf	___ftdiv@f1+1,f
  8493  14D2  0846               	movf	___ftdiv@f2+2,w
  8494  14D3  1C03               	skipc
  8495  14D4  0A46               	incf	___ftdiv@f2+2,w
  8496  14D5  02C9               	subwf	___ftdiv@f1+2,f
  8497  14D6                     l2764:
  8498  14D6  144F               	bsf	___ftdiv@f3,0
  8499  14D7                     l2766:
  8500  14D7  3001               	movlw	1
  8501  14D8                     u3985:
  8502  14D8  1003               	clrc
  8503  14D9  0DC7               	rlf	___ftdiv@f1,f
  8504  14DA  0DC8               	rlf	___ftdiv@f1+1,f
  8505  14DB  0DC9               	rlf	___ftdiv@f1+2,f
  8506  14DC  3EFF               	addlw	-1
  8507  14DD  1D03               	skipz
  8508  14DE  2CD8               	goto	u3985
  8509  14DF                     l2768:
  8510  14DF  3001               	movlw	1
  8511  14E0  02CE               	subwf	___ftdiv@cntr,f
  8512  14E1  1D03               	btfss	3,2
  8513  14E2  2CE4               	goto	u3991
  8514  14E3  2CE5               	goto	u3990
  8515  14E4                     u3991:
  8516  14E4  2CB6               	goto	l2758
  8517  14E5                     u3990:
  8518  14E5                     l2770:
  8519  14E5  084F               	movf	___ftdiv@f3,w
  8520  14E6  00A0               	movwf	___ftpack@arg
  8521  14E7  0850               	movf	___ftdiv@f3+1,w
  8522  14E8  00A1               	movwf	___ftpack@arg+1
  8523  14E9  0851               	movf	___ftdiv@f3+2,w
  8524  14EA  00A2               	movwf	___ftpack@arg+2
  8525  14EB  0852               	movf	___ftdiv@exp,w
  8526  14EC  00CA               	movwf	??___ftdiv
  8527  14ED  084A               	movf	??___ftdiv,w
  8528  14EE  00A3               	movwf	___ftpack@exp
  8529  14EF  0853               	movf	___ftdiv@sign,w
  8530  14F0  00CB               	movwf	??___ftdiv+1
  8531  14F1  084B               	movf	??___ftdiv+1,w
  8532  14F2  00A4               	movwf	___ftpack@sign
  8533  14F3  160A  118A  21DB  160A  118A  	fcall	___ftpack
  8534  14F8  1283               	bcf	3,5	;RP0=0, select bank0
  8535  14F9  1303               	bcf	3,6	;RP1=0, select bank0
  8536  14FA  0820               	movf	?___ftpack,w
  8537  14FB  00C4               	movwf	?___ftdiv
  8538  14FC  0821               	movf	?___ftpack+1,w
  8539  14FD  00C5               	movwf	?___ftdiv+1
  8540  14FE  0822               	movf	?___ftpack+2,w
  8541  14FF  00C6               	movwf	?___ftdiv+2
  8542  1500                     l687:
  8543  1500  0008               	return
  8544  1501                     __end_of___ftdiv:
  8545                           
  8546                           	psect	text35
  8547  11DB                     __ptext35:	
  8548 ;; *************** function ___ftpack *****************
  8549 ;; Defined at:
  8550 ;;		line 62 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\float.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;  arg             3    0[BANK0 ] unsigned um
  8553 ;;  exp             1    3[BANK0 ] unsigned char 
  8554 ;;  sign            1    4[BANK0 ] unsigned char 
  8555 ;; Auto vars:     Size  Location     Type
  8556 ;;		None
  8557 ;; Return value:  Size  Location     Type
  8558 ;;                  3    0[BANK0 ] float 
  8559 ;; Registers used:
  8560 ;;		wreg, status,2, status,0
  8561 ;; Tracked objects:
  8562 ;;		On entry : 0/0
  8563 ;;		On exit  : 0/0
  8564 ;;		Unchanged: 0/0
  8565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8566 ;;      Params:         0       5       0       0       0
  8567 ;;      Locals:         0       0       0       0       0
  8568 ;;      Temps:          0       3       0       0       0
  8569 ;;      Totals:         0       8       0       0       0
  8570 ;;Total ram usage:        8 bytes
  8571 ;; Hardware stack levels used:    1
  8572 ;; Hardware stack levels required when called:    2
  8573 ;; This function calls:
  8574 ;;		Nothing
  8575 ;; This function is called by:
  8576 ;;		___ftadd
  8577 ;;		___ftdiv
  8578 ;;		___ftmul
  8579 ;;		___lltoft
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583                           
  8584                           ;psect for function ___ftpack
  8585  11DB                     ___ftpack:
  8586  11DB                     l2122:	
  8587                           ;incstack = 0
  8588                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8589                           
  8590  11DB  1283               	bcf	3,5	;RP0=0, select bank0
  8591  11DC  1303               	bcf	3,6	;RP1=0, select bank0
  8592  11DD  0823               	movf	___ftpack@exp,w
  8593  11DE  1903               	btfsc	3,2
  8594  11DF  29E1               	goto	u2431
  8595  11E0  29E2               	goto	u2430
  8596  11E1                     u2431:
  8597  11E1  29E9               	goto	l2126
  8598  11E2                     u2430:
  8599  11E2                     l2124:
  8600  11E2  0822               	movf	___ftpack@arg+2,w
  8601  11E3  0421               	iorwf	___ftpack@arg+1,w
  8602  11E4  0420               	iorwf	___ftpack@arg,w
  8603  11E5  1D03               	skipz
  8604  11E6  29E8               	goto	u2441
  8605  11E7  29E9               	goto	u2440
  8606  11E8                     u2441:
  8607  11E8  29FC               	goto	l2132
  8608  11E9                     u2440:
  8609  11E9                     l2126:
  8610  11E9  3000               	movlw	0
  8611  11EA  00A0               	movwf	?___ftpack
  8612  11EB  3000               	movlw	0
  8613  11EC  00A1               	movwf	?___ftpack+1
  8614  11ED  3000               	movlw	0
  8615  11EE  00A2               	movwf	?___ftpack+2
  8616  11EF  2A58               	goto	l635
  8617  11F0                     l2130:
  8618  11F0  3001               	movlw	1
  8619  11F1  00A5               	movwf	??___ftpack
  8620  11F2  0825               	movf	??___ftpack,w
  8621  11F3  07A3               	addwf	___ftpack@exp,f
  8622  11F4  3001               	movlw	1
  8623  11F5                     u2455:
  8624  11F5  1003               	clrc
  8625  11F6  0CA2               	rrf	___ftpack@arg+2,f
  8626  11F7  0CA1               	rrf	___ftpack@arg+1,f
  8627  11F8  0CA0               	rrf	___ftpack@arg,f
  8628  11F9  3EFF               	addlw	-1
  8629  11FA  1D03               	skipz
  8630  11FB  29F5               	goto	u2455
  8631  11FC                     l2132:
  8632  11FC  30FE               	movlw	254
  8633  11FD  0522               	andwf	___ftpack@arg+2,w
  8634  11FE  1D03               	btfss	3,2
  8635  11FF  2A01               	goto	u2461
  8636  1200  2A02               	goto	u2460
  8637  1201                     u2461:
  8638  1201  29F0               	goto	l2130
  8639  1202                     u2460:
  8640  1202  2A19               	goto	l639
  8641  1203                     l2134:
  8642  1203  3001               	movlw	1
  8643  1204  00A5               	movwf	??___ftpack
  8644  1205  0825               	movf	??___ftpack,w
  8645  1206  07A3               	addwf	___ftpack@exp,f
  8646  1207                     l2136:
  8647  1207  3001               	movlw	1
  8648  1208  07A0               	addwf	___ftpack@arg,f
  8649  1209  3000               	movlw	0
  8650  120A  1803               	skipnc
  8651  120B  3001               	movlw	1
  8652  120C  07A1               	addwf	___ftpack@arg+1,f
  8653  120D  3000               	movlw	0
  8654  120E  1803               	skipnc
  8655  120F  3001               	movlw	1
  8656  1210  07A2               	addwf	___ftpack@arg+2,f
  8657  1211                     l2138:
  8658  1211  3001               	movlw	1
  8659  1212                     u2475:
  8660  1212  1003               	clrc
  8661  1213  0CA2               	rrf	___ftpack@arg+2,f
  8662  1214  0CA1               	rrf	___ftpack@arg+1,f
  8663  1215  0CA0               	rrf	___ftpack@arg,f
  8664  1216  3EFF               	addlw	-1
  8665  1217  1D03               	skipz
  8666  1218  2A12               	goto	u2475
  8667  1219                     l639:
  8668  1219  30FF               	movlw	255
  8669  121A  0522               	andwf	___ftpack@arg+2,w
  8670  121B  1D03               	btfss	3,2
  8671  121C  2A1E               	goto	u2481
  8672  121D  2A1F               	goto	u2480
  8673  121E                     u2481:
  8674  121E  2A03               	goto	l2134
  8675  121F                     u2480:
  8676  121F  2A2A               	goto	l2142
  8677  1220                     l2140:
  8678  1220  3001               	movlw	1
  8679  1221  02A3               	subwf	___ftpack@exp,f
  8680  1222  3001               	movlw	1
  8681  1223                     u2495:
  8682  1223  1003               	clrc
  8683  1224  0DA0               	rlf	___ftpack@arg,f
  8684  1225  0DA1               	rlf	___ftpack@arg+1,f
  8685  1226  0DA2               	rlf	___ftpack@arg+2,f
  8686  1227  3EFF               	addlw	-1
  8687  1228  1D03               	skipz
  8688  1229  2A23               	goto	u2495
  8689  122A                     l2142:
  8690  122A  1BA1               	btfsc	___ftpack@arg+1,7
  8691  122B  2A2D               	goto	u2501
  8692  122C  2A2E               	goto	u2500
  8693  122D                     u2501:
  8694  122D  2A34               	goto	l646
  8695  122E                     u2500:
  8696  122E                     l2144:
  8697  122E  3002               	movlw	2
  8698  122F  0223               	subwf	___ftpack@exp,w
  8699  1230  1803               	skipnc
  8700  1231  2A33               	goto	u2511
  8701  1232  2A34               	goto	u2510
  8702  1233                     u2511:
  8703  1233  2A20               	goto	l2140
  8704  1234                     u2510:
  8705  1234                     l646:
  8706  1234  1823               	btfsc	___ftpack@exp,0
  8707  1235  2A37               	goto	u2521
  8708  1236  2A38               	goto	u2520
  8709  1237                     u2521:
  8710  1237  2A3E               	goto	l647
  8711  1238                     u2520:
  8712  1238                     l2146:
  8713  1238  30FF               	movlw	255
  8714  1239  05A0               	andwf	___ftpack@arg,f
  8715  123A  307F               	movlw	127
  8716  123B  05A1               	andwf	___ftpack@arg+1,f
  8717  123C  30FF               	movlw	255
  8718  123D  05A2               	andwf	___ftpack@arg+2,f
  8719  123E                     l647:
  8720  123E  1003               	clrc
  8721  123F  0CA3               	rrf	___ftpack@exp,f
  8722  1240                     l2148:
  8723  1240  0823               	movf	___ftpack@exp,w
  8724  1241  00A5               	movwf	??___ftpack
  8725  1242  01A6               	clrf	??___ftpack+1
  8726  1243  01A7               	clrf	??___ftpack+2
  8727  1244  3010               	movlw	16
  8728  1245                     u2535:
  8729  1245  1003               	clrc
  8730  1246  0DA5               	rlf	??___ftpack,f
  8731  1247  0DA6               	rlf	??___ftpack+1,f
  8732  1248  0DA7               	rlf	??___ftpack+2,f
  8733  1249                     u2530:
  8734  1249  3EFF               	addlw	-1
  8735  124A  1D03               	skipz
  8736  124B  2A45               	goto	u2535
  8737  124C  0825               	movf	??___ftpack,w
  8738  124D  04A0               	iorwf	___ftpack@arg,f
  8739  124E  0826               	movf	??___ftpack+1,w
  8740  124F  04A1               	iorwf	___ftpack@arg+1,f
  8741  1250  0827               	movf	??___ftpack+2,w
  8742  1251  04A2               	iorwf	___ftpack@arg+2,f
  8743  1252                     l2150:
  8744  1252  0824               	movf	___ftpack@sign,w
  8745  1253  1903               	btfsc	3,2
  8746  1254  2A56               	goto	u2541
  8747  1255  2A57               	goto	u2540
  8748  1256                     u2541:
  8749  1256  2A58               	goto	l648
  8750  1257                     u2540:
  8751  1257                     l2152:
  8752  1257  17A2               	bsf	___ftpack@arg+2,7
  8753  1258                     l648:
  8754  1258                     l635:
  8755  1258  0008               	return
  8756  1259                     __end_of___ftpack:
  8757                           
  8758                           	psect	text36
  8759  1DFC                     __ptext36:	
  8760 ;; *************** function _I2C_Master_Init *****************
  8761 ;; Defined at:
  8762 ;;		line 16 in file "I2C.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;  c               4   14[BANK0 ] const unsigned long 
  8765 ;; Auto vars:     Size  Location     Type
  8766 ;;		None
  8767 ;; Return value:  Size  Location     Type
  8768 ;;                  1    wreg      void 
  8769 ;; Registers used:
  8770 ;;		wreg, status,2, status,0, pclath, cstack
  8771 ;; Tracked objects:
  8772 ;;		On entry : 0/0
  8773 ;;		On exit  : 0/0
  8774 ;;		Unchanged: 0/0
  8775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8776 ;;      Params:         0       4       0       0       0
  8777 ;;      Locals:         0       0       0       0       0
  8778 ;;      Temps:          0       4       0       0       0
  8779 ;;      Totals:         0       8       0       0       0
  8780 ;;Total ram usage:        8 bytes
  8781 ;; Hardware stack levels used:    1
  8782 ;; Hardware stack levels required when called:    3
  8783 ;; This function calls:
  8784 ;;		___lldiv
  8785 ;; This function is called by:
  8786 ;;		_main
  8787 ;;		_aht_begin
  8788 ;; This function uses a non-reentrant model
  8789 ;;
  8790                           
  8791                           
  8792                           ;psect for function _I2C_Master_Init
  8793  1DFC                     _I2C_Master_Init:
  8794  1DFC                     l3710:	
  8795                           ;incstack = 0
  8796                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  8797                           
  8798                           
  8799                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  8800  1DFC  3028               	movlw	40
  8801  1DFD  1283               	bcf	3,5	;RP0=0, select bank0
  8802  1DFE  1303               	bcf	3,6	;RP1=0, select bank0
  8803  1DFF  0094               	movwf	20	;volatile
  8804  1E00                     l3712:
  8805                           
  8806                           ;I2C.c: 19:     SSPCON2 = 0;
  8807  1E00  1683               	bsf	3,5	;RP0=1, select bank1
  8808  1E01  1303               	bcf	3,6	;RP1=0, select bank1
  8809  1E02  0191               	clrf	17	;volatile
  8810  1E03                     l3714:
  8811                           
  8812                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  8813  1E03  1283               	bcf	3,5	;RP0=0, select bank0
  8814  1E04  1303               	bcf	3,6	;RP1=0, select bank0
  8815  1E05  082E               	movf	I2C_Master_Init@c,w
  8816  1E06  00B2               	movwf	??_I2C_Master_Init
  8817  1E07  082F               	movf	I2C_Master_Init@c+1,w
  8818  1E08  00B3               	movwf	??_I2C_Master_Init+1
  8819  1E09  0830               	movf	I2C_Master_Init@c+2,w
  8820  1E0A  00B4               	movwf	??_I2C_Master_Init+2
  8821  1E0B  0831               	movf	I2C_Master_Init@c+3,w
  8822  1E0C  00B5               	movwf	??_I2C_Master_Init+3
  8823  1E0D  3002               	movlw	2
  8824  1E0E                     u5645:
  8825  1E0E  1003               	clrc
  8826  1E0F  0DB2               	rlf	??_I2C_Master_Init,f
  8827  1E10  0DB3               	rlf	??_I2C_Master_Init+1,f
  8828  1E11  0DB4               	rlf	??_I2C_Master_Init+2,f
  8829  1E12  0DB5               	rlf	??_I2C_Master_Init+3,f
  8830  1E13                     u5640:
  8831  1E13  3EFF               	addlw	-1
  8832  1E14  1D03               	skipz
  8833  1E15  2E0E               	goto	u5645
  8834  1E16  0835               	movf	??_I2C_Master_Init+3,w
  8835  1E17  00A3               	movwf	___lldiv@divisor+3
  8836  1E18  0834               	movf	??_I2C_Master_Init+2,w
  8837  1E19  00A2               	movwf	___lldiv@divisor+2
  8838  1E1A  0833               	movf	??_I2C_Master_Init+1,w
  8839  1E1B  00A1               	movwf	___lldiv@divisor+1
  8840  1E1C  0832               	movf	??_I2C_Master_Init,w
  8841  1E1D  00A0               	movwf	___lldiv@divisor
  8842  1E1E  3000               	movlw	0
  8843  1E1F  00A7               	movwf	___lldiv@dividend+3
  8844  1E20  303D               	movlw	61
  8845  1E21  00A6               	movwf	___lldiv@dividend+2
  8846  1E22  3009               	movlw	9
  8847  1E23  00A5               	movwf	___lldiv@dividend+1
  8848  1E24  3000               	movlw	0
  8849  1E25  00A4               	movwf	___lldiv@dividend
  8850  1E26  160A  118A  210A  160A  158A  	fcall	___lldiv
  8851  1E2B  1283               	bcf	3,5	;RP0=0, select bank0
  8852  1E2C  1303               	bcf	3,6	;RP1=0, select bank0
  8853  1E2D  0820               	movf	?___lldiv,w
  8854  1E2E  3EFF               	addlw	255
  8855  1E2F  1683               	bsf	3,5	;RP0=1, select bank1
  8856  1E30  1303               	bcf	3,6	;RP1=0, select bank1
  8857  1E31  0093               	movwf	19	;volatile
  8858  1E32                     l3716:
  8859                           
  8860                           ;I2C.c: 21:     SSPSTAT = 0;
  8861  1E32  0194               	clrf	20	;volatile
  8862  1E33                     l3718:
  8863                           
  8864                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  8865  1E33  1587               	bsf	7,3	;volatile
  8866  1E34                     l3720:
  8867                           
  8868                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  8869  1E34  1607               	bsf	7,4	;volatile
  8870  1E35                     l96:
  8871  1E35  0008               	return
  8872  1E36                     __end_of_I2C_Master_Init:
  8873                           
  8874                           	psect	text37
  8875  110A                     __ptext37:	
  8876 ;; *************** function ___lldiv *****************
  8877 ;; Defined at:
  8878 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\__lldiv.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;  divisor         4    0[BANK0 ] unsigned long 
  8881 ;;  dividend        4    4[BANK0 ] unsigned long 
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;  quotient        4    9[BANK0 ] unsigned long 
  8884 ;;  counter         1   13[BANK0 ] unsigned char 
  8885 ;; Return value:  Size  Location     Type
  8886 ;;                  4    0[BANK0 ] unsigned long 
  8887 ;; Registers used:
  8888 ;;		wreg, status,2, status,0
  8889 ;; Tracked objects:
  8890 ;;		On entry : 0/0
  8891 ;;		On exit  : 0/0
  8892 ;;		Unchanged: 0/0
  8893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8894 ;;      Params:         0       8       0       0       0
  8895 ;;      Locals:         0       5       0       0       0
  8896 ;;      Temps:          0       1       0       0       0
  8897 ;;      Totals:         0      14       0       0       0
  8898 ;;Total ram usage:       14 bytes
  8899 ;; Hardware stack levels used:    1
  8900 ;; Hardware stack levels required when called:    2
  8901 ;; This function calls:
  8902 ;;		Nothing
  8903 ;; This function is called by:
  8904 ;;		_I2C_Master_Init
  8905 ;;		_sprintf
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           
  8910                           ;psect for function ___lldiv
  8911  110A                     ___lldiv:
  8912  110A                     l3558:	
  8913                           ;incstack = 0
  8914                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8915                           
  8916  110A  3000               	movlw	0
  8917  110B  1283               	bcf	3,5	;RP0=0, select bank0
  8918  110C  1303               	bcf	3,6	;RP1=0, select bank0
  8919  110D  00AC               	movwf	___lldiv@quotient+3
  8920  110E  3000               	movlw	0
  8921  110F  00AB               	movwf	___lldiv@quotient+2
  8922  1110  3000               	movlw	0
  8923  1111  00AA               	movwf	___lldiv@quotient+1
  8924  1112  3000               	movlw	0
  8925  1113  00A9               	movwf	___lldiv@quotient
  8926  1114  0823               	movf	___lldiv@divisor+3,w
  8927  1115  0422               	iorwf	___lldiv@divisor+2,w
  8928  1116  0421               	iorwf	___lldiv@divisor+1,w
  8929  1117  0420               	iorwf	___lldiv@divisor,w
  8930  1118  1903               	skipnz
  8931  1119  291B               	goto	u5301
  8932  111A  291C               	goto	u5300
  8933  111B                     u5301:
  8934  111B  2969               	goto	l3578
  8935  111C                     u5300:
  8936  111C                     l3560:
  8937  111C  01AD               	clrf	___lldiv@counter
  8938  111D  0AAD               	incf	___lldiv@counter,f
  8939  111E  292C               	goto	l3564
  8940  111F                     l3562:
  8941  111F  3001               	movlw	1
  8942  1120  00A8               	movwf	??___lldiv
  8943  1121                     u5315:
  8944  1121  1003               	clrc
  8945  1122  0DA0               	rlf	___lldiv@divisor,f
  8946  1123  0DA1               	rlf	___lldiv@divisor+1,f
  8947  1124  0DA2               	rlf	___lldiv@divisor+2,f
  8948  1125  0DA3               	rlf	___lldiv@divisor+3,f
  8949  1126  0BA8               	decfsz	??___lldiv,f
  8950  1127  2921               	goto	u5315
  8951  1128  3001               	movlw	1
  8952  1129  00A8               	movwf	??___lldiv
  8953  112A  0828               	movf	??___lldiv,w
  8954  112B  07AD               	addwf	___lldiv@counter,f
  8955  112C                     l3564:
  8956  112C  1FA3               	btfss	___lldiv@divisor+3,7
  8957  112D  292F               	goto	u5321
  8958  112E  2930               	goto	u5320
  8959  112F                     u5321:
  8960  112F  291F               	goto	l3562
  8961  1130                     u5320:
  8962  1130                     l3566:
  8963  1130  3001               	movlw	1
  8964  1131  00A8               	movwf	??___lldiv
  8965  1132                     u5335:
  8966  1132  1003               	clrc
  8967  1133  0DA9               	rlf	___lldiv@quotient,f
  8968  1134  0DAA               	rlf	___lldiv@quotient+1,f
  8969  1135  0DAB               	rlf	___lldiv@quotient+2,f
  8970  1136  0DAC               	rlf	___lldiv@quotient+3,f
  8971  1137  0BA8               	decfsz	??___lldiv,f
  8972  1138  2932               	goto	u5335
  8973  1139                     l3568:
  8974  1139  0823               	movf	___lldiv@divisor+3,w
  8975  113A  0227               	subwf	___lldiv@dividend+3,w
  8976  113B  1D03               	skipz
  8977  113C  2947               	goto	u5345
  8978  113D  0822               	movf	___lldiv@divisor+2,w
  8979  113E  0226               	subwf	___lldiv@dividend+2,w
  8980  113F  1D03               	skipz
  8981  1140  2947               	goto	u5345
  8982  1141  0821               	movf	___lldiv@divisor+1,w
  8983  1142  0225               	subwf	___lldiv@dividend+1,w
  8984  1143  1D03               	skipz
  8985  1144  2947               	goto	u5345
  8986  1145  0820               	movf	___lldiv@divisor,w
  8987  1146  0224               	subwf	___lldiv@dividend,w
  8988  1147                     u5345:
  8989  1147  1C03               	skipc
  8990  1148  294A               	goto	u5341
  8991  1149  294B               	goto	u5340
  8992  114A                     u5341:
  8993  114A  295A               	goto	l3574
  8994  114B                     u5340:
  8995  114B                     l3570:
  8996  114B  0820               	movf	___lldiv@divisor,w
  8997  114C  02A4               	subwf	___lldiv@dividend,f
  8998  114D  0821               	movf	___lldiv@divisor+1,w
  8999  114E  1C03               	skipc
  9000  114F  0F21               	incfsz	___lldiv@divisor+1,w
  9001  1150  02A5               	subwf	___lldiv@dividend+1,f
  9002  1151  0822               	movf	___lldiv@divisor+2,w
  9003  1152  1C03               	skipc
  9004  1153  0F22               	incfsz	___lldiv@divisor+2,w
  9005  1154  02A6               	subwf	___lldiv@dividend+2,f
  9006  1155  0823               	movf	___lldiv@divisor+3,w
  9007  1156  1C03               	skipc
  9008  1157  0F23               	incfsz	___lldiv@divisor+3,w
  9009  1158  02A7               	subwf	___lldiv@dividend+3,f
  9010  1159                     l3572:
  9011  1159  1429               	bsf	___lldiv@quotient,0
  9012  115A                     l3574:
  9013  115A  3001               	movlw	1
  9014  115B                     u5355:
  9015  115B  1003               	clrc
  9016  115C  0CA3               	rrf	___lldiv@divisor+3,f
  9017  115D  0CA2               	rrf	___lldiv@divisor+2,f
  9018  115E  0CA1               	rrf	___lldiv@divisor+1,f
  9019  115F  0CA0               	rrf	___lldiv@divisor,f
  9020  1160  3EFF               	addlw	-1
  9021  1161  1D03               	skipz
  9022  1162  295B               	goto	u5355
  9023  1163                     l3576:
  9024  1163  3001               	movlw	1
  9025  1164  02AD               	subwf	___lldiv@counter,f
  9026  1165  1D03               	btfss	3,2
  9027  1166  2968               	goto	u5361
  9028  1167  2969               	goto	u5360
  9029  1168                     u5361:
  9030  1168  2930               	goto	l3566
  9031  1169                     u5360:
  9032  1169                     l3578:
  9033  1169  082C               	movf	___lldiv@quotient+3,w
  9034  116A  00A3               	movwf	?___lldiv+3
  9035  116B  082B               	movf	___lldiv@quotient+2,w
  9036  116C  00A2               	movwf	?___lldiv+2
  9037  116D  082A               	movf	___lldiv@quotient+1,w
  9038  116E  00A1               	movwf	?___lldiv+1
  9039  116F  0829               	movf	___lldiv@quotient,w
  9040  1170  00A0               	movwf	?___lldiv
  9041  1171                     l446:
  9042  1171  0008               	return
  9043  1172                     __end_of___lldiv:
  9044                           
  9045                           	psect	text38
  9046  1CF5                     __ptext38:	
  9047 ;; *************** function _ISR *****************
  9048 ;; Defined at:
  9049 ;;		line 57 in file "pic16f.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;		None
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;		None
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  1    wreg      void 
  9056 ;; Registers used:
  9057 ;;		wreg, pclath, cstack
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9063 ;;      Params:         0       0       0       0       0
  9064 ;;      Locals:         0       0       0       0       0
  9065 ;;      Temps:          3       0       0       0       0
  9066 ;;      Totals:         3       0       0       0       0
  9067 ;;Total ram usage:        3 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; Hardware stack levels required when called:    1
  9070 ;; This function calls:
  9071 ;;		_uartRC_Read
  9072 ;; This function is called by:
  9073 ;;		Interrupt level 1
  9074 ;; This function uses a non-reentrant model
  9075 ;;
  9076                           
  9077                           
  9078                           ;psect for function _ISR
  9079  1CF5                     _ISR:
  9080  1CF5                     i1l2006:
  9081                           
  9082                           ;pic16f.c: 58:     if (RCIF==1){
  9083  1CF5  1283               	bcf	3,5	;RP0=0, select bank0
  9084  1CF6  1303               	bcf	3,6	;RP1=0, select bank0
  9085  1CF7  1E8C               	btfss	12,5	;volatile
  9086  1CF8  2CFA               	goto	u240_21
  9087  1CF9  2CFB               	goto	u240_20
  9088  1CFA                     u240_21:
  9089  1CFA  2D04               	goto	i1l59
  9090  1CFB                     u240_20:
  9091  1CFB                     i1l2008:
  9092                           
  9093                           ;pic16f.c: 59:         RCIF=0;
  9094  1CFB  128C               	bcf	12,5	;volatile
  9095  1CFC                     i1l2010:
  9096                           
  9097                           ;pic16f.c: 60:         LecturaUSART=uartRC_Read();
  9098  1CFC  160A  158A  248F  160A  158A  	fcall	_uartRC_Read
  9099  1D01  00F3               	movwf	??_ISR
  9100  1D02  0873               	movf	??_ISR,w
  9101  1D03  00F8               	movwf	_LecturaUSART
  9102  1D04                     i1l59:
  9103  1D04  0875               	movf	??_ISR+2,w
  9104  1D05  008A               	movwf	10
  9105  1D06  0E74               	swapf	??_ISR+1,w
  9106  1D07  0083               	movwf	3
  9107  1D08  0EFE               	swapf	btemp,f
  9108  1D09  0E7E               	swapf	btemp,w
  9109  1D0A  0009               	retfie
  9110  1D0B                     __end_of_ISR:
  9111                           
  9112                           	psect	intentry
  9113  0004                     __pintentry:	
  9114                           ;incstack = 0
  9115                           ; Regs used in _ISR: [wreg+pclath+cstack]
  9116                           
  9117  0004                     interrupt_function:
  9118  007E                     saved_w	set	btemp
  9119  0004  00FE               	movwf	btemp
  9120  0005  0E03               	swapf	3,w
  9121  0006  00F4               	movwf	??_ISR+1
  9122  0007  080A               	movf	10,w
  9123  0008  00F5               	movwf	??_ISR+2
  9124  0009  160A  158A  2CF5   	ljmp	_ISR
  9125                           
  9126                           	psect	text39
  9127  1C8F                     __ptext39:	
  9128 ;; *************** function _uartRC_Read *****************
  9129 ;; Defined at:
  9130 ;;		line 31 in file "USART.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;		None
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;  lectura         1    0        unsigned char 
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      unsigned char 
  9137 ;; Registers used:
  9138 ;;		wreg
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9144 ;;      Params:         0       0       0       0       0
  9145 ;;      Locals:         1       0       0       0       0
  9146 ;;      Temps:          2       0       0       0       0
  9147 ;;      Totals:         3       0       0       0       0
  9148 ;;Total ram usage:        3 bytes
  9149 ;; Hardware stack levels used:    1
  9150 ;; This function calls:
  9151 ;;		Nothing
  9152 ;; This function is called by:
  9153 ;;		_ISR
  9154 ;; This function uses a non-reentrant model
  9155 ;;
  9156                           
  9157                           
  9158                           ;psect for function _uartRC_Read
  9159  1C8F                     _uartRC_Read:
  9160  1C8F                     i1l1684:	
  9161                           ;incstack = 0
  9162                           ; Regs used in _uartRC_Read: [wreg]
  9163                           
  9164                           
  9165                           ;USART.c: 32:     _delay((unsigned long)((5)*(4000000/4000.0)));
  9166  1C8F  3007               	movlw	7
  9167  1C90  00F1               	movwf	??_uartRC_Read+1
  9168  1C91  307D               	movlw	125
  9169  1C92  00F0               	movwf	??_uartRC_Read
  9170  1C93                     u618_27:
  9171  1C93  0BF0               	decfsz	??_uartRC_Read,f
  9172  1C94  2C93               	goto	u618_27
  9173  1C95  0BF1               	decfsz	??_uartRC_Read+1,f
  9174  1C96  2C93               	goto	u618_27
  9175  1C97  1283               	bcf	3,5	;RP0=0, select bank0
  9176  1C98  1303               	bcf	3,6	;RP1=0, select bank0
  9177  1C99  081A               	movf	26,w	;volatile
  9178  1C9A                     i1l202:
  9179  1C9A  0008               	return
  9180  1C9B                     __end_of_uartRC_Read:
  9181  007E                     btemp	set	126	;btemp
  9182  007E                     wtemp0	set	126
  9183                           
  9184                           	psect	config
  9185                           
  9186                           ;Config register CONFIG1 @ 0x2007
  9187                           ;	Oscillator Selection bits
  9188                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  9189                           ;	Watchdog Timer Enable bit
  9190                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9191                           ;	Power-up Timer Enable bit
  9192                           ;	PWRTE = OFF, PWRT disabled
  9193                           ;	RE3/MCLR pin function select bit
  9194                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9195                           ;	Code Protection bit
  9196                           ;	CP = OFF, Program memory code protection is disabled
  9197                           ;	Data Code Protection bit
  9198                           ;	CPD = OFF, Data memory code protection is disabled
  9199                           ;	Brown Out Reset Selection bits
  9200                           ;	BOREN = OFF, BOR disabled
  9201                           ;	Internal External Switchover bit
  9202                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9203                           ;	Fail-Safe Clock Monitor Enabled bit
  9204                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9205                           ;	Low Voltage Programming Enable bit
  9206                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9207                           ;	In-Circuit Debugger Mode bit
  9208                           ;	DEBUG = 0x1, unprogrammed default
  9209  2007                     	org	8199
  9210  2007  20D4               	dw	8404
  9211                           
  9212                           ;Config register CONFIG2 @ 0x2008
  9213                           ;	Brown-out Reset Selection bit
  9214                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9215                           ;	Flash Program Memory Self Write Enable bits
  9216                           ;	WRT = OFF, Write protection off
  9217  2008                     	org	8200
  9218  2008  3FFF               	dw	16383
  9219                           
  9220                           	psect	text5_split_1
  9221  0044                     u5810:
  9222  0044                     l3844:
  9223  0044  1683               	bsf	3,5	;RP0=1, select bank1
  9224  0045  1303               	bcf	3,6	;RP1=0, select bank1
  9225  0046  083B               	movf	(sprintf@fval+2)^(0+128),w
  9226  0047  043A               	iorwf	(sprintf@fval+1)^(0+128),w
  9227  0048  0439               	iorwf	sprintf@fval^(0+128),w
  9228  0049  1903               	skipnz
  9229  004A  284C               	goto	u5821
  9230  004B  284D               	goto	u5820
  9231  004C                     u5821:
  9232  004C  290B               	goto	l3864
  9233  004D                     u5820:
  9234  004D                     l3846:
  9235  004D  0839               	movf	sprintf@fval^(0+128),w
  9236  004E  1283               	bcf	3,5	;RP0=0, select bank0
  9237  004F  1303               	bcf	3,6	;RP1=0, select bank0
  9238  0050  00CD               	movwf	___fttol@f1
  9239  0051  1683               	bsf	3,5	;RP0=1, select bank1
  9240  0052  1303               	bcf	3,6	;RP1=0, select bank1
  9241  0053  083A               	movf	(sprintf@fval+1)^(0+128),w
  9242  0054  1283               	bcf	3,5	;RP0=0, select bank0
  9243  0055  1303               	bcf	3,6	;RP1=0, select bank0
  9244  0056  00CE               	movwf	___fttol@f1+1
  9245  0057  1683               	bsf	3,5	;RP0=1, select bank1
  9246  0058  1303               	bcf	3,6	;RP1=0, select bank1
  9247  0059  083B               	movf	(sprintf@fval+2)^(0+128),w
  9248  005A  1283               	bcf	3,5	;RP0=0, select bank0
  9249  005B  1303               	bcf	3,6	;RP1=0, select bank0
  9250  005C  00CF               	movwf	___fttol@f1+2
  9251  005D  160A  118A  2259  120A  118A  	fcall	___fttol
  9252  0062  1283               	bcf	3,5	;RP0=0, select bank0
  9253  0063  1303               	bcf	3,6	;RP1=0, select bank0
  9254  0064  0850               	movf	?___fttol+3,w
  9255  0065  044F               	iorwf	?___fttol+2,w
  9256  0066  044E               	iorwf	?___fttol+1,w
  9257  0067  044D               	iorwf	?___fttol,w
  9258  0068  1D03               	skipz
  9259  0069  286B               	goto	u5831
  9260  006A  286C               	goto	u5830
  9261  006B                     u5831:
  9262  006B  290B               	goto	l3864
  9263  006C                     u5830:
  9264  006C                     l3848:
  9265  006C  1683               	bsf	3,5	;RP0=1, select bank1
  9266  006D  1303               	bcf	3,6	;RP1=0, select bank1
  9267  006E  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9268  006F  3A80               	xorlw	128
  9269  0070  00FF               	movwf	btemp+1
  9270  0071  3080               	movlw	128
  9271  0072  027F               	subwf	btemp+1,w
  9272  0073  1D03               	skipz
  9273  0074  2877               	goto	u5845
  9274  0075  3002               	movlw	2
  9275  0076  0236               	subwf	sprintf@eexp^(0+128),w
  9276  0077                     u5845:
  9277  0077  1C03               	skipc
  9278  0078  287A               	goto	u5841
  9279  0079  287B               	goto	u5840
  9280  007A                     u5841:
  9281  007A  290B               	goto	l3864
  9282  007B                     u5840:
  9283  007B                     l3850:
  9284                           
  9285                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1146:      if(tmpval.integ < 4.2
      +                          94967296){
  9286  007B  1683               	bsf	3,5	;RP0=1, select bank1
  9287  007C  1303               	bcf	3,6	;RP1=0, select bank1
  9288  007D  0832               	movf	sprintf@tmpval^(0+128),w
  9289  007E  1283               	bcf	3,5	;RP0=0, select bank0
  9290  007F  1303               	bcf	3,6	;RP1=0, select bank0
  9291  0080  00A0               	movwf	___ftge@ff1
  9292  0081  1683               	bsf	3,5	;RP0=1, select bank1
  9293  0082  1303               	bcf	3,6	;RP1=0, select bank1
  9294  0083  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  9295  0084  1283               	bcf	3,5	;RP0=0, select bank0
  9296  0085  1303               	bcf	3,6	;RP1=0, select bank0
  9297  0086  00A1               	movwf	___ftge@ff1+1
  9298  0087  1683               	bsf	3,5	;RP0=1, select bank1
  9299  0088  1303               	bcf	3,6	;RP1=0, select bank1
  9300  0089  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  9301  008A  1283               	bcf	3,5	;RP0=0, select bank0
  9302  008B  1303               	bcf	3,6	;RP1=0, select bank0
  9303  008C  00A2               	movwf	___ftge@ff1+2
  9304  008D  3070               	movlw	112
  9305  008E  00A3               	movwf	___ftge@ff2
  9306  008F  3089               	movlw	137
  9307  0090  00A4               	movwf	___ftge@ff2+1
  9308  0091  3040               	movlw	64
  9309  0092  00A5               	movwf	___ftge@ff2+2
  9310  0093  160A  158A  2636  120A  118A  	fcall	___ftge
  9311  0098  1803               	btfsc	3,0
  9312  0099  289B               	goto	u5851
  9313  009A  289C               	goto	u5850
  9314  009B                     u5851:
  9315  009B  28A5               	goto	l3854
  9316  009C                     u5850:
  9317  009C                     l3852:
  9318                           
  9319                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1147:       eexp -= (sizeof dpow
      +                          ers/sizeof dpowers[0])-1;
  9320  009C  30F7               	movlw	247
  9321  009D  1683               	bsf	3,5	;RP0=1, select bank1
  9322  009E  1303               	bcf	3,6	;RP1=0, select bank1
  9323  009F  07B6               	addwf	sprintf@eexp^(0+128),f
  9324  00A0  1803               	skipnc
  9325  00A1  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9326  00A2  30FF               	movlw	255
  9327  00A3  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9328                           
  9329                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9330  00A4  28AD               	goto	l3856
  9331  00A5                     l3854:
  9332                           
  9333                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1149:       eexp -= (sizeof dpow
      +                          ers/sizeof dpowers[0])-2;
  9334  00A5  30F8               	movlw	248
  9335  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  9336  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  9337  00A8  07B6               	addwf	sprintf@eexp^(0+128),f
  9338  00A9  1803               	skipnc
  9339  00AA  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9340  00AB  30FF               	movlw	255
  9341  00AC  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9342  00AD                     l3856:
  9343                           
  9344                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1151:      tmpval.integ = scale(
      +                          eexp);
  9345  00AD  0836               	movf	sprintf@eexp^(0+128),w
  9346  00AE  120A  158A  222B  120A  118A  	fcall	_scale
  9347  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  9348  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  9349  00B5  0844               	movf	?_scale,w
  9350  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  9351  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  9352  00B8  00B2               	movwf	sprintf@tmpval^(0+128)
  9353  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  9354  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  9355  00BB  0845               	movf	?_scale+1,w
  9356  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  9357  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  9358  00BE  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  9359  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  9360  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  9361  00C1  0846               	movf	?_scale+2,w
  9362  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  9363  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  9364  00C4  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  9365  00C5                     l3860:	
  9366                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1152:      val = ((sizeof(double
      +                          )== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9367                           
  9368  00C5  0839               	movf	sprintf@fval^(0+128),w
  9369  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  9370  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  9371  00C8  00A0               	movwf	__tdiv_to_l_@f1
  9372  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  9373  00CA  1303               	bcf	3,6	;RP1=0, select bank1
  9374  00CB  083A               	movf	(sprintf@fval+1)^(0+128),w
  9375  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  9376  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  9377  00CE  00A1               	movwf	__tdiv_to_l_@f1+1
  9378  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  9379  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  9380  00D1  083B               	movf	(sprintf@fval+2)^(0+128),w
  9381  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  9382  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  9383  00D4  00A2               	movwf	__tdiv_to_l_@f1+2
  9384  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  9385  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  9386  00D7  0832               	movf	sprintf@tmpval^(0+128),w
  9387  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  9388  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  9389  00DA  00A3               	movwf	__tdiv_to_l_@f2
  9390  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  9391  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  9392  00DD  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  9393  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  9394  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  9395  00E0  00A4               	movwf	__tdiv_to_l_@f2+1
  9396  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  9397  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  9398  00E3  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  9399  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  9400  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  9401  00E6  00A5               	movwf	__tdiv_to_l_@f2+2
  9402  00E7  160A  118A  2382  120A  118A  	fcall	__tdiv_to_l_
  9403  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  9404  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  9405  00EE  0823               	movf	?__tdiv_to_l_+3,w
  9406  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  9407  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  9408  00F1  00AD               	movwf	(sprintf@val+3)^(0+128)
  9409  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  9410  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  9411  00F4  0822               	movf	?__tdiv_to_l_+2,w
  9412  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  9413  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  9414  00F7  00AC               	movwf	(sprintf@val+2)^(0+128)
  9415  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  9416  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  9417  00FA  0821               	movf	?__tdiv_to_l_+1,w
  9418  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  9419  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  9420  00FD  00AB               	movwf	(sprintf@val+1)^(0+128)
  9421  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  9422  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  9423  0100  0820               	movf	?__tdiv_to_l_,w
  9424  0101  1683               	bsf	3,5	;RP0=1, select bank1
  9425  0102  1303               	bcf	3,6	;RP1=0, select bank1
  9426  0103  00AA               	movwf	sprintf@val^(0+128)
  9427  0104                     l3862:
  9428                           
  9429                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1155:      fval = 0.0;
  9430  0104  3000               	movlw	0
  9431  0105  00B9               	movwf	sprintf@fval^(0+128)
  9432  0106  3000               	movlw	0
  9433  0107  00BA               	movwf	(sprintf@fval+1)^(0+128)
  9434  0108  3000               	movlw	0
  9435  0109  00BB               	movwf	(sprintf@fval+2)^(0+128)
  9436                           
  9437                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1156:     } else {
  9438  010A  2988               	goto	l3868
  9439  010B                     l3864:
  9440                           
  9441                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1157:      val = (unsigned long)
      +                          fval;
  9442  010B  1683               	bsf	3,5	;RP0=1, select bank1
  9443  010C  1303               	bcf	3,6	;RP1=0, select bank1
  9444  010D  0839               	movf	sprintf@fval^(0+128),w
  9445  010E  1283               	bcf	3,5	;RP0=0, select bank0
  9446  010F  1303               	bcf	3,6	;RP1=0, select bank0
  9447  0110  00CD               	movwf	___fttol@f1
  9448  0111  1683               	bsf	3,5	;RP0=1, select bank1
  9449  0112  1303               	bcf	3,6	;RP1=0, select bank1
  9450  0113  083A               	movf	(sprintf@fval+1)^(0+128),w
  9451  0114  1283               	bcf	3,5	;RP0=0, select bank0
  9452  0115  1303               	bcf	3,6	;RP1=0, select bank0
  9453  0116  00CE               	movwf	___fttol@f1+1
  9454  0117  1683               	bsf	3,5	;RP0=1, select bank1
  9455  0118  1303               	bcf	3,6	;RP1=0, select bank1
  9456  0119  083B               	movf	(sprintf@fval+2)^(0+128),w
  9457  011A  1283               	bcf	3,5	;RP0=0, select bank0
  9458  011B  1303               	bcf	3,6	;RP1=0, select bank0
  9459  011C  00CF               	movwf	___fttol@f1+2
  9460  011D  160A  118A  2259  120A  118A  	fcall	___fttol
  9461  0122  1283               	bcf	3,5	;RP0=0, select bank0
  9462  0123  1303               	bcf	3,6	;RP1=0, select bank0
  9463  0124  0850               	movf	?___fttol+3,w
  9464  0125  1683               	bsf	3,5	;RP0=1, select bank1
  9465  0126  1303               	bcf	3,6	;RP1=0, select bank1
  9466  0127  00AD               	movwf	(sprintf@val+3)^(0+128)
  9467  0128  1283               	bcf	3,5	;RP0=0, select bank0
  9468  0129  1303               	bcf	3,6	;RP1=0, select bank0
  9469  012A  084F               	movf	?___fttol+2,w
  9470  012B  1683               	bsf	3,5	;RP0=1, select bank1
  9471  012C  1303               	bcf	3,6	;RP1=0, select bank1
  9472  012D  00AC               	movwf	(sprintf@val+2)^(0+128)
  9473  012E  1283               	bcf	3,5	;RP0=0, select bank0
  9474  012F  1303               	bcf	3,6	;RP1=0, select bank0
  9475  0130  084E               	movf	?___fttol+1,w
  9476  0131  1683               	bsf	3,5	;RP0=1, select bank1
  9477  0132  1303               	bcf	3,6	;RP1=0, select bank1
  9478  0133  00AB               	movwf	(sprintf@val+1)^(0+128)
  9479  0134  1283               	bcf	3,5	;RP0=0, select bank0
  9480  0135  1303               	bcf	3,6	;RP1=0, select bank0
  9481  0136  084D               	movf	?___fttol,w
  9482  0137  1683               	bsf	3,5	;RP0=1, select bank1
  9483  0138  1303               	bcf	3,6	;RP1=0, select bank1
  9484  0139  00AA               	movwf	sprintf@val^(0+128)
  9485                           
  9486                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1158:      fval -= (double)val;
  9487  013A  082D               	movf	(sprintf@val+3)^(0+128),w
  9488  013B  1283               	bcf	3,5	;RP0=0, select bank0
  9489  013C  1303               	bcf	3,6	;RP1=0, select bank0
  9490  013D  00D6               	movwf	___lltoft@c+3
  9491  013E  1683               	bsf	3,5	;RP0=1, select bank1
  9492  013F  1303               	bcf	3,6	;RP1=0, select bank1
  9493  0140  082C               	movf	(sprintf@val+2)^(0+128),w
  9494  0141  1283               	bcf	3,5	;RP0=0, select bank0
  9495  0142  1303               	bcf	3,6	;RP1=0, select bank0
  9496  0143  00D5               	movwf	___lltoft@c+2
  9497  0144  1683               	bsf	3,5	;RP0=1, select bank1
  9498  0145  1303               	bcf	3,6	;RP1=0, select bank1
  9499  0146  082B               	movf	(sprintf@val+1)^(0+128),w
  9500  0147  1283               	bcf	3,5	;RP0=0, select bank0
  9501  0148  1303               	bcf	3,6	;RP1=0, select bank0
  9502  0149  00D4               	movwf	___lltoft@c+1
  9503  014A  1683               	bsf	3,5	;RP0=1, select bank1
  9504  014B  1303               	bcf	3,6	;RP1=0, select bank1
  9505  014C  082A               	movf	sprintf@val^(0+128),w
  9506  014D  1283               	bcf	3,5	;RP0=0, select bank0
  9507  014E  1303               	bcf	3,6	;RP1=0, select bank0
  9508  014F  00D3               	movwf	___lltoft@c
  9509  0150  160A  158A  25C9  120A  118A  	fcall	___lltoft
  9510  0155  1283               	bcf	3,5	;RP0=0, select bank0
  9511  0156  1303               	bcf	3,6	;RP1=0, select bank0
  9512  0157  0853               	movf	?___lltoft,w
  9513  0158  00E1               	movwf	___ftsub@f2
  9514  0159  0854               	movf	?___lltoft+1,w
  9515  015A  00E2               	movwf	___ftsub@f2+1
  9516  015B  0855               	movf	?___lltoft+2,w
  9517  015C  00E3               	movwf	___ftsub@f2+2
  9518  015D  1683               	bsf	3,5	;RP0=1, select bank1
  9519  015E  1303               	bcf	3,6	;RP1=0, select bank1
  9520  015F  0839               	movf	sprintf@fval^(0+128),w
  9521  0160  1283               	bcf	3,5	;RP0=0, select bank0
  9522  0161  1303               	bcf	3,6	;RP1=0, select bank0
  9523  0162  00E4               	movwf	___ftsub@f1
  9524  0163  1683               	bsf	3,5	;RP0=1, select bank1
  9525  0164  1303               	bcf	3,6	;RP1=0, select bank1
  9526  0165  083A               	movf	(sprintf@fval+1)^(0+128),w
  9527  0166  1283               	bcf	3,5	;RP0=0, select bank0
  9528  0167  1303               	bcf	3,6	;RP1=0, select bank0
  9529  0168  00E5               	movwf	___ftsub@f1+1
  9530  0169  1683               	bsf	3,5	;RP0=1, select bank1
  9531  016A  1303               	bcf	3,6	;RP1=0, select bank1
  9532  016B  083B               	movf	(sprintf@fval+2)^(0+128),w
  9533  016C  1283               	bcf	3,5	;RP0=0, select bank0
  9534  016D  1303               	bcf	3,6	;RP1=0, select bank0
  9535  016E  00E6               	movwf	___ftsub@f1+2
  9536  016F  160A  158A  2522  120A  118A  	fcall	___ftsub
  9537  0174  1283               	bcf	3,5	;RP0=0, select bank0
  9538  0175  1303               	bcf	3,6	;RP1=0, select bank0
  9539  0176  0861               	movf	?___ftsub,w
  9540  0177  1683               	bsf	3,5	;RP0=1, select bank1
  9541  0178  1303               	bcf	3,6	;RP1=0, select bank1
  9542  0179  00B9               	movwf	sprintf@fval^(0+128)
  9543  017A  1283               	bcf	3,5	;RP0=0, select bank0
  9544  017B  1303               	bcf	3,6	;RP1=0, select bank0
  9545  017C  0862               	movf	?___ftsub+1,w
  9546  017D  1683               	bsf	3,5	;RP0=1, select bank1
  9547  017E  1303               	bcf	3,6	;RP1=0, select bank1
  9548  017F  00BA               	movwf	(sprintf@fval+1)^(0+128)
  9549  0180  1283               	bcf	3,5	;RP0=0, select bank0
  9550  0181  1303               	bcf	3,6	;RP1=0, select bank0
  9551  0182  0863               	movf	?___ftsub+2,w
  9552  0183  1683               	bsf	3,5	;RP0=1, select bank1
  9553  0184  1303               	bcf	3,6	;RP1=0, select bank1
  9554  0185  00BB               	movwf	(sprintf@fval+2)^(0+128)
  9555  0186                     l3866:
  9556                           
  9557                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1159:      eexp = 0;
  9558  0186  01B6               	clrf	sprintf@eexp^(0+128)
  9559  0187  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  9560  0188                     l3868:
  9561                           
  9562                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1162:     for(c = 1 ; c != (size
      +                          of dpowers/sizeof dpowers[0]) ; c++)
  9563  0188  01BE               	clrf	sprintf@c^(0+128)
  9564  0189  0ABE               	incf	sprintf@c^(0+128),f
  9565  018A                     l3874:
  9566                           
  9567                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1163:      if(val < dpowers[c])
  9568  018A  083E               	movf	sprintf@c^(0+128),w
  9569  018B  00A0               	movwf	??_sprintf^(0+128)
  9570  018C  3001               	movlw	1
  9571  018D                     u5865:
  9572  018D  1003               	clrc
  9573  018E  0DA0               	rlf	??_sprintf^(0+128),f
  9574  018F  3EFF               	addlw	-1
  9575  0190  1D03               	skipz
  9576  0191  298D               	goto	u5865
  9577  0192  1003               	clrc
  9578  0193  0D20               	rlf	??_sprintf^(0+128),w
  9579  0194  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9580  0195  0084               	movwf	4
  9581  0196  160A  118A  2000  120A  118A  	fcall	stringdir
  9582  019B  00A1               	movwf	(??_sprintf+1)^(0+128)
  9583  019C  160A  118A  2000  120A  118A  	fcall	stringdir
  9584  01A1  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  9585  01A2  160A  118A  2000  120A  118A  	fcall	stringdir
  9586  01A7  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
  9587  01A8  160A  118A  2000  120A  118A  	fcall	stringdir
  9588  01AD  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
  9589  01AE  0824               	movf	(??_sprintf+4)^(0+128),w
  9590  01AF  022D               	subwf	(sprintf@val+3)^(0+128),w
  9591  01B0  1D03               	skipz
  9592  01B1  29BC               	goto	u5875
  9593  01B2  0823               	movf	(??_sprintf+3)^(0+128),w
  9594  01B3  022C               	subwf	(sprintf@val+2)^(0+128),w
  9595  01B4  1D03               	skipz
  9596  01B5  29BC               	goto	u5875
  9597  01B6  0822               	movf	(??_sprintf+2)^(0+128),w
  9598  01B7  022B               	subwf	(sprintf@val+1)^(0+128),w
  9599  01B8  1D03               	skipz
  9600  01B9  29BC               	goto	u5875
  9601  01BA  0821               	movf	(??_sprintf+1)^(0+128),w
  9602  01BB  022A               	subwf	sprintf@val^(0+128),w
  9603  01BC                     u5875:
  9604  01BC  1803               	skipnc
  9605  01BD  29BF               	goto	u5871
  9606  01BE  29C0               	goto	u5870
  9607  01BF                     u5871:
  9608  01BF  29C1               	goto	l3878
  9609  01C0                     u5870:
  9610  01C0  29CB               	goto	l3880
  9611  01C1                     l3878:
  9612  01C1  3001               	movlw	1
  9613  01C2  00A0               	movwf	??_sprintf^(0+128)
  9614  01C3  0820               	movf	??_sprintf^(0+128),w
  9615  01C4  07BE               	addwf	sprintf@c^(0+128),f
  9616  01C5  300A               	movlw	10
  9617  01C6  063E               	xorwf	sprintf@c^(0+128),w
  9618  01C7  1D03               	btfss	3,2
  9619  01C8  29CA               	goto	u5881
  9620  01C9  29CB               	goto	u5880
  9621  01CA                     u5881:
  9622  01CA  298A               	goto	l3874
  9623  01CB                     u5880:
  9624  01CB                     l3880:
  9625                           
  9626                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1168:     width -= prec + c + ee
      +                          xp;
  9627  01CB  083E               	movf	sprintf@c^(0+128),w
  9628  01CC  073C               	addwf	sprintf@prec^(0+128),w
  9629  01CD  00A0               	movwf	??_sprintf^(0+128)
  9630  01CE  083D               	movf	(sprintf@prec+1)^(0+128),w
  9631  01CF  1803               	skipnc
  9632  01D0  0A3D               	incf	(sprintf@prec+1)^(0+128),w
  9633  01D1  00A1               	movwf	(??_sprintf^(0+128)+1)
  9634  01D2  0836               	movf	sprintf@eexp^(0+128),w
  9635  01D3  0720               	addwf	??_sprintf^(0+128),w
  9636  01D4  00A2               	movwf	(??_sprintf+2)^(0+128)
  9637  01D5  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9638  01D6  1803               	skipnc
  9639  01D7  0A37               	incf	(sprintf@eexp+1)^(0+128),w
  9640  01D8  0721               	addwf	(??_sprintf+1)^(0+128),w
  9641  01D9  00A3               	movwf	(??_sprintf+3)^(0+128)
  9642  01DA  0822               	movf	(??_sprintf+2)^(0+128),w
  9643  01DB  02B0               	subwf	sprintf@width^(0+128),f
  9644  01DC  0823               	movf	(??_sprintf+3)^(0+128),w
  9645  01DD  1C03               	skipc
  9646  01DE  03B1               	decf	(sprintf@width+1)^(0+128),f
  9647  01DF  02B1               	subwf	(sprintf@width+1)^(0+128),f
  9648                           
  9649                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1169:     if(
  9650  01E0  083C               	movf	sprintf@prec^(0+128),w
  9651  01E1  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  9652  01E2  1903               	btfsc	3,2
  9653  01E3  29E5               	goto	u5891
  9654  01E4  29E6               	goto	u5890
  9655  01E5                     u5891:
  9656  01E5  29EC               	goto	l3884
  9657  01E6                     u5890:
  9658  01E6                     l3882:
  9659                           
  9660                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1174:      width--;
  9661  01E6  30FF               	movlw	255
  9662  01E7  07B0               	addwf	sprintf@width^(0+128),f
  9663  01E8  1803               	skipnc
  9664  01E9  0AB1               	incf	(sprintf@width+1)^(0+128),f
  9665  01EA  30FF               	movlw	255
  9666  01EB  07B1               	addwf	(sprintf@width+1)^(0+128),f
  9667  01EC                     l3884:
  9668                           
  9669                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1175:     if(flag & 0x03)
  9670  01EC  3003               	movlw	3
  9671  01ED  052E               	andwf	sprintf@flag^(0+128),w
  9672  01EE  00A0               	movwf	??_sprintf^(0+128)
  9673  01EF  3000               	movlw	0
  9674  01F0  052F               	andwf	(sprintf@flag+1)^(0+128),w
  9675  01F1  00A1               	movwf	(??_sprintf+1)^(0+128)
  9676  01F2  0820               	movf	??_sprintf^(0+128),w
  9677  01F3  0421               	iorwf	(??_sprintf^(0+128)+1),w
  9678  01F4  1903               	btfsc	3,2
  9679  01F5  29F7               	goto	u5901
  9680  01F6  29F8               	goto	u5900
  9681  01F7                     u5901:
  9682  01F7  2A0D               	goto	l3894
  9683  01F8                     u5900:
  9684  01F8                     l3886:
  9685                           
  9686                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1176:      width--;
  9687  01F8  30FF               	movlw	255
  9688  01F9  07B0               	addwf	sprintf@width^(0+128),f
  9689  01FA  1803               	skipnc
  9690  01FB  0AB1               	incf	(sprintf@width+1)^(0+128),f
  9691  01FC  30FF               	movlw	255
  9692  01FD  07B1               	addwf	(sprintf@width+1)^(0+128),f
  9693  01FE  2A0D               	goto	l3894
  9694  01FF                     l3888:
  9695                           
  9696                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1207:       ((*sp++ = (' ')));
  9697  01FF  3020               	movlw	32
  9698  0200  1683               	bsf	3,5	;RP0=1, select bank1
  9699  0201  1303               	bcf	3,6	;RP1=0, select bank1
  9700  0202  00A0               	movwf	??_sprintf^(0+128)
  9701  0203  0838               	movf	sprintf@sp^(0+128),w
  9702  0204  0084               	movwf	4
  9703  0205  0820               	movf	??_sprintf^(0+128),w
  9704  0206  1383               	bcf	3,7	;select IRP bank0
  9705  0207  0080               	movwf	0
  9706  0208                     l3890:
  9707  0208  3001               	movlw	1
  9708  0209  00A0               	movwf	??_sprintf^(0+128)
  9709  020A  0820               	movf	??_sprintf^(0+128),w
  9710  020B  07B8               	addwf	sprintf@sp^(0+128),f
  9711  020C  29F8               	goto	l3886
  9712  020D                     l3894:
  9713                           
  9714                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1206:      while(width > 0) {
  9715  020D  0831               	movf	(sprintf@width+1)^(0+128),w
  9716  020E  3A80               	xorlw	128
  9717  020F  00FF               	movwf	btemp+1
  9718  0210  3080               	movlw	128
  9719  0211  027F               	subwf	btemp+1,w
  9720  0212  1D03               	skipz
  9721  0213  2A16               	goto	u5915
  9722  0214  3001               	movlw	1
  9723  0215  0230               	subwf	sprintf@width^(0+128),w
  9724  0216                     u5915:
  9725  0216  1803               	skipnc
  9726  0217  2A19               	goto	u5911
  9727  0218  2A1A               	goto	u5910
  9728  0219                     u5911:
  9729  0219  29FF               	goto	l3888
  9730  021A                     u5910:
  9731  021A                     l3896:
  9732                           
  9733                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x03)
  9734  021A  3003               	movlw	3
  9735  021B  1683               	bsf	3,5	;RP0=1, select bank1
  9736  021C  1303               	bcf	3,6	;RP1=0, select bank1
  9737  021D  052E               	andwf	sprintf@flag^(0+128),w
  9738  021E  00A0               	movwf	??_sprintf^(0+128)
  9739  021F  3000               	movlw	0
  9740  0220  052F               	andwf	(sprintf@flag+1)^(0+128),w
  9741  0221  00A1               	movwf	(??_sprintf+1)^(0+128)
  9742  0222  0820               	movf	??_sprintf^(0+128),w
  9743  0223  0421               	iorwf	(??_sprintf^(0+128)+1),w
  9744  0224  1903               	btfsc	3,2
  9745  0225  2A27               	goto	u5921
  9746  0226  2A28               	goto	u5920
  9747  0227                     u5921:
  9748  0227  2ADA               	goto	l376
  9749  0228                     u5920:
  9750  0228                     l3898:
  9751                           
  9752                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1216:      ((*sp++ = ('-')));
  9753  0228  302D               	movlw	45
  9754  0229  00A0               	movwf	??_sprintf^(0+128)
  9755  022A  0838               	movf	sprintf@sp^(0+128),w
  9756  022B  0084               	movwf	4
  9757  022C  0820               	movf	??_sprintf^(0+128),w
  9758  022D  1383               	bcf	3,7	;select IRP bank0
  9759  022E  0080               	movwf	0
  9760  022F                     l3900:
  9761  022F  3001               	movlw	1
  9762  0230  00A0               	movwf	??_sprintf^(0+128)
  9763  0231  0820               	movf	??_sprintf^(0+128),w
  9764  0232  07B8               	addwf	sprintf@sp^(0+128),f
  9765  0233  2ADA               	goto	l376
  9766  0234                     l3902:
  9767                           
  9768                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1226:     {;D:\MPLAB XC8 compile
      +                          r\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = val/dpowers[c];
  9769  0234  083E               	movf	sprintf@c^(0+128),w
  9770  0235  00A0               	movwf	??_sprintf^(0+128)
  9771  0236  3001               	movlw	1
  9772  0237                     u5935:
  9773  0237  1003               	clrc
  9774  0238  0DA0               	rlf	??_sprintf^(0+128),f
  9775  0239  3EFF               	addlw	-1
  9776  023A  1D03               	skipz
  9777  023B  2A37               	goto	u5935
  9778  023C  1003               	clrc
  9779  023D  0D20               	rlf	??_sprintf^(0+128),w
  9780  023E  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9781  023F  0084               	movwf	4
  9782  0240  160A  118A  2000  120A  118A  	fcall	stringdir
  9783  0245  1283               	bcf	3,5	;RP0=0, select bank0
  9784  0246  1303               	bcf	3,6	;RP1=0, select bank0
  9785  0247  00A0               	movwf	___lldiv@divisor
  9786  0248  160A  118A  2000  120A  118A  	fcall	stringdir
  9787  024D  00A1               	movwf	___lldiv@divisor+1
  9788  024E  160A  118A  2000  120A  118A  	fcall	stringdir
  9789  0253  00A2               	movwf	___lldiv@divisor+2
  9790  0254  160A  118A  2000  120A  118A  	fcall	stringdir
  9791  0259  00A3               	movwf	___lldiv@divisor+3
  9792  025A  1683               	bsf	3,5	;RP0=1, select bank1
  9793  025B  1303               	bcf	3,6	;RP1=0, select bank1
  9794  025C  082D               	movf	(sprintf@val+3)^(0+128),w
  9795  025D  1283               	bcf	3,5	;RP0=0, select bank0
  9796  025E  1303               	bcf	3,6	;RP1=0, select bank0
  9797  025F  00A7               	movwf	___lldiv@dividend+3
  9798  0260  1683               	bsf	3,5	;RP0=1, select bank1
  9799  0261  1303               	bcf	3,6	;RP1=0, select bank1
  9800  0262  082C               	movf	(sprintf@val+2)^(0+128),w
  9801  0263  1283               	bcf	3,5	;RP0=0, select bank0
  9802  0264  1303               	bcf	3,6	;RP1=0, select bank0
  9803  0265  00A6               	movwf	___lldiv@dividend+2
  9804  0266  1683               	bsf	3,5	;RP0=1, select bank1
  9805  0267  1303               	bcf	3,6	;RP1=0, select bank1
  9806  0268  082B               	movf	(sprintf@val+1)^(0+128),w
  9807  0269  1283               	bcf	3,5	;RP0=0, select bank0
  9808  026A  1303               	bcf	3,6	;RP1=0, select bank0
  9809  026B  00A5               	movwf	___lldiv@dividend+1
  9810  026C  1683               	bsf	3,5	;RP0=1, select bank1
  9811  026D  1303               	bcf	3,6	;RP1=0, select bank1
  9812  026E  082A               	movf	sprintf@val^(0+128),w
  9813  026F  1283               	bcf	3,5	;RP0=0, select bank0
  9814  0270  1303               	bcf	3,6	;RP1=0, select bank0
  9815  0271  00A4               	movwf	___lldiv@dividend
  9816  0272  160A  118A  210A  120A  118A  	fcall	___lldiv
  9817  0277  1283               	bcf	3,5	;RP0=0, select bank0
  9818  0278  1303               	bcf	3,6	;RP1=0, select bank0
  9819  0279  0823               	movf	?___lldiv+3,w
  9820  027A  1683               	bsf	3,5	;RP0=1, select bank1
  9821  027B  1303               	bcf	3,6	;RP1=0, select bank1
  9822  027C  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  9823  027D  1283               	bcf	3,5	;RP0=0, select bank0
  9824  027E  1303               	bcf	3,6	;RP1=0, select bank0
  9825  027F  0822               	movf	?___lldiv+2,w
  9826  0280  1683               	bsf	3,5	;RP0=1, select bank1
  9827  0281  1303               	bcf	3,6	;RP1=0, select bank1
  9828  0282  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  9829  0283  1283               	bcf	3,5	;RP0=0, select bank0
  9830  0284  1303               	bcf	3,6	;RP1=0, select bank0
  9831  0285  0821               	movf	?___lldiv+1,w
  9832  0286  1683               	bsf	3,5	;RP0=1, select bank1
  9833  0287  1303               	bcf	3,6	;RP1=0, select bank1
  9834  0288  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  9835  0289  1283               	bcf	3,5	;RP0=0, select bank0
  9836  028A  1303               	bcf	3,6	;RP1=0, select bank0
  9837  028B  0820               	movf	?___lldiv,w
  9838  028C  1683               	bsf	3,5	;RP0=1, select bank1
  9839  028D  1303               	bcf	3,6	;RP1=0, select bank1
  9840  028E  00B2               	movwf	sprintf@tmpval^(0+128)
  9841  028F                     l3904:
  9842                           
  9843                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1228:      tmpval.vd %= 10;
  9844  028F  3000               	movlw	0
  9845  0290  1283               	bcf	3,5	;RP0=0, select bank0
  9846  0291  1303               	bcf	3,6	;RP1=0, select bank0
  9847  0292  00A3               	movwf	___llmod@divisor+3
  9848  0293  3000               	movlw	0
  9849  0294  00A2               	movwf	___llmod@divisor+2
  9850  0295  3000               	movlw	0
  9851  0296  00A1               	movwf	___llmod@divisor+1
  9852  0297  300A               	movlw	10
  9853  0298  00A0               	movwf	___llmod@divisor
  9854  0299  1683               	bsf	3,5	;RP0=1, select bank1
  9855  029A  1303               	bcf	3,6	;RP1=0, select bank1
  9856  029B  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  9857  029C  1283               	bcf	3,5	;RP0=0, select bank0
  9858  029D  1303               	bcf	3,6	;RP1=0, select bank0
  9859  029E  00A7               	movwf	___llmod@dividend+3
  9860  029F  1683               	bsf	3,5	;RP0=1, select bank1
  9861  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  9862  02A1  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  9863  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  9864  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  9865  02A4  00A6               	movwf	___llmod@dividend+2
  9866  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  9867  02A6  1303               	bcf	3,6	;RP1=0, select bank1
  9868  02A7  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  9869  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  9870  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  9871  02AA  00A5               	movwf	___llmod@dividend+1
  9872  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  9873  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  9874  02AD  0832               	movf	sprintf@tmpval^(0+128),w
  9875  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  9876  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  9877  02B0  00A4               	movwf	___llmod@dividend
  9878  02B1  160A  158A  26F2  120A  118A  	fcall	___llmod
  9879  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  9880  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  9881  02B8  0823               	movf	?___llmod+3,w
  9882  02B9  1683               	bsf	3,5	;RP0=1, select bank1
  9883  02BA  1303               	bcf	3,6	;RP1=0, select bank1
  9884  02BB  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  9885  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  9886  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  9887  02BE  0822               	movf	?___llmod+2,w
  9888  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  9889  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  9890  02C1  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  9891  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  9892  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  9893  02C4  0821               	movf	?___llmod+1,w
  9894  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  9895  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  9896  02C7  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  9897  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  9898  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  9899  02CA  0820               	movf	?___llmod,w
  9900  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  9901  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  9902  02CD  00B2               	movwf	sprintf@tmpval^(0+128)
  9903  02CE                     l3906:
  9904                           
  9905                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1229:      ((*sp++ = ('0' + tmpv
      +                          al.vd)));
  9906  02CE  0832               	movf	sprintf@tmpval^(0+128),w
  9907  02CF  3E30               	addlw	48
  9908  02D0  00A0               	movwf	??_sprintf^(0+128)
  9909  02D1  0838               	movf	sprintf@sp^(0+128),w
  9910  02D2  0084               	movwf	4
  9911  02D3  0820               	movf	??_sprintf^(0+128),w
  9912  02D4  1383               	bcf	3,7	;select IRP bank0
  9913  02D5  0080               	movwf	0
  9914  02D6  3001               	movlw	1
  9915  02D7  00A0               	movwf	??_sprintf^(0+128)
  9916  02D8  0820               	movf	??_sprintf^(0+128),w
  9917  02D9  07B8               	addwf	sprintf@sp^(0+128),f
  9918  02DA                     l376:	
  9919                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1230:     };D:\MPLAB XC8 compile
      +                          r\pic\sources\c90\common\doprnt.c: 1232:    }
  9920                           
  9921                           
  9922                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1222:    while(c--) {
  9923  02DA  3001               	movlw	1
  9924  02DB  02BE               	subwf	sprintf@c^(0+128),f
  9925  02DC  0A3E               	incf	sprintf@c^(0+128),w
  9926  02DD  1D03               	btfss	3,2
  9927  02DE  2AE0               	goto	u5941
  9928  02DF  2AE1               	goto	u5940
  9929  02E0                     u5941:
  9930  02E0  2A34               	goto	l3902
  9931  02E1                     u5940:
  9932  02E1  2AF5               	goto	l3914
  9933  02E2                     l3908:
  9934                           
  9935                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++ = ('0')));
  9936  02E2  3030               	movlw	48
  9937  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  9938  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  9939  02E5  00A0               	movwf	??_sprintf^(0+128)
  9940  02E6  0838               	movf	sprintf@sp^(0+128),w
  9941  02E7  0084               	movwf	4
  9942  02E8  0820               	movf	??_sprintf^(0+128),w
  9943  02E9  1383               	bcf	3,7	;select IRP bank0
  9944  02EA  0080               	movwf	0
  9945  02EB                     l3910:
  9946  02EB  3001               	movlw	1
  9947  02EC  00A0               	movwf	??_sprintf^(0+128)
  9948  02ED  0820               	movf	??_sprintf^(0+128),w
  9949  02EE  07B8               	addwf	sprintf@sp^(0+128),f
  9950  02EF                     l3912:
  9951                           
  9952                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9953  02EF  30FF               	movlw	255
  9954  02F0  07B6               	addwf	sprintf@eexp^(0+128),f
  9955  02F1  1803               	skipnc
  9956  02F2  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9957  02F3  30FF               	movlw	255
  9958  02F4  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9959  02F5                     l3914:
  9960                           
  9961                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1233:    while(eexp > 0) {
  9962  02F5  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9963  02F6  3A80               	xorlw	128
  9964  02F7  00FF               	movwf	btemp+1
  9965  02F8  3080               	movlw	128
  9966  02F9  027F               	subwf	btemp+1,w
  9967  02FA  1D03               	skipz
  9968  02FB  2AFE               	goto	u5955
  9969  02FC  3001               	movlw	1
  9970  02FD  0236               	subwf	sprintf@eexp^(0+128),w
  9971  02FE                     u5955:
  9972  02FE  1803               	skipnc
  9973  02FF  2B01               	goto	u5951
  9974  0300  2B02               	goto	u5950
  9975  0301                     u5951:
  9976  0301  2AE2               	goto	l3908
  9977  0302                     u5950:
  9978  0302                     l3916:
  9979                           
  9980                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1237:    if(prec > (int)((sizeof
      +                           dpowers/sizeof dpowers[0])-2))
  9981  0302  1683               	bsf	3,5	;RP0=1, select bank1
  9982  0303  1303               	bcf	3,6	;RP1=0, select bank1
  9983  0304  083D               	movf	(sprintf@prec+1)^(0+128),w
  9984  0305  3A80               	xorlw	128
  9985  0306  00FF               	movwf	btemp+1
  9986  0307  3080               	movlw	128
  9987  0308  027F               	subwf	btemp+1,w
  9988  0309  1D03               	skipz
  9989  030A  2B0D               	goto	u5965
  9990  030B  3009               	movlw	9
  9991  030C  023C               	subwf	sprintf@prec^(0+128),w
  9992  030D                     u5965:
  9993  030D  1C03               	skipc
  9994  030E  2B10               	goto	u5961
  9995  030F  2B11               	goto	u5960
  9996  0310                     u5961:
  9997  0310  2B18               	goto	l3920
  9998  0311                     u5960:
  9999  0311                     l3918:
 10000                           
 10001                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1238:     c = (sizeof dpowers/si
      +                          zeof dpowers[0])-2;
 10002  0311  3008               	movlw	8
 10003  0312  1683               	bsf	3,5	;RP0=1, select bank1
 10004  0313  1303               	bcf	3,6	;RP1=0, select bank1
 10005  0314  00A0               	movwf	??_sprintf^(0+128)
 10006  0315  0820               	movf	??_sprintf^(0+128),w
 10007  0316  00BE               	movwf	sprintf@c^(0+128)
 10008  0317  2B1E               	goto	l383
 10009  0318                     l3920:
 10010                           
 10011                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1240:     c = (char)prec;
 10012  0318  1683               	bsf	3,5	;RP0=1, select bank1
 10013  0319  1303               	bcf	3,6	;RP1=0, select bank1
 10014  031A  083C               	movf	sprintf@prec^(0+128),w
 10015  031B  00A0               	movwf	??_sprintf^(0+128)
 10016  031C  0820               	movf	??_sprintf^(0+128),w
 10017  031D  00BE               	movwf	sprintf@c^(0+128)
 10018  031E                     l383:
 10019                           
 10020                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1241:    prec -= (int)c;
 10021  031E  083E               	movf	sprintf@c^(0+128),w
 10022  031F  00A0               	movwf	??_sprintf^(0+128)
 10023  0320  01A1               	clrf	(??_sprintf^(0+128)+1)
 10024  0321  0820               	movf	??_sprintf^(0+128),w
 10025  0322  02BC               	subwf	sprintf@prec^(0+128),f
 10026  0323  0821               	movf	(??_sprintf+1)^(0+128),w
 10027  0324  1C03               	skipc
 10028  0325  03BD               	decf	(sprintf@prec+1)^(0+128),f
 10029  0326  02BD               	subwf	(sprintf@prec+1)^(0+128),f
 10030  0327                     l3922:
 10031                           
 10032                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10033  0327  083E               	movf	sprintf@c^(0+128),w
 10034  0328  1903               	btfsc	3,2
 10035  0329  2B2B               	goto	u5971
 10036  032A  2B2C               	goto	u5970
 10037  032B                     u5971:
 10038  032B  2B37               	goto	l3928
 10039  032C                     u5970:
 10040  032C                     l3924:
 10041                           
 10042                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++ = ('.')));
 10043  032C  302E               	movlw	46
 10044  032D  00A0               	movwf	??_sprintf^(0+128)
 10045  032E  0838               	movf	sprintf@sp^(0+128),w
 10046  032F  0084               	movwf	4
 10047  0330  0820               	movf	??_sprintf^(0+128),w
 10048  0331  1383               	bcf	3,7	;select IRP bank0
 10049  0332  0080               	movwf	0
 10050  0333                     l3926:
 10051  0333  3001               	movlw	1
 10052  0334  00A0               	movwf	??_sprintf^(0+128)
 10053  0335  0820               	movf	??_sprintf^(0+128),w
 10054  0336  07B8               	addwf	sprintf@sp^(0+128),f
 10055  0337                     l3928:
 10056                           
 10057                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(f
      +                          val * scale((signed char)c));
 10058  0337  083E               	movf	sprintf@c^(0+128),w
 10059  0338  120A  158A  222B  120A  118A  	fcall	_scale
 10060  033D  1283               	bcf	3,5	;RP0=0, select bank0
 10061  033E  1303               	bcf	3,6	;RP1=0, select bank0
 10062  033F  0844               	movf	?_scale,w
 10063  0340  1683               	bsf	3,5	;RP0=1, select bank1
 10064  0341  1303               	bcf	3,6	;RP1=0, select bank1
 10065  0342  00A6               	movwf	_sprintf$1052^(0+128)
 10066  0343  1283               	bcf	3,5	;RP0=0, select bank0
 10067  0344  1303               	bcf	3,6	;RP1=0, select bank0
 10068  0345  0845               	movf	?_scale+1,w
 10069  0346  1683               	bsf	3,5	;RP0=1, select bank1
 10070  0347  1303               	bcf	3,6	;RP1=0, select bank1
 10071  0348  00A7               	movwf	(_sprintf$1052+1)^(0+128)
 10072  0349  1283               	bcf	3,5	;RP0=0, select bank0
 10073  034A  1303               	bcf	3,6	;RP1=0, select bank0
 10074  034B  0846               	movf	?_scale+2,w
 10075  034C  1683               	bsf	3,5	;RP0=1, select bank1
 10076  034D  1303               	bcf	3,6	;RP1=0, select bank1
 10077  034E  00A8               	movwf	(_sprintf$1052+2)^(0+128)
 10078  034F                     l3930:
 10079                           
 10080                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(f
      +                          val * scale((signed char)c));
 10081  034F  0826               	movf	_sprintf$1052^(0+128),w
 10082  0350  1283               	bcf	3,5	;RP0=0, select bank0
 10083  0351  1303               	bcf	3,6	;RP1=0, select bank0
 10084  0352  00B7               	movwf	___ftmul@f2
 10085  0353  1683               	bsf	3,5	;RP0=1, select bank1
 10086  0354  1303               	bcf	3,6	;RP1=0, select bank1
 10087  0355  0827               	movf	(_sprintf$1052+1)^(0+128),w
 10088  0356  1283               	bcf	3,5	;RP0=0, select bank0
 10089  0357  1303               	bcf	3,6	;RP1=0, select bank0
 10090  0358  00B8               	movwf	___ftmul@f2+1
 10091  0359  1683               	bsf	3,5	;RP0=1, select bank1
 10092  035A  1303               	bcf	3,6	;RP1=0, select bank1
 10093  035B  0828               	movf	(_sprintf$1052+2)^(0+128),w
 10094  035C  1283               	bcf	3,5	;RP0=0, select bank0
 10095  035D  1303               	bcf	3,6	;RP1=0, select bank0
 10096  035E  00B9               	movwf	___ftmul@f2+2
 10097  035F  1683               	bsf	3,5	;RP0=1, select bank1
 10098  0360  1303               	bcf	3,6	;RP1=0, select bank1
 10099  0361  0839               	movf	sprintf@fval^(0+128),w
 10100  0362  1283               	bcf	3,5	;RP0=0, select bank0
 10101  0363  1303               	bcf	3,6	;RP1=0, select bank0
 10102  0364  00B4               	movwf	___ftmul@f1
 10103  0365  1683               	bsf	3,5	;RP0=1, select bank1
 10104  0366  1303               	bcf	3,6	;RP1=0, select bank1
 10105  0367  083A               	movf	(sprintf@fval+1)^(0+128),w
 10106  0368  1283               	bcf	3,5	;RP0=0, select bank0
 10107  0369  1303               	bcf	3,6	;RP1=0, select bank0
 10108  036A  00B5               	movwf	___ftmul@f1+1
 10109  036B  1683               	bsf	3,5	;RP0=1, select bank1
 10110  036C  1303               	bcf	3,6	;RP1=0, select bank1
 10111  036D  083B               	movf	(sprintf@fval+2)^(0+128),w
 10112  036E  1283               	bcf	3,5	;RP0=0, select bank0
 10113  036F  1303               	bcf	3,6	;RP1=0, select bank0
 10114  0370  00B6               	movwf	___ftmul@f1+2
 10115  0371  120A  158A  2010  120A  118A  	fcall	___ftmul
 10116  0376  1283               	bcf	3,5	;RP0=0, select bank0
 10117  0377  1303               	bcf	3,6	;RP1=0, select bank0
 10118  0378  0834               	movf	?___ftmul,w
 10119  0379  00CD               	movwf	___fttol@f1
 10120  037A  0835               	movf	?___ftmul+1,w
 10121  037B  00CE               	movwf	___fttol@f1+1
 10122  037C  0836               	movf	?___ftmul+2,w
 10123  037D  00CF               	movwf	___fttol@f1+2
 10124  037E  160A  118A  2259  120A  118A  	fcall	___fttol
 10125  0383  1283               	bcf	3,5	;RP0=0, select bank0
 10126  0384  1303               	bcf	3,6	;RP1=0, select bank0
 10127  0385  0850               	movf	?___fttol+3,w
 10128  0386  1683               	bsf	3,5	;RP0=1, select bank1
 10129  0387  1303               	bcf	3,6	;RP1=0, select bank1
 10130  0388  00AD               	movwf	(sprintf@val+3)^(0+128)
 10131  0389  1283               	bcf	3,5	;RP0=0, select bank0
 10132  038A  1303               	bcf	3,6	;RP1=0, select bank0
 10133  038B  084F               	movf	?___fttol+2,w
 10134  038C  1683               	bsf	3,5	;RP0=1, select bank1
 10135  038D  1303               	bcf	3,6	;RP1=0, select bank1
 10136  038E  00AC               	movwf	(sprintf@val+2)^(0+128)
 10137  038F  1283               	bcf	3,5	;RP0=0, select bank0
 10138  0390  1303               	bcf	3,6	;RP1=0, select bank0
 10139  0391  084E               	movf	?___fttol+1,w
 10140  0392  1683               	bsf	3,5	;RP0=1, select bank1
 10141  0393  1303               	bcf	3,6	;RP1=0, select bank1
 10142  0394  00AB               	movwf	(sprintf@val+1)^(0+128)
 10143  0395  1283               	bcf	3,5	;RP0=0, select bank0
 10144  0396  1303               	bcf	3,6	;RP1=0, select bank0
 10145  0397  084D               	movf	?___fttol,w
 10146  0398  1683               	bsf	3,5	;RP0=1, select bank1
 10147  0399  1303               	bcf	3,6	;RP1=0, select bank1
 10148  039A  00AA               	movwf	sprintf@val^(0+128)
 10149                           
 10150                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
 10151  039B  2C9D               	goto	l3940
 10152  039C                     l3932:
 10153                           
 10154                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1255:     tmpval.vd = val/dpower
      +                          s[c];
 10155  039C  083E               	movf	sprintf@c^(0+128),w
 10156  039D  00A0               	movwf	??_sprintf^(0+128)
 10157  039E  3001               	movlw	1
 10158  039F                     u5985:
 10159  039F  1003               	clrc
 10160  03A0  0DA0               	rlf	??_sprintf^(0+128),f
 10161  03A1  3EFF               	addlw	-1
 10162  03A2  1D03               	skipz
 10163  03A3  2B9F               	goto	u5985
 10164  03A4  1003               	clrc
 10165  03A5  0D20               	rlf	??_sprintf^(0+128),w
 10166  03A6  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10167  03A7  0084               	movwf	4
 10168  03A8  160A  118A  2000  120A  118A  	fcall	stringdir
 10169  03AD  1283               	bcf	3,5	;RP0=0, select bank0
 10170  03AE  1303               	bcf	3,6	;RP1=0, select bank0
 10171  03AF  00A0               	movwf	___lldiv@divisor
 10172  03B0  160A  118A  2000  120A  118A  	fcall	stringdir
 10173  03B5  00A1               	movwf	___lldiv@divisor+1
 10174  03B6  160A  118A  2000  120A  118A  	fcall	stringdir
 10175  03BB  00A2               	movwf	___lldiv@divisor+2
 10176  03BC  160A  118A  2000  120A  118A  	fcall	stringdir
 10177  03C1  00A3               	movwf	___lldiv@divisor+3
 10178  03C2  1683               	bsf	3,5	;RP0=1, select bank1
 10179  03C3  1303               	bcf	3,6	;RP1=0, select bank1
 10180  03C4  082D               	movf	(sprintf@val+3)^(0+128),w
 10181  03C5  1283               	bcf	3,5	;RP0=0, select bank0
 10182  03C6  1303               	bcf	3,6	;RP1=0, select bank0
 10183  03C7  00A7               	movwf	___lldiv@dividend+3
 10184  03C8  1683               	bsf	3,5	;RP0=1, select bank1
 10185  03C9  1303               	bcf	3,6	;RP1=0, select bank1
 10186  03CA  082C               	movf	(sprintf@val+2)^(0+128),w
 10187  03CB  1283               	bcf	3,5	;RP0=0, select bank0
 10188  03CC  1303               	bcf	3,6	;RP1=0, select bank0
 10189  03CD  00A6               	movwf	___lldiv@dividend+2
 10190  03CE  1683               	bsf	3,5	;RP0=1, select bank1
 10191  03CF  1303               	bcf	3,6	;RP1=0, select bank1
 10192  03D0  082B               	movf	(sprintf@val+1)^(0+128),w
 10193  03D1  1283               	bcf	3,5	;RP0=0, select bank0
 10194  03D2  1303               	bcf	3,6	;RP1=0, select bank0
 10195  03D3  00A5               	movwf	___lldiv@dividend+1
 10196  03D4  1683               	bsf	3,5	;RP0=1, select bank1
 10197  03D5  1303               	bcf	3,6	;RP1=0, select bank1
 10198  03D6  082A               	movf	sprintf@val^(0+128),w
 10199  03D7  1283               	bcf	3,5	;RP0=0, select bank0
 10200  03D8  1303               	bcf	3,6	;RP1=0, select bank0
 10201  03D9  00A4               	movwf	___lldiv@dividend
 10202  03DA  160A  118A  210A  120A  118A  	fcall	___lldiv
 10203  03DF  1283               	bcf	3,5	;RP0=0, select bank0
 10204  03E0  1303               	bcf	3,6	;RP1=0, select bank0
 10205  03E1  0823               	movf	?___lldiv+3,w
 10206  03E2  1683               	bsf	3,5	;RP0=1, select bank1
 10207  03E3  1303               	bcf	3,6	;RP1=0, select bank1
 10208  03E4  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
 10209  03E5  1283               	bcf	3,5	;RP0=0, select bank0
 10210  03E6  1303               	bcf	3,6	;RP1=0, select bank0
 10211  03E7  0822               	movf	?___lldiv+2,w
 10212  03E8  1683               	bsf	3,5	;RP0=1, select bank1
 10213  03E9  1303               	bcf	3,6	;RP1=0, select bank1
 10214  03EA  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
 10215  03EB  1283               	bcf	3,5	;RP0=0, select bank0
 10216  03EC  1303               	bcf	3,6	;RP1=0, select bank0
 10217  03ED  0821               	movf	?___lldiv+1,w
 10218  03EE  1683               	bsf	3,5	;RP0=1, select bank1
 10219  03EF  1303               	bcf	3,6	;RP1=0, select bank1
 10220  03F0  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
 10221  03F1  1283               	bcf	3,5	;RP0=0, select bank0
 10222  03F2  1303               	bcf	3,6	;RP1=0, select bank0
 10223  03F3  0820               	movf	?___lldiv,w
 10224  03F4  1683               	bsf	3,5	;RP0=1, select bank1
 10225  03F5  1303               	bcf	3,6	;RP1=0, select bank1
 10226  03F6  00B2               	movwf	sprintf@tmpval^(0+128)
 10227  03F7                     l3934:
 10228                           
 10229                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1256:     tmpval.vd %= 10;
 10230  03F7  3000               	movlw	0
 10231  03F8  1283               	bcf	3,5	;RP0=0, select bank0
 10232  03F9  1303               	bcf	3,6	;RP1=0, select bank0
 10233  03FA  00A3               	movwf	___llmod@divisor+3
 10234  03FB  3000               	movlw	0
 10235  03FC  00A2               	movwf	___llmod@divisor+2
 10236  03FD  3000               	movlw	0
 10237  03FE  00A1               	movwf	___llmod@divisor+1
 10238  03FF  300A               	movlw	10
 10239  0400  00A0               	movwf	___llmod@divisor
 10240  0401  1683               	bsf	3,5	;RP0=1, select bank1
 10241  0402  1303               	bcf	3,6	;RP1=0, select bank1
 10242  0403  0835               	movf	(sprintf@tmpval+3)^(0+128),w
 10243  0404  1283               	bcf	3,5	;RP0=0, select bank0
 10244  0405  1303               	bcf	3,6	;RP1=0, select bank0
 10245  0406  00A7               	movwf	___llmod@dividend+3
 10246  0407  1683               	bsf	3,5	;RP0=1, select bank1
 10247  0408  1303               	bcf	3,6	;RP1=0, select bank1
 10248  0409  0834               	movf	(sprintf@tmpval+2)^(0+128),w
 10249  040A  1283               	bcf	3,5	;RP0=0, select bank0
 10250  040B  1303               	bcf	3,6	;RP1=0, select bank0
 10251  040C  00A6               	movwf	___llmod@dividend+2
 10252  040D  1683               	bsf	3,5	;RP0=1, select bank1
 10253  040E  1303               	bcf	3,6	;RP1=0, select bank1
 10254  040F  0833               	movf	(sprintf@tmpval+1)^(0+128),w
 10255  0410  1283               	bcf	3,5	;RP0=0, select bank0
 10256  0411  1303               	bcf	3,6	;RP1=0, select bank0
 10257  0412  00A5               	movwf	___llmod@dividend+1
 10258  0413  1683               	bsf	3,5	;RP0=1, select bank1
 10259  0414  1303               	bcf	3,6	;RP1=0, select bank1
 10260  0415  0832               	movf	sprintf@tmpval^(0+128),w
 10261  0416  1283               	bcf	3,5	;RP0=0, select bank0
 10262  0417  1303               	bcf	3,6	;RP1=0, select bank0
 10263  0418  00A4               	movwf	___llmod@dividend
 10264  0419  160A  158A  26F2  120A  118A  	fcall	___llmod
 10265  041E  1283               	bcf	3,5	;RP0=0, select bank0
 10266  041F  1303               	bcf	3,6	;RP1=0, select bank0
 10267  0420  0823               	movf	?___llmod+3,w
 10268  0421  1683               	bsf	3,5	;RP0=1, select bank1
 10269  0422  1303               	bcf	3,6	;RP1=0, select bank1
 10270  0423  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
 10271  0424  1283               	bcf	3,5	;RP0=0, select bank0
 10272  0425  1303               	bcf	3,6	;RP1=0, select bank0
 10273  0426  0822               	movf	?___llmod+2,w
 10274  0427  1683               	bsf	3,5	;RP0=1, select bank1
 10275  0428  1303               	bcf	3,6	;RP1=0, select bank1
 10276  0429  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
 10277  042A  1283               	bcf	3,5	;RP0=0, select bank0
 10278  042B  1303               	bcf	3,6	;RP1=0, select bank0
 10279  042C  0821               	movf	?___llmod+1,w
 10280  042D  1683               	bsf	3,5	;RP0=1, select bank1
 10281  042E  1303               	bcf	3,6	;RP1=0, select bank1
 10282  042F  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
 10283  0430  1283               	bcf	3,5	;RP0=0, select bank0
 10284  0431  1303               	bcf	3,6	;RP1=0, select bank0
 10285  0432  0820               	movf	?___llmod,w
 10286  0433  1683               	bsf	3,5	;RP0=1, select bank1
 10287  0434  1303               	bcf	3,6	;RP1=0, select bank1
 10288  0435  00B2               	movwf	sprintf@tmpval^(0+128)
 10289  0436                     l3936:
 10290                           
 10291                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++ = ('0' + tmpva
      +                          l.vd)));
 10292  0436  0832               	movf	sprintf@tmpval^(0+128),w
 10293  0437  3E30               	addlw	48
 10294  0438  00A0               	movwf	??_sprintf^(0+128)
 10295  0439  0838               	movf	sprintf@sp^(0+128),w
 10296  043A  0084               	movwf	4
 10297  043B  0820               	movf	??_sprintf^(0+128),w
 10298  043C  1383               	bcf	3,7	;select IRP bank0
 10299  043D  0080               	movwf	0
 10300  043E  3001               	movlw	1
 10301  043F  00A0               	movwf	??_sprintf^(0+128)
 10302  0440  0820               	movf	??_sprintf^(0+128),w
 10303  0441  07B8               	addwf	sprintf@sp^(0+128),f
 10304  0442                     l3938:
 10305                           
 10306                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1258:     val %= dpowers[c];
 10307  0442  083E               	movf	sprintf@c^(0+128),w
 10308  0443  00A0               	movwf	??_sprintf^(0+128)
 10309  0444  3001               	movlw	1
 10310  0445                     u5995:
 10311  0445  1003               	clrc
 10312  0446  0DA0               	rlf	??_sprintf^(0+128),f
 10313  0447  3EFF               	addlw	-1
 10314  0448  1D03               	skipz
 10315  0449  2C45               	goto	u5995
 10316  044A  1003               	clrc
 10317  044B  0D20               	rlf	??_sprintf^(0+128),w
 10318  044C  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10319  044D  0084               	movwf	4
 10320  044E  160A  118A  2000  120A  118A  	fcall	stringdir
 10321  0453  1283               	bcf	3,5	;RP0=0, select bank0
 10322  0454  1303               	bcf	3,6	;RP1=0, select bank0
 10323  0455  00A0               	movwf	___llmod@divisor
 10324  0456  160A  118A  2000  120A  118A  	fcall	stringdir
 10325  045B  00A1               	movwf	___llmod@divisor+1
 10326  045C  160A  118A  2000  120A  118A  	fcall	stringdir
 10327  0461  00A2               	movwf	___llmod@divisor+2
 10328  0462  160A  118A  2000  120A  118A  	fcall	stringdir
 10329  0467  00A3               	movwf	___llmod@divisor+3
 10330  0468  1683               	bsf	3,5	;RP0=1, select bank1
 10331  0469  1303               	bcf	3,6	;RP1=0, select bank1
 10332  046A  082D               	movf	(sprintf@val+3)^(0+128),w
 10333  046B  1283               	bcf	3,5	;RP0=0, select bank0
 10334  046C  1303               	bcf	3,6	;RP1=0, select bank0
 10335  046D  00A7               	movwf	___llmod@dividend+3
 10336  046E  1683               	bsf	3,5	;RP0=1, select bank1
 10337  046F  1303               	bcf	3,6	;RP1=0, select bank1
 10338  0470  082C               	movf	(sprintf@val+2)^(0+128),w
 10339  0471  1283               	bcf	3,5	;RP0=0, select bank0
 10340  0472  1303               	bcf	3,6	;RP1=0, select bank0
 10341  0473  00A6               	movwf	___llmod@dividend+2
 10342  0474  1683               	bsf	3,5	;RP0=1, select bank1
 10343  0475  1303               	bcf	3,6	;RP1=0, select bank1
 10344  0476  082B               	movf	(sprintf@val+1)^(0+128),w
 10345  0477  1283               	bcf	3,5	;RP0=0, select bank0
 10346  0478  1303               	bcf	3,6	;RP1=0, select bank0
 10347  0479  00A5               	movwf	___llmod@dividend+1
 10348  047A  1683               	bsf	3,5	;RP0=1, select bank1
 10349  047B  1303               	bcf	3,6	;RP1=0, select bank1
 10350  047C  082A               	movf	sprintf@val^(0+128),w
 10351  047D  1283               	bcf	3,5	;RP0=0, select bank0
 10352  047E  1303               	bcf	3,6	;RP1=0, select bank0
 10353  047F  00A4               	movwf	___llmod@dividend
 10354  0480  160A  158A  26F2  120A  118A  	fcall	___llmod
 10355  0485  1283               	bcf	3,5	;RP0=0, select bank0
 10356  0486  1303               	bcf	3,6	;RP1=0, select bank0
 10357  0487  0823               	movf	?___llmod+3,w
 10358  0488  1683               	bsf	3,5	;RP0=1, select bank1
 10359  0489  1303               	bcf	3,6	;RP1=0, select bank1
 10360  048A  00AD               	movwf	(sprintf@val+3)^(0+128)
 10361  048B  1283               	bcf	3,5	;RP0=0, select bank0
 10362  048C  1303               	bcf	3,6	;RP1=0, select bank0
 10363  048D  0822               	movf	?___llmod+2,w
 10364  048E  1683               	bsf	3,5	;RP0=1, select bank1
 10365  048F  1303               	bcf	3,6	;RP1=0, select bank1
 10366  0490  00AC               	movwf	(sprintf@val+2)^(0+128)
 10367  0491  1283               	bcf	3,5	;RP0=0, select bank0
 10368  0492  1303               	bcf	3,6	;RP1=0, select bank0
 10369  0493  0821               	movf	?___llmod+1,w
 10370  0494  1683               	bsf	3,5	;RP0=1, select bank1
 10371  0495  1303               	bcf	3,6	;RP1=0, select bank1
 10372  0496  00AB               	movwf	(sprintf@val+1)^(0+128)
 10373  0497  1283               	bcf	3,5	;RP0=0, select bank0
 10374  0498  1303               	bcf	3,6	;RP1=0, select bank0
 10375  0499  0820               	movf	?___llmod,w
 10376  049A  1683               	bsf	3,5	;RP0=1, select bank1
 10377  049B  1303               	bcf	3,6	;RP1=0, select bank1
 10378  049C  00AA               	movwf	sprintf@val^(0+128)
 10379  049D                     l3940:
 10380                           
 10381                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
 10382  049D  3001               	movlw	1
 10383  049E  02BE               	subwf	sprintf@c^(0+128),f
 10384  049F  0A3E               	incf	sprintf@c^(0+128),w
 10385  04A0  1D03               	btfss	3,2
 10386  04A1  2CA3               	goto	u6001
 10387  04A2  2CA4               	goto	u6000
 10388  04A3                     u6001:
 10389  04A3  2B9C               	goto	l3932
 10390  04A4                     u6000:
 10391  04A4  2CB6               	goto	l3948
 10392  04A5                     l3942:
 10393                           
 10394                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++ = ('0')));
 10395  04A5  3030               	movlw	48
 10396  04A6  00A0               	movwf	??_sprintf^(0+128)
 10397  04A7  0838               	movf	sprintf@sp^(0+128),w
 10398  04A8  0084               	movwf	4
 10399  04A9  0820               	movf	??_sprintf^(0+128),w
 10400  04AA  1383               	bcf	3,7	;select IRP bank0
 10401  04AB  0080               	movwf	0
 10402  04AC                     l3944:
 10403  04AC  3001               	movlw	1
 10404  04AD  00A0               	movwf	??_sprintf^(0+128)
 10405  04AE  0820               	movf	??_sprintf^(0+128),w
 10406  04AF  07B8               	addwf	sprintf@sp^(0+128),f
 10407  04B0                     l3946:
 10408                           
 10409                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10410  04B0  30FF               	movlw	255
 10411  04B1  07BC               	addwf	sprintf@prec^(0+128),f
 10412  04B2  1803               	skipnc
 10413  04B3  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10414  04B4  30FF               	movlw	255
 10415  04B5  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10416  04B6                     l3948:
 10417                           
 10418                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1261:    while(prec) {
 10419  04B6  083C               	movf	sprintf@prec^(0+128),w
 10420  04B7  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10421  04B8  1D03               	btfss	3,2
 10422  04B9  2CBB               	goto	u6011
 10423  04BA  2CBC               	goto	u6010
 10424  04BB                     u6011:
 10425  04BB  2CA5               	goto	l3942
 10426  04BC                     u6010:
 10427  04BC  2D82               	goto	l3996
 10428  04BD                     l3950:
 10429                           
 10430                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && val == 0
      +                          )
 10431  04BD  083C               	movf	sprintf@prec^(0+128),w
 10432  04BE  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10433  04BF  1D03               	btfss	3,2
 10434  04C0  2CC2               	goto	u6021
 10435  04C1  2CC3               	goto	u6020
 10436  04C2                     u6021:
 10437  04C2  2CD1               	goto	l391
 10438  04C3                     u6020:
 10439  04C3                     l3952:
 10440  04C3  082D               	movf	(sprintf@val+3)^(0+128),w
 10441  04C4  042C               	iorwf	(sprintf@val+2)^(0+128),w
 10442  04C5  042B               	iorwf	(sprintf@val+1)^(0+128),w
 10443  04C6  042A               	iorwf	sprintf@val^(0+128),w
 10444  04C7  1D03               	skipz
 10445  04C8  2CCA               	goto	u6031
 10446  04C9  2CCB               	goto	u6030
 10447  04CA                     u6031:
 10448  04CA  2CD1               	goto	l391
 10449  04CB                     u6030:
 10450  04CB                     l3954:
 10451                           
 10452                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10453  04CB  3001               	movlw	1
 10454  04CC  07BC               	addwf	sprintf@prec^(0+128),f
 10455  04CD  1803               	skipnc
 10456  04CE  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10457  04CF  3000               	movlw	0
 10458  04D0  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10459  04D1                     l391:
 10460                           
 10461                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
 10462  04D1  083D               	movf	(sprintf@prec+1)^(0+128),w
 10463  04D2  3A80               	xorlw	128
 10464  04D3  3C80               	sublw	128
 10465  04D4  1D03               	skipz
 10466  04D5  2CD8               	goto	u6045
 10467  04D6  083C               	movf	sprintf@prec^(0+128),w
 10468  04D7  023E               	subwf	sprintf@c^(0+128),w
 10469  04D8                     u6045:
 10470  04D8  1803               	skipnc
 10471  04D9  2CDB               	goto	u6041
 10472  04DA  2CDC               	goto	u6040
 10473  04DB                     u6041:
 10474  04DB  2CE3               	goto	l3958
 10475  04DC                     u6040:
 10476  04DC                     l3956:
 10477                           
 10478                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1366:    c = (char)prec;
 10479  04DC  1683               	bsf	3,5	;RP0=1, select bank1
 10480  04DD  1303               	bcf	3,6	;RP1=0, select bank1
 10481  04DE  083C               	movf	sprintf@prec^(0+128),w
 10482  04DF  00A0               	movwf	??_sprintf^(0+128)
 10483  04E0  0820               	movf	??_sprintf^(0+128),w
 10484  04E1  00BE               	movwf	sprintf@c^(0+128)
 10485  04E2  2CFB               	goto	l3962
 10486  04E3                     l3958:
 10487  04E3  1683               	bsf	3,5	;RP0=1, select bank1
 10488  04E4  1303               	bcf	3,6	;RP1=0, select bank1
 10489  04E5  083D               	movf	(sprintf@prec+1)^(0+128),w
 10490  04E6  3A80               	xorlw	128
 10491  04E7  00A0               	movwf	??_sprintf^(0+128)
 10492  04E8  3080               	movlw	128
 10493  04E9  0220               	subwf	??_sprintf^(0+128),w
 10494  04EA  1D03               	skipz
 10495  04EB  2CEE               	goto	u6055
 10496  04EC  083E               	movf	sprintf@c^(0+128),w
 10497  04ED  023C               	subwf	sprintf@prec^(0+128),w
 10498  04EE                     u6055:
 10499  04EE  1803               	skipnc
 10500  04EF  2CF1               	goto	u6051
 10501  04F0  2CF2               	goto	u6050
 10502  04F1                     u6051:
 10503  04F1  2CFB               	goto	l3962
 10504  04F2                     u6050:
 10505  04F2                     l3960:
 10506                           
 10507                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
 10508  04F2  1683               	bsf	3,5	;RP0=1, select bank1
 10509  04F3  1303               	bcf	3,6	;RP1=0, select bank1
 10510  04F4  083E               	movf	sprintf@c^(0+128),w
 10511  04F5  00A0               	movwf	??_sprintf^(0+128)
 10512  04F6  01A1               	clrf	(??_sprintf^(0+128)+1)
 10513  04F7  0820               	movf	??_sprintf^(0+128),w
 10514  04F8  00BC               	movwf	sprintf@prec^(0+128)
 10515  04F9  0821               	movf	(??_sprintf+1)^(0+128),w
 10516  04FA  00BD               	movwf	(sprintf@prec+1)^(0+128)
 10517  04FB                     l3962:
 10518                           
 10519                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0x03)
 10520  04FB  1683               	bsf	3,5	;RP0=1, select bank1
 10521  04FC  1303               	bcf	3,6	;RP1=0, select bank1
 10522  04FD  0830               	movf	sprintf@width^(0+128),w
 10523  04FE  0431               	iorwf	(sprintf@width+1)^(0+128),w
 10524  04FF  1903               	btfsc	3,2
 10525  0500  2D02               	goto	u6061
 10526  0501  2D03               	goto	u6060
 10527  0502                     u6061:
 10528  0502  2D15               	goto	l3968
 10529  0503                     u6060:
 10530  0503                     l3964:
 10531  0503  3003               	movlw	3
 10532  0504  052E               	andwf	sprintf@flag^(0+128),w
 10533  0505  00A0               	movwf	??_sprintf^(0+128)
 10534  0506  3000               	movlw	0
 10535  0507  052F               	andwf	(sprintf@flag+1)^(0+128),w
 10536  0508  00A1               	movwf	(??_sprintf+1)^(0+128)
 10537  0509  0820               	movf	??_sprintf^(0+128),w
 10538  050A  0421               	iorwf	(??_sprintf^(0+128)+1),w
 10539  050B  1903               	btfsc	3,2
 10540  050C  2D0E               	goto	u6071
 10541  050D  2D0F               	goto	u6070
 10542  050E                     u6071:
 10543  050E  2D15               	goto	l3968
 10544  050F                     u6070:
 10545  050F                     l3966:
 10546                           
 10547                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10548  050F  30FF               	movlw	255
 10549  0510  07B0               	addwf	sprintf@width^(0+128),f
 10550  0511  1803               	skipnc
 10551  0512  0AB1               	incf	(sprintf@width+1)^(0+128),f
 10552  0513  30FF               	movlw	255
 10553  0514  07B1               	addwf	(sprintf@width+1)^(0+128),f
 10554  0515                     l3968:
 10555                           
 10556                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1374:   if(flag & 0x4000) {
 10557  0515  1F2F               	btfss	(sprintf@flag+1)^(0+128),6
 10558  0516  2D18               	goto	u6081
 10559  0517  2D19               	goto	u6080
 10560  0518                     u6081:
 10561  0518  2D34               	goto	l3976
 10562  0519                     u6080:
 10563  0519                     l3970:
 10564                           
 10565                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1375:    if(width > prec)
 10566  0519  083D               	movf	(sprintf@prec+1)^(0+128),w
 10567  051A  3A80               	xorlw	128
 10568  051B  00A0               	movwf	??_sprintf^(0+128)
 10569  051C  0831               	movf	(sprintf@width+1)^(0+128),w
 10570  051D  3A80               	xorlw	128
 10571  051E  0220               	subwf	??_sprintf^(0+128),w
 10572  051F  1D03               	skipz
 10573  0520  2D23               	goto	u6095
 10574  0521  0830               	movf	sprintf@width^(0+128),w
 10575  0522  023C               	subwf	sprintf@prec^(0+128),w
 10576  0523                     u6095:
 10577  0523  1803               	skipnc
 10578  0524  2D26               	goto	u6091
 10579  0525  2D27               	goto	u6090
 10580  0526                     u6091:
 10581  0526  2D30               	goto	l3974
 10582  0527                     u6090:
 10583  0527                     l3972:
 10584                           
 10585                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1376:     width -= prec;
 10586  0527  1683               	bsf	3,5	;RP0=1, select bank1
 10587  0528  1303               	bcf	3,6	;RP1=0, select bank1
 10588  0529  083C               	movf	sprintf@prec^(0+128),w
 10589  052A  02B0               	subwf	sprintf@width^(0+128),f
 10590  052B  083D               	movf	(sprintf@prec+1)^(0+128),w
 10591  052C  1C03               	skipc
 10592  052D  03B1               	decf	(sprintf@width+1)^(0+128),f
 10593  052E  02B1               	subwf	(sprintf@width+1)^(0+128),f
 10594  052F  2D34               	goto	l3976
 10595  0530                     l3974:
 10596                           
 10597                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1378:     width = 0;
 10598  0530  1683               	bsf	3,5	;RP0=1, select bank1
 10599  0531  1303               	bcf	3,6	;RP1=0, select bank1
 10600  0532  01B0               	clrf	sprintf@width^(0+128)
 10601  0533  01B1               	clrf	(sprintf@width+1)^(0+128)
 10602  0534                     l3976:
 10603                           
 10604                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
 10605  0534  0831               	movf	(sprintf@width+1)^(0+128),w
 10606  0535  3A80               	xorlw	128
 10607  0536  3C80               	sublw	128
 10608  0537  1D03               	skipz
 10609  0538  2D3B               	goto	u6105
 10610  0539  0830               	movf	sprintf@width^(0+128),w
 10611  053A  023E               	subwf	sprintf@c^(0+128),w
 10612  053B                     u6105:
 10613  053B  1803               	skipnc
 10614  053C  2D3E               	goto	u6101
 10615  053D  2D3F               	goto	u6100
 10616  053E                     u6101:
 10617  053E  2D4B               	goto	l3980
 10618  053F                     u6100:
 10619  053F                     l3978:
 10620                           
 10621                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
 10622  053F  1683               	bsf	3,5	;RP0=1, select bank1
 10623  0540  1303               	bcf	3,6	;RP1=0, select bank1
 10624  0541  083E               	movf	sprintf@c^(0+128),w
 10625  0542  00A0               	movwf	??_sprintf^(0+128)
 10626  0543  01A1               	clrf	(??_sprintf^(0+128)+1)
 10627  0544  0820               	movf	??_sprintf^(0+128),w
 10628  0545  02B0               	subwf	sprintf@width^(0+128),f
 10629  0546  0821               	movf	(??_sprintf+1)^(0+128),w
 10630  0547  1C03               	skipc
 10631  0548  03B1               	decf	(sprintf@width+1)^(0+128),f
 10632  0549  02B1               	subwf	(sprintf@width+1)^(0+128),f
 10633  054A  2D4F               	goto	l3982
 10634  054B                     l3980:
 10635                           
 10636                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
 10637  054B  1683               	bsf	3,5	;RP0=1, select bank1
 10638  054C  1303               	bcf	3,6	;RP1=0, select bank1
 10639  054D  01B0               	clrf	sprintf@width^(0+128)
 10640  054E  01B1               	clrf	(sprintf@width+1)^(0+128)
 10641  054F                     l3982:
 10642                           
 10643                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1448:   {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 1450:    if(width
 10644  054F  0830               	movf	sprintf@width^(0+128),w
 10645  0550  0431               	iorwf	(sprintf@width+1)^(0+128),w
 10646  0551  1903               	btfsc	3,2
 10647  0552  2D54               	goto	u6111
 10648  0553  2D55               	goto	u6110
 10649  0554                     u6111:
 10650  0554  2D6C               	goto	l3990
 10651  0555                     u6110:
 10652  0555                     l3984:
 10653                           
 10654                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')));
 10655  0555  3020               	movlw	32
 10656  0556  00A0               	movwf	??_sprintf^(0+128)
 10657  0557  0838               	movf	sprintf@sp^(0+128),w
 10658  0558  0084               	movwf	4
 10659  0559  0820               	movf	??_sprintf^(0+128),w
 10660  055A  1383               	bcf	3,7	;select IRP bank0
 10661  055B  0080               	movwf	0
 10662  055C                     l3986:
 10663  055C  3001               	movlw	1
 10664  055D  00A0               	movwf	??_sprintf^(0+128)
 10665  055E  0820               	movf	??_sprintf^(0+128),w
 10666  055F  07B8               	addwf	sprintf@sp^(0+128),f
 10667  0560                     l3988:
 10668  0560  30FF               	movlw	255
 10669  0561  07B0               	addwf	sprintf@width^(0+128),f
 10670  0562  1803               	skipnc
 10671  0563  0AB1               	incf	(sprintf@width+1)^(0+128),f
 10672  0564  30FF               	movlw	255
 10673  0565  07B1               	addwf	(sprintf@width+1)^(0+128),f
 10674  0566  0830               	movf	sprintf@width^(0+128),w
 10675  0567  0431               	iorwf	(sprintf@width+1)^(0+128),w
 10676  0568  1D03               	btfss	3,2
 10677  0569  2D6B               	goto	u6121
 10678  056A  2D6C               	goto	u6120
 10679  056B                     u6121:
 10680  056B  2D55               	goto	l3984
 10681  056C                     u6120:
 10682  056C                     l3990:
 10683                           
 10684                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 10685  056C  3003               	movlw	3
 10686  056D  052E               	andwf	sprintf@flag^(0+128),w
 10687  056E  00A0               	movwf	??_sprintf^(0+128)
 10688  056F  3000               	movlw	0
 10689  0570  052F               	andwf	(sprintf@flag+1)^(0+128),w
 10690  0571  00A1               	movwf	(??_sprintf+1)^(0+128)
 10691  0572  0820               	movf	??_sprintf^(0+128),w
 10692  0573  0421               	iorwf	(??_sprintf^(0+128)+1),w
 10693  0574  1903               	btfsc	3,2
 10694  0575  2D77               	goto	u6131
 10695  0576  2D78               	goto	u6130
 10696  0577                     u6131:
 10697  0577  2D82               	goto	l3996
 10698  0578                     u6130:
 10699  0578                     l3992:
 10700                           
 10701                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
 10702  0578  302D               	movlw	45
 10703  0579  00A0               	movwf	??_sprintf^(0+128)
 10704  057A  0838               	movf	sprintf@sp^(0+128),w
 10705  057B  0084               	movwf	4
 10706  057C  0820               	movf	??_sprintf^(0+128),w
 10707  057D  1383               	bcf	3,7	;select IRP bank0
 10708  057E  0080               	movwf	0
 10709  057F  120A  158A  2D05   	goto	l3754
 10710  0582                     l3996:
 10711                           
 10712                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
 10713  0582  3001               	movlw	1
 10714  0583  1283               	bcf	3,5	;RP0=0, select bank0
 10715  0584  1303               	bcf	3,6	;RP1=0, select bank0
 10716  0585  07E7               	addwf	sprintf@f,f
 10717  0586  30FF               	movlw	-1
 10718  0587  0767               	addwf	sprintf@f,w
 10719  0588  0084               	movwf	4
 10720  0589  160A  118A  2000  120A  118A  	fcall	stringdir
 10721  058E  1683               	bsf	3,5	;RP0=1, select bank1
 10722  058F  1303               	bcf	3,6	;RP1=0, select bank1
 10723  0590  00A0               	movwf	??_sprintf^(0+128)
 10724  0591  0820               	movf	??_sprintf^(0+128),w
 10725  0592  00BE               	movwf	sprintf@c^(0+128)
 10726  0593  083E               	movf	sprintf@c^(0+128),w
 10727  0594  1D03               	btfss	3,2
 10728  0595  2D97               	goto	u6141
 10729  0596  2D9A               	goto	u6140
 10730  0597                     u6141:
 10731  0597  120A  158A  2CF8   	goto	l3750
 10732  059A                     u6140:
 10733  059A                     l3998:
 10734                           
 10735                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10736  059A  0838               	movf	sprintf@sp^(0+128),w
 10737  059B  0084               	movwf	4
 10738  059C  1383               	bcf	3,7	;select IRP bank0
 10739  059D  0180               	clrf	0
 10740  059E                     l406:
 10741  059E  0008               	return
 10742  059F                     __end_of_sprintf:

Data Sizes:
    Strings     29
    Constant    118
    Data        17
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     78      80
    BANK1            80     33      74
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_3(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> datos(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    uartTX_Write_Str@string	PTR unsigned char  size(1) Largest target is 12
		 -> STR_2(CODE[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_uartRC_Read

Critical Paths under _main in BANK0

    _main->_sprintf
    _uartTX_Write_Str->_uartTX_Write
    _uartRC_init->___aldiv
    _sprintf->___ftsub
    _scale->___ftmul
    ___awdiv->___awmod
    _fround->___ftmul
    ___lwdiv->___lwmod
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    _aht_GetTemperature->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->_fround
    _aht_GetHumidity->___lltoft
    _aht_readSensor->_I2C_Master_Read
    ___lltoft->_aht_readSensor
    ___ftmul->___bmul
    ___ftdiv->___ftmul
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   60742
                                             31 BANK1      2     2      0
                    _I2C_Master_Init
                    _aht_GetHumidity
                 _aht_GetTemperature
                           _configIO
                            _sprintf
                        _uartRC_init
                       _uartTX_Write
                   _uartTX_Write_Str
 ---------------------------------------------------------------------------------
 (1) _uartTX_Write_Str                                     3     3      0     191
                                              2 BANK0      3     3      0
                       _uartTX_Write
 ---------------------------------------------------------------------------------
 (2) _uartTX_Write                                         2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _uartRC_init                                         16    14      2     993
                                             15 BANK0     16    14      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     705
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    36      7   36441
                                             71 BANK0      7     0      7
                                              0 BANK1     31    31      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    7726
                                             36 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1213
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1355
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    5981
                                             36 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     622
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     480
                                              6 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             16 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 BANK0     16    10      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 BANK0     20    14      6
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1606
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     622
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             45 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3331
                                             65 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     130
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     718
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _aht_GetTemperature                                   6     3      3   12684
                                             65 BANK0      6     3      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lltoft
                     _aht_readSensor
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3105
                                             52 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) _aht_GetHumidity                                      6     3      3    9610
                                             57 BANK0      6     3      3
                            ___ftdiv
                            ___ftmul
                           ___lltoft
                     _aht_readSensor
 ---------------------------------------------------------------------------------
 (2) _aht_readSensor                                      45    41      4     962
                                              6 BANK0     45    41      4
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     226
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     260
                                              0 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2175
                                             51 BANK0      6     2      4
                           ___ftpack
                     _aht_readSensor (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3969
                                             20 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2439
                                             36 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1947
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     792
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     631
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              3 COMMON     3     3      0
                        _uartRC_Read
 ---------------------------------------------------------------------------------
 (6) _uartRC_Read                                          3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _aht_GetHumidity
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___lltoft
       ___ftpack
       _aht_readSensor (ARG)
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _aht_readSensor
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _aht_GetTemperature
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___lltoft
       ___ftpack
       _aht_readSensor (ARG)
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _aht_readSensor
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _configIO
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
         _aht_readSensor (ARG)
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
       _aht_readSensor (ARG)
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
   _uartRC_init
     ___aldiv
   _uartTX_Write
   _uartTX_Write_Str
     _uartTX_Write

 _ISR (ROOT)
   _uartRC_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     21      4A       7       92.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A5      12        0.0%
ABS                  0      0      A5       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 09:14:41 2021

                          pc 0002               ___bmul@product 0032                           l53 1CB9  
                         l96 1E35                           l99 109C                 ___awdiv@sign 002D  
                         fsr 0004          ___wmul@multiplicand 0022                 ___ftadd@exp1 0060  
               ___ftadd@exp2 005F                 ___ftadd@sign 005E                          l102 10A8  
                        l111 07FF                          l105 1C84                          l114 1C8E  
                        l117 1DBE                          l118 1DC1                          l214 1D96  
                        l119 1DC8                          l208 1CF4                          l410 1D55  
                        l323 0CED                          l412 1D6D                          l316 074B  
                        l165 1FFF                          l406 059E                          l176 16D2  
                        l168 1109                          l345 0DE8                          l620 17C2  
                        l436 1D21                          l446 1171                          l606 1FA2  
                        l391 04D1                          l383 031E                          l199 15CB  
                        l616 17FF                          l376 02DA                          l713 1E6F  
                        l481 12F9                          l730 1CA6                          l706 1431  
                        l635 1258                          l627 17F2                          l619 17AF  
                        l491 1381                          l660 094A                          l740 12E4  
                        l661 094F                          l646 1234                          l670 09C0  
                        l647 123E                          l639 1219                          l719 08F4  
                        l648 1258                          l656 0A2A                          l736 1D46  
                        l593 11DA                          l659 0940                          l747 12C7  
                        l852 1EF1                          l781 1F47                          l862 1EAB  
                        l687 1500                          l695 143E                          l696 13B0  
                        l872 1CE0                          l699 1401                          l789 1DFB  
                        _GIE 005F                          _ISR 1CF5                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0026                         ?_ISR 0070  
               ___ftdiv@cntr 004E                 ___ftdiv@sign 0053                         l2130 11F0  
                       l2122 11DB                         l2140 1220                         l2132 11FC  
                       l2124 11E2                         l2300 094E                         l2150 1252  
                       l2142 122A                         l2134 1203                         l2126 11E9  
                       l2310 0973                         l2302 0950                         l2152 1257  
                       l2144 122E                         l2136 1207                         l2320 099F  
                       l2312 097C                         l2304 0956                         l2400 1EB0  
                       l2146 1238                         l2138 1211                         l2330 09D4  
                       l2322 09A5                         l2314 0988                         l2306 0963  
                       l2410 1EC8                         l2402 1EB6                         l4010 0751  
                       l2148 1240                         l2340 09FD                         l2332 09D8  
                       l2324 09AE                         l2308 096D                         l2316 098F  
                       l2412 1ED9                         l2404 1EB9                         l2420 1EED  
                       l4020 079F                         l4012 075C                         l2350 0823  
                       l3310 1C81                         l2342 0A0D                         l2334 09E8  
                       l2326 09BA                         l2318 0995                         l2190 1D19  
                       l2182 1D0E                         l2414 1EDF                         l2406 1EC0  
                       l4030 07E9                         l4022 07A5                         l4014 076B  
                       l2360 0842                         l3304 109C                         l3320 1D97  
                       l3312 07F7                         l2344 0A0F                         l2336 09E9  
                       l2328 09C4                         l2280 0914                         l2192 1D20  
                       l2184 1D0F                         l2416 1EE0                         l2408 1EC4  
                       l3400 1F73                         l4024 07D7                         l4016 0771  
                       l4008 074C                         l2370 087D                         l2362 086F  
                       l2354 082A                         l3306 10A2                         l3330 1DBA  
                       l3322 1D9C                         l3314 07FC                         l2338 09F9  
                       l2290 0930                         l2282 091A                         l2602 16D3  
                       l2186 1D13                         l2418 1EE7                         l3402 1F77  
                       l3410 1F94                         l4026 07DD                         l4018 0788  
                       l2380 08A5                         l2372 0881                         l2364 0870  
                       l2356 083B                         l2348 0810                         l3332 1DC2  
                       l3324 1DA4                         l3308 1C7C                         l3316 1C85  
                       l2292 0936                         l2284 0924                         l2620 174E  
                       l2604 16EE                         l2188 1D17                         l3420 1E78  
                       l3340 1179                         l3412 1F99                         l3404 1F81  
                       l4028 07E3                         l2390 08CB                         l2382 08AB  
                       l2374 0885                         l2366 0871                         l3326 1DAD  
                       l3318 1C8A                         l2294 0941                         l2278 08F5  
                       l2630 17AE                         l2622 1753                         l2614 1710  
                       l2550 1382                         l3430 1E94                         l3422 1E7B  
                       l3350 118D                         l3342 117E                         l3414 1F9E  
                       l3406 1F87                         l3510 0B70                         l2392 08D3  
                       l2384 08AF                         l2376 0895                         l2368 0877  
                       l3328 1DB2                         l2296 0945                         l2288 092B  
                       l2640 17CE                         l2632 17BC                         l2624 1757  
                       l2616 1744                         l2608 16F7                         l2552 1395  
                       l3432 1E9A                         l3424 1E82                         l3360 11A3  
                       l3352 118F                         l3344 1180                         l3336 1172  
                       l3408 1F8E                         l3504 0AFB                         l3600 132C  
                       l3440 1CE4                         l2394 08D9                         l2386 08B3  
                       l2378 089D                         l3450 15F0                         l2298 0949  
                       l2810 1259                         l2650 17F7                         l2634 17C6  
                       l2642 17E0                         l2626 1760                         l2618 174C  
                       l2570 13D1                         l2562 13B1                         l3434 1EA1  
                       l3426 1E86                         l3418 1E70                         l3370 11C6  
                       l3362 11A7                         l3354 1195                         l3346 1184  
                       l3338 1175                         l3522 0C58                         l3506 0B02  
                       l3514 0B91                         l3610 135A                         l3602 1330  
                       l3442 1CE7                         l2740 146A                         l2732 143F  
                       l2388 08C3                         l3460 1637                         l3452 15F5  
                       l2820 1288                         l2812 126C                         l2628 178C  
                       l2580 13FB                         l2572 13DA                         l2564 13B7  
                       l2556 139E                         l3428 1E8A                         l3436 1EA7  
                       l3540 1CDF                         l3532 1CD0                         l3364 11B8  
                       l3356 1198                         l3372 11CC                         l3348 1189  
                       l3380 1F48                         l3524 0C5F                         l3516 0B98  
                       l3612 1363                         l3604 1339                         l3700 15C3  
                       l3444 1CEE                         l3710 1DFC                         l2750 148E  
                       l2734 1452                         l3462 163D                         l3454 15F9  
                       l3446 15CC                         l3630 1E5A                         l3622 1E36  
                       l2822 128E                         l3550 1D5C                         l2582 1405  
                       l2590 141F                         l2574 13E8                         l2566 13C6  
                       l2398 1EAC                         l3470 05A2                         l3534 1CD1  
                       l3374 11D1                         l3366 11BE                         l3358 119F  
                       l3390 1F5A                         l3382 1F4B                         l3606 134B  
                       l3614 1369                         l3702 15C4                         l3560 111C  
                       l3720 1E34                         l3712 1E00                         l2760 14BE  
                       l2752 14A0                         l2744 1471                         l3464 1689  
                       l3456 1622                         l3448 15E6                         l3632 1E5C  
                       l3624 1E3C                         l2824 1295                         l2816 1275  
                       l3552 1D63                         l3544 1D47                         l2648 17E7  
                       l2576 13F2                         l2568 13C8                         l3472 05A8  
                       l3480 0687                         l3536 1CD7                         l3376 11D6  
                       l3368 11BF                         l3392 1F5F                         l3384 1F4F  
                       l3528 0CCD                         l3800 0E1E                         l4096 0E00  
                       l3616 136E                         l3608 1359                         l3704 15C7  
                       l3570 114B                         l3562 111F                         l3714 1E03  
                       l2770 14E5                         l2762 14CC                         l2754 14A4  
                       l2746 1477                         l2738 1459                         l3466 16CA  
                       l3458 1626                         l3730 1FD3                         l3722 1FA3  
                       l3634 1E5E                         l3626 1E49                         l3642 1C9B  
                       l3650 1D22                         l2842 12BC                         l2834 12A3  
                       l2826 1297                         l2818 1287                         l3554 1D69  
                       l3546 1D4B                         l2578 13F3                         l3482 068D  
                       l3474 066D                         l3538 1CDD                         l3394 1F65  
                       l3386 1F54                         l3810 0E79                         l3802 0E29  
                       l3618 1379                         l3706 15C8                         l3572 1159  
                       l3564 112C                         l3716 1E32                         l2764 14D6  
                       l2756 14AB                         l2748 147C                         l3724 1FC5  
                       l3636 1E6C                         l3628 1E4D                         l3644 1CA4  
                       l3652 1D2B                         l2844 12CC                         l2828 129B  
                       l2836 12B5                         l3660 1EFC                         l3548 1D4F  
                       l2596 1426                         l2588 140D                         l3484 06FE  
                       l3396 1F68                         l3388 1F56                         l3492 0A2E  
                       l3900 022F                         l3820 0ED2                         l3812 0E7D  
                       l3804 0E2D                         l3740 1D71                         l3574 115A  
                       l3566 1130                         l3558 110A                         l3718 1E33  
                       l2766 14D7                         l2758 14B6                         l3726 1FCC  
                       l3734 10A9                         l3638 1E6E                         l3646 1CA6  
                       l3654 1D2D                         l2846 12D1                         l3670 1F30  
                       l3662 1EFF                         l2598 1436                         l3398 1F6F  
                       l3494 0A32                         l3910 02EB                         l3902 0234  
                       l3830 0F51                         l3822 0EF5                         l3814 0E84  
                       l3806 0E4C                         l3750 0CF8                         l3590 1308  
                       l3582 12E5                         l3742 1D74                         l3576 1163  
                       l3568 1139                         l2768 14DF                         l2872 1DC9  
                       l3736 10CA                         l3680 1CB1                         l2848 12DC  
                       l3672 1F39                         l3664 1F0C                         l3488 0718  
                       l3496 0A34                         l3920 0318                         l3912 02EF  
                       l3904 028F                         l3840 0FB1                         l3832 0F70  
                       l3824 0EF9                         l3816 0EA9                         l3808 0E75  
                       l3760 0D20                         l3752 0CFE                         l3592 130C  
                       l3584 12E8                         l3744 1D81                         l3578 1169  
                       l2874 1DD0                         l3682 1CB2                         l3666 1F10  
                       l3674 1F3F                         l3658 1EF2                         l3498 0A3B  
                       l3930 034F                         l3922 0327                         l3914 02F5  
                       l3906 02CE                         l3850 007B                         l3842 0FEA  
                       l3834 0F79                         l3826 0EFF                         l3818 0EAF  
                       l3762 0D24                         l3770 0D74                         l3754 0D05  
                       l3594 1314                         l3586 12EC                         l3690 1554  
                       l3746 1D89                         l2876 1DDD                         l3684 1CB5  
                       l3668 1F22                         l3932 039C                         l3940 049D  
                       l3924 032C                         l3916 0302                         l3908 02E2  
                       l3860 00C5                         l3852 009C                         l3844 0044  
                       l3836 0F9A                         l3828 0F18                         l3780 0DB3  
                       l3772 0D82                         l3764 0D47                         l3756 0D0A  
                       l3748 0CF1                         l3596 131C                         l3588 12FD  
                       l3692 155D                         l2878 1DE3                         l3686 1CB8  
                       l3678 1CA7                         l3942 04A5                         l3934 03F7  
                       l3926 0333                         l3918 0311                         l3862 0104  
                       l3854 00A5                         l3846 004D                         l3838 0FA2  
                       l3950 04BD                         l3782 0DCA                         l3774 0D85  
                       l3766 0D5E                         l3758 0D0E                         l3598 131F  
                       l3694 15B2                         l3960 04F2                         l3952 04C3  
                       l3944 04AC                         l3936 0436                         l3928 0337  
                       l3880 01CB                         l3856 00AD                         l3848 006C  
                       l3864 010B                         l3792 0DEA                         l3784 0DD0  
                       l3776 0D8B                         l3768 0D64                         l3696 15B5  
                       l3688 1501                         l3970 0519                         l3962 04FB  
                       l3954 04CB                         l3946 04B0                         l3938 0442  
                       l3890 0208                         l3882 01E6                         l3874 018A  
                       l3866 0186                         l3794 0E08                         l3778 0D90  
                       l3786 0DE2                         l3698 15BF                         l3980 054B  
                       l3972 0527                         l3964 0503                         l3956 04DC  
                       l3948 04B6                         l3884 01EC                         l3868 0188  
                       l3796 0E16                         l3788 0DE6                         l3990 056C  
                       l3982 054F                         l3974 0530                         l3966 050F  
                       l3958 04E3                         l3886 01F8                         l3894 020D  
                       l3878 01C1                         l3798 0E1A                         l3992 0578  
                       l3984 0555                         l3976 0534                         l3968 0515  
                       l3896 021A                         l3888 01FF                         l3986 055C  
                       l3978 053F                         l3898 0228                         l3988 0560  
                       l3996 0582                         l3998 059A                         STR_1 1097  
                       STR_2 108B                         STR_3 107C                         u3000 09FD  
                       u3001 09FC                         u3010 0823                         u3011 0822  
                       u3100 08B3                         u3020 083B                         u3101 08B2  
                       u3021 083A                         u3030 0852                         u3111 08BC  
                       u3112 08C3                         u3040 0864                         u3050 0885  
                       u3210 1EED                         u3051 0884                         u3035 084E  
                       u3211 1EEC                         u2500 122E                         u3140 08D9  
                       u4100 12B4                         u2501 122D                         u3141 08D8  
                       u3125 08C4                         u3061 088E                         u3045 0860  
                       u4101 12B3                         u3205 1EE1                         u2510 1234  
                       u2430 11E2                         u3062 0895                         u4110 12BB  
                       u3150 1EB6                         u2511 1233                         u2431 11E1  
                       u3135 08CC                         u4111 12BA                         u3151 1EB5  
                       u2520 1238                         u2440 11E9                         u5000 1F94  
                       u2521 1237                         u2441 11E8                         u5001 1F93  
                       u2530 1249                         u3090 08AB                         u4130 12CC  
                       u4050 126C                         u3170 1EC8                         u5010 1F99  
                       u3091 08AA                         u3075 0896                         u4131 12CB  
                       u4051 126B                         u3171 1EC7                         u5011 1F98  
                       u2540 1257                         u2460 1202                         u4220 1DE3  
                       u5100 1637                         u4140 12D1                         u4060 1280  
                       u5020 1E78                         u2541 1256                         u2461 1201  
                       u3085 089E                         u4221 1DE2                         u5101 1636  
                       u4141 12D0                         u4125 12BE                         u3165 1EBA  
                       u5021 1E77                         u5110 163D                         u4070 129B  
                       u3510 1401                         u3190 1ED9                         u2535 1245  
                       u2455 11F5                         u4215 1DD1                         u5111 163C  
                       u4071 129A                         u3511 1400                         u3191 1ED8  
                       u2480 121F                         u5120 1653                         u2800 0930  
                       u4080 12A2                         u3600 170F                         u3520 1405  
                       u2560 1D13                         u5040 1E8A                         u5200 0A3B  
                       u6000 04A4                         u2481 121E                         u2801 092F  
                       u4081 12A1                         u4065 127C                         u3601 170E  
                       u3521 1404                         u3505 13F4                         u2561 1D12  
                       u3185 1EC9                         u5041 1E89                         u5201 0A3A  
                       u6001 04A3                         u5130 1664                         u2810 0936  
                       u3530 140C                         u2570 1D20                         u5050 1E94  
                       u5210 0B02                         u6010 04BC                         u2475 1212  
                       u2811 0935                         u3531 140B                         u2571 1D1F  
                       u3195 1ED5                         u5051 1E93                         u5035 1E7C  
                       u5211 0B01                         u6011 04BB                         u5300 111C  
                       u5140 167D                         u2900 098E                         u2820 0940  
                       u3700 17F7                         u3620 178C                         u3460 1395  
                       u5220 0B98                         u6100 053F                         u6020 04C3  
                       u5301 111B                         u5125 164E                         u2901 098D  
                       u2821 093F                         u3701 17F6                         u3621 178B  
                       u3461 1394                         u5221 0B97                         u6101 053E  
                       u6021 04C2                         u5150 1697                         u2910 0995  
                       u2830 0949                         u3630 17C2                         u3550 141E  
                       u3470 13AF                         u5070 1EA7                         u5230 0C5F  
                       u6110 0555                         u6030 04CB                         u2495 1223  
                       u5135 165F                         u2911 0994                         u2831 0948  
                       u4095 12A4                         u3631 17C1                         u3615 1759  
                       u3551 141D                         u3471 13AE                         u5071 1EA6  
                       u5055 1E90                         u5231 0C5E                         u6111 0554  
                       u6031 04CA                         u5320 1130                         u5160 16B3  
                       u2840 094E                         u3640 17C6                         u3560 1425  
                       u5240 1CD7                         u6120 056C                         u6040 04DC  
                       u5080 1CF4                         u5321 112F                         u5145 1678  
                       u2841 094D                         u3641 17C5                         u3625 1788  
                       u3561 1424                         u3545 140E                         u5065 1E9B  
                       u5241 1CD6                         u6121 056B                         u6105 053B  
                       u6041 04DB                         u5081 1CF3                         u2930 09A5  
                       u2850 0963                         u2770 0914                         u3650 17CD  
                       u3490 13E8                         u5170 05A8                         u5250 1CDD  
                       u6130 0578                         u6050 04F2                         u5410 1330  
                       u5315 1121                         u5155 1692                         u2931 09A4  
                       u2851 0962                         u2771 0913                         u3651 17CC  
                       u3491 13E7                         u5171 05A7                         u5251 1CDC  
                       u6131 0577                         u6051 04F1                         u5411 132F  
                       _PEIE 005E                         u5340 114B                         u2940 09AD  
                       u2780 091A                         u5500 1CA4                         u5260 1D4F  
                       u3580 1436                         u5180 068D                         u6140 059A  
                       u6060 0503                         u5341 114A                         u5165 16AE  
                       u2941 09AC                         u2925 0996                         u2781 0919  
                       u5501 1CA3                         u5261 1D4E                         u3581 1435  
                       u3485 13D3                         u5181 068C                         u6141 0597  
                       u6061 0502                         u6045 04D8                         u5405 1321  
                       u2870 0973                         u2790 0924                         u5510 1D2B  
                       u3670 17DF                         u3590 16EE                         u5190 0A32  
                       u6070 050F                         u5430 134B                         u5335 1132  
                       u5095 160D                         u2871 0972                         u2791 0923  
                       u5511 1D2A                         u3671 17DE                         u3591 16ED  
                       u3575 1428                         u3495 13E4                         u5191 0A31  
                       u6071 050E                         u6055 04EE                         u5431 134A  
                       u5360 1169                         u3920 1452                         u4800 10A2  
                       u2960 09C0                         u2880 097B                         u5520 1EFC  
                       u3680 17E6                         u6080 0519                         u5361 1168  
                       u5345 1147                         u3921 1451                         u4801 10A1  
                       u2961 09BF                         u2881 097A                         u2865 0964  
                       u5521 1EFB                         u3681 17E5                         u3665 17CF  
                       u6081 0518                         u5425 1332                         u5601 1534  
                       u3930 146A                         u4810 10A8                         u2970 09C4  
                       u5290 1D69                         u6090 0527                         u5450 1369  
                       u5370 12EC                         u5610 155D                         u5602 1535  
                       u5355 115B                         u3931 1469                         u4811 10A7  
                       u2971 09C3                         u2955 09AF                         u5291 1D68  
                       u5275 1D56                         u6091 0526                         u5451 1368  
                       u5435 1347                         u5371 12EB                         u5611 155C  
                       u5603 153A                         u3940 1487                         u4820 1DBA  
                       u2980 09D8                         u5540 1F10                         u5700 0D82  
                       u5460 136E                         u5380 12FD                         u5604 153B  
                       _RCIF 0065                         u4821 1DB9                         u2981 09D7  
                       u5541 1F0F                         u5285 1D5D                         u5701 0D81  
                       u5461 136D                         u5445 135B                         u5381 12FC  
                       u5621 1592                         u5605 1540                         u6157 07EF  
                       u3950 1499                         u5470 1E3C                         u5550 1F22  
                       u4910 11CC                         u4830 1179                         u5710 0DE1  
                       u5390 131C                         u5630 15BF                         u5622 1593  
                       u5606 1541                         u2991 09F2                         u2895 097D  
                       u5471 1E3B                         u5551 1F21                         u5535 1F01  
                       u3695 17E9                         u4911 11CB                         u4831 1178  
                       u6095 0523                         u5711 0DE0                         u5391 131B  
                       u5631 15BE                         u5623 1598                         u6167 1CEB  
                       u5640 1E13                         u2992 09F9                         u5480 1E4D  
                       u4920 11D1                         u4840 1184                         u5800 0FB1  
                       u5720 0E16                         u5624 1599                         u3945 1483  
                       u6177 15EC                         u5481 1E4C                         u4921 11D0  
                       u4905 11C0                         u4841 1183                         u5801 0FB0  
                       u5721 0E13                         u5625 159E                         u3970 14CC  
                       u5650 1FCC                         u5490 1E6C                         u5570 1F3F  
                       u4850 1195                         u4930 1F4F                         u5810 0044  
                       u5730 0E1A                         u5626 159F                         i1l59 1D04  
                       u3971 14CB                         u3955 1495                         u5651 1FCB  
                       u5491 1E6B                         u5571 1F3E                         u5555 1F1E  
                       u4851 1194                         u4931 1F4E                         u5811 0FFA  
                       u5731 0E19                         u4940 1F5A                         u5900 01F8  
                       u5820 004D                         u5740 0E4C                         u5660 1D96  
                       u5645 1E0E                         u3965 14B7                         u5565 1F31  
                       u4941 1F59                         u5901 01F7                         u5821 004C  
                       u5805 0FAD                         u5741 0E4B                         u5661 1D95  
                       u3990 14E5                         u4870 11A7                         u4950 1F65  
                       u5910 021A                         u5830 006C                         u5750 0E84  
                       u5670 0CFE                         u3991 14E4                         u3975 14C8  
                       u5495 1E68                         u4871 11A6                         u4951 1F64  
                       u5911 0219                         u5831 006B                         u5815 0FF5  
                       u5751 0E83                         u5671 0CFD                         u5920 0228  
                       u5840 007B                         u5760 0E98                         u5680 0D20  
                       u3985 14D8                         u4865 1199                         u5921 0227  
                       u5841 007A                         u5681 0D1F                         u5585 1509  
                       u4890 11B8                         u4970 1F77                         u5850 009C  
                       u5770 0EF9                         u5690 0D74                         u4891 11B7  
                       u4971 1F76                         u5915 0216                         u5851 009B  
                       u5771 0EF8                         u5691 0D73                         u5595 151A  
                       u4980 1F81                         u5940 02E1                         u5780 0F70  
                       u4885 11A8                         u4981 1F80                         u4965 1F69  
                       u5941 02E0                         u5845 0077                         u5781 0F6F  
                       u5765 0E93                         u5950 0302                         u5870 01C0  
                       u5790 0F9A                         u4895 11B4                         u5951 0301  
                       u5935 0237                         u5871 01BF                         u5791 0F99  
                       u5960 0311                         u5880 01CB                         u4985 1F7D  
                       u5961 0310                         u5881 01CA                         u5865 018D  
                       u5970 032C                         u5890 01E6                         u4995 1F88  
                       u5971 032B                         u5955 02FE                         u5891 01E5  
                       u5875 01BC                         u5965 030D                         u5985 039F  
                       u5995 0445  __size_of_aht_GetTemperature 0061      __size_of_aht_readSensor 0107  
                       _main 074C                 ___ftpack@arg 0020                 ___ftpack@exp 0023  
                       btemp 007E                         start 000C         aht_readSensor@result 004E  
               _sprintf$1052 00A6              aht_readSensor@i 0052     __end_of_uartTX_Write_Str 1D97  
          ___bmul@multiplier 0033                 ___ftmul@cntr 0042                 ___ftmul@sign 0043  
                      ??_ISR 0073             ?_aht_GetHumidity 0059                 ___fttol@exp1 005A  
               ___fttol@lval 0056                   _GetTempCmd 00C7             ?_I2C_Master_Init 002E  
           ?_I2C_Master_Read 0020             ?_I2C_Master_Wait 0070             ?_I2C_Master_Stop 0070  
            __end_of___aldiv 1382                        ?_main 0070              __end_of___awdiv 11DB  
            __end_of___ftadd 0A2B              __end_of___awmod 1FA3              __end_of___ftdiv 1501  
            __end_of___ftneg 1CA7                        _ANSEL 0188              __end_of___lldiv 1172  
            __end_of___ftmul 08F5              ___awdiv@divisor 0027              __end_of___llmod 1F48  
            __end_of___ftsub 1D47              __end_of___fttol 12E5              __end_of___lwdiv 1EF2  
                      i1l202 1C9A              __end_of___lwmod 1EAC              ___awdiv@counter 002C  
                      _RCREG 001A                        _SPBRG 0099                        _PORTB 0006  
                      _TRISB 0086                        _SSPIE 0463                        _SSPIF 0063  
                      _TXREG 0019                 ___lltoft@exp 0058                        _datos 00C9  
            __end_of_dpowers 107C                        _scale 0A2B              __end_of_isdigit 1CE1  
              ___ftpack@sign 0024              _GetRHumidityCmd 00E6                        pclath 000A  
                      status 0003                        wtemp0 007E              __end_of_sprintf 059F  
    aht_GetTemperature@value 0064              __initialization 000F                 __end_of_main 07F7  
                     ??_main 00BF                ___fttol@sign1 0055                _AHT10_address 0079  
       __size_of__tdiv_to_l_ 00BD            ?_I2C_Master_Start 0070            ?_I2C_Master_Write 0020  
         ??_I2C_Master_Start 0020           ??_I2C_Master_Write 0022             ___llmod@dividend 0024  
                     ?_scale 0044             ___awdiv@dividend 0029             __end_of___ftpack 1259  
                     _ANSELH 0189             __end_of___lltoft 1DFC                       i1l2010 1CFC  
                     i1l2006 1CF5                       i1l2008 1CFB                       i1l1684 1C8F  
                     u240_20 1CFB                       u240_21 1CFA                 ?_uartRC_Read 0070  
                     u618_27 1C93                       _SSPADD 0093                       _TRISC3 043B  
                     _TRISC4 043C                 ?_uartRC_init 002F                       _SSPCON 0014  
                     _SSPBUF 0013             __end_of__powers_ 102D             __end_of_configIO 1CBA  
                     ___bmul 1D0B                       ___ftge 1E36                    ??___aldiv 0028  
       aht_GetHumidity@value 005C                       ___wmul 1D47                    ??___awdiv 002B  
                  ??___ftadd 005A                    ??___awmod 0024                    ??___ftdiv 004A  
                  ??___ftneg 0023                    ??___lldiv 0028                    ??___ftmul 003A  
                  ??___llmod 0028                    ??___ftsub 0067                    ??___fttol 0051  
                  ??___lwdiv 002A                    ??___lwmod 0024                       _fround 059F  
           ___awdiv@quotient 002E              ___awmod@divisor 0020              ___awmod@counter 0025  
      ___ftmul@f3_as_product 003F                 __pdataCOMMON 0079                    ??_isdigit 0020  
                     saved_w 007E                    ??_sprintf 00A0               _aht_readSensor 15CC  
    __end_of__initialization 0040                   ___ftadd@f1 0054                   ___ftadd@f2 0057  
                 ___ftge@ff1 0020                   ___ftge@ff2 0023                   ___ftdiv@f1 0047  
                 ___ftdiv@f2 0044                   ___ftdiv@f3 004F                   ___ftneg@f1 0020  
        ___bmul@multiplicand 0030                   ___ftmul@f1 0034                   ___ftmul@f2 0037  
                 ___ftsub@f1 0064                   ___ftsub@f2 0061                   ___fttol@f1 004D  
             __pcstackCOMMON 0070                 __pidataBANK0 109A                 __pidataBANK1 0803  
                 ___lltoft@c 0053                __end_of_scale 0CEE                   __div_to_l_ 16D3  
     __end_of_aht_readSensor 16D3              __div_to_l_@exp1 0033              __div_to_l_@cntr 0032  
                    ??_scale 0047              __div_to_l_@quot 002E                 sprintf@width 00B0  
                 __pbssBANK1 00C1                __div_to_l_@f1 0020                __div_to_l_@f2 0023  
                 __pmaintext 074C            ?_uartTX_Write_Str 0070                      ?___bmul 0030  
                    ?___ftge 0020                      ?___wmul 0020                   __pintentry 0004  
         ??_uartTX_Write_Str 0022                      ?_fround 0044                    ?___ftpack 0020  
                  ?___lltoft 0053              ?_aht_readSensor 0026   __end_of_aht_GetTemperature 110A  
                    _SSPCON2 0091                    ?_configIO 0070                      _SSPSTAT 0094  
                 __stringtab 1000              _eSensorResetCmd 007A         __size_of_uartRC_Read 000C  
          __end_of__npowers_ 1054                ?_uartTX_Write 0070         __size_of_uartRC_init 00CB  
                 _scale$1051 0049                      ___aldiv 12E5              __size_of___bmul 0017  
            __size_of___ftge 003A                      ___awdiv 1172                      ___ftadd 08F5  
                    ___awmod 1F48                      ___ftdiv 143F                      ___ftneg 1C9B  
                    ___lldiv 110A              __size_of___wmul 0027                      ___ftmul 0810  
                    ___llmod 1EF2                      ___ftsub 1D22                      ___fttol 1259  
                    ___lwdiv 1EAC                      ___lwmod 1E70                   ??___ftpack 0025  
            __size_of_fround 01AD                   ??___lltoft 0057                      __ptext1 1D6E  
                    __ptext2 1CE1                      __ptext3 1501                      __ptext4 12E5  
                    __ptext5 0CEE                      __ptext6 0A2B                      __ptext7 1F48  
                    __ptext8 1172                      __ptext9 1CCD                 __size_of_ISR 0016  
                ?__div_to_l_ 0020                      _dpowers 1054                      _isdigit 1CCD  
                    _humeda1 00C1     __size_of_aht_GetHumidity 005D                      _humedad 0076  
           ___awmod@dividend 0022             ___aldiv@dividend 0024     __size_of_I2C_Master_Init 003A  
   __size_of_I2C_Master_Read 0032     __size_of_I2C_Master_Wait 000D     __size_of_I2C_Master_Stop 0009  
                 ??_configIO 0020                      _sprintf 0CEE                      clrloop0 1C75  
       end_of_initialization 0040               ??_uartTX_Write 0020    __size_of_I2C_Master_Start 0009  
  __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0020              ___lldiv@counter 002D  
          _eSensorMeasureCmd 00DD                    _RCSTAbits 0018             ___aldiv@quotient 002B  
           I2C_Master_Init@c 002E             I2C_Master_Read@a 0020                      psplit$0 16003B  
             __tdiv_to_l_@f1 0020               __tdiv_to_l_@f2 0023          _eSensorCalibrateCmd 00E3  
              ??__tdiv_to_l_ 0026                    _TRISCbits 0087                 _LecturaUSART 0078  
         aht_readSensor@temp 0036                  ___ftdiv@exp 0052                    _TXSTAbits 0098  
        __size_of__div_to_l_ 012D                  ___ftmul@exp 003E               __end_of___bmul 1D22  
             __end_of___ftge 1E70               __end_of___wmul 1D6E     aht_readSensor@GetDataCmd 0026  
              __pidataCOMMON 0801               __end_of_fround 074C            _AHT10Address_High 00E8  
        start_initialization 000F                  __end_of_ISR 1D0B            pnum$text5_split_1 003B  
        __end_of__tdiv_to_l_ 143F            ??_aht_GetHumidity 005C            ??_I2C_Master_Init 0032  
          ??_I2C_Master_Read 0022            ??_I2C_Master_Wait 0020            ??_I2C_Master_Stop 0020  
            ___llmod@divisor 0020              ___llmod@counter 0029                     ??___bmul 0031  
                   ??___ftge 0026                     ??___wmul 0024                   init_fetch0 1CBA  
                __pdataBANK0 006E                  __pdataBANK1 00DD                     ??_fround 0047  
              sprintf@tmpval 00B2                   fround@prec 0053             ??_aht_readSensor 002A  
          __size_of___ftpack 007E            __size_of___lltoft 0033         __end_of_uartTX_Write 1CF5  
                __pbssCOMMON 0076                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0    __size_of_uartTX_Write_Str 0029            uartTX_Write_Str@n 0023  
          __size_of_configIO 0013                  sprintf@flag 00AE                  sprintf@eexp 00B6  
                sprintf@fval 00B9                  sprintf@prec 00BC             _I2C_Master_Start 1C7C  
           _I2C_Master_Write 1C85             ___lwdiv@dividend 0028           _aht_GetTemperature 10A9  
                   ?___aldiv 0020                     ?___awdiv 0027                     ?___ftadd 0054  
                   ?___awmod 0020                     ?___ftdiv 0044                     ?___ftneg 0020  
                   ?___lldiv 0020                     ?___ftmul 0034                     ?___llmod 0020  
                   ?___ftsub 0061                    __npowers_ 102D                     ?___fttol 004D  
                   ?___lwdiv 0026                     ?___lwmod 0020          ?_aht_GetTemperature 0061  
                  __pstrings 1000                  __tdiv_to_l_ 1382                 ??__div_to_l_ 0026  
                   ?_isdigit 0070             ___lwdiv@quotient 002B                     ?_sprintf 0067  
             __size_of_scale 02C3         ??_aht_GetTemperature 0064                ??_uartRC_Read 0070  
            ___aldiv@divisor 0020            interrupt_function 0004                ??_uartRC_init 0031  
            ___aldiv@counter 0029               ___wmul@product 0024                    clear_ram0 1C74  
                   _PIE1bits 008C                     _PIR1bits 000C           __end_of__div_to_l_ 1800  
     uartTX_Write_Str@string 0022                  __stringbase 1005            ___wmul@multiplier 0020  
           _eSensorNormalCmd 00E0          uartRC_init@baudrate 002F          I2C_Master_Read@temp 0024  
           _AHT10Address_Low 006E          __end_of_uartRC_Read 1C9B          __end_of_uartRC_init 15CC  
           __size_of___aldiv 009D             __size_of___awdiv 0069             __size_of___ftadd 0136  
           __size_of___awmod 005B             __size_of___ftdiv 00C2             __size_of___ftneg 000C  
           __size_of___lldiv 0068             __size_of___ftmul 00E5             __size_of___llmod 0056  
           __size_of___ftsub 0025             __size_of___fttol 008C             __size_of___lwdiv 0046  
           __size_of___lwmod 003C        __size_of_uartTX_Write 0014                     ___ftpack 11DB  
           uartTX_Write@dato 0021                  _fround$1050 004D                  _fround$1049 0050  
         __end_of__stringtab 1006                 uartRC_init@n 003D                     ___lltoft 1DC9  
                _isdigit$841 0020              _aht_GetHumidity 1FA3                   sprintf@val 00AA  
            _I2C_Master_Init 1DFC              _I2C_Master_Read 1D97              _I2C_Master_Wait 109C  
            _I2C_Master_Stop 07F7             __size_of_isdigit 0014             _uartTX_Write_Str 1D6E  
            ___lwdiv@divisor 0026              ___lwdiv@counter 002D                     __ptext10 059F  
                   __ptext11 1E70                     __ptext20 1C9B                     __ptext12 1EAC  
                   __ptext21 1E36                     __ptext13 1D0B                     __ptext30 1D97  
                   __ptext22 1CA7                     __ptext14 1382                     __ptext31 109C  
                   __ptext23 10A9                     __ptext15 16D3                     __ptext32 1DC9  
                   __ptext24 08F5                     __ptext16 1D47                     __ptext33 0810  
                   __ptext25 1FA3                     __ptext17 1EF2                     __ptext34 143F  
                   __ptext26 15CC                     __ptext18 1259                     __ptext35 11DB  
                   __ptext27 1C85                     __ptext19 1D22                     __ptext36 1DFC  
                   __ptext28 07F7                     __ptext37 110A                     __ptext29 1C7C  
                   __ptext38 1CF5                     __ptext39 1C8F                     __powers_ 1006  
                   _configIO 1CA7             __size_of_sprintf F8B1                __size_of_main 00AB  
                  pnum$text5 0016                 _uartTX_Write 1CE1                     _tempera1 00C4  
   __end_of_I2C_Master_Start 1C85     __end_of_I2C_Master_Write 1C8F                   _INTCONbits 000B  
                   init_ram0 1CBE                     isdigit@c 0021                     scale@scl 004C  
                   intlevel1 0000                    sprintf@ap 00A9             __tdiv_to_l_@exp1 002F  
           __tdiv_to_l_@cntr 002E                    sprintf@sp 00B8             __tdiv_to_l_@quot 002A  
                _uartRC_Read 1C8F             ___lwmod@dividend 0022             ___lldiv@dividend 0024  
                _uartRC_init 1501                    stringcode 1000      __end_of_aht_GetHumidity 2000  
    __end_of_I2C_Master_Init 1E36      __end_of_I2C_Master_Read 1DC9      __end_of_I2C_Master_Wait 10A9  
    __end_of_I2C_Master_Stop 0800                 ?__tdiv_to_l_ 0020                  _temperatura 0077  
                   sprintf@c 00BE                     sprintf@f 0067             ___lldiv@quotient 0029  
          I2C_Master_Write@d 0020              ___lwmod@divisor 0020              ___lwmod@counter 0025  
                   stringdir 1000                     stringtab 1000                 ___aldiv@sign 002A  
                _SSPCON2bits 0091  
