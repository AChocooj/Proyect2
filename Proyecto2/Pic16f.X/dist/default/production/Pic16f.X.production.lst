

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 05 22:04:17 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	functab,global,class=ENTRY,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  008F                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  0105                     	;# 
   387  0107                     	;# 
   388  0108                     	;# 
   389  0109                     	;# 
   390  010C                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  0185                     	;# 
   396  0187                     	;# 
   397  0188                     	;# 
   398  0189                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  000E                     	;# 
   417  000F                     	;# 
   418  0010                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001D                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  0081                     	;# 
   437  0085                     	;# 
   438  0086                     	;# 
   439  0087                     	;# 
   440  0088                     	;# 
   441  0089                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  008F                     	;# 
   446  0090                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0094                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0098                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  0105                     	;# 
   465  0107                     	;# 
   466  0108                     	;# 
   467  0109                     	;# 
   468  010C                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  0185                     	;# 
   474  0187                     	;# 
   475  0188                     	;# 
   476  0189                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479                           
   480 ;; Function _aht_GetHumidity is unused but had its address taken
   481  0000                     
   482 ;; Function _aht_GetTemperature is unused but had its address taken
   483  0000                     
   484                           	psect	idataCOMMON
   485  07FA                     __pidataCOMMON:
   486                           
   487                           ;initializer for _AHT10_address
   488  07FA  3438               	retlw	56
   489                           
   490                           ;initializer for _eSensorResetCmd
   491  07FB  34BA               	retlw	186
   492                           
   493                           	psect	idataBANK1
   494  1F0B                     __pidataBANK1:
   495                           
   496                           ;initializer for _eSensorMeasureCmd
   497  1F0B  34AC               	retlw	172
   498  1F0C  3433               	retlw	51
   499  1F0D  3400               	retlw	0
   500                           
   501                           ;initializer for _eSensorNormalCmd
   502  1F0E  34A8               	retlw	168
   503  1F0F  3400               	retlw	0
   504  1F10  3400               	retlw	0
   505                           
   506                           ;initializer for _eSensorCalibrateCmd
   507  1F11  34E1               	retlw	225
   508  1F12  3408               	retlw	8
   509  1F13  3400               	retlw	0
   510                           
   511                           ;initializer for _GetRHumidityCmd
   512  1F14  3401               	retlw	1
   513  1F15  3400               	retlw	0
   514                           
   515                           ;initializer for _AHT10Address_High
   516  1F16  3439               	retlw	57
   517  1F17  3400               	retlw	0
   518                           
   519                           ;initializer for _AHT10Address_Low
   520  1F18  3438               	retlw	56
   521  1F19  3400               	retlw	0
   522                           
   523                           	psect	strings
   524  1000                     __pstrings:
   525  1000                     stringtab:
   526  1000                     __stringtab:
   527  1000                     stringcode:	
   528                           ;	String table - string pointers are 1 byte each
   529                           
   530  1000                     stringdir:
   531  1000  3010               	movlw	high stringdir
   532  1001  008A               	movwf	10
   533  1002  0804               	movf	4,w
   534  1003  0A84               	incf	4,f
   535  1004  0782               	addwf	2,f
   536  1005                     __stringbase:
   537  1005  3400               	retlw	0
   538  1006                     __end_of__stringtab:
   539  1006                     __powers_:
   540  1006  3400               	retlw	0
   541  1007  3480               	retlw	128
   542  1008  343F               	retlw	63
   543  1009  3400               	retlw	0
   544  100A  3420               	retlw	32
   545  100B  3441               	retlw	65
   546  100C  3400               	retlw	0
   547  100D  34C8               	retlw	200
   548  100E  3442               	retlw	66
   549  100F  3400               	retlw	0
   550  1010  347A               	retlw	122
   551  1011  3444               	retlw	68
   552  1012  3440               	retlw	64
   553  1013  341C               	retlw	28
   554  1014  3446               	retlw	70
   555  1015  3450               	retlw	80
   556  1016  34C3               	retlw	195
   557  1017  3447               	retlw	71
   558  1018  3424               	retlw	36
   559  1019  3474               	retlw	116
   560  101A  3449               	retlw	73
   561  101B  3497               	retlw	151
   562  101C  3418               	retlw	24
   563  101D  344B               	retlw	75
   564  101E  34BC               	retlw	188
   565  101F  34BE               	retlw	190
   566  1020  344C               	retlw	76
   567  1021  346B               	retlw	107
   568  1022  346E               	retlw	110
   569  1023  344E               	retlw	78
   570  1024  3403               	retlw	3
   571  1025  3415               	retlw	21
   572  1026  3450               	retlw	80
   573  1027  3479               	retlw	121
   574  1028  34AD               	retlw	173
   575  1029  3460               	retlw	96
   576  102A  34F3               	retlw	243
   577  102B  3449               	retlw	73
   578  102C  3471               	retlw	113
   579  102D                     __end_of__powers_:
   580  102D                     __npowers_:
   581  102D  3400               	retlw	0
   582  102E  3480               	retlw	128
   583  102F  343F               	retlw	63
   584  1030  34CD               	retlw	205
   585  1031  34CC               	retlw	204
   586  1032  343D               	retlw	61
   587  1033  34D7               	retlw	215
   588  1034  3423               	retlw	35
   589  1035  343C               	retlw	60
   590  1036  3412               	retlw	18
   591  1037  3483               	retlw	131
   592  1038  343A               	retlw	58
   593  1039  34B7               	retlw	183
   594  103A  34D1               	retlw	209
   595  103B  3438               	retlw	56
   596  103C  34C6               	retlw	198
   597  103D  3427               	retlw	39
   598  103E  3437               	retlw	55
   599  103F  3438               	retlw	56
   600  1040  3486               	retlw	134
   601  1041  3435               	retlw	53
   602  1042  34C0               	retlw	192
   603  1043  34D6               	retlw	214
   604  1044  3433               	retlw	51
   605  1045  34CC               	retlw	204
   606  1046  342B               	retlw	43
   607  1047  3432               	retlw	50
   608  1048  3470               	retlw	112
   609  1049  3489               	retlw	137
   610  104A  3430               	retlw	48
   611  104B  34E7               	retlw	231
   612  104C  34DB               	retlw	219
   613  104D  342E               	retlw	46
   614  104E  34E5               	retlw	229
   615  104F  343C               	retlw	60
   616  1050  341E               	retlw	30
   617  1051  3442               	retlw	66
   618  1052  34A2               	retlw	162
   619  1053  340D               	retlw	13
   620  1054                     __end_of__npowers_:
   621  1054                     _dpowers:
   622  1054  3401               	retlw	1
   623  1055  3400               	retlw	0
   624  1056  3400               	retlw	0
   625  1057  3400               	retlw	0
   626  1058  340A               	retlw	10
   627  1059  3400               	retlw	0
   628  105A  3400               	retlw	0
   629  105B  3400               	retlw	0
   630  105C  3464               	retlw	100
   631  105D  3400               	retlw	0
   632  105E  3400               	retlw	0
   633  105F  3400               	retlw	0
   634  1060  34E8               	retlw	232
   635  1061  3403               	retlw	3
   636  1062  3400               	retlw	0
   637  1063  3400               	retlw	0
   638  1064  3410               	retlw	16
   639  1065  3427               	retlw	39
   640  1066  3400               	retlw	0
   641  1067  3400               	retlw	0
   642  1068  34A0               	retlw	160
   643  1069  3486               	retlw	134
   644  106A  3401               	retlw	1
   645  106B  3400               	retlw	0
   646  106C  3440               	retlw	64
   647  106D  3442               	retlw	66
   648  106E  340F               	retlw	15
   649  106F  3400               	retlw	0
   650  1070  3480               	retlw	128
   651  1071  3496               	retlw	150
   652  1072  3498               	retlw	152
   653  1073  3400               	retlw	0
   654  1074  3400               	retlw	0
   655  1075  34E1               	retlw	225
   656  1076  34F5               	retlw	245
   657  1077  3405               	retlw	5
   658  1078  3400               	retlw	0
   659  1079  34CA               	retlw	202
   660  107A  349A               	retlw	154
   661  107B  343B               	retlw	59
   662  107C                     __end_of_dpowers:
   663  001A                     _RCREG	set	26
   664  0019                     _TXREG	set	25
   665  0013                     _SSPBUF	set	19
   666  0014                     _SSPCON	set	20
   667  000C                     _PIR1bits	set	12
   668  000B                     _INTCONbits	set	11
   669  0006                     _PORTB	set	6
   670  00C4                     _CREN	set	196
   671  00C7                     _SPEN	set	199
   672  0063                     _SSPIF	set	99
   673  005E                     _PEIE	set	94
   674  005F                     _GIE	set	95
   675  0065                     _RCIF	set	101
   676  0099                     _SPBRG	set	153
   677  0091                     _SSPCON2bits	set	145
   678  0087                     _TRISCbits	set	135
   679  0094                     _SSPSTAT	set	148
   680  0093                     _SSPADD	set	147
   681  0091                     _SSPCON2	set	145
   682  008C                     _PIE1bits	set	140
   683  0086                     _TRISB	set	134
   684  04C1                     _TRMT	set	1217
   685  04C5                     _TXEN	set	1221
   686  043E                     _TRISC6	set	1086
   687  043F                     _TRISC7	set	1087
   688  04C4                     _SYNC	set	1220
   689  04C2                     _BRGH	set	1218
   690  0463                     _SSPIE	set	1123
   691  043C                     _TRISC4	set	1084
   692  043B                     _TRISC3	set	1083
   693  0189                     _ANSELH	set	393
   694  0188                     _ANSEL	set	392
   695  107C                     STR_2:
   696  107C  3425               	retlw	37	;'%'
   697  107D  3432               	retlw	50	;'2'
   698  107E  342E               	retlw	46	;'.'
   699  107F  3431               	retlw	49	;'1'
   700  1080  3466               	retlw	102	;'f'
   701  1081  3420               	retlw	32	;' '
   702  1082  3420               	retlw	32	;' '
   703  1083  3420               	retlw	32	;' '
   704  1084  3425               	retlw	37	;'%'
   705  1085  3432               	retlw	50	;'2'
   706  1086  342E               	retlw	46	;'.'
   707  1087  3431               	retlw	49	;'1'
   708  1088  3466               	retlw	102	;'f'
   709  1089  3420               	retlw	32	;' '
   710  108A  3400               	retlw	0
   711  108B                     STR_1:
   712  108B  3454               	retlw	84	;'T'
   713  108C  3431               	retlw	49	;'1'
   714  108D  3420               	retlw	32	;' '
   715  108E  3420               	retlw	32	;' '
   716  108F  3420               	retlw	32	;' '
   717  1090  3448               	retlw	72	;'H'
   718  1091  3431               	retlw	49	;'1'
   719  1092  3420               	retlw	32	;' '
   720  1093  3420               	retlw	32	;' '
   721  1094  3420               	retlw	32	;' '
   722  1095  340A               	retlw	10
   723  1096  3400               	retlw	0
   724                           
   725                           	psect	cinit
   726  000F                     start_initialization:	
   727                           ; #config settings
   728                           
   729  000F                     __initialization:
   730                           
   731                           ; Initialize objects allocated to BANK1
   732  000F  1383               	bcf	3,7	;select IRP bank0
   733  0010  30EA               	movlw	low (__pdataBANK1+15)
   734  0011  00FD               	movwf	btemp+-1
   735  0012  301F               	movlw	high __pidataBANK1
   736  0013  00FE               	movwf	btemp
   737  0014  300B               	movlw	low __pidataBANK1
   738  0015  00FF               	movwf	btemp+1
   739  0016  30DB               	movlw	low __pdataBANK1
   740  0017  0084               	movwf	4
   741  0018  160A  158A  2743  120A  118A  	fcall	init_ram0
   742                           
   743                           ; Initialize objects allocated to COMMON
   744  001D  120A  118A  27FA  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   745  0022  00F8               	movwf	__pdataCOMMON& (0+127)
   746  0023  120A  118A  27FB  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   747  0028  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   748                           
   749                           ; Clear objects allocated to BANK1
   750  0029  30BE               	movlw	low __pbssBANK1
   751  002A  0084               	movwf	4
   752  002B  30DB               	movlw	low (__pbssBANK1+29)
   753  002C  160A  158A  26ED  120A  118A  	fcall	clear_ram0
   754                           
   755                           ; Clear objects allocated to BANK0
   756  0031  01ED               	clrf	__pbssBANK0& (0+127)
   757                           
   758                           ; Clear objects allocated to COMMON
   759  0032  01FA               	clrf	__pbssCOMMON& (0+127)
   760  0033                     end_of_initialization:	
   761                           ;End of C runtime variable initialization code
   762                           
   763  0033                     __end_of__initialization:
   764  0033  0183               	clrf	3
   765  0034  160A  118A  2B8A   	ljmp	_main	;jump to C main() function
   766                           
   767                           	psect	bssCOMMON
   768  007A                     __pbssCOMMON:
   769  007A                     _LecturaUSART:
   770  007A                     	ds	1
   771                           
   772                           	psect	dataCOMMON
   773  0078                     __pdataCOMMON:
   774  0078                     _AHT10_address:
   775  0078                     	ds	1
   776  0079                     _eSensorResetCmd:
   777  0079                     	ds	1
   778                           
   779                           	psect	bssBANK0
   780  006D                     __pbssBANK0:
   781  006D                     _temperatura:
   782  006D                     	ds	1
   783                           
   784                           	psect	bssBANK1
   785  00BE                     __pbssBANK1:
   786  00BE                     _humeda1:
   787  00BE                     	ds	3
   788  00C1                     _tempera1:
   789  00C1                     	ds	3
   790  00C4                     _GetTempCmd:
   791  00C4                     	ds	2
   792  00C6                     _humedad:
   793  00C6                     	ds	1
   794  00C7                     _datos:
   795  00C7                     	ds	20
   796                           
   797                           	psect	dataBANK1
   798  00DB                     __pdataBANK1:
   799  00DB                     _eSensorMeasureCmd:
   800  00DB                     	ds	3
   801  00DE                     _eSensorNormalCmd:
   802  00DE                     	ds	3
   803  00E1                     _eSensorCalibrateCmd:
   804  00E1                     	ds	3
   805  00E4                     _GetRHumidityCmd:
   806  00E4                     	ds	2
   807  00E6                     _AHT10Address_High:
   808  00E6                     	ds	2
   809  00E8                     _AHT10Address_Low:
   810  00E8                     	ds	2
   811                           
   812                           	psect	inittext
   813  1F3F                     init_fetch0:	
   814                           ;	Called with low address in FSR and high address in W
   815                           
   816  1F3F  087E               	movf	btemp,w
   817  1F40  008A               	movwf	10
   818  1F41  087F               	movf	btemp+1,w
   819  1F42  0082               	movwf	2
   820  1F43                     init_ram0:	
   821                           ;Called with:
   822                           ;	high address of idata address in btemp 
   823                           ;	low address of idata address in btemp+1 
   824                           ;	low address of data in FSR
   825                           ;	high address + 1 of data in btemp-1
   826                           
   827  1F43  160A  158A  273F  160A  158A  	fcall	init_fetch0
   828  1F48  0080               	movwf	0
   829  1F49  0A84               	incf	4,f
   830  1F4A  0804               	movf	4,w
   831  1F4B  067D               	xorwf	btemp+-1,w
   832  1F4C  1903               	btfsc	3,2
   833  1F4D  3400               	retlw	0
   834  1F4E  0AFF               	incf	btemp+1,f
   835  1F4F  1903               	btfsc	3,2
   836  1F50  0AFE               	incf	btemp,f
   837  1F51  2F43               	goto	init_ram0
   838                           
   839                           	psect	clrtext
   840  1EED                     clear_ram0:	
   841                           ;	Called with FSR containing the base address, and
   842                           ;	W with the last address+1
   843                           
   844  1EED  0064               	clrwdt	;clear the watchdog before getting into this loop
   845  1EEE                     clrloop0:
   846  1EEE  0180               	clrf	0	;clear RAM location pointed to by FSR
   847  1EEF  0A84               	incf	4,f	;increment pointer
   848  1EF0  0604               	xorwf	4,w	;XOR with final address
   849  1EF1  1903               	btfsc	3,2	;have we reached the end yet?
   850  1EF2  3400               	retlw	0	;all done for this memory range, return
   851  1EF3  0604               	xorwf	4,w	;XOR again to restore value
   852  1EF4  2EEE               	goto	clrloop0	;do the next byte
   853                           
   854                           	psect	cstackBANK1
   855  00A0                     __pcstackBANK1:
   856  00A0                     _sprintf$960:
   857                           
   858                           ; 3 bytes @ 0x0
   859  00A0                     	ds	3
   860  00A3                     sprintf@ap:
   861                           
   862                           ; 1 bytes @ 0x3
   863  00A3                     	ds	1
   864  00A4                     sprintf@val:
   865                           
   866                           ; 4 bytes @ 0x4
   867  00A4                     	ds	4
   868  00A8                     sprintf@flag:
   869                           
   870                           ; 2 bytes @ 0x8
   871  00A8                     	ds	2
   872  00AA                     sprintf@width:
   873                           
   874                           ; 2 bytes @ 0xA
   875  00AA                     	ds	2
   876  00AC                     sprintf@tmpval:
   877                           
   878                           ; 4 bytes @ 0xC
   879  00AC                     	ds	4
   880  00B0                     sprintf@eexp:
   881                           
   882                           ; 2 bytes @ 0x10
   883  00B0                     	ds	2
   884  00B2                     sprintf@sp:
   885                           
   886                           ; 1 bytes @ 0x12
   887  00B2                     	ds	1
   888  00B3                     sprintf@fval:
   889                           
   890                           ; 3 bytes @ 0x13
   891  00B3                     	ds	3
   892  00B6                     sprintf@prec:
   893                           
   894                           ; 2 bytes @ 0x16
   895  00B6                     	ds	2
   896  00B8                     sprintf@c:
   897                           
   898                           ; 1 bytes @ 0x18
   899  00B8                     	ds	1
   900  00B9                     ??_main:
   901                           
   902                           ; 1 bytes @ 0x19
   903  00B9                     	ds	5
   904                           
   905                           	psect	cstackCOMMON
   906  0070                     __pcstackCOMMON:
   907  0070                     ?_isdigit:
   908  0070                     ?_Read_USART:	
   909                           ; 1 bit 
   910                           
   911  0070                     ??_Read_USART:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ?_Write_USART_String:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ?_Write_USART:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ?_configIO:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ?_ISR:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ??_ISR:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ?_main:	
   930                           ; 1 bytes @ 0x0
   931                           
   932                           
   933                           ; 1 bytes @ 0x0
   934  0070                     	ds	3
   935  0073                     ??_Write_USART:
   936  0073                     ??_isdigit:	
   937                           ; 1 bytes @ 0x3
   938                           
   939  0073                     ??__tdiv_to_l_:	
   940                           ; 1 bytes @ 0x3
   941                           
   942  0073                     ??_configIO:	
   943                           ; 1 bytes @ 0x3
   944                           
   945  0073                     ??___lldiv:	
   946                           ; 1 bytes @ 0x3
   947                           
   948  0073                     ??___aldiv:	
   949                           ; 1 bytes @ 0x3
   950                           
   951  0073                     ??___ftge:	
   952                           ; 1 bytes @ 0x3
   953                           
   954  0073                     ??___llmod:	
   955                           ; 1 bytes @ 0x3
   956                           
   957  0073                     ?___wmul:	
   958                           ; 1 bytes @ 0x3
   959                           
   960  0073                     ?___awmod:	
   961                           ; 2 bytes @ 0x3
   962                           
   963  0073                     ?___lwmod:	
   964                           ; 2 bytes @ 0x3
   965                           
   966  0073                     ?___ftpack:	
   967                           ; 2 bytes @ 0x3
   968                           
   969  0073                     ?___ftneg:	
   970                           ; 3 bytes @ 0x3
   971                           
   972  0073                     Write_USART@a:	
   973                           ; 3 bytes @ 0x3
   974                           
   975  0073                     _isdigit$749:	
   976                           ; 1 bytes @ 0x3
   977                           
   978  0073                     ___wmul@multiplier:	
   979                           ; 1 bytes @ 0x3
   980                           
   981  0073                     ___awmod@divisor:	
   982                           ; 2 bytes @ 0x3
   983                           
   984  0073                     ___lwmod@divisor:	
   985                           ; 2 bytes @ 0x3
   986                           
   987  0073                     ___ftpack@arg:	
   988                           ; 2 bytes @ 0x3
   989                           
   990  0073                     ___ftneg@f1:	
   991                           ; 3 bytes @ 0x3
   992                           
   993                           
   994                           ; 3 bytes @ 0x3
   995  0073                     	ds	1
   996  0074                     ??_I2C_Master_Init:
   997  0074                     ??_Write_USART_String:	
   998                           ; 1 bytes @ 0x4
   999                           
  1000  0074                     ___llmod@counter:	
  1001                           ; 1 bytes @ 0x4
  1002                           
  1003  0074                     isdigit@c:	
  1004                           ; 1 bytes @ 0x4
  1005                           
  1006  0074                     USART_Init@x:	
  1007                           ; 1 bytes @ 0x4
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x4
  1011  0074                     	ds	1
  1012  0075                     Write_USART_String@a:
  1013  0075                     ___wmul@multiplicand:	
  1014                           ; 1 bytes @ 0x5
  1015                           
  1016  0075                     ___awmod@dividend:	
  1017                           ; 2 bytes @ 0x5
  1018                           
  1019  0075                     ___lwmod@dividend:	
  1020                           ; 2 bytes @ 0x5
  1021                           
  1022                           
  1023                           ; 2 bytes @ 0x5
  1024  0075                     	ds	1
  1025  0076                     ??___ftneg:
  1026  0076                     Write_USART_String@i:	
  1027                           ; 1 bytes @ 0x6
  1028                           
  1029  0076                     ___ftpack@exp:	
  1030                           ; 1 bytes @ 0x6
  1031                           
  1032                           
  1033                           ; 1 bytes @ 0x6
  1034  0076                     	ds	1
  1035  0077                     ??___wmul:
  1036  0077                     ??___awmod:	
  1037                           ; 1 bytes @ 0x7
  1038                           
  1039  0077                     ??___lwmod:	
  1040                           ; 1 bytes @ 0x7
  1041                           
  1042  0077                     ___ftpack@sign:	
  1043                           ; 1 bytes @ 0x7
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0x7
  1047  0077                     	ds	1
  1048  0078                     ??___ftsub:
  1049                           
  1050                           	psect	cstackBANK0
  1051  0020                     __pcstackBANK0:	
  1052                           ; 1 bytes @ 0x8
  1053                           
  1054  0020                     ?___ftge:
  1055  0020                     ??___ftpack:	
  1056                           ; 1 bit 
  1057                           
  1058  0020                     ?__tdiv_to_l_:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0020                     ?__div_to_l_:	
  1062                           ; 4 bytes @ 0x0
  1063                           
  1064  0020                     ?___lldiv:	
  1065                           ; 4 bytes @ 0x0
  1066                           
  1067  0020                     ?___aldiv:	
  1068                           ; 4 bytes @ 0x0
  1069                           
  1070  0020                     ?___llmod:	
  1071                           ; 4 bytes @ 0x0
  1072                           
  1073  0020                     ___awmod@counter:	
  1074                           ; 4 bytes @ 0x0
  1075                           
  1076  0020                     ___lwmod@counter:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0020                     ___wmul@product:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0020                     __div_to_l_@f1:	
  1083                           ; 2 bytes @ 0x0
  1084                           
  1085  0020                     __tdiv_to_l_@f1:	
  1086                           ; 3 bytes @ 0x0
  1087                           
  1088  0020                     ___ftge@ff1:	
  1089                           ; 3 bytes @ 0x0
  1090                           
  1091  0020                     ___lldiv@divisor:	
  1092                           ; 3 bytes @ 0x0
  1093                           
  1094  0020                     ___aldiv@divisor:	
  1095                           ; 4 bytes @ 0x0
  1096                           
  1097  0020                     ___llmod@divisor:	
  1098                           ; 4 bytes @ 0x0
  1099                           
  1100                           
  1101                           ; 4 bytes @ 0x0
  1102  0020                     	ds	1
  1103  0021                     ?___lwdiv:
  1104  0021                     ___awmod@sign:	
  1105                           ; 2 bytes @ 0x1
  1106                           
  1107  0021                     ___lwdiv@divisor:	
  1108                           ; 1 bytes @ 0x1
  1109                           
  1110                           
  1111                           ; 2 bytes @ 0x1
  1112  0021                     	ds	1
  1113  0022                     ?___awdiv:
  1114  0022                     ___awdiv@divisor:	
  1115                           ; 2 bytes @ 0x2
  1116                           
  1117                           
  1118                           ; 2 bytes @ 0x2
  1119  0022                     	ds	1
  1120  0023                     ?___lltoft:
  1121  0023                     ___lwdiv@dividend:	
  1122                           ; 3 bytes @ 0x3
  1123                           
  1124  0023                     __div_to_l_@f2:	
  1125                           ; 2 bytes @ 0x3
  1126                           
  1127  0023                     __tdiv_to_l_@f2:	
  1128                           ; 3 bytes @ 0x3
  1129                           
  1130  0023                     ___ftge@ff2:	
  1131                           ; 3 bytes @ 0x3
  1132                           
  1133  0023                     ___lltoft@c:	
  1134                           ; 3 bytes @ 0x3
  1135                           
  1136                           
  1137                           ; 4 bytes @ 0x3
  1138  0023                     	ds	1
  1139  0024                     ___awdiv@dividend:
  1140  0024                     ___lldiv@dividend:	
  1141                           ; 2 bytes @ 0x4
  1142                           
  1143  0024                     ___aldiv@dividend:	
  1144                           ; 4 bytes @ 0x4
  1145                           
  1146  0024                     ___llmod@dividend:	
  1147                           ; 4 bytes @ 0x4
  1148                           
  1149                           
  1150                           ; 4 bytes @ 0x4
  1151  0024                     	ds	1
  1152  0025                     ??___lwdiv:
  1153                           
  1154                           ; 1 bytes @ 0x5
  1155  0025                     	ds	1
  1156  0026                     ??__div_to_l_:
  1157  0026                     ??___awdiv:	
  1158                           ; 1 bytes @ 0x6
  1159                           
  1160  0026                     ___lwdiv@counter:	
  1161                           ; 1 bytes @ 0x6
  1162                           
  1163  0026                     __tdiv_to_l_@quot:	
  1164                           ; 1 bytes @ 0x6
  1165                           
  1166                           
  1167                           ; 4 bytes @ 0x6
  1168  0026                     	ds	1
  1169  0027                     ??___lltoft:
  1170  0027                     ___awdiv@counter:	
  1171                           ; 1 bytes @ 0x7
  1172                           
  1173  0027                     ___lwdiv@quotient:	
  1174                           ; 1 bytes @ 0x7
  1175                           
  1176                           
  1177                           ; 2 bytes @ 0x7
  1178  0027                     	ds	1
  1179  0028                     ___aldiv@counter:
  1180  0028                     ___awdiv@sign:	
  1181                           ; 1 bytes @ 0x8
  1182                           
  1183  0028                     ___lltoft@exp:	
  1184                           ; 1 bytes @ 0x8
  1185                           
  1186  0028                     ___lldiv@quotient:	
  1187                           ; 1 bytes @ 0x8
  1188                           
  1189                           
  1190                           ; 4 bytes @ 0x8
  1191  0028                     	ds	1
  1192  0029                     ___aldiv@sign:
  1193  0029                     ___awdiv@quotient:	
  1194                           ; 1 bytes @ 0x9
  1195                           
  1196                           
  1197                           ; 2 bytes @ 0x9
  1198  0029                     	ds	1
  1199  002A                     __tdiv_to_l_@cntr:
  1200  002A                     ___aldiv@quotient:	
  1201                           ; 1 bytes @ 0xA
  1202                           
  1203                           
  1204                           ; 4 bytes @ 0xA
  1205  002A                     	ds	1
  1206  002B                     ?___bmul:
  1207  002B                     ___bmul@multiplicand:	
  1208                           ; 1 bytes @ 0xB
  1209                           
  1210  002B                     __tdiv_to_l_@exp1:	
  1211                           ; 1 bytes @ 0xB
  1212                           
  1213                           
  1214                           ; 1 bytes @ 0xB
  1215  002B                     	ds	1
  1216  002C                     ??___bmul:
  1217  002C                     ___lldiv@counter:	
  1218                           ; 1 bytes @ 0xC
  1219                           
  1220                           
  1221                           ; 1 bytes @ 0xC
  1222  002C                     	ds	1
  1223  002D                     ?_I2C_Master_Init:
  1224  002D                     ___bmul@product:	
  1225                           ; 1 bytes @ 0xD
  1226                           
  1227  002D                     I2C_Master_Init@c:	
  1228                           ; 1 bytes @ 0xD
  1229                           
  1230                           
  1231                           ; 4 bytes @ 0xD
  1232  002D                     	ds	1
  1233  002E                     ?_USART_Init:
  1234  002E                     ___bmul@multiplier:	
  1235                           ; 1 bytes @ 0xE
  1236                           
  1237  002E                     USART_Init@baudrate:	
  1238                           ; 1 bytes @ 0xE
  1239                           
  1240  002E                     __div_to_l_@quot:	
  1241                           ; 4 bytes @ 0xE
  1242                           
  1243                           
  1244                           ; 4 bytes @ 0xE
  1245  002E                     	ds	1
  1246  002F                     ?___ftmul:
  1247  002F                     ___ftmul@f1:	
  1248                           ; 3 bytes @ 0xF
  1249                           
  1250                           
  1251                           ; 3 bytes @ 0xF
  1252  002F                     	ds	3
  1253  0032                     ??_USART_Init:
  1254  0032                     __div_to_l_@cntr:	
  1255                           ; 1 bytes @ 0x12
  1256                           
  1257  0032                     ___ftmul@f2:	
  1258                           ; 1 bytes @ 0x12
  1259                           
  1260                           
  1261                           ; 3 bytes @ 0x12
  1262  0032                     	ds	1
  1263  0033                     __div_to_l_@exp1:
  1264                           
  1265                           ; 1 bytes @ 0x13
  1266  0033                     	ds	2
  1267  0035                     ??___ftmul:
  1268                           
  1269                           ; 1 bytes @ 0x15
  1270  0035                     	ds	4
  1271  0039                     ___ftmul@exp:
  1272                           
  1273                           ; 1 bytes @ 0x19
  1274  0039                     	ds	1
  1275  003A                     ___ftmul@f3_as_product:
  1276                           
  1277                           ; 3 bytes @ 0x1A
  1278  003A                     	ds	3
  1279  003D                     ___ftmul@cntr:
  1280                           
  1281                           ; 1 bytes @ 0x1D
  1282  003D                     	ds	1
  1283  003E                     ___ftmul@sign:
  1284                           
  1285                           ; 1 bytes @ 0x1E
  1286  003E                     	ds	1
  1287  003F                     ?_fround:
  1288  003F                     ?_scale:	
  1289                           ; 3 bytes @ 0x1F
  1290                           
  1291                           
  1292                           ; 3 bytes @ 0x1F
  1293  003F                     	ds	3
  1294  0042                     ??_fround:
  1295  0042                     ??_scale:	
  1296                           ; 1 bytes @ 0x22
  1297                           
  1298                           
  1299                           ; 1 bytes @ 0x22
  1300  0042                     	ds	2
  1301  0044                     _scale$959:
  1302                           
  1303                           ; 3 bytes @ 0x24
  1304  0044                     	ds	3
  1305  0047                     scale@scl:
  1306                           
  1307                           ; 1 bytes @ 0x27
  1308  0047                     	ds	1
  1309  0048                     ?___fttol:
  1310  0048                     ___fttol@f1:	
  1311                           ; 4 bytes @ 0x28
  1312                           
  1313  0048                     _fround$958:	
  1314                           ; 3 bytes @ 0x28
  1315                           
  1316                           
  1317                           ; 3 bytes @ 0x28
  1318  0048                     	ds	3
  1319  004B                     _fround$957:
  1320                           
  1321                           ; 3 bytes @ 0x2B
  1322  004B                     	ds	1
  1323  004C                     ??___fttol:
  1324                           
  1325                           ; 1 bytes @ 0x2C
  1326  004C                     	ds	2
  1327  004E                     fround@prec:
  1328                           
  1329                           ; 1 bytes @ 0x2E
  1330  004E                     	ds	1
  1331  004F                     ?___ftadd:
  1332  004F                     ___ftadd@f1:	
  1333                           ; 3 bytes @ 0x2F
  1334                           
  1335                           
  1336                           ; 3 bytes @ 0x2F
  1337  004F                     	ds	1
  1338  0050                     ___fttol@sign1:
  1339                           
  1340                           ; 1 bytes @ 0x30
  1341  0050                     	ds	1
  1342  0051                     ___fttol@lval:
  1343                           
  1344                           ; 4 bytes @ 0x31
  1345  0051                     	ds	1
  1346  0052                     ___ftadd@f2:
  1347                           
  1348                           ; 3 bytes @ 0x32
  1349  0052                     	ds	3
  1350  0055                     ??___ftadd:
  1351  0055                     ___fttol@exp1:	
  1352                           ; 1 bytes @ 0x35
  1353                           
  1354                           
  1355                           ; 1 bytes @ 0x35
  1356  0055                     	ds	4
  1357  0059                     ___ftadd@sign:
  1358                           
  1359                           ; 1 bytes @ 0x39
  1360  0059                     	ds	1
  1361  005A                     ___ftadd@exp2:
  1362                           
  1363                           ; 1 bytes @ 0x3A
  1364  005A                     	ds	1
  1365  005B                     ___ftadd@exp1:
  1366                           
  1367                           ; 1 bytes @ 0x3B
  1368  005B                     	ds	1
  1369  005C                     ?___ftsub:
  1370  005C                     ___ftsub@f2:	
  1371                           ; 3 bytes @ 0x3C
  1372                           
  1373                           
  1374                           ; 3 bytes @ 0x3C
  1375  005C                     	ds	3
  1376  005F                     ___ftsub@f1:
  1377                           
  1378                           ; 3 bytes @ 0x3F
  1379  005F                     	ds	3
  1380  0062                     ?_sprintf:
  1381  0062                     sprintf@f:	
  1382                           ; 2 bytes @ 0x42
  1383                           
  1384                           
  1385                           ; 1 bytes @ 0x42
  1386  0062                     	ds	5
  1387  0067                     ??_sprintf:
  1388                           
  1389                           ; 1 bytes @ 0x47
  1390  0067                     	ds	6
  1391                           
  1392                           	psect	maintext
  1393  138A                     __pmaintext:	
  1394 ;;
  1395 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1396 ;;
  1397 ;; *************** function _main *****************
  1398 ;; Defined at:
  1399 ;;		line 64 in file "pic16f.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1408 ;; Tracked objects:
  1409 ;;		On entry : B00/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1413 ;;      Params:         0       0       0       0       0
  1414 ;;      Locals:         0       0       0       0       0
  1415 ;;      Temps:          0       0       5       0       0
  1416 ;;      Totals:         0       0       5       0       0
  1417 ;;Total ram usage:        5 bytes
  1418 ;; Hardware stack levels required when called:    6
  1419 ;; This function calls:
  1420 ;;		_I2C_Master_Init
  1421 ;;		_USART_Init
  1422 ;;		_Write_USART
  1423 ;;		_Write_USART_String
  1424 ;;		_configIO
  1425 ;;		_sprintf
  1426 ;; This function is called by:
  1427 ;;		Startup code after reset
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           
  1432                           ;psect for function _main
  1433  138A                     _main:
  1434  138A                     l4159:	
  1435                           ;incstack = 0
  1436                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1437                           
  1438                           
  1439                           ;pic16f.c: 65:     configIO();
  1440  138A  160A  158A  272C  160A  118A  	fcall	_configIO
  1441  138F                     l4161:
  1442                           
  1443                           ;pic16f.c: 66:     USART_Init(9600);
  1444  138F  3000               	movlw	0
  1445  1390  1283               	bcf	3,5	;RP0=0, select bank0
  1446  1391  1303               	bcf	3,6	;RP1=0, select bank0
  1447  1392  00B1               	movwf	USART_Init@baudrate+3
  1448  1393  3000               	movlw	0
  1449  1394  00B0               	movwf	USART_Init@baudrate+2
  1450  1395  3025               	movlw	37
  1451  1396  00AF               	movwf	USART_Init@baudrate+1
  1452  1397  3080               	movlw	128
  1453  1398  00AE               	movwf	USART_Init@baudrate
  1454  1399  160A  118A  25F7  160A  118A  	fcall	_USART_Init
  1455  139E                     l4163:
  1456                           
  1457                           ;pic16f.c: 67:     I2C_Master_Init(100000);
  1458  139E  3000               	movlw	0
  1459  139F  1283               	bcf	3,5	;RP0=0, select bank0
  1460  13A0  1303               	bcf	3,6	;RP1=0, select bank0
  1461  13A1  00B0               	movwf	I2C_Master_Init@c+3
  1462  13A2  3001               	movlw	1
  1463  13A3  00AF               	movwf	I2C_Master_Init@c+2
  1464  13A4  3086               	movlw	134
  1465  13A5  00AE               	movwf	I2C_Master_Init@c+1
  1466  13A6  30A0               	movlw	160
  1467  13A7  00AD               	movwf	I2C_Master_Init@c
  1468  13A8  160A  158A  27C6  160A  118A  	fcall	_I2C_Master_Init
  1469  13AD                     l4165:
  1470                           
  1471                           ;pic16f.c: 75:         temperatura = aht_GetHumidity;
  1472  13AD  30C4               	movlw	(low (0-fpbase))& (0+255)
  1473  13AE  1683               	bsf	3,5	;RP0=1, select bank1
  1474  13AF  1303               	bcf	3,6	;RP1=0, select bank1
  1475  13B0  00B9               	movwf	??_main^(0+128)
  1476  13B1  0839               	movf	??_main^(0+128),w
  1477  13B2  1283               	bcf	3,5	;RP0=0, select bank0
  1478  13B3  1303               	bcf	3,6	;RP1=0, select bank0
  1479  13B4  00ED               	movwf	_temperatura
  1480  13B5                     l4167:
  1481                           
  1482                           ;pic16f.c: 76:         humedad = aht_GetTemperature;
  1483  13B5  30C4               	movlw	(low (0-fpbase))& (0+255)
  1484  13B6  1683               	bsf	3,5	;RP0=1, select bank1
  1485  13B7  1303               	bcf	3,6	;RP1=0, select bank1
  1486  13B8  00B9               	movwf	??_main^(0+128)
  1487  13B9  0839               	movf	??_main^(0+128),w
  1488  13BA  00C6               	movwf	_humedad^(0+128)
  1489  13BB                     l4169:
  1490                           
  1491                           ;pic16f.c: 79:         Write_USART_String("T1   H1   \n");
  1492  13BB  3086               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1493  13BC  160A  158A  277F  160A  118A  	fcall	_Write_USART_String
  1494  13C1                     l4171:
  1495                           
  1496                           ;pic16f.c: 80:         sprintf(datos, "%2.1f   %2.1f ", temperatura,humedad);
  1497  13C1  3077               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1498  13C2  1683               	bsf	3,5	;RP0=1, select bank1
  1499  13C3  1303               	bcf	3,6	;RP1=0, select bank1
  1500  13C4  00B9               	movwf	??_main^(0+128)
  1501  13C5  0839               	movf	??_main^(0+128),w
  1502  13C6  1283               	bcf	3,5	;RP0=0, select bank0
  1503  13C7  1303               	bcf	3,6	;RP1=0, select bank0
  1504  13C8  00E2               	movwf	sprintf@f
  1505  13C9  086D               	movf	_temperatura,w
  1506  13CA  1683               	bsf	3,5	;RP0=1, select bank1
  1507  13CB  1303               	bcf	3,6	;RP1=0, select bank1
  1508  13CC  00BA               	movwf	(??_main+1)^(0+128)
  1509  13CD  01BB               	clrf	((??_main+1)^(0+128)+1)
  1510  13CE  083A               	movf	(??_main+1)^(0+128),w
  1511  13CF  1283               	bcf	3,5	;RP0=0, select bank0
  1512  13D0  1303               	bcf	3,6	;RP1=0, select bank0
  1513  13D1  00E3               	movwf	?_sprintf+1
  1514  13D2  1683               	bsf	3,5	;RP0=1, select bank1
  1515  13D3  1303               	bcf	3,6	;RP1=0, select bank1
  1516  13D4  083B               	movf	(??_main+2)^(0+128),w
  1517  13D5  1283               	bcf	3,5	;RP0=0, select bank0
  1518  13D6  1303               	bcf	3,6	;RP1=0, select bank0
  1519  13D7  00E4               	movwf	?_sprintf+2
  1520  13D8  1683               	bsf	3,5	;RP0=1, select bank1
  1521  13D9  1303               	bcf	3,6	;RP1=0, select bank1
  1522  13DA  0846               	movf	_humedad^(0+128),w
  1523  13DB  00BC               	movwf	(??_main+3)^(0+128)
  1524  13DC  01BD               	clrf	((??_main+3)^(0+128)+1)
  1525  13DD  083C               	movf	(??_main+3)^(0+128),w
  1526  13DE  1283               	bcf	3,5	;RP0=0, select bank0
  1527  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  1528  13E0  00E5               	movwf	?_sprintf+3
  1529  13E1  1683               	bsf	3,5	;RP0=1, select bank1
  1530  13E2  1303               	bcf	3,6	;RP1=0, select bank1
  1531  13E3  083D               	movf	(??_main+4)^(0+128),w
  1532  13E4  1283               	bcf	3,5	;RP0=0, select bank0
  1533  13E5  1303               	bcf	3,6	;RP1=0, select bank0
  1534  13E6  00E6               	movwf	?_sprintf+4
  1535  13E7  30C7               	movlw	(low (_datos| 0))& (0+255)
  1536  13E8  120A  158A  2502  160A  118A  	fcall	_sprintf
  1537  13ED                     l4173:
  1538                           
  1539                           ;pic16f.c: 81:         Write_USART(datos);
  1540  13ED  30C7               	movlw	(low _datos)& (0+255)
  1541  13EE  160A  158A  26FF  160A  118A  	fcall	_Write_USART
  1542  13F3                     l4175:
  1543                           
  1544                           ;pic16f.c: 82:         Write_USART(13);
  1545  13F3  300D               	movlw	13
  1546  13F4  160A  158A  26FF  160A  118A  	fcall	_Write_USART
  1547  13F9                     l4177:
  1548                           
  1549                           ;pic16f.c: 83:         Write_USART(10);
  1550  13F9  300A               	movlw	10
  1551  13FA  160A  158A  26FF  160A  118A  	fcall	_Write_USART
  1552  13FF                     l4179:
  1553                           
  1554                           ;pic16f.c: 84:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1555  13FF  3006               	movlw	6
  1556  1400  1683               	bsf	3,5	;RP0=1, select bank1
  1557  1401  1303               	bcf	3,6	;RP1=0, select bank1
  1558  1402  00BB               	movwf	(??_main^(0+128)+2)
  1559  1403  3013               	movlw	19
  1560  1404  00BA               	movwf	(??_main^(0+128)+1)
  1561  1405  30AD               	movlw	173
  1562  1406  00B9               	movwf	??_main^(0+128)
  1563  1407                     u6907:
  1564  1407  0BB9               	decfsz	??_main^(0+128),f
  1565  1408  2C07               	goto	u6907
  1566  1409  0BBA               	decfsz	(??_main^(0+128)+1),f
  1567  140A  2C07               	goto	u6907
  1568  140B  0BBB               	decfsz	(??_main^(0+128)+2),f
  1569  140C  2C07               	goto	u6907
  1570  140D  2BAD               	goto	l4165
  1571  140E  120A  118A  280C   	ljmp	start
  1572  1411                     __end_of_main:
  1573                           
  1574                           	psect	text1
  1575  0D02                     __ptext1:	
  1576 ;; *************** function _sprintf *****************
  1577 ;; Defined at:
  1578 ;;		line 505 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  sp              1    wreg     PTR unsigned char 
  1581 ;;		 -> datos(20), 
  1582 ;;  f               1   66[BANK0 ] PTR const unsigned char 
  1583 ;;		 -> STR_2(15), 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  sp              1   18[BANK1 ] PTR unsigned char 
  1586 ;;		 -> datos(20), 
  1587 ;;  tmpval          4   12[BANK1 ] struct .
  1588 ;;  val             4    4[BANK1 ] unsigned long 
  1589 ;;  fval            3   19[BANK1 ] unsigned long 
  1590 ;;  prec            2   22[BANK1 ] int 
  1591 ;;  eexp            2   16[BANK1 ] int 
  1592 ;;  width           2   10[BANK1 ] int 
  1593 ;;  flag            2    8[BANK1 ] unsigned short 
  1594 ;;  cp              2    0        PTR const unsigned char 
  1595 ;;  len             2    0        unsigned int 
  1596 ;;  c               1   24[BANK1 ] unsigned char 
  1597 ;;  ap              1    3[BANK1 ] PTR void [1]
  1598 ;;		 -> ?_sprintf(2), 
  1599 ;;  d               1    0        unsigned char 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  2   66[BANK0 ] int 
  1602 ;; Registers used:
  1603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1609 ;;      Params:         0       5       0       0       0
  1610 ;;      Locals:         0       0      25       0       0
  1611 ;;      Temps:          0       6       0       0       0
  1612 ;;      Totals:         0      11      25       0       0
  1613 ;;Total ram usage:       36 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    5
  1616 ;; This function calls:
  1617 ;;		___awdiv
  1618 ;;		___ftadd
  1619 ;;		___ftge
  1620 ;;		___ftmul
  1621 ;;		___ftneg
  1622 ;;		___ftsub
  1623 ;;		___fttol
  1624 ;;		___lldiv
  1625 ;;		___llmod
  1626 ;;		___lltoft
  1627 ;;		___wmul
  1628 ;;		__div_to_l_
  1629 ;;		__tdiv_to_l_
  1630 ;;		_fround
  1631 ;;		_isdigit
  1632 ;;		_scale
  1633 ;; This function is called by:
  1634 ;;		_main
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           
  1639                           ;psect for function _sprintf
  1640  0D02                     _sprintf:
  1641                           
  1642                           ;incstack = 0
  1643                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1644                           ;sprintf@sp stored from wreg
  1645  0D02  1683               	bsf	3,5	;RP0=1, select bank1
  1646  0D03  1303               	bcf	3,6	;RP1=0, select bank1
  1647  0D04  00B2               	movwf	sprintf@sp^(0+128)
  1648  0D05                     l3899:
  1649                           
  1650                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const ch
      +                          ar * f, ...);D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 506: {;D:\MPLAB XC8 
      +                          compiler\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\MPLAB XC8 compiler\pic\so
      +                          urces\c90\common\doprnt.c: 512:  char c;;D:\MPLAB XC8 compiler\pic\sources\c90\common\do
      +                          prnt.c: 514:  int width;;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 517:  in
      +                          t prec;;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 525:  unsigned short flag
      +                          ;
  1651  0D05  3063               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1652  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  1654  0D08  00E7               	movwf	??_sprintf
  1655  0D09  0867               	movf	??_sprintf,w
  1656  0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  1657  0D0B  1303               	bcf	3,6	;RP1=0, select bank1
  1658  0D0C  00A3               	movwf	sprintf@ap^(0+128)
  1659  0D0D                     L1:
  1660                           
  1661                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1662  0D0D  120A  118A  2E33   	goto	l4147
  1663  0D10                     l3901:
  1664                           
  1665                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1666  0D10  3025               	movlw	37
  1667  0D11  0638               	xorwf	sprintf@c^(0+128),w
  1668  0D12  1903               	btfsc	3,2
  1669  0D13  2D15               	goto	u6331
  1670  0D14  2D16               	goto	u6330
  1671  0D15                     u6331:
  1672  0D15  2D2A               	goto	l3907
  1673  0D16                     u6330:
  1674  0D16                     l3903:
  1675                           
  1676                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 557:   {;D:\MPLAB XC8 compiler\p
      +                          ic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1677  0D16  0838               	movf	sprintf@c^(0+128),w
  1678  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  1679  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  1680  0D19  00E7               	movwf	??_sprintf
  1681  0D1A  1683               	bsf	3,5	;RP0=1, select bank1
  1682  0D1B  1303               	bcf	3,6	;RP1=0, select bank1
  1683  0D1C  0832               	movf	sprintf@sp^(0+128),w
  1684  0D1D  0084               	movwf	4
  1685  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0D20  0867               	movf	??_sprintf,w
  1688  0D21  1383               	bcf	3,7	;select IRP bank0
  1689  0D22  0080               	movwf	0
  1690  0D23                     l3905:
  1691  0D23  3001               	movlw	1
  1692  0D24  00E7               	movwf	??_sprintf
  1693  0D25  0867               	movf	??_sprintf,w
  1694  0D26  1683               	bsf	3,5	;RP0=1, select bank1
  1695  0D27  1303               	bcf	3,6	;RP1=0, select bank1
  1696  0D28  07B2               	addwf	sprintf@sp^(0+128),f
  1697                           
  1698                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 559:    continue;
  1699  0D29  2D0D               	goto	L1
  1700  0D2A                     l3907:
  1701                           
  1702                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1703  0D2A  01AA               	clrf	sprintf@width^(0+128)
  1704  0D2B  01AB               	clrf	(sprintf@width+1)^(0+128)
  1705                           
  1706                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1707  0D2C  01A8               	clrf	sprintf@flag^(0+128)
  1708  0D2D  01A9               	clrf	(sprintf@flag+1)^(0+128)
  1709  0D2E                     l3909:
  1710                           
  1711                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)*f))
      +                           {
  1712  0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0D30  0862               	movf	sprintf@f,w
  1715  0D31  0084               	movwf	4
  1716  0D32  160A  118A  2000  120A  158A  	fcall	stringdir
  1717  0D37  160A  158A  271A  120A  158A  	fcall	_isdigit
  1718  0D3C  1C03               	btfss	3,0
  1719  0D3D  2D3F               	goto	u6341
  1720  0D3E  2D40               	goto	u6340
  1721  0D3F                     u6341:
  1722  0D3F  2D8A               	goto	l3921
  1723  0D40                     u6340:
  1724  0D40                     l3911:
  1725                           
  1726                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  1727  0D40  1683               	bsf	3,5	;RP0=1, select bank1
  1728  0D41  1303               	bcf	3,6	;RP1=0, select bank1
  1729  0D42  01AA               	clrf	sprintf@width^(0+128)
  1730  0D43  01AB               	clrf	(sprintf@width+1)^(0+128)
  1731  0D44                     l3913:
  1732                           
  1733                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  1734  0D44  300A               	movlw	10
  1735  0D45  00F3               	movwf	___wmul@multiplier
  1736  0D46  3000               	movlw	0
  1737  0D47  00F4               	movwf	___wmul@multiplier+1
  1738  0D48  1683               	bsf	3,5	;RP0=1, select bank1
  1739  0D49  1303               	bcf	3,6	;RP1=0, select bank1
  1740  0D4A  082B               	movf	(sprintf@width+1)^(0+128),w
  1741  0D4B  00F6               	movwf	___wmul@multiplicand+1
  1742  0D4C  082A               	movf	sprintf@width^(0+128),w
  1743  0D4D  00F5               	movwf	___wmul@multiplicand
  1744  0D4E  120A  158A  2001  120A  158A  	fcall	___wmul
  1745  0D53  0874               	movf	?___wmul+1,w
  1746  0D54  1683               	bsf	3,5	;RP0=1, select bank1
  1747  0D55  1303               	bcf	3,6	;RP1=0, select bank1
  1748  0D56  00AB               	movwf	(sprintf@width+1)^(0+128)
  1749  0D57  0873               	movf	?___wmul,w
  1750  0D58  00AA               	movwf	sprintf@width^(0+128)
  1751  0D59                     l3915:
  1752                           
  1753                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - '0';
  1754  0D59  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0D5B  0862               	movf	sprintf@f,w
  1757  0D5C  0084               	movwf	4
  1758  0D5D  160A  118A  2000  120A  158A  	fcall	stringdir
  1759  0D62  3ED0               	addlw	208
  1760  0D63  00E7               	movwf	??_sprintf
  1761  0D64  30FF               	movlw	255
  1762  0D65  1803               	skipnc
  1763  0D66  3000               	movlw	0
  1764  0D67  00E8               	movwf	??_sprintf+1
  1765  0D68  0867               	movf	??_sprintf,w
  1766  0D69  1683               	bsf	3,5	;RP0=1, select bank1
  1767  0D6A  1303               	bcf	3,6	;RP1=0, select bank1
  1768  0D6B  07AA               	addwf	sprintf@width^(0+128),f
  1769  0D6C  1803               	skipnc
  1770  0D6D  0AAB               	incf	(sprintf@width+1)^(0+128),f
  1771  0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  1772  0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  1773  0D70  0868               	movf	??_sprintf+1,w
  1774  0D71  1683               	bsf	3,5	;RP0=1, select bank1
  1775  0D72  1303               	bcf	3,6	;RP1=0, select bank1
  1776  0D73  07AB               	addwf	(sprintf@width+1)^(0+128),f
  1777  0D74                     l3917:
  1778  0D74  3001               	movlw	1
  1779  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  1780  0D76  1303               	bcf	3,6	;RP1=0, select bank0
  1781  0D77  00E7               	movwf	??_sprintf
  1782  0D78  0867               	movf	??_sprintf,w
  1783  0D79  07E2               	addwf	sprintf@f,f
  1784  0D7A                     l3919:
  1785                           
  1786                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((unsigne
      +                          d)*f));
  1787  0D7A  0862               	movf	sprintf@f,w
  1788  0D7B  0084               	movwf	4
  1789  0D7C  160A  118A  2000  120A  158A  	fcall	stringdir
  1790  0D81  160A  158A  271A  120A  158A  	fcall	_isdigit
  1791  0D86  1803               	btfsc	3,0
  1792  0D87  2D89               	goto	u6351
  1793  0D88  2D8A               	goto	u6350
  1794  0D89                     u6351:
  1795  0D89  2D44               	goto	l3913
  1796  0D8A                     u6350:
  1797  0D8A                     l3921:
  1798                           
  1799                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
  1800  0D8A  1283               	bcf	3,5	;RP0=0, select bank0
  1801  0D8B  1303               	bcf	3,6	;RP1=0, select bank0
  1802  0D8C  0862               	movf	sprintf@f,w
  1803  0D8D  0084               	movwf	4
  1804  0D8E  160A  118A  2000  120A  158A  	fcall	stringdir
  1805  0D93  3A2E               	xorlw	46
  1806  0D94  1D03               	skipz
  1807  0D95  2D97               	goto	u6361
  1808  0D96  2D98               	goto	u6360
  1809  0D97                     u6361:
  1810  0D97  2DEE               	goto	l3937
  1811  0D98                     u6360:
  1812  0D98                     l3923:
  1813                           
  1814                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 629:    flag |= 0x4000;
  1815  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  1816  0D99  1303               	bcf	3,6	;RP1=0, select bank1
  1817  0D9A  1729               	bsf	(sprintf@flag^(0+128)+1),6
  1818  0D9B                     l3925:
  1819                           
  1820                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 630:    f++;
  1821  0D9B  3001               	movlw	1
  1822  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  1823  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  1824  0D9E  00E7               	movwf	??_sprintf
  1825  0D9F  0867               	movf	??_sprintf,w
  1826  0DA0  07E2               	addwf	sprintf@f,f
  1827  0DA1                     l3927:
  1828                           
  1829                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 644:    {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1830  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  1831  0DA2  1303               	bcf	3,6	;RP1=0, select bank1
  1832  0DA3  01B6               	clrf	sprintf@prec^(0+128)
  1833  0DA4  01B7               	clrf	(sprintf@prec+1)^(0+128)
  1834                           
  1835                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned
      +                          )*f)) {
  1836  0DA5  2DDC               	goto	l3935
  1837  0DA6                     l3929:
  1838                           
  1839                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  1840  0DA6  300A               	movlw	10
  1841  0DA7  00F3               	movwf	___wmul@multiplier
  1842  0DA8  3000               	movlw	0
  1843  0DA9  00F4               	movwf	___wmul@multiplier+1
  1844  0DAA  1683               	bsf	3,5	;RP0=1, select bank1
  1845  0DAB  1303               	bcf	3,6	;RP1=0, select bank1
  1846  0DAC  0837               	movf	(sprintf@prec+1)^(0+128),w
  1847  0DAD  00F6               	movwf	___wmul@multiplicand+1
  1848  0DAE  0836               	movf	sprintf@prec^(0+128),w
  1849  0DAF  00F5               	movwf	___wmul@multiplicand
  1850  0DB0  120A  158A  2001  120A  158A  	fcall	___wmul
  1851  0DB5  0874               	movf	?___wmul+1,w
  1852  0DB6  1683               	bsf	3,5	;RP0=1, select bank1
  1853  0DB7  1303               	bcf	3,6	;RP1=0, select bank1
  1854  0DB8  00B7               	movwf	(sprintf@prec+1)^(0+128)
  1855  0DB9  0873               	movf	?___wmul,w
  1856  0DBA  00B6               	movwf	sprintf@prec^(0+128)
  1857  0DBB                     l3931:
  1858                           
  1859                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0';
  1860  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  1861  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  1862  0DBD  0862               	movf	sprintf@f,w
  1863  0DBE  0084               	movwf	4
  1864  0DBF  160A  118A  2000  120A  158A  	fcall	stringdir
  1865  0DC4  3ED0               	addlw	208
  1866  0DC5  00E7               	movwf	??_sprintf
  1867  0DC6  30FF               	movlw	255
  1868  0DC7  1803               	skipnc
  1869  0DC8  3000               	movlw	0
  1870  0DC9  00E8               	movwf	??_sprintf+1
  1871  0DCA  0867               	movf	??_sprintf,w
  1872  0DCB  1683               	bsf	3,5	;RP0=1, select bank1
  1873  0DCC  1303               	bcf	3,6	;RP1=0, select bank1
  1874  0DCD  07B6               	addwf	sprintf@prec^(0+128),f
  1875  0DCE  1803               	skipnc
  1876  0DCF  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  1877  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  1878  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  1879  0DD2  0868               	movf	??_sprintf+1,w
  1880  0DD3  1683               	bsf	3,5	;RP0=1, select bank1
  1881  0DD4  1303               	bcf	3,6	;RP1=0, select bank1
  1882  0DD5  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  1883  0DD6                     l3933:
  1884  0DD6  3001               	movlw	1
  1885  0DD7  1283               	bcf	3,5	;RP0=0, select bank0
  1886  0DD8  1303               	bcf	3,6	;RP1=0, select bank0
  1887  0DD9  00E7               	movwf	??_sprintf
  1888  0DDA  0867               	movf	??_sprintf,w
  1889  0DDB  07E2               	addwf	sprintf@f,f
  1890  0DDC                     l3935:
  1891                           
  1892                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned
      +                          )*f)) {
  1893  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  1894  0DDD  0862               	movf	sprintf@f,w
  1895  0DDE  0084               	movwf	4
  1896  0DDF  160A  118A  2000  120A  158A  	fcall	stringdir
  1897  0DE4  160A  158A  271A  120A  158A  	fcall	_isdigit
  1898  0DE9  1803               	btfsc	3,0
  1899  0DEA  2DEC               	goto	u6371
  1900  0DEB  2DED               	goto	u6370
  1901  0DEC                     u6371:
  1902  0DEC  2DA6               	goto	l3929
  1903  0DED                     u6370:
  1904  0DED  2DF8               	goto	l3943
  1905  0DEE                     l3937:
  1906                           
  1907                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1908  0DEE  1683               	bsf	3,5	;RP0=1, select bank1
  1909  0DEF  1303               	bcf	3,6	;RP1=0, select bank1
  1910  0DF0  01B6               	clrf	sprintf@prec^(0+128)
  1911  0DF1  01B7               	clrf	(sprintf@prec+1)^(0+128)
  1912  0DF2                     l3939:
  1913                           
  1914                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 654:    flag |= 0x1000;
  1915  0DF2  1629               	bsf	(sprintf@flag^(0+128)+1),4
  1916  0DF3  2DF8               	goto	l3943
  1917  0DF4                     l360:	
  1918                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1919                           
  1920                           
  1921                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 689:    flag |= 0x400;
  1922  0DF4  1683               	bsf	3,5	;RP0=1, select bank1
  1923  0DF5  1303               	bcf	3,6	;RP1=0, select bank1
  1924  0DF6  1529               	bsf	(sprintf@flag^(0+128)+1),2
  1925                           
  1926                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 690:    break;
  1927  0DF7  2E18               	goto	l3945
  1928  0DF8                     l3943:
  1929  0DF8  3001               	movlw	1
  1930  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  1931  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  1932  0DFB  07E2               	addwf	sprintf@f,f
  1933  0DFC  30FF               	movlw	-1
  1934  0DFD  0762               	addwf	sprintf@f,w
  1935  0DFE  0084               	movwf	4
  1936  0DFF  160A  118A  2000  120A  158A  	fcall	stringdir
  1937  0E04  1683               	bsf	3,5	;RP0=1, select bank1
  1938  0E05  1303               	bcf	3,6	;RP1=0, select bank1
  1939  0E06  00B8               	movwf	sprintf@c^(0+128)
  1940  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  1941  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  1942  0E09  00E7               	movwf	??_sprintf
  1943  0E0A  01E8               	clrf	??_sprintf+1
  1944                           
  1945                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1946                           ; Switch size 1, requested type "simple"
  1947                           ; Number of cases is 1, Range of values is 0 to 0
  1948                           ; switch strategies available:
  1949                           ; Name         Instructions Cycles
  1950                           ; simple_byte            4     3 (average)
  1951                           ; direct_byte           11     8 (fixed)
  1952                           ; jumptable            260     6 (fixed)
  1953                           ;	Chosen strategy is simple_byte
  1954  0E0B  0868               	movf	??_sprintf+1,w
  1955  0E0C  3A00               	xorlw	0	; case 0
  1956  0E0D  1903               	skipnz
  1957  0E0E  2E10               	goto	l4285
  1958  0E0F  2D0D               	goto	L1
  1959  0E10                     l4285:
  1960                           
  1961                           ; Switch size 1, requested type "simple"
  1962                           ; Number of cases is 2, Range of values is 0 to 102
  1963                           ; switch strategies available:
  1964                           ; Name         Instructions Cycles
  1965                           ; simple_byte            7     4 (average)
  1966                           ; jumptable            260     6 (fixed)
  1967                           ;	Chosen strategy is simple_byte
  1968  0E10  0867               	movf	??_sprintf,w
  1969  0E11  3A00               	xorlw	0	; case 0
  1970  0E12  1903               	skipnz
  1971  0E13  2FFD               	goto	L3
  1972  0E14  3A66               	xorlw	102	; case 102
  1973  0E15  1903               	skipnz
  1974  0E16  2DF4               	goto	l360
  1975  0E17  2D0D               	goto	L1
  1976  0E18                     l3945:
  1977                           
  1978                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 851:   if(flag & (0x700)) {
  1979  0E18  3000               	movlw	0
  1980  0E19  0528               	andwf	sprintf@flag^(0+128),w
  1981  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  1983  0E1C  00E7               	movwf	??_sprintf
  1984  0E1D  3007               	movlw	7
  1985  0E1E  1683               	bsf	3,5	;RP0=1, select bank1
  1986  0E1F  1303               	bcf	3,6	;RP1=0, select bank1
  1987  0E20  0529               	andwf	(sprintf@flag+1)^(0+128),w
  1988  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0E22  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0E23  00E8               	movwf	??_sprintf+1
  1991  0E24  0867               	movf	??_sprintf,w
  1992  0E25  0468               	iorwf	??_sprintf+1,w
  1993  0E26  1903               	btfsc	3,2
  1994  0E27  2E29               	goto	u6381
  1995  0E28  2E2C               	goto	u6380
  1996  0E29                     u6381:
  1997  0E29  120A  118A  2D30   	goto	l4101
  1998  0E2C                     u6380:
  1999  0E2C                     l3947:
  2000                           
  2001                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 853:    if(flag & 0x1000)
  2002  0E2C  1683               	bsf	3,5	;RP0=1, select bank1
  2003  0E2D  1303               	bcf	3,6	;RP1=0, select bank1
  2004  0E2E  1E29               	btfss	(sprintf@flag+1)^(0+128),4
  2005  0E2F  2E31               	goto	u6391
  2006  0E30  2E32               	goto	u6390
  2007  0E31                     u6391:
  2008  0E31  2E36               	goto	l3951
  2009  0E32                     u6390:
  2010  0E32                     l3949:
  2011                           
  2012                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 855:     prec = 6;
  2013  0E32  3006               	movlw	6
  2014  0E33  00B6               	movwf	sprintf@prec^(0+128)
  2015  0E34  3000               	movlw	0
  2016  0E35  00B7               	movwf	(sprintf@prec^(0+128)+1)
  2017  0E36                     l3951:
  2018                           
  2019                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 856:    fval = (*(double *)__va_
      +                          arg((*(double **)ap), (double)0));
  2020  0E36  0823               	movf	sprintf@ap^(0+128),w
  2021  0E37  0084               	movwf	4
  2022  0E38  1383               	bcf	3,7	;select IRP bank0
  2023  0E39  0800               	movf	0,w
  2024  0E3A  00B3               	movwf	sprintf@fval^(0+128)
  2025  0E3B  0A84               	incf	4,f
  2026  0E3C  0800               	movf	0,w
  2027  0E3D  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2028  0E3E  0A84               	incf	4,f
  2029  0E3F  0800               	movf	0,w
  2030  0E40  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2031  0E41                     l3953:
  2032  0E41  3003               	movlw	3
  2033  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  2034  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  2035  0E44  00E7               	movwf	??_sprintf
  2036  0E45  0867               	movf	??_sprintf,w
  2037  0E46  1683               	bsf	3,5	;RP0=1, select bank1
  2038  0E47  1303               	bcf	3,6	;RP1=0, select bank1
  2039  0E48  07A3               	addwf	sprintf@ap^(0+128),f
  2040  0E49                     l3955:
  2041                           
  2042                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 857:    if(fval < 0.0) {
  2043  0E49  0833               	movf	sprintf@fval^(0+128),w
  2044  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  2045  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  2046  0E4C  00A0               	movwf	___ftge@ff1
  2047  0E4D  1683               	bsf	3,5	;RP0=1, select bank1
  2048  0E4E  1303               	bcf	3,6	;RP1=0, select bank1
  2049  0E4F  0834               	movf	(sprintf@fval+1)^(0+128),w
  2050  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0E51  1303               	bcf	3,6	;RP1=0, select bank0
  2052  0E52  00A1               	movwf	___ftge@ff1+1
  2053  0E53  1683               	bsf	3,5	;RP0=1, select bank1
  2054  0E54  1303               	bcf	3,6	;RP1=0, select bank1
  2055  0E55  0835               	movf	(sprintf@fval+2)^(0+128),w
  2056  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0E57  1303               	bcf	3,6	;RP1=0, select bank0
  2058  0E58  00A2               	movwf	___ftge@ff1+2
  2059  0E59  3000               	movlw	0
  2060  0E5A  00A3               	movwf	___ftge@ff2
  2061  0E5B  3000               	movlw	0
  2062  0E5C  00A4               	movwf	___ftge@ff2+1
  2063  0E5D  3000               	movlw	0
  2064  0E5E  00A5               	movwf	___ftge@ff2+2
  2065  0E5F  160A  118A  20CA  120A  158A  	fcall	___ftge
  2066  0E64  1803               	btfsc	3,0
  2067  0E65  2E67               	goto	u6401
  2068  0E66  2E68               	goto	u6400
  2069  0E67                     u6401:
  2070  0E67  2E81               	goto	l3961
  2071  0E68                     u6400:
  2072  0E68                     l3957:
  2073                           
  2074                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 858:     fval = -fval;
  2075  0E68  1683               	bsf	3,5	;RP0=1, select bank1
  2076  0E69  1303               	bcf	3,6	;RP1=0, select bank1
  2077  0E6A  0833               	movf	sprintf@fval^(0+128),w
  2078  0E6B  00F3               	movwf	___ftneg@f1
  2079  0E6C  0834               	movf	(sprintf@fval+1)^(0+128),w
  2080  0E6D  00F4               	movwf	___ftneg@f1+1
  2081  0E6E  0835               	movf	(sprintf@fval+2)^(0+128),w
  2082  0E6F  00F5               	movwf	___ftneg@f1+2
  2083  0E70  160A  158A  26F5  120A  158A  	fcall	___ftneg
  2084  0E75  0873               	movf	?___ftneg,w
  2085  0E76  1683               	bsf	3,5	;RP0=1, select bank1
  2086  0E77  1303               	bcf	3,6	;RP1=0, select bank1
  2087  0E78  00B3               	movwf	sprintf@fval^(0+128)
  2088  0E79  0874               	movf	?___ftneg+1,w
  2089  0E7A  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2090  0E7B  0875               	movf	?___ftneg+2,w
  2091  0E7C  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2092  0E7D                     l3959:
  2093                           
  2094                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 859:     flag |= 0x03;
  2095  0E7D  3003               	movlw	3
  2096  0E7E  04A8               	iorwf	sprintf@flag^(0+128),f
  2097  0E7F  3000               	movlw	0
  2098  0E80  04A9               	iorwf	(sprintf@flag+1)^(0+128),f
  2099  0E81                     l3961:
  2100                           
  2101                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2102  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  2103  0E82  1303               	bcf	3,6	;RP1=0, select bank1
  2104  0E83  01B0               	clrf	sprintf@eexp^(0+128)
  2105  0E84  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  2106  0E85                     l3963:
  2107                           
  2108                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 862:    if( fval!=0) {
  2109  0E85  0835               	movf	(sprintf@fval+2)^(0+128),w
  2110  0E86  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2111  0E87  0433               	iorwf	sprintf@fval^(0+128),w
  2112  0E88  1903               	skipnz
  2113  0E89  2E8B               	goto	u6411
  2114  0E8A  2E8C               	goto	u6410
  2115  0E8B                     u6411:
  2116  0E8B  2FA2               	goto	l3989
  2117  0E8C                     u6410:
  2118  0E8C                     l3965:
  2119                           
  2120                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 863:     (void)(*(&eexp) = ((*(u
      +                          nsigned long *)&fval >> 15) & 255) - 126);
  2121  0E8C  30B3               	movlw	low (sprintf@fval| 0)
  2122  0E8D  0084               	movwf	4
  2123  0E8E  1383               	bcf	3,7	;select IRP bank1
  2124  0E8F  0800               	movf	0,w
  2125  0E90  1283               	bcf	3,5	;RP0=0, select bank0
  2126  0E91  1303               	bcf	3,6	;RP1=0, select bank0
  2127  0E92  00E7               	movwf	??_sprintf
  2128  0E93  0A84               	incf	4,f
  2129  0E94  0800               	movf	0,w
  2130  0E95  00E8               	movwf	??_sprintf+1
  2131  0E96  0A84               	incf	4,f
  2132  0E97  0800               	movf	0,w
  2133  0E98  00E9               	movwf	??_sprintf+2
  2134  0E99  0A84               	incf	4,f
  2135  0E9A  0800               	movf	0,w
  2136  0E9B  00EA               	movwf	??_sprintf+3
  2137  0E9C  300F               	movlw	15
  2138  0E9D                     u6425:
  2139  0E9D  1003               	clrc
  2140  0E9E  0CEA               	rrf	??_sprintf+3,f
  2141  0E9F  0CE9               	rrf	??_sprintf+2,f
  2142  0EA0  0CE8               	rrf	??_sprintf+1,f
  2143  0EA1  0CE7               	rrf	??_sprintf,f
  2144  0EA2                     u6420:
  2145  0EA2  3EFF               	addlw	-1
  2146  0EA3  1D03               	skipz
  2147  0EA4  2E9D               	goto	u6425
  2148  0EA5  30FF               	movlw	255
  2149  0EA6  0567               	andwf	??_sprintf,w
  2150  0EA7  00EB               	movwf	??_sprintf+4
  2151  0EA8  3000               	movlw	0
  2152  0EA9  0568               	andwf	??_sprintf+1,w
  2153  0EAA  00EC               	movwf	??_sprintf+5
  2154  0EAB  086B               	movf	??_sprintf+4,w
  2155  0EAC  3E82               	addlw	130
  2156  0EAD  1683               	bsf	3,5	;RP0=1, select bank1
  2157  0EAE  1303               	bcf	3,6	;RP1=0, select bank1
  2158  0EAF  00B0               	movwf	sprintf@eexp^(0+128)
  2159  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  2160  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  2161  0EB2  086C               	movf	??_sprintf+5,w
  2162  0EB3  1803               	skipnc
  2163  0EB4  3E01               	addlw	1
  2164  0EB5  3EFF               	addlw	255
  2165  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  2166  0EB7  1303               	bcf	3,6	;RP1=0, select bank1
  2167  0EB8  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2168  0EB9                     l3967:
  2169                           
  2170                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2171  0EB9  30FF               	movlw	255
  2172  0EBA  07B0               	addwf	sprintf@eexp^(0+128),f
  2173  0EBB  1803               	skipnc
  2174  0EBC  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2175  0EBD  30FF               	movlw	255
  2176  0EBE  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2177  0EBF                     l3969:
  2178                           
  2179                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 865:     eexp *= 3;
  2180  0EBF  3003               	movlw	3
  2181  0EC0  00F3               	movwf	___wmul@multiplier
  2182  0EC1  3000               	movlw	0
  2183  0EC2  00F4               	movwf	___wmul@multiplier+1
  2184  0EC3  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2185  0EC4  00F6               	movwf	___wmul@multiplicand+1
  2186  0EC5  0830               	movf	sprintf@eexp^(0+128),w
  2187  0EC6  00F5               	movwf	___wmul@multiplicand
  2188  0EC7  120A  158A  2001  120A  158A  	fcall	___wmul
  2189  0ECC  0874               	movf	?___wmul+1,w
  2190  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  2191  0ECE  1303               	bcf	3,6	;RP1=0, select bank1
  2192  0ECF  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2193  0ED0  0873               	movf	?___wmul,w
  2194  0ED1  00B0               	movwf	sprintf@eexp^(0+128)
  2195  0ED2                     l3971:
  2196                           
  2197                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 866:     eexp /= 10;
  2198  0ED2  300A               	movlw	10
  2199  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0ED5  00A2               	movwf	___awdiv@divisor
  2202  0ED6  3000               	movlw	0
  2203  0ED7  00A3               	movwf	___awdiv@divisor+1
  2204  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  2205  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  2206  0EDA  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2207  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  2208  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  2209  0EDD  00A5               	movwf	___awdiv@dividend+1
  2210  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  2211  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  2212  0EE0  0830               	movf	sprintf@eexp^(0+128),w
  2213  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0EE3  00A4               	movwf	___awdiv@dividend
  2216  0EE4  160A  118A  229F  120A  158A  	fcall	___awdiv
  2217  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  2218  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  2219  0EEB  0823               	movf	?___awdiv+1,w
  2220  0EEC  1683               	bsf	3,5	;RP0=1, select bank1
  2221  0EED  1303               	bcf	3,6	;RP1=0, select bank1
  2222  0EEE  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2223  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  2224  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  2225  0EF1  0822               	movf	?___awdiv,w
  2226  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  2227  0EF3  1303               	bcf	3,6	;RP1=0, select bank1
  2228  0EF4  00B0               	movwf	sprintf@eexp^(0+128)
  2229  0EF5                     l3973:
  2230                           
  2231                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 867:     if(eexp < 0)
  2232  0EF5  1FB1               	btfss	(sprintf@eexp+1)^(0+128),7
  2233  0EF6  2EF8               	goto	u6431
  2234  0EF7  2EF9               	goto	u6430
  2235  0EF8                     u6431:
  2236  0EF8  2EFF               	goto	l3977
  2237  0EF9                     u6430:
  2238  0EF9                     l3975:
  2239                           
  2240                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2241  0EF9  30FF               	movlw	255
  2242  0EFA  07B0               	addwf	sprintf@eexp^(0+128),f
  2243  0EFB  1803               	skipnc
  2244  0EFC  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2245  0EFD  30FF               	movlw	255
  2246  0EFE  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2247  0EFF                     l3977:
  2248                           
  2249                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 872:     tmpval.integ = scale(-e
      +                          exp);
  2250  0EFF  0330               	decf	sprintf@eexp^(0+128),w
  2251  0F00  3AFF               	xorlw	255
  2252  0F01  120A  158A  2247  120A  158A  	fcall	_scale
  2253  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  2254  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  2255  0F08  083F               	movf	?_scale,w
  2256  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  2257  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  2258  0F0B  00AC               	movwf	sprintf@tmpval^(0+128)
  2259  0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0F0E  0840               	movf	?_scale+1,w
  2262  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  2263  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  2264  0F11  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2265  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  2266  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  2267  0F14  0841               	movf	?_scale+2,w
  2268  0F15  1683               	bsf	3,5	;RP0=1, select bank1
  2269  0F16  1303               	bcf	3,6	;RP1=0, select bank1
  2270  0F17  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2271  0F18                     l3979:
  2272                           
  2273                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 873:     tmpval.integ *= fval;
  2274  0F18  0833               	movf	sprintf@fval^(0+128),w
  2275  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2276  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2277  0F1B  00AF               	movwf	___ftmul@f1
  2278  0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  2279  0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  2280  0F1E  0834               	movf	(sprintf@fval+1)^(0+128),w
  2281  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0F21  00B0               	movwf	___ftmul@f1+1
  2284  0F22  1683               	bsf	3,5	;RP0=1, select bank1
  2285  0F23  1303               	bcf	3,6	;RP1=0, select bank1
  2286  0F24  0835               	movf	(sprintf@fval+2)^(0+128),w
  2287  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  2288  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  2289  0F27  00B1               	movwf	___ftmul@f1+2
  2290  0F28  1683               	bsf	3,5	;RP0=1, select bank1
  2291  0F29  1303               	bcf	3,6	;RP1=0, select bank1
  2292  0F2A  082C               	movf	sprintf@tmpval^(0+128),w
  2293  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  2295  0F2D  00B2               	movwf	___ftmul@f2
  2296  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
  2297  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
  2298  0F30  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2299  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0F33  00B3               	movwf	___ftmul@f2+1
  2302  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  2303  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  2304  0F36  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2305  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  2306  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  2307  0F39  00B4               	movwf	___ftmul@f2+2
  2308  0F3A  120A  158A  202C  120A  158A  	fcall	___ftmul
  2309  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2310  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  2311  0F41  082F               	movf	?___ftmul,w
  2312  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  2313  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  2314  0F44  00AC               	movwf	sprintf@tmpval^(0+128)
  2315  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0F47  0830               	movf	?___ftmul+1,w
  2318  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  2319  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  2320  0F4A  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2321  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2322  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2323  0F4D  0831               	movf	?___ftmul+2,w
  2324  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  2325  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  2326  0F50  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2327  0F51                     l3981:
  2328                           
  2329                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 874:     if(tmpval.integ < 1.0)
  2330  0F51  082C               	movf	sprintf@tmpval^(0+128),w
  2331  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  2332  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  2333  0F54  00A0               	movwf	___ftge@ff1
  2334  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  2335  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  2336  0F57  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2337  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  2338  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  2339  0F5A  00A1               	movwf	___ftge@ff1+1
  2340  0F5B  1683               	bsf	3,5	;RP0=1, select bank1
  2341  0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  2342  0F5D  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2343  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  2345  0F60  00A2               	movwf	___ftge@ff1+2
  2346  0F61  3000               	movlw	0
  2347  0F62  00A3               	movwf	___ftge@ff2
  2348  0F63  3080               	movlw	128
  2349  0F64  00A4               	movwf	___ftge@ff2+1
  2350  0F65  303F               	movlw	63
  2351  0F66  00A5               	movwf	___ftge@ff2+2
  2352  0F67  160A  118A  20CA  120A  158A  	fcall	___ftge
  2353  0F6C  1803               	btfsc	3,0
  2354  0F6D  2F6F               	goto	u6441
  2355  0F6E  2F70               	goto	u6440
  2356  0F6F                     u6441:
  2357  0F6F  2F79               	goto	l3985
  2358  0F70                     u6440:
  2359  0F70                     l3983:
  2360                           
  2361                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2362  0F70  30FF               	movlw	255
  2363  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  2364  0F72  1303               	bcf	3,6	;RP1=0, select bank1
  2365  0F73  07B0               	addwf	sprintf@eexp^(0+128),f
  2366  0F74  1803               	skipnc
  2367  0F75  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2368  0F76  30FF               	movlw	255
  2369  0F77  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2370  0F78  2FA2               	goto	l3989
  2371  0F79                     l3985:
  2372  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  2373  0F7A  1303               	bcf	3,6	;RP1=0, select bank1
  2374  0F7B  082C               	movf	sprintf@tmpval^(0+128),w
  2375  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  2376  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  2377  0F7E  00A0               	movwf	___ftge@ff1
  2378  0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  2379  0F80  1303               	bcf	3,6	;RP1=0, select bank1
  2380  0F81  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2381  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  2382  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  2383  0F84  00A1               	movwf	___ftge@ff1+1
  2384  0F85  1683               	bsf	3,5	;RP0=1, select bank1
  2385  0F86  1303               	bcf	3,6	;RP1=0, select bank1
  2386  0F87  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2387  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0F8A  00A2               	movwf	___ftge@ff1+2
  2390  0F8B  3000               	movlw	0
  2391  0F8C  00A3               	movwf	___ftge@ff2
  2392  0F8D  3020               	movlw	32
  2393  0F8E  00A4               	movwf	___ftge@ff2+1
  2394  0F8F  3041               	movlw	65
  2395  0F90  00A5               	movwf	___ftge@ff2+2
  2396  0F91  160A  118A  20CA  120A  158A  	fcall	___ftge
  2397  0F96  1C03               	btfss	3,0
  2398  0F97  2F99               	goto	u6451
  2399  0F98  2F9A               	goto	u6450
  2400  0F99                     u6451:
  2401  0F99  2FA2               	goto	l3989
  2402  0F9A                     u6450:
  2403  0F9A                     l3987:
  2404                           
  2405                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2406  0F9A  3001               	movlw	1
  2407  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  2408  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  2409  0F9D  07B0               	addwf	sprintf@eexp^(0+128),f
  2410  0F9E  1803               	skipnc
  2411  0F9F  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2412  0FA0  3000               	movlw	0
  2413  0FA1  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2414  0FA2                     l3989:
  2415                           
  2416                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1138:      if(prec <= 12)
  2417  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  2418  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  2419  0FA4  0837               	movf	(sprintf@prec+1)^(0+128),w
  2420  0FA5  3A80               	xorlw	128
  2421  0FA6  00FF               	movwf	btemp+1
  2422  0FA7  3080               	movlw	128
  2423  0FA8  027F               	subwf	btemp+1,w
  2424  0FA9  1D03               	skipz
  2425  0FAA  2FAD               	goto	u6465
  2426  0FAB  300D               	movlw	13
  2427  0FAC  0236               	subwf	sprintf@prec^(0+128),w
  2428  0FAD                     u6465:
  2429  0FAD  1803               	skipnc
  2430  0FAE  2FB0               	goto	u6461
  2431  0FAF  2FB1               	goto	u6460
  2432  0FB0                     u6461:
  2433  0FB0  2FEA               	goto	l3993
  2434  0FB1                     u6460:
  2435  0FB1                     l3991:
  2436                           
  2437                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1139:       fval += fround((unsi
      +                          gned int)prec);
  2438  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  2439  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  2440  0FB3  0836               	movf	sprintf@prec^(0+128),w
  2441  0FB4  120A  118A  2651  120A  158A  	fcall	_fround
  2442  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0FBB  083F               	movf	?_fround,w
  2445  0FBC  00CF               	movwf	___ftadd@f1
  2446  0FBD  0840               	movf	?_fround+1,w
  2447  0FBE  00D0               	movwf	___ftadd@f1+1
  2448  0FBF  0841               	movf	?_fround+2,w
  2449  0FC0  00D1               	movwf	___ftadd@f1+2
  2450  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  2451  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0FC3  0833               	movf	sprintf@fval^(0+128),w
  2453  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0FC6  00D2               	movwf	___ftadd@f2
  2456  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  2457  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  2458  0FC9  0834               	movf	(sprintf@fval+1)^(0+128),w
  2459  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2460  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2461  0FCC  00D3               	movwf	___ftadd@f2+1
  2462  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  2463  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  2464  0FCF  0835               	movf	(sprintf@fval+2)^(0+128),w
  2465  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2466  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  2467  0FD2  00D4               	movwf	___ftadd@f2+2
  2468  0FD3  120A  158A  2111  120A  158A  	fcall	___ftadd
  2469  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2470  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2471  0FDA  084F               	movf	?___ftadd,w
  2472  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  2473  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  2474  0FDD  00B3               	movwf	sprintf@fval^(0+128)
  2475  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0FE0  0850               	movf	?___ftadd+1,w
  2478  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  2479  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  2480  0FE3  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2481  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2482  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2483  0FE6  0851               	movf	?___ftadd+2,w
  2484  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  2485  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  2486  0FE9  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2487  0FEA                     l3993:
  2488                           
  2489                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1142:     if((eexp > 9)||(fval !
      +                          = 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2490  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  2491  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  2492  0FEC  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2493  0FED  3A80               	xorlw	128
  2494  0FEE  00FF               	movwf	btemp+1
  2495  0FEF  3080               	movlw	128
  2496  0FF0  027F               	subwf	btemp+1,w
  2497  0FF1  1D03               	skipz
  2498  0FF2  2FF5               	goto	u6475
  2499  0FF3  300A               	movlw	10
  2500  0FF4  0230               	subwf	sprintf@eexp^(0+128),w
  2501  0FF5                     u6475:
  2502  0FF5  1803               	skipnc
  2503  0FF6  2FFA               	goto	u6471
  2504  0FF7  120A  118A  283D   	goto	u6470
  2505  0FFA                     u6471:
  2506  0FFA  120A  118A  2874   	goto	l4001
  2507  0FFD                     L3:
  2508  0FFD                     L2:
  2509  0FFD  120A  118A  2E4A   	ljmp	l4149
  2510                           
  2511                           	psect	text2
  2512  0A47                     __ptext2:	
  2513 ;; *************** function _scale *****************
  2514 ;; Defined at:
  2515 ;;		line 433 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  scl             1    wreg     char 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  scl             1   39[BANK0 ] char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  3   31[BANK0 ] char 
  2522 ;; Registers used:
  2523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2529 ;;      Params:         0       3       0       0       0
  2530 ;;      Locals:         0       4       0       0       0
  2531 ;;      Temps:          0       2       0       0       0
  2532 ;;      Totals:         0       9       0       0       0
  2533 ;;Total ram usage:        9 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    4
  2536 ;; This function calls:
  2537 ;;		___awdiv
  2538 ;;		___awmod
  2539 ;;		___bmul
  2540 ;;		___ftmul
  2541 ;; This function is called by:
  2542 ;;		_sprintf
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           
  2547                           ;psect for function _scale
  2548  0A47                     _scale:
  2549                           
  2550                           ;incstack = 0
  2551                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2552                           ;scale@scl stored from wreg
  2553  0A47  1283               	bcf	3,5	;RP0=0, select bank0
  2554  0A48  1303               	bcf	3,6	;RP1=0, select bank0
  2555  0A49  00C7               	movwf	scale@scl
  2556  0A4A                     l3581:
  2557                           
  2558                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 433: scale(signed char scl);D:\M
      +                          PLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 434: {;D:\MPLAB XC8 compiler\pic\sour
      +                          ces\c90\common\doprnt.c: 436:  if(scl < 0) {
  2559  0A4A  1FC7               	btfss	scale@scl,7
  2560  0A4B  2A4D               	goto	u5611
  2561  0A4C  2A4E               	goto	u5610
  2562  0A4D                     u5611:
  2563  0A4D  2BA9               	goto	l3603
  2564  0A4E                     u5610:
  2565  0A4E                     l3583:
  2566                           
  2567                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 437:   scl = -scl;
  2568  0A4E  09C7               	comf	scale@scl,f
  2569  0A4F  0AC7               	incf	scale@scl,f
  2570  0A50                     l3585:
  2571                           
  2572                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 438:   if(scl>=110)
  2573  0A50  0847               	movf	scale@scl,w
  2574  0A51  3A80               	xorlw	128
  2575  0A52  3E12               	addlw	-238
  2576  0A53  1C03               	skipc
  2577  0A54  2A56               	goto	u5621
  2578  0A55  2A57               	goto	u5620
  2579  0A56                     u5621:
  2580  0A56  2B15               	goto	l3593
  2581  0A57                     u5620:
  2582  0A57                     l3587:
  2583                           
  2584                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsign
      +                          ed char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigned
      +                           char)(scl%10)];
  2585  0A57  3003               	movlw	3
  2586  0A58  00C2               	movwf	??_scale
  2587  0A59  0842               	movf	??_scale,w
  2588  0A5A  00AB               	movwf	___bmul@multiplicand
  2589  0A5B  0847               	movf	scale@scl,w
  2590  0A5C  00F5               	movwf	___awmod@dividend
  2591  0A5D  01F6               	clrf	___awmod@dividend+1
  2592  0A5E  1BF5               	btfsc	___awmod@dividend,7
  2593  0A5F  03F6               	decf	___awmod@dividend+1,f
  2594  0A60  3064               	movlw	100
  2595  0A61  00F3               	movwf	___awmod@divisor
  2596  0A62  3000               	movlw	0
  2597  0A63  00F4               	movwf	___awmod@divisor+1
  2598  0A64  160A  118A  21DC  120A  158A  	fcall	___awmod
  2599  0A69  0874               	movf	?___awmod+1,w
  2600  0A6A  1283               	bcf	3,5	;RP0=0, select bank0
  2601  0A6B  1303               	bcf	3,6	;RP1=0, select bank0
  2602  0A6C  00A5               	movwf	___awdiv@dividend+1
  2603  0A6D  0873               	movf	?___awmod,w
  2604  0A6E  00A4               	movwf	___awdiv@dividend
  2605  0A6F  300A               	movlw	10
  2606  0A70  00A2               	movwf	___awdiv@divisor
  2607  0A71  3000               	movlw	0
  2608  0A72  00A3               	movwf	___awdiv@divisor+1
  2609  0A73  160A  118A  229F  120A  158A  	fcall	___awdiv
  2610  0A78  1283               	bcf	3,5	;RP0=0, select bank0
  2611  0A79  1303               	bcf	3,6	;RP1=0, select bank0
  2612  0A7A  0822               	movf	?___awdiv,w
  2613  0A7B  160A  158A  2768  120A  158A  	fcall	___bmul
  2614  0A80  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2615  0A81  0084               	movwf	4
  2616  0A82  160A  118A  2000  120A  158A  	fcall	stringdir
  2617  0A87  1283               	bcf	3,5	;RP0=0, select bank0
  2618  0A88  1303               	bcf	3,6	;RP1=0, select bank0
  2619  0A89  00AF               	movwf	___ftmul@f1
  2620  0A8A  160A  118A  2000  120A  158A  	fcall	stringdir
  2621  0A8F  00B0               	movwf	___ftmul@f1+1
  2622  0A90  160A  118A  2000  120A  158A  	fcall	stringdir
  2623  0A95  00B1               	movwf	___ftmul@f1+2
  2624  0A96  3003               	movlw	3
  2625  0A97  00C3               	movwf	??_scale+1
  2626  0A98  0843               	movf	??_scale+1,w
  2627  0A99  00AB               	movwf	___bmul@multiplicand
  2628  0A9A  0847               	movf	scale@scl,w
  2629  0A9B  00A4               	movwf	___awdiv@dividend
  2630  0A9C  01A5               	clrf	___awdiv@dividend+1
  2631  0A9D  1BA4               	btfsc	___awdiv@dividend,7
  2632  0A9E  03A5               	decf	___awdiv@dividend+1,f
  2633  0A9F  3064               	movlw	100
  2634  0AA0  00A2               	movwf	___awdiv@divisor
  2635  0AA1  3000               	movlw	0
  2636  0AA2  00A3               	movwf	___awdiv@divisor+1
  2637  0AA3  160A  118A  229F  120A  158A  	fcall	___awdiv
  2638  0AA8  1283               	bcf	3,5	;RP0=0, select bank0
  2639  0AA9  1303               	bcf	3,6	;RP1=0, select bank0
  2640  0AAA  0822               	movf	?___awdiv,w
  2641  0AAB  160A  158A  2768  120A  158A  	fcall	___bmul
  2642  0AB0  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  2643  0AB1  0084               	movwf	4
  2644  0AB2  160A  118A  2000  120A  158A  	fcall	stringdir
  2645  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
  2646  0AB8  1303               	bcf	3,6	;RP1=0, select bank0
  2647  0AB9  00B2               	movwf	___ftmul@f2
  2648  0ABA  160A  118A  2000  120A  158A  	fcall	stringdir
  2649  0ABF  00B3               	movwf	___ftmul@f2+1
  2650  0AC0  160A  118A  2000  120A  158A  	fcall	stringdir
  2651  0AC5  00B4               	movwf	___ftmul@f2+2
  2652  0AC6  120A  158A  202C  120A  158A  	fcall	___ftmul
  2653  0ACB  1283               	bcf	3,5	;RP0=0, select bank0
  2654  0ACC  1303               	bcf	3,6	;RP1=0, select bank0
  2655  0ACD  082F               	movf	?___ftmul,w
  2656  0ACE  00C4               	movwf	_scale$959
  2657  0ACF  0830               	movf	?___ftmul+1,w
  2658  0AD0  00C5               	movwf	_scale$959+1
  2659  0AD1  0831               	movf	?___ftmul+2,w
  2660  0AD2  00C6               	movwf	_scale$959+2
  2661                           
  2662                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsign
      +                          ed char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigned
      +                           char)(scl%10)];
  2663  0AD3  3003               	movlw	3
  2664  0AD4  00C2               	movwf	??_scale
  2665  0AD5  0842               	movf	??_scale,w
  2666  0AD6  00AB               	movwf	___bmul@multiplicand
  2667  0AD7  0847               	movf	scale@scl,w
  2668  0AD8  00F5               	movwf	___awmod@dividend
  2669  0AD9  01F6               	clrf	___awmod@dividend+1
  2670  0ADA  1BF5               	btfsc	___awmod@dividend,7
  2671  0ADB  03F6               	decf	___awmod@dividend+1,f
  2672  0ADC  300A               	movlw	10
  2673  0ADD  00F3               	movwf	___awmod@divisor
  2674  0ADE  3000               	movlw	0
  2675  0ADF  00F4               	movwf	___awmod@divisor+1
  2676  0AE0  160A  118A  21DC  120A  158A  	fcall	___awmod
  2677  0AE5  0873               	movf	?___awmod,w
  2678  0AE6  160A  158A  2768  120A  158A  	fcall	___bmul
  2679  0AEB  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2680  0AEC  0084               	movwf	4
  2681  0AED  160A  118A  2000  120A  158A  	fcall	stringdir
  2682  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  2683  0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  2684  0AF4  00AF               	movwf	___ftmul@f1
  2685  0AF5  160A  118A  2000  120A  158A  	fcall	stringdir
  2686  0AFA  00B0               	movwf	___ftmul@f1+1
  2687  0AFB  160A  118A  2000  120A  158A  	fcall	stringdir
  2688  0B00  00B1               	movwf	___ftmul@f1+2
  2689  0B01  0844               	movf	_scale$959,w
  2690  0B02  00B2               	movwf	___ftmul@f2
  2691  0B03  0845               	movf	_scale$959+1,w
  2692  0B04  00B3               	movwf	___ftmul@f2+1
  2693  0B05  0846               	movf	_scale$959+2,w
  2694  0B06  00B4               	movwf	___ftmul@f2+2
  2695  0B07  120A  158A  202C  120A  158A  	fcall	___ftmul
  2696  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  2698  0B0E  082F               	movf	?___ftmul,w
  2699  0B0F  00BF               	movwf	?_scale
  2700  0B10  0830               	movf	?___ftmul+1,w
  2701  0B11  00C0               	movwf	?_scale+1
  2702  0B12  0831               	movf	?___ftmul+2,w
  2703  0B13  00C1               	movwf	?_scale+2
  2704  0B14  2D01               	goto	l338
  2705  0B15                     l3593:
  2706  0B15  0847               	movf	scale@scl,w
  2707  0B16  3A80               	xorlw	128
  2708  0B17  3E75               	addlw	-139
  2709  0B18  1C03               	skipc
  2710  0B19  2B1B               	goto	u5631
  2711  0B1A  2B1C               	goto	u5630
  2712  0B1B                     u5631:
  2713  0B1B  2B88               	goto	l3599
  2714  0B1C                     u5630:
  2715  0B1C                     l3595:
  2716                           
  2717                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 441:    return _npowers_[(unsign
      +                          ed char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2718  0B1C  3003               	movlw	3
  2719  0B1D  00C2               	movwf	??_scale
  2720  0B1E  0842               	movf	??_scale,w
  2721  0B1F  00AB               	movwf	___bmul@multiplicand
  2722  0B20  0847               	movf	scale@scl,w
  2723  0B21  00F5               	movwf	___awmod@dividend
  2724  0B22  01F6               	clrf	___awmod@dividend+1
  2725  0B23  1BF5               	btfsc	___awmod@dividend,7
  2726  0B24  03F6               	decf	___awmod@dividend+1,f
  2727  0B25  300A               	movlw	10
  2728  0B26  00F3               	movwf	___awmod@divisor
  2729  0B27  3000               	movlw	0
  2730  0B28  00F4               	movwf	___awmod@divisor+1
  2731  0B29  160A  118A  21DC  120A  158A  	fcall	___awmod
  2732  0B2E  0873               	movf	?___awmod,w
  2733  0B2F  160A  158A  2768  120A  158A  	fcall	___bmul
  2734  0B34  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2735  0B35  0084               	movwf	4
  2736  0B36  160A  118A  2000  120A  158A  	fcall	stringdir
  2737  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  2738  0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  2739  0B3D  00AF               	movwf	___ftmul@f1
  2740  0B3E  160A  118A  2000  120A  158A  	fcall	stringdir
  2741  0B43  00B0               	movwf	___ftmul@f1+1
  2742  0B44  160A  118A  2000  120A  158A  	fcall	stringdir
  2743  0B49  00B1               	movwf	___ftmul@f1+2
  2744  0B4A  3003               	movlw	3
  2745  0B4B  00C3               	movwf	??_scale+1
  2746  0B4C  0843               	movf	??_scale+1,w
  2747  0B4D  00AB               	movwf	___bmul@multiplicand
  2748  0B4E  0847               	movf	scale@scl,w
  2749  0B4F  00A4               	movwf	___awdiv@dividend
  2750  0B50  01A5               	clrf	___awdiv@dividend+1
  2751  0B51  1BA4               	btfsc	___awdiv@dividend,7
  2752  0B52  03A5               	decf	___awdiv@dividend+1,f
  2753  0B53  300A               	movlw	10
  2754  0B54  00A2               	movwf	___awdiv@divisor
  2755  0B55  3000               	movlw	0
  2756  0B56  00A3               	movwf	___awdiv@divisor+1
  2757  0B57  160A  118A  229F  120A  158A  	fcall	___awdiv
  2758  0B5C  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0B5D  1303               	bcf	3,6	;RP1=0, select bank0
  2760  0B5E  0822               	movf	?___awdiv,w
  2761  0B5F  160A  158A  2768  120A  158A  	fcall	___bmul
  2762  0B64  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2763  0B65  0084               	movwf	4
  2764  0B66  160A  118A  2000  120A  158A  	fcall	stringdir
  2765  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  2766  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  2767  0B6D  00B2               	movwf	___ftmul@f2
  2768  0B6E  160A  118A  2000  120A  158A  	fcall	stringdir
  2769  0B73  00B3               	movwf	___ftmul@f2+1
  2770  0B74  160A  118A  2000  120A  158A  	fcall	stringdir
  2771  0B79  00B4               	movwf	___ftmul@f2+2
  2772  0B7A  120A  158A  202C  120A  158A  	fcall	___ftmul
  2773  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  2774  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  2775  0B81  082F               	movf	?___ftmul,w
  2776  0B82  00BF               	movwf	?_scale
  2777  0B83  0830               	movf	?___ftmul+1,w
  2778  0B84  00C0               	movwf	?_scale+1
  2779  0B85  0831               	movf	?___ftmul+2,w
  2780  0B86  00C1               	movwf	?_scale+2
  2781  0B87  2D01               	goto	l338
  2782  0B88                     l3599:
  2783                           
  2784                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 442:   return _npowers_[(unsigne
      +                          d char)scl];
  2785  0B88  3003               	movlw	3
  2786  0B89  00C2               	movwf	??_scale
  2787  0B8A  0842               	movf	??_scale,w
  2788  0B8B  00AB               	movwf	___bmul@multiplicand
  2789  0B8C  0847               	movf	scale@scl,w
  2790  0B8D  160A  158A  2768  120A  158A  	fcall	___bmul
  2791  0B92  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2792  0B93  0084               	movwf	4
  2793  0B94  160A  118A  2000  120A  158A  	fcall	stringdir
  2794  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  2796  0B9B  00BF               	movwf	?_scale
  2797  0B9C  160A  118A  2000  120A  158A  	fcall	stringdir
  2798  0BA1  00C0               	movwf	?_scale+1
  2799  0BA2  160A  118A  2000  120A  158A  	fcall	stringdir
  2800  0BA7  00C1               	movwf	?_scale+2
  2801  0BA8  2D01               	goto	l338
  2802  0BA9                     l3603:
  2803                           
  2804                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110)
  2805  0BA9  0847               	movf	scale@scl,w
  2806  0BAA  3A80               	xorlw	128
  2807  0BAB  3E12               	addlw	-238
  2808  0BAC  1C03               	skipc
  2809  0BAD  2BAF               	goto	u5641
  2810  0BAE  2BB0               	goto	u5640
  2811  0BAF                     u5641:
  2812  0BAF  2C6E               	goto	l3611
  2813  0BB0                     u5640:
  2814  0BB0                     l3605:
  2815                           
  2816                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigned
      +                           char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned cha
      +                          r)(scl%10)];
  2817  0BB0  3003               	movlw	3
  2818  0BB1  00C2               	movwf	??_scale
  2819  0BB2  0842               	movf	??_scale,w
  2820  0BB3  00AB               	movwf	___bmul@multiplicand
  2821  0BB4  0847               	movf	scale@scl,w
  2822  0BB5  00F5               	movwf	___awmod@dividend
  2823  0BB6  01F6               	clrf	___awmod@dividend+1
  2824  0BB7  1BF5               	btfsc	___awmod@dividend,7
  2825  0BB8  03F6               	decf	___awmod@dividend+1,f
  2826  0BB9  3064               	movlw	100
  2827  0BBA  00F3               	movwf	___awmod@divisor
  2828  0BBB  3000               	movlw	0
  2829  0BBC  00F4               	movwf	___awmod@divisor+1
  2830  0BBD  160A  118A  21DC  120A  158A  	fcall	___awmod
  2831  0BC2  0874               	movf	?___awmod+1,w
  2832  0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  2833  0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  2834  0BC5  00A5               	movwf	___awdiv@dividend+1
  2835  0BC6  0873               	movf	?___awmod,w
  2836  0BC7  00A4               	movwf	___awdiv@dividend
  2837  0BC8  300A               	movlw	10
  2838  0BC9  00A2               	movwf	___awdiv@divisor
  2839  0BCA  3000               	movlw	0
  2840  0BCB  00A3               	movwf	___awdiv@divisor+1
  2841  0BCC  160A  118A  229F  120A  158A  	fcall	___awdiv
  2842  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  2843  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  2844  0BD3  0822               	movf	?___awdiv,w
  2845  0BD4  160A  158A  2768  120A  158A  	fcall	___bmul
  2846  0BD9  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  2847  0BDA  0084               	movwf	4
  2848  0BDB  160A  118A  2000  120A  158A  	fcall	stringdir
  2849  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  2850  0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  2851  0BE2  00AF               	movwf	___ftmul@f1
  2852  0BE3  160A  118A  2000  120A  158A  	fcall	stringdir
  2853  0BE8  00B0               	movwf	___ftmul@f1+1
  2854  0BE9  160A  118A  2000  120A  158A  	fcall	stringdir
  2855  0BEE  00B1               	movwf	___ftmul@f1+2
  2856  0BEF  3003               	movlw	3
  2857  0BF0  00C3               	movwf	??_scale+1
  2858  0BF1  0843               	movf	??_scale+1,w
  2859  0BF2  00AB               	movwf	___bmul@multiplicand
  2860  0BF3  0847               	movf	scale@scl,w
  2861  0BF4  00A4               	movwf	___awdiv@dividend
  2862  0BF5  01A5               	clrf	___awdiv@dividend+1
  2863  0BF6  1BA4               	btfsc	___awdiv@dividend,7
  2864  0BF7  03A5               	decf	___awdiv@dividend+1,f
  2865  0BF8  3064               	movlw	100
  2866  0BF9  00A2               	movwf	___awdiv@divisor
  2867  0BFA  3000               	movlw	0
  2868  0BFB  00A3               	movwf	___awdiv@divisor+1
  2869  0BFC  160A  118A  229F  120A  158A  	fcall	___awdiv
  2870  0C01  1283               	bcf	3,5	;RP0=0, select bank0
  2871  0C02  1303               	bcf	3,6	;RP1=0, select bank0
  2872  0C03  0822               	movf	?___awdiv,w
  2873  0C04  160A  158A  2768  120A  158A  	fcall	___bmul
  2874  0C09  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  2875  0C0A  0084               	movwf	4
  2876  0C0B  160A  118A  2000  120A  158A  	fcall	stringdir
  2877  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0C11  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0C12  00B2               	movwf	___ftmul@f2
  2880  0C13  160A  118A  2000  120A  158A  	fcall	stringdir
  2881  0C18  00B3               	movwf	___ftmul@f2+1
  2882  0C19  160A  118A  2000  120A  158A  	fcall	stringdir
  2883  0C1E  00B4               	movwf	___ftmul@f2+2
  2884  0C1F  120A  158A  202C  120A  158A  	fcall	___ftmul
  2885  0C24  1283               	bcf	3,5	;RP0=0, select bank0
  2886  0C25  1303               	bcf	3,6	;RP1=0, select bank0
  2887  0C26  082F               	movf	?___ftmul,w
  2888  0C27  00C4               	movwf	_scale$959
  2889  0C28  0830               	movf	?___ftmul+1,w
  2890  0C29  00C5               	movwf	_scale$959+1
  2891  0C2A  0831               	movf	?___ftmul+2,w
  2892  0C2B  00C6               	movwf	_scale$959+2
  2893                           
  2894                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigned
      +                           char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned cha
      +                          r)(scl%10)];
  2895  0C2C  3003               	movlw	3
  2896  0C2D  00C2               	movwf	??_scale
  2897  0C2E  0842               	movf	??_scale,w
  2898  0C2F  00AB               	movwf	___bmul@multiplicand
  2899  0C30  0847               	movf	scale@scl,w
  2900  0C31  00F5               	movwf	___awmod@dividend
  2901  0C32  01F6               	clrf	___awmod@dividend+1
  2902  0C33  1BF5               	btfsc	___awmod@dividend,7
  2903  0C34  03F6               	decf	___awmod@dividend+1,f
  2904  0C35  300A               	movlw	10
  2905  0C36  00F3               	movwf	___awmod@divisor
  2906  0C37  3000               	movlw	0
  2907  0C38  00F4               	movwf	___awmod@divisor+1
  2908  0C39  160A  118A  21DC  120A  158A  	fcall	___awmod
  2909  0C3E  0873               	movf	?___awmod,w
  2910  0C3F  160A  158A  2768  120A  158A  	fcall	___bmul
  2911  0C44  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2912  0C45  0084               	movwf	4
  2913  0C46  160A  118A  2000  120A  158A  	fcall	stringdir
  2914  0C4B  1283               	bcf	3,5	;RP0=0, select bank0
  2915  0C4C  1303               	bcf	3,6	;RP1=0, select bank0
  2916  0C4D  00AF               	movwf	___ftmul@f1
  2917  0C4E  160A  118A  2000  120A  158A  	fcall	stringdir
  2918  0C53  00B0               	movwf	___ftmul@f1+1
  2919  0C54  160A  118A  2000  120A  158A  	fcall	stringdir
  2920  0C59  00B1               	movwf	___ftmul@f1+2
  2921  0C5A  0844               	movf	_scale$959,w
  2922  0C5B  00B2               	movwf	___ftmul@f2
  2923  0C5C  0845               	movf	_scale$959+1,w
  2924  0C5D  00B3               	movwf	___ftmul@f2+1
  2925  0C5E  0846               	movf	_scale$959+2,w
  2926  0C5F  00B4               	movwf	___ftmul@f2+2
  2927  0C60  120A  158A  202C  120A  158A  	fcall	___ftmul
  2928  0C65  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0C66  1303               	bcf	3,6	;RP1=0, select bank0
  2930  0C67  082F               	movf	?___ftmul,w
  2931  0C68  00BF               	movwf	?_scale
  2932  0C69  0830               	movf	?___ftmul+1,w
  2933  0C6A  00C0               	movwf	?_scale+1
  2934  0C6B  0831               	movf	?___ftmul+2,w
  2935  0C6C  00C1               	movwf	?_scale+2
  2936  0C6D  2D01               	goto	l338
  2937  0C6E                     l3611:
  2938  0C6E  0847               	movf	scale@scl,w
  2939  0C6F  3A80               	xorlw	128
  2940  0C70  3E75               	addlw	-139
  2941  0C71  1C03               	skipc
  2942  0C72  2C74               	goto	u5651
  2943  0C73  2C75               	goto	u5650
  2944  0C74                     u5651:
  2945  0C74  2CE1               	goto	l3617
  2946  0C75                     u5650:
  2947  0C75                     l3613:
  2948                           
  2949                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 447:   return _powers_[(unsigned
      +                           char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2950  0C75  3003               	movlw	3
  2951  0C76  00C2               	movwf	??_scale
  2952  0C77  0842               	movf	??_scale,w
  2953  0C78  00AB               	movwf	___bmul@multiplicand
  2954  0C79  0847               	movf	scale@scl,w
  2955  0C7A  00F5               	movwf	___awmod@dividend
  2956  0C7B  01F6               	clrf	___awmod@dividend+1
  2957  0C7C  1BF5               	btfsc	___awmod@dividend,7
  2958  0C7D  03F6               	decf	___awmod@dividend+1,f
  2959  0C7E  300A               	movlw	10
  2960  0C7F  00F3               	movwf	___awmod@divisor
  2961  0C80  3000               	movlw	0
  2962  0C81  00F4               	movwf	___awmod@divisor+1
  2963  0C82  160A  118A  21DC  120A  158A  	fcall	___awmod
  2964  0C87  0873               	movf	?___awmod,w
  2965  0C88  160A  158A  2768  120A  158A  	fcall	___bmul
  2966  0C8D  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2967  0C8E  0084               	movwf	4
  2968  0C8F  160A  118A  2000  120A  158A  	fcall	stringdir
  2969  0C94  1283               	bcf	3,5	;RP0=0, select bank0
  2970  0C95  1303               	bcf	3,6	;RP1=0, select bank0
  2971  0C96  00AF               	movwf	___ftmul@f1
  2972  0C97  160A  118A  2000  120A  158A  	fcall	stringdir
  2973  0C9C  00B0               	movwf	___ftmul@f1+1
  2974  0C9D  160A  118A  2000  120A  158A  	fcall	stringdir
  2975  0CA2  00B1               	movwf	___ftmul@f1+2
  2976  0CA3  3003               	movlw	3
  2977  0CA4  00C3               	movwf	??_scale+1
  2978  0CA5  0843               	movf	??_scale+1,w
  2979  0CA6  00AB               	movwf	___bmul@multiplicand
  2980  0CA7  0847               	movf	scale@scl,w
  2981  0CA8  00A4               	movwf	___awdiv@dividend
  2982  0CA9  01A5               	clrf	___awdiv@dividend+1
  2983  0CAA  1BA4               	btfsc	___awdiv@dividend,7
  2984  0CAB  03A5               	decf	___awdiv@dividend+1,f
  2985  0CAC  300A               	movlw	10
  2986  0CAD  00A2               	movwf	___awdiv@divisor
  2987  0CAE  3000               	movlw	0
  2988  0CAF  00A3               	movwf	___awdiv@divisor+1
  2989  0CB0  160A  118A  229F  120A  158A  	fcall	___awdiv
  2990  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  2991  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
  2992  0CB7  0822               	movf	?___awdiv,w
  2993  0CB8  160A  158A  2768  120A  158A  	fcall	___bmul
  2994  0CBD  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  2995  0CBE  0084               	movwf	4
  2996  0CBF  160A  118A  2000  120A  158A  	fcall	stringdir
  2997  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  2999  0CC6  00B2               	movwf	___ftmul@f2
  3000  0CC7  160A  118A  2000  120A  158A  	fcall	stringdir
  3001  0CCC  00B3               	movwf	___ftmul@f2+1
  3002  0CCD  160A  118A  2000  120A  158A  	fcall	stringdir
  3003  0CD2  00B4               	movwf	___ftmul@f2+2
  3004  0CD3  120A  158A  202C  120A  158A  	fcall	___ftmul
  3005  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  3006  0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  3007  0CDA  082F               	movf	?___ftmul,w
  3008  0CDB  00BF               	movwf	?_scale
  3009  0CDC  0830               	movf	?___ftmul+1,w
  3010  0CDD  00C0               	movwf	?_scale+1
  3011  0CDE  0831               	movf	?___ftmul+2,w
  3012  0CDF  00C1               	movwf	?_scale+2
  3013  0CE0  2D01               	goto	l338
  3014  0CE1                     l3617:
  3015                           
  3016                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 448:  return _powers_[(unsigned 
      +                          char)scl];
  3017  0CE1  3003               	movlw	3
  3018  0CE2  00C2               	movwf	??_scale
  3019  0CE3  0842               	movf	??_scale,w
  3020  0CE4  00AB               	movwf	___bmul@multiplicand
  3021  0CE5  0847               	movf	scale@scl,w
  3022  0CE6  160A  158A  2768  120A  158A  	fcall	___bmul
  3023  0CEB  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3024  0CEC  0084               	movwf	4
  3025  0CED  160A  118A  2000  120A  158A  	fcall	stringdir
  3026  0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  3028  0CF4  00BF               	movwf	?_scale
  3029  0CF5  160A  118A  2000  120A  158A  	fcall	stringdir
  3030  0CFA  00C0               	movwf	?_scale+1
  3031  0CFB  160A  118A  2000  120A  158A  	fcall	stringdir
  3032  0D00  00C1               	movwf	?_scale+2
  3033  0D01                     l338:
  3034  0D01  0008               	return
  3035  0D02                     __end_of_scale:
  3036                           
  3037                           	psect	text3
  3038  11DC                     __ptext3:	
  3039 ;; *************** function ___awmod *****************
  3040 ;; Defined at:
  3041 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\awmod.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  divisor         2    3[COMMON] int 
  3044 ;;  dividend        2    5[COMMON] int 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  sign            1    1[BANK0 ] unsigned char 
  3047 ;;  counter         1    0[BANK0 ] unsigned char 
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  2    3[COMMON] int 
  3050 ;; Registers used:
  3051 ;;		wreg, status,2, status,0
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3057 ;;      Params:         4       0       0       0       0
  3058 ;;      Locals:         0       2       0       0       0
  3059 ;;      Temps:          1       0       0       0       0
  3060 ;;      Totals:         5       2       0       0       0
  3061 ;;Total ram usage:        7 bytes
  3062 ;; Hardware stack levels used:    1
  3063 ;; Hardware stack levels required when called:    2
  3064 ;; This function calls:
  3065 ;;		Nothing
  3066 ;; This function is called by:
  3067 ;;		_scale
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           
  3072                           ;psect for function ___awmod
  3073  11DC                     ___awmod:
  3074  11DC                     l3353:	
  3075                           ;incstack = 0
  3076                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3077                           
  3078  11DC  1283               	bcf	3,5	;RP0=0, select bank0
  3079  11DD  1303               	bcf	3,6	;RP1=0, select bank0
  3080  11DE  01A1               	clrf	___awmod@sign
  3081  11DF                     l3355:
  3082  11DF  1FF6               	btfss	___awmod@dividend+1,7
  3083  11E0  29E2               	goto	u4991
  3084  11E1  29E3               	goto	u4990
  3085  11E2                     u4991:
  3086  11E2  29EA               	goto	l3361
  3087  11E3                     u4990:
  3088  11E3                     l3357:
  3089  11E3  09F5               	comf	___awmod@dividend,f
  3090  11E4  09F6               	comf	___awmod@dividend+1,f
  3091  11E5  0AF5               	incf	___awmod@dividend,f
  3092  11E6  1903               	skipnz
  3093  11E7  0AF6               	incf	___awmod@dividend+1,f
  3094  11E8                     l3359:
  3095  11E8  01A1               	clrf	___awmod@sign
  3096  11E9  0AA1               	incf	___awmod@sign,f
  3097  11EA                     l3361:
  3098  11EA  1FF4               	btfss	___awmod@divisor+1,7
  3099  11EB  29ED               	goto	u5001
  3100  11EC  29EE               	goto	u5000
  3101  11ED                     u5001:
  3102  11ED  29F3               	goto	l3365
  3103  11EE                     u5000:
  3104  11EE                     l3363:
  3105  11EE  09F3               	comf	___awmod@divisor,f
  3106  11EF  09F4               	comf	___awmod@divisor+1,f
  3107  11F0  0AF3               	incf	___awmod@divisor,f
  3108  11F1  1903               	skipnz
  3109  11F2  0AF4               	incf	___awmod@divisor+1,f
  3110  11F3                     l3365:
  3111  11F3  0873               	movf	___awmod@divisor,w
  3112  11F4  0474               	iorwf	___awmod@divisor+1,w
  3113  11F5  1903               	btfsc	3,2
  3114  11F6  29F8               	goto	u5011
  3115  11F7  29F9               	goto	u5010
  3116  11F8                     u5011:
  3117  11F8  2A28               	goto	l3383
  3118  11F9                     u5010:
  3119  11F9                     l3367:
  3120  11F9  01A0               	clrf	___awmod@counter
  3121  11FA  0AA0               	incf	___awmod@counter,f
  3122  11FB  2A07               	goto	l3373
  3123  11FC                     l3369:
  3124  11FC  3001               	movlw	1
  3125  11FD                     u5025:
  3126  11FD  1003               	clrc
  3127  11FE  0DF3               	rlf	___awmod@divisor,f
  3128  11FF  0DF4               	rlf	___awmod@divisor+1,f
  3129  1200  3EFF               	addlw	-1
  3130  1201  1D03               	skipz
  3131  1202  29FD               	goto	u5025
  3132  1203                     l3371:
  3133  1203  3001               	movlw	1
  3134  1204  00F7               	movwf	??___awmod
  3135  1205  0877               	movf	??___awmod,w
  3136  1206  07A0               	addwf	___awmod@counter,f
  3137  1207                     l3373:
  3138  1207  1FF4               	btfss	___awmod@divisor+1,7
  3139  1208  2A0A               	goto	u5031
  3140  1209  2A0B               	goto	u5030
  3141  120A                     u5031:
  3142  120A  29FC               	goto	l3369
  3143  120B                     u5030:
  3144  120B                     l3375:
  3145  120B  0874               	movf	___awmod@divisor+1,w
  3146  120C  0276               	subwf	___awmod@dividend+1,w
  3147  120D  1D03               	skipz
  3148  120E  2A11               	goto	u5045
  3149  120F  0873               	movf	___awmod@divisor,w
  3150  1210  0275               	subwf	___awmod@dividend,w
  3151  1211                     u5045:
  3152  1211  1C03               	skipc
  3153  1212  2A14               	goto	u5041
  3154  1213  2A15               	goto	u5040
  3155  1214                     u5041:
  3156  1214  2A1B               	goto	l3379
  3157  1215                     u5040:
  3158  1215                     l3377:
  3159  1215  0873               	movf	___awmod@divisor,w
  3160  1216  02F5               	subwf	___awmod@dividend,f
  3161  1217  0874               	movf	___awmod@divisor+1,w
  3162  1218  1C03               	skipc
  3163  1219  03F6               	decf	___awmod@dividend+1,f
  3164  121A  02F6               	subwf	___awmod@dividend+1,f
  3165  121B                     l3379:
  3166  121B  3001               	movlw	1
  3167  121C                     u5055:
  3168  121C  1003               	clrc
  3169  121D  0CF4               	rrf	___awmod@divisor+1,f
  3170  121E  0CF3               	rrf	___awmod@divisor,f
  3171  121F  3EFF               	addlw	-1
  3172  1220  1D03               	skipz
  3173  1221  2A1C               	goto	u5055
  3174  1222                     l3381:
  3175  1222  3001               	movlw	1
  3176  1223  02A0               	subwf	___awmod@counter,f
  3177  1224  1D03               	btfss	3,2
  3178  1225  2A27               	goto	u5061
  3179  1226  2A28               	goto	u5060
  3180  1227                     u5061:
  3181  1227  2A0B               	goto	l3375
  3182  1228                     u5060:
  3183  1228                     l3383:
  3184  1228  0821               	movf	___awmod@sign,w
  3185  1229  1903               	btfsc	3,2
  3186  122A  2A2C               	goto	u5071
  3187  122B  2A2D               	goto	u5070
  3188  122C                     u5071:
  3189  122C  2A32               	goto	l3387
  3190  122D                     u5070:
  3191  122D                     l3385:
  3192  122D  09F5               	comf	___awmod@dividend,f
  3193  122E  09F6               	comf	___awmod@dividend+1,f
  3194  122F  0AF5               	incf	___awmod@dividend,f
  3195  1230  1903               	skipnz
  3196  1231  0AF6               	incf	___awmod@dividend+1,f
  3197  1232                     l3387:
  3198  1232  0876               	movf	___awmod@dividend+1,w
  3199  1233  00F4               	movwf	?___awmod+1
  3200  1234  0875               	movf	___awmod@dividend,w
  3201  1235  00F3               	movwf	?___awmod
  3202  1236                     l621:
  3203  1236  0008               	return
  3204  1237                     __end_of___awmod:
  3205                           
  3206                           	psect	text4
  3207  129F                     __ptext4:	
  3208 ;; *************** function ___awdiv *****************
  3209 ;; Defined at:
  3210 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\awdiv.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  divisor         2    2[BANK0 ] int 
  3213 ;;  dividend        2    4[BANK0 ] int 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  quotient        2    9[BANK0 ] int 
  3216 ;;  sign            1    8[BANK0 ] unsigned char 
  3217 ;;  counter         1    7[BANK0 ] unsigned char 
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  2    2[BANK0 ] int 
  3220 ;; Registers used:
  3221 ;;		wreg, status,2, status,0
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3227 ;;      Params:         0       4       0       0       0
  3228 ;;      Locals:         0       4       0       0       0
  3229 ;;      Temps:          0       1       0       0       0
  3230 ;;      Totals:         0       9       0       0       0
  3231 ;;Total ram usage:        9 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; Hardware stack levels required when called:    2
  3234 ;; This function calls:
  3235 ;;		Nothing
  3236 ;; This function is called by:
  3237 ;;		_scale
  3238 ;;		_sprintf
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           
  3243                           ;psect for function ___awdiv
  3244  129F                     ___awdiv:
  3245  129F                     l3309:	
  3246                           ;incstack = 0
  3247                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3248                           
  3249  129F  1283               	bcf	3,5	;RP0=0, select bank0
  3250  12A0  1303               	bcf	3,6	;RP1=0, select bank0
  3251  12A1  01A8               	clrf	___awdiv@sign
  3252  12A2                     l3311:
  3253  12A2  1FA3               	btfss	___awdiv@divisor+1,7
  3254  12A3  2AA5               	goto	u4891
  3255  12A4  2AA6               	goto	u4890
  3256  12A5                     u4891:
  3257  12A5  2AAD               	goto	l3317
  3258  12A6                     u4890:
  3259  12A6                     l3313:
  3260  12A6  09A2               	comf	___awdiv@divisor,f
  3261  12A7  09A3               	comf	___awdiv@divisor+1,f
  3262  12A8  0AA2               	incf	___awdiv@divisor,f
  3263  12A9  1903               	skipnz
  3264  12AA  0AA3               	incf	___awdiv@divisor+1,f
  3265  12AB                     l3315:
  3266  12AB  01A8               	clrf	___awdiv@sign
  3267  12AC  0AA8               	incf	___awdiv@sign,f
  3268  12AD                     l3317:
  3269  12AD  1FA5               	btfss	___awdiv@dividend+1,7
  3270  12AE  2AB0               	goto	u4901
  3271  12AF  2AB1               	goto	u4900
  3272  12B0                     u4901:
  3273  12B0  2ABA               	goto	l3323
  3274  12B1                     u4900:
  3275  12B1                     l3319:
  3276  12B1  09A4               	comf	___awdiv@dividend,f
  3277  12B2  09A5               	comf	___awdiv@dividend+1,f
  3278  12B3  0AA4               	incf	___awdiv@dividend,f
  3279  12B4  1903               	skipnz
  3280  12B5  0AA5               	incf	___awdiv@dividend+1,f
  3281  12B6                     l3321:
  3282  12B6  3001               	movlw	1
  3283  12B7  00A6               	movwf	??___awdiv
  3284  12B8  0826               	movf	??___awdiv,w
  3285  12B9  06A8               	xorwf	___awdiv@sign,f
  3286  12BA                     l3323:
  3287  12BA  01A9               	clrf	___awdiv@quotient
  3288  12BB  01AA               	clrf	___awdiv@quotient+1
  3289  12BC                     l3325:
  3290  12BC  0822               	movf	___awdiv@divisor,w
  3291  12BD  0423               	iorwf	___awdiv@divisor+1,w
  3292  12BE  1903               	btfsc	3,2
  3293  12BF  2AC1               	goto	u4911
  3294  12C0  2AC2               	goto	u4910
  3295  12C1                     u4911:
  3296  12C1  2AF9               	goto	l3345
  3297  12C2                     u4910:
  3298  12C2                     l3327:
  3299  12C2  01A7               	clrf	___awdiv@counter
  3300  12C3  0AA7               	incf	___awdiv@counter,f
  3301  12C4  2AD0               	goto	l3333
  3302  12C5                     l3329:
  3303  12C5  3001               	movlw	1
  3304  12C6                     u4925:
  3305  12C6  1003               	clrc
  3306  12C7  0DA2               	rlf	___awdiv@divisor,f
  3307  12C8  0DA3               	rlf	___awdiv@divisor+1,f
  3308  12C9  3EFF               	addlw	-1
  3309  12CA  1D03               	skipz
  3310  12CB  2AC6               	goto	u4925
  3311  12CC                     l3331:
  3312  12CC  3001               	movlw	1
  3313  12CD  00A6               	movwf	??___awdiv
  3314  12CE  0826               	movf	??___awdiv,w
  3315  12CF  07A7               	addwf	___awdiv@counter,f
  3316  12D0                     l3333:
  3317  12D0  1FA3               	btfss	___awdiv@divisor+1,7
  3318  12D1  2AD3               	goto	u4931
  3319  12D2  2AD4               	goto	u4930
  3320  12D3                     u4931:
  3321  12D3  2AC5               	goto	l3329
  3322  12D4                     u4930:
  3323  12D4                     l3335:
  3324  12D4  3001               	movlw	1
  3325  12D5                     u4945:
  3326  12D5  1003               	clrc
  3327  12D6  0DA9               	rlf	___awdiv@quotient,f
  3328  12D7  0DAA               	rlf	___awdiv@quotient+1,f
  3329  12D8  3EFF               	addlw	-1
  3330  12D9  1D03               	skipz
  3331  12DA  2AD5               	goto	u4945
  3332  12DB  0823               	movf	___awdiv@divisor+1,w
  3333  12DC  0225               	subwf	___awdiv@dividend+1,w
  3334  12DD  1D03               	skipz
  3335  12DE  2AE1               	goto	u4955
  3336  12DF  0822               	movf	___awdiv@divisor,w
  3337  12E0  0224               	subwf	___awdiv@dividend,w
  3338  12E1                     u4955:
  3339  12E1  1C03               	skipc
  3340  12E2  2AE4               	goto	u4951
  3341  12E3  2AE5               	goto	u4950
  3342  12E4                     u4951:
  3343  12E4  2AEC               	goto	l3341
  3344  12E5                     u4950:
  3345  12E5                     l3337:
  3346  12E5  0822               	movf	___awdiv@divisor,w
  3347  12E6  02A4               	subwf	___awdiv@dividend,f
  3348  12E7  0823               	movf	___awdiv@divisor+1,w
  3349  12E8  1C03               	skipc
  3350  12E9  03A5               	decf	___awdiv@dividend+1,f
  3351  12EA  02A5               	subwf	___awdiv@dividend+1,f
  3352  12EB                     l3339:
  3353  12EB  1429               	bsf	___awdiv@quotient,0
  3354  12EC                     l3341:
  3355  12EC  3001               	movlw	1
  3356  12ED                     u4965:
  3357  12ED  1003               	clrc
  3358  12EE  0CA3               	rrf	___awdiv@divisor+1,f
  3359  12EF  0CA2               	rrf	___awdiv@divisor,f
  3360  12F0  3EFF               	addlw	-1
  3361  12F1  1D03               	skipz
  3362  12F2  2AED               	goto	u4965
  3363  12F3                     l3343:
  3364  12F3  3001               	movlw	1
  3365  12F4  02A7               	subwf	___awdiv@counter,f
  3366  12F5  1D03               	btfss	3,2
  3367  12F6  2AF8               	goto	u4971
  3368  12F7  2AF9               	goto	u4970
  3369  12F8                     u4971:
  3370  12F8  2AD4               	goto	l3335
  3371  12F9                     u4970:
  3372  12F9                     l3345:
  3373  12F9  0828               	movf	___awdiv@sign,w
  3374  12FA  1903               	btfsc	3,2
  3375  12FB  2AFD               	goto	u4981
  3376  12FC  2AFE               	goto	u4980
  3377  12FD                     u4981:
  3378  12FD  2B03               	goto	l3349
  3379  12FE                     u4980:
  3380  12FE                     l3347:
  3381  12FE  09A9               	comf	___awdiv@quotient,f
  3382  12FF  09AA               	comf	___awdiv@quotient+1,f
  3383  1300  0AA9               	incf	___awdiv@quotient,f
  3384  1301  1903               	skipnz
  3385  1302  0AAA               	incf	___awdiv@quotient+1,f
  3386  1303                     l3349:
  3387  1303  082A               	movf	___awdiv@quotient+1,w
  3388  1304  00A3               	movwf	?___awdiv+1
  3389  1305  0829               	movf	___awdiv@quotient,w
  3390  1306  00A2               	movwf	?___awdiv
  3391  1307                     l608:
  3392  1307  0008               	return
  3393  1308                     __end_of___awdiv:
  3394                           
  3395                           	psect	text5
  3396  1F1A                     __ptext5:	
  3397 ;; *************** function _isdigit *****************
  3398 ;; Defined at:
  3399 ;;		line 8 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\isdigit.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  c               1    wreg     unsigned char 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  c               1    4[COMMON] unsigned char 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;		None               void
  3406 ;; Registers used:
  3407 ;;		wreg, status,2, status,0
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3413 ;;      Params:         0       0       0       0       0
  3414 ;;      Locals:         2       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0
  3416 ;;      Totals:         2       0       0       0       0
  3417 ;;Total ram usage:        2 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    2
  3420 ;; This function calls:
  3421 ;;		Nothing
  3422 ;; This function is called by:
  3423 ;;		_sprintf
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           
  3428                           ;psect for function _isdigit
  3429  1F1A                     _isdigit:
  3430                           
  3431                           ;incstack = 0
  3432                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3433                           ;isdigit@c stored from wreg
  3434  1F1A  00F4               	movwf	isdigit@c
  3435  1F1B                     l2459:
  3436  1F1B  01F3               	clrf	_isdigit$749
  3437  1F1C                     l2461:
  3438  1F1C  303A               	movlw	58
  3439  1F1D  0274               	subwf	isdigit@c,w
  3440  1F1E  1803               	skipnc
  3441  1F1F  2F21               	goto	u3301
  3442  1F20  2F22               	goto	u3300
  3443  1F21                     u3301:
  3444  1F21  2F2A               	goto	l2467
  3445  1F22                     u3300:
  3446  1F22                     l2463:
  3447  1F22  3030               	movlw	48
  3448  1F23  0274               	subwf	isdigit@c,w
  3449  1F24  1C03               	skipc
  3450  1F25  2F27               	goto	u3311
  3451  1F26  2F28               	goto	u3310
  3452  1F27                     u3311:
  3453  1F27  2F2A               	goto	l2467
  3454  1F28                     u3310:
  3455  1F28                     l2465:
  3456  1F28  01F3               	clrf	_isdigit$749
  3457  1F29  0AF3               	incf	_isdigit$749,f
  3458  1F2A                     l2467:
  3459  1F2A  0C73               	rrf	_isdigit$749,w
  3460  1F2B                     l887:
  3461  1F2B  0008               	return
  3462  1F2C                     __end_of_isdigit:
  3463                           
  3464                           	psect	text6
  3465  0651                     __ptext6:	
  3466 ;; *************** function _fround *****************
  3467 ;; Defined at:
  3468 ;;		line 417 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  prec            1    wreg     unsigned char 
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;  prec            1   46[BANK0 ] unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  3   31[BANK0 ] unsigned char 
  3475 ;; Registers used:
  3476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3482 ;;      Params:         0       3       0       0       0
  3483 ;;      Locals:         0       7       0       0       0
  3484 ;;      Temps:          0       6       0       0       0
  3485 ;;      Totals:         0      16       0       0       0
  3486 ;;Total ram usage:       16 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    4
  3489 ;; This function calls:
  3490 ;;		___bmul
  3491 ;;		___ftmul
  3492 ;;		___lwdiv
  3493 ;;		___lwmod
  3494 ;; This function is called by:
  3495 ;;		_sprintf
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499                           
  3500                           ;psect for function _fround
  3501  0651                     _fround:
  3502                           
  3503                           ;incstack = 0
  3504                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3505                           ;fround@prec stored from wreg
  3506  0651  1283               	bcf	3,5	;RP0=0, select bank0
  3507  0652  1303               	bcf	3,6	;RP1=0, select bank0
  3508  0653  00CE               	movwf	fround@prec
  3509  0654                     l3559:
  3510                           
  3511                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 417: fround(unsigned char prec);
      +                          D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 418: {;D:\MPLAB XC8 compiler\pic\
      +                          sources\c90\common\doprnt.c: 421:  if(prec>=110)
  3512  0654  306E               	movlw	110
  3513  0655  024E               	subwf	fround@prec,w
  3514  0656  1C03               	skipc
  3515  0657  2E59               	goto	u5591
  3516  0658  2E5A               	goto	u5590
  3517  0659                     u5591:
  3518  0659  2F37               	goto	l3569
  3519  065A                     u5590:
  3520  065A                     l3561:
  3521                           
  3522                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3523  065A  3003               	movlw	3
  3524  065B  00C2               	movwf	??_fround
  3525  065C  0842               	movf	??_fround,w
  3526  065D  00AB               	movwf	___bmul@multiplicand
  3527  065E  084E               	movf	fround@prec,w
  3528  065F  00C3               	movwf	??_fround+1
  3529  0660  01C4               	clrf	??_fround+2
  3530  0661  0843               	movf	??_fround+1,w
  3531  0662  00F5               	movwf	___lwmod@dividend
  3532  0663  0844               	movf	??_fround+2,w
  3533  0664  00F6               	movwf	___lwmod@dividend+1
  3534  0665  3064               	movlw	100
  3535  0666  00F3               	movwf	___lwmod@divisor
  3536  0667  3000               	movlw	0
  3537  0668  00F4               	movwf	___lwmod@divisor+1
  3538  0669  160A  118A  2104  120A  118A  	fcall	___lwmod
  3539  066E  0874               	movf	?___lwmod+1,w
  3540  066F  1283               	bcf	3,5	;RP0=0, select bank0
  3541  0670  1303               	bcf	3,6	;RP1=0, select bank0
  3542  0671  00A4               	movwf	___lwdiv@dividend+1
  3543  0672  0873               	movf	?___lwmod,w
  3544  0673  00A3               	movwf	___lwdiv@dividend
  3545  0674  300A               	movlw	10
  3546  0675  00A1               	movwf	___lwdiv@divisor
  3547  0676  3000               	movlw	0
  3548  0677  00A2               	movwf	___lwdiv@divisor+1
  3549  0678  160A  118A  2140  120A  118A  	fcall	___lwdiv
  3550  067D  1283               	bcf	3,5	;RP0=0, select bank0
  3551  067E  1303               	bcf	3,6	;RP1=0, select bank0
  3552  067F  0821               	movf	?___lwdiv,w
  3553  0680  160A  158A  2768  120A  118A  	fcall	___bmul
  3554  0685  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3555  0686  0084               	movwf	4
  3556  0687  160A  118A  2000  120A  118A  	fcall	stringdir
  3557  068C  1283               	bcf	3,5	;RP0=0, select bank0
  3558  068D  1303               	bcf	3,6	;RP1=0, select bank0
  3559  068E  00AF               	movwf	___ftmul@f1
  3560  068F  160A  118A  2000  120A  118A  	fcall	stringdir
  3561  0694  00B0               	movwf	___ftmul@f1+1
  3562  0695  160A  118A  2000  120A  118A  	fcall	stringdir
  3563  069A  00B1               	movwf	___ftmul@f1+2
  3564  069B  3003               	movlw	3
  3565  069C  00C5               	movwf	??_fround+3
  3566  069D  0845               	movf	??_fround+3,w
  3567  069E  00AB               	movwf	___bmul@multiplicand
  3568  069F  084E               	movf	fround@prec,w
  3569  06A0  00C6               	movwf	??_fround+4
  3570  06A1  01C7               	clrf	??_fround+5
  3571  06A2  0846               	movf	??_fround+4,w
  3572  06A3  00A3               	movwf	___lwdiv@dividend
  3573  06A4  0847               	movf	??_fround+5,w
  3574  06A5  00A4               	movwf	___lwdiv@dividend+1
  3575  06A6  3064               	movlw	100
  3576  06A7  00A1               	movwf	___lwdiv@divisor
  3577  06A8  3000               	movlw	0
  3578  06A9  00A2               	movwf	___lwdiv@divisor+1
  3579  06AA  160A  118A  2140  120A  118A  	fcall	___lwdiv
  3580  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  3581  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  3582  06B1  0821               	movf	?___lwdiv,w
  3583  06B2  160A  158A  2768  120A  118A  	fcall	___bmul
  3584  06B7  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3585  06B8  0084               	movwf	4
  3586  06B9  160A  118A  2000  120A  118A  	fcall	stringdir
  3587  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  3588  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  3589  06C0  00B2               	movwf	___ftmul@f2
  3590  06C1  160A  118A  2000  120A  118A  	fcall	stringdir
  3591  06C6  00B3               	movwf	___ftmul@f2+1
  3592  06C7  160A  118A  2000  120A  118A  	fcall	stringdir
  3593  06CC  00B4               	movwf	___ftmul@f2+2
  3594  06CD  120A  158A  202C  120A  118A  	fcall	___ftmul
  3595  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  3596  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  3597  06D4  082F               	movf	?___ftmul,w
  3598  06D5  00CB               	movwf	_fround$957
  3599  06D6  0830               	movf	?___ftmul+1,w
  3600  06D7  00CC               	movwf	_fround$957+1
  3601  06D8  0831               	movf	?___ftmul+2,w
  3602  06D9  00CD               	movwf	_fround$957+2
  3603                           
  3604                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3605  06DA  3003               	movlw	3
  3606  06DB  00C2               	movwf	??_fround
  3607  06DC  0842               	movf	??_fround,w
  3608  06DD  00AB               	movwf	___bmul@multiplicand
  3609  06DE  084E               	movf	fround@prec,w
  3610  06DF  00C3               	movwf	??_fround+1
  3611  06E0  01C4               	clrf	??_fround+2
  3612  06E1  0843               	movf	??_fround+1,w
  3613  06E2  00F5               	movwf	___lwmod@dividend
  3614  06E3  0844               	movf	??_fround+2,w
  3615  06E4  00F6               	movwf	___lwmod@dividend+1
  3616  06E5  300A               	movlw	10
  3617  06E6  00F3               	movwf	___lwmod@divisor
  3618  06E7  3000               	movlw	0
  3619  06E8  00F4               	movwf	___lwmod@divisor+1
  3620  06E9  160A  118A  2104  120A  118A  	fcall	___lwmod
  3621  06EE  0873               	movf	?___lwmod,w
  3622  06EF  160A  158A  2768  120A  118A  	fcall	___bmul
  3623  06F4  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3624  06F5  0084               	movwf	4
  3625  06F6  160A  118A  2000  120A  118A  	fcall	stringdir
  3626  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  3627  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  3628  06FD  00AF               	movwf	___ftmul@f1
  3629  06FE  160A  118A  2000  120A  118A  	fcall	stringdir
  3630  0703  00B0               	movwf	___ftmul@f1+1
  3631  0704  160A  118A  2000  120A  118A  	fcall	stringdir
  3632  0709  00B1               	movwf	___ftmul@f1+2
  3633  070A  084B               	movf	_fround$957,w
  3634  070B  00B2               	movwf	___ftmul@f2
  3635  070C  084C               	movf	_fround$957+1,w
  3636  070D  00B3               	movwf	___ftmul@f2+1
  3637  070E  084D               	movf	_fround$957+2,w
  3638  070F  00B4               	movwf	___ftmul@f2+2
  3639  0710  120A  158A  202C  120A  118A  	fcall	___ftmul
  3640  0715  1283               	bcf	3,5	;RP0=0, select bank0
  3641  0716  1303               	bcf	3,6	;RP1=0, select bank0
  3642  0717  082F               	movf	?___ftmul,w
  3643  0718  00C8               	movwf	_fround$958
  3644  0719  0830               	movf	?___ftmul+1,w
  3645  071A  00C9               	movwf	_fround$958+1
  3646  071B  0831               	movf	?___ftmul+2,w
  3647  071C  00CA               	movwf	_fround$958+2
  3648  071D                     l3563:
  3649                           
  3650                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3651  071D  3000               	movlw	0
  3652  071E  00AF               	movwf	___ftmul@f1
  3653  071F  3000               	movlw	0
  3654  0720  00B0               	movwf	___ftmul@f1+1
  3655  0721  303F               	movlw	63
  3656  0722  00B1               	movwf	___ftmul@f1+2
  3657  0723  0848               	movf	_fround$958,w
  3658  0724  00B2               	movwf	___ftmul@f2
  3659  0725  0849               	movf	_fround$958+1,w
  3660  0726  00B3               	movwf	___ftmul@f2+1
  3661  0727  084A               	movf	_fround$958+2,w
  3662  0728  00B4               	movwf	___ftmul@f2+2
  3663  0729  120A  158A  202C  120A  118A  	fcall	___ftmul
  3664  072E  1283               	bcf	3,5	;RP0=0, select bank0
  3665  072F  1303               	bcf	3,6	;RP1=0, select bank0
  3666  0730  082F               	movf	?___ftmul,w
  3667  0731  00BF               	movwf	?_fround
  3668  0732  0830               	movf	?___ftmul+1,w
  3669  0733  00C0               	movwf	?_fround+1
  3670  0734  0831               	movf	?___ftmul+2,w
  3671  0735  00C1               	movwf	?_fround+2
  3672  0736  2FF9               	goto	l331
  3673  0737                     l3569:
  3674  0737  300B               	movlw	11
  3675  0738  024E               	subwf	fround@prec,w
  3676  0739  1C03               	skipc
  3677  073A  2F3C               	goto	u5601
  3678  073B  2F3D               	goto	u5600
  3679  073C                     u5601:
  3680  073C  2FC6               	goto	l3577
  3681  073D                     u5600:
  3682  073D                     l3571:
  3683                           
  3684                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[pr
      +                          ec/10U+9U] * _npowers_[prec%10U];
  3685  073D  3003               	movlw	3
  3686  073E  00C2               	movwf	??_fround
  3687  073F  0842               	movf	??_fround,w
  3688  0740  00AB               	movwf	___bmul@multiplicand
  3689  0741  084E               	movf	fround@prec,w
  3690  0742  00C3               	movwf	??_fround+1
  3691  0743  01C4               	clrf	??_fround+2
  3692  0744  0843               	movf	??_fround+1,w
  3693  0745  00F5               	movwf	___lwmod@dividend
  3694  0746  0844               	movf	??_fround+2,w
  3695  0747  00F6               	movwf	___lwmod@dividend+1
  3696  0748  300A               	movlw	10
  3697  0749  00F3               	movwf	___lwmod@divisor
  3698  074A  3000               	movlw	0
  3699  074B  00F4               	movwf	___lwmod@divisor+1
  3700  074C  160A  118A  2104  120A  118A  	fcall	___lwmod
  3701  0751  0873               	movf	?___lwmod,w
  3702  0752  160A  158A  2768  120A  118A  	fcall	___bmul
  3703  0757  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3704  0758  0084               	movwf	4
  3705  0759  160A  118A  2000  120A  118A  	fcall	stringdir
  3706  075E  1283               	bcf	3,5	;RP0=0, select bank0
  3707  075F  1303               	bcf	3,6	;RP1=0, select bank0
  3708  0760  00AF               	movwf	___ftmul@f1
  3709  0761  160A  118A  2000  120A  118A  	fcall	stringdir
  3710  0766  00B0               	movwf	___ftmul@f1+1
  3711  0767  160A  118A  2000  120A  118A  	fcall	stringdir
  3712  076C  00B1               	movwf	___ftmul@f1+2
  3713  076D  3003               	movlw	3
  3714  076E  00C5               	movwf	??_fround+3
  3715  076F  0845               	movf	??_fround+3,w
  3716  0770  00AB               	movwf	___bmul@multiplicand
  3717  0771  084E               	movf	fround@prec,w
  3718  0772  00C6               	movwf	??_fround+4
  3719  0773  01C7               	clrf	??_fround+5
  3720  0774  0846               	movf	??_fround+4,w
  3721  0775  00A3               	movwf	___lwdiv@dividend
  3722  0776  0847               	movf	??_fround+5,w
  3723  0777  00A4               	movwf	___lwdiv@dividend+1
  3724  0778  300A               	movlw	10
  3725  0779  00A1               	movwf	___lwdiv@divisor
  3726  077A  3000               	movlw	0
  3727  077B  00A2               	movwf	___lwdiv@divisor+1
  3728  077C  160A  118A  2140  120A  118A  	fcall	___lwdiv
  3729  0781  1283               	bcf	3,5	;RP0=0, select bank0
  3730  0782  1303               	bcf	3,6	;RP1=0, select bank0
  3731  0783  0821               	movf	?___lwdiv,w
  3732  0784  160A  158A  2768  120A  118A  	fcall	___bmul
  3733  0789  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3734  078A  0084               	movwf	4
  3735  078B  160A  118A  2000  120A  118A  	fcall	stringdir
  3736  0790  1283               	bcf	3,5	;RP0=0, select bank0
  3737  0791  1303               	bcf	3,6	;RP1=0, select bank0
  3738  0792  00B2               	movwf	___ftmul@f2
  3739  0793  160A  118A  2000  120A  118A  	fcall	stringdir
  3740  0798  00B3               	movwf	___ftmul@f2+1
  3741  0799  160A  118A  2000  120A  118A  	fcall	stringdir
  3742  079E  00B4               	movwf	___ftmul@f2+2
  3743  079F  120A  158A  202C  120A  118A  	fcall	___ftmul
  3744  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  3745  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  3746  07A6  082F               	movf	?___ftmul,w
  3747  07A7  00CB               	movwf	_fround$957
  3748  07A8  0830               	movf	?___ftmul+1,w
  3749  07A9  00CC               	movwf	_fround$957+1
  3750  07AA  0831               	movf	?___ftmul+2,w
  3751  07AB  00CD               	movwf	_fround$957+2
  3752  07AC                     l3573:
  3753                           
  3754                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[pr
      +                          ec/10U+9U] * _npowers_[prec%10U];
  3755  07AC  3000               	movlw	0
  3756  07AD  00AF               	movwf	___ftmul@f1
  3757  07AE  3000               	movlw	0
  3758  07AF  00B0               	movwf	___ftmul@f1+1
  3759  07B0  303F               	movlw	63
  3760  07B1  00B1               	movwf	___ftmul@f1+2
  3761  07B2  084B               	movf	_fround$957,w
  3762  07B3  00B2               	movwf	___ftmul@f2
  3763  07B4  084C               	movf	_fround$957+1,w
  3764  07B5  00B3               	movwf	___ftmul@f2+1
  3765  07B6  084D               	movf	_fround$957+2,w
  3766  07B7  00B4               	movwf	___ftmul@f2+2
  3767  07B8  120A  158A  202C  120A  118A  	fcall	___ftmul
  3768  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  3769  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  3770  07BF  082F               	movf	?___ftmul,w
  3771  07C0  00BF               	movwf	?_fround
  3772  07C1  0830               	movf	?___ftmul+1,w
  3773  07C2  00C0               	movwf	?_fround+1
  3774  07C3  0831               	movf	?___ftmul+2,w
  3775  07C4  00C1               	movwf	?_fround+2
  3776  07C5  2FF9               	goto	l331
  3777  07C6                     l3577:
  3778                           
  3779                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 425:  return 0.5 * _npowers_[pre
      +                          c];
  3780  07C6  3000               	movlw	0
  3781  07C7  00AF               	movwf	___ftmul@f1
  3782  07C8  3000               	movlw	0
  3783  07C9  00B0               	movwf	___ftmul@f1+1
  3784  07CA  303F               	movlw	63
  3785  07CB  00B1               	movwf	___ftmul@f1+2
  3786  07CC  3003               	movlw	3
  3787  07CD  00C2               	movwf	??_fround
  3788  07CE  0842               	movf	??_fround,w
  3789  07CF  00AB               	movwf	___bmul@multiplicand
  3790  07D0  084E               	movf	fround@prec,w
  3791  07D1  160A  158A  2768  120A  118A  	fcall	___bmul
  3792  07D6  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3793  07D7  0084               	movwf	4
  3794  07D8  160A  118A  2000  120A  118A  	fcall	stringdir
  3795  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  3796  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  3797  07DF  00B2               	movwf	___ftmul@f2
  3798  07E0  160A  118A  2000  120A  118A  	fcall	stringdir
  3799  07E5  00B3               	movwf	___ftmul@f2+1
  3800  07E6  160A  118A  2000  120A  118A  	fcall	stringdir
  3801  07EB  00B4               	movwf	___ftmul@f2+2
  3802  07EC  120A  158A  202C  120A  118A  	fcall	___ftmul
  3803  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  3804  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  3805  07F3  082F               	movf	?___ftmul,w
  3806  07F4  00BF               	movwf	?_fround
  3807  07F5  0830               	movf	?___ftmul+1,w
  3808  07F6  00C0               	movwf	?_fround+1
  3809  07F7  0831               	movf	?___ftmul+2,w
  3810  07F8  00C1               	movwf	?_fround+2
  3811  07F9                     l331:
  3812  07F9  0008               	return
  3813  07FA                     __end_of_fround:
  3814                           
  3815                           	psect	text7
  3816  1104                     __ptext7:	
  3817 ;; *************** function ___lwmod *****************
  3818 ;; Defined at:
  3819 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lwmod.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  divisor         2    3[COMMON] unsigned int 
  3822 ;;  dividend        2    5[COMMON] unsigned int 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  counter         1    0[BANK0 ] unsigned char 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  2    3[COMMON] unsigned int 
  3827 ;; Registers used:
  3828 ;;		wreg, status,2, status,0
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3834 ;;      Params:         4       0       0       0       0
  3835 ;;      Locals:         0       1       0       0       0
  3836 ;;      Temps:          1       0       0       0       0
  3837 ;;      Totals:         5       1       0       0       0
  3838 ;;Total ram usage:        6 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    2
  3841 ;; This function calls:
  3842 ;;		Nothing
  3843 ;; This function is called by:
  3844 ;;		_fround
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           
  3849                           ;psect for function ___lwmod
  3850  1104                     ___lwmod:
  3851  1104                     l3537:	
  3852                           ;incstack = 0
  3853                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3854                           
  3855  1104  0873               	movf	___lwmod@divisor,w
  3856  1105  0474               	iorwf	___lwmod@divisor+1,w
  3857  1106  1903               	btfsc	3,2
  3858  1107  2909               	goto	u5531
  3859  1108  290A               	goto	u5530
  3860  1109                     u5531:
  3861  1109  293B               	goto	l3555
  3862  110A                     u5530:
  3863  110A                     l3539:
  3864  110A  1283               	bcf	3,5	;RP0=0, select bank0
  3865  110B  1303               	bcf	3,6	;RP1=0, select bank0
  3866  110C  01A0               	clrf	___lwmod@counter
  3867  110D  0AA0               	incf	___lwmod@counter,f
  3868  110E  291A               	goto	l3545
  3869  110F                     l3541:
  3870  110F  3001               	movlw	1
  3871  1110                     u5545:
  3872  1110  1003               	clrc
  3873  1111  0DF3               	rlf	___lwmod@divisor,f
  3874  1112  0DF4               	rlf	___lwmod@divisor+1,f
  3875  1113  3EFF               	addlw	-1
  3876  1114  1D03               	skipz
  3877  1115  2910               	goto	u5545
  3878  1116                     l3543:
  3879  1116  3001               	movlw	1
  3880  1117  00F7               	movwf	??___lwmod
  3881  1118  0877               	movf	??___lwmod,w
  3882  1119  07A0               	addwf	___lwmod@counter,f
  3883  111A                     l3545:
  3884  111A  1FF4               	btfss	___lwmod@divisor+1,7
  3885  111B  291D               	goto	u5551
  3886  111C  291E               	goto	u5550
  3887  111D                     u5551:
  3888  111D  290F               	goto	l3541
  3889  111E                     u5550:
  3890  111E                     l3547:
  3891  111E  0874               	movf	___lwmod@divisor+1,w
  3892  111F  0276               	subwf	___lwmod@dividend+1,w
  3893  1120  1D03               	skipz
  3894  1121  2924               	goto	u5565
  3895  1122  0873               	movf	___lwmod@divisor,w
  3896  1123  0275               	subwf	___lwmod@dividend,w
  3897  1124                     u5565:
  3898  1124  1C03               	skipc
  3899  1125  2927               	goto	u5561
  3900  1126  2928               	goto	u5560
  3901  1127                     u5561:
  3902  1127  292E               	goto	l3551
  3903  1128                     u5560:
  3904  1128                     l3549:
  3905  1128  0873               	movf	___lwmod@divisor,w
  3906  1129  02F5               	subwf	___lwmod@dividend,f
  3907  112A  0874               	movf	___lwmod@divisor+1,w
  3908  112B  1C03               	skipc
  3909  112C  03F6               	decf	___lwmod@dividend+1,f
  3910  112D  02F6               	subwf	___lwmod@dividend+1,f
  3911  112E                     l3551:
  3912  112E  3001               	movlw	1
  3913  112F                     u5575:
  3914  112F  1003               	clrc
  3915  1130  0CF4               	rrf	___lwmod@divisor+1,f
  3916  1131  0CF3               	rrf	___lwmod@divisor,f
  3917  1132  3EFF               	addlw	-1
  3918  1133  1D03               	skipz
  3919  1134  292F               	goto	u5575
  3920  1135                     l3553:
  3921  1135  3001               	movlw	1
  3922  1136  02A0               	subwf	___lwmod@counter,f
  3923  1137  1D03               	btfss	3,2
  3924  1138  293A               	goto	u5581
  3925  1139  293B               	goto	u5580
  3926  113A                     u5581:
  3927  113A  291E               	goto	l3547
  3928  113B                     u5580:
  3929  113B                     l3555:
  3930  113B  0876               	movf	___lwmod@dividend+1,w
  3931  113C  00F4               	movwf	?___lwmod+1
  3932  113D  0875               	movf	___lwmod@dividend,w
  3933  113E  00F3               	movwf	?___lwmod
  3934  113F                     l877:
  3935  113F  0008               	return
  3936  1140                     __end_of___lwmod:
  3937                           
  3938                           	psect	text8
  3939  1140                     __ptext8:	
  3940 ;; *************** function ___lwdiv *****************
  3941 ;; Defined at:
  3942 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lwdiv.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  divisor         2    1[BANK0 ] unsigned int 
  3945 ;;  dividend        2    3[BANK0 ] unsigned int 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  quotient        2    7[BANK0 ] unsigned int 
  3948 ;;  counter         1    6[BANK0 ] unsigned char 
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  2    1[BANK0 ] unsigned int 
  3951 ;; Registers used:
  3952 ;;		wreg, status,2, status,0
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3958 ;;      Params:         0       4       0       0       0
  3959 ;;      Locals:         0       3       0       0       0
  3960 ;;      Temps:          0       1       0       0       0
  3961 ;;      Totals:         0       8       0       0       0
  3962 ;;Total ram usage:        8 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    2
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_fround
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           
  3973                           ;psect for function ___lwdiv
  3974  1140                     ___lwdiv:
  3975  1140                     l3511:	
  3976                           ;incstack = 0
  3977                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3978                           
  3979  1140  1283               	bcf	3,5	;RP0=0, select bank0
  3980  1141  1303               	bcf	3,6	;RP1=0, select bank0
  3981  1142  01A7               	clrf	___lwdiv@quotient
  3982  1143  01A8               	clrf	___lwdiv@quotient+1
  3983  1144                     l3513:
  3984  1144  0821               	movf	___lwdiv@divisor,w
  3985  1145  0422               	iorwf	___lwdiv@divisor+1,w
  3986  1146  1903               	btfsc	3,2
  3987  1147  2949               	goto	u5461
  3988  1148  294A               	goto	u5460
  3989  1149                     u5461:
  3990  1149  2981               	goto	l3533
  3991  114A                     u5460:
  3992  114A                     l3515:
  3993  114A  01A6               	clrf	___lwdiv@counter
  3994  114B  0AA6               	incf	___lwdiv@counter,f
  3995  114C  2958               	goto	l3521
  3996  114D                     l3517:
  3997  114D  3001               	movlw	1
  3998  114E                     u5475:
  3999  114E  1003               	clrc
  4000  114F  0DA1               	rlf	___lwdiv@divisor,f
  4001  1150  0DA2               	rlf	___lwdiv@divisor+1,f
  4002  1151  3EFF               	addlw	-1
  4003  1152  1D03               	skipz
  4004  1153  294E               	goto	u5475
  4005  1154                     l3519:
  4006  1154  3001               	movlw	1
  4007  1155  00A5               	movwf	??___lwdiv
  4008  1156  0825               	movf	??___lwdiv,w
  4009  1157  07A6               	addwf	___lwdiv@counter,f
  4010  1158                     l3521:
  4011  1158  1FA2               	btfss	___lwdiv@divisor+1,7
  4012  1159  295B               	goto	u5481
  4013  115A  295C               	goto	u5480
  4014  115B                     u5481:
  4015  115B  294D               	goto	l3517
  4016  115C                     u5480:
  4017  115C                     l3523:
  4018  115C  3001               	movlw	1
  4019  115D                     u5495:
  4020  115D  1003               	clrc
  4021  115E  0DA7               	rlf	___lwdiv@quotient,f
  4022  115F  0DA8               	rlf	___lwdiv@quotient+1,f
  4023  1160  3EFF               	addlw	-1
  4024  1161  1D03               	skipz
  4025  1162  295D               	goto	u5495
  4026  1163  0822               	movf	___lwdiv@divisor+1,w
  4027  1164  0224               	subwf	___lwdiv@dividend+1,w
  4028  1165  1D03               	skipz
  4029  1166  2969               	goto	u5505
  4030  1167  0821               	movf	___lwdiv@divisor,w
  4031  1168  0223               	subwf	___lwdiv@dividend,w
  4032  1169                     u5505:
  4033  1169  1C03               	skipc
  4034  116A  296C               	goto	u5501
  4035  116B  296D               	goto	u5500
  4036  116C                     u5501:
  4037  116C  2974               	goto	l3529
  4038  116D                     u5500:
  4039  116D                     l3525:
  4040  116D  0821               	movf	___lwdiv@divisor,w
  4041  116E  02A3               	subwf	___lwdiv@dividend,f
  4042  116F  0822               	movf	___lwdiv@divisor+1,w
  4043  1170  1C03               	skipc
  4044  1171  03A4               	decf	___lwdiv@dividend+1,f
  4045  1172  02A4               	subwf	___lwdiv@dividend+1,f
  4046  1173                     l3527:
  4047  1173  1427               	bsf	___lwdiv@quotient,0
  4048  1174                     l3529:
  4049  1174  3001               	movlw	1
  4050  1175                     u5515:
  4051  1175  1003               	clrc
  4052  1176  0CA2               	rrf	___lwdiv@divisor+1,f
  4053  1177  0CA1               	rrf	___lwdiv@divisor,f
  4054  1178  3EFF               	addlw	-1
  4055  1179  1D03               	skipz
  4056  117A  2975               	goto	u5515
  4057  117B                     l3531:
  4058  117B  3001               	movlw	1
  4059  117C  02A6               	subwf	___lwdiv@counter,f
  4060  117D  1D03               	btfss	3,2
  4061  117E  2980               	goto	u5521
  4062  117F  2981               	goto	u5520
  4063  1180                     u5521:
  4064  1180  295C               	goto	l3523
  4065  1181                     u5520:
  4066  1181                     l3533:
  4067  1181  0828               	movf	___lwdiv@quotient+1,w
  4068  1182  00A2               	movwf	?___lwdiv+1
  4069  1183  0827               	movf	___lwdiv@quotient,w
  4070  1184  00A1               	movwf	?___lwdiv
  4071  1185                     l867:
  4072  1185  0008               	return
  4073  1186                     __end_of___lwdiv:
  4074                           
  4075                           	psect	text9
  4076  082C                     __ptext9:	
  4077 ;; *************** function ___ftmul *****************
  4078 ;; Defined at:
  4079 ;;		line 62 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftmul.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  f1              3   15[BANK0 ] float 
  4082 ;;  f2              3   18[BANK0 ] float 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  f3_as_produc    3   26[BANK0 ] unsigned um
  4085 ;;  sign            1   30[BANK0 ] unsigned char 
  4086 ;;  cntr            1   29[BANK0 ] unsigned char 
  4087 ;;  exp             1   25[BANK0 ] unsigned char 
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  3   15[BANK0 ] float 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0, pclath, cstack
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4097 ;;      Params:         0       6       0       0       0
  4098 ;;      Locals:         0       6       0       0       0
  4099 ;;      Temps:          0       4       0       0       0
  4100 ;;      Totals:         0      16       0       0       0
  4101 ;;Total ram usage:       16 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    3
  4104 ;; This function calls:
  4105 ;;		___ftpack
  4106 ;; This function is called by:
  4107 ;;		_aht_GetHumidity
  4108 ;;		_aht_GetTemperature
  4109 ;;		_fround
  4110 ;;		_scale
  4111 ;;		_sprintf
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           
  4116                           ;psect for function ___ftmul
  4117  082C                     ___ftmul:
  4118  082C                     l3461:	
  4119                           ;incstack = 0
  4120                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4121                           
  4122  082C  1283               	bcf	3,5	;RP0=0, select bank0
  4123  082D  1303               	bcf	3,6	;RP1=0, select bank0
  4124  082E  082F               	movf	___ftmul@f1,w
  4125  082F  00B5               	movwf	??___ftmul
  4126  0830  0830               	movf	___ftmul@f1+1,w
  4127  0831  00B6               	movwf	??___ftmul+1
  4128  0832  0831               	movf	___ftmul@f1+2,w
  4129  0833  00B7               	movwf	??___ftmul+2
  4130  0834  1003               	clrc
  4131  0835  0D36               	rlf	??___ftmul+1,w
  4132  0836  0D37               	rlf	??___ftmul+2,w
  4133  0837  00B8               	movwf	??___ftmul+3
  4134  0838  0838               	movf	??___ftmul+3,w
  4135  0839  00B9               	movwf	___ftmul@exp
  4136  083A  0839               	movf	___ftmul@exp,w
  4137  083B  1D03               	btfss	3,2
  4138  083C  283E               	goto	u5321
  4139  083D  283F               	goto	u5320
  4140  083E                     u5321:
  4141  083E  2846               	goto	l3467
  4142  083F                     u5320:
  4143  083F                     l3463:
  4144  083F  3000               	movlw	0
  4145  0840  00AF               	movwf	?___ftmul
  4146  0841  3000               	movlw	0
  4147  0842  00B0               	movwf	?___ftmul+1
  4148  0843  3000               	movlw	0
  4149  0844  00B1               	movwf	?___ftmul+2
  4150  0845  2910               	goto	l734
  4151  0846                     l3467:
  4152  0846  0832               	movf	___ftmul@f2,w
  4153  0847  00B5               	movwf	??___ftmul
  4154  0848  0833               	movf	___ftmul@f2+1,w
  4155  0849  00B6               	movwf	??___ftmul+1
  4156  084A  0834               	movf	___ftmul@f2+2,w
  4157  084B  00B7               	movwf	??___ftmul+2
  4158  084C  1003               	clrc
  4159  084D  0D36               	rlf	??___ftmul+1,w
  4160  084E  0D37               	rlf	??___ftmul+2,w
  4161  084F  00B8               	movwf	??___ftmul+3
  4162  0850  0838               	movf	??___ftmul+3,w
  4163  0851  00BE               	movwf	___ftmul@sign
  4164  0852  083E               	movf	___ftmul@sign,w
  4165  0853  1D03               	btfss	3,2
  4166  0854  2856               	goto	u5331
  4167  0855  2857               	goto	u5330
  4168  0856                     u5331:
  4169  0856  285E               	goto	l3473
  4170  0857                     u5330:
  4171  0857                     l3469:
  4172  0857  3000               	movlw	0
  4173  0858  00AF               	movwf	?___ftmul
  4174  0859  3000               	movlw	0
  4175  085A  00B0               	movwf	?___ftmul+1
  4176  085B  3000               	movlw	0
  4177  085C  00B1               	movwf	?___ftmul+2
  4178  085D  2910               	goto	l734
  4179  085E                     l3473:
  4180  085E  083E               	movf	___ftmul@sign,w
  4181  085F  3E7B               	addlw	123
  4182  0860  00B5               	movwf	??___ftmul
  4183  0861  0835               	movf	??___ftmul,w
  4184  0862  07B9               	addwf	___ftmul@exp,f
  4185  0863  082F               	movf	___ftmul@f1,w
  4186  0864  00B5               	movwf	??___ftmul
  4187  0865  0830               	movf	___ftmul@f1+1,w
  4188  0866  00B6               	movwf	??___ftmul+1
  4189  0867  0831               	movf	___ftmul@f1+2,w
  4190  0868  00B7               	movwf	??___ftmul+2
  4191  0869  3010               	movlw	16
  4192  086A                     u5345:
  4193  086A  1003               	clrc
  4194  086B  0CB7               	rrf	??___ftmul+2,f
  4195  086C  0CB6               	rrf	??___ftmul+1,f
  4196  086D  0CB5               	rrf	??___ftmul,f
  4197  086E                     u5340:
  4198  086E  3EFF               	addlw	-1
  4199  086F  1D03               	skipz
  4200  0870  286A               	goto	u5345
  4201  0871  0835               	movf	??___ftmul,w
  4202  0872  00B8               	movwf	??___ftmul+3
  4203  0873  0838               	movf	??___ftmul+3,w
  4204  0874  00BE               	movwf	___ftmul@sign
  4205  0875  0832               	movf	___ftmul@f2,w
  4206  0876  00B5               	movwf	??___ftmul
  4207  0877  0833               	movf	___ftmul@f2+1,w
  4208  0878  00B6               	movwf	??___ftmul+1
  4209  0879  0834               	movf	___ftmul@f2+2,w
  4210  087A  00B7               	movwf	??___ftmul+2
  4211  087B  3010               	movlw	16
  4212  087C                     u5355:
  4213  087C  1003               	clrc
  4214  087D  0CB7               	rrf	??___ftmul+2,f
  4215  087E  0CB6               	rrf	??___ftmul+1,f
  4216  087F  0CB5               	rrf	??___ftmul,f
  4217  0880                     u5350:
  4218  0880  3EFF               	addlw	-1
  4219  0881  1D03               	skipz
  4220  0882  287C               	goto	u5355
  4221  0883  0835               	movf	??___ftmul,w
  4222  0884  00B8               	movwf	??___ftmul+3
  4223  0885  0838               	movf	??___ftmul+3,w
  4224  0886  06BE               	xorwf	___ftmul@sign,f
  4225  0887  3080               	movlw	128
  4226  0888  00B5               	movwf	??___ftmul
  4227  0889  0835               	movf	??___ftmul,w
  4228  088A  05BE               	andwf	___ftmul@sign,f
  4229  088B                     l3475:
  4230  088B  17B0               	bsf	___ftmul@f1+1,7
  4231  088C                     l3477:
  4232  088C  17B3               	bsf	___ftmul@f2+1,7
  4233  088D                     l3479:
  4234  088D  30FF               	movlw	255
  4235  088E  05B2               	andwf	___ftmul@f2,f
  4236  088F  30FF               	movlw	255
  4237  0890  05B3               	andwf	___ftmul@f2+1,f
  4238  0891  3000               	movlw	0
  4239  0892  05B4               	andwf	___ftmul@f2+2,f
  4240  0893                     l3481:
  4241  0893  3000               	movlw	0
  4242  0894  00BA               	movwf	___ftmul@f3_as_product
  4243  0895  3000               	movlw	0
  4244  0896  00BB               	movwf	___ftmul@f3_as_product+1
  4245  0897  3000               	movlw	0
  4246  0898  00BC               	movwf	___ftmul@f3_as_product+2
  4247  0899                     l3483:
  4248  0899  3007               	movlw	7
  4249  089A  00B5               	movwf	??___ftmul
  4250  089B  0835               	movf	??___ftmul,w
  4251  089C  00BD               	movwf	___ftmul@cntr
  4252  089D                     l3485:
  4253  089D  1C2F               	btfss	___ftmul@f1,0
  4254  089E  28A0               	goto	u5361
  4255  089F  28A1               	goto	u5360
  4256  08A0                     u5361:
  4257  08A0  28B1               	goto	l3489
  4258  08A1                     u5360:
  4259  08A1                     l3487:
  4260  08A1  0832               	movf	___ftmul@f2,w
  4261  08A2  07BA               	addwf	___ftmul@f3_as_product,f
  4262  08A3  0833               	movf	___ftmul@f2+1,w
  4263  08A4  1103               	clrz
  4264  08A5  1803               	skipnc
  4265  08A6  0A33               	incf	___ftmul@f2+1,w
  4266  08A7  1903               	skipnz
  4267  08A8  28AA               	goto	u5371
  4268  08A9  07BB               	addwf	___ftmul@f3_as_product+1,f
  4269  08AA                     u5371:
  4270  08AA  0834               	movf	___ftmul@f2+2,w
  4271  08AB  1103               	clrz
  4272  08AC  1803               	skipnc
  4273  08AD  0A34               	incf	___ftmul@f2+2,w
  4274  08AE  1903               	skipnz
  4275  08AF  28B1               	goto	u5372
  4276  08B0  07BC               	addwf	___ftmul@f3_as_product+2,f
  4277  08B1                     u5372:
  4278  08B1                     l3489:
  4279  08B1  3001               	movlw	1
  4280  08B2                     u5385:
  4281  08B2  1003               	clrc
  4282  08B3  0CB1               	rrf	___ftmul@f1+2,f
  4283  08B4  0CB0               	rrf	___ftmul@f1+1,f
  4284  08B5  0CAF               	rrf	___ftmul@f1,f
  4285  08B6  3EFF               	addlw	-1
  4286  08B7  1D03               	skipz
  4287  08B8  28B2               	goto	u5385
  4288  08B9                     l3491:
  4289  08B9  3001               	movlw	1
  4290  08BA                     u5395:
  4291  08BA  1003               	clrc
  4292  08BB  0DB2               	rlf	___ftmul@f2,f
  4293  08BC  0DB3               	rlf	___ftmul@f2+1,f
  4294  08BD  0DB4               	rlf	___ftmul@f2+2,f
  4295  08BE  3EFF               	addlw	-1
  4296  08BF  1D03               	skipz
  4297  08C0  28BA               	goto	u5395
  4298  08C1                     l3493:
  4299  08C1  3001               	movlw	1
  4300  08C2  02BD               	subwf	___ftmul@cntr,f
  4301  08C3  1D03               	btfss	3,2
  4302  08C4  28C6               	goto	u5401
  4303  08C5  28C7               	goto	u5400
  4304  08C6                     u5401:
  4305  08C6  289D               	goto	l3485
  4306  08C7                     u5400:
  4307  08C7                     l3495:
  4308  08C7  3009               	movlw	9
  4309  08C8  00B5               	movwf	??___ftmul
  4310  08C9  0835               	movf	??___ftmul,w
  4311  08CA  00BD               	movwf	___ftmul@cntr
  4312  08CB                     l3497:
  4313  08CB  1C2F               	btfss	___ftmul@f1,0
  4314  08CC  28CE               	goto	u5411
  4315  08CD  28CF               	goto	u5410
  4316  08CE                     u5411:
  4317  08CE  28DF               	goto	l3501
  4318  08CF                     u5410:
  4319  08CF                     l3499:
  4320  08CF  0832               	movf	___ftmul@f2,w
  4321  08D0  07BA               	addwf	___ftmul@f3_as_product,f
  4322  08D1  0833               	movf	___ftmul@f2+1,w
  4323  08D2  1103               	clrz
  4324  08D3  1803               	skipnc
  4325  08D4  0A33               	incf	___ftmul@f2+1,w
  4326  08D5  1903               	skipnz
  4327  08D6  28D8               	goto	u5421
  4328  08D7  07BB               	addwf	___ftmul@f3_as_product+1,f
  4329  08D8                     u5421:
  4330  08D8  0834               	movf	___ftmul@f2+2,w
  4331  08D9  1103               	clrz
  4332  08DA  1803               	skipnc
  4333  08DB  0A34               	incf	___ftmul@f2+2,w
  4334  08DC  1903               	skipnz
  4335  08DD  28DF               	goto	u5422
  4336  08DE  07BC               	addwf	___ftmul@f3_as_product+2,f
  4337  08DF                     u5422:
  4338  08DF                     l3501:
  4339  08DF  3001               	movlw	1
  4340  08E0                     u5435:
  4341  08E0  1003               	clrc
  4342  08E1  0CB1               	rrf	___ftmul@f1+2,f
  4343  08E2  0CB0               	rrf	___ftmul@f1+1,f
  4344  08E3  0CAF               	rrf	___ftmul@f1,f
  4345  08E4  3EFF               	addlw	-1
  4346  08E5  1D03               	skipz
  4347  08E6  28E0               	goto	u5435
  4348  08E7                     l3503:
  4349  08E7  3001               	movlw	1
  4350  08E8                     u5445:
  4351  08E8  1003               	clrc
  4352  08E9  0CBC               	rrf	___ftmul@f3_as_product+2,f
  4353  08EA  0CBB               	rrf	___ftmul@f3_as_product+1,f
  4354  08EB  0CBA               	rrf	___ftmul@f3_as_product,f
  4355  08EC  3EFF               	addlw	-1
  4356  08ED  1D03               	skipz
  4357  08EE  28E8               	goto	u5445
  4358  08EF                     l3505:
  4359  08EF  3001               	movlw	1
  4360  08F0  02BD               	subwf	___ftmul@cntr,f
  4361  08F1  1D03               	btfss	3,2
  4362  08F2  28F4               	goto	u5451
  4363  08F3  28F5               	goto	u5450
  4364  08F4                     u5451:
  4365  08F4  28CB               	goto	l3497
  4366  08F5                     u5450:
  4367  08F5                     l3507:
  4368  08F5  083A               	movf	___ftmul@f3_as_product,w
  4369  08F6  00F3               	movwf	___ftpack@arg
  4370  08F7  083B               	movf	___ftmul@f3_as_product+1,w
  4371  08F8  00F4               	movwf	___ftpack@arg+1
  4372  08F9  083C               	movf	___ftmul@f3_as_product+2,w
  4373  08FA  00F5               	movwf	___ftpack@arg+2
  4374  08FB  0839               	movf	___ftmul@exp,w
  4375  08FC  00B5               	movwf	??___ftmul
  4376  08FD  0835               	movf	??___ftmul,w
  4377  08FE  00F6               	movwf	___ftpack@exp
  4378  08FF  083E               	movf	___ftmul@sign,w
  4379  0900  00B6               	movwf	??___ftmul+1
  4380  0901  0836               	movf	??___ftmul+1,w
  4381  0902  00F7               	movwf	___ftpack@sign
  4382  0903  160A  118A  2308  120A  158A  	fcall	___ftpack
  4383  0908  0873               	movf	?___ftpack,w
  4384  0909  1283               	bcf	3,5	;RP0=0, select bank0
  4385  090A  1303               	bcf	3,6	;RP1=0, select bank0
  4386  090B  00AF               	movwf	?___ftmul
  4387  090C  0874               	movf	?___ftpack+1,w
  4388  090D  00B0               	movwf	?___ftmul+1
  4389  090E  0875               	movf	?___ftpack+2,w
  4390  090F  00B1               	movwf	?___ftmul+2
  4391  0910                     l734:
  4392  0910  0008               	return
  4393  0911                     __end_of___ftmul:
  4394                           
  4395                           	psect	text10
  4396  1F68                     __ptext10:	
  4397 ;; *************** function ___bmul *****************
  4398 ;; Defined at:
  4399 ;;		line 4 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\Umul8.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  multiplier      1    wreg     unsigned char 
  4402 ;;  multiplicand    1   11[BANK0 ] unsigned char 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  multiplier      1   14[BANK0 ] unsigned char 
  4405 ;;  product         1   13[BANK0 ] unsigned char 
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      unsigned char 
  4408 ;; Registers used:
  4409 ;;		wreg, status,2, status,0
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4415 ;;      Params:         0       1       0       0       0
  4416 ;;      Locals:         0       2       0       0       0
  4417 ;;      Temps:          0       1       0       0       0
  4418 ;;      Totals:         0       4       0       0       0
  4419 ;;Total ram usage:        4 bytes
  4420 ;; Hardware stack levels used:    1
  4421 ;; Hardware stack levels required when called:    2
  4422 ;; This function calls:
  4423 ;;		Nothing
  4424 ;; This function is called by:
  4425 ;;		_fround
  4426 ;;		_scale
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           
  4431                           ;psect for function ___bmul
  4432  1F68                     ___bmul:
  4433                           
  4434                           ;incstack = 0
  4435                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4436                           ;___bmul@multiplier stored from wreg
  4437  1F68  1283               	bcf	3,5	;RP0=0, select bank0
  4438  1F69  1303               	bcf	3,6	;RP1=0, select bank0
  4439  1F6A  00AE               	movwf	___bmul@multiplier
  4440  1F6B                     l2125:
  4441  1F6B  01AD               	clrf	___bmul@product
  4442  1F6C                     l2127:
  4443  1F6C  1C2E               	btfss	___bmul@multiplier,0
  4444  1F6D  2F6F               	goto	u2481
  4445  1F6E  2F70               	goto	u2480
  4446  1F6F                     u2481:
  4447  1F6F  2F74               	goto	l2131
  4448  1F70                     u2480:
  4449  1F70                     l2129:
  4450  1F70  082B               	movf	___bmul@multiplicand,w
  4451  1F71  00AC               	movwf	??___bmul
  4452  1F72  082C               	movf	??___bmul,w
  4453  1F73  07AD               	addwf	___bmul@product,f
  4454  1F74                     l2131:
  4455  1F74  1003               	clrc
  4456  1F75  0DAB               	rlf	___bmul@multiplicand,f
  4457  1F76                     l2133:
  4458  1F76  1003               	clrc
  4459  1F77  0CAE               	rrf	___bmul@multiplier,f
  4460  1F78  082E               	movf	___bmul@multiplier,w
  4461  1F79  1D03               	btfss	3,2
  4462  1F7A  2F7C               	goto	u2491
  4463  1F7B  2F7D               	goto	u2490
  4464  1F7C                     u2491:
  4465  1F7C  2F6C               	goto	l2127
  4466  1F7D                     u2490:
  4467  1F7D                     l2135:
  4468  1F7D  082D               	movf	___bmul@product,w
  4469  1F7E                     l451:
  4470  1F7E  0008               	return
  4471  1F7F                     __end_of___bmul:
  4472                           
  4473                           	psect	text11
  4474  153A                     __ptext11:	
  4475 ;; *************** function __tdiv_to_l_ *****************
  4476 ;; Defined at:
  4477 ;;		line 60 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftdivl.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  f1              3    0[BANK0 ] float 
  4480 ;;  f2              3    3[BANK0 ] float 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  quot            4    6[BANK0 ] unsigned long 
  4483 ;;  exp1            1   11[BANK0 ] unsigned char 
  4484 ;;  cntr            1   10[BANK0 ] unsigned char 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  4    0[BANK0 ] unsigned long 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2, status,0
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4494 ;;      Params:         0       6       0       0       0
  4495 ;;      Locals:         0       6       0       0       0
  4496 ;;      Temps:          4       0       0       0       0
  4497 ;;      Totals:         4      12       0       0       0
  4498 ;;Total ram usage:       16 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; Hardware stack levels required when called:    2
  4501 ;; This function calls:
  4502 ;;		Nothing
  4503 ;; This function is called by:
  4504 ;;		_sprintf
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           
  4509                           ;psect for function __tdiv_to_l_
  4510  153A                     __tdiv_to_l_:
  4511  153A                     l3621:	
  4512                           ;incstack = 0
  4513                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4514                           
  4515  153A  1283               	bcf	3,5	;RP0=0, select bank0
  4516  153B  1303               	bcf	3,6	;RP1=0, select bank0
  4517  153C  0820               	movf	__tdiv_to_l_@f1,w
  4518  153D  00F3               	movwf	??__tdiv_to_l_
  4519  153E  0821               	movf	__tdiv_to_l_@f1+1,w
  4520  153F  00F4               	movwf	??__tdiv_to_l_+1
  4521  1540  0822               	movf	__tdiv_to_l_@f1+2,w
  4522  1541  00F5               	movwf	??__tdiv_to_l_+2
  4523  1542  1003               	clrc
  4524  1543  0D74               	rlf	??__tdiv_to_l_+1,w
  4525  1544  0D75               	rlf	??__tdiv_to_l_+2,w
  4526  1545  00F6               	movwf	??__tdiv_to_l_+3
  4527  1546  0876               	movf	??__tdiv_to_l_+3,w
  4528  1547  00AB               	movwf	__tdiv_to_l_@exp1
  4529  1548  082B               	movf	__tdiv_to_l_@exp1,w
  4530  1549  1D03               	btfss	3,2
  4531  154A  2D4C               	goto	u5661
  4532  154B  2D4D               	goto	u5660
  4533  154C                     u5661:
  4534  154C  2D56               	goto	l3627
  4535  154D                     u5660:
  4536  154D                     l3623:
  4537  154D  3000               	movlw	0
  4538  154E  00A3               	movwf	?__tdiv_to_l_+3
  4539  154F  3000               	movlw	0
  4540  1550  00A2               	movwf	?__tdiv_to_l_+2
  4541  1551  3000               	movlw	0
  4542  1552  00A1               	movwf	?__tdiv_to_l_+1
  4543  1553  3000               	movlw	0
  4544  1554  00A0               	movwf	?__tdiv_to_l_
  4545  1555  2DF6               	goto	l710
  4546  1556                     l3627:
  4547  1556  0823               	movf	__tdiv_to_l_@f2,w
  4548  1557  00F3               	movwf	??__tdiv_to_l_
  4549  1558  0824               	movf	__tdiv_to_l_@f2+1,w
  4550  1559  00F4               	movwf	??__tdiv_to_l_+1
  4551  155A  0825               	movf	__tdiv_to_l_@f2+2,w
  4552  155B  00F5               	movwf	??__tdiv_to_l_+2
  4553  155C  1003               	clrc
  4554  155D  0D74               	rlf	??__tdiv_to_l_+1,w
  4555  155E  0D75               	rlf	??__tdiv_to_l_+2,w
  4556  155F  00F6               	movwf	??__tdiv_to_l_+3
  4557  1560  0876               	movf	??__tdiv_to_l_+3,w
  4558  1561  00AA               	movwf	__tdiv_to_l_@cntr
  4559  1562  082A               	movf	__tdiv_to_l_@cntr,w
  4560  1563  1D03               	btfss	3,2
  4561  1564  2D66               	goto	u5671
  4562  1565  2D67               	goto	u5670
  4563  1566                     u5671:
  4564  1566  2D68               	goto	l711
  4565  1567                     u5670:
  4566  1567  2D4D               	goto	l3623
  4567  1568                     l711:
  4568  1568  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4569  1569                     l3633:
  4570  1569  30FF               	movlw	255
  4571  156A  05A0               	andwf	__tdiv_to_l_@f1,f
  4572  156B  30FF               	movlw	255
  4573  156C  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4574  156D  3000               	movlw	0
  4575  156E  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4576  156F                     l3635:
  4577  156F  17A4               	bsf	__tdiv_to_l_@f2+1,7
  4578  1570  30FF               	movlw	255
  4579  1571  05A3               	andwf	__tdiv_to_l_@f2,f
  4580  1572  30FF               	movlw	255
  4581  1573  05A4               	andwf	__tdiv_to_l_@f2+1,f
  4582  1574  3000               	movlw	0
  4583  1575  05A5               	andwf	__tdiv_to_l_@f2+2,f
  4584  1576  3000               	movlw	0
  4585  1577  00A9               	movwf	__tdiv_to_l_@quot+3
  4586  1578  3000               	movlw	0
  4587  1579  00A8               	movwf	__tdiv_to_l_@quot+2
  4588  157A  3000               	movlw	0
  4589  157B  00A7               	movwf	__tdiv_to_l_@quot+1
  4590  157C  3000               	movlw	0
  4591  157D  00A6               	movwf	__tdiv_to_l_@quot
  4592  157E                     l3637:
  4593  157E  307F               	movlw	127
  4594  157F  02AB               	subwf	__tdiv_to_l_@exp1,f
  4595  1580                     l3639:
  4596  1580  3098               	movlw	152
  4597  1581  072A               	addwf	__tdiv_to_l_@cntr,w
  4598  1582  00F3               	movwf	??__tdiv_to_l_
  4599  1583  0873               	movf	??__tdiv_to_l_,w
  4600  1584  02AB               	subwf	__tdiv_to_l_@exp1,f
  4601  1585  3018               	movlw	24
  4602  1586  00F3               	movwf	??__tdiv_to_l_
  4603  1587  0873               	movf	??__tdiv_to_l_,w
  4604  1588  00AA               	movwf	__tdiv_to_l_@cntr
  4605  1589                     l3641:
  4606  1589  3001               	movlw	1
  4607  158A  00F3               	movwf	??__tdiv_to_l_
  4608  158B                     u5685:
  4609  158B  1003               	clrc
  4610  158C  0DA6               	rlf	__tdiv_to_l_@quot,f
  4611  158D  0DA7               	rlf	__tdiv_to_l_@quot+1,f
  4612  158E  0DA8               	rlf	__tdiv_to_l_@quot+2,f
  4613  158F  0DA9               	rlf	__tdiv_to_l_@quot+3,f
  4614  1590  0BF3               	decfsz	??__tdiv_to_l_,f
  4615  1591  2D8B               	goto	u5685
  4616  1592                     l3643:
  4617  1592  0825               	movf	__tdiv_to_l_@f2+2,w
  4618  1593  0222               	subwf	__tdiv_to_l_@f1+2,w
  4619  1594  1D03               	skipz
  4620  1595  2D9C               	goto	u5695
  4621  1596  0824               	movf	__tdiv_to_l_@f2+1,w
  4622  1597  0221               	subwf	__tdiv_to_l_@f1+1,w
  4623  1598  1D03               	skipz
  4624  1599  2D9C               	goto	u5695
  4625  159A  0823               	movf	__tdiv_to_l_@f2,w
  4626  159B  0220               	subwf	__tdiv_to_l_@f1,w
  4627  159C                     u5695:
  4628  159C  1C03               	skipc
  4629  159D  2D9F               	goto	u5691
  4630  159E  2DA0               	goto	u5690
  4631  159F                     u5691:
  4632  159F  2DAB               	goto	l3649
  4633  15A0                     u5690:
  4634  15A0                     l3645:
  4635  15A0  0823               	movf	__tdiv_to_l_@f2,w
  4636  15A1  02A0               	subwf	__tdiv_to_l_@f1,f
  4637  15A2  0824               	movf	__tdiv_to_l_@f2+1,w
  4638  15A3  1C03               	skipc
  4639  15A4  0F24               	incfsz	__tdiv_to_l_@f2+1,w
  4640  15A5  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4641  15A6  0825               	movf	__tdiv_to_l_@f2+2,w
  4642  15A7  1C03               	skipc
  4643  15A8  0A25               	incf	__tdiv_to_l_@f2+2,w
  4644  15A9  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4645  15AA                     l3647:
  4646  15AA  1426               	bsf	__tdiv_to_l_@quot,0
  4647  15AB                     l3649:
  4648  15AB  3001               	movlw	1
  4649  15AC                     u5705:
  4650  15AC  1003               	clrc
  4651  15AD  0DA0               	rlf	__tdiv_to_l_@f1,f
  4652  15AE  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4653  15AF  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4654  15B0  3EFF               	addlw	-1
  4655  15B1  1D03               	skipz
  4656  15B2  2DAC               	goto	u5705
  4657  15B3                     l3651:
  4658  15B3  3001               	movlw	1
  4659  15B4  02AA               	subwf	__tdiv_to_l_@cntr,f
  4660  15B5  1D03               	btfss	3,2
  4661  15B6  2DB8               	goto	u5711
  4662  15B7  2DB9               	goto	u5710
  4663  15B8                     u5711:
  4664  15B8  2D89               	goto	l3641
  4665  15B9                     u5710:
  4666  15B9                     l714:
  4667  15B9  1FAB               	btfss	__tdiv_to_l_@exp1,7
  4668  15BA  2DBC               	goto	u5721
  4669  15BB  2DBD               	goto	u5720
  4670  15BC                     u5721:
  4671  15BC  2DD7               	goto	l3661
  4672  15BD                     u5720:
  4673  15BD                     l3653:
  4674  15BD  082B               	movf	__tdiv_to_l_@exp1,w
  4675  15BE  3A80               	xorlw	128
  4676  15BF  3E97               	addlw	151
  4677  15C0  1803               	skipnc
  4678  15C1  2DC3               	goto	u5731
  4679  15C2  2DC4               	goto	u5730
  4680  15C3                     u5731:
  4681  15C3  2DC5               	goto	l3659
  4682  15C4                     u5730:
  4683  15C4  2D4D               	goto	l3623
  4684  15C5                     l3659:
  4685  15C5  3001               	movlw	1
  4686  15C6                     u5745:
  4687  15C6  1003               	clrc
  4688  15C7  0CA9               	rrf	__tdiv_to_l_@quot+3,f
  4689  15C8  0CA8               	rrf	__tdiv_to_l_@quot+2,f
  4690  15C9  0CA7               	rrf	__tdiv_to_l_@quot+1,f
  4691  15CA  0CA6               	rrf	__tdiv_to_l_@quot,f
  4692  15CB  3EFF               	addlw	-1
  4693  15CC  1D03               	skipz
  4694  15CD  2DC6               	goto	u5745
  4695  15CE  3001               	movlw	1
  4696  15CF  00F3               	movwf	??__tdiv_to_l_
  4697  15D0  0873               	movf	??__tdiv_to_l_,w
  4698  15D1  07AB               	addwf	__tdiv_to_l_@exp1,f
  4699  15D2  1D03               	btfss	3,2
  4700  15D3  2DD5               	goto	u5751
  4701  15D4  2DD6               	goto	u5750
  4702  15D5                     u5751:
  4703  15D5  2DC5               	goto	l3659
  4704  15D6                     u5750:
  4705  15D6  2DEE               	goto	l3669
  4706  15D7                     l3661:
  4707  15D7  3018               	movlw	24
  4708  15D8  022B               	subwf	__tdiv_to_l_@exp1,w
  4709  15D9  1C03               	skipc
  4710  15DA  2DDC               	goto	u5761
  4711  15DB  2DDD               	goto	u5760
  4712  15DC                     u5761:
  4713  15DC  2DE9               	goto	l721
  4714  15DD                     u5760:
  4715  15DD  2D4D               	goto	l3623
  4716  15DE                     l3667:
  4717  15DE  3001               	movlw	1
  4718  15DF  00F3               	movwf	??__tdiv_to_l_
  4719  15E0                     u5775:
  4720  15E0  1003               	clrc
  4721  15E1  0DA6               	rlf	__tdiv_to_l_@quot,f
  4722  15E2  0DA7               	rlf	__tdiv_to_l_@quot+1,f
  4723  15E3  0DA8               	rlf	__tdiv_to_l_@quot+2,f
  4724  15E4  0DA9               	rlf	__tdiv_to_l_@quot+3,f
  4725  15E5  0BF3               	decfsz	??__tdiv_to_l_,f
  4726  15E6  2DE0               	goto	u5775
  4727  15E7  3001               	movlw	1
  4728  15E8  02AB               	subwf	__tdiv_to_l_@exp1,f
  4729  15E9                     l721:
  4730  15E9  082B               	movf	__tdiv_to_l_@exp1,w
  4731  15EA  1D03               	btfss	3,2
  4732  15EB  2DED               	goto	u5781
  4733  15EC  2DEE               	goto	u5780
  4734  15ED                     u5781:
  4735  15ED  2DDE               	goto	l3667
  4736  15EE                     u5780:
  4737  15EE                     l3669:
  4738  15EE  0829               	movf	__tdiv_to_l_@quot+3,w
  4739  15EF  00A3               	movwf	?__tdiv_to_l_+3
  4740  15F0  0828               	movf	__tdiv_to_l_@quot+2,w
  4741  15F1  00A2               	movwf	?__tdiv_to_l_+2
  4742  15F2  0827               	movf	__tdiv_to_l_@quot+1,w
  4743  15F3  00A1               	movwf	?__tdiv_to_l_+1
  4744  15F4  0826               	movf	__tdiv_to_l_@quot,w
  4745  15F5  00A0               	movwf	?__tdiv_to_l_
  4746  15F6                     l710:
  4747  15F6  0008               	return
  4748  15F7                     __end_of__tdiv_to_l_:
  4749                           
  4750                           	psect	text12
  4751  16D3                     __ptext12:	
  4752 ;; *************** function __div_to_l_ *****************
  4753 ;; Defined at:
  4754 ;;		line 60 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\fldivl.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  f1              3    0[BANK0 ] unsigned long 
  4757 ;;  f2              3    3[BANK0 ] unsigned long 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  quot            4   14[BANK0 ] unsigned long 
  4760 ;;  exp1            1   19[BANK0 ] unsigned char 
  4761 ;;  cntr            1   18[BANK0 ] unsigned char 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  4    0[BANK0 ] unsigned long 
  4764 ;; Registers used:
  4765 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4771 ;;      Params:         0       6       0       0       0
  4772 ;;      Locals:         0       6       0       0       0
  4773 ;;      Temps:          0       8       0       0       0
  4774 ;;      Totals:         0      20       0       0       0
  4775 ;;Total ram usage:       20 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    2
  4778 ;; This function calls:
  4779 ;;		Nothing
  4780 ;; This function is called by:
  4781 ;;		_sprintf
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           
  4786                           ;psect for function __div_to_l_
  4787  16D3                     __div_to_l_:
  4788  16D3                     l3673:	
  4789                           ;incstack = 0
  4790                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  4791                           
  4792  16D3  3020               	movlw	low (__div_to_l_@f1| 0)
  4793  16D4  0084               	movwf	4
  4794  16D5  1383               	bcf	3,7	;select IRP bank0
  4795  16D6  0800               	movf	0,w
  4796  16D7  1283               	bcf	3,5	;RP0=0, select bank0
  4797  16D8  1303               	bcf	3,6	;RP1=0, select bank0
  4798  16D9  00A6               	movwf	??__div_to_l_
  4799  16DA  0A84               	incf	4,f
  4800  16DB  0800               	movf	0,w
  4801  16DC  00A7               	movwf	??__div_to_l_+1
  4802  16DD  0A84               	incf	4,f
  4803  16DE  0800               	movf	0,w
  4804  16DF  00A8               	movwf	??__div_to_l_+2
  4805  16E0  0A84               	incf	4,f
  4806  16E1  0800               	movf	0,w
  4807  16E2  00A9               	movwf	??__div_to_l_+3
  4808  16E3  1003               	clrc
  4809  16E4  0D28               	rlf	??__div_to_l_+2,w
  4810  16E5  0D29               	rlf	??__div_to_l_+3,w
  4811  16E6  00AA               	movwf	??__div_to_l_+4
  4812  16E7  082A               	movf	??__div_to_l_+4,w
  4813  16E8  00B3               	movwf	__div_to_l_@exp1
  4814  16E9  0833               	movf	__div_to_l_@exp1,w
  4815  16EA  1D03               	btfss	3,2
  4816  16EB  2EED               	goto	u5791
  4817  16EC  2EEE               	goto	u5790
  4818  16ED                     u5791:
  4819  16ED  2EF7               	goto	l3679
  4820  16EE                     u5790:
  4821  16EE                     l3675:
  4822  16EE  3000               	movlw	0
  4823  16EF  00A3               	movwf	?__div_to_l_+3
  4824  16F0  3000               	movlw	0
  4825  16F1  00A2               	movwf	?__div_to_l_+2
  4826  16F2  3000               	movlw	0
  4827  16F3  00A1               	movwf	?__div_to_l_+1
  4828  16F4  3000               	movlw	0
  4829  16F5  00A0               	movwf	?__div_to_l_
  4830  16F6  2FFF               	goto	l631
  4831  16F7                     l3679:
  4832  16F7  3023               	movlw	low (__div_to_l_@f2| 0)
  4833  16F8  0084               	movwf	4
  4834  16F9  0800               	movf	0,w
  4835  16FA  00A6               	movwf	??__div_to_l_
  4836  16FB  0A84               	incf	4,f
  4837  16FC  0800               	movf	0,w
  4838  16FD  00A7               	movwf	??__div_to_l_+1
  4839  16FE  0A84               	incf	4,f
  4840  16FF  0800               	movf	0,w
  4841  1700  00A8               	movwf	??__div_to_l_+2
  4842  1701  0A84               	incf	4,f
  4843  1702  0800               	movf	0,w
  4844  1703  00A9               	movwf	??__div_to_l_+3
  4845  1704  1003               	clrc
  4846  1705  0D28               	rlf	??__div_to_l_+2,w
  4847  1706  0D29               	rlf	??__div_to_l_+3,w
  4848  1707  00AA               	movwf	??__div_to_l_+4
  4849  1708  082A               	movf	??__div_to_l_+4,w
  4850  1709  00B2               	movwf	__div_to_l_@cntr
  4851  170A  0832               	movf	__div_to_l_@cntr,w
  4852  170B  1D03               	btfss	3,2
  4853  170C  2F0E               	goto	u5801
  4854  170D  2F0F               	goto	u5800
  4855  170E                     u5801:
  4856  170E  2F10               	goto	l3685
  4857  170F                     u5800:
  4858  170F  2EEE               	goto	l3675
  4859  1710                     l3685:
  4860  1710  3020               	movlw	low (__div_to_l_@f1| 0)
  4861  1711  0084               	movwf	4
  4862  1712  3000               	movlw	0
  4863  1713  0480               	iorwf	0,f
  4864  1714  0A84               	incf	4,f
  4865  1715  3000               	movlw	0
  4866  1716  0480               	iorwf	0,f
  4867  1717  0A84               	incf	4,f
  4868  1718  3080               	movlw	128
  4869  1719  0480               	iorwf	0,f
  4870  171A  0A84               	incf	4,f
  4871  171B  3000               	movlw	0
  4872  171C  0480               	iorwf	0,f
  4873  171D  3020               	movlw	low (__div_to_l_@f1| 0)
  4874  171E  0084               	movwf	4
  4875  171F  30FF               	movlw	255
  4876  1720  0580               	andwf	0,f
  4877  1721  0A84               	incf	4,f
  4878  1722  30FF               	movlw	255
  4879  1723  0580               	andwf	0,f
  4880  1724  0A84               	incf	4,f
  4881  1725  30FF               	movlw	255
  4882  1726  0580               	andwf	0,f
  4883  1727  0A84               	incf	4,f
  4884  1728  3000               	movlw	0
  4885  1729  0580               	andwf	0,f
  4886  172A  3023               	movlw	low (__div_to_l_@f2| 0)
  4887  172B  0084               	movwf	4
  4888  172C  3000               	movlw	0
  4889  172D  0480               	iorwf	0,f
  4890  172E  0A84               	incf	4,f
  4891  172F  3000               	movlw	0
  4892  1730  0480               	iorwf	0,f
  4893  1731  0A84               	incf	4,f
  4894  1732  3080               	movlw	128
  4895  1733  0480               	iorwf	0,f
  4896  1734  0A84               	incf	4,f
  4897  1735  3000               	movlw	0
  4898  1736  0480               	iorwf	0,f
  4899  1737  3023               	movlw	low (__div_to_l_@f2| 0)
  4900  1738  0084               	movwf	4
  4901  1739  30FF               	movlw	255
  4902  173A  0580               	andwf	0,f
  4903  173B  0A84               	incf	4,f
  4904  173C  30FF               	movlw	255
  4905  173D  0580               	andwf	0,f
  4906  173E  0A84               	incf	4,f
  4907  173F  30FF               	movlw	255
  4908  1740  0580               	andwf	0,f
  4909  1741  0A84               	incf	4,f
  4910  1742  3000               	movlw	0
  4911  1743  0580               	andwf	0,f
  4912  1744                     l3687:
  4913  1744  3000               	movlw	0
  4914  1745  00B1               	movwf	__div_to_l_@quot+3
  4915  1746  3000               	movlw	0
  4916  1747  00B0               	movwf	__div_to_l_@quot+2
  4917  1748  3000               	movlw	0
  4918  1749  00AF               	movwf	__div_to_l_@quot+1
  4919  174A  3000               	movlw	0
  4920  174B  00AE               	movwf	__div_to_l_@quot
  4921  174C                     l3689:
  4922  174C  307F               	movlw	127
  4923  174D  02B3               	subwf	__div_to_l_@exp1,f
  4924  174E                     l3691:
  4925  174E  30A0               	movlw	160
  4926  174F  0732               	addwf	__div_to_l_@cntr,w
  4927  1750  00A6               	movwf	??__div_to_l_
  4928  1751  0826               	movf	??__div_to_l_,w
  4929  1752  02B3               	subwf	__div_to_l_@exp1,f
  4930  1753                     l3693:
  4931  1753  3020               	movlw	32
  4932  1754  00A6               	movwf	??__div_to_l_
  4933  1755  0826               	movf	??__div_to_l_,w
  4934  1756  00B2               	movwf	__div_to_l_@cntr
  4935  1757                     l3695:
  4936  1757  3001               	movlw	1
  4937  1758  00A6               	movwf	??__div_to_l_
  4938  1759                     u5815:
  4939  1759  1003               	clrc
  4940  175A  0DAE               	rlf	__div_to_l_@quot,f
  4941  175B  0DAF               	rlf	__div_to_l_@quot+1,f
  4942  175C  0DB0               	rlf	__div_to_l_@quot+2,f
  4943  175D  0DB1               	rlf	__div_to_l_@quot+3,f
  4944  175E  0BA6               	decfsz	??__div_to_l_,f
  4945  175F  2F59               	goto	u5815
  4946  1760                     l3697:
  4947  1760  3023               	movlw	low (__div_to_l_@f2| 0)
  4948  1761  0084               	movwf	4
  4949  1762  0800               	movf	0,w
  4950  1763  00A6               	movwf	??__div_to_l_
  4951  1764  0A84               	incf	4,f
  4952  1765  0800               	movf	0,w
  4953  1766  00A7               	movwf	??__div_to_l_+1
  4954  1767  0A84               	incf	4,f
  4955  1768  0800               	movf	0,w
  4956  1769  00A8               	movwf	??__div_to_l_+2
  4957  176A  0A84               	incf	4,f
  4958  176B  0800               	movf	0,w
  4959  176C  00A9               	movwf	??__div_to_l_+3
  4960  176D  3020               	movlw	low (__div_to_l_@f1| 0)
  4961  176E  0084               	movwf	4
  4962  176F  0800               	movf	0,w
  4963  1770  00AA               	movwf	??__div_to_l_+4
  4964  1771  0A84               	incf	4,f
  4965  1772  0800               	movf	0,w
  4966  1773  00AB               	movwf	??__div_to_l_+5
  4967  1774  0A84               	incf	4,f
  4968  1775  0800               	movf	0,w
  4969  1776  00AC               	movwf	??__div_to_l_+6
  4970  1777  0A84               	incf	4,f
  4971  1778  0800               	movf	0,w
  4972  1779  00AD               	movwf	??__div_to_l_+7
  4973  177A  0829               	movf	??__div_to_l_+3,w
  4974  177B  022D               	subwf	??__div_to_l_+7,w
  4975  177C  1D03               	skipz
  4976  177D  2F88               	goto	u5825
  4977  177E  0828               	movf	??__div_to_l_+2,w
  4978  177F  022C               	subwf	??__div_to_l_+6,w
  4979  1780  1D03               	skipz
  4980  1781  2F88               	goto	u5825
  4981  1782  0827               	movf	??__div_to_l_+1,w
  4982  1783  022B               	subwf	??__div_to_l_+5,w
  4983  1784  1D03               	skipz
  4984  1785  2F88               	goto	u5825
  4985  1786  0826               	movf	??__div_to_l_,w
  4986  1787  022A               	subwf	??__div_to_l_+4,w
  4987  1788                     u5825:
  4988  1788  1C03               	skipc
  4989  1789  2F8B               	goto	u5821
  4990  178A  2F8C               	goto	u5820
  4991  178B                     u5821:
  4992  178B  2FAF               	goto	l634
  4993  178C                     u5820:
  4994  178C                     l3699:
  4995  178C  3023               	movlw	low (__div_to_l_@f2| 0)
  4996  178D  0084               	movwf	4
  4997  178E  0800               	movf	0,w
  4998  178F  00A6               	movwf	??__div_to_l_
  4999  1790  0A84               	incf	4,f
  5000  1791  0800               	movf	0,w
  5001  1792  00A7               	movwf	??__div_to_l_+1
  5002  1793  0A84               	incf	4,f
  5003  1794  0800               	movf	0,w
  5004  1795  00A8               	movwf	??__div_to_l_+2
  5005  1796  0A84               	incf	4,f
  5006  1797  0800               	movf	0,w
  5007  1798  00A9               	movwf	??__div_to_l_+3
  5008  1799  3020               	movlw	low (__div_to_l_@f1| 0)
  5009  179A  0084               	movwf	4
  5010  179B  0826               	movf	??__div_to_l_,w
  5011  179C  0280               	subwf	0,f
  5012  179D  0A84               	incf	4,f
  5013  179E  0827               	movf	??__div_to_l_+1,w
  5014  179F  1C03               	skipc
  5015  17A0  0F27               	incfsz	??__div_to_l_+1,w
  5016  17A1  0280               	subwf	0,f
  5017  17A2  0A84               	incf	4,f
  5018  17A3  0828               	movf	??__div_to_l_+2,w
  5019  17A4  1C03               	skipc
  5020  17A5  0F28               	incfsz	??__div_to_l_+2,w
  5021  17A6  0280               	subwf	0,f
  5022  17A7  0A84               	incf	4,f
  5023  17A8  0829               	movf	??__div_to_l_+3,w
  5024  17A9  1C03               	skipc
  5025  17AA  0A29               	incf	??__div_to_l_+3,w
  5026  17AB  0280               	subwf	0,f
  5027  17AC  3003               	movlw	3
  5028  17AD  0284               	subwf	4,f
  5029  17AE                     l3701:
  5030  17AE  142E               	bsf	__div_to_l_@quot,0
  5031  17AF                     l634:
  5032  17AF  3020               	movlw	low (__div_to_l_@f1| 0)
  5033  17B0  0084               	movwf	4
  5034  17B1  1003               	clrc
  5035  17B2  0D80               	rlf	0,f
  5036  17B3  0A84               	incf	4,f
  5037  17B4  0D80               	rlf	0,f
  5038  17B5  0A84               	incf	4,f
  5039  17B6  0D80               	rlf	0,f
  5040  17B7  0A84               	incf	4,f
  5041  17B8  0D80               	rlf	0,f
  5042  17B9  0384               	decf	4,f
  5043  17BA  0384               	decf	4,f
  5044  17BB  0384               	decf	4,f
  5045  17BC                     l3703:
  5046  17BC  3001               	movlw	1
  5047  17BD  02B2               	subwf	__div_to_l_@cntr,f
  5048  17BE  1D03               	btfss	3,2
  5049  17BF  2FC1               	goto	u5831
  5050  17C0  2FC2               	goto	u5830
  5051  17C1                     u5831:
  5052  17C1  2F57               	goto	l3695
  5053  17C2                     u5830:
  5054  17C2                     l635:
  5055  17C2  1FB3               	btfss	__div_to_l_@exp1,7
  5056  17C3  2FC5               	goto	u5841
  5057  17C4  2FC6               	goto	u5840
  5058  17C5                     u5841:
  5059  17C5  2FE0               	goto	l3713
  5060  17C6                     u5840:
  5061  17C6                     l3705:
  5062  17C6  0833               	movf	__div_to_l_@exp1,w
  5063  17C7  3A80               	xorlw	128
  5064  17C8  3E9F               	addlw	159
  5065  17C9  1803               	skipnc
  5066  17CA  2FCC               	goto	u5851
  5067  17CB  2FCD               	goto	u5850
  5068  17CC                     u5851:
  5069  17CC  2FCE               	goto	l3711
  5070  17CD                     u5850:
  5071  17CD  2EEE               	goto	l3675
  5072  17CE                     l3711:
  5073  17CE  3001               	movlw	1
  5074  17CF                     u5865:
  5075  17CF  1003               	clrc
  5076  17D0  0CB1               	rrf	__div_to_l_@quot+3,f
  5077  17D1  0CB0               	rrf	__div_to_l_@quot+2,f
  5078  17D2  0CAF               	rrf	__div_to_l_@quot+1,f
  5079  17D3  0CAE               	rrf	__div_to_l_@quot,f
  5080  17D4  3EFF               	addlw	-1
  5081  17D5  1D03               	skipz
  5082  17D6  2FCF               	goto	u5865
  5083  17D7  3001               	movlw	1
  5084  17D8  00A6               	movwf	??__div_to_l_
  5085  17D9  0826               	movf	??__div_to_l_,w
  5086  17DA  07B3               	addwf	__div_to_l_@exp1,f
  5087  17DB  1D03               	btfss	3,2
  5088  17DC  2FDE               	goto	u5871
  5089  17DD  2FDF               	goto	u5870
  5090  17DE                     u5871:
  5091  17DE  2FCE               	goto	l3711
  5092  17DF                     u5870:
  5093  17DF  2FF7               	goto	l3721
  5094  17E0                     l3713:
  5095  17E0  3020               	movlw	32
  5096  17E1  0233               	subwf	__div_to_l_@exp1,w
  5097  17E2  1C03               	skipc
  5098  17E3  2FE5               	goto	u5881
  5099  17E4  2FE6               	goto	u5880
  5100  17E5                     u5881:
  5101  17E5  2FF2               	goto	l642
  5102  17E6                     u5880:
  5103  17E6  2EEE               	goto	l3675
  5104  17E7                     l3719:
  5105  17E7  3001               	movlw	1
  5106  17E8  00A6               	movwf	??__div_to_l_
  5107  17E9                     u5895:
  5108  17E9  1003               	clrc
  5109  17EA  0DAE               	rlf	__div_to_l_@quot,f
  5110  17EB  0DAF               	rlf	__div_to_l_@quot+1,f
  5111  17EC  0DB0               	rlf	__div_to_l_@quot+2,f
  5112  17ED  0DB1               	rlf	__div_to_l_@quot+3,f
  5113  17EE  0BA6               	decfsz	??__div_to_l_,f
  5114  17EF  2FE9               	goto	u5895
  5115  17F0  3001               	movlw	1
  5116  17F1  02B3               	subwf	__div_to_l_@exp1,f
  5117  17F2                     l642:
  5118  17F2  0833               	movf	__div_to_l_@exp1,w
  5119  17F3  1D03               	btfss	3,2
  5120  17F4  2FF6               	goto	u5901
  5121  17F5  2FF7               	goto	u5900
  5122  17F6                     u5901:
  5123  17F6  2FE7               	goto	l3719
  5124  17F7                     u5900:
  5125  17F7                     l3721:
  5126  17F7  0831               	movf	__div_to_l_@quot+3,w
  5127  17F8  00A3               	movwf	?__div_to_l_+3
  5128  17F9  0830               	movf	__div_to_l_@quot+2,w
  5129  17FA  00A2               	movwf	?__div_to_l_+2
  5130  17FB  082F               	movf	__div_to_l_@quot+1,w
  5131  17FC  00A1               	movwf	?__div_to_l_+1
  5132  17FD  082E               	movf	__div_to_l_@quot,w
  5133  17FE  00A0               	movwf	?__div_to_l_
  5134  17FF                     l631:
  5135  17FF  0008               	return
  5136  1800                     __end_of__div_to_l_:
  5137                           
  5138                           	psect	text13
  5139  0801                     __ptext13:	
  5140 ;; *************** function ___wmul *****************
  5141 ;; Defined at:
  5142 ;;		line 15 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\Umul16.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;  multiplier      2    3[COMMON] unsigned int 
  5145 ;;  multiplicand    2    5[COMMON] unsigned int 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  product         2    0[BANK0 ] unsigned int 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  2    3[COMMON] unsigned int 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2, status,0
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5157 ;;      Params:         4       0       0       0       0
  5158 ;;      Locals:         0       2       0       0       0
  5159 ;;      Temps:          0       0       0       0       0
  5160 ;;      Totals:         4       2       0       0       0
  5161 ;;Total ram usage:        6 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:    2
  5164 ;; This function calls:
  5165 ;;		Nothing
  5166 ;; This function is called by:
  5167 ;;		_sprintf
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           
  5172                           ;psect for function ___wmul
  5173  0801                     ___wmul:
  5174  0801                     l3725:	
  5175                           ;incstack = 0
  5176                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5177                           
  5178  0801  1283               	bcf	3,5	;RP0=0, select bank0
  5179  0802  1303               	bcf	3,6	;RP1=0, select bank0
  5180  0803  01A0               	clrf	___wmul@product
  5181  0804  01A1               	clrf	___wmul@product+1
  5182  0805                     l3727:
  5183  0805  1C73               	btfss	___wmul@multiplier,0
  5184  0806  2808               	goto	u5911
  5185  0807  2809               	goto	u5910
  5186  0808                     u5911:
  5187  0808  2811               	goto	l425
  5188  0809                     u5910:
  5189  0809                     l3729:
  5190  0809  0875               	movf	___wmul@multiplicand,w
  5191  080A  1283               	bcf	3,5	;RP0=0, select bank0
  5192  080B  1303               	bcf	3,6	;RP1=0, select bank0
  5193  080C  07A0               	addwf	___wmul@product,f
  5194  080D  1803               	skipnc
  5195  080E  0AA1               	incf	___wmul@product+1,f
  5196  080F  0876               	movf	___wmul@multiplicand+1,w
  5197  0810  07A1               	addwf	___wmul@product+1,f
  5198  0811                     l425:
  5199  0811  3001               	movlw	1
  5200  0812                     u5925:
  5201  0812  1003               	clrc
  5202  0813  0DF5               	rlf	___wmul@multiplicand,f
  5203  0814  0DF6               	rlf	___wmul@multiplicand+1,f
  5204  0815  3EFF               	addlw	-1
  5205  0816  1D03               	skipz
  5206  0817  2812               	goto	u5925
  5207  0818                     l3731:
  5208  0818  3001               	movlw	1
  5209  0819                     u5935:
  5210  0819  1003               	clrc
  5211  081A  0CF4               	rrf	___wmul@multiplier+1,f
  5212  081B  0CF3               	rrf	___wmul@multiplier,f
  5213  081C  3EFF               	addlw	-1
  5214  081D  1D03               	skipz
  5215  081E  2819               	goto	u5935
  5216  081F                     l3733:
  5217  081F  0873               	movf	___wmul@multiplier,w
  5218  0820  0474               	iorwf	___wmul@multiplier+1,w
  5219  0821  1D03               	btfss	3,2
  5220  0822  2824               	goto	u5941
  5221  0823  2825               	goto	u5940
  5222  0824                     u5941:
  5223  0824  2805               	goto	l3727
  5224  0825                     u5940:
  5225  0825                     l3735:
  5226  0825  1283               	bcf	3,5	;RP0=0, select bank0
  5227  0826  1303               	bcf	3,6	;RP1=0, select bank0
  5228  0827  0821               	movf	___wmul@product+1,w
  5229  0828  00F4               	movwf	?___wmul+1
  5230  0829  0820               	movf	___wmul@product,w
  5231  082A  00F3               	movwf	?___wmul
  5232  082B                     l427:
  5233  082B  0008               	return
  5234  082C                     __end_of___wmul:
  5235                           
  5236                           	psect	text14
  5237  1097                     __ptext14:	
  5238 ;; *************** function ___lltoft *****************
  5239 ;; Defined at:
  5240 ;;		line 35 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lltoft.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;  c               4    3[BANK0 ] unsigned long 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  exp             1    8[BANK0 ] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  3    3[BANK0 ] float 
  5247 ;; Registers used:
  5248 ;;		wreg, status,2, status,0, pclath, cstack
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5254 ;;      Params:         0       4       0       0       0
  5255 ;;      Locals:         0       1       0       0       0
  5256 ;;      Temps:          0       1       0       0       0
  5257 ;;      Totals:         0       6       0       0       0
  5258 ;;Total ram usage:        6 bytes
  5259 ;; Hardware stack levels used:    1
  5260 ;; Hardware stack levels required when called:    3
  5261 ;; This function calls:
  5262 ;;		___ftpack
  5263 ;; This function is called by:
  5264 ;;		_aht_GetHumidity
  5265 ;;		_aht_GetTemperature
  5266 ;;		_sprintf
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           
  5271                           ;psect for function ___lltoft
  5272  1097                     ___lltoft:
  5273  1097                     l3851:	
  5274                           ;incstack = 0
  5275                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5276                           
  5277  1097  308E               	movlw	142
  5278  1098  1283               	bcf	3,5	;RP0=0, select bank0
  5279  1099  1303               	bcf	3,6	;RP1=0, select bank0
  5280  109A  00A7               	movwf	??___lltoft
  5281  109B  0827               	movf	??___lltoft,w
  5282  109C  00A8               	movwf	___lltoft@exp
  5283  109D  28AB               	goto	l3855
  5284  109E                     l3853:
  5285  109E  3001               	movlw	1
  5286  109F                     u6225:
  5287  109F  1003               	clrc
  5288  10A0  0CA6               	rrf	___lltoft@c+3,f
  5289  10A1  0CA5               	rrf	___lltoft@c+2,f
  5290  10A2  0CA4               	rrf	___lltoft@c+1,f
  5291  10A3  0CA3               	rrf	___lltoft@c,f
  5292  10A4  3EFF               	addlw	-1
  5293  10A5  1D03               	skipz
  5294  10A6  289F               	goto	u6225
  5295  10A7  3001               	movlw	1
  5296  10A8  00A7               	movwf	??___lltoft
  5297  10A9  0827               	movf	??___lltoft,w
  5298  10AA  07A8               	addwf	___lltoft@exp,f
  5299  10AB                     l3855:
  5300  10AB  30FF               	movlw	255
  5301  10AC  0526               	andwf	___lltoft@c+3,w
  5302  10AD  1D03               	btfss	3,2
  5303  10AE  28B0               	goto	u6231
  5304  10AF  28B1               	goto	u6230
  5305  10B0                     u6231:
  5306  10B0  289E               	goto	l3853
  5307  10B1                     u6230:
  5308  10B1                     l3857:
  5309  10B1  0823               	movf	___lltoft@c,w
  5310  10B2  00F3               	movwf	___ftpack@arg
  5311  10B3  0824               	movf	___lltoft@c+1,w
  5312  10B4  00F4               	movwf	___ftpack@arg+1
  5313  10B5  0825               	movf	___lltoft@c+2,w
  5314  10B6  00F5               	movwf	___ftpack@arg+2
  5315  10B7  0828               	movf	___lltoft@exp,w
  5316  10B8  00A7               	movwf	??___lltoft
  5317  10B9  0827               	movf	??___lltoft,w
  5318  10BA  00F6               	movwf	___ftpack@exp
  5319  10BB  01F7               	clrf	___ftpack@sign
  5320  10BC  160A  118A  2308  160A  118A  	fcall	___ftpack
  5321  10C1  0873               	movf	?___ftpack,w
  5322  10C2  1283               	bcf	3,5	;RP0=0, select bank0
  5323  10C3  1303               	bcf	3,6	;RP1=0, select bank0
  5324  10C4  00A3               	movwf	?___lltoft
  5325  10C5  0874               	movf	?___ftpack+1,w
  5326  10C6  00A4               	movwf	?___lltoft+1
  5327  10C7  0875               	movf	?___ftpack+2,w
  5328  10C8  00A5               	movwf	?___lltoft+2
  5329  10C9                     l804:
  5330  10C9  0008               	return
  5331  10CA                     __end_of___lltoft:
  5332                           
  5333                           	psect	text15
  5334  1186                     __ptext15:	
  5335 ;; *************** function ___llmod *****************
  5336 ;; Defined at:
  5337 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\llmod.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;  divisor         4    0[BANK0 ] unsigned long 
  5340 ;;  dividend        4    4[BANK0 ] unsigned long 
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;  counter         1    4[COMMON] unsigned char 
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  4    0[BANK0 ] unsigned long 
  5345 ;; Registers used:
  5346 ;;		wreg, status,2, status,0
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5352 ;;      Params:         0       8       0       0       0
  5353 ;;      Locals:         1       0       0       0       0
  5354 ;;      Temps:          1       0       0       0       0
  5355 ;;      Totals:         2       8       0       0       0
  5356 ;;Total ram usage:       10 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; Hardware stack levels required when called:    2
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_sprintf
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           
  5367                           ;psect for function ___llmod
  5368  1186                     ___llmod:
  5369  1186                     l3831:	
  5370                           ;incstack = 0
  5371                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5372                           
  5373  1186  1283               	bcf	3,5	;RP0=0, select bank0
  5374  1187  1303               	bcf	3,6	;RP1=0, select bank0
  5375  1188  0823               	movf	___llmod@divisor+3,w
  5376  1189  0422               	iorwf	___llmod@divisor+2,w
  5377  118A  0421               	iorwf	___llmod@divisor+1,w
  5378  118B  0420               	iorwf	___llmod@divisor,w
  5379  118C  1903               	skipnz
  5380  118D  298F               	goto	u6161
  5381  118E  2990               	goto	u6160
  5382  118F                     u6161:
  5383  118F  29D3               	goto	l3847
  5384  1190                     u6160:
  5385  1190                     l3833:
  5386  1190  01F4               	clrf	___llmod@counter
  5387  1191  0AF4               	incf	___llmod@counter,f
  5388  1192  29A0               	goto	l3837
  5389  1193                     l3835:
  5390  1193  3001               	movlw	1
  5391  1194  00F3               	movwf	??___llmod
  5392  1195                     u6175:
  5393  1195  1003               	clrc
  5394  1196  0DA0               	rlf	___llmod@divisor,f
  5395  1197  0DA1               	rlf	___llmod@divisor+1,f
  5396  1198  0DA2               	rlf	___llmod@divisor+2,f
  5397  1199  0DA3               	rlf	___llmod@divisor+3,f
  5398  119A  0BF3               	decfsz	??___llmod,f
  5399  119B  2995               	goto	u6175
  5400  119C  3001               	movlw	1
  5401  119D  00F3               	movwf	??___llmod
  5402  119E  0873               	movf	??___llmod,w
  5403  119F  07F4               	addwf	___llmod@counter,f
  5404  11A0                     l3837:
  5405  11A0  1FA3               	btfss	___llmod@divisor+3,7
  5406  11A1  29A3               	goto	u6181
  5407  11A2  29A4               	goto	u6180
  5408  11A3                     u6181:
  5409  11A3  2993               	goto	l3835
  5410  11A4                     u6180:
  5411  11A4                     l3839:
  5412  11A4  0823               	movf	___llmod@divisor+3,w
  5413  11A5  0227               	subwf	___llmod@dividend+3,w
  5414  11A6  1D03               	skipz
  5415  11A7  29B2               	goto	u6195
  5416  11A8  0822               	movf	___llmod@divisor+2,w
  5417  11A9  0226               	subwf	___llmod@dividend+2,w
  5418  11AA  1D03               	skipz
  5419  11AB  29B2               	goto	u6195
  5420  11AC  0821               	movf	___llmod@divisor+1,w
  5421  11AD  0225               	subwf	___llmod@dividend+1,w
  5422  11AE  1D03               	skipz
  5423  11AF  29B2               	goto	u6195
  5424  11B0  0820               	movf	___llmod@divisor,w
  5425  11B1  0224               	subwf	___llmod@dividend,w
  5426  11B2                     u6195:
  5427  11B2  1C03               	skipc
  5428  11B3  29B5               	goto	u6191
  5429  11B4  29B6               	goto	u6190
  5430  11B5                     u6191:
  5431  11B5  29C4               	goto	l3843
  5432  11B6                     u6190:
  5433  11B6                     l3841:
  5434  11B6  0820               	movf	___llmod@divisor,w
  5435  11B7  02A4               	subwf	___llmod@dividend,f
  5436  11B8  0821               	movf	___llmod@divisor+1,w
  5437  11B9  1C03               	skipc
  5438  11BA  0F21               	incfsz	___llmod@divisor+1,w
  5439  11BB  02A5               	subwf	___llmod@dividend+1,f
  5440  11BC  0822               	movf	___llmod@divisor+2,w
  5441  11BD  1C03               	skipc
  5442  11BE  0F22               	incfsz	___llmod@divisor+2,w
  5443  11BF  02A6               	subwf	___llmod@dividend+2,f
  5444  11C0  0823               	movf	___llmod@divisor+3,w
  5445  11C1  1C03               	skipc
  5446  11C2  0F23               	incfsz	___llmod@divisor+3,w
  5447  11C3  02A7               	subwf	___llmod@dividend+3,f
  5448  11C4                     l3843:
  5449  11C4  3001               	movlw	1
  5450  11C5                     u6205:
  5451  11C5  1003               	clrc
  5452  11C6  0CA3               	rrf	___llmod@divisor+3,f
  5453  11C7  0CA2               	rrf	___llmod@divisor+2,f
  5454  11C8  0CA1               	rrf	___llmod@divisor+1,f
  5455  11C9  0CA0               	rrf	___llmod@divisor,f
  5456  11CA  3EFF               	addlw	-1
  5457  11CB  1D03               	skipz
  5458  11CC  29C5               	goto	u6205
  5459  11CD                     l3845:
  5460  11CD  3001               	movlw	1
  5461  11CE  02F4               	subwf	___llmod@counter,f
  5462  11CF  1D03               	btfss	3,2
  5463  11D0  29D2               	goto	u6211
  5464  11D1  29D3               	goto	u6210
  5465  11D2                     u6211:
  5466  11D2  29A4               	goto	l3839
  5467  11D3                     u6210:
  5468  11D3                     l3847:
  5469  11D3  0827               	movf	___llmod@dividend+3,w
  5470  11D4  00A3               	movwf	?___llmod+3
  5471  11D5  0826               	movf	___llmod@dividend+2,w
  5472  11D6  00A2               	movwf	?___llmod+2
  5473  11D7  0825               	movf	___llmod@dividend+1,w
  5474  11D8  00A1               	movwf	?___llmod+1
  5475  11D9  0824               	movf	___llmod@dividend,w
  5476  11DA  00A0               	movwf	?___llmod
  5477  11DB                     l796:
  5478  11DB  0008               	return
  5479  11DC                     __end_of___llmod:
  5480                           
  5481                           	psect	text16
  5482  1411                     __ptext16:	
  5483 ;; *************** function ___fttol *****************
  5484 ;; Defined at:
  5485 ;;		line 44 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\fttol.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  f1              3   40[BANK0 ] float 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  lval            4   49[BANK0 ] unsigned long 
  5490 ;;  exp1            1   53[BANK0 ] unsigned char 
  5491 ;;  sign1           1   48[BANK0 ] unsigned char 
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  4   40[BANK0 ] long 
  5494 ;; Registers used:
  5495 ;;		wreg, status,2, status,0
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5501 ;;      Params:         0       4       0       0       0
  5502 ;;      Locals:         0       6       0       0       0
  5503 ;;      Temps:          0       4       0       0       0
  5504 ;;      Totals:         0      14       0       0       0
  5505 ;;Total ram usage:       14 bytes
  5506 ;; Hardware stack levels used:    1
  5507 ;; Hardware stack levels required when called:    2
  5508 ;; This function calls:
  5509 ;;		Nothing
  5510 ;; This function is called by:
  5511 ;;		_sprintf
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           
  5516                           ;psect for function ___fttol
  5517  1411                     ___fttol:
  5518  1411                     l2689:	
  5519                           ;incstack = 0
  5520                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5521                           
  5522  1411  1283               	bcf	3,5	;RP0=0, select bank0
  5523  1412  1303               	bcf	3,6	;RP1=0, select bank0
  5524  1413  0848               	movf	___fttol@f1,w
  5525  1414  00CC               	movwf	??___fttol
  5526  1415  0849               	movf	___fttol@f1+1,w
  5527  1416  00CD               	movwf	??___fttol+1
  5528  1417  084A               	movf	___fttol@f1+2,w
  5529  1418  00CE               	movwf	??___fttol+2
  5530  1419  1003               	clrc
  5531  141A  0D4D               	rlf	??___fttol+1,w
  5532  141B  0D4E               	rlf	??___fttol+2,w
  5533  141C  00CF               	movwf	??___fttol+3
  5534  141D  084F               	movf	??___fttol+3,w
  5535  141E  00D5               	movwf	___fttol@exp1
  5536  141F  0855               	movf	___fttol@exp1,w
  5537  1420  1D03               	btfss	3,2
  5538  1421  2C23               	goto	u3831
  5539  1422  2C24               	goto	u3830
  5540  1423                     u3831:
  5541  1423  2C2D               	goto	l2695
  5542  1424                     u3830:
  5543  1424                     l2691:
  5544  1424  3000               	movlw	0
  5545  1425  00CB               	movwf	?___fttol+3
  5546  1426  3000               	movlw	0
  5547  1427  00CA               	movwf	?___fttol+2
  5548  1428  3000               	movlw	0
  5549  1429  00C9               	movwf	?___fttol+1
  5550  142A  3000               	movlw	0
  5551  142B  00C8               	movwf	?___fttol
  5552  142C  2C9C               	goto	l755
  5553  142D                     l2695:
  5554  142D  0848               	movf	___fttol@f1,w
  5555  142E  00CC               	movwf	??___fttol
  5556  142F  0849               	movf	___fttol@f1+1,w
  5557  1430  00CD               	movwf	??___fttol+1
  5558  1431  084A               	movf	___fttol@f1+2,w
  5559  1432  00CE               	movwf	??___fttol+2
  5560  1433  3017               	movlw	23
  5561  1434                     u3845:
  5562  1434  1003               	clrc
  5563  1435  0CCE               	rrf	??___fttol+2,f
  5564  1436  0CCD               	rrf	??___fttol+1,f
  5565  1437  0CCC               	rrf	??___fttol,f
  5566  1438                     u3840:
  5567  1438  3EFF               	addlw	-1
  5568  1439  1D03               	skipz
  5569  143A  2C34               	goto	u3845
  5570  143B  084C               	movf	??___fttol,w
  5571  143C  00CF               	movwf	??___fttol+3
  5572  143D  084F               	movf	??___fttol+3,w
  5573  143E  00D0               	movwf	___fttol@sign1
  5574  143F                     l2697:
  5575  143F  17C9               	bsf	___fttol@f1+1,7
  5576  1440                     l2699:
  5577  1440  30FF               	movlw	255
  5578  1441  05C8               	andwf	___fttol@f1,f
  5579  1442  30FF               	movlw	255
  5580  1443  05C9               	andwf	___fttol@f1+1,f
  5581  1444  3000               	movlw	0
  5582  1445  05CA               	andwf	___fttol@f1+2,f
  5583  1446                     l2701:
  5584  1446  0848               	movf	___fttol@f1,w
  5585  1447  00D1               	movwf	___fttol@lval
  5586  1448  0849               	movf	___fttol@f1+1,w
  5587  1449  00D2               	movwf	___fttol@lval+1
  5588  144A  084A               	movf	___fttol@f1+2,w
  5589  144B  00D3               	movwf	___fttol@lval+2
  5590  144C  01D4               	clrf	___fttol@lval+3
  5591  144D                     l2703:
  5592  144D  308E               	movlw	142
  5593  144E  02D5               	subwf	___fttol@exp1,f
  5594  144F                     l2705:
  5595  144F  1FD5               	btfss	___fttol@exp1,7
  5596  1450  2C52               	goto	u3851
  5597  1451  2C53               	goto	u3850
  5598  1452                     u3851:
  5599  1452  2C6D               	goto	l2715
  5600  1453                     u3850:
  5601  1453                     l2707:
  5602  1453  0855               	movf	___fttol@exp1,w
  5603  1454  3A80               	xorlw	128
  5604  1455  3E8F               	addlw	143
  5605  1456  1803               	skipnc
  5606  1457  2C59               	goto	u3861
  5607  1458  2C5A               	goto	u3860
  5608  1459                     u3861:
  5609  1459  2C5B               	goto	l2713
  5610  145A                     u3860:
  5611  145A  2C24               	goto	l2691
  5612  145B                     l2713:
  5613  145B  3001               	movlw	1
  5614  145C                     u3875:
  5615  145C  1003               	clrc
  5616  145D  0CD4               	rrf	___fttol@lval+3,f
  5617  145E  0CD3               	rrf	___fttol@lval+2,f
  5618  145F  0CD2               	rrf	___fttol@lval+1,f
  5619  1460  0CD1               	rrf	___fttol@lval,f
  5620  1461  3EFF               	addlw	-1
  5621  1462  1D03               	skipz
  5622  1463  2C5C               	goto	u3875
  5623  1464  3001               	movlw	1
  5624  1465  00CC               	movwf	??___fttol
  5625  1466  084C               	movf	??___fttol,w
  5626  1467  07D5               	addwf	___fttol@exp1,f
  5627  1468  1D03               	btfss	3,2
  5628  1469  2C6B               	goto	u3881
  5629  146A  2C6C               	goto	u3880
  5630  146B                     u3881:
  5631  146B  2C5B               	goto	l2713
  5632  146C                     u3880:
  5633  146C  2C84               	goto	l2723
  5634  146D                     l2715:
  5635  146D  3018               	movlw	24
  5636  146E  0255               	subwf	___fttol@exp1,w
  5637  146F  1C03               	skipc
  5638  1470  2C72               	goto	u3891
  5639  1471  2C73               	goto	u3890
  5640  1472                     u3891:
  5641  1472  2C7F               	goto	l762
  5642  1473                     u3890:
  5643  1473  2C24               	goto	l2691
  5644  1474                     l2721:
  5645  1474  3001               	movlw	1
  5646  1475  00CC               	movwf	??___fttol
  5647  1476                     u3905:
  5648  1476  1003               	clrc
  5649  1477  0DD1               	rlf	___fttol@lval,f
  5650  1478  0DD2               	rlf	___fttol@lval+1,f
  5651  1479  0DD3               	rlf	___fttol@lval+2,f
  5652  147A  0DD4               	rlf	___fttol@lval+3,f
  5653  147B  0BCC               	decfsz	??___fttol,f
  5654  147C  2C76               	goto	u3905
  5655  147D  3001               	movlw	1
  5656  147E  02D5               	subwf	___fttol@exp1,f
  5657  147F                     l762:
  5658  147F  0855               	movf	___fttol@exp1,w
  5659  1480  1D03               	btfss	3,2
  5660  1481  2C83               	goto	u3911
  5661  1482  2C84               	goto	u3910
  5662  1483                     u3911:
  5663  1483  2C74               	goto	l2721
  5664  1484                     u3910:
  5665  1484                     l2723:
  5666  1484  0850               	movf	___fttol@sign1,w
  5667  1485  1903               	btfsc	3,2
  5668  1486  2C88               	goto	u3921
  5669  1487  2C89               	goto	u3920
  5670  1488                     u3921:
  5671  1488  2C94               	goto	l2727
  5672  1489                     u3920:
  5673  1489                     l2725:
  5674  1489  09D1               	comf	___fttol@lval,f
  5675  148A  09D2               	comf	___fttol@lval+1,f
  5676  148B  09D3               	comf	___fttol@lval+2,f
  5677  148C  09D4               	comf	___fttol@lval+3,f
  5678  148D  0AD1               	incf	___fttol@lval,f
  5679  148E  1903               	skipnz
  5680  148F  0AD2               	incf	___fttol@lval+1,f
  5681  1490  1903               	skipnz
  5682  1491  0AD3               	incf	___fttol@lval+2,f
  5683  1492  1903               	skipnz
  5684  1493  0AD4               	incf	___fttol@lval+3,f
  5685  1494                     l2727:
  5686  1494  0854               	movf	___fttol@lval+3,w
  5687  1495  00CB               	movwf	?___fttol+3
  5688  1496  0853               	movf	___fttol@lval+2,w
  5689  1497  00CA               	movwf	?___fttol+2
  5690  1498  0852               	movf	___fttol@lval+1,w
  5691  1499  00C9               	movwf	?___fttol+1
  5692  149A  0851               	movf	___fttol@lval,w
  5693  149B  00C8               	movwf	?___fttol
  5694  149C                     l755:
  5695  149C  0008               	return
  5696  149D                     __end_of___fttol:
  5697                           
  5698                           	psect	text17
  5699  1FA1                     __ptext17:	
  5700 ;; *************** function ___ftsub *****************
  5701 ;; Defined at:
  5702 ;;		line 17 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftsub.c"
  5703 ;; Parameters:    Size  Location     Type
  5704 ;;  f2              3   60[BANK0 ] float 
  5705 ;;  f1              3   63[BANK0 ] float 
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;		None
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  3   60[BANK0 ] float 
  5710 ;; Registers used:
  5711 ;;		wreg, status,2, status,0, pclath, cstack
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5717 ;;      Params:         0       6       0       0       0
  5718 ;;      Locals:         0       0       0       0       0
  5719 ;;      Temps:          0       0       0       0       0
  5720 ;;      Totals:         0       6       0       0       0
  5721 ;;Total ram usage:        6 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; Hardware stack levels required when called:    4
  5724 ;; This function calls:
  5725 ;;		___ftadd
  5726 ;; This function is called by:
  5727 ;;		_sprintf
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           
  5732                           ;psect for function ___ftsub
  5733  1FA1                     ___ftsub:
  5734  1FA1                     l3823:	
  5735                           ;incstack = 0
  5736                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5737                           
  5738  1FA1  1283               	bcf	3,5	;RP0=0, select bank0
  5739  1FA2  1303               	bcf	3,6	;RP1=0, select bank0
  5740  1FA3  085E               	movf	___ftsub@f2+2,w
  5741  1FA4  045D               	iorwf	___ftsub@f2+1,w
  5742  1FA5  045C               	iorwf	___ftsub@f2,w
  5743  1FA6  1903               	skipnz
  5744  1FA7  2FA9               	goto	u6151
  5745  1FA8  2FAA               	goto	u6150
  5746  1FA9                     u6151:
  5747  1FA9  2FAC               	goto	l3827
  5748  1FAA                     u6150:
  5749  1FAA                     l3825:
  5750  1FAA  3080               	movlw	128
  5751  1FAB  06DE               	xorwf	___ftsub@f2+2,f
  5752  1FAC                     l3827:
  5753  1FAC  085F               	movf	___ftsub@f1,w
  5754  1FAD  00CF               	movwf	___ftadd@f1
  5755  1FAE  0860               	movf	___ftsub@f1+1,w
  5756  1FAF  00D0               	movwf	___ftadd@f1+1
  5757  1FB0  0861               	movf	___ftsub@f1+2,w
  5758  1FB1  00D1               	movwf	___ftadd@f1+2
  5759  1FB2  085C               	movf	___ftsub@f2,w
  5760  1FB3  00D2               	movwf	___ftadd@f2
  5761  1FB4  085D               	movf	___ftsub@f2+1,w
  5762  1FB5  00D3               	movwf	___ftadd@f2+1
  5763  1FB6  085E               	movf	___ftsub@f2+2,w
  5764  1FB7  00D4               	movwf	___ftadd@f2+2
  5765  1FB8  120A  158A  2111  160A  158A  	fcall	___ftadd
  5766  1FBD  1283               	bcf	3,5	;RP0=0, select bank0
  5767  1FBE  1303               	bcf	3,6	;RP1=0, select bank0
  5768  1FBF  084F               	movf	?___ftadd,w
  5769  1FC0  00DC               	movwf	?___ftsub
  5770  1FC1  0850               	movf	?___ftadd+1,w
  5771  1FC2  00DD               	movwf	?___ftsub+1
  5772  1FC3  0851               	movf	?___ftadd+2,w
  5773  1FC4  00DE               	movwf	?___ftsub+2
  5774  1FC5                     l751:
  5775  1FC5  0008               	return
  5776  1FC6                     __end_of___ftsub:
  5777                           
  5778                           	psect	text18
  5779  0911                     __ptext18:	
  5780 ;; *************** function ___ftadd *****************
  5781 ;; Defined at:
  5782 ;;		line 86 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftadd.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  f1              3   47[BANK0 ] float 
  5785 ;;  f2              3   50[BANK0 ] float 
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;  exp1            1   59[BANK0 ] unsigned char 
  5788 ;;  exp2            1   58[BANK0 ] unsigned char 
  5789 ;;  sign            1   57[BANK0 ] unsigned char 
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  3   47[BANK0 ] float 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2, status,0, pclath, cstack
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5799 ;;      Params:         0       6       0       0       0
  5800 ;;      Locals:         0       3       0       0       0
  5801 ;;      Temps:          0       4       0       0       0
  5802 ;;      Totals:         0      13       0       0       0
  5803 ;;Total ram usage:       13 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; Hardware stack levels required when called:    3
  5806 ;; This function calls:
  5807 ;;		___ftpack
  5808 ;; This function is called by:
  5809 ;;		_aht_GetTemperature
  5810 ;;		_sprintf
  5811 ;;		___ftsub
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           
  5816                           ;psect for function ___ftadd
  5817  0911                     ___ftadd:
  5818  0911                     l3391:	
  5819                           ;incstack = 0
  5820                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5821                           
  5822  0911  1283               	bcf	3,5	;RP0=0, select bank0
  5823  0912  1303               	bcf	3,6	;RP1=0, select bank0
  5824  0913  084F               	movf	___ftadd@f1,w
  5825  0914  00D5               	movwf	??___ftadd
  5826  0915  0850               	movf	___ftadd@f1+1,w
  5827  0916  00D6               	movwf	??___ftadd+1
  5828  0917  0851               	movf	___ftadd@f1+2,w
  5829  0918  00D7               	movwf	??___ftadd+2
  5830  0919  1003               	clrc
  5831  091A  0D56               	rlf	??___ftadd+1,w
  5832  091B  0D57               	rlf	??___ftadd+2,w
  5833  091C  00D8               	movwf	??___ftadd+3
  5834  091D  0858               	movf	??___ftadd+3,w
  5835  091E  00DB               	movwf	___ftadd@exp1
  5836  091F  0852               	movf	___ftadd@f2,w
  5837  0920  00D5               	movwf	??___ftadd
  5838  0921  0853               	movf	___ftadd@f2+1,w
  5839  0922  00D6               	movwf	??___ftadd+1
  5840  0923  0854               	movf	___ftadd@f2+2,w
  5841  0924  00D7               	movwf	??___ftadd+2
  5842  0925  1003               	clrc
  5843  0926  0D56               	rlf	??___ftadd+1,w
  5844  0927  0D57               	rlf	??___ftadd+2,w
  5845  0928  00D8               	movwf	??___ftadd+3
  5846  0929  0858               	movf	??___ftadd+3,w
  5847  092A  00DA               	movwf	___ftadd@exp2
  5848  092B  085B               	movf	___ftadd@exp1,w
  5849  092C  1903               	btfsc	3,2
  5850  092D  292F               	goto	u5081
  5851  092E  2930               	goto	u5080
  5852  092F                     u5081:
  5853  092F  2940               	goto	l3397
  5854  0930                     u5080:
  5855  0930                     l3393:
  5856  0930  085A               	movf	___ftadd@exp2,w
  5857  0931  025B               	subwf	___ftadd@exp1,w
  5858  0932  1803               	skipnc
  5859  0933  2935               	goto	u5091
  5860  0934  2936               	goto	u5090
  5861  0935                     u5091:
  5862  0935  2947               	goto	l3401
  5863  0936                     u5090:
  5864  0936                     l3395:
  5865  0936  085A               	movf	___ftadd@exp2,w
  5866  0937  00D5               	movwf	??___ftadd
  5867  0938  085B               	movf	___ftadd@exp1,w
  5868  0939  02D5               	subwf	??___ftadd,f
  5869  093A  3019               	movlw	25
  5870  093B  0255               	subwf	??___ftadd,w
  5871  093C  1C03               	skipc
  5872  093D  293F               	goto	u5101
  5873  093E  2940               	goto	u5100
  5874  093F                     u5101:
  5875  093F  2947               	goto	l3401
  5876  0940                     u5100:
  5877  0940                     l3397:
  5878  0940  0852               	movf	___ftadd@f2,w
  5879  0941  00CF               	movwf	?___ftadd
  5880  0942  0853               	movf	___ftadd@f2+1,w
  5881  0943  00D0               	movwf	?___ftadd+1
  5882  0944  0854               	movf	___ftadd@f2+2,w
  5883  0945  00D1               	movwf	?___ftadd+2
  5884  0946  2A46               	goto	l671
  5885  0947                     l3401:
  5886  0947  085A               	movf	___ftadd@exp2,w
  5887  0948  1903               	btfsc	3,2
  5888  0949  294B               	goto	u5111
  5889  094A  294C               	goto	u5110
  5890  094B                     u5111:
  5891  094B  295C               	goto	l674
  5892  094C                     u5110:
  5893  094C                     l3403:
  5894  094C  085B               	movf	___ftadd@exp1,w
  5895  094D  025A               	subwf	___ftadd@exp2,w
  5896  094E  1803               	skipnc
  5897  094F  2951               	goto	u5121
  5898  0950  2952               	goto	u5120
  5899  0951                     u5121:
  5900  0951  295D               	goto	l3407
  5901  0952                     u5120:
  5902  0952                     l3405:
  5903  0952  085B               	movf	___ftadd@exp1,w
  5904  0953  00D5               	movwf	??___ftadd
  5905  0954  085A               	movf	___ftadd@exp2,w
  5906  0955  02D5               	subwf	??___ftadd,f
  5907  0956  3019               	movlw	25
  5908  0957  0255               	subwf	??___ftadd,w
  5909  0958  1C03               	skipc
  5910  0959  295B               	goto	u5131
  5911  095A  295C               	goto	u5130
  5912  095B                     u5131:
  5913  095B  295D               	goto	l3407
  5914  095C                     u5130:
  5915  095C                     l674:
  5916  095C  2A46               	goto	l671
  5917  095D                     l3407:
  5918  095D  3006               	movlw	6
  5919  095E  00D5               	movwf	??___ftadd
  5920  095F  0855               	movf	??___ftadd,w
  5921  0960  00D9               	movwf	___ftadd@sign
  5922  0961                     l3409:
  5923  0961  1FD1               	btfss	___ftadd@f1+2,7
  5924  0962  2964               	goto	u5141
  5925  0963  2965               	goto	u5140
  5926  0964                     u5141:
  5927  0964  2966               	goto	l675
  5928  0965                     u5140:
  5929  0965                     l3411:
  5930  0965  17D9               	bsf	___ftadd@sign,7
  5931  0966                     l675:
  5932  0966  1FD4               	btfss	___ftadd@f2+2,7
  5933  0967  2969               	goto	u5151
  5934  0968  296A               	goto	u5150
  5935  0969                     u5151:
  5936  0969  296B               	goto	l676
  5937  096A                     u5150:
  5938  096A                     l3413:
  5939  096A  1759               	bsf	___ftadd@sign,6
  5940  096B                     l676:
  5941  096B  17D0               	bsf	___ftadd@f1+1,7
  5942  096C                     l3415:
  5943  096C  30FF               	movlw	255
  5944  096D  05CF               	andwf	___ftadd@f1,f
  5945  096E  30FF               	movlw	255
  5946  096F  05D0               	andwf	___ftadd@f1+1,f
  5947  0970  3000               	movlw	0
  5948  0971  05D1               	andwf	___ftadd@f1+2,f
  5949  0972                     l3417:
  5950  0972  17D3               	bsf	___ftadd@f2+1,7
  5951  0973  30FF               	movlw	255
  5952  0974  05D2               	andwf	___ftadd@f2,f
  5953  0975  30FF               	movlw	255
  5954  0976  05D3               	andwf	___ftadd@f2+1,f
  5955  0977  3000               	movlw	0
  5956  0978  05D4               	andwf	___ftadd@f2+2,f
  5957  0979  085A               	movf	___ftadd@exp2,w
  5958  097A  025B               	subwf	___ftadd@exp1,w
  5959  097B  1803               	skipnc
  5960  097C  297E               	goto	u5161
  5961  097D  297F               	goto	u5160
  5962  097E                     u5161:
  5963  097E  29AB               	goto	l3429
  5964  097F                     u5160:
  5965  097F                     l3419:
  5966  097F  3001               	movlw	1
  5967  0980                     u5175:
  5968  0980  1003               	clrc
  5969  0981  0DD2               	rlf	___ftadd@f2,f
  5970  0982  0DD3               	rlf	___ftadd@f2+1,f
  5971  0983  0DD4               	rlf	___ftadd@f2+2,f
  5972  0984  3EFF               	addlw	-1
  5973  0985  1D03               	skipz
  5974  0986  2980               	goto	u5175
  5975  0987  3001               	movlw	1
  5976  0988  02DA               	subwf	___ftadd@exp2,f
  5977  0989                     l3421:
  5978  0989  085A               	movf	___ftadd@exp2,w
  5979  098A  065B               	xorwf	___ftadd@exp1,w
  5980  098B  1903               	skipnz
  5981  098C  298E               	goto	u5181
  5982  098D  298F               	goto	u5180
  5983  098E                     u5181:
  5984  098E  29A4               	goto	l3427
  5985  098F                     u5180:
  5986  098F                     l3423:
  5987  098F  3001               	movlw	1
  5988  0990  02D9               	subwf	___ftadd@sign,f
  5989  0991  0859               	movf	___ftadd@sign,w
  5990  0992  3907               	andlw	7
  5991  0993  1D03               	btfss	3,2
  5992  0994  2996               	goto	u5191
  5993  0995  2997               	goto	u5190
  5994  0996                     u5191:
  5995  0996  297F               	goto	l3419
  5996  0997                     u5190:
  5997  0997  29A4               	goto	l3427
  5998  0998                     l3425:
  5999  0998  3001               	movlw	1
  6000  0999                     u5205:
  6001  0999  1003               	clrc
  6002  099A  0CD1               	rrf	___ftadd@f1+2,f
  6003  099B  0CD0               	rrf	___ftadd@f1+1,f
  6004  099C  0CCF               	rrf	___ftadd@f1,f
  6005  099D  3EFF               	addlw	-1
  6006  099E  1D03               	skipz
  6007  099F  2999               	goto	u5205
  6008  09A0  3001               	movlw	1
  6009  09A1  00D5               	movwf	??___ftadd
  6010  09A2  0855               	movf	??___ftadd,w
  6011  09A3  07DB               	addwf	___ftadd@exp1,f
  6012  09A4                     l3427:
  6013  09A4  085B               	movf	___ftadd@exp1,w
  6014  09A5  065A               	xorwf	___ftadd@exp2,w
  6015  09A6  1D03               	skipz
  6016  09A7  29A9               	goto	u5211
  6017  09A8  29AA               	goto	u5210
  6018  09A9                     u5211:
  6019  09A9  2998               	goto	l3425
  6020  09AA                     u5210:
  6021  09AA  29DC               	goto	l685
  6022  09AB                     l3429:
  6023  09AB  085B               	movf	___ftadd@exp1,w
  6024  09AC  025A               	subwf	___ftadd@exp2,w
  6025  09AD  1803               	skipnc
  6026  09AE  29B0               	goto	u5221
  6027  09AF  29B1               	goto	u5220
  6028  09B0                     u5221:
  6029  09B0  29DC               	goto	l685
  6030  09B1                     u5220:
  6031  09B1                     l3431:
  6032  09B1  3001               	movlw	1
  6033  09B2                     u5235:
  6034  09B2  1003               	clrc
  6035  09B3  0DCF               	rlf	___ftadd@f1,f
  6036  09B4  0DD0               	rlf	___ftadd@f1+1,f
  6037  09B5  0DD1               	rlf	___ftadd@f1+2,f
  6038  09B6  3EFF               	addlw	-1
  6039  09B7  1D03               	skipz
  6040  09B8  29B2               	goto	u5235
  6041  09B9  3001               	movlw	1
  6042  09BA  02DB               	subwf	___ftadd@exp1,f
  6043  09BB                     l3433:
  6044  09BB  085A               	movf	___ftadd@exp2,w
  6045  09BC  065B               	xorwf	___ftadd@exp1,w
  6046  09BD  1903               	skipnz
  6047  09BE  29C0               	goto	u5241
  6048  09BF  29C1               	goto	u5240
  6049  09C0                     u5241:
  6050  09C0  29D6               	goto	l3439
  6051  09C1                     u5240:
  6052  09C1                     l3435:
  6053  09C1  3001               	movlw	1
  6054  09C2  02D9               	subwf	___ftadd@sign,f
  6055  09C3  0859               	movf	___ftadd@sign,w
  6056  09C4  3907               	andlw	7
  6057  09C5  1D03               	btfss	3,2
  6058  09C6  29C8               	goto	u5251
  6059  09C7  29C9               	goto	u5250
  6060  09C8                     u5251:
  6061  09C8  29B1               	goto	l3431
  6062  09C9                     u5250:
  6063  09C9  29D6               	goto	l3439
  6064  09CA                     l3437:
  6065  09CA  3001               	movlw	1
  6066  09CB                     u5265:
  6067  09CB  1003               	clrc
  6068  09CC  0CD4               	rrf	___ftadd@f2+2,f
  6069  09CD  0CD3               	rrf	___ftadd@f2+1,f
  6070  09CE  0CD2               	rrf	___ftadd@f2,f
  6071  09CF  3EFF               	addlw	-1
  6072  09D0  1D03               	skipz
  6073  09D1  29CB               	goto	u5265
  6074  09D2  3001               	movlw	1
  6075  09D3  00D5               	movwf	??___ftadd
  6076  09D4  0855               	movf	??___ftadd,w
  6077  09D5  07DA               	addwf	___ftadd@exp2,f
  6078  09D6                     l3439:
  6079  09D6  085B               	movf	___ftadd@exp1,w
  6080  09D7  065A               	xorwf	___ftadd@exp2,w
  6081  09D8  1D03               	skipz
  6082  09D9  29DB               	goto	u5271
  6083  09DA  29DC               	goto	u5270
  6084  09DB                     u5271:
  6085  09DB  29CA               	goto	l3437
  6086  09DC                     u5270:
  6087  09DC                     l685:
  6088  09DC  1FD9               	btfss	___ftadd@sign,7
  6089  09DD  29DF               	goto	u5281
  6090  09DE  29E0               	goto	u5280
  6091  09DF                     u5281:
  6092  09DF  29F0               	goto	l3443
  6093  09E0                     u5280:
  6094  09E0                     l3441:
  6095  09E0  30FF               	movlw	255
  6096  09E1  06CF               	xorwf	___ftadd@f1,f
  6097  09E2  30FF               	movlw	255
  6098  09E3  06D0               	xorwf	___ftadd@f1+1,f
  6099  09E4  30FF               	movlw	255
  6100  09E5  06D1               	xorwf	___ftadd@f1+2,f
  6101  09E6  3001               	movlw	1
  6102  09E7  07CF               	addwf	___ftadd@f1,f
  6103  09E8  3000               	movlw	0
  6104  09E9  1803               	skipnc
  6105  09EA  3001               	movlw	1
  6106  09EB  07D0               	addwf	___ftadd@f1+1,f
  6107  09EC  3000               	movlw	0
  6108  09ED  1803               	skipnc
  6109  09EE  3001               	movlw	1
  6110  09EF  07D1               	addwf	___ftadd@f1+2,f
  6111  09F0                     l3443:
  6112  09F0  1F59               	btfss	___ftadd@sign,6
  6113  09F1  29F3               	goto	u5291
  6114  09F2  29F4               	goto	u5290
  6115  09F3                     u5291:
  6116  09F3  2A04               	goto	l3447
  6117  09F4                     u5290:
  6118  09F4                     l3445:
  6119  09F4  30FF               	movlw	255
  6120  09F5  06D2               	xorwf	___ftadd@f2,f
  6121  09F6  30FF               	movlw	255
  6122  09F7  06D3               	xorwf	___ftadd@f2+1,f
  6123  09F8  30FF               	movlw	255
  6124  09F9  06D4               	xorwf	___ftadd@f2+2,f
  6125  09FA  3001               	movlw	1
  6126  09FB  07D2               	addwf	___ftadd@f2,f
  6127  09FC  3000               	movlw	0
  6128  09FD  1803               	skipnc
  6129  09FE  3001               	movlw	1
  6130  09FF  07D3               	addwf	___ftadd@f2+1,f
  6131  0A00  3000               	movlw	0
  6132  0A01  1803               	skipnc
  6133  0A02  3001               	movlw	1
  6134  0A03  07D4               	addwf	___ftadd@f2+2,f
  6135  0A04                     l3447:
  6136  0A04  01D9               	clrf	___ftadd@sign
  6137  0A05                     l3449:
  6138  0A05  084F               	movf	___ftadd@f1,w
  6139  0A06  07D2               	addwf	___ftadd@f2,f
  6140  0A07  0850               	movf	___ftadd@f1+1,w
  6141  0A08  1103               	clrz
  6142  0A09  1803               	skipnc
  6143  0A0A  0A50               	incf	___ftadd@f1+1,w
  6144  0A0B  1903               	skipnz
  6145  0A0C  2A0E               	goto	u5301
  6146  0A0D  07D3               	addwf	___ftadd@f2+1,f
  6147  0A0E                     u5301:
  6148  0A0E  0851               	movf	___ftadd@f1+2,w
  6149  0A0F  1103               	clrz
  6150  0A10  1803               	skipnc
  6151  0A11  0A51               	incf	___ftadd@f1+2,w
  6152  0A12  1903               	skipnz
  6153  0A13  2A15               	goto	u5302
  6154  0A14  07D4               	addwf	___ftadd@f2+2,f
  6155  0A15                     u5302:
  6156  0A15                     l3451:
  6157  0A15  1FD4               	btfss	___ftadd@f2+2,7
  6158  0A16  2A18               	goto	u5311
  6159  0A17  2A19               	goto	u5310
  6160  0A18                     u5311:
  6161  0A18  2A2B               	goto	l3457
  6162  0A19                     u5310:
  6163  0A19                     l3453:
  6164  0A19  30FF               	movlw	255
  6165  0A1A  06D2               	xorwf	___ftadd@f2,f
  6166  0A1B  30FF               	movlw	255
  6167  0A1C  06D3               	xorwf	___ftadd@f2+1,f
  6168  0A1D  30FF               	movlw	255
  6169  0A1E  06D4               	xorwf	___ftadd@f2+2,f
  6170  0A1F  3001               	movlw	1
  6171  0A20  07D2               	addwf	___ftadd@f2,f
  6172  0A21  3000               	movlw	0
  6173  0A22  1803               	skipnc
  6174  0A23  3001               	movlw	1
  6175  0A24  07D3               	addwf	___ftadd@f2+1,f
  6176  0A25  3000               	movlw	0
  6177  0A26  1803               	skipnc
  6178  0A27  3001               	movlw	1
  6179  0A28  07D4               	addwf	___ftadd@f2+2,f
  6180  0A29                     l3455:
  6181  0A29  01D9               	clrf	___ftadd@sign
  6182  0A2A  0AD9               	incf	___ftadd@sign,f
  6183  0A2B                     l3457:
  6184  0A2B  0852               	movf	___ftadd@f2,w
  6185  0A2C  00F3               	movwf	___ftpack@arg
  6186  0A2D  0853               	movf	___ftadd@f2+1,w
  6187  0A2E  00F4               	movwf	___ftpack@arg+1
  6188  0A2F  0854               	movf	___ftadd@f2+2,w
  6189  0A30  00F5               	movwf	___ftpack@arg+2
  6190  0A31  085B               	movf	___ftadd@exp1,w
  6191  0A32  00D5               	movwf	??___ftadd
  6192  0A33  0855               	movf	??___ftadd,w
  6193  0A34  00F6               	movwf	___ftpack@exp
  6194  0A35  0859               	movf	___ftadd@sign,w
  6195  0A36  00D6               	movwf	??___ftadd+1
  6196  0A37  0856               	movf	??___ftadd+1,w
  6197  0A38  00F7               	movwf	___ftpack@sign
  6198  0A39  160A  118A  2308  120A  158A  	fcall	___ftpack
  6199  0A3E  0873               	movf	?___ftpack,w
  6200  0A3F  1283               	bcf	3,5	;RP0=0, select bank0
  6201  0A40  1303               	bcf	3,6	;RP1=0, select bank0
  6202  0A41  00CF               	movwf	?___ftadd
  6203  0A42  0874               	movf	?___ftpack+1,w
  6204  0A43  00D0               	movwf	?___ftadd+1
  6205  0A44  0875               	movf	?___ftpack+2,w
  6206  0A45  00D1               	movwf	?___ftadd+2
  6207  0A46                     l671:
  6208  0A46  0008               	return
  6209  0A47                     __end_of___ftadd:
  6210                           
  6211                           	psect	text19
  6212  1308                     __ptext19:	
  6213 ;; *************** function ___ftpack *****************
  6214 ;; Defined at:
  6215 ;;		line 62 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\float.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  arg             3    3[COMMON] unsigned um
  6218 ;;  exp             1    6[COMMON] unsigned char 
  6219 ;;  sign            1    7[COMMON] unsigned char 
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;		None
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  3    3[COMMON] float 
  6224 ;; Registers used:
  6225 ;;		wreg, status,2, status,0
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6231 ;;      Params:         5       0       0       0       0
  6232 ;;      Locals:         0       0       0       0       0
  6233 ;;      Temps:          0       3       0       0       0
  6234 ;;      Totals:         5       3       0       0       0
  6235 ;;Total ram usage:        8 bytes
  6236 ;; Hardware stack levels used:    1
  6237 ;; Hardware stack levels required when called:    2
  6238 ;; This function calls:
  6239 ;;		Nothing
  6240 ;; This function is called by:
  6241 ;;		___ftadd
  6242 ;;		___ftdiv
  6243 ;;		___ftmul
  6244 ;;		___lltoft
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           
  6249                           ;psect for function ___ftpack
  6250  1308                     ___ftpack:
  6251  1308                     l3277:	
  6252                           ;incstack = 0
  6253                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6254                           
  6255  1308  0876               	movf	___ftpack@exp,w
  6256  1309  1903               	btfsc	3,2
  6257  130A  2B0C               	goto	u4771
  6258  130B  2B0D               	goto	u4770
  6259  130C                     u4771:
  6260  130C  2B14               	goto	l3281
  6261  130D                     u4770:
  6262  130D                     l3279:
  6263  130D  0875               	movf	___ftpack@arg+2,w
  6264  130E  0474               	iorwf	___ftpack@arg+1,w
  6265  130F  0473               	iorwf	___ftpack@arg,w
  6266  1310  1D03               	skipz
  6267  1311  2B13               	goto	u4781
  6268  1312  2B14               	goto	u4780
  6269  1313                     u4781:
  6270  1313  2B29               	goto	l3287
  6271  1314                     u4780:
  6272  1314                     l3281:
  6273  1314  3000               	movlw	0
  6274  1315  00F3               	movwf	?___ftpack
  6275  1316  3000               	movlw	0
  6276  1317  00F4               	movwf	?___ftpack+1
  6277  1318  3000               	movlw	0
  6278  1319  00F5               	movwf	?___ftpack+2
  6279  131A  2B89               	goto	l650
  6280  131B                     l3285:
  6281  131B  3001               	movlw	1
  6282  131C  1283               	bcf	3,5	;RP0=0, select bank0
  6283  131D  1303               	bcf	3,6	;RP1=0, select bank0
  6284  131E  00A0               	movwf	??___ftpack
  6285  131F  0820               	movf	??___ftpack,w
  6286  1320  07F6               	addwf	___ftpack@exp,f
  6287  1321  3001               	movlw	1
  6288  1322                     u4795:
  6289  1322  1003               	clrc
  6290  1323  0CF5               	rrf	___ftpack@arg+2,f
  6291  1324  0CF4               	rrf	___ftpack@arg+1,f
  6292  1325  0CF3               	rrf	___ftpack@arg,f
  6293  1326  3EFF               	addlw	-1
  6294  1327  1D03               	skipz
  6295  1328  2B22               	goto	u4795
  6296  1329                     l3287:
  6297  1329  30FE               	movlw	254
  6298  132A  0575               	andwf	___ftpack@arg+2,w
  6299  132B  1D03               	btfss	3,2
  6300  132C  2B2E               	goto	u4801
  6301  132D  2B2F               	goto	u4800
  6302  132E                     u4801:
  6303  132E  2B1B               	goto	l3285
  6304  132F                     u4800:
  6305  132F  2B48               	goto	l654
  6306  1330                     l3289:
  6307  1330  3001               	movlw	1
  6308  1331  1283               	bcf	3,5	;RP0=0, select bank0
  6309  1332  1303               	bcf	3,6	;RP1=0, select bank0
  6310  1333  00A0               	movwf	??___ftpack
  6311  1334  0820               	movf	??___ftpack,w
  6312  1335  07F6               	addwf	___ftpack@exp,f
  6313  1336                     l3291:
  6314  1336  3001               	movlw	1
  6315  1337  07F3               	addwf	___ftpack@arg,f
  6316  1338  3000               	movlw	0
  6317  1339  1803               	skipnc
  6318  133A  3001               	movlw	1
  6319  133B  07F4               	addwf	___ftpack@arg+1,f
  6320  133C  3000               	movlw	0
  6321  133D  1803               	skipnc
  6322  133E  3001               	movlw	1
  6323  133F  07F5               	addwf	___ftpack@arg+2,f
  6324  1340                     l3293:
  6325  1340  3001               	movlw	1
  6326  1341                     u4815:
  6327  1341  1003               	clrc
  6328  1342  0CF5               	rrf	___ftpack@arg+2,f
  6329  1343  0CF4               	rrf	___ftpack@arg+1,f
  6330  1344  0CF3               	rrf	___ftpack@arg,f
  6331  1345  3EFF               	addlw	-1
  6332  1346  1D03               	skipz
  6333  1347  2B41               	goto	u4815
  6334  1348                     l654:
  6335  1348  30FF               	movlw	255
  6336  1349  0575               	andwf	___ftpack@arg+2,w
  6337  134A  1D03               	btfss	3,2
  6338  134B  2B4D               	goto	u4821
  6339  134C  2B4E               	goto	u4820
  6340  134D                     u4821:
  6341  134D  2B30               	goto	l3289
  6342  134E                     u4820:
  6343  134E  2B59               	goto	l3297
  6344  134F                     l3295:
  6345  134F  3001               	movlw	1
  6346  1350  02F6               	subwf	___ftpack@exp,f
  6347  1351  3001               	movlw	1
  6348  1352                     u4835:
  6349  1352  1003               	clrc
  6350  1353  0DF3               	rlf	___ftpack@arg,f
  6351  1354  0DF4               	rlf	___ftpack@arg+1,f
  6352  1355  0DF5               	rlf	___ftpack@arg+2,f
  6353  1356  3EFF               	addlw	-1
  6354  1357  1D03               	skipz
  6355  1358  2B52               	goto	u4835
  6356  1359                     l3297:
  6357  1359  1BF4               	btfsc	___ftpack@arg+1,7
  6358  135A  2B5C               	goto	u4841
  6359  135B  2B5D               	goto	u4840
  6360  135C                     u4841:
  6361  135C  2B63               	goto	l661
  6362  135D                     u4840:
  6363  135D                     l3299:
  6364  135D  3002               	movlw	2
  6365  135E  0276               	subwf	___ftpack@exp,w
  6366  135F  1803               	skipnc
  6367  1360  2B62               	goto	u4851
  6368  1361  2B63               	goto	u4850
  6369  1362                     u4851:
  6370  1362  2B4F               	goto	l3295
  6371  1363                     u4850:
  6372  1363                     l661:
  6373  1363  1876               	btfsc	___ftpack@exp,0
  6374  1364  2B66               	goto	u4861
  6375  1365  2B67               	goto	u4860
  6376  1366                     u4861:
  6377  1366  2B6D               	goto	l662
  6378  1367                     u4860:
  6379  1367                     l3301:
  6380  1367  30FF               	movlw	255
  6381  1368  05F3               	andwf	___ftpack@arg,f
  6382  1369  307F               	movlw	127
  6383  136A  05F4               	andwf	___ftpack@arg+1,f
  6384  136B  30FF               	movlw	255
  6385  136C  05F5               	andwf	___ftpack@arg+2,f
  6386  136D                     l662:
  6387  136D  1003               	clrc
  6388  136E  0CF6               	rrf	___ftpack@exp,f
  6389  136F                     l3303:
  6390  136F  0876               	movf	___ftpack@exp,w
  6391  1370  1283               	bcf	3,5	;RP0=0, select bank0
  6392  1371  1303               	bcf	3,6	;RP1=0, select bank0
  6393  1372  00A0               	movwf	??___ftpack
  6394  1373  01A1               	clrf	??___ftpack+1
  6395  1374  01A2               	clrf	??___ftpack+2
  6396  1375  3010               	movlw	16
  6397  1376                     u4875:
  6398  1376  1003               	clrc
  6399  1377  0DA0               	rlf	??___ftpack,f
  6400  1378  0DA1               	rlf	??___ftpack+1,f
  6401  1379  0DA2               	rlf	??___ftpack+2,f
  6402  137A                     u4870:
  6403  137A  3EFF               	addlw	-1
  6404  137B  1D03               	skipz
  6405  137C  2B76               	goto	u4875
  6406  137D  0820               	movf	??___ftpack,w
  6407  137E  04F3               	iorwf	___ftpack@arg,f
  6408  137F  0821               	movf	??___ftpack+1,w
  6409  1380  04F4               	iorwf	___ftpack@arg+1,f
  6410  1381  0822               	movf	??___ftpack+2,w
  6411  1382  04F5               	iorwf	___ftpack@arg+2,f
  6412  1383                     l3305:
  6413  1383  0877               	movf	___ftpack@sign,w
  6414  1384  1903               	btfsc	3,2
  6415  1385  2B87               	goto	u4881
  6416  1386  2B88               	goto	u4880
  6417  1387                     u4881:
  6418  1387  2B89               	goto	l663
  6419  1388                     u4880:
  6420  1388                     l3307:
  6421  1388  17F5               	bsf	___ftpack@arg+2,7
  6422  1389                     l663:
  6423  1389                     l650:
  6424  1389  0008               	return
  6425  138A                     __end_of___ftpack:
  6426                           
  6427                           	psect	text20
  6428  1EF5                     __ptext20:	
  6429 ;; *************** function ___ftneg *****************
  6430 ;; Defined at:
  6431 ;;		line 15 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftneg.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  f1              3    3[COMMON] float 
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;		None
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  3    3[COMMON] float 
  6438 ;; Registers used:
  6439 ;;		wreg
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6445 ;;      Params:         3       0       0       0       0
  6446 ;;      Locals:         0       0       0       0       0
  6447 ;;      Temps:          0       0       0       0       0
  6448 ;;      Totals:         3       0       0       0       0
  6449 ;;Total ram usage:        3 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:    2
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_sprintf
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           
  6460                           ;psect for function ___ftneg
  6461  1EF5                     ___ftneg:
  6462  1EF5                     l2673:	
  6463                           ;incstack = 0
  6464                           ; Regs used in ___ftneg: [wreg]
  6465                           
  6466  1EF5  0875               	movf	___ftneg@f1+2,w
  6467  1EF6  0474               	iorwf	___ftneg@f1+1,w
  6468  1EF7  0473               	iorwf	___ftneg@f1,w
  6469  1EF8  1903               	skipnz
  6470  1EF9  2EFB               	goto	u3811
  6471  1EFA  2EFC               	goto	u3810
  6472  1EFB                     u3811:
  6473  1EFB  2EFE               	goto	l2677
  6474  1EFC                     u3810:
  6475  1EFC                     l2675:
  6476  1EFC  3080               	movlw	128
  6477  1EFD  06F5               	xorwf	___ftneg@f1+2,f
  6478  1EFE                     l2677:
  6479  1EFE                     l745:
  6480  1EFE  0008               	return
  6481  1EFF                     __end_of___ftneg:
  6482                           
  6483                           	psect	text21
  6484  10CA                     __ptext21:	
  6485 ;; *************** function ___ftge *****************
  6486 ;; Defined at:
  6487 ;;		line 4 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftge.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;  ff1             3    0[BANK0 ] float 
  6490 ;;  ff2             3    3[BANK0 ] float 
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;		None
  6493 ;; Return value:  Size  Location     Type
  6494 ;;		None               void
  6495 ;; Registers used:
  6496 ;;		wreg, status,2, status,0
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6502 ;;      Params:         0       6       0       0       0
  6503 ;;      Locals:         0       0       0       0       0
  6504 ;;      Temps:          0       0       0       0       0
  6505 ;;      Totals:         0       6       0       0       0
  6506 ;;Total ram usage:        6 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; Hardware stack levels required when called:    2
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_sprintf
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           
  6517                           ;psect for function ___ftge
  6518  10CA                     ___ftge:
  6519  10CA                     l3803:	
  6520                           ;incstack = 0
  6521                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6522                           
  6523  10CA  1283               	bcf	3,5	;RP0=0, select bank0
  6524  10CB  1303               	bcf	3,6	;RP1=0, select bank0
  6525  10CC  1FA2               	btfss	___ftge@ff1+2,7
  6526  10CD  28CF               	goto	u6121
  6527  10CE  28D0               	goto	u6120
  6528  10CF                     u6121:
  6529  10CF  28DD               	goto	l3807
  6530  10D0                     u6120:
  6531  10D0                     l3805:
  6532  10D0  0820               	movf	___ftge@ff1,w
  6533  10D1  3C00               	sublw	0
  6534  10D2  00A0               	movwf	___ftge@ff1
  6535  10D3  0821               	movf	___ftge@ff1+1,w
  6536  10D4  1C03               	skipc
  6537  10D5  0F21               	incfsz	___ftge@ff1+1,w
  6538  10D6  3C00               	sublw	0
  6539  10D7  00A1               	movwf	___ftge@ff1+1
  6540  10D8  0822               	movf	___ftge@ff1+2,w
  6541  10D9  1C03               	skipc
  6542  10DA  0F22               	incfsz	___ftge@ff1+2,w
  6543  10DB  3C80               	sublw	128
  6544  10DC  00A2               	movwf	___ftge@ff1+2
  6545  10DD                     l3807:
  6546  10DD  1FA5               	btfss	___ftge@ff2+2,7
  6547  10DE  28E0               	goto	u6131
  6548  10DF  28E1               	goto	u6130
  6549  10E0                     u6131:
  6550  10E0  28EE               	goto	l3811
  6551  10E1                     u6130:
  6552  10E1                     l3809:
  6553  10E1  0823               	movf	___ftge@ff2,w
  6554  10E2  3C00               	sublw	0
  6555  10E3  00A3               	movwf	___ftge@ff2
  6556  10E4  0824               	movf	___ftge@ff2+1,w
  6557  10E5  1C03               	skipc
  6558  10E6  0F24               	incfsz	___ftge@ff2+1,w
  6559  10E7  3C00               	sublw	0
  6560  10E8  00A4               	movwf	___ftge@ff2+1
  6561  10E9  0825               	movf	___ftge@ff2+2,w
  6562  10EA  1C03               	skipc
  6563  10EB  0F25               	incfsz	___ftge@ff2+2,w
  6564  10EC  3C80               	sublw	128
  6565  10ED  00A5               	movwf	___ftge@ff2+2
  6566  10EE                     l3811:
  6567  10EE  3080               	movlw	128
  6568  10EF  06A2               	xorwf	___ftge@ff1+2,f
  6569  10F0                     l3813:
  6570  10F0  3080               	movlw	128
  6571  10F1  06A5               	xorwf	___ftge@ff2+2,f
  6572  10F2                     l3815:
  6573  10F2  0825               	movf	___ftge@ff2+2,w
  6574  10F3  0222               	subwf	___ftge@ff1+2,w
  6575  10F4  1D03               	skipz
  6576  10F5  28FC               	goto	u6145
  6577  10F6  0824               	movf	___ftge@ff2+1,w
  6578  10F7  0221               	subwf	___ftge@ff1+1,w
  6579  10F8  1D03               	skipz
  6580  10F9  28FC               	goto	u6145
  6581  10FA  0823               	movf	___ftge@ff2,w
  6582  10FB  0220               	subwf	___ftge@ff1,w
  6583  10FC                     u6145:
  6584  10FC  1803               	skipnc
  6585  10FD  28FF               	goto	u6141
  6586  10FE  2900               	goto	u6140
  6587  10FF                     u6141:
  6588  10FF  2902               	goto	l3819
  6589  1100                     u6140:
  6590  1100                     l3817:
  6591  1100  1003               	clrc
  6592  1101  2903               	goto	l728
  6593  1102                     l3819:
  6594  1102  1403               	setc
  6595  1103                     l728:
  6596  1103  0008               	return
  6597  1104                     __end_of___ftge:
  6598                           
  6599                           	psect	text22
  6600  1F2C                     __ptext22:	
  6601 ;; *************** function _configIO *****************
  6602 ;; Defined at:
  6603 ;;		line 45 in file "pic16f.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;		None
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;		None
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  1    wreg      void 
  6610 ;; Registers used:
  6611 ;;		status,2
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6617 ;;      Params:         0       0       0       0       0
  6618 ;;      Locals:         0       0       0       0       0
  6619 ;;      Temps:          0       0       0       0       0
  6620 ;;      Totals:         0       0       0       0       0
  6621 ;;Total ram usage:        0 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; Hardware stack levels required when called:    2
  6624 ;; This function calls:
  6625 ;;		Nothing
  6626 ;; This function is called by:
  6627 ;;		_main
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           
  6632                           ;psect for function _configIO
  6633  1F2C                     _configIO:
  6634  1F2C                     l2761:	
  6635                           ;incstack = 0
  6636                           ; Regs used in _configIO: [status,2]
  6637                           
  6638                           
  6639                           ;pic16f.c: 46:     TRISB=0;
  6640  1F2C  1683               	bsf	3,5	;RP0=1, select bank1
  6641  1F2D  1303               	bcf	3,6	;RP1=0, select bank1
  6642  1F2E  0186               	clrf	6	;volatile
  6643                           
  6644                           ;pic16f.c: 47:     ANSEL=0;
  6645  1F2F  1683               	bsf	3,5	;RP0=1, select bank3
  6646  1F30  1703               	bsf	3,6	;RP1=1, select bank3
  6647  1F31  0188               	clrf	8	;volatile
  6648                           
  6649                           ;pic16f.c: 48:     ANSELH=0;
  6650  1F32  0189               	clrf	9	;volatile
  6651                           
  6652                           ;pic16f.c: 49:     PORTB=0;
  6653  1F33  1283               	bcf	3,5	;RP0=0, select bank0
  6654  1F34  1303               	bcf	3,6	;RP1=0, select bank0
  6655  1F35  0186               	clrf	6	;volatile
  6656  1F36                     l2763:
  6657                           
  6658                           ;pic16f.c: 51:     INTCONbits.PEIE=1;
  6659  1F36  170B               	bsf	11,6	;volatile
  6660  1F37                     l2765:
  6661                           
  6662                           ;pic16f.c: 52:     PIE1bits.RCIE=1;
  6663  1F37  1683               	bsf	3,5	;RP0=1, select bank1
  6664  1F38  1303               	bcf	3,6	;RP1=0, select bank1
  6665  1F39  168C               	bsf	12,5	;volatile
  6666  1F3A                     l2767:
  6667                           
  6668                           ;pic16f.c: 53:     PIR1bits.RCIF=0;
  6669  1F3A  1283               	bcf	3,5	;RP0=0, select bank0
  6670  1F3B  1303               	bcf	3,6	;RP1=0, select bank0
  6671  1F3C  128C               	bcf	12,5	;volatile
  6672  1F3D                     l2769:
  6673                           
  6674                           ;pic16f.c: 54:     INTCONbits.GIE=1;
  6675  1F3D  178B               	bsf	11,7	;volatile
  6676  1F3E                     l53:
  6677  1F3E  0008               	return
  6678  1F3F                     __end_of_configIO:
  6679                           
  6680                           	psect	text23
  6681  1F7F                     __ptext23:	
  6682 ;; *************** function _Write_USART_String *****************
  6683 ;; Defined at:
  6684 ;;		line 34 in file "USART.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;  a               1    wreg     PTR unsigned char 
  6687 ;;		 -> STR_1(12), 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;  a               1    5[COMMON] PTR unsigned char 
  6690 ;;		 -> STR_1(12), 
  6691 ;;  i               1    6[COMMON] unsigned char 
  6692 ;; Return value:  Size  Location     Type
  6693 ;;                  1    wreg      void 
  6694 ;; Registers used:
  6695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6696 ;; Tracked objects:
  6697 ;;		On entry : 0/0
  6698 ;;		On exit  : 0/0
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6701 ;;      Params:         0       0       0       0       0
  6702 ;;      Locals:         2       0       0       0       0
  6703 ;;      Temps:          1       0       0       0       0
  6704 ;;      Totals:         3       0       0       0       0
  6705 ;;Total ram usage:        3 bytes
  6706 ;; Hardware stack levels used:    1
  6707 ;; Hardware stack levels required when called:    3
  6708 ;; This function calls:
  6709 ;;		_Write_USART
  6710 ;; This function is called by:
  6711 ;;		_main
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           
  6716                           ;psect for function _Write_USART_String
  6717  1F7F                     _Write_USART_String:
  6718                           
  6719                           ;incstack = 0
  6720                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6721                           ;Write_USART_String@a stored from wreg
  6722  1F7F  00F5               	movwf	Write_USART_String@a
  6723  1F80                     l2809:
  6724                           
  6725                           ;USART.c: 35:     uint8_t i;;USART.c: 36:     for(i=0;a[i]!='\0';i++){
  6726  1F80  01F6               	clrf	Write_USART_String@i
  6727  1F81  2F93               	goto	l2815
  6728  1F82                     l2811:
  6729                           
  6730                           ;USART.c: 37:         Write_USART(a[i]);
  6731  1F82  0876               	movf	Write_USART_String@i,w
  6732  1F83  0775               	addwf	Write_USART_String@a,w
  6733  1F84  0084               	movwf	4
  6734  1F85  160A  118A  2000  160A  158A  	fcall	stringdir
  6735  1F8A  160A  158A  26FF  160A  158A  	fcall	_Write_USART
  6736  1F8F                     l2813:
  6737                           
  6738                           ;USART.c: 38:     }
  6739  1F8F  3001               	movlw	1
  6740  1F90  00F4               	movwf	??_Write_USART_String
  6741  1F91  0874               	movf	??_Write_USART_String,w
  6742  1F92  07F6               	addwf	Write_USART_String@i,f
  6743  1F93                     l2815:
  6744  1F93  0876               	movf	Write_USART_String@i,w
  6745  1F94  0775               	addwf	Write_USART_String@a,w
  6746  1F95  0084               	movwf	4
  6747  1F96  160A  118A  2000  160A  158A  	fcall	stringdir
  6748  1F9B  3A00               	xorlw	0
  6749  1F9C  1D03               	skipz
  6750  1F9D  2F9F               	goto	u4101
  6751  1F9E  2FA0               	goto	u4100
  6752  1F9F                     u4101:
  6753  1F9F  2F82               	goto	l2811
  6754  1FA0                     u4100:
  6755  1FA0                     l163:
  6756  1FA0  0008               	return
  6757  1FA1                     __end_of_Write_USART_String:
  6758                           
  6759                           	psect	text24
  6760  1EFF                     __ptext24:	
  6761 ;; *************** function _Write_USART *****************
  6762 ;; Defined at:
  6763 ;;		line 30 in file "USART.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;  a               1    wreg     unsigned char 
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;  a               1    3[COMMON] unsigned char 
  6768 ;; Return value:  Size  Location     Type
  6769 ;;                  1    wreg      void 
  6770 ;; Registers used:
  6771 ;;		wreg
  6772 ;; Tracked objects:
  6773 ;;		On entry : 0/0
  6774 ;;		On exit  : 0/0
  6775 ;;		Unchanged: 0/0
  6776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6777 ;;      Params:         0       0       0       0       0
  6778 ;;      Locals:         1       0       0       0       0
  6779 ;;      Temps:          0       0       0       0       0
  6780 ;;      Totals:         1       0       0       0       0
  6781 ;;Total ram usage:        1 bytes
  6782 ;; Hardware stack levels used:    1
  6783 ;; Hardware stack levels required when called:    2
  6784 ;; This function calls:
  6785 ;;		Nothing
  6786 ;; This function is called by:
  6787 ;;		_main
  6788 ;;		_Write_USART_String
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792                           
  6793                           ;psect for function _Write_USART
  6794  1EFF                     _Write_USART:
  6795                           
  6796                           ;incstack = 0
  6797                           ; Regs used in _Write_USART: [wreg]
  6798                           ;Write_USART@a stored from wreg
  6799  1EFF  00F3               	movwf	Write_USART@a
  6800  1F00                     l2389:
  6801  1F00                     l154:	
  6802                           ;USART.c: 31:     while(!TRMT);
  6803                           
  6804  1F00  1683               	bsf	3,5	;RP0=1, select bank1
  6805  1F01  1303               	bcf	3,6	;RP1=0, select bank1
  6806  1F02  1C98               	btfss	24,1	;volatile
  6807  1F03  2F05               	goto	u3201
  6808  1F04  2F06               	goto	u3200
  6809  1F05                     u3201:
  6810  1F05  2F00               	goto	l154
  6811  1F06                     u3200:
  6812  1F06                     l2391:
  6813                           
  6814                           ;USART.c: 32:     TXREG=a;
  6815  1F06  0873               	movf	Write_USART@a,w
  6816  1F07  1283               	bcf	3,5	;RP0=0, select bank0
  6817  1F08  1303               	bcf	3,6	;RP1=0, select bank0
  6818  1F09  0099               	movwf	25	;volatile
  6819  1F0A                     l157:
  6820  1F0A  0008               	return
  6821  1F0B                     __end_of_Write_USART:
  6822                           
  6823                           	psect	text25
  6824  15F7                     __ptext25:	
  6825 ;; *************** function _USART_Init *****************
  6826 ;; Defined at:
  6827 ;;		line 9 in file "USART.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  baudrate        4   14[BANK0 ] const long 
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;  x               2    4[COMMON] unsigned int 
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  1    wreg      unsigned char 
  6834 ;; Registers used:
  6835 ;;		wreg, status,2, status,0, pclath, cstack
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6841 ;;      Params:         0       4       0       0       0
  6842 ;;      Locals:         2       0       0       0       0
  6843 ;;      Temps:          0      12       0       0       0
  6844 ;;      Totals:         2      16       0       0       0
  6845 ;;Total ram usage:       18 bytes
  6846 ;; Hardware stack levels used:    1
  6847 ;; Hardware stack levels required when called:    3
  6848 ;; This function calls:
  6849 ;;		___aldiv
  6850 ;; This function is called by:
  6851 ;;		_main
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           
  6856                           ;psect for function _USART_Init
  6857  15F7                     _USART_Init:
  6858  15F7                     l3861:	
  6859                           ;incstack = 0
  6860                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  6861                           
  6862                           
  6863                           ;USART.c: 10:   unsigned int x;;USART.c: 11:   x = (8000000 - baudrate*64)/(baudrate*64)
      +                          ;
  6864  15F7  1283               	bcf	3,5	;RP0=0, select bank0
  6865  15F8  1303               	bcf	3,6	;RP1=0, select bank0
  6866  15F9  082E               	movf	USART_Init@baudrate,w
  6867  15FA  00B2               	movwf	??_USART_Init
  6868  15FB  082F               	movf	USART_Init@baudrate+1,w
  6869  15FC  00B3               	movwf	??_USART_Init+1
  6870  15FD  0830               	movf	USART_Init@baudrate+2,w
  6871  15FE  00B4               	movwf	??_USART_Init+2
  6872  15FF  0831               	movf	USART_Init@baudrate+3,w
  6873  1600  00B5               	movwf	??_USART_Init+3
  6874  1601  3006               	movlw	6
  6875  1602                     u6245:
  6876  1602  1003               	clrc
  6877  1603  0DB2               	rlf	??_USART_Init,f
  6878  1604  0DB3               	rlf	??_USART_Init+1,f
  6879  1605  0DB4               	rlf	??_USART_Init+2,f
  6880  1606  0DB5               	rlf	??_USART_Init+3,f
  6881  1607                     u6240:
  6882  1607  3EFF               	addlw	-1
  6883  1608  1D03               	skipz
  6884  1609  2E02               	goto	u6245
  6885  160A  0835               	movf	??_USART_Init+3,w
  6886  160B  00A3               	movwf	___aldiv@divisor+3
  6887  160C  0834               	movf	??_USART_Init+2,w
  6888  160D  00A2               	movwf	___aldiv@divisor+2
  6889  160E  0833               	movf	??_USART_Init+1,w
  6890  160F  00A1               	movwf	___aldiv@divisor+1
  6891  1610  0832               	movf	??_USART_Init,w
  6892  1611  00A0               	movwf	___aldiv@divisor
  6893  1612  082E               	movf	USART_Init@baudrate,w
  6894  1613  00B6               	movwf	??_USART_Init+4
  6895  1614  082F               	movf	USART_Init@baudrate+1,w
  6896  1615  00B7               	movwf	??_USART_Init+5
  6897  1616  0830               	movf	USART_Init@baudrate+2,w
  6898  1617  00B8               	movwf	??_USART_Init+6
  6899  1618  0831               	movf	USART_Init@baudrate+3,w
  6900  1619  00B9               	movwf	??_USART_Init+7
  6901  161A  3006               	movlw	6
  6902  161B                     u6255:
  6903  161B  1003               	clrc
  6904  161C  0DB6               	rlf	??_USART_Init+4,f
  6905  161D  0DB7               	rlf	??_USART_Init+5,f
  6906  161E  0DB8               	rlf	??_USART_Init+6,f
  6907  161F  0DB9               	rlf	??_USART_Init+7,f
  6908  1620                     u6250:
  6909  1620  3EFF               	addlw	-1
  6910  1621  1D03               	skipz
  6911  1622  2E1B               	goto	u6255
  6912  1623  3000               	movlw	0
  6913  1624  00BA               	movwf	??_USART_Init+8
  6914  1625  3012               	movlw	18
  6915  1626  00BB               	movwf	??_USART_Init+9
  6916  1627  307A               	movlw	122
  6917  1628  00BC               	movwf	??_USART_Init+10
  6918  1629  3000               	movlw	0
  6919  162A  00BD               	movwf	??_USART_Init+11
  6920  162B  0836               	movf	??_USART_Init+4,w
  6921  162C  02BA               	subwf	??_USART_Init+8,f
  6922  162D  0837               	movf	??_USART_Init+5,w
  6923  162E  1C03               	skipc
  6924  162F  0F37               	incfsz	??_USART_Init+5,w
  6925  1630  2E32               	goto	u6261
  6926  1631  2E33               	goto	u6262
  6927  1632                     u6261:
  6928  1632  02BB               	subwf	??_USART_Init+9,f
  6929  1633                     u6262:
  6930  1633  0838               	movf	??_USART_Init+6,w
  6931  1634  1C03               	skipc
  6932  1635  0F38               	incfsz	??_USART_Init+6,w
  6933  1636  2E38               	goto	u6263
  6934  1637  2E39               	goto	u6264
  6935  1638                     u6263:
  6936  1638  02BC               	subwf	??_USART_Init+10,f
  6937  1639                     u6264:
  6938  1639  0839               	movf	??_USART_Init+7,w
  6939  163A  1C03               	skipc
  6940  163B  0F39               	incfsz	??_USART_Init+7,w
  6941  163C  2E3E               	goto	u6265
  6942  163D  2E3F               	goto	u6266
  6943  163E                     u6265:
  6944  163E  02BD               	subwf	??_USART_Init+11,f
  6945  163F                     u6266:
  6946  163F  083D               	movf	??_USART_Init+11,w
  6947  1640  00A7               	movwf	___aldiv@dividend+3
  6948  1641  083C               	movf	??_USART_Init+10,w
  6949  1642  00A6               	movwf	___aldiv@dividend+2
  6950  1643  083B               	movf	??_USART_Init+9,w
  6951  1644  00A5               	movwf	___aldiv@dividend+1
  6952  1645  083A               	movf	??_USART_Init+8,w
  6953  1646  00A4               	movwf	___aldiv@dividend
  6954  1647  160A  118A  249D  160A  118A  	fcall	___aldiv
  6955  164C  1283               	bcf	3,5	;RP0=0, select bank0
  6956  164D  1303               	bcf	3,6	;RP1=0, select bank0
  6957  164E  0821               	movf	?___aldiv+1,w
  6958  164F  00F5               	movwf	USART_Init@x+1
  6959  1650  0820               	movf	?___aldiv,w
  6960  1651  00F4               	movwf	USART_Init@x
  6961  1652                     l3863:
  6962                           
  6963                           ;USART.c: 12:   if(x>255)
  6964  1652  3001               	movlw	1
  6965  1653  0275               	subwf	USART_Init@x+1,w
  6966  1654  3000               	movlw	0
  6967  1655  1903               	skipnz
  6968  1656  0274               	subwf	USART_Init@x,w
  6969  1657  1C03               	skipc
  6970  1658  2E5A               	goto	u6271
  6971  1659  2E5B               	goto	u6270
  6972  165A                     u6271:
  6973  165A  2EB7               	goto	l3869
  6974  165B                     u6270:
  6975  165B                     l3865:
  6976                           
  6977                           ;USART.c: 13:   {;USART.c: 14:     x = (8000000 - baudrate*16)/(baudrate*16);
  6978  165B  082E               	movf	USART_Init@baudrate,w
  6979  165C  00B2               	movwf	??_USART_Init
  6980  165D  082F               	movf	USART_Init@baudrate+1,w
  6981  165E  00B3               	movwf	??_USART_Init+1
  6982  165F  0830               	movf	USART_Init@baudrate+2,w
  6983  1660  00B4               	movwf	??_USART_Init+2
  6984  1661  0831               	movf	USART_Init@baudrate+3,w
  6985  1662  00B5               	movwf	??_USART_Init+3
  6986  1663  3004               	movlw	4
  6987  1664                     u6285:
  6988  1664  1003               	clrc
  6989  1665  0DB2               	rlf	??_USART_Init,f
  6990  1666  0DB3               	rlf	??_USART_Init+1,f
  6991  1667  0DB4               	rlf	??_USART_Init+2,f
  6992  1668  0DB5               	rlf	??_USART_Init+3,f
  6993  1669                     u6280:
  6994  1669  3EFF               	addlw	-1
  6995  166A  1D03               	skipz
  6996  166B  2E64               	goto	u6285
  6997  166C  0835               	movf	??_USART_Init+3,w
  6998  166D  00A3               	movwf	___aldiv@divisor+3
  6999  166E  0834               	movf	??_USART_Init+2,w
  7000  166F  00A2               	movwf	___aldiv@divisor+2
  7001  1670  0833               	movf	??_USART_Init+1,w
  7002  1671  00A1               	movwf	___aldiv@divisor+1
  7003  1672  0832               	movf	??_USART_Init,w
  7004  1673  00A0               	movwf	___aldiv@divisor
  7005  1674  082E               	movf	USART_Init@baudrate,w
  7006  1675  00B6               	movwf	??_USART_Init+4
  7007  1676  082F               	movf	USART_Init@baudrate+1,w
  7008  1677  00B7               	movwf	??_USART_Init+5
  7009  1678  0830               	movf	USART_Init@baudrate+2,w
  7010  1679  00B8               	movwf	??_USART_Init+6
  7011  167A  0831               	movf	USART_Init@baudrate+3,w
  7012  167B  00B9               	movwf	??_USART_Init+7
  7013  167C  3004               	movlw	4
  7014  167D                     u6295:
  7015  167D  1003               	clrc
  7016  167E  0DB6               	rlf	??_USART_Init+4,f
  7017  167F  0DB7               	rlf	??_USART_Init+5,f
  7018  1680  0DB8               	rlf	??_USART_Init+6,f
  7019  1681  0DB9               	rlf	??_USART_Init+7,f
  7020  1682                     u6290:
  7021  1682  3EFF               	addlw	-1
  7022  1683  1D03               	skipz
  7023  1684  2E7D               	goto	u6295
  7024  1685  3000               	movlw	0
  7025  1686  00BA               	movwf	??_USART_Init+8
  7026  1687  3012               	movlw	18
  7027  1688  00BB               	movwf	??_USART_Init+9
  7028  1689  307A               	movlw	122
  7029  168A  00BC               	movwf	??_USART_Init+10
  7030  168B  3000               	movlw	0
  7031  168C  00BD               	movwf	??_USART_Init+11
  7032  168D  0836               	movf	??_USART_Init+4,w
  7033  168E  02BA               	subwf	??_USART_Init+8,f
  7034  168F  0837               	movf	??_USART_Init+5,w
  7035  1690  1C03               	skipc
  7036  1691  0F37               	incfsz	??_USART_Init+5,w
  7037  1692  2E94               	goto	u6301
  7038  1693  2E95               	goto	u6302
  7039  1694                     u6301:
  7040  1694  02BB               	subwf	??_USART_Init+9,f
  7041  1695                     u6302:
  7042  1695  0838               	movf	??_USART_Init+6,w
  7043  1696  1C03               	skipc
  7044  1697  0F38               	incfsz	??_USART_Init+6,w
  7045  1698  2E9A               	goto	u6303
  7046  1699  2E9B               	goto	u6304
  7047  169A                     u6303:
  7048  169A  02BC               	subwf	??_USART_Init+10,f
  7049  169B                     u6304:
  7050  169B  0839               	movf	??_USART_Init+7,w
  7051  169C  1C03               	skipc
  7052  169D  0F39               	incfsz	??_USART_Init+7,w
  7053  169E  2EA0               	goto	u6305
  7054  169F  2EA1               	goto	u6306
  7055  16A0                     u6305:
  7056  16A0  02BD               	subwf	??_USART_Init+11,f
  7057  16A1                     u6306:
  7058  16A1  083D               	movf	??_USART_Init+11,w
  7059  16A2  00A7               	movwf	___aldiv@dividend+3
  7060  16A3  083C               	movf	??_USART_Init+10,w
  7061  16A4  00A6               	movwf	___aldiv@dividend+2
  7062  16A5  083B               	movf	??_USART_Init+9,w
  7063  16A6  00A5               	movwf	___aldiv@dividend+1
  7064  16A7  083A               	movf	??_USART_Init+8,w
  7065  16A8  00A4               	movwf	___aldiv@dividend
  7066  16A9  160A  118A  249D  160A  118A  	fcall	___aldiv
  7067  16AE  1283               	bcf	3,5	;RP0=0, select bank0
  7068  16AF  1303               	bcf	3,6	;RP1=0, select bank0
  7069  16B0  0821               	movf	?___aldiv+1,w
  7070  16B1  00F5               	movwf	USART_Init@x+1
  7071  16B2  0820               	movf	?___aldiv,w
  7072  16B3  00F4               	movwf	USART_Init@x
  7073  16B4                     l3867:
  7074                           
  7075                           ;USART.c: 15:     BRGH = 1;
  7076  16B4  1683               	bsf	3,5	;RP0=1, select bank1
  7077  16B5  1303               	bcf	3,6	;RP1=0, select bank1
  7078  16B6  1518               	bsf	24,2	;volatile
  7079  16B7                     l3869:
  7080                           
  7081                           ;USART.c: 17:   if(x<256)
  7082  16B7  3001               	movlw	1
  7083  16B8  0275               	subwf	USART_Init@x+1,w
  7084  16B9  3000               	movlw	0
  7085  16BA  1903               	skipnz
  7086  16BB  0274               	subwf	USART_Init@x,w
  7087  16BC  1803               	skipnc
  7088  16BD  2EBF               	goto	u6311
  7089  16BE  2EC0               	goto	u6310
  7090  16BF                     u6311:
  7091  16BF  2ED2               	goto	l151
  7092  16C0                     u6310:
  7093  16C0                     l3871:
  7094                           
  7095                           ;USART.c: 18:   {;USART.c: 19:     SPBRG = x;
  7096  16C0  0874               	movf	USART_Init@x,w
  7097  16C1  1683               	bsf	3,5	;RP0=1, select bank1
  7098  16C2  1303               	bcf	3,6	;RP1=0, select bank1
  7099  16C3  0099               	movwf	25	;volatile
  7100  16C4                     l3873:
  7101                           
  7102                           ;USART.c: 20:     SYNC = 0;
  7103  16C4  1218               	bcf	24,4	;volatile
  7104  16C5                     l3875:
  7105                           
  7106                           ;USART.c: 21:     SPEN = 1;
  7107  16C5  1283               	bcf	3,5	;RP0=0, select bank0
  7108  16C6  1303               	bcf	3,6	;RP1=0, select bank0
  7109  16C7  1798               	bsf	24,7	;volatile
  7110  16C8                     l3877:
  7111                           
  7112                           ;USART.c: 22:     TRISC7 = 1;
  7113  16C8  1683               	bsf	3,5	;RP0=1, select bank1
  7114  16C9  1303               	bcf	3,6	;RP1=0, select bank1
  7115  16CA  1787               	bsf	7,7	;volatile
  7116  16CB                     l3879:
  7117                           
  7118                           ;USART.c: 23:     TRISC6 = 0;
  7119  16CB  1307               	bcf	7,6	;volatile
  7120  16CC                     l3881:
  7121                           
  7122                           ;USART.c: 24:     CREN = 1;
  7123  16CC  1283               	bcf	3,5	;RP0=0, select bank0
  7124  16CD  1303               	bcf	3,6	;RP1=0, select bank0
  7125  16CE  1618               	bsf	24,4	;volatile
  7126  16CF                     l3883:
  7127                           
  7128                           ;USART.c: 25:     TXEN = 1;
  7129  16CF  1683               	bsf	3,5	;RP0=1, select bank1
  7130  16D0  1303               	bcf	3,6	;RP1=0, select bank1
  7131  16D1  1698               	bsf	24,5	;volatile
  7132  16D2                     l151:
  7133  16D2  0008               	return
  7134  16D3                     __end_of_USART_Init:
  7135                           
  7136                           	psect	text26
  7137  149D                     __ptext26:	
  7138 ;; *************** function ___aldiv *****************
  7139 ;; Defined at:
  7140 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\aldiv.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;  divisor         4    0[BANK0 ] long 
  7143 ;;  dividend        4    4[BANK0 ] long 
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;  quotient        4   10[BANK0 ] long 
  7146 ;;  sign            1    9[BANK0 ] unsigned char 
  7147 ;;  counter         1    8[BANK0 ] unsigned char 
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  4    0[BANK0 ] long 
  7150 ;; Registers used:
  7151 ;;		wreg, status,2, status,0
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7157 ;;      Params:         0       8       0       0       0
  7158 ;;      Locals:         0       6       0       0       0
  7159 ;;      Temps:          1       0       0       0       0
  7160 ;;      Totals:         1      14       0       0       0
  7161 ;;Total ram usage:       15 bytes
  7162 ;; Hardware stack levels used:    1
  7163 ;; Hardware stack levels required when called:    2
  7164 ;; This function calls:
  7165 ;;		Nothing
  7166 ;; This function is called by:
  7167 ;;		_USART_Init
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           
  7172                           ;psect for function ___aldiv
  7173  149D                     ___aldiv:
  7174  149D                     l3763:	
  7175                           ;incstack = 0
  7176                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7177                           
  7178  149D  1283               	bcf	3,5	;RP0=0, select bank0
  7179  149E  1303               	bcf	3,6	;RP1=0, select bank0
  7180  149F  01A9               	clrf	___aldiv@sign
  7181  14A0                     l3765:
  7182  14A0  1FA3               	btfss	___aldiv@divisor+3,7
  7183  14A1  2CA3               	goto	u6021
  7184  14A2  2CA4               	goto	u6020
  7185  14A3                     u6021:
  7186  14A3  2CB1               	goto	l496
  7187  14A4                     u6020:
  7188  14A4                     l3767:
  7189  14A4  09A0               	comf	___aldiv@divisor,f
  7190  14A5  09A1               	comf	___aldiv@divisor+1,f
  7191  14A6  09A2               	comf	___aldiv@divisor+2,f
  7192  14A7  09A3               	comf	___aldiv@divisor+3,f
  7193  14A8  0AA0               	incf	___aldiv@divisor,f
  7194  14A9  1903               	skipnz
  7195  14AA  0AA1               	incf	___aldiv@divisor+1,f
  7196  14AB  1903               	skipnz
  7197  14AC  0AA2               	incf	___aldiv@divisor+2,f
  7198  14AD  1903               	skipnz
  7199  14AE  0AA3               	incf	___aldiv@divisor+3,f
  7200  14AF  01A9               	clrf	___aldiv@sign
  7201  14B0  0AA9               	incf	___aldiv@sign,f
  7202  14B1                     l496:
  7203  14B1  1FA7               	btfss	___aldiv@dividend+3,7
  7204  14B2  2CB4               	goto	u6031
  7205  14B3  2CB5               	goto	u6030
  7206  14B4                     u6031:
  7207  14B4  2CC4               	goto	l3773
  7208  14B5                     u6030:
  7209  14B5                     l3769:
  7210  14B5  09A4               	comf	___aldiv@dividend,f
  7211  14B6  09A5               	comf	___aldiv@dividend+1,f
  7212  14B7  09A6               	comf	___aldiv@dividend+2,f
  7213  14B8  09A7               	comf	___aldiv@dividend+3,f
  7214  14B9  0AA4               	incf	___aldiv@dividend,f
  7215  14BA  1903               	skipnz
  7216  14BB  0AA5               	incf	___aldiv@dividend+1,f
  7217  14BC  1903               	skipnz
  7218  14BD  0AA6               	incf	___aldiv@dividend+2,f
  7219  14BE  1903               	skipnz
  7220  14BF  0AA7               	incf	___aldiv@dividend+3,f
  7221  14C0                     l3771:
  7222  14C0  3001               	movlw	1
  7223  14C1  00F3               	movwf	??___aldiv
  7224  14C2  0873               	movf	??___aldiv,w
  7225  14C3  06A9               	xorwf	___aldiv@sign,f
  7226  14C4                     l3773:
  7227  14C4  3000               	movlw	0
  7228  14C5  00AD               	movwf	___aldiv@quotient+3
  7229  14C6  3000               	movlw	0
  7230  14C7  00AC               	movwf	___aldiv@quotient+2
  7231  14C8  3000               	movlw	0
  7232  14C9  00AB               	movwf	___aldiv@quotient+1
  7233  14CA  3000               	movlw	0
  7234  14CB  00AA               	movwf	___aldiv@quotient
  7235  14CC                     l3775:
  7236  14CC  0823               	movf	___aldiv@divisor+3,w
  7237  14CD  0422               	iorwf	___aldiv@divisor+2,w
  7238  14CE  0421               	iorwf	___aldiv@divisor+1,w
  7239  14CF  0420               	iorwf	___aldiv@divisor,w
  7240  14D0  1903               	skipnz
  7241  14D1  2CD3               	goto	u6041
  7242  14D2  2CD4               	goto	u6040
  7243  14D3                     u6041:
  7244  14D3  2D21               	goto	l3795
  7245  14D4                     u6040:
  7246  14D4                     l3777:
  7247  14D4  01A8               	clrf	___aldiv@counter
  7248  14D5  0AA8               	incf	___aldiv@counter,f
  7249  14D6  2CE4               	goto	l3781
  7250  14D7                     l3779:
  7251  14D7  3001               	movlw	1
  7252  14D8  00F3               	movwf	??___aldiv
  7253  14D9                     u6055:
  7254  14D9  1003               	clrc
  7255  14DA  0DA0               	rlf	___aldiv@divisor,f
  7256  14DB  0DA1               	rlf	___aldiv@divisor+1,f
  7257  14DC  0DA2               	rlf	___aldiv@divisor+2,f
  7258  14DD  0DA3               	rlf	___aldiv@divisor+3,f
  7259  14DE  0BF3               	decfsz	??___aldiv,f
  7260  14DF  2CD9               	goto	u6055
  7261  14E0  3001               	movlw	1
  7262  14E1  00F3               	movwf	??___aldiv
  7263  14E2  0873               	movf	??___aldiv,w
  7264  14E3  07A8               	addwf	___aldiv@counter,f
  7265  14E4                     l3781:
  7266  14E4  1FA3               	btfss	___aldiv@divisor+3,7
  7267  14E5  2CE7               	goto	u6061
  7268  14E6  2CE8               	goto	u6060
  7269  14E7                     u6061:
  7270  14E7  2CD7               	goto	l3779
  7271  14E8                     u6060:
  7272  14E8                     l3783:
  7273  14E8  3001               	movlw	1
  7274  14E9  00F3               	movwf	??___aldiv
  7275  14EA                     u6075:
  7276  14EA  1003               	clrc
  7277  14EB  0DAA               	rlf	___aldiv@quotient,f
  7278  14EC  0DAB               	rlf	___aldiv@quotient+1,f
  7279  14ED  0DAC               	rlf	___aldiv@quotient+2,f
  7280  14EE  0DAD               	rlf	___aldiv@quotient+3,f
  7281  14EF  0BF3               	decfsz	??___aldiv,f
  7282  14F0  2CEA               	goto	u6075
  7283  14F1                     l3785:
  7284  14F1  0823               	movf	___aldiv@divisor+3,w
  7285  14F2  0227               	subwf	___aldiv@dividend+3,w
  7286  14F3  1D03               	skipz
  7287  14F4  2CFF               	goto	u6085
  7288  14F5  0822               	movf	___aldiv@divisor+2,w
  7289  14F6  0226               	subwf	___aldiv@dividend+2,w
  7290  14F7  1D03               	skipz
  7291  14F8  2CFF               	goto	u6085
  7292  14F9  0821               	movf	___aldiv@divisor+1,w
  7293  14FA  0225               	subwf	___aldiv@dividend+1,w
  7294  14FB  1D03               	skipz
  7295  14FC  2CFF               	goto	u6085
  7296  14FD  0820               	movf	___aldiv@divisor,w
  7297  14FE  0224               	subwf	___aldiv@dividend,w
  7298  14FF                     u6085:
  7299  14FF  1C03               	skipc
  7300  1500  2D02               	goto	u6081
  7301  1501  2D03               	goto	u6080
  7302  1502                     u6081:
  7303  1502  2D12               	goto	l3791
  7304  1503                     u6080:
  7305  1503                     l3787:
  7306  1503  0820               	movf	___aldiv@divisor,w
  7307  1504  02A4               	subwf	___aldiv@dividend,f
  7308  1505  0821               	movf	___aldiv@divisor+1,w
  7309  1506  1C03               	skipc
  7310  1507  0F21               	incfsz	___aldiv@divisor+1,w
  7311  1508  02A5               	subwf	___aldiv@dividend+1,f
  7312  1509  0822               	movf	___aldiv@divisor+2,w
  7313  150A  1C03               	skipc
  7314  150B  0F22               	incfsz	___aldiv@divisor+2,w
  7315  150C  02A6               	subwf	___aldiv@dividend+2,f
  7316  150D  0823               	movf	___aldiv@divisor+3,w
  7317  150E  1C03               	skipc
  7318  150F  0F23               	incfsz	___aldiv@divisor+3,w
  7319  1510  02A7               	subwf	___aldiv@dividend+3,f
  7320  1511                     l3789:
  7321  1511  142A               	bsf	___aldiv@quotient,0
  7322  1512                     l3791:
  7323  1512  3001               	movlw	1
  7324  1513                     u6095:
  7325  1513  1003               	clrc
  7326  1514  0CA3               	rrf	___aldiv@divisor+3,f
  7327  1515  0CA2               	rrf	___aldiv@divisor+2,f
  7328  1516  0CA1               	rrf	___aldiv@divisor+1,f
  7329  1517  0CA0               	rrf	___aldiv@divisor,f
  7330  1518  3EFF               	addlw	-1
  7331  1519  1D03               	skipz
  7332  151A  2D13               	goto	u6095
  7333  151B                     l3793:
  7334  151B  3001               	movlw	1
  7335  151C  02A8               	subwf	___aldiv@counter,f
  7336  151D  1D03               	btfss	3,2
  7337  151E  2D20               	goto	u6101
  7338  151F  2D21               	goto	u6100
  7339  1520                     u6101:
  7340  1520  2CE8               	goto	l3783
  7341  1521                     u6100:
  7342  1521                     l3795:
  7343  1521  0829               	movf	___aldiv@sign,w
  7344  1522  1903               	btfsc	3,2
  7345  1523  2D25               	goto	u6111
  7346  1524  2D26               	goto	u6110
  7347  1525                     u6111:
  7348  1525  2D31               	goto	l3799
  7349  1526                     u6110:
  7350  1526                     l3797:
  7351  1526  09AA               	comf	___aldiv@quotient,f
  7352  1527  09AB               	comf	___aldiv@quotient+1,f
  7353  1528  09AC               	comf	___aldiv@quotient+2,f
  7354  1529  09AD               	comf	___aldiv@quotient+3,f
  7355  152A  0AAA               	incf	___aldiv@quotient,f
  7356  152B  1903               	skipnz
  7357  152C  0AAB               	incf	___aldiv@quotient+1,f
  7358  152D  1903               	skipnz
  7359  152E  0AAC               	incf	___aldiv@quotient+2,f
  7360  152F  1903               	skipnz
  7361  1530  0AAD               	incf	___aldiv@quotient+3,f
  7362  1531                     l3799:
  7363  1531  082D               	movf	___aldiv@quotient+3,w
  7364  1532  00A3               	movwf	?___aldiv+3
  7365  1533  082C               	movf	___aldiv@quotient+2,w
  7366  1534  00A2               	movwf	?___aldiv+2
  7367  1535  082B               	movf	___aldiv@quotient+1,w
  7368  1536  00A1               	movwf	?___aldiv+1
  7369  1537  082A               	movf	___aldiv@quotient,w
  7370  1538  00A0               	movwf	?___aldiv
  7371  1539                     l506:
  7372  1539  0008               	return
  7373  153A                     __end_of___aldiv:
  7374                           
  7375                           	psect	text27
  7376  1FC6                     __ptext27:	
  7377 ;; *************** function _I2C_Master_Init *****************
  7378 ;; Defined at:
  7379 ;;		line 16 in file "I2C.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  c               4   13[BANK0 ] const unsigned long 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;		None
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  1    wreg      void 
  7386 ;; Registers used:
  7387 ;;		wreg, status,2, status,0, pclath, cstack
  7388 ;; Tracked objects:
  7389 ;;		On entry : 0/0
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7393 ;;      Params:         0       4       0       0       0
  7394 ;;      Locals:         0       0       0       0       0
  7395 ;;      Temps:          4       0       0       0       0
  7396 ;;      Totals:         4       4       0       0       0
  7397 ;;Total ram usage:        8 bytes
  7398 ;; Hardware stack levels used:    1
  7399 ;; Hardware stack levels required when called:    3
  7400 ;; This function calls:
  7401 ;;		___lldiv
  7402 ;; This function is called by:
  7403 ;;		_main
  7404 ;;		_aht_begin
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           
  7409                           ;psect for function _I2C_Master_Init
  7410  1FC6                     _I2C_Master_Init:
  7411  1FC6                     l3887:	
  7412                           ;incstack = 0
  7413                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  7414                           
  7415                           
  7416                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  7417  1FC6  3028               	movlw	40
  7418  1FC7  1283               	bcf	3,5	;RP0=0, select bank0
  7419  1FC8  1303               	bcf	3,6	;RP1=0, select bank0
  7420  1FC9  0094               	movwf	20	;volatile
  7421  1FCA                     l3889:
  7422                           
  7423                           ;I2C.c: 19:     SSPCON2 = 0;
  7424  1FCA  1683               	bsf	3,5	;RP0=1, select bank1
  7425  1FCB  1303               	bcf	3,6	;RP1=0, select bank1
  7426  1FCC  0191               	clrf	17	;volatile
  7427  1FCD                     l3891:
  7428                           
  7429                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  7430  1FCD  1283               	bcf	3,5	;RP0=0, select bank0
  7431  1FCE  1303               	bcf	3,6	;RP1=0, select bank0
  7432  1FCF  082D               	movf	I2C_Master_Init@c,w
  7433  1FD0  00F4               	movwf	??_I2C_Master_Init
  7434  1FD1  082E               	movf	I2C_Master_Init@c+1,w
  7435  1FD2  00F5               	movwf	??_I2C_Master_Init+1
  7436  1FD3  082F               	movf	I2C_Master_Init@c+2,w
  7437  1FD4  00F6               	movwf	??_I2C_Master_Init+2
  7438  1FD5  0830               	movf	I2C_Master_Init@c+3,w
  7439  1FD6  00F7               	movwf	??_I2C_Master_Init+3
  7440  1FD7  3002               	movlw	2
  7441  1FD8                     u6325:
  7442  1FD8  1003               	clrc
  7443  1FD9  0DF4               	rlf	??_I2C_Master_Init,f
  7444  1FDA  0DF5               	rlf	??_I2C_Master_Init+1,f
  7445  1FDB  0DF6               	rlf	??_I2C_Master_Init+2,f
  7446  1FDC  0DF7               	rlf	??_I2C_Master_Init+3,f
  7447  1FDD                     u6320:
  7448  1FDD  3EFF               	addlw	-1
  7449  1FDE  1D03               	skipz
  7450  1FDF  2FD8               	goto	u6325
  7451  1FE0  0877               	movf	??_I2C_Master_Init+3,w
  7452  1FE1  00A3               	movwf	___lldiv@divisor+3
  7453  1FE2  0876               	movf	??_I2C_Master_Init+2,w
  7454  1FE3  00A2               	movwf	___lldiv@divisor+2
  7455  1FE4  0875               	movf	??_I2C_Master_Init+1,w
  7456  1FE5  00A1               	movwf	___lldiv@divisor+1
  7457  1FE6  0874               	movf	??_I2C_Master_Init,w
  7458  1FE7  00A0               	movwf	___lldiv@divisor
  7459  1FE8  3000               	movlw	0
  7460  1FE9  00A7               	movwf	___lldiv@dividend+3
  7461  1FEA  307A               	movlw	122
  7462  1FEB  00A6               	movwf	___lldiv@dividend+2
  7463  1FEC  3012               	movlw	18
  7464  1FED  00A5               	movwf	___lldiv@dividend+1
  7465  1FEE  3000               	movlw	0
  7466  1FEF  00A4               	movwf	___lldiv@dividend
  7467  1FF0  160A  118A  2237  160A  158A  	fcall	___lldiv
  7468  1FF5  1283               	bcf	3,5	;RP0=0, select bank0
  7469  1FF6  1303               	bcf	3,6	;RP1=0, select bank0
  7470  1FF7  0820               	movf	?___lldiv,w
  7471  1FF8  3EFF               	addlw	255
  7472  1FF9  1683               	bsf	3,5	;RP0=1, select bank1
  7473  1FFA  1303               	bcf	3,6	;RP1=0, select bank1
  7474  1FFB  0093               	movwf	19	;volatile
  7475  1FFC                     l3893:
  7476                           
  7477                           ;I2C.c: 21:     SSPSTAT = 0;
  7478  1FFC  0194               	clrf	20	;volatile
  7479  1FFD                     l3895:
  7480                           
  7481                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  7482  1FFD  1587               	bsf	7,3	;volatile
  7483  1FFE                     l3897:
  7484                           
  7485                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  7486  1FFE  1607               	bsf	7,4	;volatile
  7487  1FFF                     l96:
  7488  1FFF  0008               	return
  7489  2000                     __end_of_I2C_Master_Init:
  7490                           
  7491                           	psect	text28
  7492  1237                     __ptext28:	
  7493 ;; *************** function ___lldiv *****************
  7494 ;; Defined at:
  7495 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\__lldiv.c"
  7496 ;; Parameters:    Size  Location     Type
  7497 ;;  divisor         4    0[BANK0 ] unsigned long 
  7498 ;;  dividend        4    4[BANK0 ] unsigned long 
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;  quotient        4    8[BANK0 ] unsigned long 
  7501 ;;  counter         1   12[BANK0 ] unsigned char 
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  4    0[BANK0 ] unsigned long 
  7504 ;; Registers used:
  7505 ;;		wreg, status,2, status,0
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7511 ;;      Params:         0       8       0       0       0
  7512 ;;      Locals:         0       5       0       0       0
  7513 ;;      Temps:          1       0       0       0       0
  7514 ;;      Totals:         1      13       0       0       0
  7515 ;;Total ram usage:       14 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:    2
  7518 ;; This function calls:
  7519 ;;		Nothing
  7520 ;; This function is called by:
  7521 ;;		_I2C_Master_Init
  7522 ;;		_sprintf
  7523 ;; This function uses a non-reentrant model
  7524 ;;
  7525                           
  7526                           
  7527                           ;psect for function ___lldiv
  7528  1237                     ___lldiv:
  7529  1237                     l3739:	
  7530                           ;incstack = 0
  7531                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7532                           
  7533  1237  3000               	movlw	0
  7534  1238  1283               	bcf	3,5	;RP0=0, select bank0
  7535  1239  1303               	bcf	3,6	;RP1=0, select bank0
  7536  123A  00AB               	movwf	___lldiv@quotient+3
  7537  123B  3000               	movlw	0
  7538  123C  00AA               	movwf	___lldiv@quotient+2
  7539  123D  3000               	movlw	0
  7540  123E  00A9               	movwf	___lldiv@quotient+1
  7541  123F  3000               	movlw	0
  7542  1240  00A8               	movwf	___lldiv@quotient
  7543  1241  0823               	movf	___lldiv@divisor+3,w
  7544  1242  0422               	iorwf	___lldiv@divisor+2,w
  7545  1243  0421               	iorwf	___lldiv@divisor+1,w
  7546  1244  0420               	iorwf	___lldiv@divisor,w
  7547  1245  1903               	skipnz
  7548  1246  2A48               	goto	u5951
  7549  1247  2A49               	goto	u5950
  7550  1248                     u5951:
  7551  1248  2A96               	goto	l3759
  7552  1249                     u5950:
  7553  1249                     l3741:
  7554  1249  01AC               	clrf	___lldiv@counter
  7555  124A  0AAC               	incf	___lldiv@counter,f
  7556  124B  2A59               	goto	l3745
  7557  124C                     l3743:
  7558  124C  3001               	movlw	1
  7559  124D  00F3               	movwf	??___lldiv
  7560  124E                     u5965:
  7561  124E  1003               	clrc
  7562  124F  0DA0               	rlf	___lldiv@divisor,f
  7563  1250  0DA1               	rlf	___lldiv@divisor+1,f
  7564  1251  0DA2               	rlf	___lldiv@divisor+2,f
  7565  1252  0DA3               	rlf	___lldiv@divisor+3,f
  7566  1253  0BF3               	decfsz	??___lldiv,f
  7567  1254  2A4E               	goto	u5965
  7568  1255  3001               	movlw	1
  7569  1256  00F3               	movwf	??___lldiv
  7570  1257  0873               	movf	??___lldiv,w
  7571  1258  07AC               	addwf	___lldiv@counter,f
  7572  1259                     l3745:
  7573  1259  1FA3               	btfss	___lldiv@divisor+3,7
  7574  125A  2A5C               	goto	u5971
  7575  125B  2A5D               	goto	u5970
  7576  125C                     u5971:
  7577  125C  2A4C               	goto	l3743
  7578  125D                     u5970:
  7579  125D                     l3747:
  7580  125D  3001               	movlw	1
  7581  125E  00F3               	movwf	??___lldiv
  7582  125F                     u5985:
  7583  125F  1003               	clrc
  7584  1260  0DA8               	rlf	___lldiv@quotient,f
  7585  1261  0DA9               	rlf	___lldiv@quotient+1,f
  7586  1262  0DAA               	rlf	___lldiv@quotient+2,f
  7587  1263  0DAB               	rlf	___lldiv@quotient+3,f
  7588  1264  0BF3               	decfsz	??___lldiv,f
  7589  1265  2A5F               	goto	u5985
  7590  1266                     l3749:
  7591  1266  0823               	movf	___lldiv@divisor+3,w
  7592  1267  0227               	subwf	___lldiv@dividend+3,w
  7593  1268  1D03               	skipz
  7594  1269  2A74               	goto	u5995
  7595  126A  0822               	movf	___lldiv@divisor+2,w
  7596  126B  0226               	subwf	___lldiv@dividend+2,w
  7597  126C  1D03               	skipz
  7598  126D  2A74               	goto	u5995
  7599  126E  0821               	movf	___lldiv@divisor+1,w
  7600  126F  0225               	subwf	___lldiv@dividend+1,w
  7601  1270  1D03               	skipz
  7602  1271  2A74               	goto	u5995
  7603  1272  0820               	movf	___lldiv@divisor,w
  7604  1273  0224               	subwf	___lldiv@dividend,w
  7605  1274                     u5995:
  7606  1274  1C03               	skipc
  7607  1275  2A77               	goto	u5991
  7608  1276  2A78               	goto	u5990
  7609  1277                     u5991:
  7610  1277  2A87               	goto	l3755
  7611  1278                     u5990:
  7612  1278                     l3751:
  7613  1278  0820               	movf	___lldiv@divisor,w
  7614  1279  02A4               	subwf	___lldiv@dividend,f
  7615  127A  0821               	movf	___lldiv@divisor+1,w
  7616  127B  1C03               	skipc
  7617  127C  0F21               	incfsz	___lldiv@divisor+1,w
  7618  127D  02A5               	subwf	___lldiv@dividend+1,f
  7619  127E  0822               	movf	___lldiv@divisor+2,w
  7620  127F  1C03               	skipc
  7621  1280  0F22               	incfsz	___lldiv@divisor+2,w
  7622  1281  02A6               	subwf	___lldiv@dividend+2,f
  7623  1282  0823               	movf	___lldiv@divisor+3,w
  7624  1283  1C03               	skipc
  7625  1284  0F23               	incfsz	___lldiv@divisor+3,w
  7626  1285  02A7               	subwf	___lldiv@dividend+3,f
  7627  1286                     l3753:
  7628  1286  1428               	bsf	___lldiv@quotient,0
  7629  1287                     l3755:
  7630  1287  3001               	movlw	1
  7631  1288                     u6005:
  7632  1288  1003               	clrc
  7633  1289  0CA3               	rrf	___lldiv@divisor+3,f
  7634  128A  0CA2               	rrf	___lldiv@divisor+2,f
  7635  128B  0CA1               	rrf	___lldiv@divisor+1,f
  7636  128C  0CA0               	rrf	___lldiv@divisor,f
  7637  128D  3EFF               	addlw	-1
  7638  128E  1D03               	skipz
  7639  128F  2A88               	goto	u6005
  7640  1290                     l3757:
  7641  1290  3001               	movlw	1
  7642  1291  02AC               	subwf	___lldiv@counter,f
  7643  1292  1D03               	btfss	3,2
  7644  1293  2A95               	goto	u6011
  7645  1294  2A96               	goto	u6010
  7646  1295                     u6011:
  7647  1295  2A5D               	goto	l3747
  7648  1296                     u6010:
  7649  1296                     l3759:
  7650  1296  082B               	movf	___lldiv@quotient+3,w
  7651  1297  00A3               	movwf	?___lldiv+3
  7652  1298  082A               	movf	___lldiv@quotient+2,w
  7653  1299  00A2               	movwf	?___lldiv+2
  7654  129A  0829               	movf	___lldiv@quotient+1,w
  7655  129B  00A1               	movwf	?___lldiv+1
  7656  129C  0828               	movf	___lldiv@quotient,w
  7657  129D  00A0               	movwf	?___lldiv
  7658  129E                     l461:
  7659  129E  0008               	return
  7660  129F                     __end_of___lldiv:
  7661                           
  7662                           	psect	text29
  7663  1F52                     __ptext29:	
  7664 ;; *************** function _ISR *****************
  7665 ;; Defined at:
  7666 ;;		line 57 in file "pic16f.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;		None
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;		None
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  1    wreg      void 
  7673 ;; Registers used:
  7674 ;;		wreg, pclath, cstack
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7680 ;;      Params:         0       0       0       0       0
  7681 ;;      Locals:         0       0       0       0       0
  7682 ;;      Temps:          3       0       0       0       0
  7683 ;;      Totals:         3       0       0       0       0
  7684 ;;Total ram usage:        3 bytes
  7685 ;; Hardware stack levels used:    1
  7686 ;; Hardware stack levels required when called:    1
  7687 ;; This function calls:
  7688 ;;		_Read_USART
  7689 ;; This function is called by:
  7690 ;;		Interrupt level 1
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           
  7695                           ;psect for function _ISR
  7696  1F52                     _ISR:
  7697  1F52                     i1l1943:
  7698                           
  7699                           ;pic16f.c: 58:     if (RCIF==1){
  7700  1F52  1283               	bcf	3,5	;RP0=0, select bank0
  7701  1F53  1303               	bcf	3,6	;RP1=0, select bank0
  7702  1F54  1E8C               	btfss	12,5	;volatile
  7703  1F55  2F57               	goto	u226_21
  7704  1F56  2F58               	goto	u226_20
  7705  1F57                     u226_21:
  7706  1F57  2F61               	goto	i1l59
  7707  1F58                     u226_20:
  7708  1F58                     i1l1945:
  7709                           
  7710                           ;pic16f.c: 59:         RCIF=0;
  7711  1F58  128C               	bcf	12,5	;volatile
  7712  1F59                     i1l1947:
  7713                           
  7714                           ;pic16f.c: 60:         LecturaUSART=Read_USART();
  7715  1F59  160A  158A  26E5  160A  158A  	fcall	_Read_USART
  7716  1F5E  00F0               	movwf	??_ISR
  7717  1F5F  0870               	movf	??_ISR,w
  7718  1F60  00FA               	movwf	_LecturaUSART
  7719  1F61                     i1l59:
  7720  1F61  0872               	movf	??_ISR+2,w
  7721  1F62  008A               	movwf	10
  7722  1F63  0E71               	swapf	??_ISR+1,w
  7723  1F64  0083               	movwf	3
  7724  1F65  0EFE               	swapf	btemp,f
  7725  1F66  0E7E               	swapf	btemp,w
  7726  1F67  0009               	retfie
  7727  1F68                     __end_of_ISR:
  7728                           
  7729                           	psect	intentry
  7730  0004                     __pintentry:	
  7731                           ;incstack = 0
  7732                           ; Regs used in _ISR: [wreg+pclath+cstack]
  7733                           
  7734  0004                     interrupt_function:
  7735  007E                     saved_w	set	btemp
  7736  0004  00FE               	movwf	btemp
  7737  0005  0E03               	swapf	3,w
  7738  0006  00F1               	movwf	??_ISR+1
  7739  0007  080A               	movf	10,w
  7740  0008  00F2               	movwf	??_ISR+2
  7741  0009  160A  158A  2F52   	ljmp	_ISR
  7742                           
  7743                           	psect	text30
  7744  1EE5                     __ptext30:	
  7745 ;; *************** function _Read_USART *****************
  7746 ;; Defined at:
  7747 ;;		line 40 in file "USART.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;		None
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;		None
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  1    wreg      unsigned char 
  7754 ;; Registers used:
  7755 ;;		wreg
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7761 ;;      Params:         0       0       0       0       0
  7762 ;;      Locals:         0       0       0       0       0
  7763 ;;      Temps:          0       0       0       0       0
  7764 ;;      Totals:         0       0       0       0       0
  7765 ;;Total ram usage:        0 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; This function calls:
  7768 ;;		Nothing
  7769 ;; This function is called by:
  7770 ;;		_ISR
  7771 ;; This function uses a non-reentrant model
  7772 ;;
  7773                           
  7774                           
  7775                           ;psect for function _Read_USART
  7776  1EE5                     _Read_USART:
  7777  1EE5                     i1l1603:	
  7778                           ;incstack = 0
  7779                           ; Regs used in _Read_USART: [wreg]
  7780                           
  7781  1EE5                     i1l166:	
  7782                           ;USART.c: 41:   while(!RCIF);
  7783                           
  7784  1EE5  1283               	bcf	3,5	;RP0=0, select bank0
  7785  1EE6  1303               	bcf	3,6	;RP1=0, select bank0
  7786  1EE7  1E8C               	btfss	12,5	;volatile
  7787  1EE8  2EEA               	goto	u166_21
  7788  1EE9  2EEB               	goto	u166_20
  7789  1EEA                     u166_21:
  7790  1EEA  2EE5               	goto	i1l166
  7791  1EEB                     u166_20:
  7792  1EEB                     i1l1605:
  7793                           
  7794                           ;USART.c: 42:   return RCREG;
  7795  1EEB  081A               	movf	26,w	;volatile
  7796  1EEC                     i1l169:
  7797  1EEC  0008               	return
  7798  1EED                     __end_of_Read_USART:
  7799  0002                     
  7800                           	psect	functab
  7801  0037                     __pfunctab:
  7802  0037                     __fptable:
  7803  0037                     fptable:
  7804  0037  00FF               	movwf	(btemp+1)& (0+127)
  7805  0038  3000               	movlw	high fptable
  7806  0039  008A               	movwf	10
  7807  003A  087F               	movf	(btemp+1)& (0+127),w
  7808  003B  0782               	addwf	2,f
  7809  003C                     fpbase:
  7810  003C  283C               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  7811  003D                     __end_of__fptable:
  7812  007E                     btemp	set	126	;btemp
  7813  007E                     wtemp0	set	126
  7814                           
  7815                           	psect	config
  7816                           
  7817                           ;Config register CONFIG1 @ 0x2007
  7818                           ;	Oscillator Selection bits
  7819                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  7820                           ;	Watchdog Timer Enable bit
  7821                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7822                           ;	Power-up Timer Enable bit
  7823                           ;	PWRTE = OFF, PWRT disabled
  7824                           ;	RE3/MCLR pin function select bit
  7825                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  7826                           ;	Code Protection bit
  7827                           ;	CP = OFF, Program memory code protection is disabled
  7828                           ;	Data Code Protection bit
  7829                           ;	CPD = OFF, Data memory code protection is disabled
  7830                           ;	Brown Out Reset Selection bits
  7831                           ;	BOREN = OFF, BOR disabled
  7832                           ;	Internal External Switchover bit
  7833                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7834                           ;	Fail-Safe Clock Monitor Enabled bit
  7835                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7836                           ;	Low Voltage Programming Enable bit
  7837                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7838                           ;	In-Circuit Debugger Mode bit
  7839                           ;	DEBUG = 0x1, unprogrammed default
  7840  2007                     	org	8199
  7841  2007  20D4               	dw	8404
  7842                           
  7843                           ;Config register CONFIG2 @ 0x2008
  7844                           ;	Brown-out Reset Selection bit
  7845                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  7846                           ;	Flash Program Memory Self Write Enable bits
  7847                           ;	WRT = OFF, Write protection off
  7848  2008                     	org	8200
  7849  2008  3FFF               	dw	16383
  7850                           
  7851                           	psect	text1_split_1
  7852  003D                     u6470:
  7853  003D                     l3995:
  7854  003D  1683               	bsf	3,5	;RP0=1, select bank1
  7855  003E  1303               	bcf	3,6	;RP1=0, select bank1
  7856  003F  0835               	movf	(sprintf@fval+2)^(0+128),w
  7857  0040  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  7858  0041  0433               	iorwf	sprintf@fval^(0+128),w
  7859  0042  1903               	skipnz
  7860  0043  2845               	goto	u6481
  7861  0044  2846               	goto	u6480
  7862  0045                     u6481:
  7863  0045  2904               	goto	l4015
  7864  0046                     u6480:
  7865  0046                     l3997:
  7866  0046  0833               	movf	sprintf@fval^(0+128),w
  7867  0047  1283               	bcf	3,5	;RP0=0, select bank0
  7868  0048  1303               	bcf	3,6	;RP1=0, select bank0
  7869  0049  00C8               	movwf	___fttol@f1
  7870  004A  1683               	bsf	3,5	;RP0=1, select bank1
  7871  004B  1303               	bcf	3,6	;RP1=0, select bank1
  7872  004C  0834               	movf	(sprintf@fval+1)^(0+128),w
  7873  004D  1283               	bcf	3,5	;RP0=0, select bank0
  7874  004E  1303               	bcf	3,6	;RP1=0, select bank0
  7875  004F  00C9               	movwf	___fttol@f1+1
  7876  0050  1683               	bsf	3,5	;RP0=1, select bank1
  7877  0051  1303               	bcf	3,6	;RP1=0, select bank1
  7878  0052  0835               	movf	(sprintf@fval+2)^(0+128),w
  7879  0053  1283               	bcf	3,5	;RP0=0, select bank0
  7880  0054  1303               	bcf	3,6	;RP1=0, select bank0
  7881  0055  00CA               	movwf	___fttol@f1+2
  7882  0056  160A  118A  2411  120A  118A  	fcall	___fttol
  7883  005B  1283               	bcf	3,5	;RP0=0, select bank0
  7884  005C  1303               	bcf	3,6	;RP1=0, select bank0
  7885  005D  084B               	movf	?___fttol+3,w
  7886  005E  044A               	iorwf	?___fttol+2,w
  7887  005F  0449               	iorwf	?___fttol+1,w
  7888  0060  0448               	iorwf	?___fttol,w
  7889  0061  1D03               	skipz
  7890  0062  2864               	goto	u6491
  7891  0063  2865               	goto	u6490
  7892  0064                     u6491:
  7893  0064  2904               	goto	l4015
  7894  0065                     u6490:
  7895  0065                     l3999:
  7896  0065  1683               	bsf	3,5	;RP0=1, select bank1
  7897  0066  1303               	bcf	3,6	;RP1=0, select bank1
  7898  0067  0831               	movf	(sprintf@eexp+1)^(0+128),w
  7899  0068  3A80               	xorlw	128
  7900  0069  00FF               	movwf	btemp+1
  7901  006A  3080               	movlw	128
  7902  006B  027F               	subwf	btemp+1,w
  7903  006C  1D03               	skipz
  7904  006D  2870               	goto	u6505
  7905  006E  3002               	movlw	2
  7906  006F  0230               	subwf	sprintf@eexp^(0+128),w
  7907  0070                     u6505:
  7908  0070  1C03               	skipc
  7909  0071  2873               	goto	u6501
  7910  0072  2874               	goto	u6500
  7911  0073                     u6501:
  7912  0073  2904               	goto	l4015
  7913  0074                     u6500:
  7914  0074                     l4001:
  7915                           
  7916                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1146:      if(tmpval.integ < 4.2
      +                          94967296){
  7917  0074  1683               	bsf	3,5	;RP0=1, select bank1
  7918  0075  1303               	bcf	3,6	;RP1=0, select bank1
  7919  0076  082C               	movf	sprintf@tmpval^(0+128),w
  7920  0077  1283               	bcf	3,5	;RP0=0, select bank0
  7921  0078  1303               	bcf	3,6	;RP1=0, select bank0
  7922  0079  00A0               	movwf	___ftge@ff1
  7923  007A  1683               	bsf	3,5	;RP0=1, select bank1
  7924  007B  1303               	bcf	3,6	;RP1=0, select bank1
  7925  007C  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  7926  007D  1283               	bcf	3,5	;RP0=0, select bank0
  7927  007E  1303               	bcf	3,6	;RP1=0, select bank0
  7928  007F  00A1               	movwf	___ftge@ff1+1
  7929  0080  1683               	bsf	3,5	;RP0=1, select bank1
  7930  0081  1303               	bcf	3,6	;RP1=0, select bank1
  7931  0082  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  7932  0083  1283               	bcf	3,5	;RP0=0, select bank0
  7933  0084  1303               	bcf	3,6	;RP1=0, select bank0
  7934  0085  00A2               	movwf	___ftge@ff1+2
  7935  0086  3070               	movlw	112
  7936  0087  00A3               	movwf	___ftge@ff2
  7937  0088  3089               	movlw	137
  7938  0089  00A4               	movwf	___ftge@ff2+1
  7939  008A  3040               	movlw	64
  7940  008B  00A5               	movwf	___ftge@ff2+2
  7941  008C  160A  118A  20CA  120A  118A  	fcall	___ftge
  7942  0091  1803               	btfsc	3,0
  7943  0092  2894               	goto	u6511
  7944  0093  2895               	goto	u6510
  7945  0094                     u6511:
  7946  0094  289E               	goto	l4005
  7947  0095                     u6510:
  7948  0095                     l4003:
  7949                           
  7950                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1147:       eexp -= (sizeof dpow
      +                          ers/sizeof dpowers[0])-1;
  7951  0095  30F7               	movlw	247
  7952  0096  1683               	bsf	3,5	;RP0=1, select bank1
  7953  0097  1303               	bcf	3,6	;RP1=0, select bank1
  7954  0098  07B0               	addwf	sprintf@eexp^(0+128),f
  7955  0099  1803               	skipnc
  7956  009A  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  7957  009B  30FF               	movlw	255
  7958  009C  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  7959                           
  7960                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1148:      }else{
  7961  009D  28A6               	goto	l4007
  7962  009E                     l4005:
  7963                           
  7964                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1149:       eexp -= (sizeof dpow
      +                          ers/sizeof dpowers[0])-2;
  7965  009E  30F8               	movlw	248
  7966  009F  1683               	bsf	3,5	;RP0=1, select bank1
  7967  00A0  1303               	bcf	3,6	;RP1=0, select bank1
  7968  00A1  07B0               	addwf	sprintf@eexp^(0+128),f
  7969  00A2  1803               	skipnc
  7970  00A3  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  7971  00A4  30FF               	movlw	255
  7972  00A5  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  7973  00A6                     l4007:
  7974                           
  7975                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1151:      tmpval.integ = scale(
      +                          eexp);
  7976  00A6  0830               	movf	sprintf@eexp^(0+128),w
  7977  00A7  120A  158A  2247  120A  118A  	fcall	_scale
  7978  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  7979  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  7980  00AE  083F               	movf	?_scale,w
  7981  00AF  1683               	bsf	3,5	;RP0=1, select bank1
  7982  00B0  1303               	bcf	3,6	;RP1=0, select bank1
  7983  00B1  00AC               	movwf	sprintf@tmpval^(0+128)
  7984  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  7985  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  7986  00B4  0840               	movf	?_scale+1,w
  7987  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  7988  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  7989  00B7  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  7990  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  7991  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  7992  00BA  0841               	movf	?_scale+2,w
  7993  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  7994  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  7995  00BD  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  7996  00BE                     l4011:	
  7997                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1152:      val = ((sizeof(double
      +                          )== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  7998                           
  7999  00BE  0833               	movf	sprintf@fval^(0+128),w
  8000  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  8001  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  8002  00C1  00A0               	movwf	__tdiv_to_l_@f1
  8003  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  8004  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  8005  00C4  0834               	movf	(sprintf@fval+1)^(0+128),w
  8006  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  8007  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  8008  00C7  00A1               	movwf	__tdiv_to_l_@f1+1
  8009  00C8  1683               	bsf	3,5	;RP0=1, select bank1
  8010  00C9  1303               	bcf	3,6	;RP1=0, select bank1
  8011  00CA  0835               	movf	(sprintf@fval+2)^(0+128),w
  8012  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  8013  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  8014  00CD  00A2               	movwf	__tdiv_to_l_@f1+2
  8015  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  8016  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  8017  00D0  082C               	movf	sprintf@tmpval^(0+128),w
  8018  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  8019  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  8020  00D3  00A3               	movwf	__tdiv_to_l_@f2
  8021  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  8022  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  8023  00D6  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  8024  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  8025  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  8026  00D9  00A4               	movwf	__tdiv_to_l_@f2+1
  8027  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  8028  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  8029  00DC  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  8030  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  8031  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  8032  00DF  00A5               	movwf	__tdiv_to_l_@f2+2
  8033  00E0  160A  118A  253A  120A  118A  	fcall	__tdiv_to_l_
  8034  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  8035  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  8036  00E7  0823               	movf	?__tdiv_to_l_+3,w
  8037  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  8038  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  8039  00EA  00A7               	movwf	(sprintf@val+3)^(0+128)
  8040  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  8041  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  8042  00ED  0822               	movf	?__tdiv_to_l_+2,w
  8043  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  8044  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  8045  00F0  00A6               	movwf	(sprintf@val+2)^(0+128)
  8046  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  8047  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  8048  00F3  0821               	movf	?__tdiv_to_l_+1,w
  8049  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  8050  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  8051  00F6  00A5               	movwf	(sprintf@val+1)^(0+128)
  8052  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  8053  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  8054  00F9  0820               	movf	?__tdiv_to_l_,w
  8055  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  8056  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  8057  00FC  00A4               	movwf	sprintf@val^(0+128)
  8058  00FD                     l4013:
  8059                           
  8060                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1155:      fval = 0.0;
  8061  00FD  3000               	movlw	0
  8062  00FE  00B3               	movwf	sprintf@fval^(0+128)
  8063  00FF  3000               	movlw	0
  8064  0100  00B4               	movwf	(sprintf@fval+1)^(0+128)
  8065  0101  3000               	movlw	0
  8066  0102  00B5               	movwf	(sprintf@fval+2)^(0+128)
  8067                           
  8068                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1156:     } else {
  8069  0103  2981               	goto	l4019
  8070  0104                     l4015:
  8071                           
  8072                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1157:      val = (unsigned long)
      +                          fval;
  8073  0104  1683               	bsf	3,5	;RP0=1, select bank1
  8074  0105  1303               	bcf	3,6	;RP1=0, select bank1
  8075  0106  0833               	movf	sprintf@fval^(0+128),w
  8076  0107  1283               	bcf	3,5	;RP0=0, select bank0
  8077  0108  1303               	bcf	3,6	;RP1=0, select bank0
  8078  0109  00C8               	movwf	___fttol@f1
  8079  010A  1683               	bsf	3,5	;RP0=1, select bank1
  8080  010B  1303               	bcf	3,6	;RP1=0, select bank1
  8081  010C  0834               	movf	(sprintf@fval+1)^(0+128),w
  8082  010D  1283               	bcf	3,5	;RP0=0, select bank0
  8083  010E  1303               	bcf	3,6	;RP1=0, select bank0
  8084  010F  00C9               	movwf	___fttol@f1+1
  8085  0110  1683               	bsf	3,5	;RP0=1, select bank1
  8086  0111  1303               	bcf	3,6	;RP1=0, select bank1
  8087  0112  0835               	movf	(sprintf@fval+2)^(0+128),w
  8088  0113  1283               	bcf	3,5	;RP0=0, select bank0
  8089  0114  1303               	bcf	3,6	;RP1=0, select bank0
  8090  0115  00CA               	movwf	___fttol@f1+2
  8091  0116  160A  118A  2411  120A  118A  	fcall	___fttol
  8092  011B  1283               	bcf	3,5	;RP0=0, select bank0
  8093  011C  1303               	bcf	3,6	;RP1=0, select bank0
  8094  011D  084B               	movf	?___fttol+3,w
  8095  011E  1683               	bsf	3,5	;RP0=1, select bank1
  8096  011F  1303               	bcf	3,6	;RP1=0, select bank1
  8097  0120  00A7               	movwf	(sprintf@val+3)^(0+128)
  8098  0121  1283               	bcf	3,5	;RP0=0, select bank0
  8099  0122  1303               	bcf	3,6	;RP1=0, select bank0
  8100  0123  084A               	movf	?___fttol+2,w
  8101  0124  1683               	bsf	3,5	;RP0=1, select bank1
  8102  0125  1303               	bcf	3,6	;RP1=0, select bank1
  8103  0126  00A6               	movwf	(sprintf@val+2)^(0+128)
  8104  0127  1283               	bcf	3,5	;RP0=0, select bank0
  8105  0128  1303               	bcf	3,6	;RP1=0, select bank0
  8106  0129  0849               	movf	?___fttol+1,w
  8107  012A  1683               	bsf	3,5	;RP0=1, select bank1
  8108  012B  1303               	bcf	3,6	;RP1=0, select bank1
  8109  012C  00A5               	movwf	(sprintf@val+1)^(0+128)
  8110  012D  1283               	bcf	3,5	;RP0=0, select bank0
  8111  012E  1303               	bcf	3,6	;RP1=0, select bank0
  8112  012F  0848               	movf	?___fttol,w
  8113  0130  1683               	bsf	3,5	;RP0=1, select bank1
  8114  0131  1303               	bcf	3,6	;RP1=0, select bank1
  8115  0132  00A4               	movwf	sprintf@val^(0+128)
  8116                           
  8117                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1158:      fval -= (double)val;
  8118  0133  0827               	movf	(sprintf@val+3)^(0+128),w
  8119  0134  1283               	bcf	3,5	;RP0=0, select bank0
  8120  0135  1303               	bcf	3,6	;RP1=0, select bank0
  8121  0136  00A6               	movwf	___lltoft@c+3
  8122  0137  1683               	bsf	3,5	;RP0=1, select bank1
  8123  0138  1303               	bcf	3,6	;RP1=0, select bank1
  8124  0139  0826               	movf	(sprintf@val+2)^(0+128),w
  8125  013A  1283               	bcf	3,5	;RP0=0, select bank0
  8126  013B  1303               	bcf	3,6	;RP1=0, select bank0
  8127  013C  00A5               	movwf	___lltoft@c+2
  8128  013D  1683               	bsf	3,5	;RP0=1, select bank1
  8129  013E  1303               	bcf	3,6	;RP1=0, select bank1
  8130  013F  0825               	movf	(sprintf@val+1)^(0+128),w
  8131  0140  1283               	bcf	3,5	;RP0=0, select bank0
  8132  0141  1303               	bcf	3,6	;RP1=0, select bank0
  8133  0142  00A4               	movwf	___lltoft@c+1
  8134  0143  1683               	bsf	3,5	;RP0=1, select bank1
  8135  0144  1303               	bcf	3,6	;RP1=0, select bank1
  8136  0145  0824               	movf	sprintf@val^(0+128),w
  8137  0146  1283               	bcf	3,5	;RP0=0, select bank0
  8138  0147  1303               	bcf	3,6	;RP1=0, select bank0
  8139  0148  00A3               	movwf	___lltoft@c
  8140  0149  160A  118A  2097  120A  118A  	fcall	___lltoft
  8141  014E  1283               	bcf	3,5	;RP0=0, select bank0
  8142  014F  1303               	bcf	3,6	;RP1=0, select bank0
  8143  0150  0823               	movf	?___lltoft,w
  8144  0151  00DC               	movwf	___ftsub@f2
  8145  0152  0824               	movf	?___lltoft+1,w
  8146  0153  00DD               	movwf	___ftsub@f2+1
  8147  0154  0825               	movf	?___lltoft+2,w
  8148  0155  00DE               	movwf	___ftsub@f2+2
  8149  0156  1683               	bsf	3,5	;RP0=1, select bank1
  8150  0157  1303               	bcf	3,6	;RP1=0, select bank1
  8151  0158  0833               	movf	sprintf@fval^(0+128),w
  8152  0159  1283               	bcf	3,5	;RP0=0, select bank0
  8153  015A  1303               	bcf	3,6	;RP1=0, select bank0
  8154  015B  00DF               	movwf	___ftsub@f1
  8155  015C  1683               	bsf	3,5	;RP0=1, select bank1
  8156  015D  1303               	bcf	3,6	;RP1=0, select bank1
  8157  015E  0834               	movf	(sprintf@fval+1)^(0+128),w
  8158  015F  1283               	bcf	3,5	;RP0=0, select bank0
  8159  0160  1303               	bcf	3,6	;RP1=0, select bank0
  8160  0161  00E0               	movwf	___ftsub@f1+1
  8161  0162  1683               	bsf	3,5	;RP0=1, select bank1
  8162  0163  1303               	bcf	3,6	;RP1=0, select bank1
  8163  0164  0835               	movf	(sprintf@fval+2)^(0+128),w
  8164  0165  1283               	bcf	3,5	;RP0=0, select bank0
  8165  0166  1303               	bcf	3,6	;RP1=0, select bank0
  8166  0167  00E1               	movwf	___ftsub@f1+2
  8167  0168  160A  158A  27A1  120A  118A  	fcall	___ftsub
  8168  016D  1283               	bcf	3,5	;RP0=0, select bank0
  8169  016E  1303               	bcf	3,6	;RP1=0, select bank0
  8170  016F  085C               	movf	?___ftsub,w
  8171  0170  1683               	bsf	3,5	;RP0=1, select bank1
  8172  0171  1303               	bcf	3,6	;RP1=0, select bank1
  8173  0172  00B3               	movwf	sprintf@fval^(0+128)
  8174  0173  1283               	bcf	3,5	;RP0=0, select bank0
  8175  0174  1303               	bcf	3,6	;RP1=0, select bank0
  8176  0175  085D               	movf	?___ftsub+1,w
  8177  0176  1683               	bsf	3,5	;RP0=1, select bank1
  8178  0177  1303               	bcf	3,6	;RP1=0, select bank1
  8179  0178  00B4               	movwf	(sprintf@fval+1)^(0+128)
  8180  0179  1283               	bcf	3,5	;RP0=0, select bank0
  8181  017A  1303               	bcf	3,6	;RP1=0, select bank0
  8182  017B  085E               	movf	?___ftsub+2,w
  8183  017C  1683               	bsf	3,5	;RP0=1, select bank1
  8184  017D  1303               	bcf	3,6	;RP1=0, select bank1
  8185  017E  00B5               	movwf	(sprintf@fval+2)^(0+128)
  8186  017F                     l4017:
  8187                           
  8188                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1159:      eexp = 0;
  8189  017F  01B0               	clrf	sprintf@eexp^(0+128)
  8190  0180  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  8191  0181                     l4019:
  8192                           
  8193                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1162:     for(c = 1 ; c != (size
      +                          of dpowers/sizeof dpowers[0]) ; c++)
  8194  0181  01B8               	clrf	sprintf@c^(0+128)
  8195  0182  0AB8               	incf	sprintf@c^(0+128),f
  8196  0183                     l4025:
  8197                           
  8198                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1163:      if(val < dpowers[c])
  8199  0183  0838               	movf	sprintf@c^(0+128),w
  8200  0184  1283               	bcf	3,5	;RP0=0, select bank0
  8201  0185  1303               	bcf	3,6	;RP1=0, select bank0
  8202  0186  00E7               	movwf	??_sprintf
  8203  0187  3001               	movlw	1
  8204  0188                     u6525:
  8205  0188  1003               	clrc
  8206  0189  0DE7               	rlf	??_sprintf,f
  8207  018A  3EFF               	addlw	-1
  8208  018B  1D03               	skipz
  8209  018C  2988               	goto	u6525
  8210  018D  1003               	clrc
  8211  018E  0D67               	rlf	??_sprintf,w
  8212  018F  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8213  0190  0084               	movwf	4
  8214  0191  160A  118A  2000  120A  118A  	fcall	stringdir
  8215  0196  00E8               	movwf	??_sprintf+1
  8216  0197  160A  118A  2000  120A  118A  	fcall	stringdir
  8217  019C  00E9               	movwf	??_sprintf+2
  8218  019D  160A  118A  2000  120A  118A  	fcall	stringdir
  8219  01A2  00EA               	movwf	??_sprintf+3
  8220  01A3  160A  118A  2000  120A  118A  	fcall	stringdir
  8221  01A8  00EB               	movwf	??_sprintf+4
  8222  01A9  086B               	movf	??_sprintf+4,w
  8223  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  8224  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  8225  01AC  0227               	subwf	(sprintf@val+3)^(0+128),w
  8226  01AD  1D03               	skipz
  8227  01AE  29C5               	goto	u6535
  8228  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  8229  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  8230  01B1  086A               	movf	??_sprintf+3,w
  8231  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  8232  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  8233  01B4  0226               	subwf	(sprintf@val+2)^(0+128),w
  8234  01B5  1D03               	skipz
  8235  01B6  29C5               	goto	u6535
  8236  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  8237  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  8238  01B9  0869               	movf	??_sprintf+2,w
  8239  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  8240  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  8241  01BC  0225               	subwf	(sprintf@val+1)^(0+128),w
  8242  01BD  1D03               	skipz
  8243  01BE  29C5               	goto	u6535
  8244  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  8245  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  8246  01C1  0868               	movf	??_sprintf+1,w
  8247  01C2  1683               	bsf	3,5	;RP0=1, select bank1
  8248  01C3  1303               	bcf	3,6	;RP1=0, select bank1
  8249  01C4  0224               	subwf	sprintf@val^(0+128),w
  8250  01C5                     u6535:
  8251  01C5  1803               	skipnc
  8252  01C6  29C8               	goto	u6531
  8253  01C7  29C9               	goto	u6530
  8254  01C8                     u6531:
  8255  01C8  29CA               	goto	l4029
  8256  01C9                     u6530:
  8257  01C9  29D8               	goto	l4031
  8258  01CA                     l4029:
  8259  01CA  3001               	movlw	1
  8260  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  8261  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  8262  01CD  00E7               	movwf	??_sprintf
  8263  01CE  0867               	movf	??_sprintf,w
  8264  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  8265  01D0  1303               	bcf	3,6	;RP1=0, select bank1
  8266  01D1  07B8               	addwf	sprintf@c^(0+128),f
  8267  01D2  300A               	movlw	10
  8268  01D3  0638               	xorwf	sprintf@c^(0+128),w
  8269  01D4  1D03               	btfss	3,2
  8270  01D5  29D7               	goto	u6541
  8271  01D6  29D8               	goto	u6540
  8272  01D7                     u6541:
  8273  01D7  2983               	goto	l4025
  8274  01D8                     u6540:
  8275  01D8                     l4031:
  8276                           
  8277                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1168:     width -= prec + c + ee
      +                          xp;
  8278  01D8  0838               	movf	sprintf@c^(0+128),w
  8279  01D9  0736               	addwf	sprintf@prec^(0+128),w
  8280  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  8281  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  8282  01DC  00E7               	movwf	??_sprintf
  8283  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  8284  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  8285  01DF  0837               	movf	(sprintf@prec+1)^(0+128),w
  8286  01E0  1803               	skipnc
  8287  01E1  0A37               	incf	(sprintf@prec+1)^(0+128),w
  8288  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  8289  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  8290  01E4  00E8               	movwf	??_sprintf+1
  8291  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  8292  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  8293  01E7  0830               	movf	sprintf@eexp^(0+128),w
  8294  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  8295  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  8296  01EA  0767               	addwf	??_sprintf,w
  8297  01EB  00E9               	movwf	??_sprintf+2
  8298  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  8299  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  8300  01EE  0831               	movf	(sprintf@eexp+1)^(0+128),w
  8301  01EF  1803               	skipnc
  8302  01F0  0A31               	incf	(sprintf@eexp+1)^(0+128),w
  8303  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  8304  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  8305  01F3  0768               	addwf	??_sprintf+1,w
  8306  01F4  00EA               	movwf	??_sprintf+3
  8307  01F5  0869               	movf	??_sprintf+2,w
  8308  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  8309  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  8310  01F8  02AA               	subwf	sprintf@width^(0+128),f
  8311  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  8312  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  8313  01FB  086A               	movf	??_sprintf+3,w
  8314  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  8315  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  8316  01FE  1C03               	skipc
  8317  01FF  03AB               	decf	(sprintf@width+1)^(0+128),f
  8318  0200  02AB               	subwf	(sprintf@width+1)^(0+128),f
  8319                           
  8320                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1169:     if(
  8321  0201  0836               	movf	sprintf@prec^(0+128),w
  8322  0202  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  8323  0203  1903               	btfsc	3,2
  8324  0204  2A06               	goto	u6551
  8325  0205  2A07               	goto	u6550
  8326  0206                     u6551:
  8327  0206  2A0D               	goto	l4035
  8328  0207                     u6550:
  8329  0207                     l4033:
  8330                           
  8331                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1174:      width--;
  8332  0207  30FF               	movlw	255
  8333  0208  07AA               	addwf	sprintf@width^(0+128),f
  8334  0209  1803               	skipnc
  8335  020A  0AAB               	incf	(sprintf@width+1)^(0+128),f
  8336  020B  30FF               	movlw	255
  8337  020C  07AB               	addwf	(sprintf@width+1)^(0+128),f
  8338  020D                     l4035:
  8339                           
  8340                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1175:     if(flag & 0x03)
  8341  020D  3003               	movlw	3
  8342  020E  0528               	andwf	sprintf@flag^(0+128),w
  8343  020F  1283               	bcf	3,5	;RP0=0, select bank0
  8344  0210  1303               	bcf	3,6	;RP1=0, select bank0
  8345  0211  00E7               	movwf	??_sprintf
  8346  0212  3000               	movlw	0
  8347  0213  1683               	bsf	3,5	;RP0=1, select bank1
  8348  0214  1303               	bcf	3,6	;RP1=0, select bank1
  8349  0215  0529               	andwf	(sprintf@flag+1)^(0+128),w
  8350  0216  1283               	bcf	3,5	;RP0=0, select bank0
  8351  0217  1303               	bcf	3,6	;RP1=0, select bank0
  8352  0218  00E8               	movwf	??_sprintf+1
  8353  0219  0867               	movf	??_sprintf,w
  8354  021A  0468               	iorwf	??_sprintf+1,w
  8355  021B  1903               	btfsc	3,2
  8356  021C  2A1E               	goto	u6561
  8357  021D  2A1F               	goto	u6560
  8358  021E                     u6561:
  8359  021E  2A3C               	goto	l4045
  8360  021F                     u6560:
  8361  021F                     l4037:
  8362                           
  8363                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1176:      width--;
  8364  021F  30FF               	movlw	255
  8365  0220  1683               	bsf	3,5	;RP0=1, select bank1
  8366  0221  1303               	bcf	3,6	;RP1=0, select bank1
  8367  0222  07AA               	addwf	sprintf@width^(0+128),f
  8368  0223  1803               	skipnc
  8369  0224  0AAB               	incf	(sprintf@width+1)^(0+128),f
  8370  0225  30FF               	movlw	255
  8371  0226  07AB               	addwf	(sprintf@width+1)^(0+128),f
  8372  0227  2A3C               	goto	l4045
  8373  0228                     l4039:
  8374                           
  8375                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1207:       ((*sp++ = (' ')));
  8376  0228  3020               	movlw	32
  8377  0229  1283               	bcf	3,5	;RP0=0, select bank0
  8378  022A  1303               	bcf	3,6	;RP1=0, select bank0
  8379  022B  00E7               	movwf	??_sprintf
  8380  022C  1683               	bsf	3,5	;RP0=1, select bank1
  8381  022D  1303               	bcf	3,6	;RP1=0, select bank1
  8382  022E  0832               	movf	sprintf@sp^(0+128),w
  8383  022F  0084               	movwf	4
  8384  0230  1283               	bcf	3,5	;RP0=0, select bank0
  8385  0231  1303               	bcf	3,6	;RP1=0, select bank0
  8386  0232  0867               	movf	??_sprintf,w
  8387  0233  1383               	bcf	3,7	;select IRP bank0
  8388  0234  0080               	movwf	0
  8389  0235                     l4041:
  8390  0235  3001               	movlw	1
  8391  0236  00E7               	movwf	??_sprintf
  8392  0237  0867               	movf	??_sprintf,w
  8393  0238  1683               	bsf	3,5	;RP0=1, select bank1
  8394  0239  1303               	bcf	3,6	;RP1=0, select bank1
  8395  023A  07B2               	addwf	sprintf@sp^(0+128),f
  8396  023B  2A1F               	goto	l4037
  8397  023C                     l4045:
  8398                           
  8399                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1206:      while(width > 0) {
  8400  023C  1683               	bsf	3,5	;RP0=1, select bank1
  8401  023D  1303               	bcf	3,6	;RP1=0, select bank1
  8402  023E  082B               	movf	(sprintf@width+1)^(0+128),w
  8403  023F  3A80               	xorlw	128
  8404  0240  00FF               	movwf	btemp+1
  8405  0241  3080               	movlw	128
  8406  0242  027F               	subwf	btemp+1,w
  8407  0243  1D03               	skipz
  8408  0244  2A47               	goto	u6575
  8409  0245  3001               	movlw	1
  8410  0246  022A               	subwf	sprintf@width^(0+128),w
  8411  0247                     u6575:
  8412  0247  1803               	skipnc
  8413  0248  2A4A               	goto	u6571
  8414  0249  2A4B               	goto	u6570
  8415  024A                     u6571:
  8416  024A  2A28               	goto	l4039
  8417  024B                     u6570:
  8418  024B                     l4047:
  8419                           
  8420                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x03)
  8421  024B  3003               	movlw	3
  8422  024C  1683               	bsf	3,5	;RP0=1, select bank1
  8423  024D  1303               	bcf	3,6	;RP1=0, select bank1
  8424  024E  0528               	andwf	sprintf@flag^(0+128),w
  8425  024F  1283               	bcf	3,5	;RP0=0, select bank0
  8426  0250  1303               	bcf	3,6	;RP1=0, select bank0
  8427  0251  00E7               	movwf	??_sprintf
  8428  0252  3000               	movlw	0
  8429  0253  1683               	bsf	3,5	;RP0=1, select bank1
  8430  0254  1303               	bcf	3,6	;RP1=0, select bank1
  8431  0255  0529               	andwf	(sprintf@flag+1)^(0+128),w
  8432  0256  1283               	bcf	3,5	;RP0=0, select bank0
  8433  0257  1303               	bcf	3,6	;RP1=0, select bank0
  8434  0258  00E8               	movwf	??_sprintf+1
  8435  0259  0867               	movf	??_sprintf,w
  8436  025A  0468               	iorwf	??_sprintf+1,w
  8437  025B  1903               	btfsc	3,2
  8438  025C  2A5E               	goto	u6581
  8439  025D  2A5F               	goto	u6580
  8440  025E                     u6581:
  8441  025E  2B1F               	goto	l391
  8442  025F                     u6580:
  8443  025F                     l4049:
  8444                           
  8445                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1216:      ((*sp++ = ('-')));
  8446  025F  302D               	movlw	45
  8447  0260  00E7               	movwf	??_sprintf
  8448  0261  1683               	bsf	3,5	;RP0=1, select bank1
  8449  0262  1303               	bcf	3,6	;RP1=0, select bank1
  8450  0263  0832               	movf	sprintf@sp^(0+128),w
  8451  0264  0084               	movwf	4
  8452  0265  1283               	bcf	3,5	;RP0=0, select bank0
  8453  0266  1303               	bcf	3,6	;RP1=0, select bank0
  8454  0267  0867               	movf	??_sprintf,w
  8455  0268  1383               	bcf	3,7	;select IRP bank0
  8456  0269  0080               	movwf	0
  8457  026A                     l4051:
  8458  026A  3001               	movlw	1
  8459  026B  00E7               	movwf	??_sprintf
  8460  026C  0867               	movf	??_sprintf,w
  8461  026D  1683               	bsf	3,5	;RP0=1, select bank1
  8462  026E  1303               	bcf	3,6	;RP1=0, select bank1
  8463  026F  07B2               	addwf	sprintf@sp^(0+128),f
  8464  0270  2B1F               	goto	l391
  8465  0271                     l4053:
  8466                           
  8467                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1226:     {;D:\MPLAB XC8 compile
      +                          r\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = val/dpowers[c];
  8468  0271  0838               	movf	sprintf@c^(0+128),w
  8469  0272  1283               	bcf	3,5	;RP0=0, select bank0
  8470  0273  1303               	bcf	3,6	;RP1=0, select bank0
  8471  0274  00E7               	movwf	??_sprintf
  8472  0275  3001               	movlw	1
  8473  0276                     u6595:
  8474  0276  1003               	clrc
  8475  0277  0DE7               	rlf	??_sprintf,f
  8476  0278  3EFF               	addlw	-1
  8477  0279  1D03               	skipz
  8478  027A  2A76               	goto	u6595
  8479  027B  1003               	clrc
  8480  027C  0D67               	rlf	??_sprintf,w
  8481  027D  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8482  027E  0084               	movwf	4
  8483  027F  160A  118A  2000  120A  118A  	fcall	stringdir
  8484  0284  00A0               	movwf	___lldiv@divisor
  8485  0285  160A  118A  2000  120A  118A  	fcall	stringdir
  8486  028A  00A1               	movwf	___lldiv@divisor+1
  8487  028B  160A  118A  2000  120A  118A  	fcall	stringdir
  8488  0290  00A2               	movwf	___lldiv@divisor+2
  8489  0291  160A  118A  2000  120A  118A  	fcall	stringdir
  8490  0296  00A3               	movwf	___lldiv@divisor+3
  8491  0297  1683               	bsf	3,5	;RP0=1, select bank1
  8492  0298  1303               	bcf	3,6	;RP1=0, select bank1
  8493  0299  0827               	movf	(sprintf@val+3)^(0+128),w
  8494  029A  1283               	bcf	3,5	;RP0=0, select bank0
  8495  029B  1303               	bcf	3,6	;RP1=0, select bank0
  8496  029C  00A7               	movwf	___lldiv@dividend+3
  8497  029D  1683               	bsf	3,5	;RP0=1, select bank1
  8498  029E  1303               	bcf	3,6	;RP1=0, select bank1
  8499  029F  0826               	movf	(sprintf@val+2)^(0+128),w
  8500  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  8501  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  8502  02A2  00A6               	movwf	___lldiv@dividend+2
  8503  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  8504  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  8505  02A5  0825               	movf	(sprintf@val+1)^(0+128),w
  8506  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  8507  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  8508  02A8  00A5               	movwf	___lldiv@dividend+1
  8509  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  8510  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  8511  02AB  0824               	movf	sprintf@val^(0+128),w
  8512  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  8513  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  8514  02AE  00A4               	movwf	___lldiv@dividend
  8515  02AF  160A  118A  2237  120A  118A  	fcall	___lldiv
  8516  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  8517  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  8518  02B6  0823               	movf	?___lldiv+3,w
  8519  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  8520  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  8521  02B9  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  8522  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  8523  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  8524  02BC  0822               	movf	?___lldiv+2,w
  8525  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  8526  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  8527  02BF  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  8528  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  8529  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  8530  02C2  0821               	movf	?___lldiv+1,w
  8531  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  8532  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  8533  02C5  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  8534  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  8535  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  8536  02C8  0820               	movf	?___lldiv,w
  8537  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  8538  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  8539  02CB  00AC               	movwf	sprintf@tmpval^(0+128)
  8540  02CC                     l4055:
  8541                           
  8542                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1228:      tmpval.vd %= 10;
  8543  02CC  3000               	movlw	0
  8544  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  8545  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  8546  02CF  00A3               	movwf	___llmod@divisor+3
  8547  02D0  3000               	movlw	0
  8548  02D1  00A2               	movwf	___llmod@divisor+2
  8549  02D2  3000               	movlw	0
  8550  02D3  00A1               	movwf	___llmod@divisor+1
  8551  02D4  300A               	movlw	10
  8552  02D5  00A0               	movwf	___llmod@divisor
  8553  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  8554  02D7  1303               	bcf	3,6	;RP1=0, select bank1
  8555  02D8  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  8556  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  8557  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  8558  02DB  00A7               	movwf	___llmod@dividend+3
  8559  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  8560  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  8561  02DE  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  8562  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  8563  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  8564  02E1  00A6               	movwf	___llmod@dividend+2
  8565  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  8566  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  8567  02E4  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  8568  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  8569  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  8570  02E7  00A5               	movwf	___llmod@dividend+1
  8571  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  8572  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  8573  02EA  082C               	movf	sprintf@tmpval^(0+128),w
  8574  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  8575  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  8576  02ED  00A4               	movwf	___llmod@dividend
  8577  02EE  160A  118A  2186  120A  118A  	fcall	___llmod
  8578  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  8579  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  8580  02F5  0823               	movf	?___llmod+3,w
  8581  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  8582  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  8583  02F8  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  8584  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  8585  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  8586  02FB  0822               	movf	?___llmod+2,w
  8587  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  8588  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  8589  02FE  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  8590  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  8591  0300  1303               	bcf	3,6	;RP1=0, select bank0
  8592  0301  0821               	movf	?___llmod+1,w
  8593  0302  1683               	bsf	3,5	;RP0=1, select bank1
  8594  0303  1303               	bcf	3,6	;RP1=0, select bank1
  8595  0304  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  8596  0305  1283               	bcf	3,5	;RP0=0, select bank0
  8597  0306  1303               	bcf	3,6	;RP1=0, select bank0
  8598  0307  0820               	movf	?___llmod,w
  8599  0308  1683               	bsf	3,5	;RP0=1, select bank1
  8600  0309  1303               	bcf	3,6	;RP1=0, select bank1
  8601  030A  00AC               	movwf	sprintf@tmpval^(0+128)
  8602  030B                     l4057:
  8603                           
  8604                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1229:      ((*sp++ = ('0' + tmpv
      +                          al.vd)));
  8605  030B  082C               	movf	sprintf@tmpval^(0+128),w
  8606  030C  3E30               	addlw	48
  8607  030D  1283               	bcf	3,5	;RP0=0, select bank0
  8608  030E  1303               	bcf	3,6	;RP1=0, select bank0
  8609  030F  00E7               	movwf	??_sprintf
  8610  0310  1683               	bsf	3,5	;RP0=1, select bank1
  8611  0311  1303               	bcf	3,6	;RP1=0, select bank1
  8612  0312  0832               	movf	sprintf@sp^(0+128),w
  8613  0313  0084               	movwf	4
  8614  0314  1283               	bcf	3,5	;RP0=0, select bank0
  8615  0315  1303               	bcf	3,6	;RP1=0, select bank0
  8616  0316  0867               	movf	??_sprintf,w
  8617  0317  1383               	bcf	3,7	;select IRP bank0
  8618  0318  0080               	movwf	0
  8619  0319  3001               	movlw	1
  8620  031A  00E7               	movwf	??_sprintf
  8621  031B  0867               	movf	??_sprintf,w
  8622  031C  1683               	bsf	3,5	;RP0=1, select bank1
  8623  031D  1303               	bcf	3,6	;RP1=0, select bank1
  8624  031E  07B2               	addwf	sprintf@sp^(0+128),f
  8625  031F                     l391:	
  8626                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1230:     };D:\MPLAB XC8 compile
      +                          r\pic\sources\c90\common\doprnt.c: 1232:    }
  8627                           
  8628                           
  8629                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1222:    while(c--) {
  8630  031F  3001               	movlw	1
  8631  0320  1683               	bsf	3,5	;RP0=1, select bank1
  8632  0321  1303               	bcf	3,6	;RP1=0, select bank1
  8633  0322  02B8               	subwf	sprintf@c^(0+128),f
  8634  0323  0A38               	incf	sprintf@c^(0+128),w
  8635  0324  1D03               	btfss	3,2
  8636  0325  2B27               	goto	u6601
  8637  0326  2B28               	goto	u6600
  8638  0327                     u6601:
  8639  0327  2A71               	goto	l4053
  8640  0328                     u6600:
  8641  0328  2B42               	goto	l4065
  8642  0329                     l4059:
  8643                           
  8644                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++ = ('0')));
  8645  0329  3030               	movlw	48
  8646  032A  1283               	bcf	3,5	;RP0=0, select bank0
  8647  032B  1303               	bcf	3,6	;RP1=0, select bank0
  8648  032C  00E7               	movwf	??_sprintf
  8649  032D  1683               	bsf	3,5	;RP0=1, select bank1
  8650  032E  1303               	bcf	3,6	;RP1=0, select bank1
  8651  032F  0832               	movf	sprintf@sp^(0+128),w
  8652  0330  0084               	movwf	4
  8653  0331  1283               	bcf	3,5	;RP0=0, select bank0
  8654  0332  1303               	bcf	3,6	;RP1=0, select bank0
  8655  0333  0867               	movf	??_sprintf,w
  8656  0334  1383               	bcf	3,7	;select IRP bank0
  8657  0335  0080               	movwf	0
  8658  0336                     l4061:
  8659  0336  3001               	movlw	1
  8660  0337  00E7               	movwf	??_sprintf
  8661  0338  0867               	movf	??_sprintf,w
  8662  0339  1683               	bsf	3,5	;RP0=1, select bank1
  8663  033A  1303               	bcf	3,6	;RP1=0, select bank1
  8664  033B  07B2               	addwf	sprintf@sp^(0+128),f
  8665  033C                     l4063:
  8666                           
  8667                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  8668  033C  30FF               	movlw	255
  8669  033D  07B0               	addwf	sprintf@eexp^(0+128),f
  8670  033E  1803               	skipnc
  8671  033F  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  8672  0340  30FF               	movlw	255
  8673  0341  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  8674  0342                     l4065:
  8675                           
  8676                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1233:    while(eexp > 0) {
  8677  0342  0831               	movf	(sprintf@eexp+1)^(0+128),w
  8678  0343  3A80               	xorlw	128
  8679  0344  00FF               	movwf	btemp+1
  8680  0345  3080               	movlw	128
  8681  0346  027F               	subwf	btemp+1,w
  8682  0347  1D03               	skipz
  8683  0348  2B4B               	goto	u6615
  8684  0349  3001               	movlw	1
  8685  034A  0230               	subwf	sprintf@eexp^(0+128),w
  8686  034B                     u6615:
  8687  034B  1803               	skipnc
  8688  034C  2B4E               	goto	u6611
  8689  034D  2B4F               	goto	u6610
  8690  034E                     u6611:
  8691  034E  2B29               	goto	l4059
  8692  034F                     u6610:
  8693  034F                     l4067:
  8694                           
  8695                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1237:    if(prec > (int)((sizeof
      +                           dpowers/sizeof dpowers[0])-2))
  8696  034F  1683               	bsf	3,5	;RP0=1, select bank1
  8697  0350  1303               	bcf	3,6	;RP1=0, select bank1
  8698  0351  0837               	movf	(sprintf@prec+1)^(0+128),w
  8699  0352  3A80               	xorlw	128
  8700  0353  00FF               	movwf	btemp+1
  8701  0354  3080               	movlw	128
  8702  0355  027F               	subwf	btemp+1,w
  8703  0356  1D03               	skipz
  8704  0357  2B5A               	goto	u6625
  8705  0358  3009               	movlw	9
  8706  0359  0236               	subwf	sprintf@prec^(0+128),w
  8707  035A                     u6625:
  8708  035A  1C03               	skipc
  8709  035B  2B5D               	goto	u6621
  8710  035C  2B5E               	goto	u6620
  8711  035D                     u6621:
  8712  035D  2B67               	goto	l4071
  8713  035E                     u6620:
  8714  035E                     l4069:
  8715                           
  8716                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1238:     c = (sizeof dpowers/si
      +                          zeof dpowers[0])-2;
  8717  035E  3008               	movlw	8
  8718  035F  1283               	bcf	3,5	;RP0=0, select bank0
  8719  0360  1303               	bcf	3,6	;RP1=0, select bank0
  8720  0361  00E7               	movwf	??_sprintf
  8721  0362  0867               	movf	??_sprintf,w
  8722  0363  1683               	bsf	3,5	;RP0=1, select bank1
  8723  0364  1303               	bcf	3,6	;RP1=0, select bank1
  8724  0365  00B8               	movwf	sprintf@c^(0+128)
  8725  0366  2B71               	goto	l398
  8726  0367                     l4071:
  8727                           
  8728                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1240:     c = (char)prec;
  8729  0367  1683               	bsf	3,5	;RP0=1, select bank1
  8730  0368  1303               	bcf	3,6	;RP1=0, select bank1
  8731  0369  0836               	movf	sprintf@prec^(0+128),w
  8732  036A  1283               	bcf	3,5	;RP0=0, select bank0
  8733  036B  1303               	bcf	3,6	;RP1=0, select bank0
  8734  036C  00E7               	movwf	??_sprintf
  8735  036D  0867               	movf	??_sprintf,w
  8736  036E  1683               	bsf	3,5	;RP0=1, select bank1
  8737  036F  1303               	bcf	3,6	;RP1=0, select bank1
  8738  0370  00B8               	movwf	sprintf@c^(0+128)
  8739  0371                     l398:
  8740                           
  8741                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1241:    prec -= (int)c;
  8742  0371  0838               	movf	sprintf@c^(0+128),w
  8743  0372  1283               	bcf	3,5	;RP0=0, select bank0
  8744  0373  1303               	bcf	3,6	;RP1=0, select bank0
  8745  0374  00E7               	movwf	??_sprintf
  8746  0375  01E8               	clrf	??_sprintf+1
  8747  0376  0867               	movf	??_sprintf,w
  8748  0377  1683               	bsf	3,5	;RP0=1, select bank1
  8749  0378  1303               	bcf	3,6	;RP1=0, select bank1
  8750  0379  02B6               	subwf	sprintf@prec^(0+128),f
  8751  037A  1283               	bcf	3,5	;RP0=0, select bank0
  8752  037B  1303               	bcf	3,6	;RP1=0, select bank0
  8753  037C  0868               	movf	??_sprintf+1,w
  8754  037D  1683               	bsf	3,5	;RP0=1, select bank1
  8755  037E  1303               	bcf	3,6	;RP1=0, select bank1
  8756  037F  1C03               	skipc
  8757  0380  03B7               	decf	(sprintf@prec+1)^(0+128),f
  8758  0381  02B7               	subwf	(sprintf@prec+1)^(0+128),f
  8759  0382                     l4073:
  8760                           
  8761                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  8762  0382  0838               	movf	sprintf@c^(0+128),w
  8763  0383  1903               	btfsc	3,2
  8764  0384  2B86               	goto	u6631
  8765  0385  2B87               	goto	u6630
  8766  0386                     u6631:
  8767  0386  2B9A               	goto	l4079
  8768  0387                     u6630:
  8769  0387                     l4075:
  8770                           
  8771                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++ = ('.')));
  8772  0387  302E               	movlw	46
  8773  0388  1283               	bcf	3,5	;RP0=0, select bank0
  8774  0389  1303               	bcf	3,6	;RP1=0, select bank0
  8775  038A  00E7               	movwf	??_sprintf
  8776  038B  1683               	bsf	3,5	;RP0=1, select bank1
  8777  038C  1303               	bcf	3,6	;RP1=0, select bank1
  8778  038D  0832               	movf	sprintf@sp^(0+128),w
  8779  038E  0084               	movwf	4
  8780  038F  1283               	bcf	3,5	;RP0=0, select bank0
  8781  0390  1303               	bcf	3,6	;RP1=0, select bank0
  8782  0391  0867               	movf	??_sprintf,w
  8783  0392  1383               	bcf	3,7	;select IRP bank0
  8784  0393  0080               	movwf	0
  8785  0394                     l4077:
  8786  0394  3001               	movlw	1
  8787  0395  00E7               	movwf	??_sprintf
  8788  0396  0867               	movf	??_sprintf,w
  8789  0397  1683               	bsf	3,5	;RP0=1, select bank1
  8790  0398  1303               	bcf	3,6	;RP1=0, select bank1
  8791  0399  07B2               	addwf	sprintf@sp^(0+128),f
  8792  039A                     l4079:
  8793                           
  8794                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(f
      +                          val * scale((signed char)c));
  8795  039A  0838               	movf	sprintf@c^(0+128),w
  8796  039B  120A  158A  2247  120A  118A  	fcall	_scale
  8797  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  8798  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  8799  03A2  083F               	movf	?_scale,w
  8800  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  8801  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  8802  03A5  00A0               	movwf	_sprintf$960^(0+128)
  8803  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  8804  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  8805  03A8  0840               	movf	?_scale+1,w
  8806  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  8807  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  8808  03AB  00A1               	movwf	(_sprintf$960+1)^(0+128)
  8809  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  8810  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  8811  03AE  0841               	movf	?_scale+2,w
  8812  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  8813  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  8814  03B1  00A2               	movwf	(_sprintf$960+2)^(0+128)
  8815  03B2                     l4081:
  8816                           
  8817                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(f
      +                          val * scale((signed char)c));
  8818  03B2  0820               	movf	_sprintf$960^(0+128),w
  8819  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  8820  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  8821  03B5  00B2               	movwf	___ftmul@f2
  8822  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  8823  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  8824  03B8  0821               	movf	(_sprintf$960+1)^(0+128),w
  8825  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  8826  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  8827  03BB  00B3               	movwf	___ftmul@f2+1
  8828  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  8829  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  8830  03BE  0822               	movf	(_sprintf$960+2)^(0+128),w
  8831  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  8832  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  8833  03C1  00B4               	movwf	___ftmul@f2+2
  8834  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  8835  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  8836  03C4  0833               	movf	sprintf@fval^(0+128),w
  8837  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  8838  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  8839  03C7  00AF               	movwf	___ftmul@f1
  8840  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  8841  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  8842  03CA  0834               	movf	(sprintf@fval+1)^(0+128),w
  8843  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  8844  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  8845  03CD  00B0               	movwf	___ftmul@f1+1
  8846  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  8847  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  8848  03D0  0835               	movf	(sprintf@fval+2)^(0+128),w
  8849  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  8850  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  8851  03D3  00B1               	movwf	___ftmul@f1+2
  8852  03D4  120A  158A  202C  120A  118A  	fcall	___ftmul
  8853  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  8854  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  8855  03DB  082F               	movf	?___ftmul,w
  8856  03DC  00C8               	movwf	___fttol@f1
  8857  03DD  0830               	movf	?___ftmul+1,w
  8858  03DE  00C9               	movwf	___fttol@f1+1
  8859  03DF  0831               	movf	?___ftmul+2,w
  8860  03E0  00CA               	movwf	___fttol@f1+2
  8861  03E1  160A  118A  2411  120A  118A  	fcall	___fttol
  8862  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  8863  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  8864  03E8  084B               	movf	?___fttol+3,w
  8865  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  8866  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  8867  03EB  00A7               	movwf	(sprintf@val+3)^(0+128)
  8868  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  8869  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  8870  03EE  084A               	movf	?___fttol+2,w
  8871  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  8872  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  8873  03F1  00A6               	movwf	(sprintf@val+2)^(0+128)
  8874  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  8875  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  8876  03F4  0849               	movf	?___fttol+1,w
  8877  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  8878  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  8879  03F7  00A5               	movwf	(sprintf@val+1)^(0+128)
  8880  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  8881  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  8882  03FA  0848               	movf	?___fttol,w
  8883  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  8884  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  8885  03FD  00A4               	movwf	sprintf@val^(0+128)
  8886                           
  8887                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
  8888  03FE  2D08               	goto	l4091
  8889  03FF                     l4083:
  8890                           
  8891                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1255:     tmpval.vd = val/dpower
      +                          s[c];
  8892  03FF  0838               	movf	sprintf@c^(0+128),w
  8893  0400  1283               	bcf	3,5	;RP0=0, select bank0
  8894  0401  1303               	bcf	3,6	;RP1=0, select bank0
  8895  0402  00E7               	movwf	??_sprintf
  8896  0403  3001               	movlw	1
  8897  0404                     u6645:
  8898  0404  1003               	clrc
  8899  0405  0DE7               	rlf	??_sprintf,f
  8900  0406  3EFF               	addlw	-1
  8901  0407  1D03               	skipz
  8902  0408  2C04               	goto	u6645
  8903  0409  1003               	clrc
  8904  040A  0D67               	rlf	??_sprintf,w
  8905  040B  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8906  040C  0084               	movwf	4
  8907  040D  160A  118A  2000  120A  118A  	fcall	stringdir
  8908  0412  00A0               	movwf	___lldiv@divisor
  8909  0413  160A  118A  2000  120A  118A  	fcall	stringdir
  8910  0418  00A1               	movwf	___lldiv@divisor+1
  8911  0419  160A  118A  2000  120A  118A  	fcall	stringdir
  8912  041E  00A2               	movwf	___lldiv@divisor+2
  8913  041F  160A  118A  2000  120A  118A  	fcall	stringdir
  8914  0424  00A3               	movwf	___lldiv@divisor+3
  8915  0425  1683               	bsf	3,5	;RP0=1, select bank1
  8916  0426  1303               	bcf	3,6	;RP1=0, select bank1
  8917  0427  0827               	movf	(sprintf@val+3)^(0+128),w
  8918  0428  1283               	bcf	3,5	;RP0=0, select bank0
  8919  0429  1303               	bcf	3,6	;RP1=0, select bank0
  8920  042A  00A7               	movwf	___lldiv@dividend+3
  8921  042B  1683               	bsf	3,5	;RP0=1, select bank1
  8922  042C  1303               	bcf	3,6	;RP1=0, select bank1
  8923  042D  0826               	movf	(sprintf@val+2)^(0+128),w
  8924  042E  1283               	bcf	3,5	;RP0=0, select bank0
  8925  042F  1303               	bcf	3,6	;RP1=0, select bank0
  8926  0430  00A6               	movwf	___lldiv@dividend+2
  8927  0431  1683               	bsf	3,5	;RP0=1, select bank1
  8928  0432  1303               	bcf	3,6	;RP1=0, select bank1
  8929  0433  0825               	movf	(sprintf@val+1)^(0+128),w
  8930  0434  1283               	bcf	3,5	;RP0=0, select bank0
  8931  0435  1303               	bcf	3,6	;RP1=0, select bank0
  8932  0436  00A5               	movwf	___lldiv@dividend+1
  8933  0437  1683               	bsf	3,5	;RP0=1, select bank1
  8934  0438  1303               	bcf	3,6	;RP1=0, select bank1
  8935  0439  0824               	movf	sprintf@val^(0+128),w
  8936  043A  1283               	bcf	3,5	;RP0=0, select bank0
  8937  043B  1303               	bcf	3,6	;RP1=0, select bank0
  8938  043C  00A4               	movwf	___lldiv@dividend
  8939  043D  160A  118A  2237  120A  118A  	fcall	___lldiv
  8940  0442  1283               	bcf	3,5	;RP0=0, select bank0
  8941  0443  1303               	bcf	3,6	;RP1=0, select bank0
  8942  0444  0823               	movf	?___lldiv+3,w
  8943  0445  1683               	bsf	3,5	;RP0=1, select bank1
  8944  0446  1303               	bcf	3,6	;RP1=0, select bank1
  8945  0447  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  8946  0448  1283               	bcf	3,5	;RP0=0, select bank0
  8947  0449  1303               	bcf	3,6	;RP1=0, select bank0
  8948  044A  0822               	movf	?___lldiv+2,w
  8949  044B  1683               	bsf	3,5	;RP0=1, select bank1
  8950  044C  1303               	bcf	3,6	;RP1=0, select bank1
  8951  044D  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  8952  044E  1283               	bcf	3,5	;RP0=0, select bank0
  8953  044F  1303               	bcf	3,6	;RP1=0, select bank0
  8954  0450  0821               	movf	?___lldiv+1,w
  8955  0451  1683               	bsf	3,5	;RP0=1, select bank1
  8956  0452  1303               	bcf	3,6	;RP1=0, select bank1
  8957  0453  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  8958  0454  1283               	bcf	3,5	;RP0=0, select bank0
  8959  0455  1303               	bcf	3,6	;RP1=0, select bank0
  8960  0456  0820               	movf	?___lldiv,w
  8961  0457  1683               	bsf	3,5	;RP0=1, select bank1
  8962  0458  1303               	bcf	3,6	;RP1=0, select bank1
  8963  0459  00AC               	movwf	sprintf@tmpval^(0+128)
  8964  045A                     l4085:
  8965                           
  8966                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1256:     tmpval.vd %= 10;
  8967  045A  3000               	movlw	0
  8968  045B  1283               	bcf	3,5	;RP0=0, select bank0
  8969  045C  1303               	bcf	3,6	;RP1=0, select bank0
  8970  045D  00A3               	movwf	___llmod@divisor+3
  8971  045E  3000               	movlw	0
  8972  045F  00A2               	movwf	___llmod@divisor+2
  8973  0460  3000               	movlw	0
  8974  0461  00A1               	movwf	___llmod@divisor+1
  8975  0462  300A               	movlw	10
  8976  0463  00A0               	movwf	___llmod@divisor
  8977  0464  1683               	bsf	3,5	;RP0=1, select bank1
  8978  0465  1303               	bcf	3,6	;RP1=0, select bank1
  8979  0466  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  8980  0467  1283               	bcf	3,5	;RP0=0, select bank0
  8981  0468  1303               	bcf	3,6	;RP1=0, select bank0
  8982  0469  00A7               	movwf	___llmod@dividend+3
  8983  046A  1683               	bsf	3,5	;RP0=1, select bank1
  8984  046B  1303               	bcf	3,6	;RP1=0, select bank1
  8985  046C  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  8986  046D  1283               	bcf	3,5	;RP0=0, select bank0
  8987  046E  1303               	bcf	3,6	;RP1=0, select bank0
  8988  046F  00A6               	movwf	___llmod@dividend+2
  8989  0470  1683               	bsf	3,5	;RP0=1, select bank1
  8990  0471  1303               	bcf	3,6	;RP1=0, select bank1
  8991  0472  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  8992  0473  1283               	bcf	3,5	;RP0=0, select bank0
  8993  0474  1303               	bcf	3,6	;RP1=0, select bank0
  8994  0475  00A5               	movwf	___llmod@dividend+1
  8995  0476  1683               	bsf	3,5	;RP0=1, select bank1
  8996  0477  1303               	bcf	3,6	;RP1=0, select bank1
  8997  0478  082C               	movf	sprintf@tmpval^(0+128),w
  8998  0479  1283               	bcf	3,5	;RP0=0, select bank0
  8999  047A  1303               	bcf	3,6	;RP1=0, select bank0
  9000  047B  00A4               	movwf	___llmod@dividend
  9001  047C  160A  118A  2186  120A  118A  	fcall	___llmod
  9002  0481  1283               	bcf	3,5	;RP0=0, select bank0
  9003  0482  1303               	bcf	3,6	;RP1=0, select bank0
  9004  0483  0823               	movf	?___llmod+3,w
  9005  0484  1683               	bsf	3,5	;RP0=1, select bank1
  9006  0485  1303               	bcf	3,6	;RP1=0, select bank1
  9007  0486  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  9008  0487  1283               	bcf	3,5	;RP0=0, select bank0
  9009  0488  1303               	bcf	3,6	;RP1=0, select bank0
  9010  0489  0822               	movf	?___llmod+2,w
  9011  048A  1683               	bsf	3,5	;RP0=1, select bank1
  9012  048B  1303               	bcf	3,6	;RP1=0, select bank1
  9013  048C  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  9014  048D  1283               	bcf	3,5	;RP0=0, select bank0
  9015  048E  1303               	bcf	3,6	;RP1=0, select bank0
  9016  048F  0821               	movf	?___llmod+1,w
  9017  0490  1683               	bsf	3,5	;RP0=1, select bank1
  9018  0491  1303               	bcf	3,6	;RP1=0, select bank1
  9019  0492  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  9020  0493  1283               	bcf	3,5	;RP0=0, select bank0
  9021  0494  1303               	bcf	3,6	;RP1=0, select bank0
  9022  0495  0820               	movf	?___llmod,w
  9023  0496  1683               	bsf	3,5	;RP0=1, select bank1
  9024  0497  1303               	bcf	3,6	;RP1=0, select bank1
  9025  0498  00AC               	movwf	sprintf@tmpval^(0+128)
  9026  0499                     l4087:
  9027                           
  9028                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++ = ('0' + tmpva
      +                          l.vd)));
  9029  0499  082C               	movf	sprintf@tmpval^(0+128),w
  9030  049A  3E30               	addlw	48
  9031  049B  1283               	bcf	3,5	;RP0=0, select bank0
  9032  049C  1303               	bcf	3,6	;RP1=0, select bank0
  9033  049D  00E7               	movwf	??_sprintf
  9034  049E  1683               	bsf	3,5	;RP0=1, select bank1
  9035  049F  1303               	bcf	3,6	;RP1=0, select bank1
  9036  04A0  0832               	movf	sprintf@sp^(0+128),w
  9037  04A1  0084               	movwf	4
  9038  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  9039  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  9040  04A4  0867               	movf	??_sprintf,w
  9041  04A5  1383               	bcf	3,7	;select IRP bank0
  9042  04A6  0080               	movwf	0
  9043  04A7  3001               	movlw	1
  9044  04A8  00E7               	movwf	??_sprintf
  9045  04A9  0867               	movf	??_sprintf,w
  9046  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  9047  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  9048  04AC  07B2               	addwf	sprintf@sp^(0+128),f
  9049  04AD                     l4089:
  9050                           
  9051                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1258:     val %= dpowers[c];
  9052  04AD  0838               	movf	sprintf@c^(0+128),w
  9053  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  9054  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  9055  04B0  00E7               	movwf	??_sprintf
  9056  04B1  3001               	movlw	1
  9057  04B2                     u6655:
  9058  04B2  1003               	clrc
  9059  04B3  0DE7               	rlf	??_sprintf,f
  9060  04B4  3EFF               	addlw	-1
  9061  04B5  1D03               	skipz
  9062  04B6  2CB2               	goto	u6655
  9063  04B7  1003               	clrc
  9064  04B8  0D67               	rlf	??_sprintf,w
  9065  04B9  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9066  04BA  0084               	movwf	4
  9067  04BB  160A  118A  2000  120A  118A  	fcall	stringdir
  9068  04C0  00A0               	movwf	___llmod@divisor
  9069  04C1  160A  118A  2000  120A  118A  	fcall	stringdir
  9070  04C6  00A1               	movwf	___llmod@divisor+1
  9071  04C7  160A  118A  2000  120A  118A  	fcall	stringdir
  9072  04CC  00A2               	movwf	___llmod@divisor+2
  9073  04CD  160A  118A  2000  120A  118A  	fcall	stringdir
  9074  04D2  00A3               	movwf	___llmod@divisor+3
  9075  04D3  1683               	bsf	3,5	;RP0=1, select bank1
  9076  04D4  1303               	bcf	3,6	;RP1=0, select bank1
  9077  04D5  0827               	movf	(sprintf@val+3)^(0+128),w
  9078  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  9079  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  9080  04D8  00A7               	movwf	___llmod@dividend+3
  9081  04D9  1683               	bsf	3,5	;RP0=1, select bank1
  9082  04DA  1303               	bcf	3,6	;RP1=0, select bank1
  9083  04DB  0826               	movf	(sprintf@val+2)^(0+128),w
  9084  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  9085  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  9086  04DE  00A6               	movwf	___llmod@dividend+2
  9087  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  9088  04E0  1303               	bcf	3,6	;RP1=0, select bank1
  9089  04E1  0825               	movf	(sprintf@val+1)^(0+128),w
  9090  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  9091  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  9092  04E4  00A5               	movwf	___llmod@dividend+1
  9093  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  9094  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  9095  04E7  0824               	movf	sprintf@val^(0+128),w
  9096  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  9097  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  9098  04EA  00A4               	movwf	___llmod@dividend
  9099  04EB  160A  118A  2186  120A  118A  	fcall	___llmod
  9100  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  9101  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  9102  04F2  0823               	movf	?___llmod+3,w
  9103  04F3  1683               	bsf	3,5	;RP0=1, select bank1
  9104  04F4  1303               	bcf	3,6	;RP1=0, select bank1
  9105  04F5  00A7               	movwf	(sprintf@val+3)^(0+128)
  9106  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  9107  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  9108  04F8  0822               	movf	?___llmod+2,w
  9109  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  9110  04FA  1303               	bcf	3,6	;RP1=0, select bank1
  9111  04FB  00A6               	movwf	(sprintf@val+2)^(0+128)
  9112  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  9113  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  9114  04FE  0821               	movf	?___llmod+1,w
  9115  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  9116  0500  1303               	bcf	3,6	;RP1=0, select bank1
  9117  0501  00A5               	movwf	(sprintf@val+1)^(0+128)
  9118  0502  1283               	bcf	3,5	;RP0=0, select bank0
  9119  0503  1303               	bcf	3,6	;RP1=0, select bank0
  9120  0504  0820               	movf	?___llmod,w
  9121  0505  1683               	bsf	3,5	;RP0=1, select bank1
  9122  0506  1303               	bcf	3,6	;RP1=0, select bank1
  9123  0507  00A4               	movwf	sprintf@val^(0+128)
  9124  0508                     l4091:
  9125                           
  9126                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
  9127  0508  3001               	movlw	1
  9128  0509  02B8               	subwf	sprintf@c^(0+128),f
  9129  050A  0A38               	incf	sprintf@c^(0+128),w
  9130  050B  1D03               	btfss	3,2
  9131  050C  2D0E               	goto	u6661
  9132  050D  2D0F               	goto	u6660
  9133  050E                     u6661:
  9134  050E  2BFF               	goto	l4083
  9135  050F                     u6660:
  9136  050F  2D29               	goto	l4099
  9137  0510                     l4093:
  9138                           
  9139                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++ = ('0')));
  9140  0510  3030               	movlw	48
  9141  0511  1283               	bcf	3,5	;RP0=0, select bank0
  9142  0512  1303               	bcf	3,6	;RP1=0, select bank0
  9143  0513  00E7               	movwf	??_sprintf
  9144  0514  1683               	bsf	3,5	;RP0=1, select bank1
  9145  0515  1303               	bcf	3,6	;RP1=0, select bank1
  9146  0516  0832               	movf	sprintf@sp^(0+128),w
  9147  0517  0084               	movwf	4
  9148  0518  1283               	bcf	3,5	;RP0=0, select bank0
  9149  0519  1303               	bcf	3,6	;RP1=0, select bank0
  9150  051A  0867               	movf	??_sprintf,w
  9151  051B  1383               	bcf	3,7	;select IRP bank0
  9152  051C  0080               	movwf	0
  9153  051D                     l4095:
  9154  051D  3001               	movlw	1
  9155  051E  00E7               	movwf	??_sprintf
  9156  051F  0867               	movf	??_sprintf,w
  9157  0520  1683               	bsf	3,5	;RP0=1, select bank1
  9158  0521  1303               	bcf	3,6	;RP1=0, select bank1
  9159  0522  07B2               	addwf	sprintf@sp^(0+128),f
  9160  0523                     l4097:
  9161                           
  9162                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  9163  0523  30FF               	movlw	255
  9164  0524  07B6               	addwf	sprintf@prec^(0+128),f
  9165  0525  1803               	skipnc
  9166  0526  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  9167  0527  30FF               	movlw	255
  9168  0528  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  9169  0529                     l4099:
  9170                           
  9171                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1261:    while(prec) {
  9172  0529  0836               	movf	sprintf@prec^(0+128),w
  9173  052A  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9174  052B  1D03               	btfss	3,2
  9175  052C  2D2E               	goto	u6671
  9176  052D  2D2F               	goto	u6670
  9177  052E                     u6671:
  9178  052E  2D10               	goto	l4093
  9179  052F                     u6670:
  9180  052F  2E33               	goto	l4147
  9181  0530                     l4101:
  9182                           
  9183                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && val == 0
      +                          )
  9184  0530  1683               	bsf	3,5	;RP0=1, select bank1
  9185  0531  1303               	bcf	3,6	;RP1=0, select bank1
  9186  0532  0836               	movf	sprintf@prec^(0+128),w
  9187  0533  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9188  0534  1D03               	btfss	3,2
  9189  0535  2D37               	goto	u6681
  9190  0536  2D38               	goto	u6680
  9191  0537                     u6681:
  9192  0537  2D46               	goto	l406
  9193  0538                     u6680:
  9194  0538                     l4103:
  9195  0538  0827               	movf	(sprintf@val+3)^(0+128),w
  9196  0539  0426               	iorwf	(sprintf@val+2)^(0+128),w
  9197  053A  0425               	iorwf	(sprintf@val+1)^(0+128),w
  9198  053B  0424               	iorwf	sprintf@val^(0+128),w
  9199  053C  1D03               	skipz
  9200  053D  2D3F               	goto	u6691
  9201  053E  2D40               	goto	u6690
  9202  053F                     u6691:
  9203  053F  2D46               	goto	l406
  9204  0540                     u6690:
  9205  0540                     l4105:
  9206                           
  9207                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  9208  0540  3001               	movlw	1
  9209  0541  07B6               	addwf	sprintf@prec^(0+128),f
  9210  0542  1803               	skipnc
  9211  0543  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  9212  0544  3000               	movlw	0
  9213  0545  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  9214  0546                     l406:
  9215                           
  9216                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
  9217  0546  0837               	movf	(sprintf@prec+1)^(0+128),w
  9218  0547  3A80               	xorlw	128
  9219  0548  3C80               	sublw	128
  9220  0549  1D03               	skipz
  9221  054A  2D4D               	goto	u6705
  9222  054B  0836               	movf	sprintf@prec^(0+128),w
  9223  054C  0238               	subwf	sprintf@c^(0+128),w
  9224  054D                     u6705:
  9225  054D  1803               	skipnc
  9226  054E  2D50               	goto	u6701
  9227  054F  2D51               	goto	u6700
  9228  0550                     u6701:
  9229  0550  2D5C               	goto	l4109
  9230  0551                     u6700:
  9231  0551                     l4107:
  9232                           
  9233                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1366:    c = (char)prec;
  9234  0551  1683               	bsf	3,5	;RP0=1, select bank1
  9235  0552  1303               	bcf	3,6	;RP1=0, select bank1
  9236  0553  0836               	movf	sprintf@prec^(0+128),w
  9237  0554  1283               	bcf	3,5	;RP0=0, select bank0
  9238  0555  1303               	bcf	3,6	;RP1=0, select bank0
  9239  0556  00E7               	movwf	??_sprintf
  9240  0557  0867               	movf	??_sprintf,w
  9241  0558  1683               	bsf	3,5	;RP0=1, select bank1
  9242  0559  1303               	bcf	3,6	;RP1=0, select bank1
  9243  055A  00B8               	movwf	sprintf@c^(0+128)
  9244  055B  2D80               	goto	l4113
  9245  055C                     l4109:
  9246  055C  1683               	bsf	3,5	;RP0=1, select bank1
  9247  055D  1303               	bcf	3,6	;RP1=0, select bank1
  9248  055E  0837               	movf	(sprintf@prec+1)^(0+128),w
  9249  055F  3A80               	xorlw	128
  9250  0560  1283               	bcf	3,5	;RP0=0, select bank0
  9251  0561  1303               	bcf	3,6	;RP1=0, select bank0
  9252  0562  00E7               	movwf	??_sprintf
  9253  0563  3080               	movlw	128
  9254  0564  0267               	subwf	??_sprintf,w
  9255  0565  1D03               	skipz
  9256  0566  2D6B               	goto	u6715
  9257  0567  1683               	bsf	3,5	;RP0=1, select bank1
  9258  0568  1303               	bcf	3,6	;RP1=0, select bank1
  9259  0569  0838               	movf	sprintf@c^(0+128),w
  9260  056A  0236               	subwf	sprintf@prec^(0+128),w
  9261  056B                     u6715:
  9262  056B  1803               	skipnc
  9263  056C  2D6E               	goto	u6711
  9264  056D  2D6F               	goto	u6710
  9265  056E                     u6711:
  9266  056E  2D80               	goto	l4113
  9267  056F                     u6710:
  9268  056F                     l4111:
  9269                           
  9270                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
  9271  056F  1683               	bsf	3,5	;RP0=1, select bank1
  9272  0570  1303               	bcf	3,6	;RP1=0, select bank1
  9273  0571  0838               	movf	sprintf@c^(0+128),w
  9274  0572  1283               	bcf	3,5	;RP0=0, select bank0
  9275  0573  1303               	bcf	3,6	;RP1=0, select bank0
  9276  0574  00E7               	movwf	??_sprintf
  9277  0575  01E8               	clrf	??_sprintf+1
  9278  0576  0867               	movf	??_sprintf,w
  9279  0577  1683               	bsf	3,5	;RP0=1, select bank1
  9280  0578  1303               	bcf	3,6	;RP1=0, select bank1
  9281  0579  00B6               	movwf	sprintf@prec^(0+128)
  9282  057A  1283               	bcf	3,5	;RP0=0, select bank0
  9283  057B  1303               	bcf	3,6	;RP1=0, select bank0
  9284  057C  0868               	movf	??_sprintf+1,w
  9285  057D  1683               	bsf	3,5	;RP0=1, select bank1
  9286  057E  1303               	bcf	3,6	;RP1=0, select bank1
  9287  057F  00B7               	movwf	(sprintf@prec+1)^(0+128)
  9288  0580                     l4113:
  9289                           
  9290                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0x03)
  9291  0580  1683               	bsf	3,5	;RP0=1, select bank1
  9292  0581  1303               	bcf	3,6	;RP1=0, select bank1
  9293  0582  082A               	movf	sprintf@width^(0+128),w
  9294  0583  042B               	iorwf	(sprintf@width+1)^(0+128),w
  9295  0584  1903               	btfsc	3,2
  9296  0585  2D87               	goto	u6721
  9297  0586  2D88               	goto	u6720
  9298  0587                     u6721:
  9299  0587  2DA2               	goto	l4119
  9300  0588                     u6720:
  9301  0588                     l4115:
  9302  0588  3003               	movlw	3
  9303  0589  0528               	andwf	sprintf@flag^(0+128),w
  9304  058A  1283               	bcf	3,5	;RP0=0, select bank0
  9305  058B  1303               	bcf	3,6	;RP1=0, select bank0
  9306  058C  00E7               	movwf	??_sprintf
  9307  058D  3000               	movlw	0
  9308  058E  1683               	bsf	3,5	;RP0=1, select bank1
  9309  058F  1303               	bcf	3,6	;RP1=0, select bank1
  9310  0590  0529               	andwf	(sprintf@flag+1)^(0+128),w
  9311  0591  1283               	bcf	3,5	;RP0=0, select bank0
  9312  0592  1303               	bcf	3,6	;RP1=0, select bank0
  9313  0593  00E8               	movwf	??_sprintf+1
  9314  0594  0867               	movf	??_sprintf,w
  9315  0595  0468               	iorwf	??_sprintf+1,w
  9316  0596  1903               	btfsc	3,2
  9317  0597  2D99               	goto	u6731
  9318  0598  2D9A               	goto	u6730
  9319  0599                     u6731:
  9320  0599  2DA2               	goto	l4119
  9321  059A                     u6730:
  9322  059A                     l4117:
  9323                           
  9324                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1372:    width--;
  9325  059A  30FF               	movlw	255
  9326  059B  1683               	bsf	3,5	;RP0=1, select bank1
  9327  059C  1303               	bcf	3,6	;RP1=0, select bank1
  9328  059D  07AA               	addwf	sprintf@width^(0+128),f
  9329  059E  1803               	skipnc
  9330  059F  0AAB               	incf	(sprintf@width+1)^(0+128),f
  9331  05A0  30FF               	movlw	255
  9332  05A1  07AB               	addwf	(sprintf@width+1)^(0+128),f
  9333  05A2                     l4119:
  9334                           
  9335                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1374:   if(flag & 0x4000) {
  9336  05A2  1683               	bsf	3,5	;RP0=1, select bank1
  9337  05A3  1303               	bcf	3,6	;RP1=0, select bank1
  9338  05A4  1F29               	btfss	(sprintf@flag+1)^(0+128),6
  9339  05A5  2DA7               	goto	u6741
  9340  05A6  2DA8               	goto	u6740
  9341  05A7                     u6741:
  9342  05A7  2DCB               	goto	l4127
  9343  05A8                     u6740:
  9344  05A8                     l4121:
  9345                           
  9346                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1375:    if(width > prec)
  9347  05A8  0837               	movf	(sprintf@prec+1)^(0+128),w
  9348  05A9  3A80               	xorlw	128
  9349  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  9350  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  9351  05AC  00E7               	movwf	??_sprintf
  9352  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  9353  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  9354  05AF  082B               	movf	(sprintf@width+1)^(0+128),w
  9355  05B0  3A80               	xorlw	128
  9356  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  9357  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  9358  05B3  0267               	subwf	??_sprintf,w
  9359  05B4  1D03               	skipz
  9360  05B5  2DBA               	goto	u6755
  9361  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  9362  05B7  1303               	bcf	3,6	;RP1=0, select bank1
  9363  05B8  082A               	movf	sprintf@width^(0+128),w
  9364  05B9  0236               	subwf	sprintf@prec^(0+128),w
  9365  05BA                     u6755:
  9366  05BA  1803               	skipnc
  9367  05BB  2DBD               	goto	u6751
  9368  05BC  2DBE               	goto	u6750
  9369  05BD                     u6751:
  9370  05BD  2DC7               	goto	l4125
  9371  05BE                     u6750:
  9372  05BE                     l4123:
  9373                           
  9374                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1376:     width -= prec;
  9375  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  9376  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  9377  05C0  0836               	movf	sprintf@prec^(0+128),w
  9378  05C1  02AA               	subwf	sprintf@width^(0+128),f
  9379  05C2  0837               	movf	(sprintf@prec+1)^(0+128),w
  9380  05C3  1C03               	skipc
  9381  05C4  03AB               	decf	(sprintf@width+1)^(0+128),f
  9382  05C5  02AB               	subwf	(sprintf@width+1)^(0+128),f
  9383  05C6  2DCB               	goto	l4127
  9384  05C7                     l4125:
  9385                           
  9386                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1378:     width = 0;
  9387  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  9388  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  9389  05C9  01AA               	clrf	sprintf@width^(0+128)
  9390  05CA  01AB               	clrf	(sprintf@width+1)^(0+128)
  9391  05CB                     l4127:
  9392                           
  9393                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
  9394  05CB  082B               	movf	(sprintf@width+1)^(0+128),w
  9395  05CC  3A80               	xorlw	128
  9396  05CD  3C80               	sublw	128
  9397  05CE  1D03               	skipz
  9398  05CF  2DD2               	goto	u6765
  9399  05D0  082A               	movf	sprintf@width^(0+128),w
  9400  05D1  0238               	subwf	sprintf@c^(0+128),w
  9401  05D2                     u6765:
  9402  05D2  1803               	skipnc
  9403  05D3  2DD5               	goto	u6761
  9404  05D4  2DD6               	goto	u6760
  9405  05D5                     u6761:
  9406  05D5  2DEA               	goto	l4131
  9407  05D6                     u6760:
  9408  05D6                     l4129:
  9409                           
  9410                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
  9411  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  9412  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  9413  05D8  0838               	movf	sprintf@c^(0+128),w
  9414  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  9415  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  9416  05DB  00E7               	movwf	??_sprintf
  9417  05DC  01E8               	clrf	??_sprintf+1
  9418  05DD  0867               	movf	??_sprintf,w
  9419  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  9420  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  9421  05E0  02AA               	subwf	sprintf@width^(0+128),f
  9422  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  9423  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  9424  05E3  0868               	movf	??_sprintf+1,w
  9425  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  9426  05E5  1303               	bcf	3,6	;RP1=0, select bank1
  9427  05E6  1C03               	skipc
  9428  05E7  03AB               	decf	(sprintf@width+1)^(0+128),f
  9429  05E8  02AB               	subwf	(sprintf@width+1)^(0+128),f
  9430  05E9  2DEE               	goto	l4133
  9431  05EA                     l4131:
  9432                           
  9433                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
  9434  05EA  1683               	bsf	3,5	;RP0=1, select bank1
  9435  05EB  1303               	bcf	3,6	;RP1=0, select bank1
  9436  05EC  01AA               	clrf	sprintf@width^(0+128)
  9437  05ED  01AB               	clrf	(sprintf@width+1)^(0+128)
  9438  05EE                     l4133:
  9439                           
  9440                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1448:   {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 1450:    if(width
  9441  05EE  082A               	movf	sprintf@width^(0+128),w
  9442  05EF  042B               	iorwf	(sprintf@width+1)^(0+128),w
  9443  05F0  1903               	btfsc	3,2
  9444  05F1  2DF3               	goto	u6771
  9445  05F2  2DF4               	goto	u6770
  9446  05F3                     u6771:
  9447  05F3  2E13               	goto	l4141
  9448  05F4                     u6770:
  9449  05F4                     l4135:
  9450                           
  9451                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')));
  9452  05F4  3020               	movlw	32
  9453  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  9454  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  9455  05F7  00E7               	movwf	??_sprintf
  9456  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  9457  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  9458  05FA  0832               	movf	sprintf@sp^(0+128),w
  9459  05FB  0084               	movwf	4
  9460  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  9461  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  9462  05FE  0867               	movf	??_sprintf,w
  9463  05FF  1383               	bcf	3,7	;select IRP bank0
  9464  0600  0080               	movwf	0
  9465  0601                     l4137:
  9466  0601  3001               	movlw	1
  9467  0602  00E7               	movwf	??_sprintf
  9468  0603  0867               	movf	??_sprintf,w
  9469  0604  1683               	bsf	3,5	;RP0=1, select bank1
  9470  0605  1303               	bcf	3,6	;RP1=0, select bank1
  9471  0606  07B2               	addwf	sprintf@sp^(0+128),f
  9472  0607                     l4139:
  9473  0607  30FF               	movlw	255
  9474  0608  07AA               	addwf	sprintf@width^(0+128),f
  9475  0609  1803               	skipnc
  9476  060A  0AAB               	incf	(sprintf@width+1)^(0+128),f
  9477  060B  30FF               	movlw	255
  9478  060C  07AB               	addwf	(sprintf@width+1)^(0+128),f
  9479  060D  082A               	movf	sprintf@width^(0+128),w
  9480  060E  042B               	iorwf	(sprintf@width+1)^(0+128),w
  9481  060F  1D03               	btfss	3,2
  9482  0610  2E12               	goto	u6781
  9483  0611  2E13               	goto	u6780
  9484  0612                     u6781:
  9485  0612  2DF4               	goto	l4135
  9486  0613                     u6780:
  9487  0613                     l4141:
  9488                           
  9489                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  9490  0613  3003               	movlw	3
  9491  0614  0528               	andwf	sprintf@flag^(0+128),w
  9492  0615  1283               	bcf	3,5	;RP0=0, select bank0
  9493  0616  1303               	bcf	3,6	;RP1=0, select bank0
  9494  0617  00E7               	movwf	??_sprintf
  9495  0618  3000               	movlw	0
  9496  0619  1683               	bsf	3,5	;RP0=1, select bank1
  9497  061A  1303               	bcf	3,6	;RP1=0, select bank1
  9498  061B  0529               	andwf	(sprintf@flag+1)^(0+128),w
  9499  061C  1283               	bcf	3,5	;RP0=0, select bank0
  9500  061D  1303               	bcf	3,6	;RP1=0, select bank0
  9501  061E  00E8               	movwf	??_sprintf+1
  9502  061F  0867               	movf	??_sprintf,w
  9503  0620  0468               	iorwf	??_sprintf+1,w
  9504  0621  1903               	btfsc	3,2
  9505  0622  2E24               	goto	u6791
  9506  0623  2E25               	goto	u6790
  9507  0624                     u6791:
  9508  0624  2E33               	goto	l4147
  9509  0625                     u6790:
  9510  0625                     l4143:
  9511                           
  9512                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
  9513  0625  302D               	movlw	45
  9514  0626  00E7               	movwf	??_sprintf
  9515  0627  1683               	bsf	3,5	;RP0=1, select bank1
  9516  0628  1303               	bcf	3,6	;RP1=0, select bank1
  9517  0629  0832               	movf	sprintf@sp^(0+128),w
  9518  062A  0084               	movwf	4
  9519  062B  1283               	bcf	3,5	;RP0=0, select bank0
  9520  062C  1303               	bcf	3,6	;RP1=0, select bank0
  9521  062D  0867               	movf	??_sprintf,w
  9522  062E  1383               	bcf	3,7	;select IRP bank0
  9523  062F  0080               	movwf	0
  9524  0630  120A  158A  2D23   	goto	l3905
  9525  0633                     l4147:
  9526                           
  9527                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  9528  0633  3001               	movlw	1
  9529  0634  1283               	bcf	3,5	;RP0=0, select bank0
  9530  0635  07E2               	addwf	sprintf@f,f
  9531  0636  30FF               	movlw	-1
  9532  0637  0762               	addwf	sprintf@f,w
  9533  0638  0084               	movwf	4
  9534  0639  160A  118A  2000  120A  118A  	fcall	stringdir
  9535  063E  00E7               	movwf	??_sprintf
  9536  063F  0867               	movf	??_sprintf,w
  9537  0640  1683               	bsf	3,5	;RP0=1, select bank1
  9538  0641  1303               	bcf	3,6	;RP1=0, select bank1
  9539  0642  00B8               	movwf	sprintf@c^(0+128)
  9540  0643  0838               	movf	sprintf@c^(0+128),w
  9541  0644  1D03               	btfss	3,2
  9542  0645  2E47               	goto	u6801
  9543  0646  2E4A               	goto	u6800
  9544  0647                     u6801:
  9545  0647  120A  158A  2D10   	goto	l3901
  9546  064A                     u6800:
  9547  064A                     l4149:
  9548                           
  9549                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  9550  064A  1683               	bsf	3,5	;RP0=1, select bank1
  9551  064B  1303               	bcf	3,6	;RP1=0, select bank1
  9552  064C  0832               	movf	sprintf@sp^(0+128),w
  9553  064D  0084               	movwf	4
  9554  064E  1383               	bcf	3,7	;select IRP bank0
  9555  064F  0180               	clrf	0
  9556  0650                     l421:
  9557  0650  0008               	return
  9558  0651                     __end_of_sprintf:

Data Sizes:
    Strings     27
    Constant    118
    Data        17
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     77      78
    BANK1            80     30      74
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> datos(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_I2C_Master_Init
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___ftmul->___awmod
    ___ftmul->___ftpack
    ___ftmul->___lwmod
    ___bmul->___awmod
    ___bmul->___lwmod
    ___lltoft->___ftpack
    ___ftadd->___ftpack
    _Write_USART_String->_Write_USART
    _USART_Init->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    ___awdiv->___awmod
    _fround->___ftmul
    ___lwdiv->___lwmod
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___lltoft->___ftpack
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _USART_Init->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   43580
                                             25 BANK1      5     5      0
                    _I2C_Master_Init
                         _USART_Init
                        _Write_USART
                 _Write_USART_String
                           _configIO
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             41    36      5   41634
                                             66 BANK0     11     6      5
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    8615
                                             31 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1213
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1355
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    7021
                                             31 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     622
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     631
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4858
                                             15 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             11 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     584
                                              3 COMMON     4     4      0
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     803
                                              0 BANK0     20    14      6
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1606
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2587
                                              3 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     622
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             40 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4131
                                             60 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3905
                                             47 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2290
                                              3 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              3 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     718
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   3     3      0     139
                                              4 COMMON     3     3      0
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          18    14      4     993
                                              4 COMMON     2     2      0
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     705
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     792
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     631
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (6) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _USART_Init
     ___aldiv
   _Write_USART
   _Write_USART_String
     _Write_USART
   _configIO
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1E      4A       7       92.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A3      12        0.0%
ABS                  0      0      A3       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 05 22:04:17 2021

                          pc 0002               ___bmul@product 002D                           l53 1F3E  
                         l96 1FFF                 ___awdiv@sign 0028                           fsr 0004  
        ___wmul@multiplicand 0075                 ___ftadd@exp1 005B                 ___ftadd@exp2 005A  
       __size_of_Write_USART 000C                 ___ftadd@sign 0059                          l151 16D2  
                        l154 1F00                          l163 1FA0                          l331 07F9  
                        l157 1F0A                          l421 0650                          l406 0546  
                        l360 0DF4                          l425 0811                          l506 1539  
                        l338 0D01                          l427 082B                          l451 1F7E  
                        l461 129E                          l621 1236                          l710 15F6  
                        l631 17FF                          l711 1568                          l391 031F  
                        l608 1307                          l721 15E9                          l650 1389  
                        l642 17F2                          l634 17AF                          l714 15B9  
                        l635 17C2                          l804 10C9                          l661 1363  
                        l662 136D                          l654 1348                          l734 0910  
                        l398 0371                          l663 1389                          l671 0A46  
                        l751 1FC5                          l496 14B1                          l728 1103  
                        l745 1EFE                          l674 095C                          l762 147F  
                        l675 0966                          l755 149C                          l676 096B  
                        l685 09DC                          l867 1185                          l796 11DB  
                        l877 113F                          l887 1F2B                          _GIE 005F  
                        _ISR 1F52                          fsr0 0004                          indf 0000  
               ___awmod@sign 0021                  _sprintf$960 00A0  __size_of_Write_USART_String 0022  
                       ?_ISR 0070                         l2131 1F74                         l2133 1F76  
                       l2125 1F6B                         l2135 1F7D                         l2127 1F6C  
                       l2129 1F70                         l4001 0074                         l4011 00BE  
                       l4003 0095                         l3301 1367                         l4013 00FD  
                       l4005 009E                         l4101 0530                         l3303 136F  
                       l3311 12A2                         l4111 056F                         l4103 0538  
                       l4031 01D8                         l4007 00A6                         l4015 0104  
                       l3305 1383                         l3401 0947                         l3321 12B6  
                       l3313 12A6                         l4121 05A8                         l4113 0580  
                       l4105 0540                         l4041 0235                         l4033 0207  
                       l4025 0183                         l4017 017F                         l3307 1388  
                       l3411 0965                         l3403 094C                         l3331 12CC  
                       l3323 12BA                         l3315 12AB                         l4131 05EA  
                       l4123 05BE                         l4115 0588                         l4107 0551  
                       l4051 026A                         l4035 020D                         l4019 0181  
                       l3421 0989                         l3413 096A                         l3405 0952  
                       l2701 1446                         l3501 08DF                         l2461 1F1C  
                       l3341 12EC                         l3333 12D0                         l3325 12BC  
                       l3317 12AD                         l3309 129F                         l4141 0613  
                       l4133 05EE                         l4125 05C7                         l4117 059A  
                       l4109 055C                         l4061 0336                         l4053 0271  
                       l4037 021F                         l4045 023C                         l4029 01CA  
                       l2391 1F06                         l3431 09B1                         l3423 098F  
                       l3415 096C                         l3407 095D                         l2703 144D  
                       l3503 08E7                         l3511 1140                         l2463 1F22  
                       l3343 12F3                         l3335 12D4                         l3327 12C2  
                       l3319 12B1                         l4143 0625                         l4135 05F4  
                       l4127 05CB                         l4119 05A2                         l4071 0367  
                       l4063 033C                         l4055 02CC                         l4047 024B  
                       l4039 0228                         l3281 1314                         l3441 09E0  
                       l3433 09BB                         l3425 0998                         l3417 0972  
                       l3409 0961                         l2721 1474                         l2713 145B  
                       l2705 144F                         l3505 08EF                         l3521 1158  
                       l3513 1144                         l2465 1F28                         l3337 12E5  
                       l3329 12C5                         l3345 12F9                         l3361 11EA  
                       l3353 11DC                         l4137 0601                         l4129 05D6  
                       l4081 03B2                         l4073 0382                         l4065 0342  
                       l4057 030B                         l4049 025F                         l4161 138F  
                       l2811 1F82                         l3291 1336                         l3451 0A15  
                       l3443 09F0                         l3435 09C1                         l3427 09A4  
                       l3419 097F                         l2723 1484                         l2707 1453  
                       l2715 146D                         l3507 08F5                         l3531 117B  
                       l3523 115C                         l3515 114A                         l2467 1F2A  
                       l2459 1F1B                         l3347 12FE                         l3339 12EB  
                       l3371 1203                         l3363 11EE                         l3355 11DF  
                       l3611 0C6E                         l3603 0BA9                         l4139 0607  
                       l4083 03FF                         l4091 0508                         l4075 0387  
                       l4067 034F                         l4059 0329                         l4147 0633  
                       l4171 13C1                         l4163 139E                         l2389 1F00  
                       l2813 1F8F                         l3293 1340                         l3285 131B  
                       l3277 1308                         l3453 0A19                         l3445 09F4  
                       l3437 09CA                         l3429 09AB                         l2725 1489  
                       l3701 17AE                         l3621 153A                         l3461 082C  
                       l3525 116D                         l3517 114D                         l3533 1181  
                       l3541 110F                         l3349 1303                         l3381 1222  
                       l3373 1207                         l3365 11F3                         l3357 11E3  
                       l3613 0C75                         l3605 0BB0                         l4093 0510  
                       l4085 045A                         l4077 0394                         l4069 035E  
                       l4149 064A                         l4173 13ED                         l4165 13AD  
                       l2815 1F93                         l3295 134F                         l3287 1329  
                       l3279 130D                         l3455 0A29                         l3447 0A04  
                       l3439 09D6                         l3391 0911                         l2727 1494  
                       l3711 17CE                         l3703 17BC                         l3623 154D  
                       l3463 083F                         l3527 1173                         l3519 1154  
                       l3551 112E                         l3543 1116                         l3375 120B  
                       l3367 11F9                         l3383 1228                         l3359 11E8  
                       l4095 051D                         l4087 0499                         l4079 039A  
                       l4175 13F3                         l4167 13B5                         l4159 138A  
                       l2809 1F80                         l2761 1F2C                         l2673 1EF5  
                       l3297 1359                         l3289 1330                         l3457 0A2B  
                       l3449 0A05                         l3393 0930                         l3721 17F7  
                       l3705 17C6                         l3713 17E0                         l3641 1589  
                       l3633 1569                         l3481 0893                         l3473 085E  
                       l3529 1174                         l3553 1135                         l3545 111A  
                       l3537 1104                         l3561 065A                         l3385 122D  
                       l3377 1215                         l3369 11FC                         l3617 0CE1  
                       l4097 0523                         l4089 04AD                         l4177 13F9  
                       l4169 13BB                         l2763 1F36                         l3811 10EE  
                       l3803 10CA                         l2675 1EFC                         l3299 135D  
                       l3395 0936                         l2691 1424                         l3731 0818  
                       l3651 15B3                         l3643 1592                         l3635 156F  
                       l3627 1556                         l3491 08B9                         l3483 0899  
                       l3475 088B                         l3467 0846                         l3547 111E  
                       l3539 110A                         l3555 113B                         l3571 073D  
                       l3563 071D                         l3387 1232                         l3379 121B  
                       l4099 0529                         l4179 13FF                         l3741 1249  
                       l2765 1F37                         l3813 10F0                         l3805 10D0  
                       l2677 1EFE                         l3397 0940                         l3733 081F  
                       l3725 0801                         l3653 15BD                         l3661 15D7  
                       l3645 15A0                         l3637 157E                         l3493 08C1  
                       l3485 089D                         l3477 088C                         l3469 0857  
                       l3549 1128                         l3573 07AC                         l3581 0A4A  
                       l4285 0E10                         l3901 0D10                         l3751 1278  
                       l3743 124C                         l2767 1F3A                         l3815 10F2  
                       l3807 10DD                         l3823 1FA1                         l2695 142D  
                       l3831 1186                         l3735 0825                         l3727 0805  
                       l3719 17E7                         l3647 15AA                         l3639 1580  
                       l3495 08C7                         l3487 08A1                         l3479 088D  
                       l3559 0654                         l3583 0A4E                         l3911 0D40  
                       l3903 0D16                         l3753 1286                         l3745 1259  
                       l2769 1F3D                         l3817 1100                         l3809 10E1  
                       l3825 1FAA                         l2697 143F                         l2689 1411  
                       l3841 11B6                         l3833 1190                         l3729 0809  
                       l3673 16D3                         l3649 15AB                         l3497 08CB  
                       l3489 08B1                         l3577 07C6                         l3569 0737  
                       l3593 0B15                         l3585 0A50                         l3913 0D44  
                       l3921 0D8A                         l3905 0D23                         l3755 1287  
                       l3747 125D                         l3739 1237                         l3771 14C0  
                       l3763 149D                         l3819 1102                         l3827 1FAC  
                       l2699 1440                         l3843 11C4                         l3835 1193  
                       l3851 1097                         l3691 174E                         l3675 16EE  
                       l3667 15DE                         l3659 15C5                         l3499 08CF  
                       l3595 0B1C                         l3587 0A57                         l3931 0DBB  
                       l3923 0D98                         l3915 0D59                         l3907 0D2A  
                       l3757 1290                         l3749 1266                         l3781 14E4  
                       l3773 14C4                         l3765 14A0                         l3861 15F7  
                       l3845 11CD                         l3837 11A0                         l3853 109E  
                       l3693 1753                         l3685 1710                         l3669 15EE  
                       l3933 0DD6                         l3925 0D9B                         l3917 0D74  
                       l3909 0D2E                         l3759 1296                         l3791 1512  
                       l3783 14E8                         l3775 14CC                         l3767 14A4  
                       l3871 16C0                         l3863 1652                         l3839 11A4  
                       l3847 11D3                         l3855 10AB                         l3695 1757  
                       l3687 1744                         l3679 16F7                         l3599 0B88  
                       l3951 0E36                         l3943 0DF8                         l3935 0DDC  
                       l3927 0DA1                         l3919 0D7A                         l3793 151B  
                       l3785 14F1                         l3777 14D4                         l3769 14B5  
                       l3881 16CC                         l3873 16C4                         l3865 165B  
                       l3857 10B1                         l3697 1760                         l3689 174C  
                       l3961 0E81                         l3953 0E41                         l3945 0E18  
                       l3929 0DA6                         l3937 0DEE                         l3891 1FCD  
                       l3787 1503                         l3779 14D7                         l3795 1521  
                       l3883 16CF                         l3875 16C5                         l3867 16B4  
                       l3699 178C                         l3971 0ED2                         l3963 0E85  
                       l3955 0E49                         l3947 0E2C                         l3939 0DF2  
                       l3893 1FFC                         l3797 1526                         l3789 1511  
                       l3877 16C8                         l3869 16B7                         l3981 0F51  
                       l3973 0EF5                         l3965 0E8C                         l3957 0E68  
                       l3949 0E32                         l3895 1FFD                         l3887 1FC6  
                       l3799 1531                         l3879 16CB                         l3991 0FB1  
                       l3983 0F70                         l3975 0EF9                         l3967 0EB9  
                       l3959 0E7D                         l3897 1FFE                         l3889 1FCA  
                       l3993 0FEA                         l3985 0F79                         l3977 0EFF  
                       l3969 0EBF                         l3995 003D                         l3987 0F9A  
                       l3979 0F18                         l3899 0D05                         l3997 0046  
                       l3989 0FA2                         l3999 0065                         STR_1 108B  
                       STR_2 107C                         _BRGH 04C2                         _CREN 00C4  
                       u3200 1F06                         u3201 1F05                         u4100 1FA0  
                       u3300 1F22                         u4101 1F9F                         u3301 1F21  
                       u3310 1F28                         u3311 1F27                         u5000 11EE  
                       u5001 11ED                         u5010 11F9                         u5011 11F8  
                       u5100 0940                         u5101 093F                         u5110 094C  
                       u5030 120B                         u5111 094B                         u5031 120A  
                       u5120 0952                         u2480 1F70                         u5040 1215  
                       u5121 0951                         u2481 1F6F                         u5041 1214  
                       u5025 11FD                         u6010 1296                         u5210 09AA  
                       u5130 095C                         u2490 1F7D                         u6011 1295  
                       u5211 09A9                         u5131 095B                         u2491 1F7C  
                       u6100 1521                         u6020 14A4                         u5220 09B1  
                       u5140 0965                         u5060 1228                         u6005 1288  
                       u6101 1520                         u6021 14A3                         u5301 0A0E  
                       u5221 09B0                         u5205 0999                         u5141 0964  
                       u5061 1227                         u5045 1211                         u6110 1526  
                       u6030 14B5                         u5310 0A19                         u5302 0A15  
                       u5150 096A                         u5070 122D                         u6111 1525  
                       u6031 14B4                         u5311 0A18                         u5151 0969  
                       u5071 122C                         u5055 121C                         u6040 14D4  
                       u6120 10D0                         u5240 09C1                         u5160 097F  
                       u5080 0930                         u5400 08C7                         u5320 083F  
                       u6041 14D3                         u6121 10CF                         u5241 09C0  
                       u5161 097E                         u5081 092F                         u5401 08C6  
                       u5321 083E                         u6130 10E1                         u3810 1EFC  
                       u5250 09C9                         u5090 0936                         u6210 11D3  
                       u5410 08CF                         u5330 0857                         u6131 10E0  
                       u3811 1EFB                         u5251 09C8                         u5235 09B2  
                       u5091 0935                         u6211 11D2                         u5411 08CE  
                       u5331 0856                         _PEIE 005E                         u6060 14E8  
                       u6140 1100                         u5180 098F                         u5340 086E  
                       u5500 116D                         u6061 14E7                         u6301 1694  
                       u6141 10FF                         u5181 098E                         u6205 11C5  
                       u5421 08D8                         u5501 116C                         u6310 16C0  
                       u6302 1695                         u5270 09DC                         u5190 0997  
                       u6150 1FAA                         u3910 1484                         u3830 1424  
                       u6230 10B1                         u5422 08DF                         u5350 0880  
                       u6055 14D9                         u6311 16BF                         u6303 169A  
                       u5271 09DB                         u5191 0996                         u5175 0980  
                       u6151 1FA9                         u3911 1483                         u3831 1423  
                       u6231 10B0                         u6320 1FDD                         u6080 1503  
                       u6304 169B                         u6240 1607                         u4800 132F  
                       u5280 09E0                         u3920 1489                         u3840 1438  
                       u6160 1190                         u5360 08A1                         u5520 1181  
                       u5600 073D                         u6400 0E68                         u6081 1502  
                       u6305 16A0                         u6145 10FC                         u4801 132E  
                       u5281 09DF                         u5265 09CB                         u3921 1488  
                       u3905 1476                         u6161 118F                         u6225 109F  
                       u5361 08A0                         u5345 086A                         u5521 1180  
                       u5505 1169                         u5601 073C                         u6401 0E67  
                       u6306 16A1                         u6250 1620                         u5290 09F4  
                       u3850 1453                         u5450 08F5                         u5530 110A  
                       u5610 0A4E                         u6410 0E8C                         u6330 0D16  
                       u6075 14EA                         u5291 09F3                         u3851 1452  
                       u5451 08F4                         u5435 08E0                         u5371 08AA  
                       u5355 087C                         u5515 1175                         u5531 1109  
                       u5611 0A4D                         u6411 0E8B                         u6331 0D15  
                       u4820 134E                         u3860 145A                         u6180 11A4  
                       u5372 08B1                         u5460 114A                         u4900 12B1  
                       u5620 0A57                         u6500 0074                         u6420 0EA2  
                       u6340 0D40                         _RCIF 0065                         u6325 1FD8  
                       u6085 14FF                         u6261 1632                         u6245 1602  
                       u4821 134D                         u3861 1459                         u3845 1434  
                       u6181 11A3                         u5445 08E8                         u5461 1149  
                       u4901 12B0                         u5621 0A56                         u6501 0073  
                       u6341 0D3F                         u6270 165B                         u6262 1633  
                       u6190 11B6                         u5710 15B9                         u5550 111E  
                       u4910 12C2                         u5630 0B1C                         u6510 0095  
                       u6430 0EF9                         u6350 0D8A                         u6095 1513  
                       u6271 165A                         u6263 1638                         u6255 161B  
                       u4815 1341                         u6191 11B5                         u6175 1195  
                       u5711 15B8                         u5551 111D                         u4911 12C1  
                       u5631 0B1B                         u6511 0094                         u6431 0EF8  
                       u6351 0D89                         u6280 1669                         u6264 1639  
                       u4840 135D                         u3880 146C                         u5800 170F  
                       u5720 15BD                         u5480 115C                         u5560 1128  
                       u5640 0BB0                         u6600 0328                         u6440 0F70  
                       u6360 0D98                         u6265 163E                         u4841 135C  
                       u3881 146B                         u5801 170E                         u5721 15BC  
                       u5705 15AC                         u5385 08B2                         u5481 115B  
                       u5561 1127                         u5545 1110                         u5641 0BAF  
                       u6601 0327                         u6505 0070                         u6441 0F6F  
                       u6425 0E9D                         u6361 0D97                         u6290 1682  
                       u6266 163F                         u4850 1363                         u4770 130D  
                       u3890 1473                         u5730 15C4                         u4930 12D4  
                       u5650 0C75                         u6610 034F                         u6530 01C9  
                       u6450 0F9A                         u6370 0DED                         i1l59 1F61  
                       u4851 1362                         u4835 1352                         u4771 130C  
                       u3891 1472                         u3875 145C                         u6195 11B2  
                       u5731 15C3                         u5395 08BA                         u5475 114E  
                       u4931 12D3                         u5651 0C74                         u6611 034E  
                       u6531 01C8                         u6451 0F99                         u6371 0DEC  
                       u4860 1367                         u4780 1314                         u5900 17F7  
                       u5820 178C                         u5660 154D                         u5580 113B  
                       u6700 0551                         u6620 035E                         u6540 01D8  
                       u6460 0FB1                         u6380 0E2C                         u6285 1664  
                       u4861 1366                         u4781 1313                         u5901 17F6  
                       u5821 178B                         u5661 154C                         u5581 113A  
                       u5565 1124                         u4925 12C6                         u6701 0550  
                       u6621 035D                         u6541 01D7                         u6525 0188  
                       u6461 0FB0                         u6381 0E29                         u4870 137A  
                       u5910 0809                         u5830 17C2                         u5750 15D6  
                       u5670 1567                         u5590 065A                         u4950 12E5  
                       u6710 056F                         u6630 0387                         u6550 0207  
                       u6470 003D                         u6390 0E32                         u6295 167D  
                       u5911 0808                         u5831 17C1                         u5815 1759  
                       u5751 15D5                         u5671 1566                         u5495 115D  
                       u5575 112F                         u5591 0659                         u4951 12E4  
                       u6711 056E                         u6631 0386                         u6615 034B  
                       u6551 0206                         u6535 01C5                         u6471 0FFA  
                       u6391 0E31                         u4880 1388                         u5840 17C6  
                       u5760 15DD                         u6800 064A                         u6720 0588  
                       u6560 021F                         u6480 0046                         u4881 1387  
                       u5841 17C5                         u5825 1788                         u5761 15DC  
                       u5745 15C6                         u4945 12D5                         u6801 0647  
                       u6721 0587                         u6705 054D                         u6625 035A  
                       u6561 021E                         u6481 0045                         u6465 0FAD  
                       u5850 17CD                         u5690 15A0                         u4970 12F9  
                       u4890 12A6                         u6730 059A                         u6570 024B  
                       u6490 0065                         u4875 1376                         u4795 1322  
                       u5851 17CC                         u5691 159F                         u4971 12F8  
                       u4955 12E1                         u4891 12A5                         u6731 0599  
                       u6715 056B                         u6571 024A                         u6491 0064  
                       u6475 0FF5                         u5940 0825                         u5780 15EE  
                       u4980 12FE                         u6740 05A8                         u6660 050F  
                       u6580 025F                         u5941 0824                         u5925 0812  
                       u5781 15ED                         u5685 158B                         u4981 12FD  
                       u4965 12ED                         u6741 05A7                         u6661 050E  
                       u6645 0404                         u6581 025E                         u5950 1249  
                       u5870 17DF                         u5790 16EE                         u4990 11E3  
                       u6750 05BE                         u6670 052F                         u5951 1248  
                       u5935 0819                         u5871 17DE                         u5791 16ED  
                       u5775 15E0                         u5695 159C                         u4991 11E2  
                       u6751 05BD                         u6671 052E                         u6655 04B2  
                       u6575 0247                         u5880 17E6                         u6760 05D6  
                       u6680 0538                         u5881 17E5                         u5865 17CF  
                       u6761 05D5                         u6681 0537                         u5970 125D  
                       u6770 05F4                         u6690 0540                         u5971 125C  
                       u6771 05F3                         u6755 05BA                         u6691 053F  
                       u6595 0276                         u6907 1407                         u6780 0613  
                       u5965 124E                         u6781 0612                         u6765 05D2  
                       u5990 1278                         u6790 0625                         u5991 1277  
                       u5895 17E9                         u6791 0624                         u5985 125F  
                       u5995 1274                         _SPEN 00C7                         _TRMT 04C1  
                       _TXEN 04C5                         _SYNC 04C4                         _main 138A  
               ___ftpack@arg 0073                 ___ftpack@exp 0076                         btemp 007E  
                       start 000C            ___bmul@multiplier 002E                 ___ftmul@cntr 003D  
               ___ftmul@sign 003E                        ??_ISR 0070                 ___fttol@exp1 0055  
               ___fttol@lval 0051                   _GetTempCmd 00C4             ?_I2C_Master_Init 002D  
            __end_of___aldiv 153A                        ?_main 0070              __end_of___awdiv 1308  
            __end_of___ftadd 0A47              __end_of___awmod 1237              __end_of___ftneg 1EFF  
                      _ANSEL 0188              __end_of___lldiv 129F              __end_of___ftmul 0911  
            ___awdiv@divisor 0022              __end_of___llmod 11DC              __end_of___ftsub 1FC6  
            __end_of___fttol 149D              __end_of___lwdiv 1186                        i1l166 1EE5  
                      i1l169 1EEC              __end_of___lwmod 1140              ___awdiv@counter 0027  
                      _RCREG 001A                        _SPBRG 0099                        _PORTB 0006  
                      _TRISB 0086                        _SSPIE 0463                        _SSPIF 0063  
                      _TXREG 0019                 ___lltoft@exp 0028                        _datos 00C7  
            __end_of_dpowers 107C                        _scale 0A47              __end_of_isdigit 1F2C  
              ___ftpack@sign 0077              _GetRHumidityCmd 00E4                        fpbase 003C  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __end_of_sprintf 0651                  ?_USART_Init 002E              __initialization 000F  
                 _Read_USART 1EE5                 __end_of_main 1411                       ??_main 00B9  
              ___fttol@sign1 0050                _AHT10_address 0078         __size_of__tdiv_to_l_ 00BD  
           ___llmod@dividend 0024                       ?_scale 003F             ___awdiv@dividend 0024  
           __end_of___ftpack 138A                       _ANSELH 0189             __end_of___lltoft 10CA  
                     i1l1603 1EE5                       i1l1605 1EEB                       i1l1943 1F52  
                     i1l1945 1F58                       i1l1947 1F59                       u226_20 1F58  
                     u226_21 1F57                       u166_20 1EEB                       u166_21 1EEA  
                     _SSPADD 0093                       _TRISC3 043B                       _TRISC4 043C  
                     _TRISC6 043E                       _TRISC7 043F                       _SSPCON 0014  
                     _SSPBUF 0013             __end_of__fptable 003D             __end_of__powers_ 102D  
           __end_of_configIO 1F3F                       ___bmul 1F68                       ___ftge 10CA  
                  ??___aldiv 0073                       ___wmul 0801                    ??___awdiv 0026  
                  ??___ftadd 0055                    ??___awmod 0077                    ??___ftneg 0076  
                  ??___lldiv 0073                    ??___ftmul 0035                    ??___llmod 0073  
                  ??___ftsub 0078                    ??___fttol 004C                    ??___lwdiv 0025  
                  ??___lwmod 0077                       _fround 0651             ___awdiv@quotient 0029  
            ___awmod@divisor 0073              ___awmod@counter 0020        ___ftmul@f3_as_product 003A  
                     fptable 0037                 __pdataCOMMON 0078                       fptotal 0002  
                  ??_isdigit 0073                       saved_w 007E          __size_of_USART_Init 00DC  
                  ??_sprintf 0067      __end_of__initialization 0033                   ___ftadd@f1 004F  
                 ___ftadd@f2 0052                   ___ftge@ff1 0020                   ___ftge@ff2 0023  
                 ___ftneg@f1 0073          ___bmul@multiplicand 002B                   ___ftmul@f1 002F  
                 ___ftmul@f2 0032                  ?_Read_USART 0070                   ___ftsub@f1 005F  
                 ___ftsub@f2 005C                   ___fttol@f1 0048               __pcstackCOMMON 0070  
               __pidataBANK1 1F0B                   ___lltoft@c 0023                __end_of_scale 0D02  
                 __div_to_l_ 16D3              __div_to_l_@exp1 0033              __div_to_l_@cntr 0032  
                    ??_scale 0042              __div_to_l_@quot 002E                 sprintf@width 00AA  
               Write_USART@a 0073                   __pbssBANK0 006D                   __pbssBANK1 00BE  
              __div_to_l_@f1 0020                __div_to_l_@f2 0023                   __pmaintext 138A  
                    ?___bmul 002B                      ?___ftge 0020                      ?___wmul 0073  
              ??_Write_USART 0073                   __pintentry 0004                      ?_fround 003F  
                  ?___ftpack 0073                    ?___lltoft 0023   __end_of_Write_USART_String 1FA1  
        __size_of_Read_USART 0008                      _SSPCON2 0091                    ?_configIO 0070  
                    _SSPSTAT 0094                   __stringtab 1000              _eSensorResetCmd 0079  
               ??_USART_Init 0032            __end_of__npowers_ 1054                      ___aldiv 149D  
            __size_of___bmul 0017              __size_of___ftge 003A                      ___awdiv 129F  
                    ___ftadd 0911                      ___awmod 11DC                      ___ftneg 1EF5  
                    ___lldiv 1237              __size_of___wmul 002B                      ___ftmul 082C  
                    ___llmod 1186                      ___ftsub 1FA1                      ___fttol 1411  
                    ___lwdiv 1140                   _fround$957 004B                   _fround$958 0048  
                    ___lwmod 1104                   ??___ftpack 0020              __size_of_fround 01A9  
                 ??___lltoft 0027                      __ptext1 0D02                      __ptext2 0A47  
                    __ptext3 11DC                      __ptext4 129F                      __ptext5 1F1A  
                    __ptext6 0651                      __ptext7 1104                      __ptext8 1140  
                    __ptext9 082C                 __size_of_ISR 0016                  ?__div_to_l_ 0020  
                    _dpowers 1054          __end_of_Write_USART 1F0B                      _isdigit 1F1A  
                    _humeda1 00BE                      _humedad 00C6             ___awmod@dividend 0075  
         fp__aht_GetHumidity 0000             ___aldiv@dividend 0024     __size_of_I2C_Master_Init 003A  
         __end_of_USART_Init 16D3                   ??_configIO 0073                      _sprintf 0D02  
                    clrloop0 1EEE         end_of_initialization 0033              ___lldiv@divisor 0020  
            ___lldiv@counter 002C            _eSensorMeasureCmd 00DB             ___aldiv@quotient 002A  
           I2C_Master_Init@c 002D                      psplit$0 110032               __tdiv_to_l_@f1 0020  
             __tdiv_to_l_@f2 0023          _eSensorCalibrateCmd 00E1                ??__tdiv_to_l_ 0073  
                  _TRISCbits 0087                 _LecturaUSART 007A        fp__aht_GetTemperature 0000  
        __size_of__div_to_l_ 012D                 ??_Read_USART 0070                  ___ftmul@exp 0039  
             __end_of___bmul 1F7F               __end_of___ftge 1104                  _Write_USART 1EFF  
             __end_of___wmul 082C                __pidataCOMMON 07FA            pnum$text1_split_1 0032  
                USART_Init@x 0074               __end_of_fround 07FA            _AHT10Address_High 00E6  
        start_initialization 000F                  __end_of_ISR 1F68          __end_of__tdiv_to_l_ 15F7  
         __end_of_Read_USART 1EED            ??_I2C_Master_Init 0074              ___llmod@divisor 0020  
            ___llmod@counter 0074                     ??___bmul 002C                     ??___ftge 0073  
                   ??___wmul 0077                   init_fetch0 1F3F                  __pdataBANK1 00DB  
                   ??_fround 0042                sprintf@tmpval 00AC                   fround@prec 004E  
          __size_of___ftpack 0082            __size_of___lltoft 0033                  __pbssCOMMON 007A  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
          __size_of__fptable 0006            __size_of_configIO 0013                  sprintf@flag 00A8  
                sprintf@eexp 00B0                  sprintf@fval 00B3           _Write_USART_String 1F7F  
                sprintf@prec 00B6             ___lwdiv@dividend 0023           _aht_GetTemperature 0000  
                  __pfunctab 0037          ?_Write_USART_String 0070                     ?___aldiv 0020  
                   ?___awdiv 0022                     ?___ftadd 004F                     ?___awmod 0073  
                   ?___ftneg 0073                     ?___lldiv 0020                     ?___ftmul 002F  
                   ?___llmod 0020                     ?___ftsub 005C                    __npowers_ 102D  
                   ?___fttol 0048                     ?___lwdiv 0021                     ?___lwmod 0073  
                  __pstrings 1000                  __tdiv_to_l_ 153A                 ??__div_to_l_ 0026  
                   ?_isdigit 0070                    _scale$959 0044         ??_Write_USART_String 0074  
           ___lwdiv@quotient 0027                     ?_sprintf 0062               __size_of_scale 02BB  
            ___aldiv@divisor 0020            interrupt_function 0004              ___aldiv@counter 0028  
             ___wmul@product 0020                    clear_ram0 1EED                     _PIE1bits 008C  
                   _PIR1bits 000C           __end_of__div_to_l_ 1800                  __stringbase 1005  
          ___wmul@multiplier 0073           USART_Init@baudrate 002E             _eSensorNormalCmd 00DE  
           _AHT10Address_Low 00E8                 ?_Write_USART 0070             __size_of___aldiv 009D  
           __size_of___awdiv 0069             __size_of___ftadd 0136             __size_of___awmod 005B  
           __size_of___ftneg 000A             __size_of___lldiv 0068             __size_of___ftmul 00E5  
           __size_of___llmod 0056             __size_of___ftsub 0025             __size_of___fttol 008C  
           __size_of___lwdiv 0046             __size_of___lwmod 003C                     ___ftpack 1308  
         __end_of__stringtab 1006                     ___lltoft 1097                  _isdigit$749 0073  
            _aht_GetHumidity 0000                   sprintf@val 00A4                     __fptable 0037  
            _I2C_Master_Init 1FC6             __size_of_isdigit 0012              ___lwdiv@divisor 0021  
            ___lwdiv@counter 0026                     __ptext10 1F68                     __ptext11 153A  
                   __ptext20 1EF5                     __ptext12 16D3                     __ptext21 10CA  
                   __ptext13 0801                     __ptext30 1EE5                     __ptext22 1F2C  
                   __ptext14 1097                     __ptext23 1F7F                     __ptext15 1186  
                   __ptext24 1EFF                     __ptext16 1411                     __ptext25 15F7  
                   __ptext17 1FA1                     __ptext26 149D                     __ptext18 0911  
                   __ptext27 1FC6                     __ptext19 1308                     __ptext28 1237  
                   __ptext29 1F52                     __powers_ 1006                     _configIO 1F2C  
           __size_of_sprintf F94F                __size_of_main 0087                    pnum$text1 0011  
                   _tempera1 00C1                   _INTCONbits 000B          Write_USART_String@a 0075  
        Write_USART_String@i 0076                     init_ram0 1F43                     isdigit@c 0074  
                   scale@scl 0047                     intlevel1 0037                    sprintf@ap 00A3  
           __tdiv_to_l_@exp1 002B             __tdiv_to_l_@cntr 002A                    sprintf@sp 00B2  
           __tdiv_to_l_@quot 0026             ___lwmod@dividend 0075             ___lldiv@dividend 0024  
                  stringcode 1000      __end_of_I2C_Master_Init 2000                 ?__tdiv_to_l_ 0020  
                _temperatura 006D                     sprintf@c 00B8                     sprintf@f 0062  
           ___lldiv@quotient 0028              ___lwmod@divisor 0073              ___lwmod@counter 0020  
                   stringdir 1000                     stringtab 1000                 ___aldiv@sign 0029  
                _SSPCON2bits 0091                   _USART_Init 15F7  
