

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 05 22:28:45 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	functab,global,class=ENTRY,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  008F                     	;# 
   428  0090                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0095                     	;# 
   436  0096                     	;# 
   437  0097                     	;# 
   438  0098                     	;# 
   439  0099                     	;# 
   440  009A                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  0105                     	;# 
   447  0107                     	;# 
   448  0108                     	;# 
   449  0109                     	;# 
   450  010C                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010E                     	;# 
   454  010F                     	;# 
   455  0185                     	;# 
   456  0187                     	;# 
   457  0188                     	;# 
   458  0189                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461                           
   462 ;; Function _aht_GetHumidity is unused but had its address taken
   463  0000                     
   464 ;; Function _aht_GetTemperature is unused but had its address taken
   465  0000                     
   466                           	psect	idataCOMMON
   467  0659                     __pidataCOMMON:
   468                           
   469                           ;initializer for _AHT10_address
   470  0659  3438               	retlw	56
   471                           
   472                           ;initializer for _eSensorResetCmd
   473  065A  34BA               	retlw	186
   474                           
   475                           	psect	idataBANK0
   476  062E                     __pidataBANK0:
   477                           
   478                           ;initializer for _eSensorMeasureCmd
   479  062E  34AC               	retlw	172
   480  062F  3433               	retlw	51
   481  0630  3400               	retlw	0
   482                           
   483                           ;initializer for _eSensorNormalCmd
   484  0631  34A8               	retlw	168
   485  0632  3400               	retlw	0
   486  0633  3400               	retlw	0
   487                           
   488                           ;initializer for _eSensorCalibrateCmd
   489  0634  34E1               	retlw	225
   490  0635  3408               	retlw	8
   491  0636  3400               	retlw	0
   492                           
   493                           ;initializer for _GetRHumidityCmd
   494  0637  3401               	retlw	1
   495  0638  3400               	retlw	0
   496                           
   497                           ;initializer for _AHT10Address_High
   498  0639  3439               	retlw	57
   499  063A  3400               	retlw	0
   500                           
   501                           ;initializer for _AHT10Address_Low
   502  063B  3438               	retlw	56
   503  063C  3400               	retlw	0
   504                           
   505                           	psect	strings
   506  0553                     __pstrings:
   507  0553                     stringtab:
   508  0553                     __stringtab:
   509  0553                     stringcode:	
   510                           ;	String table - string pointers are 1 byte each
   511                           
   512  0553                     stringdir:
   513  0553  3005               	movlw	high stringdir
   514  0554  008A               	movwf	10
   515  0555  0804               	movf	4,w
   516  0556  0A84               	incf	4,f
   517  0557  0782               	addwf	2,f
   518  0558                     __stringbase:
   519  0558  3400               	retlw	0
   520  0559                     __end_of__stringtab:
   521  0559                     _dpowers:
   522  0559  3401               	retlw	1
   523  055A  3400               	retlw	0
   524  055B  340A               	retlw	10
   525  055C  3400               	retlw	0
   526  055D  3464               	retlw	100
   527  055E  3400               	retlw	0
   528  055F  34E8               	retlw	232
   529  0560  3403               	retlw	3
   530  0561  3410               	retlw	16
   531  0562  3427               	retlw	39
   532  0563                     __end_of_dpowers:
   533  001A                     _RCREG	set	26
   534  0019                     _TXREG	set	25
   535  0013                     _SSPBUF	set	19
   536  0014                     _SSPCON	set	20
   537  000C                     _PIR1bits	set	12
   538  000B                     _INTCONbits	set	11
   539  0006                     _PORTB	set	6
   540  00C4                     _CREN	set	196
   541  00C7                     _SPEN	set	199
   542  0063                     _SSPIF	set	99
   543  005E                     _PEIE	set	94
   544  005F                     _GIE	set	95
   545  0065                     _RCIF	set	101
   546  0099                     _SPBRG	set	153
   547  0091                     _SSPCON2bits	set	145
   548  0087                     _TRISCbits	set	135
   549  0094                     _SSPSTAT	set	148
   550  0093                     _SSPADD	set	147
   551  0091                     _SSPCON2	set	145
   552  008C                     _PIE1bits	set	140
   553  0086                     _TRISB	set	134
   554  04C1                     _TRMT	set	1217
   555  04C5                     _TXEN	set	1221
   556  043E                     _TRISC6	set	1086
   557  043F                     _TRISC7	set	1087
   558  04C4                     _SYNC	set	1220
   559  04C2                     _BRGH	set	1218
   560  0463                     _SSPIE	set	1123
   561  043C                     _TRISC4	set	1084
   562  043B                     _TRISC3	set	1083
   563  0189                     _ANSELH	set	393
   564  0188                     _ANSEL	set	392
   565  0563                     STR_2:
   566  0563  3425               	retlw	37	;'%'
   567  0564  3432               	retlw	50	;'2'
   568  0565  342E               	retlw	46	;'.'
   569  0566  3431               	retlw	49	;'1'
   570  0567  3464               	retlw	100	;'d'
   571  0568  3420               	retlw	32	;' '
   572  0569  3420               	retlw	32	;' '
   573  056A  3420               	retlw	32	;' '
   574  056B  3425               	retlw	37	;'%'
   575  056C  3432               	retlw	50	;'2'
   576  056D  342E               	retlw	46	;'.'
   577  056E  3431               	retlw	49	;'1'
   578  056F  3464               	retlw	100	;'d'
   579  0570  3420               	retlw	32	;' '
   580  0571  3400               	retlw	0
   581  0572                     STR_1:
   582  0572  3454               	retlw	84	;'T'
   583  0573  3431               	retlw	49	;'1'
   584  0574  3420               	retlw	32	;' '
   585  0575  3420               	retlw	32	;' '
   586  0576  3420               	retlw	32	;' '
   587  0577  3448               	retlw	72	;'H'
   588  0578  3431               	retlw	49	;'1'
   589  0579  3420               	retlw	32	;' '
   590  057A  3420               	retlw	32	;' '
   591  057B  3420               	retlw	32	;' '
   592  057C  340A               	retlw	10
   593  057D  3400               	retlw	0
   594                           
   595                           	psect	cinit
   596  000F                     start_initialization:	
   597                           ; #config settings
   598                           
   599  000F                     __initialization:
   600                           
   601                           ; Initialize objects allocated to BANK0
   602  000F  1383               	bcf	3,7	;select IRP bank0
   603  0010  3070               	movlw	low (__pdataBANK0+15)
   604  0011  00FD               	movwf	btemp+-1
   605  0012  3006               	movlw	high __pidataBANK0
   606  0013  00FE               	movwf	btemp
   607  0014  302E               	movlw	low __pidataBANK0
   608  0015  00FF               	movwf	btemp+1
   609  0016  3061               	movlw	low __pdataBANK0
   610  0017  0084               	movwf	4
   611  0018  120A  118A  25FA  120A  118A  	fcall	init_ram0
   612                           
   613                           ; Initialize objects allocated to COMMON
   614  001D  120A  118A  2659  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   615  0022  00F8               	movwf	__pdataCOMMON& (0+127)
   616  0023  120A  118A  265A  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   617  0028  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   618                           
   619                           ; Clear objects allocated to BANK0
   620  0029  3043               	movlw	low __pbssBANK0
   621  002A  0084               	movwf	4
   622  002B  3061               	movlw	low (__pbssBANK0+30)
   623  002C  120A  118A  2649  120A  118A  	fcall	clear_ram0
   624                           
   625                           ; Clear objects allocated to COMMON
   626  0031  01FA               	clrf	__pbssCOMMON& (0+127)
   627  0032                     end_of_initialization:	
   628                           ;End of C runtime variable initialization code
   629                           
   630  0032                     __end_of__initialization:
   631  0032  0183               	clrf	3
   632  0033  120A  118A  2BBE   	ljmp	_main	;jump to C main() function
   633                           
   634                           	psect	bssCOMMON
   635  007A                     __pbssCOMMON:
   636  007A                     _LecturaUSART:
   637  007A                     	ds	1
   638                           
   639                           	psect	dataCOMMON
   640  0078                     __pdataCOMMON:
   641  0078                     _AHT10_address:
   642  0078                     	ds	1
   643  0079                     _eSensorResetCmd:
   644  0079                     	ds	1
   645                           
   646                           	psect	bssBANK0
   647  0043                     __pbssBANK0:
   648  0043                     _humeda1:
   649  0043                     	ds	3
   650  0046                     _tempera1:
   651  0046                     	ds	3
   652  0049                     _GetTempCmd:
   653  0049                     	ds	2
   654  004B                     _humedad:
   655  004B                     	ds	1
   656  004C                     _temperatura:
   657  004C                     	ds	1
   658  004D                     _datos:
   659  004D                     	ds	20
   660                           
   661                           	psect	dataBANK0
   662  0061                     __pdataBANK0:
   663  0061                     _eSensorMeasureCmd:
   664  0061                     	ds	3
   665  0064                     _eSensorNormalCmd:
   666  0064                     	ds	3
   667  0067                     _eSensorCalibrateCmd:
   668  0067                     	ds	3
   669  006A                     _GetRHumidityCmd:
   670  006A                     	ds	2
   671  006C                     _AHT10Address_High:
   672  006C                     	ds	2
   673  006E                     _AHT10Address_Low:
   674  006E                     	ds	2
   675                           
   676                           	psect	inittext
   677  05F6                     init_fetch0:	
   678                           ;	Called with low address in FSR and high address in W
   679                           
   680  05F6  087E               	movf	btemp,w
   681  05F7  008A               	movwf	10
   682  05F8  087F               	movf	btemp+1,w
   683  05F9  0082               	movwf	2
   684  05FA                     init_ram0:	
   685                           ;Called with:
   686                           ;	high address of idata address in btemp 
   687                           ;	low address of idata address in btemp+1 
   688                           ;	low address of data in FSR
   689                           ;	high address + 1 of data in btemp-1
   690                           
   691  05FA  120A  118A  25F6  120A  118A  	fcall	init_fetch0
   692  05FF  0080               	movwf	0
   693  0600  0A84               	incf	4,f
   694  0601  0804               	movf	4,w
   695  0602  067D               	xorwf	btemp+-1,w
   696  0603  1903               	btfsc	3,2
   697  0604  3400               	retlw	0
   698  0605  0AFF               	incf	btemp+1,f
   699  0606  1903               	btfsc	3,2
   700  0607  0AFE               	incf	btemp,f
   701  0608  2DFA               	goto	init_ram0
   702                           
   703                           	psect	clrtext
   704  0649                     clear_ram0:	
   705                           ;	Called with FSR containing the base address, and
   706                           ;	W with the last address+1
   707                           
   708  0649  0064               	clrwdt	;clear the watchdog before getting into this loop
   709  064A                     clrloop0:
   710  064A  0180               	clrf	0	;clear RAM location pointed to by FSR
   711  064B  0A84               	incf	4,f	;increment pointer
   712  064C  0604               	xorwf	4,w	;XOR with final address
   713  064D  1903               	btfsc	3,2	;have we reached the end yet?
   714  064E  3400               	retlw	0	;all done for this memory range, return
   715  064F  0604               	xorwf	4,w	;XOR again to restore value
   716  0650  2E4A               	goto	clrloop0	;do the next byte
   717                           
   718                           	psect	cstackCOMMON
   719  0070                     __pcstackCOMMON:
   720  0070                     ?_isdigit:
   721  0070                     ?_Read_USART:	
   722                           ; 1 bit 
   723                           
   724  0070                     ??_Read_USART:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?_Write_USART_String:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_Write_USART:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_configIO:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?_ISR:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ??_ISR:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_main:	
   743                           ; 1 bytes @ 0x0
   744                           
   745                           
   746                           ; 1 bytes @ 0x0
   747  0070                     	ds	3
   748  0073                     ??_Write_USART:
   749  0073                     ??_isdigit:	
   750                           ; 1 bytes @ 0x3
   751                           
   752  0073                     ??_configIO:	
   753                           ; 1 bytes @ 0x3
   754                           
   755  0073                     ?___bmul:	
   756                           ; 1 bytes @ 0x3
   757                           
   758  0073                     ??___lldiv:	
   759                           ; 1 bytes @ 0x3
   760                           
   761  0073                     ??___aldiv:	
   762                           ; 1 bytes @ 0x3
   763                           
   764  0073                     ?___wmul:	
   765                           ; 1 bytes @ 0x3
   766                           
   767  0073                     ?___lwdiv:	
   768                           ; 2 bytes @ 0x3
   769                           
   770  0073                     Write_USART@a:	
   771                           ; 2 bytes @ 0x3
   772                           
   773  0073                     ___bmul@multiplicand:	
   774                           ; 1 bytes @ 0x3
   775                           
   776  0073                     _isdigit$714:	
   777                           ; 1 bytes @ 0x3
   778                           
   779  0073                     ___wmul@multiplier:	
   780                           ; 1 bytes @ 0x3
   781                           
   782  0073                     ___lwdiv@divisor:	
   783                           ; 2 bytes @ 0x3
   784                           
   785                           
   786                           ; 2 bytes @ 0x3
   787  0073                     	ds	1
   788  0074                     ??_I2C_Master_Init:
   789  0074                     ??_Write_USART_String:	
   790                           ; 1 bytes @ 0x4
   791                           
   792  0074                     ??___bmul:	
   793                           ; 1 bytes @ 0x4
   794                           
   795  0074                     isdigit@c:	
   796                           ; 1 bytes @ 0x4
   797                           
   798  0074                     USART_Init@x:	
   799                           ; 1 bytes @ 0x4
   800                           
   801                           
   802                           ; 2 bytes @ 0x4
   803  0074                     	ds	1
   804  0075                     Write_USART_String@a:
   805  0075                     ___bmul@product:	
   806                           ; 1 bytes @ 0x5
   807                           
   808  0075                     ___wmul@multiplicand:	
   809                           ; 1 bytes @ 0x5
   810                           
   811  0075                     ___lwdiv@dividend:	
   812                           ; 2 bytes @ 0x5
   813                           
   814                           
   815                           ; 2 bytes @ 0x5
   816  0075                     	ds	1
   817  0076                     Write_USART_String@i:
   818  0076                     ___bmul@multiplier:	
   819                           ; 1 bytes @ 0x6
   820                           
   821                           
   822                           ; 1 bytes @ 0x6
   823  0076                     	ds	1
   824  0077                     ??___wmul:
   825  0077                     ??___lwdiv:	
   826                           ; 1 bytes @ 0x7
   827                           
   828                           
   829                           ; 1 bytes @ 0x7
   830  0077                     	ds	1
   831                           
   832                           	psect	cstackBANK0
   833  0020                     __pcstackBANK0:
   834  0020                     ?___lldiv:
   835  0020                     ?___aldiv:	
   836                           ; 4 bytes @ 0x0
   837                           
   838  0020                     ___lwdiv@counter:	
   839                           ; 4 bytes @ 0x0
   840                           
   841  0020                     ___wmul@product:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0020                     ___lldiv@divisor:	
   845                           ; 2 bytes @ 0x0
   846                           
   847  0020                     ___aldiv@divisor:	
   848                           ; 4 bytes @ 0x0
   849                           
   850                           
   851                           ; 4 bytes @ 0x0
   852  0020                     	ds	1
   853  0021                     ___lwdiv@quotient:
   854                           
   855                           ; 2 bytes @ 0x1
   856  0021                     	ds	2
   857  0023                     ?___lwmod:
   858  0023                     ___lwmod@divisor:	
   859                           ; 2 bytes @ 0x3
   860                           
   861                           
   862                           ; 2 bytes @ 0x3
   863  0023                     	ds	1
   864  0024                     ___lldiv@dividend:
   865  0024                     ___aldiv@dividend:	
   866                           ; 4 bytes @ 0x4
   867                           
   868                           
   869                           ; 4 bytes @ 0x4
   870  0024                     	ds	1
   871  0025                     ___lwmod@dividend:
   872                           
   873                           ; 2 bytes @ 0x5
   874  0025                     	ds	2
   875  0027                     ??___lwmod:
   876                           
   877                           ; 1 bytes @ 0x7
   878  0027                     	ds	1
   879  0028                     ___aldiv@counter:
   880  0028                     ___lwmod@counter:	
   881                           ; 1 bytes @ 0x8
   882                           
   883  0028                     ___lldiv@quotient:	
   884                           ; 1 bytes @ 0x8
   885                           
   886                           
   887                           ; 4 bytes @ 0x8
   888  0028                     	ds	1
   889  0029                     ?_sprintf:
   890  0029                     sprintf@f:	
   891                           ; 2 bytes @ 0x9
   892                           
   893  0029                     ___aldiv@sign:	
   894                           ; 1 bytes @ 0x9
   895                           
   896                           
   897                           ; 1 bytes @ 0x9
   898  0029                     	ds	1
   899  002A                     ___aldiv@quotient:
   900                           
   901                           ; 4 bytes @ 0xA
   902  002A                     	ds	2
   903  002C                     ___lldiv@counter:
   904                           
   905                           ; 1 bytes @ 0xC
   906  002C                     	ds	1
   907  002D                     ?_I2C_Master_Init:
   908  002D                     I2C_Master_Init@c:	
   909                           ; 1 bytes @ 0xD
   910                           
   911                           
   912                           ; 4 bytes @ 0xD
   913  002D                     	ds	1
   914  002E                     ?_USART_Init:
   915  002E                     ??_sprintf:	
   916                           ; 1 bytes @ 0xE
   917                           
   918  002E                     USART_Init@baudrate:	
   919                           ; 1 bytes @ 0xE
   920                           
   921                           
   922                           ; 4 bytes @ 0xE
   923  002E                     	ds	3
   924  0031                     sprintf@ap:
   925                           
   926                           ; 1 bytes @ 0x11
   927  0031                     	ds	1
   928  0032                     ??_USART_Init:
   929  0032                     sprintf@flag:	
   930                           ; 1 bytes @ 0x12
   931                           
   932                           
   933                           ; 1 bytes @ 0x12
   934  0032                     	ds	1
   935  0033                     sprintf@val:
   936                           
   937                           ; 2 bytes @ 0x13
   938  0033                     	ds	2
   939  0035                     sprintf@sp:
   940                           
   941                           ; 1 bytes @ 0x15
   942  0035                     	ds	1
   943  0036                     sprintf@width:
   944                           
   945                           ; 2 bytes @ 0x16
   946  0036                     	ds	2
   947  0038                     sprintf@prec:
   948                           
   949                           ; 1 bytes @ 0x18
   950  0038                     	ds	1
   951  0039                     sprintf@c:
   952                           
   953                           ; 1 bytes @ 0x19
   954  0039                     	ds	5
   955  003E                     ??_main:
   956                           
   957                           ; 1 bytes @ 0x1E
   958  003E                     	ds	5
   959                           
   960                           	psect	maintext
   961  03BE                     __pmaintext:	
   962 ;;
   963 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   964 ;;
   965 ;; *************** function _main *****************
   966 ;; Defined at:
   967 ;;		line 64 in file "pic16f.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : B00/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   981 ;;      Params:         0       0       0       0       0
   982 ;;      Locals:         0       0       0       0       0
   983 ;;      Temps:          0       5       0       0       0
   984 ;;      Totals:         0       5       0       0       0
   985 ;;Total ram usage:        5 bytes
   986 ;; Hardware stack levels required when called:    4
   987 ;; This function calls:
   988 ;;		_I2C_Master_Init
   989 ;;		_USART_Init
   990 ;;		_Write_USART
   991 ;;		_Write_USART_String
   992 ;;		_configIO
   993 ;;		_sprintf
   994 ;; This function is called by:
   995 ;;		Startup code after reset
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           
  1000                           ;psect for function _main
  1001  03BE                     _main:
  1002  03BE                     l2308:	
  1003                           ;incstack = 0
  1004                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1005                           
  1006                           
  1007                           ;pic16f.c: 65:     configIO();
  1008  03BE  120A  118A  2609  120A  118A  	fcall	_configIO
  1009  03C3                     l2310:
  1010                           
  1011                           ;pic16f.c: 66:     USART_Init(9600);
  1012  03C3  3000               	movlw	0
  1013  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1014  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1015  03C6  00B1               	movwf	USART_Init@baudrate+3
  1016  03C7  3000               	movlw	0
  1017  03C8  00B0               	movwf	USART_Init@baudrate+2
  1018  03C9  3025               	movlw	37
  1019  03CA  00AF               	movwf	USART_Init@baudrate+1
  1020  03CB  3080               	movlw	128
  1021  03CC  00AE               	movwf	USART_Init@baudrate
  1022  03CD  120A  118A  2245  120A  118A  	fcall	_USART_Init
  1023  03D2                     l2312:
  1024                           
  1025                           ;pic16f.c: 67:     I2C_Master_Init(100000);
  1026  03D2  3000               	movlw	0
  1027  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  1028  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  1029  03D5  00B0               	movwf	I2C_Master_Init@c+3
  1030  03D6  3001               	movlw	1
  1031  03D7  00AF               	movwf	I2C_Master_Init@c+2
  1032  03D8  3086               	movlw	134
  1033  03D9  00AE               	movwf	I2C_Master_Init@c+1
  1034  03DA  30A0               	movlw	160
  1035  03DB  00AD               	movwf	I2C_Master_Init@c
  1036  03DC  120A  118A  2519  120A  118A  	fcall	_I2C_Master_Init
  1037  03E1                     l2314:
  1038                           
  1039                           ;pic16f.c: 75:         temperatura = aht_GetHumidity;
  1040  03E1  30C5               	movlw	(low (0-fpbase))& (0+255)
  1041  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1042  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1043  03E4  00BE               	movwf	??_main
  1044  03E5  083E               	movf	??_main,w
  1045  03E6  00CC               	movwf	_temperatura
  1046  03E7                     l2316:
  1047                           
  1048                           ;pic16f.c: 76:         humedad = aht_GetTemperature;
  1049  03E7  30C5               	movlw	(low (0-fpbase))& (0+255)
  1050  03E8  00BE               	movwf	??_main
  1051  03E9  083E               	movf	??_main,w
  1052  03EA  00CB               	movwf	_humedad
  1053  03EB                     l2318:
  1054                           
  1055                           ;pic16f.c: 79:         Write_USART_String("T1   H1   \n");
  1056  03EB  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1057  03EC  120A  118A  25A9  120A  118A  	fcall	_Write_USART_String
  1058  03F1                     l2320:
  1059                           
  1060                           ;pic16f.c: 80:         sprintf(datos, "%2.1d   %2.1d ", temperatura,humedad);
  1061  03F1  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1062  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1063  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1064  03F4  00BE               	movwf	??_main
  1065  03F5  083E               	movf	??_main,w
  1066  03F6  00A9               	movwf	sprintf@f
  1067  03F7  084C               	movf	_temperatura,w
  1068  03F8  00BF               	movwf	??_main+1
  1069  03F9  01C0               	clrf	??_main+2
  1070  03FA  083F               	movf	??_main+1,w
  1071  03FB  00AA               	movwf	?_sprintf+1
  1072  03FC  0840               	movf	??_main+2,w
  1073  03FD  00AB               	movwf	?_sprintf+2
  1074  03FE  084B               	movf	_humedad,w
  1075  03FF  00C1               	movwf	??_main+3
  1076  0400  01C2               	clrf	??_main+4
  1077  0401  0841               	movf	??_main+3,w
  1078  0402  00AC               	movwf	?_sprintf+3
  1079  0403  0842               	movf	??_main+4,w
  1080  0404  00AD               	movwf	?_sprintf+4
  1081  0405  304D               	movlw	(low (_datos| 0))& (0+255)
  1082  0406  120A  118A  203C  120A  118A  	fcall	_sprintf
  1083  040B                     l2322:
  1084                           
  1085                           ;pic16f.c: 81:         Write_USART(datos);
  1086  040B  304D               	movlw	(low _datos)& (0+255)
  1087  040C  120A  118A  263D  120A  118A  	fcall	_Write_USART
  1088  0411                     l2324:
  1089                           
  1090                           ;pic16f.c: 82:         Write_USART(13);
  1091  0411  300D               	movlw	13
  1092  0412  120A  118A  263D  120A  118A  	fcall	_Write_USART
  1093  0417                     l2326:
  1094                           
  1095                           ;pic16f.c: 83:         Write_USART(10);
  1096  0417  300A               	movlw	10
  1097  0418  120A  118A  263D  120A  118A  	fcall	_Write_USART
  1098  041D                     l2328:
  1099                           
  1100                           ;pic16f.c: 84:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1101  041D  3006               	movlw	6
  1102  041E  1283               	bcf	3,5	;RP0=0, select bank0
  1103  041F  1303               	bcf	3,6	;RP1=0, select bank0
  1104  0420  00C0               	movwf	??_main+2
  1105  0421  3013               	movlw	19
  1106  0422  00BF               	movwf	??_main+1
  1107  0423  30AD               	movlw	173
  1108  0424  00BE               	movwf	??_main
  1109  0425                     u2827:
  1110  0425  0BBE               	decfsz	??_main,f
  1111  0426  2C25               	goto	u2827
  1112  0427  0BBF               	decfsz	??_main+1,f
  1113  0428  2C25               	goto	u2827
  1114  0429  0BC0               	decfsz	??_main+2,f
  1115  042A  2C25               	goto	u2827
  1116  042B  2BE1               	goto	l2314
  1117  042C  120A  118A  280C   	ljmp	start
  1118  042F                     __end_of_main:
  1119                           
  1120                           	psect	text1
  1121  003C                     __ptext1:	
  1122 ;; *************** function _sprintf *****************
  1123 ;; Defined at:
  1124 ;;		line 505 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  sp              1    wreg     PTR unsigned char 
  1127 ;;		 -> datos(20), 
  1128 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1129 ;;		 -> STR_2(15), 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  1132 ;;		 -> datos(20), 
  1133 ;;  tmpval          4    0        struct .
  1134 ;;  width           2   22[BANK0 ] int 
  1135 ;;  val             2   19[BANK0 ] unsigned int 
  1136 ;;  cp              2    0        PTR const unsigned char 
  1137 ;;  len             2    0        unsigned int 
  1138 ;;  c               1   25[BANK0 ] unsigned char 
  1139 ;;  prec            1   24[BANK0 ] char 
  1140 ;;  flag            1   18[BANK0 ] unsigned char 
  1141 ;;  ap              1   17[BANK0 ] PTR void [1]
  1142 ;;		 -> ?_sprintf(2), 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  2    9[BANK0 ] int 
  1145 ;; Registers used:
  1146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1152 ;;      Params:         0       5       0       0       0
  1153 ;;      Locals:         0       9       0       0       0
  1154 ;;      Temps:          0       3       0       0       0
  1155 ;;      Totals:         0      17       0       0       0
  1156 ;;Total ram usage:       17 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    3
  1159 ;; This function calls:
  1160 ;;		___bmul
  1161 ;;		___lwdiv
  1162 ;;		___lwmod
  1163 ;;		___wmul
  1164 ;;		_isdigit
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           
  1171                           ;psect for function _sprintf
  1172  003C                     _sprintf:
  1173                           
  1174                           ;incstack = 0
  1175                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1176                           ;sprintf@sp stored from wreg
  1177  003C  1283               	bcf	3,5	;RP0=0, select bank0
  1178  003D  1303               	bcf	3,6	;RP1=0, select bank0
  1179  003E  00B5               	movwf	sprintf@sp
  1180  003F                     l2180:
  1181                           
  1182                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const ch
      +                          ar * f, ...);D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 506: {;D:\MPLAB XC8 
      +                          compiler\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\MPLAB XC8 compiler\pic\so
      +                          urces\c90\common\doprnt.c: 512:  char c;;D:\MPLAB XC8 compiler\pic\sources\c90\common\do
      +                          prnt.c: 514:  int width;;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 521:  si
      +                          gned char prec;;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 525:  unsigned ch
      +                          ar flag;
  1183  003F  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1184  0040  00AE               	movwf	??_sprintf
  1185  0041  082E               	movf	??_sprintf,w
  1186  0042  00B1               	movwf	sprintf@ap
  1187                           
  1188                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1189  0043  2A2E               	goto	l2296
  1190  0044                     l2182:
  1191                           
  1192                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1193  0044  3025               	movlw	37
  1194  0045  0639               	xorwf	sprintf@c,w
  1195  0046  1903               	btfsc	3,2
  1196  0047  2849               	goto	u2621
  1197  0048  284A               	goto	u2620
  1198  0049                     u2621:
  1199  0049  2856               	goto	l2188
  1200  004A                     u2620:
  1201  004A                     l2184:
  1202                           
  1203                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 557:   {;D:\MPLAB XC8 compiler\p
      +                          ic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1204  004A  0839               	movf	sprintf@c,w
  1205  004B  00AE               	movwf	??_sprintf
  1206  004C  0835               	movf	sprintf@sp,w
  1207  004D  0084               	movwf	4
  1208  004E  082E               	movf	??_sprintf,w
  1209  004F  1383               	bcf	3,7	;select IRP bank0
  1210  0050  0080               	movwf	0
  1211  0051                     l2186:
  1212  0051  3001               	movlw	1
  1213  0052  00AE               	movwf	??_sprintf
  1214  0053  082E               	movf	??_sprintf,w
  1215  0054  07B5               	addwf	sprintf@sp,f
  1216                           
  1217                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 559:    continue;
  1218  0055  2A2E               	goto	l2296
  1219  0056                     l2188:
  1220                           
  1221                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1222  0056  01B6               	clrf	sprintf@width
  1223  0057  01B7               	clrf	sprintf@width+1
  1224                           
  1225                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1226  0058  01B2               	clrf	sprintf@flag
  1227  0059                     l2190:
  1228                           
  1229                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)*f))
      +                           {
  1230  0059  0829               	movf	sprintf@f,w
  1231  005A  0084               	movwf	4
  1232  005B  120A  118A  2553  120A  118A  	fcall	stringdir
  1233  0060  120A  118A  261C  120A  118A  	fcall	_isdigit
  1234  0065  1C03               	btfss	3,0
  1235  0066  2868               	goto	u2631
  1236  0067  2869               	goto	u2630
  1237  0068                     u2631:
  1238  0068  28A9               	goto	l2202
  1239  0069                     u2630:
  1240  0069                     l2192:
  1241                           
  1242                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  1243  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1244  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1245  006B  01B6               	clrf	sprintf@width
  1246  006C  01B7               	clrf	sprintf@width+1
  1247  006D                     l2194:
  1248                           
  1249                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  1250  006D  300A               	movlw	10
  1251  006E  00F3               	movwf	___wmul@multiplier
  1252  006F  3000               	movlw	0
  1253  0070  00F4               	movwf	___wmul@multiplier+1
  1254  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1255  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1256  0073  0837               	movf	sprintf@width+1,w
  1257  0074  00F6               	movwf	___wmul@multiplicand+1
  1258  0075  0836               	movf	sprintf@width,w
  1259  0076  00F5               	movwf	___wmul@multiplicand
  1260  0077  120A  118A  257E  120A  118A  	fcall	___wmul
  1261  007C  0874               	movf	?___wmul+1,w
  1262  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1263  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1264  007F  00B7               	movwf	sprintf@width+1
  1265  0080  0873               	movf	?___wmul,w
  1266  0081  00B6               	movwf	sprintf@width
  1267  0082                     l2196:
  1268                           
  1269                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - '0';
  1270  0082  0829               	movf	sprintf@f,w
  1271  0083  0084               	movwf	4
  1272  0084  120A  118A  2553  120A  118A  	fcall	stringdir
  1273  0089  3ED0               	addlw	208
  1274  008A  00AE               	movwf	??_sprintf
  1275  008B  30FF               	movlw	255
  1276  008C  1803               	skipnc
  1277  008D  3000               	movlw	0
  1278  008E  00AF               	movwf	??_sprintf+1
  1279  008F  082E               	movf	??_sprintf,w
  1280  0090  07B6               	addwf	sprintf@width,f
  1281  0091  1803               	skipnc
  1282  0092  0AB7               	incf	sprintf@width+1,f
  1283  0093  082F               	movf	??_sprintf+1,w
  1284  0094  07B7               	addwf	sprintf@width+1,f
  1285  0095                     l2198:
  1286  0095  3001               	movlw	1
  1287  0096  00AE               	movwf	??_sprintf
  1288  0097  082E               	movf	??_sprintf,w
  1289  0098  07A9               	addwf	sprintf@f,f
  1290  0099                     l2200:
  1291                           
  1292                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((unsigne
      +                          d)*f));
  1293  0099  0829               	movf	sprintf@f,w
  1294  009A  0084               	movwf	4
  1295  009B  120A  118A  2553  120A  118A  	fcall	stringdir
  1296  00A0  120A  118A  261C  120A  118A  	fcall	_isdigit
  1297  00A5  1803               	btfsc	3,0
  1298  00A6  28A8               	goto	u2641
  1299  00A7  28A9               	goto	u2640
  1300  00A8                     u2641:
  1301  00A8  286D               	goto	l2194
  1302  00A9                     u2640:
  1303  00A9                     l2202:
  1304                           
  1305                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
  1306  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1307  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1308  00AB  0829               	movf	sprintf@f,w
  1309  00AC  0084               	movwf	4
  1310  00AD  120A  118A  2553  120A  118A  	fcall	stringdir
  1311  00B2  3A2E               	xorlw	46
  1312  00B3  1D03               	skipz
  1313  00B4  28B6               	goto	u2651
  1314  00B5  28B7               	goto	u2650
  1315  00B6                     u2651:
  1316  00B6  28EE               	goto	l2216
  1317  00B7                     u2650:
  1318  00B7                     l2204:
  1319                           
  1320                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 630:    f++;
  1321  00B7  3001               	movlw	1
  1322  00B8  00AE               	movwf	??_sprintf
  1323  00B9  082E               	movf	??_sprintf,w
  1324  00BA  07A9               	addwf	sprintf@f,f
  1325  00BB                     l2206:
  1326                           
  1327                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 644:    {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1328  00BB  01B8               	clrf	sprintf@prec
  1329                           
  1330                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned
      +                          )*f)) {
  1331  00BC  28DD               	goto	l2214
  1332  00BD                     l2208:
  1333                           
  1334                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  1335  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1336  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1337  00BF  0838               	movf	sprintf@prec,w
  1338  00C0  00AE               	movwf	??_sprintf
  1339  00C1  082E               	movf	??_sprintf,w
  1340  00C2  00F3               	movwf	___bmul@multiplicand
  1341  00C3  300A               	movlw	10
  1342  00C4  120A  118A  25E1  120A  118A  	fcall	___bmul
  1343  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1344  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1345  00CB  00AF               	movwf	??_sprintf+1
  1346  00CC  082F               	movf	??_sprintf+1,w
  1347  00CD  00B8               	movwf	sprintf@prec
  1348  00CE                     l2210:
  1349                           
  1350                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0';
  1351  00CE  0829               	movf	sprintf@f,w
  1352  00CF  0084               	movwf	4
  1353  00D0  120A  118A  2553  120A  118A  	fcall	stringdir
  1354  00D5  3ED0               	addlw	-48
  1355  00D6  00AE               	movwf	??_sprintf
  1356  00D7  082E               	movf	??_sprintf,w
  1357  00D8  07B8               	addwf	sprintf@prec,f
  1358  00D9                     l2212:
  1359  00D9  3001               	movlw	1
  1360  00DA  00AE               	movwf	??_sprintf
  1361  00DB  082E               	movf	??_sprintf,w
  1362  00DC  07A9               	addwf	sprintf@f,f
  1363  00DD                     l2214:
  1364                           
  1365                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned
      +                          )*f)) {
  1366  00DD  0829               	movf	sprintf@f,w
  1367  00DE  0084               	movwf	4
  1368  00DF  120A  118A  2553  120A  118A  	fcall	stringdir
  1369  00E4  120A  118A  261C  120A  118A  	fcall	_isdigit
  1370  00E9  1803               	btfsc	3,0
  1371  00EA  28EC               	goto	u2661
  1372  00EB  28ED               	goto	u2660
  1373  00EC                     u2661:
  1374  00EC  28BD               	goto	l2208
  1375  00ED                     u2660:
  1376  00ED  28EF               	goto	l2220
  1377  00EE                     l2216:
  1378                           
  1379                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1380  00EE  01B8               	clrf	sprintf@prec
  1381  00EF                     l2220:
  1382  00EF  3001               	movlw	1
  1383  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1384  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1385  00F2  07A9               	addwf	sprintf@f,f
  1386  00F3  30FF               	movlw	-1
  1387  00F4  0729               	addwf	sprintf@f,w
  1388  00F5  0084               	movwf	4
  1389  00F6  120A  118A  2553  120A  118A  	fcall	stringdir
  1390  00FB  00B9               	movwf	sprintf@c
  1391  00FC  00AE               	movwf	??_sprintf
  1392  00FD  01AF               	clrf	??_sprintf+1
  1393                           
  1394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1395                           ; Switch size 1, requested type "simple"
  1396                           ; Number of cases is 1, Range of values is 0 to 0
  1397                           ; switch strategies available:
  1398                           ; Name         Instructions Cycles
  1399                           ; simple_byte            4     3 (average)
  1400                           ; direct_byte           11     8 (fixed)
  1401                           ; jumptable            260     6 (fixed)
  1402                           ;	Chosen strategy is simple_byte
  1403  00FE  082F               	movf	??_sprintf+1,w
  1404  00FF  3A00               	xorlw	0	; case 0
  1405  0100  1903               	skipnz
  1406  0101  2903               	goto	l2376
  1407  0102  2A2E               	goto	l2296
  1408  0103                     l2376:
  1409                           
  1410                           ; Switch size 1, requested type "simple"
  1411                           ; Number of cases is 3, Range of values is 0 to 105
  1412                           ; switch strategies available:
  1413                           ; Name         Instructions Cycles
  1414                           ; simple_byte           10     6 (average)
  1415                           ; jumptable            260     6 (fixed)
  1416                           ;	Chosen strategy is simple_byte
  1417  0103  082E               	movf	??_sprintf,w
  1418  0104  3A00               	xorlw	0	; case 0
  1419  0105  1903               	skipnz
  1420  0106  2A40               	goto	l2298
  1421  0107  3A64               	xorlw	100	; case 100
  1422  0108  1903               	skipnz
  1423  0109  290E               	goto	l2222
  1424  010A  3A0D               	xorlw	13	; case 105
  1425  010B  1903               	skipnz
  1426  010C  290E               	goto	l2222
  1427  010D  2A2E               	goto	l2296
  1428  010E                     l2222:
  1429                           
  1430                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1279:   {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned int)(*(int *)__va_arg((*(int 
      +                          **)ap), (int)0));
  1431  010E  0831               	movf	sprintf@ap,w
  1432  010F  0084               	movwf	4
  1433  0110  1383               	bcf	3,7	;select IRP bank0
  1434  0111  0800               	movf	0,w
  1435  0112  00B3               	movwf	sprintf@val
  1436  0113  0A84               	incf	4,f
  1437  0114  0800               	movf	0,w
  1438  0115  00B4               	movwf	sprintf@val+1
  1439  0116                     l2224:
  1440  0116  3002               	movlw	2
  1441  0117  00AE               	movwf	??_sprintf
  1442  0118  082E               	movf	??_sprintf,w
  1443  0119  07B1               	addwf	sprintf@ap,f
  1444  011A                     l2226:
  1445                           
  1446                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1287:    if((int)val < 0) {
  1447  011A  1FB4               	btfss	sprintf@val+1,7
  1448  011B  291D               	goto	u2671
  1449  011C  291E               	goto	u2670
  1450  011D                     u2671:
  1451  011D  2927               	goto	l2232
  1452  011E                     u2670:
  1453  011E                     l2228:
  1454                           
  1455                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
  1456  011E  3003               	movlw	3
  1457  011F  00AE               	movwf	??_sprintf
  1458  0120  082E               	movf	??_sprintf,w
  1459  0121  04B2               	iorwf	sprintf@flag,f
  1460  0122                     l2230:
  1461                           
  1462                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
  1463  0122  09B3               	comf	sprintf@val,f
  1464  0123  09B4               	comf	sprintf@val+1,f
  1465  0124  0AB3               	incf	sprintf@val,f
  1466  0125  1903               	skipnz
  1467  0126  0AB4               	incf	sprintf@val+1,f
  1468  0127                     l2232:
  1469                           
  1470                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1292:   };D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && val == 0)
  1471  0127  0838               	movf	sprintf@prec,w
  1472  0128  1D03               	btfss	3,2
  1473  0129  292B               	goto	u2681
  1474  012A  292C               	goto	u2680
  1475  012B                     u2681:
  1476  012B  2936               	goto	l2238
  1477  012C                     u2680:
  1478  012C                     l2234:
  1479  012C  0833               	movf	sprintf@val,w
  1480  012D  0434               	iorwf	sprintf@val+1,w
  1481  012E  1D03               	btfss	3,2
  1482  012F  2931               	goto	u2691
  1483  0130  2932               	goto	u2690
  1484  0131                     u2691:
  1485  0131  2936               	goto	l2238
  1486  0132                     u2690:
  1487  0132                     l2236:
  1488                           
  1489                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  1490  0132  3001               	movlw	1
  1491  0133  00AE               	movwf	??_sprintf
  1492  0134  082E               	movf	??_sprintf,w
  1493  0135  07B8               	addwf	sprintf@prec,f
  1494  0136                     l2238:
  1495                           
  1496                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeof
      +                           dpowers/sizeof dpowers[0] ; c++)
  1497  0136  01B9               	clrf	sprintf@c
  1498  0137  0AB9               	incf	sprintf@c,f
  1499  0138                     l2242:
  1500                           
  1501                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowers[c])
  1502  0138  0839               	movf	sprintf@c,w
  1503  0139  00AE               	movwf	??_sprintf
  1504  013A  072E               	addwf	??_sprintf,w
  1505  013B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1506  013C  0084               	movwf	4
  1507  013D  120A  118A  2553  120A  118A  	fcall	stringdir
  1508  0142  00AF               	movwf	??_sprintf+1
  1509  0143  120A  118A  2553  120A  118A  	fcall	stringdir
  1510  0148  00B0               	movwf	??_sprintf+2
  1511  0149  0830               	movf	??_sprintf+2,w
  1512  014A  0234               	subwf	sprintf@val+1,w
  1513  014B  1D03               	skipz
  1514  014C  294F               	goto	u2705
  1515  014D  082F               	movf	??_sprintf+1,w
  1516  014E  0233               	subwf	sprintf@val,w
  1517  014F                     u2705:
  1518  014F  1803               	skipnc
  1519  0150  2952               	goto	u2701
  1520  0151  2953               	goto	u2700
  1521  0152                     u2701:
  1522  0152  2954               	goto	l2246
  1523  0153                     u2700:
  1524  0153  295E               	goto	l2248
  1525  0154                     l2246:
  1526  0154  3001               	movlw	1
  1527  0155  00AE               	movwf	??_sprintf
  1528  0156  082E               	movf	??_sprintf,w
  1529  0157  07B9               	addwf	sprintf@c,f
  1530  0158  3005               	movlw	5
  1531  0159  0639               	xorwf	sprintf@c,w
  1532  015A  1D03               	btfss	3,2
  1533  015B  295D               	goto	u2711
  1534  015C  295E               	goto	u2710
  1535  015D                     u2711:
  1536  015D  2938               	goto	l2242
  1537  015E                     u2710:
  1538  015E                     l2248:
  1539                           
  1540                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
  1541  015E  0838               	movf	sprintf@prec,w
  1542  015F  00AE               	movwf	??_sprintf
  1543  0160  01AF               	clrf	??_sprintf+1
  1544  0161  1BAE               	btfsc	??_sprintf,7
  1545  0162  03AF               	decf	??_sprintf+1,f
  1546  0163  082F               	movf	??_sprintf+1,w
  1547  0164  3A80               	xorlw	128
  1548  0165  3C80               	sublw	128
  1549  0166  1D03               	skipz
  1550  0167  296A               	goto	u2725
  1551  0168  082E               	movf	??_sprintf,w
  1552  0169  0239               	subwf	sprintf@c,w
  1553  016A                     u2725:
  1554  016A  1803               	skipnc
  1555  016B  296D               	goto	u2721
  1556  016C  296E               	goto	u2720
  1557  016D                     u2721:
  1558  016D  2975               	goto	l2252
  1559  016E                     u2720:
  1560  016E                     l2250:
  1561                           
  1562                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1366:    c = (char)prec;
  1563  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1564  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0170  0838               	movf	sprintf@prec,w
  1566  0171  00AE               	movwf	??_sprintf
  1567  0172  082E               	movf	??_sprintf,w
  1568  0173  00B9               	movwf	sprintf@c
  1569  0174  298F               	goto	l2256
  1570  0175                     l2252:
  1571  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1573  0177  0838               	movf	sprintf@prec,w
  1574  0178  00AE               	movwf	??_sprintf
  1575  0179  01AF               	clrf	??_sprintf+1
  1576  017A  1BAE               	btfsc	??_sprintf,7
  1577  017B  03AF               	decf	??_sprintf+1,f
  1578  017C  082F               	movf	??_sprintf+1,w
  1579  017D  3A80               	xorlw	128
  1580  017E  00B0               	movwf	??_sprintf+2
  1581  017F  3080               	movlw	128
  1582  0180  0230               	subwf	??_sprintf+2,w
  1583  0181  1D03               	skipz
  1584  0182  2985               	goto	u2735
  1585  0183  0839               	movf	sprintf@c,w
  1586  0184  022E               	subwf	??_sprintf,w
  1587  0185                     u2735:
  1588  0185  1803               	skipnc
  1589  0186  2988               	goto	u2731
  1590  0187  2989               	goto	u2730
  1591  0188                     u2731:
  1592  0188  298F               	goto	l2256
  1593  0189                     u2730:
  1594  0189                     l2254:
  1595                           
  1596                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
  1597  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1598  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1599  018B  0839               	movf	sprintf@c,w
  1600  018C  00AE               	movwf	??_sprintf
  1601  018D  082E               	movf	??_sprintf,w
  1602  018E  00B8               	movwf	sprintf@prec
  1603  018F                     l2256:
  1604                           
  1605                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0x03)
  1606  018F  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0190  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0191  0836               	movf	sprintf@width,w
  1609  0192  0437               	iorwf	sprintf@width+1,w
  1610  0193  1903               	btfsc	3,2
  1611  0194  2996               	goto	u2741
  1612  0195  2997               	goto	u2740
  1613  0196                     u2741:
  1614  0196  29A3               	goto	l2268
  1615  0197                     u2740:
  1616  0197                     l2258:
  1617  0197  0832               	movf	sprintf@flag,w
  1618  0198  3903               	andlw	3
  1619  0199  1903               	btfsc	3,2
  1620  019A  299C               	goto	u2751
  1621  019B  299D               	goto	u2750
  1622  019C                     u2751:
  1623  019C  29A3               	goto	l2268
  1624  019D                     u2750:
  1625  019D                     l2260:
  1626                           
  1627                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1372:    width--;
  1628  019D  30FF               	movlw	255
  1629  019E  07B6               	addwf	sprintf@width,f
  1630  019F  1803               	skipnc
  1631  01A0  0AB7               	incf	sprintf@width+1,f
  1632  01A1  30FF               	movlw	255
  1633  01A2  07B7               	addwf	sprintf@width+1,f
  1634  01A3                     l2268:
  1635                           
  1636                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
  1637  01A3  0837               	movf	sprintf@width+1,w
  1638  01A4  3A80               	xorlw	128
  1639  01A5  3C80               	sublw	128
  1640  01A6  1D03               	skipz
  1641  01A7  29AA               	goto	u2765
  1642  01A8  0836               	movf	sprintf@width,w
  1643  01A9  0239               	subwf	sprintf@c,w
  1644  01AA                     u2765:
  1645  01AA  1803               	skipnc
  1646  01AB  29AD               	goto	u2761
  1647  01AC  29AE               	goto	u2760
  1648  01AD                     u2761:
  1649  01AD  29BA               	goto	l2272
  1650  01AE                     u2760:
  1651  01AE                     l2270:
  1652                           
  1653                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
  1654  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1655  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1656  01B0  0839               	movf	sprintf@c,w
  1657  01B1  00AE               	movwf	??_sprintf
  1658  01B2  01AF               	clrf	??_sprintf+1
  1659  01B3  082E               	movf	??_sprintf,w
  1660  01B4  02B6               	subwf	sprintf@width,f
  1661  01B5  082F               	movf	??_sprintf+1,w
  1662  01B6  1C03               	skipc
  1663  01B7  03B7               	decf	sprintf@width+1,f
  1664  01B8  02B7               	subwf	sprintf@width+1,f
  1665  01B9  29BE               	goto	l2274
  1666  01BA                     l2272:
  1667                           
  1668                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
  1669  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1670  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1671  01BC  01B6               	clrf	sprintf@width
  1672  01BD  01B7               	clrf	sprintf@width+1
  1673  01BE                     l2274:
  1674                           
  1675                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1448:   {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 1450:    if(width
  1676  01BE  0836               	movf	sprintf@width,w
  1677  01BF  0437               	iorwf	sprintf@width+1,w
  1678  01C0  1903               	btfsc	3,2
  1679  01C1  29C3               	goto	u2771
  1680  01C2  29C4               	goto	u2770
  1681  01C3                     u2771:
  1682  01C3  29DB               	goto	l2282
  1683  01C4                     u2770:
  1684  01C4                     l2276:
  1685                           
  1686                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')));
  1687  01C4  3020               	movlw	32
  1688  01C5  00AE               	movwf	??_sprintf
  1689  01C6  0835               	movf	sprintf@sp,w
  1690  01C7  0084               	movwf	4
  1691  01C8  082E               	movf	??_sprintf,w
  1692  01C9  1383               	bcf	3,7	;select IRP bank0
  1693  01CA  0080               	movwf	0
  1694  01CB                     l2278:
  1695  01CB  3001               	movlw	1
  1696  01CC  00AE               	movwf	??_sprintf
  1697  01CD  082E               	movf	??_sprintf,w
  1698  01CE  07B5               	addwf	sprintf@sp,f
  1699  01CF                     l2280:
  1700  01CF  30FF               	movlw	255
  1701  01D0  07B6               	addwf	sprintf@width,f
  1702  01D1  1803               	skipnc
  1703  01D2  0AB7               	incf	sprintf@width+1,f
  1704  01D3  30FF               	movlw	255
  1705  01D4  07B7               	addwf	sprintf@width+1,f
  1706  01D5  0836               	movf	sprintf@width,w
  1707  01D6  0437               	iorwf	sprintf@width+1,w
  1708  01D7  1D03               	btfss	3,2
  1709  01D8  29DA               	goto	u2781
  1710  01D9  29DB               	goto	u2780
  1711  01DA                     u2781:
  1712  01DA  29C4               	goto	l2276
  1713  01DB                     u2780:
  1714  01DB                     l2282:
  1715                           
  1716                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1717  01DB  0832               	movf	sprintf@flag,w
  1718  01DC  3903               	andlw	3
  1719  01DD  1903               	btfsc	3,2
  1720  01DE  29E0               	goto	u2791
  1721  01DF  29E1               	goto	u2790
  1722  01E0                     u2791:
  1723  01E0  2A25               	goto	l2294
  1724  01E1                     u2790:
  1725  01E1                     l2284:
  1726                           
  1727                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
  1728  01E1  302D               	movlw	45
  1729  01E2  00AE               	movwf	??_sprintf
  1730  01E3  0835               	movf	sprintf@sp,w
  1731  01E4  0084               	movwf	4
  1732  01E5  082E               	movf	??_sprintf,w
  1733  01E6  1383               	bcf	3,7	;select IRP bank0
  1734  01E7  0080               	movwf	0
  1735  01E8                     l2286:
  1736  01E8  3001               	movlw	1
  1737  01E9  00AE               	movwf	??_sprintf
  1738  01EA  082E               	movf	??_sprintf,w
  1739  01EB  07B5               	addwf	sprintf@sp,f
  1740  01EC  2A25               	goto	l2294
  1741  01ED                     l2288:
  1742                           
  1743                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1504:    {;D:\MPLAB XC8 compiler
      +                          \pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned char)prec]) % 1
      +                          0 + '0';
  1744  01ED  300A               	movlw	10
  1745  01EE  00A3               	movwf	___lwmod@divisor
  1746  01EF  3000               	movlw	0
  1747  01F0  00A4               	movwf	___lwmod@divisor+1
  1748  01F1  0838               	movf	sprintf@prec,w
  1749  01F2  00AE               	movwf	??_sprintf
  1750  01F3  072E               	addwf	??_sprintf,w
  1751  01F4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1752  01F5  0084               	movwf	4
  1753  01F6  120A  118A  2553  120A  118A  	fcall	stringdir
  1754  01FB  00F3               	movwf	___lwdiv@divisor
  1755  01FC  120A  118A  2553  120A  118A  	fcall	stringdir
  1756  0201  00F4               	movwf	___lwdiv@divisor+1
  1757  0202  0834               	movf	sprintf@val+1,w
  1758  0203  00F6               	movwf	___lwdiv@dividend+1
  1759  0204  0833               	movf	sprintf@val,w
  1760  0205  00F5               	movwf	___lwdiv@dividend
  1761  0206  120A  118A  2497  120A  118A  	fcall	___lwdiv
  1762  020B  0874               	movf	?___lwdiv+1,w
  1763  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1764  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1765  020E  00A6               	movwf	___lwmod@dividend+1
  1766  020F  0873               	movf	?___lwdiv,w
  1767  0210  00A5               	movwf	___lwmod@dividend
  1768  0211  120A  118A  24DD  120A  118A  	fcall	___lwmod
  1769  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1771  0218  0823               	movf	?___lwmod,w
  1772  0219  3E30               	addlw	48
  1773  021A  00AF               	movwf	??_sprintf+1
  1774  021B  082F               	movf	??_sprintf+1,w
  1775  021C  00B9               	movwf	sprintf@c
  1776  021D                     l2290:
  1777                           
  1778                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1549:    };D:\MPLAB XC8 compiler
      +                          \pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
  1779  021D  0839               	movf	sprintf@c,w
  1780  021E  00AE               	movwf	??_sprintf
  1781  021F  0835               	movf	sprintf@sp,w
  1782  0220  0084               	movwf	4
  1783  0221  082E               	movf	??_sprintf,w
  1784  0222  1383               	bcf	3,7	;select IRP bank0
  1785  0223  0080               	movwf	0
  1786  0224  29E8               	goto	l2286
  1787  0225                     l2294:
  1788                           
  1789                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1790  0225  30FF               	movlw	255
  1791  0226  00AE               	movwf	??_sprintf
  1792  0227  082E               	movf	??_sprintf,w
  1793  0228  07B8               	addwf	sprintf@prec,f
  1794  0229  0A38               	incf	sprintf@prec,w
  1795  022A  1D03               	btfss	3,2
  1796  022B  2A2D               	goto	u2801
  1797  022C  2A2E               	goto	u2800
  1798  022D                     u2801:
  1799  022D  29ED               	goto	l2288
  1800  022E                     u2800:
  1801  022E                     l2296:
  1802                           
  1803                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1804  022E  3001               	movlw	1
  1805  022F  07A9               	addwf	sprintf@f,f
  1806  0230  30FF               	movlw	-1
  1807  0231  0729               	addwf	sprintf@f,w
  1808  0232  0084               	movwf	4
  1809  0233  120A  118A  2553  120A  118A  	fcall	stringdir
  1810  0238  00AE               	movwf	??_sprintf
  1811  0239  082E               	movf	??_sprintf,w
  1812  023A  00B9               	movwf	sprintf@c
  1813  023B  0839               	movf	sprintf@c,w
  1814  023C  1D03               	btfss	3,2
  1815  023D  2A3F               	goto	u2811
  1816  023E  2A40               	goto	u2810
  1817  023F                     u2811:
  1818  023F  2844               	goto	l2182
  1819  0240                     u2810:
  1820  0240                     l2298:
  1821                           
  1822                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1823  0240  0835               	movf	sprintf@sp,w
  1824  0241  0084               	movwf	4
  1825  0242  1383               	bcf	3,7	;select IRP bank0
  1826  0243  0180               	clrf	0
  1827  0244                     l362:
  1828  0244  0008               	return
  1829  0245                     __end_of_sprintf:
  1830                           
  1831                           	psect	text2
  1832  061C                     __ptext2:	
  1833 ;; *************** function _isdigit *****************
  1834 ;; Defined at:
  1835 ;;		line 8 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\isdigit.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  c               1    wreg     unsigned char 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  c               1    4[COMMON] unsigned char 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;		None               void
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1849 ;;      Params:         0       0       0       0       0
  1850 ;;      Locals:         2       0       0       0       0
  1851 ;;      Temps:          0       0       0       0       0
  1852 ;;      Totals:         2       0       0       0       0
  1853 ;;Total ram usage:        2 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    2
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_sprintf
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           
  1864                           ;psect for function _isdigit
  1865  061C                     _isdigit:
  1866                           
  1867                           ;incstack = 0
  1868                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1869                           ;isdigit@c stored from wreg
  1870  061C  00F4               	movwf	isdigit@c
  1871  061D                     l1346:
  1872  061D  01F3               	clrf	_isdigit$714
  1873  061E                     l1348:
  1874  061E  303A               	movlw	58
  1875  061F  0274               	subwf	isdigit@c,w
  1876  0620  1803               	skipnc
  1877  0621  2E23               	goto	u871
  1878  0622  2E24               	goto	u870
  1879  0623                     u871:
  1880  0623  2E2C               	goto	l1354
  1881  0624                     u870:
  1882  0624                     l1350:
  1883  0624  3030               	movlw	48
  1884  0625  0274               	subwf	isdigit@c,w
  1885  0626  1C03               	skipc
  1886  0627  2E29               	goto	u881
  1887  0628  2E2A               	goto	u880
  1888  0629                     u881:
  1889  0629  2E2C               	goto	l1354
  1890  062A                     u880:
  1891  062A                     l1352:
  1892  062A  01F3               	clrf	_isdigit$714
  1893  062B  0AF3               	incf	_isdigit$714,f
  1894  062C                     l1354:
  1895  062C  0C73               	rrf	_isdigit$714,w
  1896  062D                     l794:
  1897  062D  0008               	return
  1898  062E                     __end_of_isdigit:
  1899                           
  1900                           	psect	text3
  1901  057E                     __ptext3:	
  1902 ;; *************** function ___wmul *****************
  1903 ;; Defined at:
  1904 ;;		line 15 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\Umul16.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  multiplier      2    3[COMMON] unsigned int 
  1907 ;;  multiplicand    2    5[COMMON] unsigned int 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  product         2    0[BANK0 ] unsigned int 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  2    3[COMMON] unsigned int 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, status,0
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1919 ;;      Params:         4       0       0       0       0
  1920 ;;      Locals:         0       2       0       0       0
  1921 ;;      Temps:          0       0       0       0       0
  1922 ;;      Totals:         4       2       0       0       0
  1923 ;;Total ram usage:        6 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    2
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_sprintf
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function ___wmul
  1935  057E                     ___wmul:
  1936  057E                     l2038:	
  1937                           ;incstack = 0
  1938                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1939                           
  1940  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1941  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1942  0580  01A0               	clrf	___wmul@product
  1943  0581  01A1               	clrf	___wmul@product+1
  1944  0582                     l2040:
  1945  0582  1C73               	btfss	___wmul@multiplier,0
  1946  0583  2D85               	goto	u2251
  1947  0584  2D86               	goto	u2250
  1948  0585                     u2251:
  1949  0585  2D8E               	goto	l366
  1950  0586                     u2250:
  1951  0586                     l2042:
  1952  0586  0875               	movf	___wmul@multiplicand,w
  1953  0587  1283               	bcf	3,5	;RP0=0, select bank0
  1954  0588  1303               	bcf	3,6	;RP1=0, select bank0
  1955  0589  07A0               	addwf	___wmul@product,f
  1956  058A  1803               	skipnc
  1957  058B  0AA1               	incf	___wmul@product+1,f
  1958  058C  0876               	movf	___wmul@multiplicand+1,w
  1959  058D  07A1               	addwf	___wmul@product+1,f
  1960  058E                     l366:
  1961  058E  3001               	movlw	1
  1962  058F                     u2265:
  1963  058F  1003               	clrc
  1964  0590  0DF5               	rlf	___wmul@multiplicand,f
  1965  0591  0DF6               	rlf	___wmul@multiplicand+1,f
  1966  0592  3EFF               	addlw	-1
  1967  0593  1D03               	skipz
  1968  0594  2D8F               	goto	u2265
  1969  0595                     l2044:
  1970  0595  3001               	movlw	1
  1971  0596                     u2275:
  1972  0596  1003               	clrc
  1973  0597  0CF4               	rrf	___wmul@multiplier+1,f
  1974  0598  0CF3               	rrf	___wmul@multiplier,f
  1975  0599  3EFF               	addlw	-1
  1976  059A  1D03               	skipz
  1977  059B  2D96               	goto	u2275
  1978  059C                     l2046:
  1979  059C  0873               	movf	___wmul@multiplier,w
  1980  059D  0474               	iorwf	___wmul@multiplier+1,w
  1981  059E  1D03               	btfss	3,2
  1982  059F  2DA1               	goto	u2281
  1983  05A0  2DA2               	goto	u2280
  1984  05A1                     u2281:
  1985  05A1  2D82               	goto	l2040
  1986  05A2                     u2280:
  1987  05A2                     l2048:
  1988  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  1989  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  1990  05A4  0821               	movf	___wmul@product+1,w
  1991  05A5  00F4               	movwf	?___wmul+1
  1992  05A6  0820               	movf	___wmul@product,w
  1993  05A7  00F3               	movwf	?___wmul
  1994  05A8                     l368:
  1995  05A8  0008               	return
  1996  05A9                     __end_of___wmul:
  1997                           
  1998                           	psect	text4
  1999  04DD                     __ptext4:	
  2000 ;; *************** function ___lwmod *****************
  2001 ;; Defined at:
  2002 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lwmod.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  divisor         2    3[BANK0 ] unsigned int 
  2005 ;;  dividend        2    5[BANK0 ] unsigned int 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  counter         1    8[BANK0 ] unsigned char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  2    3[BANK0 ] unsigned int 
  2010 ;; Registers used:
  2011 ;;		wreg, status,2, status,0
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2017 ;;      Params:         0       4       0       0       0
  2018 ;;      Locals:         0       1       0       0       0
  2019 ;;      Temps:          0       1       0       0       0
  2020 ;;      Totals:         0       6       0       0       0
  2021 ;;Total ram usage:        6 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    2
  2024 ;; This function calls:
  2025 ;;		Nothing
  2026 ;; This function is called by:
  2027 ;;		_sprintf
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           
  2032                           ;psect for function ___lwmod
  2033  04DD                     ___lwmod:
  2034  04DD                     l1476:	
  2035                           ;incstack = 0
  2036                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2037                           
  2038  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2039  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2040  04DF  0823               	movf	___lwmod@divisor,w
  2041  04E0  0424               	iorwf	___lwmod@divisor+1,w
  2042  04E1  1903               	btfsc	3,2
  2043  04E2  2CE4               	goto	u1191
  2044  04E3  2CE5               	goto	u1190
  2045  04E4                     u1191:
  2046  04E4  2D14               	goto	l1494
  2047  04E5                     u1190:
  2048  04E5                     l1478:
  2049  04E5  01A8               	clrf	___lwmod@counter
  2050  04E6  0AA8               	incf	___lwmod@counter,f
  2051  04E7  2CF3               	goto	l1484
  2052  04E8                     l1480:
  2053  04E8  3001               	movlw	1
  2054  04E9                     u1205:
  2055  04E9  1003               	clrc
  2056  04EA  0DA3               	rlf	___lwmod@divisor,f
  2057  04EB  0DA4               	rlf	___lwmod@divisor+1,f
  2058  04EC  3EFF               	addlw	-1
  2059  04ED  1D03               	skipz
  2060  04EE  2CE9               	goto	u1205
  2061  04EF                     l1482:
  2062  04EF  3001               	movlw	1
  2063  04F0  00A7               	movwf	??___lwmod
  2064  04F1  0827               	movf	??___lwmod,w
  2065  04F2  07A8               	addwf	___lwmod@counter,f
  2066  04F3                     l1484:
  2067  04F3  1FA4               	btfss	___lwmod@divisor+1,7
  2068  04F4  2CF6               	goto	u1211
  2069  04F5  2CF7               	goto	u1210
  2070  04F6                     u1211:
  2071  04F6  2CE8               	goto	l1480
  2072  04F7                     u1210:
  2073  04F7                     l1486:
  2074  04F7  0824               	movf	___lwmod@divisor+1,w
  2075  04F8  0226               	subwf	___lwmod@dividend+1,w
  2076  04F9  1D03               	skipz
  2077  04FA  2CFD               	goto	u1225
  2078  04FB  0823               	movf	___lwmod@divisor,w
  2079  04FC  0225               	subwf	___lwmod@dividend,w
  2080  04FD                     u1225:
  2081  04FD  1C03               	skipc
  2082  04FE  2D00               	goto	u1221
  2083  04FF  2D01               	goto	u1220
  2084  0500                     u1221:
  2085  0500  2D07               	goto	l1490
  2086  0501                     u1220:
  2087  0501                     l1488:
  2088  0501  0823               	movf	___lwmod@divisor,w
  2089  0502  02A5               	subwf	___lwmod@dividend,f
  2090  0503  0824               	movf	___lwmod@divisor+1,w
  2091  0504  1C03               	skipc
  2092  0505  03A6               	decf	___lwmod@dividend+1,f
  2093  0506  02A6               	subwf	___lwmod@dividend+1,f
  2094  0507                     l1490:
  2095  0507  3001               	movlw	1
  2096  0508                     u1235:
  2097  0508  1003               	clrc
  2098  0509  0CA4               	rrf	___lwmod@divisor+1,f
  2099  050A  0CA3               	rrf	___lwmod@divisor,f
  2100  050B  3EFF               	addlw	-1
  2101  050C  1D03               	skipz
  2102  050D  2D08               	goto	u1235
  2103  050E                     l1492:
  2104  050E  3001               	movlw	1
  2105  050F  02A8               	subwf	___lwmod@counter,f
  2106  0510  1D03               	btfss	3,2
  2107  0511  2D13               	goto	u1241
  2108  0512  2D14               	goto	u1240
  2109  0513                     u1241:
  2110  0513  2CF7               	goto	l1486
  2111  0514                     u1240:
  2112  0514                     l1494:
  2113  0514  0826               	movf	___lwmod@dividend+1,w
  2114  0515  00A4               	movwf	?___lwmod+1
  2115  0516  0825               	movf	___lwmod@dividend,w
  2116  0517  00A3               	movwf	?___lwmod
  2117  0518                     l784:
  2118  0518  0008               	return
  2119  0519                     __end_of___lwmod:
  2120                           
  2121                           	psect	text5
  2122  0497                     __ptext5:	
  2123 ;; *************** function ___lwdiv *****************
  2124 ;; Defined at:
  2125 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lwdiv.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  divisor         2    3[COMMON] unsigned int 
  2128 ;;  dividend        2    5[COMMON] unsigned int 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  quotient        2    1[BANK0 ] unsigned int 
  2131 ;;  counter         1    0[BANK0 ] unsigned char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  2    3[COMMON] unsigned int 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, status,0
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2141 ;;      Params:         4       0       0       0       0
  2142 ;;      Locals:         0       3       0       0       0
  2143 ;;      Temps:          1       0       0       0       0
  2144 ;;      Totals:         5       3       0       0       0
  2145 ;;Total ram usage:        8 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    2
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_sprintf
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           
  2156                           ;psect for function ___lwdiv
  2157  0497                     ___lwdiv:
  2158  0497                     l2116:	
  2159                           ;incstack = 0
  2160                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2161                           
  2162  0497  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0498  1303               	bcf	3,6	;RP1=0, select bank0
  2164  0499  01A1               	clrf	___lwdiv@quotient
  2165  049A  01A2               	clrf	___lwdiv@quotient+1
  2166  049B                     l2118:
  2167  049B  0873               	movf	___lwdiv@divisor,w
  2168  049C  0474               	iorwf	___lwdiv@divisor+1,w
  2169  049D  1903               	btfsc	3,2
  2170  049E  2CA0               	goto	u2461
  2171  049F  2CA1               	goto	u2460
  2172  04A0                     u2461:
  2173  04A0  2CD8               	goto	l2138
  2174  04A1                     u2460:
  2175  04A1                     l2120:
  2176  04A1  01A0               	clrf	___lwdiv@counter
  2177  04A2  0AA0               	incf	___lwdiv@counter,f
  2178  04A3  2CAF               	goto	l2126
  2179  04A4                     l2122:
  2180  04A4  3001               	movlw	1
  2181  04A5                     u2475:
  2182  04A5  1003               	clrc
  2183  04A6  0DF3               	rlf	___lwdiv@divisor,f
  2184  04A7  0DF4               	rlf	___lwdiv@divisor+1,f
  2185  04A8  3EFF               	addlw	-1
  2186  04A9  1D03               	skipz
  2187  04AA  2CA5               	goto	u2475
  2188  04AB                     l2124:
  2189  04AB  3001               	movlw	1
  2190  04AC  00F7               	movwf	??___lwdiv
  2191  04AD  0877               	movf	??___lwdiv,w
  2192  04AE  07A0               	addwf	___lwdiv@counter,f
  2193  04AF                     l2126:
  2194  04AF  1FF4               	btfss	___lwdiv@divisor+1,7
  2195  04B0  2CB2               	goto	u2481
  2196  04B1  2CB3               	goto	u2480
  2197  04B2                     u2481:
  2198  04B2  2CA4               	goto	l2122
  2199  04B3                     u2480:
  2200  04B3                     l2128:
  2201  04B3  3001               	movlw	1
  2202  04B4                     u2495:
  2203  04B4  1003               	clrc
  2204  04B5  0DA1               	rlf	___lwdiv@quotient,f
  2205  04B6  0DA2               	rlf	___lwdiv@quotient+1,f
  2206  04B7  3EFF               	addlw	-1
  2207  04B8  1D03               	skipz
  2208  04B9  2CB4               	goto	u2495
  2209  04BA  0874               	movf	___lwdiv@divisor+1,w
  2210  04BB  0276               	subwf	___lwdiv@dividend+1,w
  2211  04BC  1D03               	skipz
  2212  04BD  2CC0               	goto	u2505
  2213  04BE  0873               	movf	___lwdiv@divisor,w
  2214  04BF  0275               	subwf	___lwdiv@dividend,w
  2215  04C0                     u2505:
  2216  04C0  1C03               	skipc
  2217  04C1  2CC3               	goto	u2501
  2218  04C2  2CC4               	goto	u2500
  2219  04C3                     u2501:
  2220  04C3  2CCB               	goto	l2134
  2221  04C4                     u2500:
  2222  04C4                     l2130:
  2223  04C4  0873               	movf	___lwdiv@divisor,w
  2224  04C5  02F5               	subwf	___lwdiv@dividend,f
  2225  04C6  0874               	movf	___lwdiv@divisor+1,w
  2226  04C7  1C03               	skipc
  2227  04C8  03F6               	decf	___lwdiv@dividend+1,f
  2228  04C9  02F6               	subwf	___lwdiv@dividend+1,f
  2229  04CA                     l2132:
  2230  04CA  1421               	bsf	___lwdiv@quotient,0
  2231  04CB                     l2134:
  2232  04CB  3001               	movlw	1
  2233  04CC                     u2515:
  2234  04CC  1003               	clrc
  2235  04CD  0CF4               	rrf	___lwdiv@divisor+1,f
  2236  04CE  0CF3               	rrf	___lwdiv@divisor,f
  2237  04CF  3EFF               	addlw	-1
  2238  04D0  1D03               	skipz
  2239  04D1  2CCC               	goto	u2515
  2240  04D2                     l2136:
  2241  04D2  3001               	movlw	1
  2242  04D3  02A0               	subwf	___lwdiv@counter,f
  2243  04D4  1D03               	btfss	3,2
  2244  04D5  2CD7               	goto	u2521
  2245  04D6  2CD8               	goto	u2520
  2246  04D7                     u2521:
  2247  04D7  2CB3               	goto	l2128
  2248  04D8                     u2520:
  2249  04D8                     l2138:
  2250  04D8  0822               	movf	___lwdiv@quotient+1,w
  2251  04D9  00F4               	movwf	?___lwdiv+1
  2252  04DA  0821               	movf	___lwdiv@quotient,w
  2253  04DB  00F3               	movwf	?___lwdiv
  2254  04DC                     l774:
  2255  04DC  0008               	return
  2256  04DD                     __end_of___lwdiv:
  2257                           
  2258                           	psect	text6
  2259  05E1                     __ptext6:	
  2260 ;; *************** function ___bmul *****************
  2261 ;; Defined at:
  2262 ;;		line 4 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\Umul8.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  multiplier      1    wreg     unsigned char 
  2265 ;;  multiplicand    1    3[COMMON] unsigned char 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  multiplier      1    6[COMMON] unsigned char 
  2268 ;;  product         1    5[COMMON] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      unsigned char 
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, status,0
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2278 ;;      Params:         1       0       0       0       0
  2279 ;;      Locals:         2       0       0       0       0
  2280 ;;      Temps:          1       0       0       0       0
  2281 ;;      Totals:         4       0       0       0       0
  2282 ;;Total ram usage:        4 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    2
  2285 ;; This function calls:
  2286 ;;		Nothing
  2287 ;; This function is called by:
  2288 ;;		_sprintf
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           
  2293                           ;psect for function ___bmul
  2294  05E1                     ___bmul:
  2295                           
  2296                           ;incstack = 0
  2297                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2298                           ;___bmul@multiplier stored from wreg
  2299  05E1  00F6               	movwf	___bmul@multiplier
  2300  05E2                     l1372:
  2301  05E2  01F5               	clrf	___bmul@product
  2302  05E3                     l1374:
  2303  05E3  1C76               	btfss	___bmul@multiplier,0
  2304  05E4  2DE6               	goto	u931
  2305  05E5  2DE7               	goto	u930
  2306  05E6                     u931:
  2307  05E6  2DEB               	goto	l1378
  2308  05E7                     u930:
  2309  05E7                     l1376:
  2310  05E7  0873               	movf	___bmul@multiplicand,w
  2311  05E8  00F4               	movwf	??___bmul
  2312  05E9  0874               	movf	??___bmul,w
  2313  05EA  07F5               	addwf	___bmul@product,f
  2314  05EB                     l1378:
  2315  05EB  1003               	clrc
  2316  05EC  0DF3               	rlf	___bmul@multiplicand,f
  2317  05ED                     l1380:
  2318  05ED  1003               	clrc
  2319  05EE  0CF6               	rrf	___bmul@multiplier,f
  2320  05EF  0876               	movf	___bmul@multiplier,w
  2321  05F0  1D03               	btfss	3,2
  2322  05F1  2DF3               	goto	u941
  2323  05F2  2DF4               	goto	u940
  2324  05F3                     u941:
  2325  05F3  2DE3               	goto	l1374
  2326  05F4                     u940:
  2327  05F4                     l1382:
  2328  05F4  0875               	movf	___bmul@product,w
  2329  05F5                     l392:
  2330  05F5  0008               	return
  2331  05F6                     __end_of___bmul:
  2332                           
  2333                           	psect	text7
  2334  0609                     __ptext7:	
  2335 ;; *************** function _configIO *****************
  2336 ;; Defined at:
  2337 ;;		line 45 in file "pic16f.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;		None
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;		None
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		status,2
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2351 ;;      Params:         0       0       0       0       0
  2352 ;;      Locals:         0       0       0       0       0
  2353 ;;      Temps:          0       0       0       0       0
  2354 ;;      Totals:         0       0       0       0       0
  2355 ;;Total ram usage:        0 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    2
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_main
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           
  2366                           ;psect for function _configIO
  2367  0609                     _configIO:
  2368  0609                     l1498:	
  2369                           ;incstack = 0
  2370                           ; Regs used in _configIO: [status,2]
  2371                           
  2372                           
  2373                           ;pic16f.c: 46:     TRISB=0;
  2374  0609  1683               	bsf	3,5	;RP0=1, select bank1
  2375  060A  1303               	bcf	3,6	;RP1=0, select bank1
  2376  060B  0186               	clrf	6	;volatile
  2377                           
  2378                           ;pic16f.c: 47:     ANSEL=0;
  2379  060C  1683               	bsf	3,5	;RP0=1, select bank3
  2380  060D  1703               	bsf	3,6	;RP1=1, select bank3
  2381  060E  0188               	clrf	8	;volatile
  2382                           
  2383                           ;pic16f.c: 48:     ANSELH=0;
  2384  060F  0189               	clrf	9	;volatile
  2385                           
  2386                           ;pic16f.c: 49:     PORTB=0;
  2387  0610  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0611  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0612  0186               	clrf	6	;volatile
  2390  0613                     l1500:
  2391                           
  2392                           ;pic16f.c: 51:     INTCONbits.PEIE=1;
  2393  0613  170B               	bsf	11,6	;volatile
  2394  0614                     l1502:
  2395                           
  2396                           ;pic16f.c: 52:     PIE1bits.RCIE=1;
  2397  0614  1683               	bsf	3,5	;RP0=1, select bank1
  2398  0615  1303               	bcf	3,6	;RP1=0, select bank1
  2399  0616  168C               	bsf	12,5	;volatile
  2400  0617                     l1504:
  2401                           
  2402                           ;pic16f.c: 53:     PIR1bits.RCIF=0;
  2403  0617  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0618  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0619  128C               	bcf	12,5	;volatile
  2406  061A                     l1506:
  2407                           
  2408                           ;pic16f.c: 54:     INTCONbits.GIE=1;
  2409  061A  178B               	bsf	11,7	;volatile
  2410  061B                     l53:
  2411  061B  0008               	return
  2412  061C                     __end_of_configIO:
  2413                           
  2414                           	psect	text8
  2415  05A9                     __ptext8:	
  2416 ;; *************** function _Write_USART_String *****************
  2417 ;; Defined at:
  2418 ;;		line 34 in file "USART.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  a               1    wreg     PTR unsigned char 
  2421 ;;		 -> STR_1(12), 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  a               1    5[COMMON] PTR unsigned char 
  2424 ;;		 -> STR_1(12), 
  2425 ;;  i               1    6[COMMON] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2435 ;;      Params:         0       0       0       0       0
  2436 ;;      Locals:         2       0       0       0       0
  2437 ;;      Temps:          1       0       0       0       0
  2438 ;;      Totals:         3       0       0       0       0
  2439 ;;Total ram usage:        3 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    3
  2442 ;; This function calls:
  2443 ;;		_Write_USART
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function _Write_USART_String
  2451  05A9                     _Write_USART_String:
  2452                           
  2453                           ;incstack = 0
  2454                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2455                           ;Write_USART_String@a stored from wreg
  2456  05A9  00F5               	movwf	Write_USART_String@a
  2457  05AA                     l1546:
  2458                           
  2459                           ;USART.c: 35:     uint8_t i;;USART.c: 36:     for(i=0;a[i]!='\0';i++){
  2460  05AA  01F6               	clrf	Write_USART_String@i
  2461  05AB  2DBD               	goto	l1552
  2462  05AC                     l1548:
  2463                           
  2464                           ;USART.c: 37:         Write_USART(a[i]);
  2465  05AC  0876               	movf	Write_USART_String@i,w
  2466  05AD  0775               	addwf	Write_USART_String@a,w
  2467  05AE  0084               	movwf	4
  2468  05AF  120A  118A  2553  120A  118A  	fcall	stringdir
  2469  05B4  120A  118A  263D  120A  118A  	fcall	_Write_USART
  2470  05B9                     l1550:
  2471                           
  2472                           ;USART.c: 38:     }
  2473  05B9  3001               	movlw	1
  2474  05BA  00F4               	movwf	??_Write_USART_String
  2475  05BB  0874               	movf	??_Write_USART_String,w
  2476  05BC  07F6               	addwf	Write_USART_String@i,f
  2477  05BD                     l1552:
  2478  05BD  0876               	movf	Write_USART_String@i,w
  2479  05BE  0775               	addwf	Write_USART_String@a,w
  2480  05BF  0084               	movwf	4
  2481  05C0  120A  118A  2553  120A  118A  	fcall	stringdir
  2482  05C5  3A00               	xorlw	0
  2483  05C6  1D03               	skipz
  2484  05C7  2DC9               	goto	u1341
  2485  05C8  2DCA               	goto	u1340
  2486  05C9                     u1341:
  2487  05C9  2DAC               	goto	l1548
  2488  05CA                     u1340:
  2489  05CA                     l163:
  2490  05CA  0008               	return
  2491  05CB                     __end_of_Write_USART_String:
  2492                           
  2493                           	psect	text9
  2494  063D                     __ptext9:	
  2495 ;; *************** function _Write_USART *****************
  2496 ;; Defined at:
  2497 ;;		line 30 in file "USART.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  a               1    wreg     unsigned char 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  a               1    3[COMMON] unsigned char 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2511 ;;      Params:         0       0       0       0       0
  2512 ;;      Locals:         1       0       0       0       0
  2513 ;;      Temps:          0       0       0       0       0
  2514 ;;      Totals:         1       0       0       0       0
  2515 ;;Total ram usage:        1 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    2
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_main
  2522 ;;		_Write_USART_String
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _Write_USART
  2528  063D                     _Write_USART:
  2529                           
  2530                           ;incstack = 0
  2531                           ; Regs used in _Write_USART: [wreg]
  2532                           ;Write_USART@a stored from wreg
  2533  063D  00F3               	movwf	Write_USART@a
  2534  063E                     l1338:
  2535  063E                     l154:	
  2536                           ;USART.c: 31:     while(!TRMT);
  2537                           
  2538  063E  1683               	bsf	3,5	;RP0=1, select bank1
  2539  063F  1303               	bcf	3,6	;RP1=0, select bank1
  2540  0640  1C98               	btfss	24,1	;volatile
  2541  0641  2E43               	goto	u841
  2542  0642  2E44               	goto	u840
  2543  0643                     u841:
  2544  0643  2E3E               	goto	l154
  2545  0644                     u840:
  2546  0644                     l1340:
  2547                           
  2548                           ;USART.c: 32:     TXREG=a;
  2549  0644  0873               	movf	Write_USART@a,w
  2550  0645  1283               	bcf	3,5	;RP0=0, select bank0
  2551  0646  1303               	bcf	3,6	;RP1=0, select bank0
  2552  0647  0099               	movwf	25	;volatile
  2553  0648                     l157:
  2554  0648  0008               	return
  2555  0649                     __end_of_Write_USART:
  2556                           
  2557                           	psect	text10
  2558  0245                     __ptext10:	
  2559 ;; *************** function _USART_Init *****************
  2560 ;; Defined at:
  2561 ;;		line 9 in file "USART.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  baudrate        4   14[BANK0 ] const long 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  x               2    4[COMMON] unsigned int 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      unsigned char 
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, status,0, pclath, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2575 ;;      Params:         0       4       0       0       0
  2576 ;;      Locals:         2       0       0       0       0
  2577 ;;      Temps:          0      12       0       0       0
  2578 ;;      Totals:         2      16       0       0       0
  2579 ;;Total ram usage:       18 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:    3
  2582 ;; This function calls:
  2583 ;;		___aldiv
  2584 ;; This function is called by:
  2585 ;;		_main
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           
  2590                           ;psect for function _USART_Init
  2591  0245                     _USART_Init:
  2592  0245                     l2142:	
  2593                           ;incstack = 0
  2594                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  2595                           
  2596                           
  2597                           ;USART.c: 10:   unsigned int x;;USART.c: 11:   x = (8000000 - baudrate*64)/(baudrate*64)
      +                          ;
  2598  0245  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0246  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0247  082E               	movf	USART_Init@baudrate,w
  2601  0248  00B2               	movwf	??_USART_Init
  2602  0249  082F               	movf	USART_Init@baudrate+1,w
  2603  024A  00B3               	movwf	??_USART_Init+1
  2604  024B  0830               	movf	USART_Init@baudrate+2,w
  2605  024C  00B4               	movwf	??_USART_Init+2
  2606  024D  0831               	movf	USART_Init@baudrate+3,w
  2607  024E  00B5               	movwf	??_USART_Init+3
  2608  024F  3006               	movlw	6
  2609  0250                     u2535:
  2610  0250  1003               	clrc
  2611  0251  0DB2               	rlf	??_USART_Init,f
  2612  0252  0DB3               	rlf	??_USART_Init+1,f
  2613  0253  0DB4               	rlf	??_USART_Init+2,f
  2614  0254  0DB5               	rlf	??_USART_Init+3,f
  2615  0255                     u2530:
  2616  0255  3EFF               	addlw	-1
  2617  0256  1D03               	skipz
  2618  0257  2A50               	goto	u2535
  2619  0258  0835               	movf	??_USART_Init+3,w
  2620  0259  00A3               	movwf	___aldiv@divisor+3
  2621  025A  0834               	movf	??_USART_Init+2,w
  2622  025B  00A2               	movwf	___aldiv@divisor+2
  2623  025C  0833               	movf	??_USART_Init+1,w
  2624  025D  00A1               	movwf	___aldiv@divisor+1
  2625  025E  0832               	movf	??_USART_Init,w
  2626  025F  00A0               	movwf	___aldiv@divisor
  2627  0260  082E               	movf	USART_Init@baudrate,w
  2628  0261  00B6               	movwf	??_USART_Init+4
  2629  0262  082F               	movf	USART_Init@baudrate+1,w
  2630  0263  00B7               	movwf	??_USART_Init+5
  2631  0264  0830               	movf	USART_Init@baudrate+2,w
  2632  0265  00B8               	movwf	??_USART_Init+6
  2633  0266  0831               	movf	USART_Init@baudrate+3,w
  2634  0267  00B9               	movwf	??_USART_Init+7
  2635  0268  3006               	movlw	6
  2636  0269                     u2545:
  2637  0269  1003               	clrc
  2638  026A  0DB6               	rlf	??_USART_Init+4,f
  2639  026B  0DB7               	rlf	??_USART_Init+5,f
  2640  026C  0DB8               	rlf	??_USART_Init+6,f
  2641  026D  0DB9               	rlf	??_USART_Init+7,f
  2642  026E                     u2540:
  2643  026E  3EFF               	addlw	-1
  2644  026F  1D03               	skipz
  2645  0270  2A69               	goto	u2545
  2646  0271  3000               	movlw	0
  2647  0272  00BA               	movwf	??_USART_Init+8
  2648  0273  3012               	movlw	18
  2649  0274  00BB               	movwf	??_USART_Init+9
  2650  0275  307A               	movlw	122
  2651  0276  00BC               	movwf	??_USART_Init+10
  2652  0277  3000               	movlw	0
  2653  0278  00BD               	movwf	??_USART_Init+11
  2654  0279  0836               	movf	??_USART_Init+4,w
  2655  027A  02BA               	subwf	??_USART_Init+8,f
  2656  027B  0837               	movf	??_USART_Init+5,w
  2657  027C  1C03               	skipc
  2658  027D  0F37               	incfsz	??_USART_Init+5,w
  2659  027E  2A80               	goto	u2551
  2660  027F  2A81               	goto	u2552
  2661  0280                     u2551:
  2662  0280  02BB               	subwf	??_USART_Init+9,f
  2663  0281                     u2552:
  2664  0281  0838               	movf	??_USART_Init+6,w
  2665  0282  1C03               	skipc
  2666  0283  0F38               	incfsz	??_USART_Init+6,w
  2667  0284  2A86               	goto	u2553
  2668  0285  2A87               	goto	u2554
  2669  0286                     u2553:
  2670  0286  02BC               	subwf	??_USART_Init+10,f
  2671  0287                     u2554:
  2672  0287  0839               	movf	??_USART_Init+7,w
  2673  0288  1C03               	skipc
  2674  0289  0F39               	incfsz	??_USART_Init+7,w
  2675  028A  2A8C               	goto	u2555
  2676  028B  2A8D               	goto	u2556
  2677  028C                     u2555:
  2678  028C  02BD               	subwf	??_USART_Init+11,f
  2679  028D                     u2556:
  2680  028D  083D               	movf	??_USART_Init+11,w
  2681  028E  00A7               	movwf	___aldiv@dividend+3
  2682  028F  083C               	movf	??_USART_Init+10,w
  2683  0290  00A6               	movwf	___aldiv@dividend+2
  2684  0291  083B               	movf	??_USART_Init+9,w
  2685  0292  00A5               	movwf	___aldiv@dividend+1
  2686  0293  083A               	movf	??_USART_Init+8,w
  2687  0294  00A4               	movwf	___aldiv@dividend
  2688  0295  120A  118A  2321  120A  118A  	fcall	___aldiv
  2689  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2690  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2691  029C  0821               	movf	?___aldiv+1,w
  2692  029D  00F5               	movwf	USART_Init@x+1
  2693  029E  0820               	movf	?___aldiv,w
  2694  029F  00F4               	movwf	USART_Init@x
  2695  02A0                     l2144:
  2696                           
  2697                           ;USART.c: 12:   if(x>255)
  2698  02A0  3001               	movlw	1
  2699  02A1  0275               	subwf	USART_Init@x+1,w
  2700  02A2  3000               	movlw	0
  2701  02A3  1903               	skipnz
  2702  02A4  0274               	subwf	USART_Init@x,w
  2703  02A5  1C03               	skipc
  2704  02A6  2AA8               	goto	u2561
  2705  02A7  2AA9               	goto	u2560
  2706  02A8                     u2561:
  2707  02A8  2B05               	goto	l2150
  2708  02A9                     u2560:
  2709  02A9                     l2146:
  2710                           
  2711                           ;USART.c: 13:   {;USART.c: 14:     x = (8000000 - baudrate*16)/(baudrate*16);
  2712  02A9  082E               	movf	USART_Init@baudrate,w
  2713  02AA  00B2               	movwf	??_USART_Init
  2714  02AB  082F               	movf	USART_Init@baudrate+1,w
  2715  02AC  00B3               	movwf	??_USART_Init+1
  2716  02AD  0830               	movf	USART_Init@baudrate+2,w
  2717  02AE  00B4               	movwf	??_USART_Init+2
  2718  02AF  0831               	movf	USART_Init@baudrate+3,w
  2719  02B0  00B5               	movwf	??_USART_Init+3
  2720  02B1  3004               	movlw	4
  2721  02B2                     u2575:
  2722  02B2  1003               	clrc
  2723  02B3  0DB2               	rlf	??_USART_Init,f
  2724  02B4  0DB3               	rlf	??_USART_Init+1,f
  2725  02B5  0DB4               	rlf	??_USART_Init+2,f
  2726  02B6  0DB5               	rlf	??_USART_Init+3,f
  2727  02B7                     u2570:
  2728  02B7  3EFF               	addlw	-1
  2729  02B8  1D03               	skipz
  2730  02B9  2AB2               	goto	u2575
  2731  02BA  0835               	movf	??_USART_Init+3,w
  2732  02BB  00A3               	movwf	___aldiv@divisor+3
  2733  02BC  0834               	movf	??_USART_Init+2,w
  2734  02BD  00A2               	movwf	___aldiv@divisor+2
  2735  02BE  0833               	movf	??_USART_Init+1,w
  2736  02BF  00A1               	movwf	___aldiv@divisor+1
  2737  02C0  0832               	movf	??_USART_Init,w
  2738  02C1  00A0               	movwf	___aldiv@divisor
  2739  02C2  082E               	movf	USART_Init@baudrate,w
  2740  02C3  00B6               	movwf	??_USART_Init+4
  2741  02C4  082F               	movf	USART_Init@baudrate+1,w
  2742  02C5  00B7               	movwf	??_USART_Init+5
  2743  02C6  0830               	movf	USART_Init@baudrate+2,w
  2744  02C7  00B8               	movwf	??_USART_Init+6
  2745  02C8  0831               	movf	USART_Init@baudrate+3,w
  2746  02C9  00B9               	movwf	??_USART_Init+7
  2747  02CA  3004               	movlw	4
  2748  02CB                     u2585:
  2749  02CB  1003               	clrc
  2750  02CC  0DB6               	rlf	??_USART_Init+4,f
  2751  02CD  0DB7               	rlf	??_USART_Init+5,f
  2752  02CE  0DB8               	rlf	??_USART_Init+6,f
  2753  02CF  0DB9               	rlf	??_USART_Init+7,f
  2754  02D0                     u2580:
  2755  02D0  3EFF               	addlw	-1
  2756  02D1  1D03               	skipz
  2757  02D2  2ACB               	goto	u2585
  2758  02D3  3000               	movlw	0
  2759  02D4  00BA               	movwf	??_USART_Init+8
  2760  02D5  3012               	movlw	18
  2761  02D6  00BB               	movwf	??_USART_Init+9
  2762  02D7  307A               	movlw	122
  2763  02D8  00BC               	movwf	??_USART_Init+10
  2764  02D9  3000               	movlw	0
  2765  02DA  00BD               	movwf	??_USART_Init+11
  2766  02DB  0836               	movf	??_USART_Init+4,w
  2767  02DC  02BA               	subwf	??_USART_Init+8,f
  2768  02DD  0837               	movf	??_USART_Init+5,w
  2769  02DE  1C03               	skipc
  2770  02DF  0F37               	incfsz	??_USART_Init+5,w
  2771  02E0  2AE2               	goto	u2591
  2772  02E1  2AE3               	goto	u2592
  2773  02E2                     u2591:
  2774  02E2  02BB               	subwf	??_USART_Init+9,f
  2775  02E3                     u2592:
  2776  02E3  0838               	movf	??_USART_Init+6,w
  2777  02E4  1C03               	skipc
  2778  02E5  0F38               	incfsz	??_USART_Init+6,w
  2779  02E6  2AE8               	goto	u2593
  2780  02E7  2AE9               	goto	u2594
  2781  02E8                     u2593:
  2782  02E8  02BC               	subwf	??_USART_Init+10,f
  2783  02E9                     u2594:
  2784  02E9  0839               	movf	??_USART_Init+7,w
  2785  02EA  1C03               	skipc
  2786  02EB  0F39               	incfsz	??_USART_Init+7,w
  2787  02EC  2AEE               	goto	u2595
  2788  02ED  2AEF               	goto	u2596
  2789  02EE                     u2595:
  2790  02EE  02BD               	subwf	??_USART_Init+11,f
  2791  02EF                     u2596:
  2792  02EF  083D               	movf	??_USART_Init+11,w
  2793  02F0  00A7               	movwf	___aldiv@dividend+3
  2794  02F1  083C               	movf	??_USART_Init+10,w
  2795  02F2  00A6               	movwf	___aldiv@dividend+2
  2796  02F3  083B               	movf	??_USART_Init+9,w
  2797  02F4  00A5               	movwf	___aldiv@dividend+1
  2798  02F5  083A               	movf	??_USART_Init+8,w
  2799  02F6  00A4               	movwf	___aldiv@dividend
  2800  02F7  120A  118A  2321  120A  118A  	fcall	___aldiv
  2801  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2802  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2803  02FE  0821               	movf	?___aldiv+1,w
  2804  02FF  00F5               	movwf	USART_Init@x+1
  2805  0300  0820               	movf	?___aldiv,w
  2806  0301  00F4               	movwf	USART_Init@x
  2807  0302                     l2148:
  2808                           
  2809                           ;USART.c: 15:     BRGH = 1;
  2810  0302  1683               	bsf	3,5	;RP0=1, select bank1
  2811  0303  1303               	bcf	3,6	;RP1=0, select bank1
  2812  0304  1518               	bsf	24,2	;volatile
  2813  0305                     l2150:
  2814                           
  2815                           ;USART.c: 17:   if(x<256)
  2816  0305  3001               	movlw	1
  2817  0306  0275               	subwf	USART_Init@x+1,w
  2818  0307  3000               	movlw	0
  2819  0308  1903               	skipnz
  2820  0309  0274               	subwf	USART_Init@x,w
  2821  030A  1803               	skipnc
  2822  030B  2B0D               	goto	u2601
  2823  030C  2B0E               	goto	u2600
  2824  030D                     u2601:
  2825  030D  2B20               	goto	l151
  2826  030E                     u2600:
  2827  030E                     l2152:
  2828                           
  2829                           ;USART.c: 18:   {;USART.c: 19:     SPBRG = x;
  2830  030E  0874               	movf	USART_Init@x,w
  2831  030F  1683               	bsf	3,5	;RP0=1, select bank1
  2832  0310  1303               	bcf	3,6	;RP1=0, select bank1
  2833  0311  0099               	movwf	25	;volatile
  2834  0312                     l2154:
  2835                           
  2836                           ;USART.c: 20:     SYNC = 0;
  2837  0312  1218               	bcf	24,4	;volatile
  2838  0313                     l2156:
  2839                           
  2840                           ;USART.c: 21:     SPEN = 1;
  2841  0313  1283               	bcf	3,5	;RP0=0, select bank0
  2842  0314  1303               	bcf	3,6	;RP1=0, select bank0
  2843  0315  1798               	bsf	24,7	;volatile
  2844  0316                     l2158:
  2845                           
  2846                           ;USART.c: 22:     TRISC7 = 1;
  2847  0316  1683               	bsf	3,5	;RP0=1, select bank1
  2848  0317  1303               	bcf	3,6	;RP1=0, select bank1
  2849  0318  1787               	bsf	7,7	;volatile
  2850  0319                     l2160:
  2851                           
  2852                           ;USART.c: 23:     TRISC6 = 0;
  2853  0319  1307               	bcf	7,6	;volatile
  2854  031A                     l2162:
  2855                           
  2856                           ;USART.c: 24:     CREN = 1;
  2857  031A  1283               	bcf	3,5	;RP0=0, select bank0
  2858  031B  1303               	bcf	3,6	;RP1=0, select bank0
  2859  031C  1618               	bsf	24,4	;volatile
  2860  031D                     l2164:
  2861                           
  2862                           ;USART.c: 25:     TXEN = 1;
  2863  031D  1683               	bsf	3,5	;RP0=1, select bank1
  2864  031E  1303               	bcf	3,6	;RP1=0, select bank1
  2865  031F  1698               	bsf	24,5	;volatile
  2866  0320                     l151:
  2867  0320  0008               	return
  2868  0321                     __end_of_USART_Init:
  2869                           
  2870                           	psect	text11
  2871  0321                     __ptext11:	
  2872 ;; *************** function ___aldiv *****************
  2873 ;; Defined at:
  2874 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\aldiv.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  divisor         4    0[BANK0 ] long 
  2877 ;;  dividend        4    4[BANK0 ] long 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  quotient        4   10[BANK0 ] long 
  2880 ;;  sign            1    9[BANK0 ] unsigned char 
  2881 ;;  counter         1    8[BANK0 ] unsigned char 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  4    0[BANK0 ] long 
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2891 ;;      Params:         0       8       0       0       0
  2892 ;;      Locals:         0       6       0       0       0
  2893 ;;      Temps:          1       0       0       0       0
  2894 ;;      Totals:         1      14       0       0       0
  2895 ;;Total ram usage:       15 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    2
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_USART_Init
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           
  2906                           ;psect for function ___aldiv
  2907  0321                     ___aldiv:
  2908  0321                     l2076:	
  2909                           ;incstack = 0
  2910                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2911                           
  2912  0321  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0322  1303               	bcf	3,6	;RP1=0, select bank0
  2914  0323  01A9               	clrf	___aldiv@sign
  2915  0324                     l2078:
  2916  0324  1FA3               	btfss	___aldiv@divisor+3,7
  2917  0325  2B27               	goto	u2361
  2918  0326  2B28               	goto	u2360
  2919  0327                     u2361:
  2920  0327  2B35               	goto	l437
  2921  0328                     u2360:
  2922  0328                     l2080:
  2923  0328  09A0               	comf	___aldiv@divisor,f
  2924  0329  09A1               	comf	___aldiv@divisor+1,f
  2925  032A  09A2               	comf	___aldiv@divisor+2,f
  2926  032B  09A3               	comf	___aldiv@divisor+3,f
  2927  032C  0AA0               	incf	___aldiv@divisor,f
  2928  032D  1903               	skipnz
  2929  032E  0AA1               	incf	___aldiv@divisor+1,f
  2930  032F  1903               	skipnz
  2931  0330  0AA2               	incf	___aldiv@divisor+2,f
  2932  0331  1903               	skipnz
  2933  0332  0AA3               	incf	___aldiv@divisor+3,f
  2934  0333  01A9               	clrf	___aldiv@sign
  2935  0334  0AA9               	incf	___aldiv@sign,f
  2936  0335                     l437:
  2937  0335  1FA7               	btfss	___aldiv@dividend+3,7
  2938  0336  2B38               	goto	u2371
  2939  0337  2B39               	goto	u2370
  2940  0338                     u2371:
  2941  0338  2B48               	goto	l2086
  2942  0339                     u2370:
  2943  0339                     l2082:
  2944  0339  09A4               	comf	___aldiv@dividend,f
  2945  033A  09A5               	comf	___aldiv@dividend+1,f
  2946  033B  09A6               	comf	___aldiv@dividend+2,f
  2947  033C  09A7               	comf	___aldiv@dividend+3,f
  2948  033D  0AA4               	incf	___aldiv@dividend,f
  2949  033E  1903               	skipnz
  2950  033F  0AA5               	incf	___aldiv@dividend+1,f
  2951  0340  1903               	skipnz
  2952  0341  0AA6               	incf	___aldiv@dividend+2,f
  2953  0342  1903               	skipnz
  2954  0343  0AA7               	incf	___aldiv@dividend+3,f
  2955  0344                     l2084:
  2956  0344  3001               	movlw	1
  2957  0345  00F3               	movwf	??___aldiv
  2958  0346  0873               	movf	??___aldiv,w
  2959  0347  06A9               	xorwf	___aldiv@sign,f
  2960  0348                     l2086:
  2961  0348  3000               	movlw	0
  2962  0349  00AD               	movwf	___aldiv@quotient+3
  2963  034A  3000               	movlw	0
  2964  034B  00AC               	movwf	___aldiv@quotient+2
  2965  034C  3000               	movlw	0
  2966  034D  00AB               	movwf	___aldiv@quotient+1
  2967  034E  3000               	movlw	0
  2968  034F  00AA               	movwf	___aldiv@quotient
  2969  0350                     l2088:
  2970  0350  0823               	movf	___aldiv@divisor+3,w
  2971  0351  0422               	iorwf	___aldiv@divisor+2,w
  2972  0352  0421               	iorwf	___aldiv@divisor+1,w
  2973  0353  0420               	iorwf	___aldiv@divisor,w
  2974  0354  1903               	skipnz
  2975  0355  2B57               	goto	u2381
  2976  0356  2B58               	goto	u2380
  2977  0357                     u2381:
  2978  0357  2BA5               	goto	l2108
  2979  0358                     u2380:
  2980  0358                     l2090:
  2981  0358  01A8               	clrf	___aldiv@counter
  2982  0359  0AA8               	incf	___aldiv@counter,f
  2983  035A  2B68               	goto	l2094
  2984  035B                     l2092:
  2985  035B  3001               	movlw	1
  2986  035C  00F3               	movwf	??___aldiv
  2987  035D                     u2395:
  2988  035D  1003               	clrc
  2989  035E  0DA0               	rlf	___aldiv@divisor,f
  2990  035F  0DA1               	rlf	___aldiv@divisor+1,f
  2991  0360  0DA2               	rlf	___aldiv@divisor+2,f
  2992  0361  0DA3               	rlf	___aldiv@divisor+3,f
  2993  0362  0BF3               	decfsz	??___aldiv,f
  2994  0363  2B5D               	goto	u2395
  2995  0364  3001               	movlw	1
  2996  0365  00F3               	movwf	??___aldiv
  2997  0366  0873               	movf	??___aldiv,w
  2998  0367  07A8               	addwf	___aldiv@counter,f
  2999  0368                     l2094:
  3000  0368  1FA3               	btfss	___aldiv@divisor+3,7
  3001  0369  2B6B               	goto	u2401
  3002  036A  2B6C               	goto	u2400
  3003  036B                     u2401:
  3004  036B  2B5B               	goto	l2092
  3005  036C                     u2400:
  3006  036C                     l2096:
  3007  036C  3001               	movlw	1
  3008  036D  00F3               	movwf	??___aldiv
  3009  036E                     u2415:
  3010  036E  1003               	clrc
  3011  036F  0DAA               	rlf	___aldiv@quotient,f
  3012  0370  0DAB               	rlf	___aldiv@quotient+1,f
  3013  0371  0DAC               	rlf	___aldiv@quotient+2,f
  3014  0372  0DAD               	rlf	___aldiv@quotient+3,f
  3015  0373  0BF3               	decfsz	??___aldiv,f
  3016  0374  2B6E               	goto	u2415
  3017  0375                     l2098:
  3018  0375  0823               	movf	___aldiv@divisor+3,w
  3019  0376  0227               	subwf	___aldiv@dividend+3,w
  3020  0377  1D03               	skipz
  3021  0378  2B83               	goto	u2425
  3022  0379  0822               	movf	___aldiv@divisor+2,w
  3023  037A  0226               	subwf	___aldiv@dividend+2,w
  3024  037B  1D03               	skipz
  3025  037C  2B83               	goto	u2425
  3026  037D  0821               	movf	___aldiv@divisor+1,w
  3027  037E  0225               	subwf	___aldiv@dividend+1,w
  3028  037F  1D03               	skipz
  3029  0380  2B83               	goto	u2425
  3030  0381  0820               	movf	___aldiv@divisor,w
  3031  0382  0224               	subwf	___aldiv@dividend,w
  3032  0383                     u2425:
  3033  0383  1C03               	skipc
  3034  0384  2B86               	goto	u2421
  3035  0385  2B87               	goto	u2420
  3036  0386                     u2421:
  3037  0386  2B96               	goto	l2104
  3038  0387                     u2420:
  3039  0387                     l2100:
  3040  0387  0820               	movf	___aldiv@divisor,w
  3041  0388  02A4               	subwf	___aldiv@dividend,f
  3042  0389  0821               	movf	___aldiv@divisor+1,w
  3043  038A  1C03               	skipc
  3044  038B  0F21               	incfsz	___aldiv@divisor+1,w
  3045  038C  02A5               	subwf	___aldiv@dividend+1,f
  3046  038D  0822               	movf	___aldiv@divisor+2,w
  3047  038E  1C03               	skipc
  3048  038F  0F22               	incfsz	___aldiv@divisor+2,w
  3049  0390  02A6               	subwf	___aldiv@dividend+2,f
  3050  0391  0823               	movf	___aldiv@divisor+3,w
  3051  0392  1C03               	skipc
  3052  0393  0F23               	incfsz	___aldiv@divisor+3,w
  3053  0394  02A7               	subwf	___aldiv@dividend+3,f
  3054  0395                     l2102:
  3055  0395  142A               	bsf	___aldiv@quotient,0
  3056  0396                     l2104:
  3057  0396  3001               	movlw	1
  3058  0397                     u2435:
  3059  0397  1003               	clrc
  3060  0398  0CA3               	rrf	___aldiv@divisor+3,f
  3061  0399  0CA2               	rrf	___aldiv@divisor+2,f
  3062  039A  0CA1               	rrf	___aldiv@divisor+1,f
  3063  039B  0CA0               	rrf	___aldiv@divisor,f
  3064  039C  3EFF               	addlw	-1
  3065  039D  1D03               	skipz
  3066  039E  2B97               	goto	u2435
  3067  039F                     l2106:
  3068  039F  3001               	movlw	1
  3069  03A0  02A8               	subwf	___aldiv@counter,f
  3070  03A1  1D03               	btfss	3,2
  3071  03A2  2BA4               	goto	u2441
  3072  03A3  2BA5               	goto	u2440
  3073  03A4                     u2441:
  3074  03A4  2B6C               	goto	l2096
  3075  03A5                     u2440:
  3076  03A5                     l2108:
  3077  03A5  0829               	movf	___aldiv@sign,w
  3078  03A6  1903               	btfsc	3,2
  3079  03A7  2BA9               	goto	u2451
  3080  03A8  2BAA               	goto	u2450
  3081  03A9                     u2451:
  3082  03A9  2BB5               	goto	l2112
  3083  03AA                     u2450:
  3084  03AA                     l2110:
  3085  03AA  09AA               	comf	___aldiv@quotient,f
  3086  03AB  09AB               	comf	___aldiv@quotient+1,f
  3087  03AC  09AC               	comf	___aldiv@quotient+2,f
  3088  03AD  09AD               	comf	___aldiv@quotient+3,f
  3089  03AE  0AAA               	incf	___aldiv@quotient,f
  3090  03AF  1903               	skipnz
  3091  03B0  0AAB               	incf	___aldiv@quotient+1,f
  3092  03B1  1903               	skipnz
  3093  03B2  0AAC               	incf	___aldiv@quotient+2,f
  3094  03B3  1903               	skipnz
  3095  03B4  0AAD               	incf	___aldiv@quotient+3,f
  3096  03B5                     l2112:
  3097  03B5  082D               	movf	___aldiv@quotient+3,w
  3098  03B6  00A3               	movwf	?___aldiv+3
  3099  03B7  082C               	movf	___aldiv@quotient+2,w
  3100  03B8  00A2               	movwf	?___aldiv+2
  3101  03B9  082B               	movf	___aldiv@quotient+1,w
  3102  03BA  00A1               	movwf	?___aldiv+1
  3103  03BB  082A               	movf	___aldiv@quotient,w
  3104  03BC  00A0               	movwf	?___aldiv
  3105  03BD                     l447:
  3106  03BD  0008               	return
  3107  03BE                     __end_of___aldiv:
  3108                           
  3109                           	psect	text12
  3110  0519                     __ptext12:	
  3111 ;; *************** function _I2C_Master_Init *****************
  3112 ;; Defined at:
  3113 ;;		line 16 in file "I2C.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  c               4   13[BANK0 ] const unsigned long 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;		None
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1    wreg      void 
  3120 ;; Registers used:
  3121 ;;		wreg, status,2, status,0, pclath, cstack
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3127 ;;      Params:         0       4       0       0       0
  3128 ;;      Locals:         0       0       0       0       0
  3129 ;;      Temps:          4       0       0       0       0
  3130 ;;      Totals:         4       4       0       0       0
  3131 ;;Total ram usage:        8 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    3
  3134 ;; This function calls:
  3135 ;;		___lldiv
  3136 ;; This function is called by:
  3137 ;;		_main
  3138 ;;		_aht_begin
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           
  3143                           ;psect for function _I2C_Master_Init
  3144  0519                     _I2C_Master_Init:
  3145  0519                     l2168:	
  3146                           ;incstack = 0
  3147                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3148                           
  3149                           
  3150                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  3151  0519  3028               	movlw	40
  3152  051A  1283               	bcf	3,5	;RP0=0, select bank0
  3153  051B  1303               	bcf	3,6	;RP1=0, select bank0
  3154  051C  0094               	movwf	20	;volatile
  3155  051D                     l2170:
  3156                           
  3157                           ;I2C.c: 19:     SSPCON2 = 0;
  3158  051D  1683               	bsf	3,5	;RP0=1, select bank1
  3159  051E  1303               	bcf	3,6	;RP1=0, select bank1
  3160  051F  0191               	clrf	17	;volatile
  3161  0520                     l2172:
  3162                           
  3163                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  3164  0520  1283               	bcf	3,5	;RP0=0, select bank0
  3165  0521  1303               	bcf	3,6	;RP1=0, select bank0
  3166  0522  082D               	movf	I2C_Master_Init@c,w
  3167  0523  00F4               	movwf	??_I2C_Master_Init
  3168  0524  082E               	movf	I2C_Master_Init@c+1,w
  3169  0525  00F5               	movwf	??_I2C_Master_Init+1
  3170  0526  082F               	movf	I2C_Master_Init@c+2,w
  3171  0527  00F6               	movwf	??_I2C_Master_Init+2
  3172  0528  0830               	movf	I2C_Master_Init@c+3,w
  3173  0529  00F7               	movwf	??_I2C_Master_Init+3
  3174  052A  3002               	movlw	2
  3175  052B                     u2615:
  3176  052B  1003               	clrc
  3177  052C  0DF4               	rlf	??_I2C_Master_Init,f
  3178  052D  0DF5               	rlf	??_I2C_Master_Init+1,f
  3179  052E  0DF6               	rlf	??_I2C_Master_Init+2,f
  3180  052F  0DF7               	rlf	??_I2C_Master_Init+3,f
  3181  0530                     u2610:
  3182  0530  3EFF               	addlw	-1
  3183  0531  1D03               	skipz
  3184  0532  2D2B               	goto	u2615
  3185  0533  0877               	movf	??_I2C_Master_Init+3,w
  3186  0534  00A3               	movwf	___lldiv@divisor+3
  3187  0535  0876               	movf	??_I2C_Master_Init+2,w
  3188  0536  00A2               	movwf	___lldiv@divisor+2
  3189  0537  0875               	movf	??_I2C_Master_Init+1,w
  3190  0538  00A1               	movwf	___lldiv@divisor+1
  3191  0539  0874               	movf	??_I2C_Master_Init,w
  3192  053A  00A0               	movwf	___lldiv@divisor
  3193  053B  3000               	movlw	0
  3194  053C  00A7               	movwf	___lldiv@dividend+3
  3195  053D  307A               	movlw	122
  3196  053E  00A6               	movwf	___lldiv@dividend+2
  3197  053F  3012               	movlw	18
  3198  0540  00A5               	movwf	___lldiv@dividend+1
  3199  0541  3000               	movlw	0
  3200  0542  00A4               	movwf	___lldiv@dividend
  3201  0543  120A  118A  242F  120A  118A  	fcall	___lldiv
  3202  0548  1283               	bcf	3,5	;RP0=0, select bank0
  3203  0549  1303               	bcf	3,6	;RP1=0, select bank0
  3204  054A  0820               	movf	?___lldiv,w
  3205  054B  3EFF               	addlw	255
  3206  054C  1683               	bsf	3,5	;RP0=1, select bank1
  3207  054D  1303               	bcf	3,6	;RP1=0, select bank1
  3208  054E  0093               	movwf	19	;volatile
  3209  054F                     l2174:
  3210                           
  3211                           ;I2C.c: 21:     SSPSTAT = 0;
  3212  054F  0194               	clrf	20	;volatile
  3213  0550                     l2176:
  3214                           
  3215                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3216  0550  1587               	bsf	7,3	;volatile
  3217  0551                     l2178:
  3218                           
  3219                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3220  0551  1607               	bsf	7,4	;volatile
  3221  0552                     l96:
  3222  0552  0008               	return
  3223  0553                     __end_of_I2C_Master_Init:
  3224                           
  3225                           	psect	text13
  3226  042F                     __ptext13:	
  3227 ;; *************** function ___lldiv *****************
  3228 ;; Defined at:
  3229 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\__lldiv.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  divisor         4    0[BANK0 ] unsigned long 
  3232 ;;  dividend        4    4[BANK0 ] unsigned long 
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;  quotient        4    8[BANK0 ] unsigned long 
  3235 ;;  counter         1   12[BANK0 ] unsigned char 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  4    0[BANK0 ] unsigned long 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3245 ;;      Params:         0       8       0       0       0
  3246 ;;      Locals:         0       5       0       0       0
  3247 ;;      Temps:          1       0       0       0       0
  3248 ;;      Totals:         1      13       0       0       0
  3249 ;;Total ram usage:       14 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:    2
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_I2C_Master_Init
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           
  3260                           ;psect for function ___lldiv
  3261  042F                     ___lldiv:
  3262  042F                     l2052:	
  3263                           ;incstack = 0
  3264                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3265                           
  3266  042F  3000               	movlw	0
  3267  0430  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0431  1303               	bcf	3,6	;RP1=0, select bank0
  3269  0432  00AB               	movwf	___lldiv@quotient+3
  3270  0433  3000               	movlw	0
  3271  0434  00AA               	movwf	___lldiv@quotient+2
  3272  0435  3000               	movlw	0
  3273  0436  00A9               	movwf	___lldiv@quotient+1
  3274  0437  3000               	movlw	0
  3275  0438  00A8               	movwf	___lldiv@quotient
  3276  0439  0823               	movf	___lldiv@divisor+3,w
  3277  043A  0422               	iorwf	___lldiv@divisor+2,w
  3278  043B  0421               	iorwf	___lldiv@divisor+1,w
  3279  043C  0420               	iorwf	___lldiv@divisor,w
  3280  043D  1903               	skipnz
  3281  043E  2C40               	goto	u2291
  3282  043F  2C41               	goto	u2290
  3283  0440                     u2291:
  3284  0440  2C8E               	goto	l2072
  3285  0441                     u2290:
  3286  0441                     l2054:
  3287  0441  01AC               	clrf	___lldiv@counter
  3288  0442  0AAC               	incf	___lldiv@counter,f
  3289  0443  2C51               	goto	l2058
  3290  0444                     l2056:
  3291  0444  3001               	movlw	1
  3292  0445  00F3               	movwf	??___lldiv
  3293  0446                     u2305:
  3294  0446  1003               	clrc
  3295  0447  0DA0               	rlf	___lldiv@divisor,f
  3296  0448  0DA1               	rlf	___lldiv@divisor+1,f
  3297  0449  0DA2               	rlf	___lldiv@divisor+2,f
  3298  044A  0DA3               	rlf	___lldiv@divisor+3,f
  3299  044B  0BF3               	decfsz	??___lldiv,f
  3300  044C  2C46               	goto	u2305
  3301  044D  3001               	movlw	1
  3302  044E  00F3               	movwf	??___lldiv
  3303  044F  0873               	movf	??___lldiv,w
  3304  0450  07AC               	addwf	___lldiv@counter,f
  3305  0451                     l2058:
  3306  0451  1FA3               	btfss	___lldiv@divisor+3,7
  3307  0452  2C54               	goto	u2311
  3308  0453  2C55               	goto	u2310
  3309  0454                     u2311:
  3310  0454  2C44               	goto	l2056
  3311  0455                     u2310:
  3312  0455                     l2060:
  3313  0455  3001               	movlw	1
  3314  0456  00F3               	movwf	??___lldiv
  3315  0457                     u2325:
  3316  0457  1003               	clrc
  3317  0458  0DA8               	rlf	___lldiv@quotient,f
  3318  0459  0DA9               	rlf	___lldiv@quotient+1,f
  3319  045A  0DAA               	rlf	___lldiv@quotient+2,f
  3320  045B  0DAB               	rlf	___lldiv@quotient+3,f
  3321  045C  0BF3               	decfsz	??___lldiv,f
  3322  045D  2C57               	goto	u2325
  3323  045E                     l2062:
  3324  045E  0823               	movf	___lldiv@divisor+3,w
  3325  045F  0227               	subwf	___lldiv@dividend+3,w
  3326  0460  1D03               	skipz
  3327  0461  2C6C               	goto	u2335
  3328  0462  0822               	movf	___lldiv@divisor+2,w
  3329  0463  0226               	subwf	___lldiv@dividend+2,w
  3330  0464  1D03               	skipz
  3331  0465  2C6C               	goto	u2335
  3332  0466  0821               	movf	___lldiv@divisor+1,w
  3333  0467  0225               	subwf	___lldiv@dividend+1,w
  3334  0468  1D03               	skipz
  3335  0469  2C6C               	goto	u2335
  3336  046A  0820               	movf	___lldiv@divisor,w
  3337  046B  0224               	subwf	___lldiv@dividend,w
  3338  046C                     u2335:
  3339  046C  1C03               	skipc
  3340  046D  2C6F               	goto	u2331
  3341  046E  2C70               	goto	u2330
  3342  046F                     u2331:
  3343  046F  2C7F               	goto	l2068
  3344  0470                     u2330:
  3345  0470                     l2064:
  3346  0470  0820               	movf	___lldiv@divisor,w
  3347  0471  02A4               	subwf	___lldiv@dividend,f
  3348  0472  0821               	movf	___lldiv@divisor+1,w
  3349  0473  1C03               	skipc
  3350  0474  0F21               	incfsz	___lldiv@divisor+1,w
  3351  0475  02A5               	subwf	___lldiv@dividend+1,f
  3352  0476  0822               	movf	___lldiv@divisor+2,w
  3353  0477  1C03               	skipc
  3354  0478  0F22               	incfsz	___lldiv@divisor+2,w
  3355  0479  02A6               	subwf	___lldiv@dividend+2,f
  3356  047A  0823               	movf	___lldiv@divisor+3,w
  3357  047B  1C03               	skipc
  3358  047C  0F23               	incfsz	___lldiv@divisor+3,w
  3359  047D  02A7               	subwf	___lldiv@dividend+3,f
  3360  047E                     l2066:
  3361  047E  1428               	bsf	___lldiv@quotient,0
  3362  047F                     l2068:
  3363  047F  3001               	movlw	1
  3364  0480                     u2345:
  3365  0480  1003               	clrc
  3366  0481  0CA3               	rrf	___lldiv@divisor+3,f
  3367  0482  0CA2               	rrf	___lldiv@divisor+2,f
  3368  0483  0CA1               	rrf	___lldiv@divisor+1,f
  3369  0484  0CA0               	rrf	___lldiv@divisor,f
  3370  0485  3EFF               	addlw	-1
  3371  0486  1D03               	skipz
  3372  0487  2C80               	goto	u2345
  3373  0488                     l2070:
  3374  0488  3001               	movlw	1
  3375  0489  02AC               	subwf	___lldiv@counter,f
  3376  048A  1D03               	btfss	3,2
  3377  048B  2C8D               	goto	u2351
  3378  048C  2C8E               	goto	u2350
  3379  048D                     u2351:
  3380  048D  2C55               	goto	l2060
  3381  048E                     u2350:
  3382  048E                     l2072:
  3383  048E  082B               	movf	___lldiv@quotient+3,w
  3384  048F  00A3               	movwf	?___lldiv+3
  3385  0490  082A               	movf	___lldiv@quotient+2,w
  3386  0491  00A2               	movwf	?___lldiv+2
  3387  0492  0829               	movf	___lldiv@quotient+1,w
  3388  0493  00A1               	movwf	?___lldiv+1
  3389  0494  0828               	movf	___lldiv@quotient,w
  3390  0495  00A0               	movwf	?___lldiv
  3391  0496                     l402:
  3392  0496  0008               	return
  3393  0497                     __end_of___lldiv:
  3394                           
  3395                           	psect	text14
  3396  05CB                     __ptext14:	
  3397 ;; *************** function _ISR *****************
  3398 ;; Defined at:
  3399 ;;		line 57 in file "pic16f.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg, pclath, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3413 ;;      Params:         0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0
  3415 ;;      Temps:          3       0       0       0       0
  3416 ;;      Totals:         3       0       0       0       0
  3417 ;;Total ram usage:        3 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    1
  3420 ;; This function calls:
  3421 ;;		_Read_USART
  3422 ;; This function is called by:
  3423 ;;		Interrupt level 1
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           
  3428                           ;psect for function _ISR
  3429  05CB                     _ISR:
  3430  05CB                     i1l1194:
  3431                           
  3432                           ;pic16f.c: 58:     if (RCIF==1){
  3433  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  3434  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  3435  05CD  1E8C               	btfss	12,5	;volatile
  3436  05CE  2DD0               	goto	u74_21
  3437  05CF  2DD1               	goto	u74_20
  3438  05D0                     u74_21:
  3439  05D0  2DDA               	goto	i1l59
  3440  05D1                     u74_20:
  3441  05D1                     i1l1196:
  3442                           
  3443                           ;pic16f.c: 59:         RCIF=0;
  3444  05D1  128C               	bcf	12,5	;volatile
  3445  05D2                     i1l1198:
  3446                           
  3447                           ;pic16f.c: 60:         LecturaUSART=Read_USART();
  3448  05D2  120A  118A  2651  120A  118A  	fcall	_Read_USART
  3449  05D7  00F0               	movwf	??_ISR
  3450  05D8  0870               	movf	??_ISR,w
  3451  05D9  00FA               	movwf	_LecturaUSART
  3452  05DA                     i1l59:
  3453  05DA  0872               	movf	??_ISR+2,w
  3454  05DB  008A               	movwf	10
  3455  05DC  0E71               	swapf	??_ISR+1,w
  3456  05DD  0083               	movwf	3
  3457  05DE  0EFE               	swapf	btemp,f
  3458  05DF  0E7E               	swapf	btemp,w
  3459  05E0  0009               	retfie
  3460  05E1                     __end_of_ISR:
  3461                           
  3462                           	psect	intentry
  3463  0004                     __pintentry:	
  3464                           ;incstack = 0
  3465                           ; Regs used in _ISR: [wreg+pclath+cstack]
  3466                           
  3467  0004                     interrupt_function:
  3468  007E                     saved_w	set	btemp
  3469  0004  00FE               	movwf	btemp
  3470  0005  0E03               	swapf	3,w
  3471  0006  00F1               	movwf	??_ISR+1
  3472  0007  080A               	movf	10,w
  3473  0008  00F2               	movwf	??_ISR+2
  3474  0009  120A  118A  2DCB   	ljmp	_ISR
  3475                           
  3476                           	psect	text15
  3477  0651                     __ptext15:	
  3478 ;; *************** function _Read_USART *****************
  3479 ;; Defined at:
  3480 ;;		line 40 in file "USART.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      unsigned char 
  3487 ;; Registers used:
  3488 ;;		wreg
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3494 ;;      Params:         0       0       0       0       0
  3495 ;;      Locals:         0       0       0       0       0
  3496 ;;      Temps:          0       0       0       0       0
  3497 ;;      Totals:         0       0       0       0       0
  3498 ;;Total ram usage:        0 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_ISR
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           
  3508                           ;psect for function _Read_USART
  3509  0651                     _Read_USART:
  3510  0651                     i1l986:	
  3511                           ;incstack = 0
  3512                           ; Regs used in _Read_USART: [wreg]
  3513                           
  3514  0651                     i1l166:	
  3515                           ;USART.c: 41:   while(!RCIF);
  3516                           
  3517  0651  1283               	bcf	3,5	;RP0=0, select bank0
  3518  0652  1303               	bcf	3,6	;RP1=0, select bank0
  3519  0653  1E8C               	btfss	12,5	;volatile
  3520  0654  2E56               	goto	u42_21
  3521  0655  2E57               	goto	u42_20
  3522  0656                     u42_21:
  3523  0656  2E51               	goto	i1l166
  3524  0657                     u42_20:
  3525  0657                     i1l988:
  3526                           
  3527                           ;USART.c: 42:   return RCREG;
  3528  0657  081A               	movf	26,w	;volatile
  3529  0658                     i1l169:
  3530  0658  0008               	return
  3531  0659                     __end_of_Read_USART:
  3532  0002                     
  3533                           	psect	functab
  3534  0036                     __pfunctab:
  3535  0036                     __fptable:
  3536  0036                     fptable:
  3537  0036  00FF               	movwf	(btemp+1)& (0+127)
  3538  0037  3000               	movlw	high fptable
  3539  0038  008A               	movwf	10
  3540  0039  087F               	movf	(btemp+1)& (0+127),w
  3541  003A  0782               	addwf	2,f
  3542  003B                     fpbase:
  3543  003B  283B               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  3544  003C                     __end_of__fptable:
  3545  007E                     btemp	set	126	;btemp
  3546  007E                     wtemp0	set	126
  3547                           
  3548                           	psect	config
  3549                           
  3550                           ;Config register CONFIG1 @ 0x2007
  3551                           ;	Oscillator Selection bits
  3552                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3553                           ;	Watchdog Timer Enable bit
  3554                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3555                           ;	Power-up Timer Enable bit
  3556                           ;	PWRTE = OFF, PWRT disabled
  3557                           ;	RE3/MCLR pin function select bit
  3558                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3559                           ;	Code Protection bit
  3560                           ;	CP = OFF, Program memory code protection is disabled
  3561                           ;	Data Code Protection bit
  3562                           ;	CPD = OFF, Data memory code protection is disabled
  3563                           ;	Brown Out Reset Selection bits
  3564                           ;	BOREN = OFF, BOR disabled
  3565                           ;	Internal External Switchover bit
  3566                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3567                           ;	Fail-Safe Clock Monitor Enabled bit
  3568                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3569                           ;	Low Voltage Programming Enable bit
  3570                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3571                           ;	In-Circuit Debugger Mode bit
  3572                           ;	DEBUG = 0x1, unprogrammed default
  3573  2007                     	org	8199
  3574  2007  20D4               	dw	8404
  3575                           
  3576                           ;Config register CONFIG2 @ 0x2008
  3577                           ;	Brown-out Reset Selection bit
  3578                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3579                           ;	Flash Program Memory Self Write Enable bits
  3580                           ;	WRT = OFF, Write protection off
  3581  2008                     	org	8200
  3582  2008  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    10
    Data        17
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     35      80
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> datos(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_I2C_Master_Init
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _Write_USART_String->_Write_USART
    _USART_Init->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_USART_Init
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_Init->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    4455
                                             30 BANK0      5     5      0
                    _I2C_Master_Init
                         _USART_Init
                        _Write_USART
                 _Write_USART_String
                           _configIO
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    20      5    2769
                                              9 BANK0     17    12      5
                             ___bmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     266
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     371
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     145
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   3     3      0     139
                                              4 COMMON     3     3      0
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          18    14      4     993
                                              4 COMMON     2     2      0
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     705
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     532
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     371
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (4) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _USART_Init
     ___aldiv
   _Write_USART
   _Write_USART_String
     _Write_USART
   _configIO
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5B      12        0.0%
ABS                  0      0      5B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 05 22:28:45 2021

                          pc 0002               ___bmul@product 0075                           l53 061B  
                         l96 0552                           fsr 0004          ___wmul@multiplicand 0075  
       __size_of_Write_USART 000C                          l151 0320                          l402 0496  
                        l154 063E                          l163 05CA                          l157 0648  
                        l362 0244                          l437 0335                          l366 058E  
                        l447 03BD                          l392 05F5                          l368 05A8  
                        l774 04DC                          l784 0518                          l794 062D  
                        _GIE 005F                          _ISR 05CB                          u840 0644  
                        u841 0643                          u930 05E7                          u931 05E6  
                        u940 05F4                          u941 05F3                          u870 0624  
                        u871 0623                          u880 062A                          u881 0629  
                        fsr0 0004                          indf 0000  __size_of_Write_USART_String 0022  
                       ?_ISR 0070                         l2100 0387                         l2110 03AA  
                       l2102 0395                         l2112 03B5                         l2104 0396  
                       l2120 04A1                         l2040 0582                         l2200 0099  
                       l2106 039F                         l2130 04C4                         l2122 04A4  
                       l2042 0586                         l2210 00CE                         l2202 00A9  
                       l2060 0455                         l2052 042F                         l2108 03A5  
                       l1340 0644                         l1500 0613                         l2132 04CA  
                       l2124 04AB                         l2116 0497                         l2044 0595  
                       l2220 00EF                         l2212 00D9                         l2204 00B7  
                       l2070 0488                         l2062 045E                         l2054 0441  
                       l2150 0305                         l2142 0245                         l1502 0614  
                       l2134 04CB                         l2126 04AF                         l2118 049B  
                       l2046 059C                         l2038 057E                         l1350 0624  
                       l2230 0122                         l2222 010E                         l2214 00DD  
                       l2206 00BB                         l2310 03C3                         l2064 0470  
                       l2056 0444                         l2072 048E                         l2080 0328  
                       l2160 0319                         l2152 030E                         l2144 02A0  
                       l1504 0617                         l2136 04D2                         l2128 04B3  
                       l2048 05A2                         l1352 062A                         l2232 0127  
                       l2224 0116                         l2208 00BD                         l2216 00EE  
                       l2320 03F1                         l2312 03D2                         l2066 047E  
                       l2058 0451                         l2170 051D                         l2090 0358  
                       l2082 0339                         l2162 031A                         l2154 0312  
                       l2146 02A9                         l1338 063E                         l1506 061A  
                       l2138 04D8                         l1354 062C                         l1346 061D  
                       l2250 016E                         l2242 0138                         l2234 012C  
                       l2226 011A                         l2322 040B                         l2314 03E1  
                       l2068 047F                         l2172 0520                         l2092 035B  
                       l2084 0344                         l2076 0321                         l2164 031D  
                       l2156 0313                         l2148 0302                         l1380 05ED  
                       l1372 05E2                         l1348 061E                         l2260 019D  
                       l2252 0175                         l2236 0132                         l2228 011E  
                       l2180 003F                         l2324 0411                         l2316 03E7  
                       l2308 03BE                         l2174 054F                         l2094 0368  
                       l2086 0348                         l2078 0324                         l2158 0316  
                       l1550 05B9                         l1382 05F4                         l1374 05E3  
                       l2270 01AE                         l2254 0189                         l2246 0154  
                       l2238 0136                         l2190 0059                         l2182 0044  
                       l2326 0417                         l2318 03EB                         l2176 0550  
                       l2168 0519                         l2096 036C                         l2088 0350  
                       l1552 05BD                         l1376 05E7                         l1480 04E8  
                       l2280 01CF                         l2272 01BA                         l2256 018F  
                       l2248 015E                         l2192 0069                         l2184 004A  
                       l2328 041D                         l2178 0551                         l2098 0375  
                       l1546 05AA                         l1378 05EB                         l1490 0507  
                       l1482 04EF                         l2290 021D                         l2282 01DB  
                       l2274 01BE                         l2258 0197                         l2194 006D  
                       l2186 0051                         l1548 05AC                         l1492 050E  
                       l1484 04F3                         l1476 04DD                         l2284 01E1  
                       l2276 01C4                         l2268 01A3                         l2196 0082  
                       l2188 0056                         l1486 04F7                         l1478 04E5  
                       l1494 0514                         l2286 01E8                         l2294 0225  
                       l2278 01CB                         l2198 0095                         l1488 0501  
                       l2288 01ED                         l2376 0103                         l2296 022E  
                       l1498 0609                         l2298 0240                         STR_1 0572  
                       STR_2 0563                         _BRGH 04C2                         _CREN 00C4  
                       u1210 04F7                         u1211 04F6                         u1220 0501  
                       u1221 0500                         u1205 04E9                         u1240 0514  
                       u1241 0513                         u1225 04FD                         u1235 0508  
                       u1340 05CA                         u1341 05C9                         u2310 0455  
                       u1190 04E5                         u2311 0454                         u1191 04E4  
                       u2400 036C                         u2305 0446                         u2401 036B  
                       u2330 0470                         u2250 0586                         u2331 046F  
                       u2251 0585                         u2420 0387                         u2500 04C4  
                       u2325 0457                         u2421 0386                         u2501 04C3  
                       u2350 048E                         u2351 048D                         u2335 046C  
                       u2415 036E                         u2440 03A5                         u2360 0328  
                       u2600 030E                         u2520 04D8                         u2280 05A2  
                       u2345 0480                         u2441 03A4                         u2425 0383  
                       u2361 0327                         u2601 030D                         u2521 04D7  
                       u2505 04C0                         u2281 05A1                         u2265 058F  
                       u2290 0441                         u2610 0530                         u2450 03AA  
                       u2370 0339                         u2530 0255                         u2291 0440  
                       u2451 03A9                         u2435 0397                         u2371 0338  
                       u2515 04CC                         u2275 0596                         u2380 0358  
                       u2540 026E                         u2460 04A1                         u2700 0153  
                       u2620 004A                         u2381 0357                         u2461 04A0  
                       u2701 0152                         u2621 0049                         u2710 015E  
                       u2630 0069                         u2615 052B                         u2551 0280  
                       u2535 0250                         u2711 015D                         u2631 0068  
                       u2560 02A9                         u2552 0281                         u2480 04B3  
                       u2800 022E                         u2720 016E                         u2640 00A9  
                       u2561 02A8                         u2553 0286                         u2545 0269  
                       u2481 04B2                         u2801 022D                         u2721 016D  
                       u2705 014F                         u2641 00A8                         u2570 02B7  
                       u2554 0287                         u2810 0240                         u2730 0189  
                       u2650 00B7                         u2395 035D                         u2555 028C  
                       u2475 04A5                         u2811 023F                         u2731 0188  
                       u2651 00B6                         u2580 02D0                         u2556 028D  
                       u2740 0197                         u2660 00ED                         u2741 0196  
                       u2725 016A                         u2661 00EC                         u2750 019D  
                       u2670 011E                         u2591 02E2                         u2575 02B2  
                       u2495 04B4                         u2751 019C                         u2735 0185  
                       u2671 011D                         u2592 02E3                         u2760 01AE  
                       u2680 012C                         u2593 02E8                         u2585 02CB  
                       u2761 01AD                         u2681 012B                         u2594 02E9  
                       u2770 01C4                         u2690 0132                         u2595 02EE  
                       u2771 01C3                         u2691 0131                         u2827 0425  
                       _PEIE 005E                         u2596 02EF                         u2780 01DB  
                       u2781 01DA                         u2765 01AA                         u2790 01E1  
                       u2791 01E0                         _RCIF 0065                         i1l59 05DA  
                       _SPEN 00C7                         _TRMT 04C1                         _TXEN 04C5  
                       _SYNC 04C4                         _main 03BE                         btemp 007E  
                       start 000C            ___bmul@multiplier 0076                        ??_ISR 0070  
                 _GetTempCmd 0049             ?_I2C_Master_Init 002D              __end_of___aldiv 03BE  
                      ?_main 0070                        _ANSEL 0188              __end_of___lldiv 0497  
            __end_of___lwdiv 04DD                        i1l166 0651                        i1l169 0658  
            __end_of___lwmod 0519                        i1l986 0651                        i1l988 0657  
                      _RCREG 001A                        u42_20 0657                        u42_21 0656  
                      _SPBRG 0099                        _PORTB 0006                        _TRISB 0086  
                      _SSPIE 0463                        u74_20 05D1                        _SSPIF 0063  
                      u74_21 05D0                        _TXREG 0019                        _datos 004D  
            __end_of_dpowers 0563              __end_of_isdigit 062E              _GetRHumidityCmd 006A  
                      fpbase 003B                        pclath 000A                        status 0003  
                      wtemp0 007E              __end_of_sprintf 0245                  ?_USART_Init 002E  
            __initialization 000F                   _Read_USART 0651                 __end_of_main 042F  
                     ??_main 003E                _AHT10_address 0078                       _ANSELH 0189  
                     i1l1194 05CB                       i1l1196 05D1                       i1l1198 05D2  
                     _SSPADD 0093                       _TRISC3 043B                       _TRISC4 043C  
                     _TRISC6 043E                       _TRISC7 043F                       _SSPCON 0014  
                     _SSPBUF 0013             __end_of__fptable 003C             __end_of_configIO 061C  
                     ___bmul 05E1                    ??___aldiv 0073                       ___wmul 057E  
                  ??___lldiv 0073                    ??___lwdiv 0077                    ??___lwmod 0027  
                     fptable 0036                 __pdataCOMMON 0078                       fptotal 0002  
                  ??_isdigit 0073                       saved_w 007E          __size_of_USART_Init 00DC  
                  ??_sprintf 002E      __end_of__initialization 0032          ___bmul@multiplicand 0073  
                ?_Read_USART 0070               __pcstackCOMMON 0070                 __pidataBANK0 062E  
               sprintf@width 0036                 Write_USART@a 0073                   __pbssBANK0 0043  
                 __pmaintext 03BE                      ?___bmul 0073                      ?___wmul 0073  
              ??_Write_USART 0073                   __pintentry 0004   __end_of_Write_USART_String 05CB  
        __size_of_Read_USART 0008                      _SSPCON2 0091                    ?_configIO 0070  
                    _SSPSTAT 0094                   __stringtab 0553              _eSensorResetCmd 0079  
               ??_USART_Init 0032                      ___aldiv 0321              __size_of___bmul 0015  
                    ___lldiv 042F              __size_of___wmul 002B                      ___lwdiv 0497  
                    ___lwmod 04DD                      __ptext1 003C                      __ptext2 061C  
                    __ptext3 057E                      __ptext4 04DD                      __ptext5 0497  
                    __ptext6 05E1                      __ptext7 0609                      __ptext8 05A9  
                    __ptext9 063D                 __size_of_ISR 0016                      _dpowers 0559  
        __end_of_Write_USART 0649                      _isdigit 061C                      _humeda1 0043  
                    _humedad 004B           fp__aht_GetHumidity 0000             ___aldiv@dividend 0024  
   __size_of_I2C_Master_Init 003A           __end_of_USART_Init 0321                   ??_configIO 0073  
                    _sprintf 003C                      clrloop0 064A         end_of_initialization 0032  
            ___lldiv@divisor 0020              ___lldiv@counter 002C            _eSensorMeasureCmd 0061  
           ___aldiv@quotient 002A             I2C_Master_Init@c 002D          _eSensorCalibrateCmd 0067  
                  _TRISCbits 0087                 _LecturaUSART 007A        fp__aht_GetTemperature 0000  
               ??_Read_USART 0070               __end_of___bmul 05F6                  _Write_USART 063D  
             __end_of___wmul 05A9                __pidataCOMMON 0659                  USART_Init@x 0074  
          _AHT10Address_High 006C          start_initialization 000F                  __end_of_ISR 05E1  
         __end_of_Read_USART 0659            ??_I2C_Master_Init 0074                     ??___bmul 0074  
                   ??___wmul 0077                   init_fetch0 05F6                  __pdataBANK0 0061  
                __pbssCOMMON 007A                    ___latbits 0002                __pcstackBANK0 0020  
          __size_of__fptable 0006            __size_of_configIO 0013                  sprintf@flag 0032  
         _Write_USART_String 05A9                  sprintf@prec 0038             ___lwdiv@dividend 0075  
         _aht_GetTemperature 0000                    __pfunctab 0036          ?_Write_USART_String 0070  
                   ?___aldiv 0020                     ?___lldiv 0020                     ?___lwdiv 0073  
                   ?___lwmod 0023                    __pstrings 0553                     ?_isdigit 0070  
       ??_Write_USART_String 0074             ___lwdiv@quotient 0021                     ?_sprintf 0029  
            ___aldiv@divisor 0020            interrupt_function 0004              ___aldiv@counter 0028  
             ___wmul@product 0020                    clear_ram0 0649                     _PIE1bits 008C  
                   _PIR1bits 000C                  __stringbase 0558            ___wmul@multiplier 0073  
         USART_Init@baudrate 002E             _eSensorNormalCmd 0064             _AHT10Address_Low 006E  
               ?_Write_USART 0070             __size_of___aldiv 009D             __size_of___lldiv 0068  
           __size_of___lwdiv 0046             __size_of___lwmod 003C           __end_of__stringtab 0559  
                _isdigit$714 0073              _aht_GetHumidity 0000                   sprintf@val 0033  
                   __fptable 0036              _I2C_Master_Init 0519             __size_of_isdigit 0012  
            ___lwdiv@divisor 0073              ___lwdiv@counter 0020                     __ptext10 0245  
                   __ptext11 0321                     __ptext12 0519                     __ptext13 042F  
                   __ptext14 05CB                     __ptext15 0651                     _configIO 0609  
           __size_of_sprintf 0209                __size_of_main 0071                     _tempera1 0046  
                 _INTCONbits 000B          Write_USART_String@a 0075          Write_USART_String@i 0076  
                   init_ram0 05FA                     isdigit@c 0074                     intlevel1 0036  
                  sprintf@ap 0031                    sprintf@sp 0035             ___lwmod@dividend 0025  
           ___lldiv@dividend 0024                    stringcode 0553      __end_of_I2C_Master_Init 0553  
                _temperatura 004C                     sprintf@c 0039                     sprintf@f 0029  
           ___lldiv@quotient 0028              ___lwmod@divisor 0023              ___lwmod@counter 0028  
                   stringdir 0553                     stringtab 0553                 ___aldiv@sign 0029  
                _SSPCON2bits 0091                   _USART_Init 0245  
