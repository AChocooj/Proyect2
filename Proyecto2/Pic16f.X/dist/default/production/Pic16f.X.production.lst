

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 16:36:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	psect	text5_split_1,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  0107                     	;# 
   158  0108                     	;# 
   159  0109                     	;# 
   160  010C                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0185                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  008F                     	;# 
   216  0090                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  0105                     	;# 
   235  0107                     	;# 
   236  0108                     	;# 
   237  0109                     	;# 
   238  010C                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  0185                     	;# 
   244  0187                     	;# 
   245  0188                     	;# 
   246  0189                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0185                     	;# 
   322  0187                     	;# 
   323  0188                     	;# 
   324  0189                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0008                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000D                     	;# 
   341  000E                     	;# 
   342  000E                     	;# 
   343  000F                     	;# 
   344  0010                     	;# 
   345  0011                     	;# 
   346  0012                     	;# 
   347  0013                     	;# 
   348  0014                     	;# 
   349  0015                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001B                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  0081                     	;# 
   363  0085                     	;# 
   364  0086                     	;# 
   365  0087                     	;# 
   366  0088                     	;# 
   367  0089                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0094                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  0105                     	;# 
   391  0107                     	;# 
   392  0108                     	;# 
   393  0109                     	;# 
   394  010C                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0185                     	;# 
   400  0187                     	;# 
   401  0188                     	;# 
   402  0189                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  000E                     	;# 
   421  000F                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001D                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  0081                     	;# 
   441  0085                     	;# 
   442  0086                     	;# 
   443  0087                     	;# 
   444  0088                     	;# 
   445  0089                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  008F                     	;# 
   450  0090                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0095                     	;# 
   458  0096                     	;# 
   459  0097                     	;# 
   460  0098                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  0105                     	;# 
   469  0107                     	;# 
   470  0108                     	;# 
   471  0109                     	;# 
   472  010C                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  0185                     	;# 
   478  0187                     	;# 
   479  0188                     	;# 
   480  0189                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483                           
   484                           	psect	idataBANK0
   485  0800                     __pidataBANK0:
   486                           
   487                           ;initializer for _AHT10_address
   488  0800  3439               	retlw	57
   489                           
   490                           ;initializer for _eSensorResetCmd
   491  0801  34BA               	retlw	186
   492                           
   493                           	psect	idataBANK1
   494  1D82                     __pidataBANK1:
   495                           
   496                           ;initializer for _eSensorMeasureCmd
   497  1D82  34AC               	retlw	172
   498  1D83  3433               	retlw	51
   499  1D84  3400               	retlw	0
   500                           
   501                           ;initializer for _eSensorNormalCmd
   502  1D85  34A8               	retlw	168
   503  1D86  3400               	retlw	0
   504  1D87  3400               	retlw	0
   505                           
   506                           ;initializer for _eSensorCalibrateCmd
   507  1D88  34E1               	retlw	225
   508  1D89  3408               	retlw	8
   509  1D8A  3400               	retlw	0
   510                           
   511                           ;initializer for _GetRHumidityCmd
   512  1D8B  3401               	retlw	1
   513  1D8C  3400               	retlw	0
   514                           
   515                           ;initializer for _AHT10Address_High
   516  1D8D  3439               	retlw	57
   517  1D8E  3400               	retlw	0
   518                           
   519                           ;initializer for _AHT10Address_Low
   520  1D8F  3438               	retlw	56
   521  1D90  3400               	retlw	0
   522                           
   523                           	psect	strings
   524  1000                     __pstrings:
   525  1000                     stringtab:
   526  1000                     __stringtab:
   527  1000                     stringcode:	
   528                           ;	String table - string pointers are 1 byte each
   529                           
   530  1000                     stringdir:
   531  1000  3010               	movlw	high stringdir
   532  1001  008A               	movwf	10
   533  1002  0804               	movf	4,w
   534  1003  0A84               	incf	4,f
   535  1004  0782               	addwf	2,f
   536  1005                     __stringbase:
   537  1005  3400               	retlw	0
   538  1006                     __end_of__stringtab:
   539  1006                     __powers_:
   540  1006  3400               	retlw	0
   541  1007  3480               	retlw	128
   542  1008  343F               	retlw	63
   543  1009  3400               	retlw	0
   544  100A  3420               	retlw	32
   545  100B  3441               	retlw	65
   546  100C  3400               	retlw	0
   547  100D  34C8               	retlw	200
   548  100E  3442               	retlw	66
   549  100F  3400               	retlw	0
   550  1010  347A               	retlw	122
   551  1011  3444               	retlw	68
   552  1012  3440               	retlw	64
   553  1013  341C               	retlw	28
   554  1014  3446               	retlw	70
   555  1015  3450               	retlw	80
   556  1016  34C3               	retlw	195
   557  1017  3447               	retlw	71
   558  1018  3424               	retlw	36
   559  1019  3474               	retlw	116
   560  101A  3449               	retlw	73
   561  101B  3497               	retlw	151
   562  101C  3418               	retlw	24
   563  101D  344B               	retlw	75
   564  101E  34BC               	retlw	188
   565  101F  34BE               	retlw	190
   566  1020  344C               	retlw	76
   567  1021  346B               	retlw	107
   568  1022  346E               	retlw	110
   569  1023  344E               	retlw	78
   570  1024  3403               	retlw	3
   571  1025  3415               	retlw	21
   572  1026  3450               	retlw	80
   573  1027  3479               	retlw	121
   574  1028  34AD               	retlw	173
   575  1029  3460               	retlw	96
   576  102A  34F3               	retlw	243
   577  102B  3449               	retlw	73
   578  102C  3471               	retlw	113
   579  102D                     __end_of__powers_:
   580  102D                     __npowers_:
   581  102D  3400               	retlw	0
   582  102E  3480               	retlw	128
   583  102F  343F               	retlw	63
   584  1030  34CD               	retlw	205
   585  1031  34CC               	retlw	204
   586  1032  343D               	retlw	61
   587  1033  34D7               	retlw	215
   588  1034  3423               	retlw	35
   589  1035  343C               	retlw	60
   590  1036  3412               	retlw	18
   591  1037  3483               	retlw	131
   592  1038  343A               	retlw	58
   593  1039  34B7               	retlw	183
   594  103A  34D1               	retlw	209
   595  103B  3438               	retlw	56
   596  103C  34C6               	retlw	198
   597  103D  3427               	retlw	39
   598  103E  3437               	retlw	55
   599  103F  3438               	retlw	56
   600  1040  3486               	retlw	134
   601  1041  3435               	retlw	53
   602  1042  34C0               	retlw	192
   603  1043  34D6               	retlw	214
   604  1044  3433               	retlw	51
   605  1045  34CC               	retlw	204
   606  1046  342B               	retlw	43
   607  1047  3432               	retlw	50
   608  1048  3470               	retlw	112
   609  1049  3489               	retlw	137
   610  104A  3430               	retlw	48
   611  104B  34E7               	retlw	231
   612  104C  34DB               	retlw	219
   613  104D  342E               	retlw	46
   614  104E  34E5               	retlw	229
   615  104F  343C               	retlw	60
   616  1050  341E               	retlw	30
   617  1051  3442               	retlw	66
   618  1052  34A2               	retlw	162
   619  1053  340D               	retlw	13
   620  1054                     __end_of__npowers_:
   621  1054                     _dpowers:
   622  1054  3401               	retlw	1
   623  1055  3400               	retlw	0
   624  1056  3400               	retlw	0
   625  1057  3400               	retlw	0
   626  1058  340A               	retlw	10
   627  1059  3400               	retlw	0
   628  105A  3400               	retlw	0
   629  105B  3400               	retlw	0
   630  105C  3464               	retlw	100
   631  105D  3400               	retlw	0
   632  105E  3400               	retlw	0
   633  105F  3400               	retlw	0
   634  1060  34E8               	retlw	232
   635  1061  3403               	retlw	3
   636  1062  3400               	retlw	0
   637  1063  3400               	retlw	0
   638  1064  3410               	retlw	16
   639  1065  3427               	retlw	39
   640  1066  3400               	retlw	0
   641  1067  3400               	retlw	0
   642  1068  34A0               	retlw	160
   643  1069  3486               	retlw	134
   644  106A  3401               	retlw	1
   645  106B  3400               	retlw	0
   646  106C  3440               	retlw	64
   647  106D  3442               	retlw	66
   648  106E  340F               	retlw	15
   649  106F  3400               	retlw	0
   650  1070  3480               	retlw	128
   651  1071  3496               	retlw	150
   652  1072  3498               	retlw	152
   653  1073  3400               	retlw	0
   654  1074  3400               	retlw	0
   655  1075  34E1               	retlw	225
   656  1076  34F5               	retlw	245
   657  1077  3405               	retlw	5
   658  1078  3400               	retlw	0
   659  1079  34CA               	retlw	202
   660  107A  349A               	retlw	154
   661  107B  343B               	retlw	59
   662  107C                     __end_of_dpowers:
   663  0019                     _TXREG	set	25
   664  001A                     _RCREG	set	26
   665  0018                     _RCSTAbits	set	24
   666  0013                     _SSPBUF	set	19
   667  0014                     _SSPCON	set	20
   668  000C                     _PIR1bits	set	12
   669  000B                     _INTCONbits	set	11
   670  0008                     _PORTD	set	8
   671  0063                     _SSPIF	set	99
   672  005E                     _PEIE	set	94
   673  005F                     _GIE	set	95
   674  0099                     _SPBRG	set	153
   675  0098                     _TXSTAbits	set	152
   676  0091                     _SSPCON2bits	set	145
   677  0087                     _TRISCbits	set	135
   678  0094                     _SSPSTAT	set	148
   679  0093                     _SSPADD	set	147
   680  0091                     _SSPCON2	set	145
   681  008C                     _PIE1bits	set	140
   682  0088                     _TRISD	set	136
   683  0463                     _SSPIE	set	1123
   684  043C                     _TRISC4	set	1084
   685  043B                     _TRISC3	set	1083
   686  0189                     _ANSELH	set	393
   687  0188                     _ANSEL	set	392
   688  107C                     STR_2:
   689  107C  3425               	retlw	37	;'%'
   690  107D  3432               	retlw	50	;'2'
   691  107E  342E               	retlw	46	;'.'
   692  107F  3431               	retlw	49	;'1'
   693  1080  3466               	retlw	102	;'f'
   694  1081  3420               	retlw	32	;' '
   695  1082  3420               	retlw	32	;' '
   696  1083  3420               	retlw	32	;' '
   697  1084  3425               	retlw	37	;'%'
   698  1085  3432               	retlw	50	;'2'
   699  1086  342E               	retlw	46	;'.'
   700  1087  3431               	retlw	49	;'1'
   701  1088  3466               	retlw	102	;'f'
   702  1089  3420               	retlw	32	;' '
   703  108A  3400               	retlw	0
   704  108B                     STR_1:
   705  108B  3454               	retlw	84	;'T'
   706  108C  3431               	retlw	49	;'1'
   707  108D  3420               	retlw	32	;' '
   708  108E  3420               	retlw	32	;' '
   709  108F  3420               	retlw	32	;' '
   710  1090  3448               	retlw	72	;'H'
   711  1091  3431               	retlw	49	;'1'
   712  1092  3420               	retlw	32	;' '
   713  1093  3420               	retlw	32	;' '
   714  1094  3420               	retlw	32	;' '
   715  1095  340A               	retlw	10
   716  1096  3400               	retlw	0
   717                           
   718                           	psect	cinit
   719  07D7                     start_initialization:	
   720                           ; #config settings
   721                           
   722  07D7                     __initialization:
   723                           
   724                           ; Initialize objects allocated to BANK1
   725  07D7  1383               	bcf	3,7	;select IRP bank0
   726  07D8  30E1               	movlw	low (__pdataBANK1+15)
   727  07D9  00FD               	movwf	btemp+-1
   728  07DA  301D               	movlw	high __pidataBANK1
   729  07DB  00FE               	movwf	btemp
   730  07DC  3082               	movlw	low __pidataBANK1
   731  07DD  00FF               	movwf	btemp+1
   732  07DE  30D2               	movlw	low __pdataBANK1
   733  07DF  0084               	movwf	4
   734  07E0  160A  158A  25CC  120A  118A  	fcall	init_ram0
   735                           
   736                           ; Initialize objects allocated to BANK0
   737  07E5  120A  158A  2000  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   738  07EA  00ED               	movwf	__pdataBANK0& (0+127)
   739  07EB  120A  158A  2001  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   740  07F0  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   741                           
   742                           ; Clear objects allocated to BANK1
   743  07F1  30A0               	movlw	low __pbssBANK1
   744  07F2  0084               	movwf	4
   745  07F3  30B9               	movlw	low (__pbssBANK1+25)
   746  07F4  160A  158A  255B  120A  118A  	fcall	clear_ram0
   747                           
   748                           ; Clear objects allocated to BANK0
   749  07F9  01EA               	clrf	__pbssBANK0& (0+127)
   750  07FA  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   751  07FB  01EC               	clrf	(__pbssBANK0+2)& (0+127)
   752  07FC                     end_of_initialization:	
   753                           ;End of C runtime variable initialization code
   754                           
   755  07FC                     __end_of__initialization:
   756  07FC  0183               	clrf	3
   757  07FD  160A  118A  2C0B   	ljmp	_main	;jump to C main() function
   758                           
   759                           	psect	bssBANK0
   760  006A                     __pbssBANK0:
   761  006A                     _tempera1:
   762  006A                     	ds	3
   763                           
   764                           	psect	dataBANK0
   765  006D                     __pdataBANK0:
   766  006D                     _AHT10_address:
   767  006D                     	ds	1
   768  006E                     _eSensorResetCmd:
   769  006E                     	ds	1
   770                           
   771                           	psect	bssBANK1
   772  00A0                     __pbssBANK1:
   773  00A0                     _humeda1:
   774  00A0                     	ds	3
   775  00A3                     _GetTempCmd:
   776  00A3                     	ds	2
   777  00A5                     _datos:
   778  00A5                     	ds	20
   779                           
   780                           	psect	dataBANK1
   781  00D2                     __pdataBANK1:
   782  00D2                     _eSensorMeasureCmd:
   783  00D2                     	ds	3
   784  00D5                     _eSensorNormalCmd:
   785  00D5                     	ds	3
   786  00D8                     _eSensorCalibrateCmd:
   787  00D8                     	ds	3
   788  00DB                     _GetRHumidityCmd:
   789  00DB                     	ds	2
   790  00DD                     _AHT10Address_High:
   791  00DD                     	ds	2
   792  00DF                     _AHT10Address_Low:
   793  00DF                     	ds	2
   794                           
   795                           	psect	inittext
   796  1DC8                     init_fetch0:	
   797                           ;	Called with low address in FSR and high address in W
   798                           
   799  1DC8  087E               	movf	btemp,w
   800  1DC9  008A               	movwf	10
   801  1DCA  087F               	movf	btemp+1,w
   802  1DCB  0082               	movwf	2
   803  1DCC                     init_ram0:	
   804                           ;Called with:
   805                           ;	high address of idata address in btemp 
   806                           ;	low address of idata address in btemp+1 
   807                           ;	low address of data in FSR
   808                           ;	high address + 1 of data in btemp-1
   809                           
   810  1DCC  160A  158A  25C8  160A  158A  	fcall	init_fetch0
   811  1DD1  0080               	movwf	0
   812  1DD2  0A84               	incf	4,f
   813  1DD3  0804               	movf	4,w
   814  1DD4  067D               	xorwf	btemp+-1,w
   815  1DD5  1903               	btfsc	3,2
   816  1DD6  3400               	retlw	0
   817  1DD7  0AFF               	incf	btemp+1,f
   818  1DD8  1903               	btfsc	3,2
   819  1DD9  0AFE               	incf	btemp,f
   820  1DDA  2DCC               	goto	init_ram0
   821                           
   822                           	psect	clrtext
   823  1D5B                     clear_ram0:	
   824                           ;	Called with FSR containing the base address, and
   825                           ;	W with the last address+1
   826                           
   827  1D5B  0064               	clrwdt	;clear the watchdog before getting into this loop
   828  1D5C                     clrloop0:
   829  1D5C  0180               	clrf	0	;clear RAM location pointed to by FSR
   830  1D5D  0A84               	incf	4,f	;increment pointer
   831  1D5E  0604               	xorwf	4,w	;XOR with final address
   832  1D5F  1903               	btfsc	3,2	;have we reached the end yet?
   833  1D60  3400               	retlw	0	;all done for this memory range, return
   834  1D61  0604               	xorwf	4,w	;XOR again to restore value
   835  1D62  2D5C               	goto	clrloop0	;do the next byte
   836                           
   837                           	psect	cstackBANK1
   838  00B9                     __pcstackBANK1:
   839  00B9                     _sprintf$1041:
   840                           
   841                           ; 3 bytes @ 0x0
   842  00B9                     	ds	3
   843  00BC                     sprintf@ap:
   844                           
   845                           ; 1 bytes @ 0x3
   846  00BC                     	ds	1
   847  00BD                     sprintf@val:
   848                           
   849                           ; 4 bytes @ 0x4
   850  00BD                     	ds	4
   851  00C1                     sprintf@flag:
   852                           
   853                           ; 2 bytes @ 0x8
   854  00C1                     	ds	2
   855  00C3                     sprintf@width:
   856                           
   857                           ; 2 bytes @ 0xA
   858  00C3                     	ds	2
   859  00C5                     sprintf@tmpval:
   860                           
   861                           ; 4 bytes @ 0xC
   862  00C5                     	ds	4
   863  00C9                     sprintf@eexp:
   864                           
   865                           ; 2 bytes @ 0x10
   866  00C9                     	ds	2
   867  00CB                     sprintf@sp:
   868                           
   869                           ; 1 bytes @ 0x12
   870  00CB                     	ds	1
   871  00CC                     sprintf@fval:
   872                           
   873                           ; 3 bytes @ 0x13
   874  00CC                     	ds	3
   875  00CF                     sprintf@prec:
   876                           
   877                           ; 2 bytes @ 0x16
   878  00CF                     	ds	2
   879  00D1                     sprintf@c:
   880                           
   881                           ; 1 bytes @ 0x18
   882  00D1                     	ds	1
   883                           
   884                           	psect	cstackCOMMON
   885  0070                     __pcstackCOMMON:
   886  0070                     ?_isdigit:
   887  0070                     ?___ftge:	
   888                           ; 1 bit 
   889                           
   890  0070                     ?_I2C_Master_Start:	
   891                           ; 1 bit 
   892                           
   893  0070                     ??_I2C_Master_Start:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0070                     ?_I2C_Master_Write:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0070                     ?_uartTX_Write_Str:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0070                     ?_uartTX_Write:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0070                     ??_uartTX_Write:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ??_isdigit:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ?_configIO:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ??_configIO:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ?_main:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ?_I2C_Master_Wait:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ??_I2C_Master_Wait:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ?_I2C_Master_Stop:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ??_I2C_Master_Stop:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ?_I2C_Master_Read:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ?___wmul:	
   936                           ; 2 bytes @ 0x0
   937                           
   938  0070                     ?___awmod:	
   939                           ; 2 bytes @ 0x0
   940                           
   941  0070                     ?___lwmod:	
   942                           ; 2 bytes @ 0x0
   943                           
   944  0070                     ?___ftpack:	
   945                           ; 2 bytes @ 0x0
   946                           
   947  0070                     ?___ftneg:	
   948                           ; 3 bytes @ 0x0
   949                           
   950  0070                     ?__tdiv_to_l_:	
   951                           ; 3 bytes @ 0x0
   952                           
   953  0070                     ?__div_to_l_:	
   954                           ; 4 bytes @ 0x0
   955                           
   956  0070                     ?___lldiv:	
   957                           ; 4 bytes @ 0x0
   958                           
   959  0070                     ?___aldiv:	
   960                           ; 4 bytes @ 0x0
   961                           
   962  0070                     ?___llmod:	
   963                           ; 4 bytes @ 0x0
   964                           
   965  0070                     _isdigit$834:	
   966                           ; 4 bytes @ 0x0
   967                           
   968  0070                     I2C_Master_Write@d:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0070                     I2C_Master_Read@a:	
   972                           ; 2 bytes @ 0x0
   973                           
   974  0070                     ___wmul@multiplier:	
   975                           ; 2 bytes @ 0x0
   976                           
   977  0070                     ___awmod@divisor:	
   978                           ; 2 bytes @ 0x0
   979                           
   980  0070                     ___lwmod@divisor:	
   981                           ; 2 bytes @ 0x0
   982                           
   983  0070                     __div_to_l_@f1:	
   984                           ; 2 bytes @ 0x0
   985                           
   986  0070                     ___ftpack@arg:	
   987                           ; 3 bytes @ 0x0
   988                           
   989  0070                     __tdiv_to_l_@f1:	
   990                           ; 3 bytes @ 0x0
   991                           
   992  0070                     ___ftge@ff1:	
   993                           ; 3 bytes @ 0x0
   994                           
   995  0070                     ___ftneg@f1:	
   996                           ; 3 bytes @ 0x0
   997                           
   998  0070                     ___lldiv@divisor:	
   999                           ; 3 bytes @ 0x0
  1000                           
  1001  0070                     ___aldiv@divisor:	
  1002                           ; 4 bytes @ 0x0
  1003                           
  1004  0070                     ___llmod@divisor:	
  1005                           ; 4 bytes @ 0x0
  1006                           
  1007                           
  1008                           ; 4 bytes @ 0x0
  1009  0070                     	ds	1
  1010  0071                     uartTX_Write@dato:
  1011  0071                     isdigit@c:	
  1012                           ; 1 bytes @ 0x1
  1013                           
  1014                           
  1015                           ; 1 bytes @ 0x1
  1016  0071                     	ds	1
  1017  0072                     ??_I2C_Master_Write:
  1018  0072                     ??_uartTX_Write_Str:	
  1019                           ; 1 bytes @ 0x2
  1020                           
  1021  0072                     ??_I2C_Master_Read:	
  1022                           ; 1 bytes @ 0x2
  1023                           
  1024  0072                     uartTX_Write_Str@n:	
  1025                           ; 1 bytes @ 0x2
  1026                           
  1027  0072                     ___wmul@multiplicand:	
  1028                           ; 2 bytes @ 0x2
  1029                           
  1030  0072                     ___awmod@dividend:	
  1031                           ; 2 bytes @ 0x2
  1032                           
  1033  0072                     ___lwmod@dividend:	
  1034                           ; 2 bytes @ 0x2
  1035                           
  1036                           
  1037                           ; 2 bytes @ 0x2
  1038  0072                     	ds	1
  1039  0073                     ??___ftneg:
  1040  0073                     ___ftpack@exp:	
  1041                           ; 1 bytes @ 0x3
  1042                           
  1043  0073                     __div_to_l_@f2:	
  1044                           ; 1 bytes @ 0x3
  1045                           
  1046  0073                     __tdiv_to_l_@f2:	
  1047                           ; 3 bytes @ 0x3
  1048                           
  1049  0073                     ___ftge@ff2:	
  1050                           ; 3 bytes @ 0x3
  1051                           
  1052                           
  1053                           ; 3 bytes @ 0x3
  1054  0073                     	ds	1
  1055  0074                     ??___wmul:
  1056  0074                     ??___awmod:	
  1057                           ; 1 bytes @ 0x4
  1058                           
  1059  0074                     ??___lwmod:	
  1060                           ; 1 bytes @ 0x4
  1061                           
  1062  0074                     uartTX_Write_Str@string:	
  1063                           ; 1 bytes @ 0x4
  1064                           
  1065  0074                     ___ftpack@sign:	
  1066                           ; 1 bytes @ 0x4
  1067                           
  1068  0074                     I2C_Master_Read@temp:	
  1069                           ; 1 bytes @ 0x4
  1070                           
  1071  0074                     ___wmul@product:	
  1072                           ; 2 bytes @ 0x4
  1073                           
  1074  0074                     ___lldiv@dividend:	
  1075                           ; 2 bytes @ 0x4
  1076                           
  1077  0074                     ___aldiv@dividend:	
  1078                           ; 4 bytes @ 0x4
  1079                           
  1080  0074                     ___llmod@dividend:	
  1081                           ; 4 bytes @ 0x4
  1082                           
  1083                           
  1084                           ; 4 bytes @ 0x4
  1085  0074                     	ds	1
  1086  0075                     ??___ftpack:
  1087  0075                     ___awmod@counter:	
  1088                           ; 1 bytes @ 0x5
  1089                           
  1090  0075                     ___lwmod@counter:	
  1091                           ; 1 bytes @ 0x5
  1092                           
  1093                           
  1094                           ; 1 bytes @ 0x5
  1095  0075                     	ds	1
  1096  0076                     ??__tdiv_to_l_:
  1097  0076                     ??__div_to_l_:	
  1098                           ; 1 bytes @ 0x6
  1099                           
  1100  0076                     ??___ftge:	
  1101                           ; 1 bytes @ 0x6
  1102                           
  1103  0076                     ?___lwdiv:	
  1104                           ; 1 bytes @ 0x6
  1105                           
  1106  0076                     ?_aht_readSensor:	
  1107                           ; 2 bytes @ 0x6
  1108                           
  1109  0076                     ___awmod@sign:	
  1110                           ; 4 bytes @ 0x6
  1111                           
  1112  0076                     aht_readSensor@GetDataCmd:	
  1113                           ; 1 bytes @ 0x6
  1114                           
  1115  0076                     ___lwdiv@divisor:	
  1116                           ; 2 bytes @ 0x6
  1117                           
  1118                           
  1119                           ; 2 bytes @ 0x6
  1120  0076                     	ds	1
  1121  0077                     ?___awdiv:
  1122  0077                     ___awdiv@divisor:	
  1123                           ; 2 bytes @ 0x7
  1124                           
  1125                           
  1126                           ; 2 bytes @ 0x7
  1127  0077                     	ds	1
  1128  0078                     ??___lldiv:
  1129  0078                     ??___aldiv:	
  1130                           ; 1 bytes @ 0x8
  1131                           
  1132  0078                     ??___llmod:	
  1133                           ; 1 bytes @ 0x8
  1134                           
  1135  0078                     ___lwdiv@dividend:	
  1136                           ; 1 bytes @ 0x8
  1137                           
  1138                           
  1139                           ; 2 bytes @ 0x8
  1140  0078                     	ds	1
  1141  0079                     ___llmod@counter:
  1142  0079                     uartRC_init@n:	
  1143                           ; 1 bytes @ 0x9
  1144                           
  1145  0079                     ___awdiv@dividend:	
  1146                           ; 2 bytes @ 0x9
  1147                           
  1148  0079                     ___lldiv@quotient:	
  1149                           ; 2 bytes @ 0x9
  1150                           
  1151                           
  1152                           ; 4 bytes @ 0x9
  1153  0079                     	ds	1
  1154  007A                     ??___lwdiv:
  1155  007A                     ?___lltoft:	
  1156                           ; 1 bytes @ 0xA
  1157                           
  1158  007A                     ___lltoft@c:	
  1159                           ; 3 bytes @ 0xA
  1160                           
  1161                           
  1162                           ; 4 bytes @ 0xA
  1163  007A                     	ds	1
  1164  007B                     ??___awdiv:
  1165  007B                     ___lwdiv@quotient:	
  1166                           ; 1 bytes @ 0xB
  1167                           
  1168                           
  1169                           ; 2 bytes @ 0xB
  1170  007B                     	ds	2
  1171  007D                     ___lldiv@counter:
  1172  007D                     ___lwdiv@counter:	
  1173                           ; 1 bytes @ 0xD
  1174                           
  1175                           
  1176                           ; 1 bytes @ 0xD
  1177  007D                     	ds	1
  1178  007E                     ??_aht_GetTemperature:
  1179  007E                     ??_aht_GetHumidity:	
  1180                           ; 1 bytes @ 0xE
  1181                           
  1182  007E                     ??___ftsub:	
  1183                           ; 1 bytes @ 0xE
  1184                           
  1185                           
  1186                           	psect	cstackBANK0
  1187  0020                     __pcstackBANK0:	
  1188                           ; 1 bytes @ 0xE
  1189                           
  1190  0020                     ?_I2C_Master_Init:
  1191  0020                     ??_aht_readSensor:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0020                     ___aldiv@counter:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0020                     ___awdiv@counter:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0020                     I2C_Master_Init@c:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0020                     __div_to_l_@quot:	
  1204                           ; 4 bytes @ 0x0
  1205                           
  1206  0020                     __tdiv_to_l_@quot:	
  1207                           ; 4 bytes @ 0x0
  1208                           
  1209                           
  1210                           ; 4 bytes @ 0x0
  1211  0020                     	ds	1
  1212  0021                     ___aldiv@sign:
  1213  0021                     ___awdiv@sign:	
  1214                           ; 1 bytes @ 0x1
  1215                           
  1216                           
  1217                           ; 1 bytes @ 0x1
  1218  0021                     	ds	1
  1219  0022                     ___awdiv@quotient:
  1220  0022                     ___aldiv@quotient:	
  1221                           ; 2 bytes @ 0x2
  1222                           
  1223                           
  1224                           ; 4 bytes @ 0x2
  1225  0022                     	ds	2
  1226  0024                     ??_I2C_Master_Init:
  1227  0024                     ?___bmul:	
  1228                           ; 1 bytes @ 0x4
  1229                           
  1230  0024                     ___bmul@multiplicand:	
  1231                           ; 1 bytes @ 0x4
  1232                           
  1233  0024                     __div_to_l_@cntr:	
  1234                           ; 1 bytes @ 0x4
  1235                           
  1236  0024                     __tdiv_to_l_@cntr:	
  1237                           ; 1 bytes @ 0x4
  1238                           
  1239                           
  1240                           ; 1 bytes @ 0x4
  1241  0024                     	ds	1
  1242  0025                     ??___bmul:
  1243  0025                     __div_to_l_@exp1:	
  1244                           ; 1 bytes @ 0x5
  1245                           
  1246  0025                     __tdiv_to_l_@exp1:	
  1247                           ; 1 bytes @ 0x5
  1248                           
  1249                           
  1250                           ; 1 bytes @ 0x5
  1251  0025                     	ds	1
  1252  0026                     ?_uartRC_init:
  1253  0026                     ___bmul@product:	
  1254                           ; 1 bytes @ 0x6
  1255                           
  1256  0026                     uartRC_init@baudrate:	
  1257                           ; 1 bytes @ 0x6
  1258                           
  1259                           
  1260                           ; 2 bytes @ 0x6
  1261  0026                     	ds	1
  1262  0027                     ___bmul@multiplier:
  1263                           
  1264                           ; 1 bytes @ 0x7
  1265  0027                     	ds	1
  1266  0028                     ??_uartRC_init:
  1267  0028                     ?___ftmul:	
  1268                           ; 1 bytes @ 0x8
  1269                           
  1270  0028                     ___ftmul@f1:	
  1271                           ; 3 bytes @ 0x8
  1272                           
  1273                           
  1274                           ; 3 bytes @ 0x8
  1275  0028                     	ds	3
  1276  002B                     ___ftmul@f2:
  1277                           
  1278                           ; 3 bytes @ 0xB
  1279  002B                     	ds	1
  1280  002C                     aht_readSensor@temp:
  1281                           
  1282                           ; 24 bytes @ 0xC
  1283  002C                     	ds	2
  1284  002E                     ??___ftmul:
  1285                           
  1286                           ; 1 bytes @ 0xE
  1287  002E                     	ds	4
  1288  0032                     ___ftmul@exp:
  1289                           
  1290                           ; 1 bytes @ 0x12
  1291  0032                     	ds	1
  1292  0033                     ___ftmul@f3_as_product:
  1293                           
  1294                           ; 3 bytes @ 0x13
  1295  0033                     	ds	3
  1296  0036                     ___ftmul@cntr:
  1297                           
  1298                           ; 1 bytes @ 0x16
  1299  0036                     	ds	1
  1300  0037                     ___ftmul@sign:
  1301                           
  1302                           ; 1 bytes @ 0x17
  1303  0037                     	ds	1
  1304  0038                     ?_fround:
  1305  0038                     ?_scale:	
  1306                           ; 3 bytes @ 0x18
  1307                           
  1308  0038                     ?___ftdiv:	
  1309                           ; 3 bytes @ 0x18
  1310                           
  1311  0038                     ___ftdiv@f2:	
  1312                           ; 3 bytes @ 0x18
  1313                           
  1314                           
  1315                           ; 3 bytes @ 0x18
  1316  0038                     	ds	3
  1317  003B                     ??_fround:
  1318  003B                     ??_scale:	
  1319                           ; 1 bytes @ 0x1B
  1320                           
  1321  003B                     ___ftdiv@f1:	
  1322                           ; 1 bytes @ 0x1B
  1323                           
  1324                           
  1325                           ; 3 bytes @ 0x1B
  1326  003B                     	ds	2
  1327  003D                     _scale$1040:
  1328                           
  1329                           ; 3 bytes @ 0x1D
  1330  003D                     	ds	1
  1331  003E                     ??___ftdiv:
  1332                           
  1333                           ; 1 bytes @ 0x1E
  1334  003E                     	ds	2
  1335  0040                     scale@scl:
  1336                           
  1337                           ; 1 bytes @ 0x20
  1338  0040                     	ds	1
  1339  0041                     ?___fttol:
  1340  0041                     ___fttol@f1:	
  1341                           ; 4 bytes @ 0x21
  1342                           
  1343  0041                     _fround$1039:	
  1344                           ; 3 bytes @ 0x21
  1345                           
  1346                           
  1347                           ; 3 bytes @ 0x21
  1348  0041                     	ds	1
  1349  0042                     ___ftdiv@cntr:
  1350                           
  1351                           ; 1 bytes @ 0x22
  1352  0042                     	ds	1
  1353  0043                     ___ftdiv@f3:
  1354                           
  1355                           ; 3 bytes @ 0x23
  1356  0043                     	ds	1
  1357  0044                     _fround$1038:
  1358  0044                     aht_readSensor@result:	
  1359                           ; 3 bytes @ 0x24
  1360                           
  1361                           
  1362                           ; 4 bytes @ 0x24
  1363  0044                     	ds	1
  1364  0045                     ??___fttol:
  1365                           
  1366                           ; 1 bytes @ 0x25
  1367  0045                     	ds	1
  1368  0046                     ___ftdiv@exp:
  1369                           
  1370                           ; 1 bytes @ 0x26
  1371  0046                     	ds	1
  1372  0047                     fround@prec:
  1373  0047                     ___ftdiv@sign:	
  1374                           ; 1 bytes @ 0x27
  1375                           
  1376                           
  1377                           ; 1 bytes @ 0x27
  1378  0047                     	ds	1
  1379  0048                     ?___ftadd:
  1380  0048                     aht_readSensor@i:	
  1381                           ; 3 bytes @ 0x28
  1382                           
  1383  0048                     ___ftadd@f1:	
  1384                           ; 1 bytes @ 0x28
  1385                           
  1386                           
  1387                           ; 3 bytes @ 0x28
  1388  0048                     	ds	1
  1389  0049                     ??___lltoft:
  1390  0049                     ___fttol@sign1:	
  1391                           ; 1 bytes @ 0x29
  1392                           
  1393                           
  1394                           ; 1 bytes @ 0x29
  1395  0049                     	ds	1
  1396  004A                     ___lltoft@exp:
  1397  004A                     ___fttol@lval:	
  1398                           ; 1 bytes @ 0x2A
  1399                           
  1400                           
  1401                           ; 4 bytes @ 0x2A
  1402  004A                     	ds	1
  1403  004B                     ?_aht_GetHumidity:
  1404  004B                     ___ftadd@f2:	
  1405                           ; 3 bytes @ 0x2B
  1406                           
  1407                           
  1408                           ; 3 bytes @ 0x2B
  1409  004B                     	ds	3
  1410  004E                     ??___ftadd:
  1411  004E                     ___fttol@exp1:	
  1412                           ; 1 bytes @ 0x2E
  1413                           
  1414  004E                     aht_GetHumidity@value:	
  1415                           ; 1 bytes @ 0x2E
  1416                           
  1417                           
  1418                           ; 3 bytes @ 0x2E
  1419  004E                     	ds	4
  1420  0052                     ___ftadd@sign:
  1421                           
  1422                           ; 1 bytes @ 0x32
  1423  0052                     	ds	1
  1424  0053                     ___ftadd@exp2:
  1425                           
  1426                           ; 1 bytes @ 0x33
  1427  0053                     	ds	1
  1428  0054                     ___ftadd@exp1:
  1429                           
  1430                           ; 1 bytes @ 0x34
  1431  0054                     	ds	1
  1432  0055                     ?_aht_GetTemperature:
  1433  0055                     ?___ftsub:	
  1434                           ; 3 bytes @ 0x35
  1435                           
  1436  0055                     ___ftsub@f2:	
  1437                           ; 3 bytes @ 0x35
  1438                           
  1439                           
  1440                           ; 3 bytes @ 0x35
  1441  0055                     	ds	3
  1442  0058                     aht_GetTemperature@value:
  1443  0058                     ___ftsub@f1:	
  1444                           ; 3 bytes @ 0x38
  1445                           
  1446                           
  1447                           ; 3 bytes @ 0x38
  1448  0058                     	ds	3
  1449  005B                     ?_sprintf:
  1450  005B                     sprintf@f:	
  1451                           ; 2 bytes @ 0x3B
  1452                           
  1453                           
  1454                           ; 1 bytes @ 0x3B
  1455  005B                     	ds	7
  1456  0062                     ??_sprintf:
  1457                           
  1458                           ; 1 bytes @ 0x42
  1459  0062                     	ds	6
  1460  0068                     ??_main:
  1461                           
  1462                           ; 1 bytes @ 0x48
  1463  0068                     	ds	2
  1464                           
  1465                           	psect	maintext
  1466  140B                     __pmaintext:	
  1467 ;;
  1468 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1469 ;;
  1470 ;; *************** function _main *****************
  1471 ;; Defined at:
  1472 ;;		line 64 in file "pic16f.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : B00/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0
  1488 ;;      Temps:          0       2       0       0       0
  1489 ;;      Totals:         0       2       0       0       0
  1490 ;;Total ram usage:        2 bytes
  1491 ;; Hardware stack levels required when called:    4
  1492 ;; This function calls:
  1493 ;;		_I2C_Master_Init
  1494 ;;		_I2C_Master_Start
  1495 ;;		_I2C_Master_Write
  1496 ;;		_aht_GetHumidity
  1497 ;;		_aht_GetTemperature
  1498 ;;		_configIO
  1499 ;;		_sprintf
  1500 ;;		_uartRC_init
  1501 ;;		_uartTX_Write
  1502 ;;		_uartTX_Write_Str
  1503 ;; This function is called by:
  1504 ;;		Startup code after reset
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           
  1509                           ;psect for function _main
  1510  140B                     _main:
  1511  140B                     l3192:	
  1512                           ;incstack = 0
  1513                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1514                           
  1515                           
  1516                           ;pic16f.c: 65:     configIO();
  1517  140B  160A  158A  25B5  160A  118A  	fcall	_configIO
  1518  1410                     l3194:
  1519                           
  1520                           ;pic16f.c: 66:     uartRC_init(9600);
  1521  1410  3080               	movlw	128
  1522  1411  1283               	bcf	3,5	;RP0=0, select bank0
  1523  1412  1303               	bcf	3,6	;RP1=0, select bank0
  1524  1413  00A6               	movwf	uartRC_init@baudrate
  1525  1414  3025               	movlw	37
  1526  1415  00A7               	movwf	uartRC_init@baudrate+1
  1527  1416  160A  118A  262F  160A  118A  	fcall	_uartRC_init
  1528  141B                     l3196:
  1529                           
  1530                           ;pic16f.c: 67:     I2C_Master_Init(100000);
  1531  141B  3000               	movlw	0
  1532  141C  1283               	bcf	3,5	;RP0=0, select bank0
  1533  141D  1303               	bcf	3,6	;RP1=0, select bank0
  1534  141E  00A3               	movwf	I2C_Master_Init@c+3
  1535  141F  3001               	movlw	1
  1536  1420  00A2               	movwf	I2C_Master_Init@c+2
  1537  1421  3086               	movlw	134
  1538  1422  00A1               	movwf	I2C_Master_Init@c+1
  1539  1423  30A0               	movlw	160
  1540  1424  00A0               	movwf	I2C_Master_Init@c
  1541  1425  160A  158A  26A9  160A  118A  	fcall	_I2C_Master_Init
  1542  142A                     l3198:
  1543                           
  1544                           ;pic16f.c: 71:        I2C_Master_Start();
  1545  142A  160A  158A  2563  160A  118A  	fcall	_I2C_Master_Start
  1546  142F                     l3200:
  1547                           
  1548                           ;pic16f.c: 72:         I2C_Master_Write(0x39);
  1549  142F  3039               	movlw	57
  1550  1430  00F0               	movwf	I2C_Master_Write@d
  1551  1431  3000               	movlw	0
  1552  1432  00F1               	movwf	I2C_Master_Write@d+1
  1553  1433  120A  158A  2002  160A  118A  	fcall	_I2C_Master_Write
  1554  1438                     l3202:
  1555                           
  1556                           ;pic16f.c: 73:        _delay((unsigned long)((10)*(4000000/4000.0)));
  1557  1438  300D               	movlw	13
  1558  1439  1283               	bcf	3,5	;RP0=0, select bank0
  1559  143A  1303               	bcf	3,6	;RP1=0, select bank0
  1560  143B  00E9               	movwf	??_main+1
  1561  143C  30FB               	movlw	251
  1562  143D  00E8               	movwf	??_main
  1563  143E                     u4797:
  1564  143E  0BE8               	decfsz	??_main,f
  1565  143F  2C3E               	goto	u4797
  1566  1440  0BE9               	decfsz	??_main+1,f
  1567  1441  2C3E               	goto	u4797
  1568  1442                     l3204:
  1569                           
  1570                           ;pic16f.c: 74:         tempera1 = aht_GetTemperature();
  1571  1442  160A  118A  213A  160A  118A  	fcall	_aht_GetTemperature
  1572  1447  1283               	bcf	3,5	;RP0=0, select bank0
  1573  1448  1303               	bcf	3,6	;RP1=0, select bank0
  1574  1449  0855               	movf	?_aht_GetTemperature,w
  1575  144A  00EA               	movwf	_tempera1
  1576  144B  0856               	movf	?_aht_GetTemperature+1,w
  1577  144C  00EB               	movwf	_tempera1+1
  1578  144D  0857               	movf	?_aht_GetTemperature+2,w
  1579  144E  00EC               	movwf	_tempera1+2
  1580  144F                     l3206:
  1581                           
  1582                           ;pic16f.c: 75:         humeda1 = aht_GetHumidity();
  1583  144F  160A  158A  27A7  160A  118A  	fcall	_aht_GetHumidity
  1584  1454  1283               	bcf	3,5	;RP0=0, select bank0
  1585  1455  1303               	bcf	3,6	;RP1=0, select bank0
  1586  1456  084B               	movf	?_aht_GetHumidity,w
  1587  1457  1683               	bsf	3,5	;RP0=1, select bank1
  1588  1458  1303               	bcf	3,6	;RP1=0, select bank1
  1589  1459  00A0               	movwf	_humeda1^(0+128)
  1590  145A  1283               	bcf	3,5	;RP0=0, select bank0
  1591  145B  1303               	bcf	3,6	;RP1=0, select bank0
  1592  145C  084C               	movf	?_aht_GetHumidity+1,w
  1593  145D  1683               	bsf	3,5	;RP0=1, select bank1
  1594  145E  1303               	bcf	3,6	;RP1=0, select bank1
  1595  145F  00A1               	movwf	(_humeda1+1)^(0+128)
  1596  1460  1283               	bcf	3,5	;RP0=0, select bank0
  1597  1461  1303               	bcf	3,6	;RP1=0, select bank0
  1598  1462  084D               	movf	?_aht_GetHumidity+2,w
  1599  1463  1683               	bsf	3,5	;RP0=1, select bank1
  1600  1464  1303               	bcf	3,6	;RP1=0, select bank1
  1601  1465  00A2               	movwf	(_humeda1+2)^(0+128)
  1602  1466                     l3208:
  1603                           
  1604                           ;pic16f.c: 77:        uartTX_Write_Str("T1   H1   \n");
  1605  1466  3086               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1606  1467  160A  158A  2625  160A  118A  	fcall	_uartTX_Write_Str
  1607  146C                     l3210:
  1608                           
  1609                           ;pic16f.c: 78:        sprintf(datos, "%2.1f   %2.1f ", tempera1,humeda1);
  1610  146C  3077               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1611  146D  1283               	bcf	3,5	;RP0=0, select bank0
  1612  146E  1303               	bcf	3,6	;RP1=0, select bank0
  1613  146F  00E8               	movwf	??_main
  1614  1470  0868               	movf	??_main,w
  1615  1471  00DB               	movwf	sprintf@f
  1616  1472  086A               	movf	_tempera1,w
  1617  1473  00DC               	movwf	?_sprintf+1
  1618  1474  086B               	movf	_tempera1+1,w
  1619  1475  00DD               	movwf	?_sprintf+2
  1620  1476  086C               	movf	_tempera1+2,w
  1621  1477  00DE               	movwf	?_sprintf+3
  1622  1478  1683               	bsf	3,5	;RP0=1, select bank1
  1623  1479  1303               	bcf	3,6	;RP1=0, select bank1
  1624  147A  0820               	movf	_humeda1^(0+128),w
  1625  147B  1283               	bcf	3,5	;RP0=0, select bank0
  1626  147C  1303               	bcf	3,6	;RP1=0, select bank0
  1627  147D  00DF               	movwf	?_sprintf+4
  1628  147E  1683               	bsf	3,5	;RP0=1, select bank1
  1629  147F  1303               	bcf	3,6	;RP1=0, select bank1
  1630  1480  0821               	movf	(_humeda1+1)^(0+128),w
  1631  1481  1283               	bcf	3,5	;RP0=0, select bank0
  1632  1482  1303               	bcf	3,6	;RP1=0, select bank0
  1633  1483  00E0               	movwf	?_sprintf+5
  1634  1484  1683               	bsf	3,5	;RP0=1, select bank1
  1635  1485  1303               	bcf	3,6	;RP1=0, select bank1
  1636  1486  0822               	movf	(_humeda1+2)^(0+128),w
  1637  1487  1283               	bcf	3,5	;RP0=0, select bank0
  1638  1488  1303               	bcf	3,6	;RP1=0, select bank0
  1639  1489  00E1               	movwf	?_sprintf+6
  1640  148A  30A5               	movlw	(low (_datos| 0))& (0+255)
  1641  148B  120A  158A  2530  160A  118A  	fcall	_sprintf
  1642                           
  1643                           ;pic16f.c: 79:       uartTX_Write(datos);
  1644  1490  30A5               	movlw	(low _datos)& (0+255)
  1645  1491  160A  158A  25A3  160A  118A  	fcall	_uartTX_Write
  1646                           
  1647                           ;pic16f.c: 80:       uartTX_Write(13);
  1648  1496  300D               	movlw	13
  1649  1497  160A  158A  25A3  160A  118A  	fcall	_uartTX_Write
  1650                           
  1651                           ;pic16f.c: 81:       uartTX_Write(10);
  1652  149C  300A               	movlw	10
  1653  149D  160A  158A  25A3  160A  118A  	fcall	_uartTX_Write
  1654  14A2                     l3212:
  1655                           
  1656                           ;pic16f.c: 82:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1657  14A2  300D               	movlw	13
  1658  14A3  1283               	bcf	3,5	;RP0=0, select bank0
  1659  14A4  1303               	bcf	3,6	;RP1=0, select bank0
  1660  14A5  00E9               	movwf	??_main+1
  1661  14A6  30FB               	movlw	251
  1662  14A7  00E8               	movwf	??_main
  1663  14A8                     u4807:
  1664  14A8  0BE8               	decfsz	??_main,f
  1665  14A9  2CA8               	goto	u4807
  1666  14AA  0BE9               	decfsz	??_main+1,f
  1667  14AB  2CA8               	goto	u4807
  1668  14AC  2C2A               	goto	l3198
  1669  14AD  120A  118A  2800   	ljmp	start
  1670  14B0                     __end_of_main:
  1671                           
  1672                           	psect	text1
  1673  1E25                     __ptext1:	
  1674 ;; *************** function _uartTX_Write_Str *****************
  1675 ;; Defined at:
  1676 ;;		line 43 in file "USART.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  string          1    wreg     PTR unsigned char 
  1679 ;;		 -> STR_1(12), 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  string          1    4[COMMON] PTR unsigned char 
  1682 ;;		 -> STR_1(12), 
  1683 ;;  n               2    2[COMMON] int 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         0       0       0       0       0
  1694 ;;      Locals:         3       0       0       0       0
  1695 ;;      Temps:          0       0       0       0       0
  1696 ;;      Totals:         3       0       0       0       0
  1697 ;;Total ram usage:        3 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    1
  1700 ;; This function calls:
  1701 ;;		_uartTX_Write
  1702 ;; This function is called by:
  1703 ;;		_main
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           
  1708                           ;psect for function _uartTX_Write_Str
  1709  1E25                     _uartTX_Write_Str:
  1710                           
  1711                           ;incstack = 0
  1712                           ; Regs used in _uartTX_Write_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1713                           ;uartTX_Write_Str@string stored from wreg
  1714  1E25  00F4               	movwf	uartTX_Write_Str@string
  1715  1E26                     l2924:
  1716                           
  1717                           ;USART.c: 44:     int n;;USART.c: 45:     for (n=0; string[n] != '\n'; n++){
  1718  1E26  01F2               	clrf	uartTX_Write_Str@n
  1719  1E27  01F3               	clrf	uartTX_Write_Str@n+1
  1720  1E28  2E3C               	goto	l2930
  1721  1E29                     l2926:
  1722                           
  1723                           ;USART.c: 46:         uartTX_Write(string[n]);
  1724  1E29  0872               	movf	uartTX_Write_Str@n,w
  1725  1E2A  0774               	addwf	uartTX_Write_Str@string,w
  1726  1E2B  0084               	movwf	4
  1727  1E2C  160A  118A  2000  160A  158A  	fcall	stringdir
  1728  1E31  160A  158A  25A3  160A  158A  	fcall	_uartTX_Write
  1729  1E36                     l2928:
  1730                           
  1731                           ;USART.c: 47:     }
  1732  1E36  3001               	movlw	1
  1733  1E37  07F2               	addwf	uartTX_Write_Str@n,f
  1734  1E38  1803               	skipnc
  1735  1E39  0AF3               	incf	uartTX_Write_Str@n+1,f
  1736  1E3A  3000               	movlw	0
  1737  1E3B  07F3               	addwf	uartTX_Write_Str@n+1,f
  1738  1E3C                     l2930:
  1739  1E3C  0872               	movf	uartTX_Write_Str@n,w
  1740  1E3D  0774               	addwf	uartTX_Write_Str@string,w
  1741  1E3E  0084               	movwf	4
  1742  1E3F  160A  118A  2000  160A  158A  	fcall	stringdir
  1743  1E44  3A0A               	xorlw	10
  1744  1E45  1D03               	skipz
  1745  1E46  2E48               	goto	u4301
  1746  1E47  2E49               	goto	u4300
  1747  1E48                     u4301:
  1748  1E48  2E29               	goto	l2926
  1749  1E49                     u4300:
  1750  1E49                     l202:
  1751  1E49  0008               	return
  1752  1E4A                     __end_of_uartTX_Write_Str:
  1753                           
  1754                           	psect	text2
  1755  1DA3                     __ptext2:	
  1756 ;; *************** function _uartTX_Write *****************
  1757 ;; Defined at:
  1758 ;;		line 36 in file "USART.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  dato            1    wreg     unsigned char 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  dato            1    1[COMMON] unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      void 
  1765 ;; Registers used:
  1766 ;;		wreg
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1772 ;;      Params:         0       0       0       0       0
  1773 ;;      Locals:         1       0       0       0       0
  1774 ;;      Temps:          1       0       0       0       0
  1775 ;;      Totals:         2       0       0       0       0
  1776 ;;Total ram usage:        2 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_main
  1782 ;;		_uartTX_Write_Str
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           
  1787                           ;psect for function _uartTX_Write
  1788  1DA3                     _uartTX_Write:
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in _uartTX_Write: [wreg]
  1792                           ;uartTX_Write@dato stored from wreg
  1793  1DA3  00F1               	movwf	uartTX_Write@dato
  1794  1DA4                     l2426:
  1795                           
  1796                           ;USART.c: 37:         TXREG = dato;
  1797  1DA4  0871               	movf	uartTX_Write@dato,w
  1798  1DA5  1283               	bcf	3,5	;RP0=0, select bank0
  1799  1DA6  1303               	bcf	3,6	;RP1=0, select bank0
  1800  1DA7  0099               	movwf	25	;volatile
  1801                           
  1802                           ;USART.c: 38:         while(TXSTAbits.TRMT == 0){
  1803  1DA8  2DAE               	goto	l2430
  1804  1DA9                     l2428:
  1805                           
  1806                           ;USART.c: 39:             _delay((unsigned long)((500)*(4000000/4000000.0)));
  1807  1DA9  30A6               	movlw	166
  1808  1DAA  00F0               	movwf	??_uartTX_Write
  1809  1DAB                     u4817:
  1810  1DAB  0BF0               	decfsz	??_uartTX_Write,f
  1811  1DAC  2DAB               	goto	u4817
  1812  1DAD  0000               	nop
  1813  1DAE                     l2430:
  1814                           
  1815                           ;USART.c: 38:         while(TXSTAbits.TRMT == 0){
  1816  1DAE  1683               	bsf	3,5	;RP0=1, select bank1
  1817  1DAF  1303               	bcf	3,6	;RP1=0, select bank1
  1818  1DB0  1C98               	btfss	24,1	;volatile
  1819  1DB1  2DB3               	goto	u3271
  1820  1DB2  2DB4               	goto	u3270
  1821  1DB3                     u3271:
  1822  1DB3  2DA9               	goto	l2428
  1823  1DB4                     u3270:
  1824  1DB4                     l196:
  1825  1DB4  0008               	return
  1826  1DB5                     __end_of_uartTX_Write:
  1827                           
  1828                           	psect	text3
  1829  162F                     __ptext3:	
  1830 ;; *************** function _uartRC_init *****************
  1831 ;; Defined at:
  1832 ;;		line 13 in file "USART.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  baudrate        2    6[BANK0 ] unsigned int 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  n               2    9[COMMON] unsigned int 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      unsigned char 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1846 ;;      Params:         0       2       0       0       0
  1847 ;;      Locals:         2       0       0       0       0
  1848 ;;      Temps:          0      12       0       0       0
  1849 ;;      Totals:         2      14       0       0       0
  1850 ;;Total ram usage:       16 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    1
  1853 ;; This function calls:
  1854 ;;		___aldiv
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function _uartRC_init
  1862  162F                     _uartRC_init:
  1863  162F                     l2872:	
  1864                           ;incstack = 0
  1865                           ; Regs used in _uartRC_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1866                           
  1867                           
  1868                           ;USART.c: 14:     uint16_t n;;USART.c: 15:     n = (4000000 - baudrate*64)/(baudrate*64)
      +                          ;
  1869  162F  1283               	bcf	3,5	;RP0=0, select bank0
  1870  1630  1303               	bcf	3,6	;RP1=0, select bank0
  1871  1631  0827               	movf	uartRC_init@baudrate+1,w
  1872  1632  00A9               	movwf	??_uartRC_init+1
  1873  1633  0826               	movf	uartRC_init@baudrate,w
  1874  1634  00A8               	movwf	??_uartRC_init
  1875  1635  3006               	movlw	6
  1876  1636  00FF               	movwf	btemp+1
  1877  1637                     u4225:
  1878  1637  1003               	clrc
  1879  1638  0DA8               	rlf	??_uartRC_init,f
  1880  1639  0DA9               	rlf	??_uartRC_init+1,f
  1881  163A  0BFF               	decfsz	btemp+1,f
  1882  163B  2E37               	goto	u4225
  1883  163C  0828               	movf	??_uartRC_init,w
  1884  163D  00F0               	movwf	___aldiv@divisor
  1885  163E  0829               	movf	??_uartRC_init+1,w
  1886  163F  00F1               	movwf	___aldiv@divisor+1
  1887  1640  01F2               	clrf	___aldiv@divisor+2
  1888  1641  01F3               	clrf	___aldiv@divisor+3
  1889  1642  0827               	movf	uartRC_init@baudrate+1,w
  1890  1643  00AB               	movwf	??_uartRC_init+3
  1891  1644  0826               	movf	uartRC_init@baudrate,w
  1892  1645  00AA               	movwf	??_uartRC_init+2
  1893  1646  3006               	movlw	6
  1894  1647  00FF               	movwf	btemp+1
  1895  1648                     u4235:
  1896  1648  1003               	clrc
  1897  1649  0DAA               	rlf	??_uartRC_init+2,f
  1898  164A  0DAB               	rlf	??_uartRC_init+3,f
  1899  164B  0BFF               	decfsz	btemp+1,f
  1900  164C  2E48               	goto	u4235
  1901  164D  082A               	movf	??_uartRC_init+2,w
  1902  164E  00AC               	movwf	??_uartRC_init+4
  1903  164F  082B               	movf	??_uartRC_init+3,w
  1904  1650  00AD               	movwf	??_uartRC_init+5
  1905  1651  01AE               	clrf	??_uartRC_init+6
  1906  1652  01AF               	clrf	??_uartRC_init+7
  1907  1653  3000               	movlw	0
  1908  1654  00B0               	movwf	??_uartRC_init+8
  1909  1655  3009               	movlw	9
  1910  1656  00B1               	movwf	??_uartRC_init+9
  1911  1657  303D               	movlw	61
  1912  1658  00B2               	movwf	??_uartRC_init+10
  1913  1659  3000               	movlw	0
  1914  165A  00B3               	movwf	??_uartRC_init+11
  1915  165B  082C               	movf	??_uartRC_init+4,w
  1916  165C  02B0               	subwf	??_uartRC_init+8,f
  1917  165D  082D               	movf	??_uartRC_init+5,w
  1918  165E  1C03               	skipc
  1919  165F  0F2D               	incfsz	??_uartRC_init+5,w
  1920  1660  2E62               	goto	u4241
  1921  1661  2E63               	goto	u4242
  1922  1662                     u4241:
  1923  1662  02B1               	subwf	??_uartRC_init+9,f
  1924  1663                     u4242:
  1925  1663  082E               	movf	??_uartRC_init+6,w
  1926  1664  1C03               	skipc
  1927  1665  0F2E               	incfsz	??_uartRC_init+6,w
  1928  1666  2E68               	goto	u4243
  1929  1667  2E69               	goto	u4244
  1930  1668                     u4243:
  1931  1668  02B2               	subwf	??_uartRC_init+10,f
  1932  1669                     u4244:
  1933  1669  082F               	movf	??_uartRC_init+7,w
  1934  166A  1C03               	skipc
  1935  166B  0F2F               	incfsz	??_uartRC_init+7,w
  1936  166C  2E6E               	goto	u4245
  1937  166D  2E6F               	goto	u4246
  1938  166E                     u4245:
  1939  166E  02B3               	subwf	??_uartRC_init+11,f
  1940  166F                     u4246:
  1941  166F  0833               	movf	??_uartRC_init+11,w
  1942  1670  00F7               	movwf	___aldiv@dividend+3
  1943  1671  0832               	movf	??_uartRC_init+10,w
  1944  1672  00F6               	movwf	___aldiv@dividend+2
  1945  1673  0831               	movf	??_uartRC_init+9,w
  1946  1674  00F5               	movwf	___aldiv@dividend+1
  1947  1675  0830               	movf	??_uartRC_init+8,w
  1948  1676  00F4               	movwf	___aldiv@dividend
  1949  1677  160A  118A  236E  160A  118A  	fcall	___aldiv
  1950  167C  0871               	movf	?___aldiv+1,w
  1951  167D  00FA               	movwf	uartRC_init@n+1
  1952  167E  0870               	movf	?___aldiv,w
  1953  167F  00F9               	movwf	uartRC_init@n
  1954  1680                     l2874:
  1955                           
  1956                           ;USART.c: 16:     if (n > 255){
  1957  1680  3001               	movlw	1
  1958  1681  027A               	subwf	uartRC_init@n+1,w
  1959  1682  3000               	movlw	0
  1960  1683  1903               	skipnz
  1961  1684  0279               	subwf	uartRC_init@n,w
  1962  1685  1C03               	skipc
  1963  1686  2E88               	goto	u4251
  1964  1687  2E89               	goto	u4250
  1965  1688                     u4251:
  1966  1688  2EE1               	goto	l2880
  1967  1689                     u4250:
  1968  1689                     l2876:
  1969                           
  1970                           ;USART.c: 17:         n = (4000000 - baudrate*16)/(baudrate*16);
  1971  1689  1283               	bcf	3,5	;RP0=0, select bank0
  1972  168A  1303               	bcf	3,6	;RP1=0, select bank0
  1973  168B  0827               	movf	uartRC_init@baudrate+1,w
  1974  168C  00A9               	movwf	??_uartRC_init+1
  1975  168D  0826               	movf	uartRC_init@baudrate,w
  1976  168E  00A8               	movwf	??_uartRC_init
  1977  168F  0EA8               	swapf	??_uartRC_init,f
  1978  1690  0EA9               	swapf	??_uartRC_init+1,f
  1979  1691  30F0               	movlw	240
  1980  1692  05A9               	andwf	??_uartRC_init+1,f
  1981  1693  0828               	movf	??_uartRC_init,w
  1982  1694  390F               	andlw	15
  1983  1695  04A9               	iorwf	??_uartRC_init+1,f
  1984  1696  30F0               	movlw	240
  1985  1697  05A8               	andwf	??_uartRC_init,f
  1986  1698  0828               	movf	??_uartRC_init,w
  1987  1699  00F0               	movwf	___aldiv@divisor
  1988  169A  0829               	movf	??_uartRC_init+1,w
  1989  169B  00F1               	movwf	___aldiv@divisor+1
  1990  169C  01F2               	clrf	___aldiv@divisor+2
  1991  169D  01F3               	clrf	___aldiv@divisor+3
  1992  169E  0827               	movf	uartRC_init@baudrate+1,w
  1993  169F  00AB               	movwf	??_uartRC_init+3
  1994  16A0  0826               	movf	uartRC_init@baudrate,w
  1995  16A1  00AA               	movwf	??_uartRC_init+2
  1996  16A2  0EAA               	swapf	??_uartRC_init+2,f
  1997  16A3  0EAB               	swapf	??_uartRC_init+3,f
  1998  16A4  30F0               	movlw	240
  1999  16A5  05AB               	andwf	??_uartRC_init+3,f
  2000  16A6  082A               	movf	??_uartRC_init+2,w
  2001  16A7  390F               	andlw	15
  2002  16A8  04AB               	iorwf	??_uartRC_init+3,f
  2003  16A9  30F0               	movlw	240
  2004  16AA  05AA               	andwf	??_uartRC_init+2,f
  2005  16AB  082A               	movf	??_uartRC_init+2,w
  2006  16AC  00AC               	movwf	??_uartRC_init+4
  2007  16AD  082B               	movf	??_uartRC_init+3,w
  2008  16AE  00AD               	movwf	??_uartRC_init+5
  2009  16AF  01AE               	clrf	??_uartRC_init+6
  2010  16B0  01AF               	clrf	??_uartRC_init+7
  2011  16B1  3000               	movlw	0
  2012  16B2  00B0               	movwf	??_uartRC_init+8
  2013  16B3  3009               	movlw	9
  2014  16B4  00B1               	movwf	??_uartRC_init+9
  2015  16B5  303D               	movlw	61
  2016  16B6  00B2               	movwf	??_uartRC_init+10
  2017  16B7  3000               	movlw	0
  2018  16B8  00B3               	movwf	??_uartRC_init+11
  2019  16B9  082C               	movf	??_uartRC_init+4,w
  2020  16BA  02B0               	subwf	??_uartRC_init+8,f
  2021  16BB  082D               	movf	??_uartRC_init+5,w
  2022  16BC  1C03               	skipc
  2023  16BD  0F2D               	incfsz	??_uartRC_init+5,w
  2024  16BE  2EC0               	goto	u4261
  2025  16BF  2EC1               	goto	u4262
  2026  16C0                     u4261:
  2027  16C0  02B1               	subwf	??_uartRC_init+9,f
  2028  16C1                     u4262:
  2029  16C1  082E               	movf	??_uartRC_init+6,w
  2030  16C2  1C03               	skipc
  2031  16C3  0F2E               	incfsz	??_uartRC_init+6,w
  2032  16C4  2EC6               	goto	u4263
  2033  16C5  2EC7               	goto	u4264
  2034  16C6                     u4263:
  2035  16C6  02B2               	subwf	??_uartRC_init+10,f
  2036  16C7                     u4264:
  2037  16C7  082F               	movf	??_uartRC_init+7,w
  2038  16C8  1C03               	skipc
  2039  16C9  0F2F               	incfsz	??_uartRC_init+7,w
  2040  16CA  2ECC               	goto	u4265
  2041  16CB  2ECD               	goto	u4266
  2042  16CC                     u4265:
  2043  16CC  02B3               	subwf	??_uartRC_init+11,f
  2044  16CD                     u4266:
  2045  16CD  0833               	movf	??_uartRC_init+11,w
  2046  16CE  00F7               	movwf	___aldiv@dividend+3
  2047  16CF  0832               	movf	??_uartRC_init+10,w
  2048  16D0  00F6               	movwf	___aldiv@dividend+2
  2049  16D1  0831               	movf	??_uartRC_init+9,w
  2050  16D2  00F5               	movwf	___aldiv@dividend+1
  2051  16D3  0830               	movf	??_uartRC_init+8,w
  2052  16D4  00F4               	movwf	___aldiv@dividend
  2053  16D5  160A  118A  236E  160A  118A  	fcall	___aldiv
  2054  16DA  0871               	movf	?___aldiv+1,w
  2055  16DB  00FA               	movwf	uartRC_init@n+1
  2056  16DC  0870               	movf	?___aldiv,w
  2057  16DD  00F9               	movwf	uartRC_init@n
  2058  16DE                     l2878:
  2059                           
  2060                           ;USART.c: 18:         TXSTAbits.BRGH = 1;
  2061  16DE  1683               	bsf	3,5	;RP0=1, select bank1
  2062  16DF  1303               	bcf	3,6	;RP1=0, select bank1
  2063  16E0  1518               	bsf	24,2	;volatile
  2064  16E1                     l2880:
  2065                           
  2066                           ;USART.c: 20:     if (n < 256){
  2067  16E1  3001               	movlw	1
  2068  16E2  027A               	subwf	uartRC_init@n+1,w
  2069  16E3  3000               	movlw	0
  2070  16E4  1903               	skipnz
  2071  16E5  0279               	subwf	uartRC_init@n,w
  2072  16E6  1803               	skipnc
  2073  16E7  2EE9               	goto	u4271
  2074  16E8  2EEA               	goto	u4270
  2075  16E9                     u4271:
  2076  16E9  2EF6               	goto	l187
  2077  16EA                     u4270:
  2078  16EA                     l2882:
  2079                           
  2080                           ;USART.c: 21:         SPBRG = n;
  2081  16EA  0879               	movf	uartRC_init@n,w
  2082  16EB  1683               	bsf	3,5	;RP0=1, select bank1
  2083  16EC  1303               	bcf	3,6	;RP1=0, select bank1
  2084  16ED  0099               	movwf	25	;volatile
  2085  16EE                     l2884:
  2086                           
  2087                           ;USART.c: 22:         TXSTAbits.SYNC = 0;
  2088  16EE  1218               	bcf	24,4	;volatile
  2089  16EF                     l2886:
  2090                           
  2091                           ;USART.c: 23:         RCSTAbits.SPEN = 1;
  2092  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2093  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2094  16F1  1798               	bsf	24,7	;volatile
  2095  16F2                     l2888:
  2096                           
  2097                           ;USART.c: 24:         RCSTAbits.CREN = 1;
  2098  16F2  1618               	bsf	24,4	;volatile
  2099  16F3                     l2890:
  2100                           
  2101                           ;USART.c: 25:         TXSTAbits.TXEN = 1;
  2102  16F3  1683               	bsf	3,5	;RP0=1, select bank1
  2103  16F4  1303               	bcf	3,6	;RP1=0, select bank1
  2104  16F5  1698               	bsf	24,5	;volatile
  2105  16F6                     l187:
  2106  16F6  0008               	return
  2107  16F7                     __end_of_uartRC_init:
  2108                           
  2109                           	psect	text4
  2110  136E                     __ptext4:	
  2111 ;; *************** function ___aldiv *****************
  2112 ;; Defined at:
  2113 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\aldiv.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  divisor         4    0[COMMON] long 
  2116 ;;  dividend        4    4[COMMON] long 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  quotient        4    2[BANK0 ] long 
  2119 ;;  sign            1    1[BANK0 ] unsigned char 
  2120 ;;  counter         1    0[BANK0 ] unsigned char 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  4    0[COMMON] long 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2, status,0
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2130 ;;      Params:         8       0       0       0       0
  2131 ;;      Locals:         0       6       0       0       0
  2132 ;;      Temps:          1       0       0       0       0
  2133 ;;      Totals:         9       6       0       0       0
  2134 ;;Total ram usage:       15 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_uartRC_init
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           
  2144                           ;psect for function ___aldiv
  2145  136E                     ___aldiv:
  2146  136E                     l2672:	
  2147                           ;incstack = 0
  2148                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2149                           
  2150  136E  1283               	bcf	3,5	;RP0=0, select bank0
  2151  136F  1303               	bcf	3,6	;RP1=0, select bank0
  2152  1370  01A1               	clrf	___aldiv@sign
  2153  1371                     l2674:
  2154  1371  1FF3               	btfss	___aldiv@divisor+3,7
  2155  1372  2B74               	goto	u3811
  2156  1373  2B75               	goto	u3810
  2157  1374                     u3811:
  2158  1374  2B82               	goto	l469
  2159  1375                     u3810:
  2160  1375                     l2676:
  2161  1375  09F0               	comf	___aldiv@divisor,f
  2162  1376  09F1               	comf	___aldiv@divisor+1,f
  2163  1377  09F2               	comf	___aldiv@divisor+2,f
  2164  1378  09F3               	comf	___aldiv@divisor+3,f
  2165  1379  0AF0               	incf	___aldiv@divisor,f
  2166  137A  1903               	skipnz
  2167  137B  0AF1               	incf	___aldiv@divisor+1,f
  2168  137C  1903               	skipnz
  2169  137D  0AF2               	incf	___aldiv@divisor+2,f
  2170  137E  1903               	skipnz
  2171  137F  0AF3               	incf	___aldiv@divisor+3,f
  2172  1380  01A1               	clrf	___aldiv@sign
  2173  1381  0AA1               	incf	___aldiv@sign,f
  2174  1382                     l469:
  2175  1382  1FF7               	btfss	___aldiv@dividend+3,7
  2176  1383  2B85               	goto	u3821
  2177  1384  2B86               	goto	u3820
  2178  1385                     u3821:
  2179  1385  2B95               	goto	l2682
  2180  1386                     u3820:
  2181  1386                     l2678:
  2182  1386  09F4               	comf	___aldiv@dividend,f
  2183  1387  09F5               	comf	___aldiv@dividend+1,f
  2184  1388  09F6               	comf	___aldiv@dividend+2,f
  2185  1389  09F7               	comf	___aldiv@dividend+3,f
  2186  138A  0AF4               	incf	___aldiv@dividend,f
  2187  138B  1903               	skipnz
  2188  138C  0AF5               	incf	___aldiv@dividend+1,f
  2189  138D  1903               	skipnz
  2190  138E  0AF6               	incf	___aldiv@dividend+2,f
  2191  138F  1903               	skipnz
  2192  1390  0AF7               	incf	___aldiv@dividend+3,f
  2193  1391                     l2680:
  2194  1391  3001               	movlw	1
  2195  1392  00F8               	movwf	??___aldiv
  2196  1393  0878               	movf	??___aldiv,w
  2197  1394  06A1               	xorwf	___aldiv@sign,f
  2198  1395                     l2682:
  2199  1395  3000               	movlw	0
  2200  1396  00A5               	movwf	___aldiv@quotient+3
  2201  1397  3000               	movlw	0
  2202  1398  00A4               	movwf	___aldiv@quotient+2
  2203  1399  3000               	movlw	0
  2204  139A  00A3               	movwf	___aldiv@quotient+1
  2205  139B  3000               	movlw	0
  2206  139C  00A2               	movwf	___aldiv@quotient
  2207  139D                     l2684:
  2208  139D  0873               	movf	___aldiv@divisor+3,w
  2209  139E  0472               	iorwf	___aldiv@divisor+2,w
  2210  139F  0471               	iorwf	___aldiv@divisor+1,w
  2211  13A0  0470               	iorwf	___aldiv@divisor,w
  2212  13A1  1903               	skipnz
  2213  13A2  2BA4               	goto	u3831
  2214  13A3  2BA5               	goto	u3830
  2215  13A4                     u3831:
  2216  13A4  2BF2               	goto	l2704
  2217  13A5                     u3830:
  2218  13A5                     l2686:
  2219  13A5  01A0               	clrf	___aldiv@counter
  2220  13A6  0AA0               	incf	___aldiv@counter,f
  2221  13A7  2BB5               	goto	l2690
  2222  13A8                     l2688:
  2223  13A8  3001               	movlw	1
  2224  13A9  00F8               	movwf	??___aldiv
  2225  13AA                     u3845:
  2226  13AA  1003               	clrc
  2227  13AB  0DF0               	rlf	___aldiv@divisor,f
  2228  13AC  0DF1               	rlf	___aldiv@divisor+1,f
  2229  13AD  0DF2               	rlf	___aldiv@divisor+2,f
  2230  13AE  0DF3               	rlf	___aldiv@divisor+3,f
  2231  13AF  0BF8               	decfsz	??___aldiv,f
  2232  13B0  2BAA               	goto	u3845
  2233  13B1  3001               	movlw	1
  2234  13B2  00F8               	movwf	??___aldiv
  2235  13B3  0878               	movf	??___aldiv,w
  2236  13B4  07A0               	addwf	___aldiv@counter,f
  2237  13B5                     l2690:
  2238  13B5  1FF3               	btfss	___aldiv@divisor+3,7
  2239  13B6  2BB8               	goto	u3851
  2240  13B7  2BB9               	goto	u3850
  2241  13B8                     u3851:
  2242  13B8  2BA8               	goto	l2688
  2243  13B9                     u3850:
  2244  13B9                     l2692:
  2245  13B9  3001               	movlw	1
  2246  13BA  00F8               	movwf	??___aldiv
  2247  13BB                     u3865:
  2248  13BB  1003               	clrc
  2249  13BC  0DA2               	rlf	___aldiv@quotient,f
  2250  13BD  0DA3               	rlf	___aldiv@quotient+1,f
  2251  13BE  0DA4               	rlf	___aldiv@quotient+2,f
  2252  13BF  0DA5               	rlf	___aldiv@quotient+3,f
  2253  13C0  0BF8               	decfsz	??___aldiv,f
  2254  13C1  2BBB               	goto	u3865
  2255  13C2                     l2694:
  2256  13C2  0873               	movf	___aldiv@divisor+3,w
  2257  13C3  0277               	subwf	___aldiv@dividend+3,w
  2258  13C4  1D03               	skipz
  2259  13C5  2BD0               	goto	u3875
  2260  13C6  0872               	movf	___aldiv@divisor+2,w
  2261  13C7  0276               	subwf	___aldiv@dividend+2,w
  2262  13C8  1D03               	skipz
  2263  13C9  2BD0               	goto	u3875
  2264  13CA  0871               	movf	___aldiv@divisor+1,w
  2265  13CB  0275               	subwf	___aldiv@dividend+1,w
  2266  13CC  1D03               	skipz
  2267  13CD  2BD0               	goto	u3875
  2268  13CE  0870               	movf	___aldiv@divisor,w
  2269  13CF  0274               	subwf	___aldiv@dividend,w
  2270  13D0                     u3875:
  2271  13D0  1C03               	skipc
  2272  13D1  2BD3               	goto	u3871
  2273  13D2  2BD4               	goto	u3870
  2274  13D3                     u3871:
  2275  13D3  2BE3               	goto	l2700
  2276  13D4                     u3870:
  2277  13D4                     l2696:
  2278  13D4  0870               	movf	___aldiv@divisor,w
  2279  13D5  02F4               	subwf	___aldiv@dividend,f
  2280  13D6  0871               	movf	___aldiv@divisor+1,w
  2281  13D7  1C03               	skipc
  2282  13D8  0F71               	incfsz	___aldiv@divisor+1,w
  2283  13D9  02F5               	subwf	___aldiv@dividend+1,f
  2284  13DA  0872               	movf	___aldiv@divisor+2,w
  2285  13DB  1C03               	skipc
  2286  13DC  0F72               	incfsz	___aldiv@divisor+2,w
  2287  13DD  02F6               	subwf	___aldiv@dividend+2,f
  2288  13DE  0873               	movf	___aldiv@divisor+3,w
  2289  13DF  1C03               	skipc
  2290  13E0  0F73               	incfsz	___aldiv@divisor+3,w
  2291  13E1  02F7               	subwf	___aldiv@dividend+3,f
  2292  13E2                     l2698:
  2293  13E2  1422               	bsf	___aldiv@quotient,0
  2294  13E3                     l2700:
  2295  13E3  3001               	movlw	1
  2296  13E4                     u3885:
  2297  13E4  1003               	clrc
  2298  13E5  0CF3               	rrf	___aldiv@divisor+3,f
  2299  13E6  0CF2               	rrf	___aldiv@divisor+2,f
  2300  13E7  0CF1               	rrf	___aldiv@divisor+1,f
  2301  13E8  0CF0               	rrf	___aldiv@divisor,f
  2302  13E9  3EFF               	addlw	-1
  2303  13EA  1D03               	skipz
  2304  13EB  2BE4               	goto	u3885
  2305  13EC                     l2702:
  2306  13EC  3001               	movlw	1
  2307  13ED  02A0               	subwf	___aldiv@counter,f
  2308  13EE  1D03               	btfss	3,2
  2309  13EF  2BF1               	goto	u3891
  2310  13F0  2BF2               	goto	u3890
  2311  13F1                     u3891:
  2312  13F1  2BB9               	goto	l2692
  2313  13F2                     u3890:
  2314  13F2                     l2704:
  2315  13F2  0821               	movf	___aldiv@sign,w
  2316  13F3  1903               	btfsc	3,2
  2317  13F4  2BF6               	goto	u3901
  2318  13F5  2BF7               	goto	u3900
  2319  13F6                     u3901:
  2320  13F6  2C02               	goto	l2708
  2321  13F7                     u3900:
  2322  13F7                     l2706:
  2323  13F7  09A2               	comf	___aldiv@quotient,f
  2324  13F8  09A3               	comf	___aldiv@quotient+1,f
  2325  13F9  09A4               	comf	___aldiv@quotient+2,f
  2326  13FA  09A5               	comf	___aldiv@quotient+3,f
  2327  13FB  0AA2               	incf	___aldiv@quotient,f
  2328  13FC  1903               	skipnz
  2329  13FD  0AA3               	incf	___aldiv@quotient+1,f
  2330  13FE  1903               	skipnz
  2331  13FF  0AA4               	incf	___aldiv@quotient+2,f
  2332  1400  1903               	skipnz
  2333  1401  0AA5               	incf	___aldiv@quotient+3,f
  2334  1402                     l2708:
  2335  1402  0825               	movf	___aldiv@quotient+3,w
  2336  1403  00F3               	movwf	?___aldiv+3
  2337  1404  0824               	movf	___aldiv@quotient+2,w
  2338  1405  00F2               	movwf	?___aldiv+2
  2339  1406  0823               	movf	___aldiv@quotient+1,w
  2340  1407  00F1               	movwf	?___aldiv+1
  2341  1408  0822               	movf	___aldiv@quotient,w
  2342  1409  00F0               	movwf	?___aldiv
  2343  140A                     l479:
  2344  140A  0008               	return
  2345  140B                     __end_of___aldiv:
  2346                           
  2347                           	psect	text5
  2348  0D30                     __ptext5:	
  2349 ;; *************** function _sprintf *****************
  2350 ;; Defined at:
  2351 ;;		line 505 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  sp              1    wreg     PTR unsigned char 
  2354 ;;		 -> datos(20), 
  2355 ;;  f               1   59[BANK0 ] PTR const unsigned char 
  2356 ;;		 -> STR_2(15), 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  sp              1   18[BANK1 ] PTR unsigned char 
  2359 ;;		 -> datos(20), 
  2360 ;;  tmpval          4   12[BANK1 ] struct .
  2361 ;;  val             4    4[BANK1 ] unsigned long 
  2362 ;;  fval            3   19[BANK1 ] unsigned long 
  2363 ;;  prec            2   22[BANK1 ] int 
  2364 ;;  eexp            2   16[BANK1 ] int 
  2365 ;;  width           2   10[BANK1 ] int 
  2366 ;;  flag            2    8[BANK1 ] unsigned short 
  2367 ;;  cp              2    0        PTR const unsigned char 
  2368 ;;  len             2    0        unsigned int 
  2369 ;;  c               1   24[BANK1 ] unsigned char 
  2370 ;;  ap              1    3[BANK1 ] PTR void [1]
  2371 ;;		 -> ?_sprintf(2), 
  2372 ;;  d               1    0        unsigned char 
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  2   59[BANK0 ] int 
  2375 ;; Registers used:
  2376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2382 ;;      Params:         0       7       0       0       0
  2383 ;;      Locals:         0       0      25       0       0
  2384 ;;      Temps:          0       6       0       0       0
  2385 ;;      Totals:         0      13      25       0       0
  2386 ;;Total ram usage:       38 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    3
  2389 ;; This function calls:
  2390 ;;		___awdiv
  2391 ;;		___ftadd
  2392 ;;		___ftge
  2393 ;;		___ftmul
  2394 ;;		___ftneg
  2395 ;;		___ftsub
  2396 ;;		___fttol
  2397 ;;		___lldiv
  2398 ;;		___llmod
  2399 ;;		___lltoft
  2400 ;;		___wmul
  2401 ;;		__div_to_l_
  2402 ;;		__tdiv_to_l_
  2403 ;;		_fround
  2404 ;;		_isdigit
  2405 ;;		_scale
  2406 ;; This function is called by:
  2407 ;;		_main
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           
  2412                           ;psect for function _sprintf
  2413  0D30                     _sprintf:
  2414                           
  2415                           ;incstack = 0
  2416                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2417                           ;sprintf@sp stored from wreg
  2418  0D30  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0D31  1303               	bcf	3,6	;RP1=0, select bank1
  2420  0D32  00CB               	movwf	sprintf@sp^(0+128)
  2421  0D33                     l2932:
  2422                           
  2423                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const ch
      +                          ar * f, ...);D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 506: {;D:\MPLAB XC8 
      +                          compiler\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\MPLAB XC8 compiler\pic\so
      +                          urces\c90\common\doprnt.c: 512:  char c;;D:\MPLAB XC8 compiler\pic\sources\c90\common\do
      +                          prnt.c: 514:  int width;;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 517:  in
      +                          t prec;;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 525:  unsigned short flag
      +                          ;
  2424  0D33  305C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2425  0D34  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0D35  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0D36  00E2               	movwf	??_sprintf
  2428  0D37  0862               	movf	??_sprintf,w
  2429  0D38  1683               	bsf	3,5	;RP0=1, select bank1
  2430  0D39  1303               	bcf	3,6	;RP1=0, select bank1
  2431  0D3A  00BC               	movwf	sprintf@ap^(0+128)
  2432  0D3B                     L1:
  2433                           
  2434                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  2435  0D3B  120A  118A  2FB9   	goto	l3180
  2436  0D3E                     l2934:
  2437                           
  2438                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  2439  0D3E  3025               	movlw	37
  2440  0D3F  0651               	xorwf	sprintf@c^(0+128),w
  2441  0D40  1903               	btfsc	3,2
  2442  0D41  2D43               	goto	u4311
  2443  0D42  2D44               	goto	u4310
  2444  0D43                     u4311:
  2445  0D43  2D58               	goto	l2940
  2446  0D44                     u4310:
  2447  0D44                     l2936:
  2448                           
  2449                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 557:   {;D:\MPLAB XC8 compiler\p
      +                          ic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2450  0D44  0851               	movf	sprintf@c^(0+128),w
  2451  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  2452  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  2453  0D47  00E2               	movwf	??_sprintf
  2454  0D48  1683               	bsf	3,5	;RP0=1, select bank1
  2455  0D49  1303               	bcf	3,6	;RP1=0, select bank1
  2456  0D4A  084B               	movf	sprintf@sp^(0+128),w
  2457  0D4B  0084               	movwf	4
  2458  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0D4E  0862               	movf	??_sprintf,w
  2461  0D4F  1383               	bcf	3,7	;select IRP bank0
  2462  0D50  0080               	movwf	0
  2463  0D51                     l2938:
  2464  0D51  3001               	movlw	1
  2465  0D52  00E2               	movwf	??_sprintf
  2466  0D53  0862               	movf	??_sprintf,w
  2467  0D54  1683               	bsf	3,5	;RP0=1, select bank1
  2468  0D55  1303               	bcf	3,6	;RP1=0, select bank1
  2469  0D56  07CB               	addwf	sprintf@sp^(0+128),f
  2470                           
  2471                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 559:    continue;
  2472  0D57  2D3B               	goto	L1
  2473  0D58                     l2940:
  2474                           
  2475                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2476  0D58  01C3               	clrf	sprintf@width^(0+128)
  2477  0D59  01C4               	clrf	(sprintf@width+1)^(0+128)
  2478                           
  2479                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2480  0D5A  01C1               	clrf	sprintf@flag^(0+128)
  2481  0D5B  01C2               	clrf	(sprintf@flag+1)^(0+128)
  2482  0D5C                     l2942:
  2483                           
  2484                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)*f))
      +                           {
  2485  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  2487  0D5E  085B               	movf	sprintf@f,w
  2488  0D5F  0084               	movwf	4
  2489  0D60  160A  118A  2000  120A  158A  	fcall	stringdir
  2490  0D65  160A  158A  2591  120A  158A  	fcall	_isdigit
  2491  0D6A  1C03               	btfss	3,0
  2492  0D6B  2D6D               	goto	u4321
  2493  0D6C  2D6E               	goto	u4320
  2494  0D6D                     u4321:
  2495  0D6D  2DB8               	goto	l2954
  2496  0D6E                     u4320:
  2497  0D6E                     l2944:
  2498                           
  2499                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  2500  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  2501  0D6F  1303               	bcf	3,6	;RP1=0, select bank1
  2502  0D70  01C3               	clrf	sprintf@width^(0+128)
  2503  0D71  01C4               	clrf	(sprintf@width+1)^(0+128)
  2504  0D72                     l2946:
  2505                           
  2506                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  2507  0D72  300A               	movlw	10
  2508  0D73  00F0               	movwf	___wmul@multiplier
  2509  0D74  3000               	movlw	0
  2510  0D75  00F1               	movwf	___wmul@multiplier+1
  2511  0D76  1683               	bsf	3,5	;RP0=1, select bank1
  2512  0D77  1303               	bcf	3,6	;RP1=0, select bank1
  2513  0D78  0844               	movf	(sprintf@width+1)^(0+128),w
  2514  0D79  00F3               	movwf	___wmul@multiplicand+1
  2515  0D7A  0843               	movf	sprintf@width^(0+128),w
  2516  0D7B  00F2               	movwf	___wmul@multiplicand
  2517  0D7C  160A  158A  2600  120A  158A  	fcall	___wmul
  2518  0D81  0871               	movf	?___wmul+1,w
  2519  0D82  1683               	bsf	3,5	;RP0=1, select bank1
  2520  0D83  1303               	bcf	3,6	;RP1=0, select bank1
  2521  0D84  00C4               	movwf	(sprintf@width+1)^(0+128)
  2522  0D85  0870               	movf	?___wmul,w
  2523  0D86  00C3               	movwf	sprintf@width^(0+128)
  2524  0D87                     l2948:
  2525                           
  2526                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - '0';
  2527  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  2528  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  2529  0D89  085B               	movf	sprintf@f,w
  2530  0D8A  0084               	movwf	4
  2531  0D8B  160A  118A  2000  120A  158A  	fcall	stringdir
  2532  0D90  3ED0               	addlw	208
  2533  0D91  00E2               	movwf	??_sprintf
  2534  0D92  30FF               	movlw	255
  2535  0D93  1803               	skipnc
  2536  0D94  3000               	movlw	0
  2537  0D95  00E3               	movwf	??_sprintf+1
  2538  0D96  0862               	movf	??_sprintf,w
  2539  0D97  1683               	bsf	3,5	;RP0=1, select bank1
  2540  0D98  1303               	bcf	3,6	;RP1=0, select bank1
  2541  0D99  07C3               	addwf	sprintf@width^(0+128),f
  2542  0D9A  1803               	skipnc
  2543  0D9B  0AC4               	incf	(sprintf@width+1)^(0+128),f
  2544  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  2545  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  2546  0D9E  0863               	movf	??_sprintf+1,w
  2547  0D9F  1683               	bsf	3,5	;RP0=1, select bank1
  2548  0DA0  1303               	bcf	3,6	;RP1=0, select bank1
  2549  0DA1  07C4               	addwf	(sprintf@width+1)^(0+128),f
  2550  0DA2                     l2950:
  2551  0DA2  3001               	movlw	1
  2552  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  2553  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  2554  0DA5  00E2               	movwf	??_sprintf
  2555  0DA6  0862               	movf	??_sprintf,w
  2556  0DA7  07DB               	addwf	sprintf@f,f
  2557  0DA8                     l2952:
  2558                           
  2559                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((unsigne
      +                          d)*f));
  2560  0DA8  085B               	movf	sprintf@f,w
  2561  0DA9  0084               	movwf	4
  2562  0DAA  160A  118A  2000  120A  158A  	fcall	stringdir
  2563  0DAF  160A  158A  2591  120A  158A  	fcall	_isdigit
  2564  0DB4  1803               	btfsc	3,0
  2565  0DB5  2DB7               	goto	u4331
  2566  0DB6  2DB8               	goto	u4330
  2567  0DB7                     u4331:
  2568  0DB7  2D72               	goto	l2946
  2569  0DB8                     u4330:
  2570  0DB8                     l2954:
  2571                           
  2572                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
  2573  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  2574  0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  2575  0DBA  085B               	movf	sprintf@f,w
  2576  0DBB  0084               	movwf	4
  2577  0DBC  160A  118A  2000  120A  158A  	fcall	stringdir
  2578  0DC1  3A2E               	xorlw	46
  2579  0DC2  1D03               	skipz
  2580  0DC3  2DC5               	goto	u4341
  2581  0DC4  2DC6               	goto	u4340
  2582  0DC5                     u4341:
  2583  0DC5  2E1C               	goto	l2970
  2584  0DC6                     u4340:
  2585  0DC6                     l2956:
  2586                           
  2587                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 629:    flag |= 0x4000;
  2588  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  2589  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  2590  0DC8  1742               	bsf	(sprintf@flag^(0+128)+1),6
  2591  0DC9                     l2958:
  2592                           
  2593                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 630:    f++;
  2594  0DC9  3001               	movlw	1
  2595  0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  2596  0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  2597  0DCC  00E2               	movwf	??_sprintf
  2598  0DCD  0862               	movf	??_sprintf,w
  2599  0DCE  07DB               	addwf	sprintf@f,f
  2600  0DCF                     l2960:
  2601                           
  2602                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 644:    {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2603  0DCF  1683               	bsf	3,5	;RP0=1, select bank1
  2604  0DD0  1303               	bcf	3,6	;RP1=0, select bank1
  2605  0DD1  01CF               	clrf	sprintf@prec^(0+128)
  2606  0DD2  01D0               	clrf	(sprintf@prec+1)^(0+128)
  2607                           
  2608                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned
      +                          )*f)) {
  2609  0DD3  2E0A               	goto	l2968
  2610  0DD4                     l2962:
  2611                           
  2612                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  2613  0DD4  300A               	movlw	10
  2614  0DD5  00F0               	movwf	___wmul@multiplier
  2615  0DD6  3000               	movlw	0
  2616  0DD7  00F1               	movwf	___wmul@multiplier+1
  2617  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  2618  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  2619  0DDA  0850               	movf	(sprintf@prec+1)^(0+128),w
  2620  0DDB  00F3               	movwf	___wmul@multiplicand+1
  2621  0DDC  084F               	movf	sprintf@prec^(0+128),w
  2622  0DDD  00F2               	movwf	___wmul@multiplicand
  2623  0DDE  160A  158A  2600  120A  158A  	fcall	___wmul
  2624  0DE3  0871               	movf	?___wmul+1,w
  2625  0DE4  1683               	bsf	3,5	;RP0=1, select bank1
  2626  0DE5  1303               	bcf	3,6	;RP1=0, select bank1
  2627  0DE6  00D0               	movwf	(sprintf@prec+1)^(0+128)
  2628  0DE7  0870               	movf	?___wmul,w
  2629  0DE8  00CF               	movwf	sprintf@prec^(0+128)
  2630  0DE9                     l2964:
  2631                           
  2632                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0';
  2633  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  2634  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  2635  0DEB  085B               	movf	sprintf@f,w
  2636  0DEC  0084               	movwf	4
  2637  0DED  160A  118A  2000  120A  158A  	fcall	stringdir
  2638  0DF2  3ED0               	addlw	208
  2639  0DF3  00E2               	movwf	??_sprintf
  2640  0DF4  30FF               	movlw	255
  2641  0DF5  1803               	skipnc
  2642  0DF6  3000               	movlw	0
  2643  0DF7  00E3               	movwf	??_sprintf+1
  2644  0DF8  0862               	movf	??_sprintf,w
  2645  0DF9  1683               	bsf	3,5	;RP0=1, select bank1
  2646  0DFA  1303               	bcf	3,6	;RP1=0, select bank1
  2647  0DFB  07CF               	addwf	sprintf@prec^(0+128),f
  2648  0DFC  1803               	skipnc
  2649  0DFD  0AD0               	incf	(sprintf@prec+1)^(0+128),f
  2650  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  2651  0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  2652  0E00  0863               	movf	??_sprintf+1,w
  2653  0E01  1683               	bsf	3,5	;RP0=1, select bank1
  2654  0E02  1303               	bcf	3,6	;RP1=0, select bank1
  2655  0E03  07D0               	addwf	(sprintf@prec+1)^(0+128),f
  2656  0E04                     l2966:
  2657  0E04  3001               	movlw	1
  2658  0E05  1283               	bcf	3,5	;RP0=0, select bank0
  2659  0E06  1303               	bcf	3,6	;RP1=0, select bank0
  2660  0E07  00E2               	movwf	??_sprintf
  2661  0E08  0862               	movf	??_sprintf,w
  2662  0E09  07DB               	addwf	sprintf@f,f
  2663  0E0A                     l2968:
  2664                           
  2665                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned
      +                          )*f)) {
  2666  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  2667  0E0B  085B               	movf	sprintf@f,w
  2668  0E0C  0084               	movwf	4
  2669  0E0D  160A  118A  2000  120A  158A  	fcall	stringdir
  2670  0E12  160A  158A  2591  120A  158A  	fcall	_isdigit
  2671  0E17  1803               	btfsc	3,0
  2672  0E18  2E1A               	goto	u4351
  2673  0E19  2E1B               	goto	u4350
  2674  0E1A                     u4351:
  2675  0E1A  2DD4               	goto	l2962
  2676  0E1B                     u4350:
  2677  0E1B  2E26               	goto	l2976
  2678  0E1C                     l2970:
  2679                           
  2680                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2681  0E1C  1683               	bsf	3,5	;RP0=1, select bank1
  2682  0E1D  1303               	bcf	3,6	;RP1=0, select bank1
  2683  0E1E  01CF               	clrf	sprintf@prec^(0+128)
  2684  0E1F  01D0               	clrf	(sprintf@prec+1)^(0+128)
  2685  0E20                     l2972:
  2686                           
  2687                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 654:    flag |= 0x1000;
  2688  0E20  1642               	bsf	(sprintf@flag^(0+128)+1),4
  2689  0E21  2E26               	goto	l2976
  2690  0E22                     l333:	
  2691                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2692                           
  2693                           
  2694                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 689:    flag |= 0x400;
  2695  0E22  1683               	bsf	3,5	;RP0=1, select bank1
  2696  0E23  1303               	bcf	3,6	;RP1=0, select bank1
  2697  0E24  1542               	bsf	(sprintf@flag^(0+128)+1),2
  2698                           
  2699                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 690:    break;
  2700  0E25  2E46               	goto	l2978
  2701  0E26                     l2976:
  2702  0E26  3001               	movlw	1
  2703  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0E29  07DB               	addwf	sprintf@f,f
  2706  0E2A  30FF               	movlw	-1
  2707  0E2B  075B               	addwf	sprintf@f,w
  2708  0E2C  0084               	movwf	4
  2709  0E2D  160A  118A  2000  120A  158A  	fcall	stringdir
  2710  0E32  1683               	bsf	3,5	;RP0=1, select bank1
  2711  0E33  1303               	bcf	3,6	;RP1=0, select bank1
  2712  0E34  00D1               	movwf	sprintf@c^(0+128)
  2713  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  2714  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  2715  0E37  00E2               	movwf	??_sprintf
  2716  0E38  01E3               	clrf	??_sprintf+1
  2717                           
  2718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2719                           ; Switch size 1, requested type "simple"
  2720                           ; Number of cases is 1, Range of values is 0 to 0
  2721                           ; switch strategies available:
  2722                           ; Name         Instructions Cycles
  2723                           ; simple_byte            4     3 (average)
  2724                           ; direct_byte           11     8 (fixed)
  2725                           ; jumptable            260     6 (fixed)
  2726                           ;	Chosen strategy is simple_byte
  2727  0E39  0863               	movf	??_sprintf+1,w
  2728  0E3A  3A00               	xorlw	0	; case 0
  2729  0E3B  1903               	skipnz
  2730  0E3C  2E3E               	goto	l3278
  2731  0E3D  2D3B               	goto	L1
  2732  0E3E                     l3278:
  2733                           
  2734                           ; Switch size 1, requested type "simple"
  2735                           ; Number of cases is 2, Range of values is 0 to 102
  2736                           ; switch strategies available:
  2737                           ; Name         Instructions Cycles
  2738                           ; simple_byte            7     4 (average)
  2739                           ; jumptable            260     6 (fixed)
  2740                           ;	Chosen strategy is simple_byte
  2741  0E3E  0862               	movf	??_sprintf,w
  2742  0E3F  3A00               	xorlw	0	; case 0
  2743  0E40  1903               	skipnz
  2744  0E41  2FFD               	goto	L3
  2745  0E42  3A66               	xorlw	102	; case 102
  2746  0E43  1903               	skipnz
  2747  0E44  2E22               	goto	l333
  2748  0E45  2D3B               	goto	L1
  2749  0E46                     l2978:
  2750                           
  2751                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 851:   if(flag & (0x700)) {
  2752  0E46  3000               	movlw	0
  2753  0E47  0541               	andwf	sprintf@flag^(0+128),w
  2754  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0E4A  00E2               	movwf	??_sprintf
  2757  0E4B  3007               	movlw	7
  2758  0E4C  1683               	bsf	3,5	;RP0=1, select bank1
  2759  0E4D  1303               	bcf	3,6	;RP1=0, select bank1
  2760  0E4E  0542               	andwf	(sprintf@flag+1)^(0+128),w
  2761  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  2762  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  2763  0E51  00E3               	movwf	??_sprintf+1
  2764  0E52  0862               	movf	??_sprintf,w
  2765  0E53  0463               	iorwf	??_sprintf+1,w
  2766  0E54  1903               	btfsc	3,2
  2767  0E55  2E57               	goto	u4361
  2768  0E56  2E5A               	goto	u4360
  2769  0E57                     u4361:
  2770  0E57  120A  118A  2EB6   	goto	l3134
  2771  0E5A                     u4360:
  2772  0E5A                     l2980:
  2773                           
  2774                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 853:    if(flag & 0x1000)
  2775  0E5A  1683               	bsf	3,5	;RP0=1, select bank1
  2776  0E5B  1303               	bcf	3,6	;RP1=0, select bank1
  2777  0E5C  1E42               	btfss	(sprintf@flag+1)^(0+128),4
  2778  0E5D  2E5F               	goto	u4371
  2779  0E5E  2E60               	goto	u4370
  2780  0E5F                     u4371:
  2781  0E5F  2E64               	goto	l2984
  2782  0E60                     u4370:
  2783  0E60                     l2982:
  2784                           
  2785                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 855:     prec = 6;
  2786  0E60  3006               	movlw	6
  2787  0E61  00CF               	movwf	sprintf@prec^(0+128)
  2788  0E62  3000               	movlw	0
  2789  0E63  00D0               	movwf	(sprintf@prec^(0+128)+1)
  2790  0E64                     l2984:
  2791                           
  2792                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 856:    fval = (*(double *)__va_
      +                          arg((*(double **)ap), (double)0));
  2793  0E64  083C               	movf	sprintf@ap^(0+128),w
  2794  0E65  0084               	movwf	4
  2795  0E66  1383               	bcf	3,7	;select IRP bank0
  2796  0E67  0800               	movf	0,w
  2797  0E68  00CC               	movwf	sprintf@fval^(0+128)
  2798  0E69  0A84               	incf	4,f
  2799  0E6A  0800               	movf	0,w
  2800  0E6B  00CD               	movwf	(sprintf@fval+1)^(0+128)
  2801  0E6C  0A84               	incf	4,f
  2802  0E6D  0800               	movf	0,w
  2803  0E6E  00CE               	movwf	(sprintf@fval+2)^(0+128)
  2804  0E6F                     l2986:
  2805  0E6F  3003               	movlw	3
  2806  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  2807  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  2808  0E72  00E2               	movwf	??_sprintf
  2809  0E73  0862               	movf	??_sprintf,w
  2810  0E74  1683               	bsf	3,5	;RP0=1, select bank1
  2811  0E75  1303               	bcf	3,6	;RP1=0, select bank1
  2812  0E76  07BC               	addwf	sprintf@ap^(0+128),f
  2813  0E77                     l2988:
  2814                           
  2815                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 857:    if(fval < 0.0) {
  2816  0E77  084C               	movf	sprintf@fval^(0+128),w
  2817  0E78  00F0               	movwf	___ftge@ff1
  2818  0E79  084D               	movf	(sprintf@fval+1)^(0+128),w
  2819  0E7A  00F1               	movwf	___ftge@ff1+1
  2820  0E7B  084E               	movf	(sprintf@fval+2)^(0+128),w
  2821  0E7C  00F2               	movwf	___ftge@ff1+2
  2822  0E7D  3000               	movlw	0
  2823  0E7E  00F3               	movwf	___ftge@ff2
  2824  0E7F  3000               	movlw	0
  2825  0E80  00F4               	movwf	___ftge@ff2+1
  2826  0E81  3000               	movlw	0
  2827  0E82  00F5               	movwf	___ftge@ff2+2
  2828  0E83  160A  158A  26E1  120A  158A  	fcall	___ftge
  2829  0E88  1803               	btfsc	3,0
  2830  0E89  2E8B               	goto	u4381
  2831  0E8A  2E8C               	goto	u4380
  2832  0E8B                     u4381:
  2833  0E8B  2EA5               	goto	l2994
  2834  0E8C                     u4380:
  2835  0E8C                     l2990:
  2836                           
  2837                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 858:     fval = -fval;
  2838  0E8C  1683               	bsf	3,5	;RP0=1, select bank1
  2839  0E8D  1303               	bcf	3,6	;RP1=0, select bank1
  2840  0E8E  084C               	movf	sprintf@fval^(0+128),w
  2841  0E8F  00F0               	movwf	___ftneg@f1
  2842  0E90  084D               	movf	(sprintf@fval+1)^(0+128),w
  2843  0E91  00F1               	movwf	___ftneg@f1+1
  2844  0E92  084E               	movf	(sprintf@fval+2)^(0+128),w
  2845  0E93  00F2               	movwf	___ftneg@f1+2
  2846  0E94  120A  118A  2003  120A  158A  	fcall	___ftneg
  2847  0E99  0870               	movf	?___ftneg,w
  2848  0E9A  1683               	bsf	3,5	;RP0=1, select bank1
  2849  0E9B  1303               	bcf	3,6	;RP1=0, select bank1
  2850  0E9C  00CC               	movwf	sprintf@fval^(0+128)
  2851  0E9D  0871               	movf	?___ftneg+1,w
  2852  0E9E  00CD               	movwf	(sprintf@fval+1)^(0+128)
  2853  0E9F  0872               	movf	?___ftneg+2,w
  2854  0EA0  00CE               	movwf	(sprintf@fval+2)^(0+128)
  2855  0EA1                     l2992:
  2856                           
  2857                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 859:     flag |= 0x03;
  2858  0EA1  3003               	movlw	3
  2859  0EA2  04C1               	iorwf	sprintf@flag^(0+128),f
  2860  0EA3  3000               	movlw	0
  2861  0EA4  04C2               	iorwf	(sprintf@flag+1)^(0+128),f
  2862  0EA5                     l2994:
  2863                           
  2864                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2865  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  2866  0EA6  1303               	bcf	3,6	;RP1=0, select bank1
  2867  0EA7  01C9               	clrf	sprintf@eexp^(0+128)
  2868  0EA8  01CA               	clrf	(sprintf@eexp+1)^(0+128)
  2869  0EA9                     l2996:
  2870                           
  2871                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 862:    if( fval!=0) {
  2872  0EA9  084E               	movf	(sprintf@fval+2)^(0+128),w
  2873  0EAA  044D               	iorwf	(sprintf@fval+1)^(0+128),w
  2874  0EAB  044C               	iorwf	sprintf@fval^(0+128),w
  2875  0EAC  1903               	skipnz
  2876  0EAD  2EAF               	goto	u4391
  2877  0EAE  2EB0               	goto	u4390
  2878  0EAF                     u4391:
  2879  0EAF  2FA2               	goto	l3022
  2880  0EB0                     u4390:
  2881  0EB0                     l2998:
  2882                           
  2883                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 863:     (void)(*(&eexp) = ((*(u
      +                          nsigned long *)&fval >> 15) & 255) - 126);
  2884  0EB0  30CC               	movlw	low (sprintf@fval| 0)
  2885  0EB1  0084               	movwf	4
  2886  0EB2  1383               	bcf	3,7	;select IRP bank1
  2887  0EB3  0800               	movf	0,w
  2888  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  2889  0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  2890  0EB6  00E2               	movwf	??_sprintf
  2891  0EB7  0A84               	incf	4,f
  2892  0EB8  0800               	movf	0,w
  2893  0EB9  00E3               	movwf	??_sprintf+1
  2894  0EBA  0A84               	incf	4,f
  2895  0EBB  0800               	movf	0,w
  2896  0EBC  00E4               	movwf	??_sprintf+2
  2897  0EBD  0A84               	incf	4,f
  2898  0EBE  0800               	movf	0,w
  2899  0EBF  00E5               	movwf	??_sprintf+3
  2900  0EC0  300F               	movlw	15
  2901  0EC1                     u4405:
  2902  0EC1  1003               	clrc
  2903  0EC2  0CE5               	rrf	??_sprintf+3,f
  2904  0EC3  0CE4               	rrf	??_sprintf+2,f
  2905  0EC4  0CE3               	rrf	??_sprintf+1,f
  2906  0EC5  0CE2               	rrf	??_sprintf,f
  2907  0EC6                     u4400:
  2908  0EC6  3EFF               	addlw	-1
  2909  0EC7  1D03               	skipz
  2910  0EC8  2EC1               	goto	u4405
  2911  0EC9  30FF               	movlw	255
  2912  0ECA  0562               	andwf	??_sprintf,w
  2913  0ECB  00E6               	movwf	??_sprintf+4
  2914  0ECC  3000               	movlw	0
  2915  0ECD  0563               	andwf	??_sprintf+1,w
  2916  0ECE  00E7               	movwf	??_sprintf+5
  2917  0ECF  0866               	movf	??_sprintf+4,w
  2918  0ED0  3E82               	addlw	130
  2919  0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  2920  0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  2921  0ED3  00C9               	movwf	sprintf@eexp^(0+128)
  2922  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  2923  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  2924  0ED6  0867               	movf	??_sprintf+5,w
  2925  0ED7  1803               	skipnc
  2926  0ED8  3E01               	addlw	1
  2927  0ED9  3EFF               	addlw	255
  2928  0EDA  1683               	bsf	3,5	;RP0=1, select bank1
  2929  0EDB  1303               	bcf	3,6	;RP1=0, select bank1
  2930  0EDC  00CA               	movwf	(sprintf@eexp+1)^(0+128)
  2931  0EDD                     l3000:
  2932                           
  2933                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2934  0EDD  30FF               	movlw	255
  2935  0EDE  07C9               	addwf	sprintf@eexp^(0+128),f
  2936  0EDF  1803               	skipnc
  2937  0EE0  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  2938  0EE1  30FF               	movlw	255
  2939  0EE2  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  2940  0EE3                     l3002:
  2941                           
  2942                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 865:     eexp *= 3;
  2943  0EE3  3003               	movlw	3
  2944  0EE4  00F0               	movwf	___wmul@multiplier
  2945  0EE5  3000               	movlw	0
  2946  0EE6  00F1               	movwf	___wmul@multiplier+1
  2947  0EE7  084A               	movf	(sprintf@eexp+1)^(0+128),w
  2948  0EE8  00F3               	movwf	___wmul@multiplicand+1
  2949  0EE9  0849               	movf	sprintf@eexp^(0+128),w
  2950  0EEA  00F2               	movwf	___wmul@multiplicand
  2951  0EEB  160A  158A  2600  120A  158A  	fcall	___wmul
  2952  0EF0  0871               	movf	?___wmul+1,w
  2953  0EF1  1683               	bsf	3,5	;RP0=1, select bank1
  2954  0EF2  1303               	bcf	3,6	;RP1=0, select bank1
  2955  0EF3  00CA               	movwf	(sprintf@eexp+1)^(0+128)
  2956  0EF4  0870               	movf	?___wmul,w
  2957  0EF5  00C9               	movwf	sprintf@eexp^(0+128)
  2958  0EF6                     l3004:
  2959                           
  2960                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 866:     eexp /= 10;
  2961  0EF6  300A               	movlw	10
  2962  0EF7  00F7               	movwf	___awdiv@divisor
  2963  0EF8  3000               	movlw	0
  2964  0EF9  00F8               	movwf	___awdiv@divisor+1
  2965  0EFA  084A               	movf	(sprintf@eexp+1)^(0+128),w
  2966  0EFB  00FA               	movwf	___awdiv@dividend+1
  2967  0EFC  0849               	movf	sprintf@eexp^(0+128),w
  2968  0EFD  00F9               	movwf	___awdiv@dividend
  2969  0EFE  160A  118A  21FD  120A  158A  	fcall	___awdiv
  2970  0F03  0878               	movf	?___awdiv+1,w
  2971  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  2972  0F05  1303               	bcf	3,6	;RP1=0, select bank1
  2973  0F06  00CA               	movwf	(sprintf@eexp+1)^(0+128)
  2974  0F07  0877               	movf	?___awdiv,w
  2975  0F08  00C9               	movwf	sprintf@eexp^(0+128)
  2976  0F09                     l3006:
  2977                           
  2978                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 867:     if(eexp < 0)
  2979  0F09  1FCA               	btfss	(sprintf@eexp+1)^(0+128),7
  2980  0F0A  2F0C               	goto	u4411
  2981  0F0B  2F0D               	goto	u4410
  2982  0F0C                     u4411:
  2983  0F0C  2F13               	goto	l3010
  2984  0F0D                     u4410:
  2985  0F0D                     l3008:
  2986                           
  2987                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2988  0F0D  30FF               	movlw	255
  2989  0F0E  07C9               	addwf	sprintf@eexp^(0+128),f
  2990  0F0F  1803               	skipnc
  2991  0F10  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  2992  0F11  30FF               	movlw	255
  2993  0F12  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  2994  0F13                     l3010:
  2995                           
  2996                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 872:     tmpval.integ = scale(-e
      +                          exp);
  2997  0F13  0349               	decf	sprintf@eexp^(0+128),w
  2998  0F14  3AFF               	xorlw	255
  2999  0F15  120A  158A  2285  120A  158A  	fcall	_scale
  3000  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  3001  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  3002  0F1C  0838               	movf	?_scale,w
  3003  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  3004  0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  3005  0F1F  00C5               	movwf	sprintf@tmpval^(0+128)
  3006  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  3008  0F22  0839               	movf	?_scale+1,w
  3009  0F23  1683               	bsf	3,5	;RP0=1, select bank1
  3010  0F24  1303               	bcf	3,6	;RP1=0, select bank1
  3011  0F25  00C6               	movwf	(sprintf@tmpval+1)^(0+128)
  3012  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  3013  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  3014  0F28  083A               	movf	?_scale+2,w
  3015  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  3016  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  3017  0F2B  00C7               	movwf	(sprintf@tmpval+2)^(0+128)
  3018  0F2C                     l3012:
  3019                           
  3020                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 873:     tmpval.integ *= fval;
  3021  0F2C  084C               	movf	sprintf@fval^(0+128),w
  3022  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  3024  0F2F  00A8               	movwf	___ftmul@f1
  3025  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  3026  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  3027  0F32  084D               	movf	(sprintf@fval+1)^(0+128),w
  3028  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  3029  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  3030  0F35  00A9               	movwf	___ftmul@f1+1
  3031  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  3032  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  3033  0F38  084E               	movf	(sprintf@fval+2)^(0+128),w
  3034  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3035  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3036  0F3B  00AA               	movwf	___ftmul@f1+2
  3037  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  3038  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  3039  0F3E  0845               	movf	sprintf@tmpval^(0+128),w
  3040  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3041  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3042  0F41  00AB               	movwf	___ftmul@f2
  3043  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  3044  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  3045  0F44  0846               	movf	(sprintf@tmpval+1)^(0+128),w
  3046  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  3047  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  3048  0F47  00AC               	movwf	___ftmul@f2+1
  3049  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  3050  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  3051  0F4A  0847               	movf	(sprintf@tmpval+2)^(0+128),w
  3052  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  3053  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  3054  0F4D  00AD               	movwf	___ftmul@f2+2
  3055  0F4E  120A  118A  200D  120A  158A  	fcall	___ftmul
  3056  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  3057  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  3058  0F55  0828               	movf	?___ftmul,w
  3059  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  3060  0F57  1303               	bcf	3,6	;RP1=0, select bank1
  3061  0F58  00C5               	movwf	sprintf@tmpval^(0+128)
  3062  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  3064  0F5B  0829               	movf	?___ftmul+1,w
  3065  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  3066  0F5D  1303               	bcf	3,6	;RP1=0, select bank1
  3067  0F5E  00C6               	movwf	(sprintf@tmpval+1)^(0+128)
  3068  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  3070  0F61  082A               	movf	?___ftmul+2,w
  3071  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  3072  0F63  1303               	bcf	3,6	;RP1=0, select bank1
  3073  0F64  00C7               	movwf	(sprintf@tmpval+2)^(0+128)
  3074  0F65                     l3014:
  3075                           
  3076                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 874:     if(tmpval.integ < 1.0)
  3077  0F65  0845               	movf	sprintf@tmpval^(0+128),w
  3078  0F66  00F0               	movwf	___ftge@ff1
  3079  0F67  0846               	movf	(sprintf@tmpval+1)^(0+128),w
  3080  0F68  00F1               	movwf	___ftge@ff1+1
  3081  0F69  0847               	movf	(sprintf@tmpval+2)^(0+128),w
  3082  0F6A  00F2               	movwf	___ftge@ff1+2
  3083  0F6B  3000               	movlw	0
  3084  0F6C  00F3               	movwf	___ftge@ff2
  3085  0F6D  3080               	movlw	128
  3086  0F6E  00F4               	movwf	___ftge@ff2+1
  3087  0F6F  303F               	movlw	63
  3088  0F70  00F5               	movwf	___ftge@ff2+2
  3089  0F71  160A  158A  26E1  120A  158A  	fcall	___ftge
  3090  0F76  1803               	btfsc	3,0
  3091  0F77  2F79               	goto	u4421
  3092  0F78  2F7A               	goto	u4420
  3093  0F79                     u4421:
  3094  0F79  2F83               	goto	l3018
  3095  0F7A                     u4420:
  3096  0F7A                     l3016:
  3097                           
  3098                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3099  0F7A  30FF               	movlw	255
  3100  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  3101  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  3102  0F7D  07C9               	addwf	sprintf@eexp^(0+128),f
  3103  0F7E  1803               	skipnc
  3104  0F7F  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  3105  0F80  30FF               	movlw	255
  3106  0F81  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  3107  0F82  2FA2               	goto	l3022
  3108  0F83                     l3018:
  3109  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  3110  0F84  1303               	bcf	3,6	;RP1=0, select bank1
  3111  0F85  0845               	movf	sprintf@tmpval^(0+128),w
  3112  0F86  00F0               	movwf	___ftge@ff1
  3113  0F87  0846               	movf	(sprintf@tmpval+1)^(0+128),w
  3114  0F88  00F1               	movwf	___ftge@ff1+1
  3115  0F89  0847               	movf	(sprintf@tmpval+2)^(0+128),w
  3116  0F8A  00F2               	movwf	___ftge@ff1+2
  3117  0F8B  3000               	movlw	0
  3118  0F8C  00F3               	movwf	___ftge@ff2
  3119  0F8D  3020               	movlw	32
  3120  0F8E  00F4               	movwf	___ftge@ff2+1
  3121  0F8F  3041               	movlw	65
  3122  0F90  00F5               	movwf	___ftge@ff2+2
  3123  0F91  160A  158A  26E1  120A  158A  	fcall	___ftge
  3124  0F96  1C03               	btfss	3,0
  3125  0F97  2F99               	goto	u4431
  3126  0F98  2F9A               	goto	u4430
  3127  0F99                     u4431:
  3128  0F99  2FA2               	goto	l3022
  3129  0F9A                     u4430:
  3130  0F9A                     l3020:
  3131                           
  3132                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3133  0F9A  3001               	movlw	1
  3134  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  3135  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  3136  0F9D  07C9               	addwf	sprintf@eexp^(0+128),f
  3137  0F9E  1803               	skipnc
  3138  0F9F  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  3139  0FA0  3000               	movlw	0
  3140  0FA1  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  3141  0FA2                     l3022:
  3142                           
  3143                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1138:      if(prec <= 12)
  3144  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  3145  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  3146  0FA4  0850               	movf	(sprintf@prec+1)^(0+128),w
  3147  0FA5  3A80               	xorlw	128
  3148  0FA6  00FF               	movwf	btemp+1
  3149  0FA7  3080               	movlw	128
  3150  0FA8  027F               	subwf	btemp+1,w
  3151  0FA9  1D03               	skipz
  3152  0FAA  2FAD               	goto	u4445
  3153  0FAB  300D               	movlw	13
  3154  0FAC  024F               	subwf	sprintf@prec^(0+128),w
  3155  0FAD                     u4445:
  3156  0FAD  1803               	skipnc
  3157  0FAE  2FB0               	goto	u4441
  3158  0FAF  2FB1               	goto	u4440
  3159  0FB0                     u4441:
  3160  0FB0  2FEA               	goto	l3026
  3161  0FB1                     u4440:
  3162  0FB1                     l3024:
  3163                           
  3164                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1139:       fval += fround((unsi
      +                          gned int)prec);
  3165  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  3166  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  3167  0FB3  084F               	movf	sprintf@prec^(0+128),w
  3168  0FB4  120A  118A  20F2  120A  158A  	fcall	_fround
  3169  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  3170  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  3171  0FBB  0838               	movf	?_fround,w
  3172  0FBC  00C8               	movwf	___ftadd@f1
  3173  0FBD  0839               	movf	?_fround+1,w
  3174  0FBE  00C9               	movwf	___ftadd@f1+1
  3175  0FBF  083A               	movf	?_fround+2,w
  3176  0FC0  00CA               	movwf	___ftadd@f1+2
  3177  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  3178  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  3179  0FC3  084C               	movf	sprintf@fval^(0+128),w
  3180  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  3181  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  3182  0FC6  00CB               	movwf	___ftadd@f2
  3183  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  3184  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  3185  0FC9  084D               	movf	(sprintf@fval+1)^(0+128),w
  3186  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3187  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3188  0FCC  00CC               	movwf	___ftadd@f2+1
  3189  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  3190  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  3191  0FCF  084E               	movf	(sprintf@fval+2)^(0+128),w
  3192  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3193  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  3194  0FD2  00CD               	movwf	___ftadd@f2+2
  3195  0FD3  120A  158A  214F  120A  158A  	fcall	___ftadd
  3196  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0FDA  0848               	movf	?___ftadd,w
  3199  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3200  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  3201  0FDD  00CC               	movwf	sprintf@fval^(0+128)
  3202  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  3203  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  3204  0FE0  0849               	movf	?___ftadd+1,w
  3205  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  3206  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  3207  0FE3  00CD               	movwf	(sprintf@fval+1)^(0+128)
  3208  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  3209  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  3210  0FE6  084A               	movf	?___ftadd+2,w
  3211  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  3212  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  3213  0FE9  00CE               	movwf	(sprintf@fval+2)^(0+128)
  3214  0FEA                     l3026:
  3215                           
  3216                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1142:     if((eexp > 9)||(fval !
      +                          = 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3217  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  3218  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  3219  0FEC  084A               	movf	(sprintf@eexp+1)^(0+128),w
  3220  0FED  3A80               	xorlw	128
  3221  0FEE  00FF               	movwf	btemp+1
  3222  0FEF  3080               	movlw	128
  3223  0FF0  027F               	subwf	btemp+1,w
  3224  0FF1  1D03               	skipz
  3225  0FF2  2FF5               	goto	u4455
  3226  0FF3  300A               	movlw	10
  3227  0FF4  0249               	subwf	sprintf@eexp^(0+128),w
  3228  0FF5                     u4455:
  3229  0FF5  1803               	skipnc
  3230  0FF6  2FFA               	goto	u4451
  3231  0FF7  120A  118A  2A93   	goto	u4450
  3232  0FFA                     u4451:
  3233  0FFA  120A  118A  2ACA   	goto	l3034
  3234  0FFD                     L3:
  3235  0FFD                     L2:
  3236  0FFD  120A  118A  2FD0   	ljmp	l3182
  3237                           
  3238                           	psect	text6
  3239  0A85                     __ptext6:	
  3240 ;; *************** function _scale *****************
  3241 ;; Defined at:
  3242 ;;		line 433 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  scl             1    wreg     char 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  scl             1   32[BANK0 ] char 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  3   24[BANK0 ] char 
  3249 ;; Registers used:
  3250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3256 ;;      Params:         0       3       0       0       0
  3257 ;;      Locals:         0       4       0       0       0
  3258 ;;      Temps:          0       2       0       0       0
  3259 ;;      Totals:         0       9       0       0       0
  3260 ;;Total ram usage:        9 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    2
  3263 ;; This function calls:
  3264 ;;		___awdiv
  3265 ;;		___awmod
  3266 ;;		___bmul
  3267 ;;		___ftmul
  3268 ;; This function is called by:
  3269 ;;		_sprintf
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           
  3274                           ;psect for function _scale
  3275  0A85                     _scale:
  3276                           
  3277                           ;incstack = 0
  3278                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3279                           ;scale@scl stored from wreg
  3280  0A85  1283               	bcf	3,5	;RP0=0, select bank0
  3281  0A86  1303               	bcf	3,6	;RP1=0, select bank0
  3282  0A87  00C0               	movwf	scale@scl
  3283  0A88                     l2478:
  3284                           
  3285                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 433: scale(signed char scl);D:\M
      +                          PLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 434: {;D:\MPLAB XC8 compiler\pic\sour
      +                          ces\c90\common\doprnt.c: 436:  if(scl < 0) {
  3286  0A88  1FC0               	btfss	scale@scl,7
  3287  0A89  2A8B               	goto	u3381
  3288  0A8A  2A8C               	goto	u3380
  3289  0A8B                     u3381:
  3290  0A8B  2BDF               	goto	l2500
  3291  0A8C                     u3380:
  3292  0A8C                     l2480:
  3293                           
  3294                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 437:   scl = -scl;
  3295  0A8C  09C0               	comf	scale@scl,f
  3296  0A8D  0AC0               	incf	scale@scl,f
  3297  0A8E                     l2482:
  3298                           
  3299                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 438:   if(scl>=110)
  3300  0A8E  0840               	movf	scale@scl,w
  3301  0A8F  3A80               	xorlw	128
  3302  0A90  3E12               	addlw	-238
  3303  0A91  1C03               	skipc
  3304  0A92  2A94               	goto	u3391
  3305  0A93  2A95               	goto	u3390
  3306  0A94                     u3391:
  3307  0A94  2B4D               	goto	l2490
  3308  0A95                     u3390:
  3309  0A95                     l2484:
  3310                           
  3311                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsign
      +                          ed char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigned
      +                           char)(scl%10)];
  3312  0A95  3003               	movlw	3
  3313  0A96  00BB               	movwf	??_scale
  3314  0A97  083B               	movf	??_scale,w
  3315  0A98  00A4               	movwf	___bmul@multiplicand
  3316  0A99  0840               	movf	scale@scl,w
  3317  0A9A  00F2               	movwf	___awmod@dividend
  3318  0A9B  01F3               	clrf	___awmod@dividend+1
  3319  0A9C  1BF2               	btfsc	___awmod@dividend,7
  3320  0A9D  03F3               	decf	___awmod@dividend+1,f
  3321  0A9E  3064               	movlw	100
  3322  0A9F  00F0               	movwf	___awmod@divisor
  3323  0AA0  3000               	movlw	0
  3324  0AA1  00F1               	movwf	___awmod@divisor+1
  3325  0AA2  160A  118A  20E1  120A  158A  	fcall	___awmod
  3326  0AA7  0871               	movf	?___awmod+1,w
  3327  0AA8  00FA               	movwf	___awdiv@dividend+1
  3328  0AA9  0870               	movf	?___awmod,w
  3329  0AAA  00F9               	movwf	___awdiv@dividend
  3330  0AAB  300A               	movlw	10
  3331  0AAC  00F7               	movwf	___awdiv@divisor
  3332  0AAD  3000               	movlw	0
  3333  0AAE  00F8               	movwf	___awdiv@divisor+1
  3334  0AAF  160A  118A  21FD  120A  158A  	fcall	___awdiv
  3335  0AB4  0877               	movf	?___awdiv,w
  3336  0AB5  120A  158A  200C  120A  158A  	fcall	___bmul
  3337  0ABA  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3338  0ABB  0084               	movwf	4
  3339  0ABC  160A  118A  2000  120A  158A  	fcall	stringdir
  3340  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  3341  0AC2  1303               	bcf	3,6	;RP1=0, select bank0
  3342  0AC3  00A8               	movwf	___ftmul@f1
  3343  0AC4  160A  118A  2000  120A  158A  	fcall	stringdir
  3344  0AC9  00A9               	movwf	___ftmul@f1+1
  3345  0ACA  160A  118A  2000  120A  158A  	fcall	stringdir
  3346  0ACF  00AA               	movwf	___ftmul@f1+2
  3347  0AD0  3003               	movlw	3
  3348  0AD1  00BC               	movwf	??_scale+1
  3349  0AD2  083C               	movf	??_scale+1,w
  3350  0AD3  00A4               	movwf	___bmul@multiplicand
  3351  0AD4  0840               	movf	scale@scl,w
  3352  0AD5  00F9               	movwf	___awdiv@dividend
  3353  0AD6  01FA               	clrf	___awdiv@dividend+1
  3354  0AD7  1BF9               	btfsc	___awdiv@dividend,7
  3355  0AD8  03FA               	decf	___awdiv@dividend+1,f
  3356  0AD9  3064               	movlw	100
  3357  0ADA  00F7               	movwf	___awdiv@divisor
  3358  0ADB  3000               	movlw	0
  3359  0ADC  00F8               	movwf	___awdiv@divisor+1
  3360  0ADD  160A  118A  21FD  120A  158A  	fcall	___awdiv
  3361  0AE2  0877               	movf	?___awdiv,w
  3362  0AE3  120A  158A  200C  120A  158A  	fcall	___bmul
  3363  0AE8  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3364  0AE9  0084               	movwf	4
  3365  0AEA  160A  118A  2000  120A  158A  	fcall	stringdir
  3366  0AEF  1283               	bcf	3,5	;RP0=0, select bank0
  3367  0AF0  1303               	bcf	3,6	;RP1=0, select bank0
  3368  0AF1  00AB               	movwf	___ftmul@f2
  3369  0AF2  160A  118A  2000  120A  158A  	fcall	stringdir
  3370  0AF7  00AC               	movwf	___ftmul@f2+1
  3371  0AF8  160A  118A  2000  120A  158A  	fcall	stringdir
  3372  0AFD  00AD               	movwf	___ftmul@f2+2
  3373  0AFE  120A  118A  200D  120A  158A  	fcall	___ftmul
  3374  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0B04  1303               	bcf	3,6	;RP1=0, select bank0
  3376  0B05  0828               	movf	?___ftmul,w
  3377  0B06  00BD               	movwf	_scale$1040
  3378  0B07  0829               	movf	?___ftmul+1,w
  3379  0B08  00BE               	movwf	_scale$1040+1
  3380  0B09  082A               	movf	?___ftmul+2,w
  3381  0B0A  00BF               	movwf	_scale$1040+2
  3382                           
  3383                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsign
      +                          ed char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigned
      +                           char)(scl%10)];
  3384  0B0B  3003               	movlw	3
  3385  0B0C  00BB               	movwf	??_scale
  3386  0B0D  083B               	movf	??_scale,w
  3387  0B0E  00A4               	movwf	___bmul@multiplicand
  3388  0B0F  0840               	movf	scale@scl,w
  3389  0B10  00F2               	movwf	___awmod@dividend
  3390  0B11  01F3               	clrf	___awmod@dividend+1
  3391  0B12  1BF2               	btfsc	___awmod@dividend,7
  3392  0B13  03F3               	decf	___awmod@dividend+1,f
  3393  0B14  300A               	movlw	10
  3394  0B15  00F0               	movwf	___awmod@divisor
  3395  0B16  3000               	movlw	0
  3396  0B17  00F1               	movwf	___awmod@divisor+1
  3397  0B18  160A  118A  20E1  120A  158A  	fcall	___awmod
  3398  0B1D  0870               	movf	?___awmod,w
  3399  0B1E  120A  158A  200C  120A  158A  	fcall	___bmul
  3400  0B23  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3401  0B24  0084               	movwf	4
  3402  0B25  160A  118A  2000  120A  158A  	fcall	stringdir
  3403  0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  3404  0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  3405  0B2C  00A8               	movwf	___ftmul@f1
  3406  0B2D  160A  118A  2000  120A  158A  	fcall	stringdir
  3407  0B32  00A9               	movwf	___ftmul@f1+1
  3408  0B33  160A  118A  2000  120A  158A  	fcall	stringdir
  3409  0B38  00AA               	movwf	___ftmul@f1+2
  3410  0B39  083D               	movf	_scale$1040,w
  3411  0B3A  00AB               	movwf	___ftmul@f2
  3412  0B3B  083E               	movf	_scale$1040+1,w
  3413  0B3C  00AC               	movwf	___ftmul@f2+1
  3414  0B3D  083F               	movf	_scale$1040+2,w
  3415  0B3E  00AD               	movwf	___ftmul@f2+2
  3416  0B3F  120A  118A  200D  120A  158A  	fcall	___ftmul
  3417  0B44  1283               	bcf	3,5	;RP0=0, select bank0
  3418  0B45  1303               	bcf	3,6	;RP1=0, select bank0
  3419  0B46  0828               	movf	?___ftmul,w
  3420  0B47  00B8               	movwf	?_scale
  3421  0B48  0829               	movf	?___ftmul+1,w
  3422  0B49  00B9               	movwf	?_scale+1
  3423  0B4A  082A               	movf	?___ftmul+2,w
  3424  0B4B  00BA               	movwf	?_scale+2
  3425  0B4C  2D2F               	goto	l311
  3426  0B4D                     l2490:
  3427  0B4D  0840               	movf	scale@scl,w
  3428  0B4E  3A80               	xorlw	128
  3429  0B4F  3E75               	addlw	-139
  3430  0B50  1C03               	skipc
  3431  0B51  2B53               	goto	u3401
  3432  0B52  2B54               	goto	u3400
  3433  0B53                     u3401:
  3434  0B53  2BBE               	goto	l2496
  3435  0B54                     u3400:
  3436  0B54                     l2492:
  3437                           
  3438                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 441:    return _npowers_[(unsign
      +                          ed char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3439  0B54  3003               	movlw	3
  3440  0B55  00BB               	movwf	??_scale
  3441  0B56  083B               	movf	??_scale,w
  3442  0B57  00A4               	movwf	___bmul@multiplicand
  3443  0B58  0840               	movf	scale@scl,w
  3444  0B59  00F2               	movwf	___awmod@dividend
  3445  0B5A  01F3               	clrf	___awmod@dividend+1
  3446  0B5B  1BF2               	btfsc	___awmod@dividend,7
  3447  0B5C  03F3               	decf	___awmod@dividend+1,f
  3448  0B5D  300A               	movlw	10
  3449  0B5E  00F0               	movwf	___awmod@divisor
  3450  0B5F  3000               	movlw	0
  3451  0B60  00F1               	movwf	___awmod@divisor+1
  3452  0B61  160A  118A  20E1  120A  158A  	fcall	___awmod
  3453  0B66  0870               	movf	?___awmod,w
  3454  0B67  120A  158A  200C  120A  158A  	fcall	___bmul
  3455  0B6C  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3456  0B6D  0084               	movwf	4
  3457  0B6E  160A  118A  2000  120A  158A  	fcall	stringdir
  3458  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  3459  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  3460  0B75  00A8               	movwf	___ftmul@f1
  3461  0B76  160A  118A  2000  120A  158A  	fcall	stringdir
  3462  0B7B  00A9               	movwf	___ftmul@f1+1
  3463  0B7C  160A  118A  2000  120A  158A  	fcall	stringdir
  3464  0B81  00AA               	movwf	___ftmul@f1+2
  3465  0B82  3003               	movlw	3
  3466  0B83  00BC               	movwf	??_scale+1
  3467  0B84  083C               	movf	??_scale+1,w
  3468  0B85  00A4               	movwf	___bmul@multiplicand
  3469  0B86  0840               	movf	scale@scl,w
  3470  0B87  00F9               	movwf	___awdiv@dividend
  3471  0B88  01FA               	clrf	___awdiv@dividend+1
  3472  0B89  1BF9               	btfsc	___awdiv@dividend,7
  3473  0B8A  03FA               	decf	___awdiv@dividend+1,f
  3474  0B8B  300A               	movlw	10
  3475  0B8C  00F7               	movwf	___awdiv@divisor
  3476  0B8D  3000               	movlw	0
  3477  0B8E  00F8               	movwf	___awdiv@divisor+1
  3478  0B8F  160A  118A  21FD  120A  158A  	fcall	___awdiv
  3479  0B94  0877               	movf	?___awdiv,w
  3480  0B95  120A  158A  200C  120A  158A  	fcall	___bmul
  3481  0B9A  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3482  0B9B  0084               	movwf	4
  3483  0B9C  160A  118A  2000  120A  158A  	fcall	stringdir
  3484  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  3485  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  3486  0BA3  00AB               	movwf	___ftmul@f2
  3487  0BA4  160A  118A  2000  120A  158A  	fcall	stringdir
  3488  0BA9  00AC               	movwf	___ftmul@f2+1
  3489  0BAA  160A  118A  2000  120A  158A  	fcall	stringdir
  3490  0BAF  00AD               	movwf	___ftmul@f2+2
  3491  0BB0  120A  118A  200D  120A  158A  	fcall	___ftmul
  3492  0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  3493  0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  3494  0BB7  0828               	movf	?___ftmul,w
  3495  0BB8  00B8               	movwf	?_scale
  3496  0BB9  0829               	movf	?___ftmul+1,w
  3497  0BBA  00B9               	movwf	?_scale+1
  3498  0BBB  082A               	movf	?___ftmul+2,w
  3499  0BBC  00BA               	movwf	?_scale+2
  3500  0BBD  2D2F               	goto	l311
  3501  0BBE                     l2496:
  3502                           
  3503                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 442:   return _npowers_[(unsigne
      +                          d char)scl];
  3504  0BBE  3003               	movlw	3
  3505  0BBF  00BB               	movwf	??_scale
  3506  0BC0  083B               	movf	??_scale,w
  3507  0BC1  00A4               	movwf	___bmul@multiplicand
  3508  0BC2  0840               	movf	scale@scl,w
  3509  0BC3  120A  158A  200C  120A  158A  	fcall	___bmul
  3510  0BC8  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3511  0BC9  0084               	movwf	4
  3512  0BCA  160A  118A  2000  120A  158A  	fcall	stringdir
  3513  0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  3515  0BD1  00B8               	movwf	?_scale
  3516  0BD2  160A  118A  2000  120A  158A  	fcall	stringdir
  3517  0BD7  00B9               	movwf	?_scale+1
  3518  0BD8  160A  118A  2000  120A  158A  	fcall	stringdir
  3519  0BDD  00BA               	movwf	?_scale+2
  3520  0BDE  2D2F               	goto	l311
  3521  0BDF                     l2500:
  3522                           
  3523                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110)
  3524  0BDF  0840               	movf	scale@scl,w
  3525  0BE0  3A80               	xorlw	128
  3526  0BE1  3E12               	addlw	-238
  3527  0BE2  1C03               	skipc
  3528  0BE3  2BE5               	goto	u3411
  3529  0BE4  2BE6               	goto	u3410
  3530  0BE5                     u3411:
  3531  0BE5  2C9E               	goto	l2508
  3532  0BE6                     u3410:
  3533  0BE6                     l2502:
  3534                           
  3535                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigned
      +                           char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned cha
      +                          r)(scl%10)];
  3536  0BE6  3003               	movlw	3
  3537  0BE7  00BB               	movwf	??_scale
  3538  0BE8  083B               	movf	??_scale,w
  3539  0BE9  00A4               	movwf	___bmul@multiplicand
  3540  0BEA  0840               	movf	scale@scl,w
  3541  0BEB  00F2               	movwf	___awmod@dividend
  3542  0BEC  01F3               	clrf	___awmod@dividend+1
  3543  0BED  1BF2               	btfsc	___awmod@dividend,7
  3544  0BEE  03F3               	decf	___awmod@dividend+1,f
  3545  0BEF  3064               	movlw	100
  3546  0BF0  00F0               	movwf	___awmod@divisor
  3547  0BF1  3000               	movlw	0
  3548  0BF2  00F1               	movwf	___awmod@divisor+1
  3549  0BF3  160A  118A  20E1  120A  158A  	fcall	___awmod
  3550  0BF8  0871               	movf	?___awmod+1,w
  3551  0BF9  00FA               	movwf	___awdiv@dividend+1
  3552  0BFA  0870               	movf	?___awmod,w
  3553  0BFB  00F9               	movwf	___awdiv@dividend
  3554  0BFC  300A               	movlw	10
  3555  0BFD  00F7               	movwf	___awdiv@divisor
  3556  0BFE  3000               	movlw	0
  3557  0BFF  00F8               	movwf	___awdiv@divisor+1
  3558  0C00  160A  118A  21FD  120A  158A  	fcall	___awdiv
  3559  0C05  0877               	movf	?___awdiv,w
  3560  0C06  120A  158A  200C  120A  158A  	fcall	___bmul
  3561  0C0B  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3562  0C0C  0084               	movwf	4
  3563  0C0D  160A  118A  2000  120A  158A  	fcall	stringdir
  3564  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  3565  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  3566  0C14  00A8               	movwf	___ftmul@f1
  3567  0C15  160A  118A  2000  120A  158A  	fcall	stringdir
  3568  0C1A  00A9               	movwf	___ftmul@f1+1
  3569  0C1B  160A  118A  2000  120A  158A  	fcall	stringdir
  3570  0C20  00AA               	movwf	___ftmul@f1+2
  3571  0C21  3003               	movlw	3
  3572  0C22  00BC               	movwf	??_scale+1
  3573  0C23  083C               	movf	??_scale+1,w
  3574  0C24  00A4               	movwf	___bmul@multiplicand
  3575  0C25  0840               	movf	scale@scl,w
  3576  0C26  00F9               	movwf	___awdiv@dividend
  3577  0C27  01FA               	clrf	___awdiv@dividend+1
  3578  0C28  1BF9               	btfsc	___awdiv@dividend,7
  3579  0C29  03FA               	decf	___awdiv@dividend+1,f
  3580  0C2A  3064               	movlw	100
  3581  0C2B  00F7               	movwf	___awdiv@divisor
  3582  0C2C  3000               	movlw	0
  3583  0C2D  00F8               	movwf	___awdiv@divisor+1
  3584  0C2E  160A  118A  21FD  120A  158A  	fcall	___awdiv
  3585  0C33  0877               	movf	?___awdiv,w
  3586  0C34  120A  158A  200C  120A  158A  	fcall	___bmul
  3587  0C39  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  3588  0C3A  0084               	movwf	4
  3589  0C3B  160A  118A  2000  120A  158A  	fcall	stringdir
  3590  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  3591  0C41  1303               	bcf	3,6	;RP1=0, select bank0
  3592  0C42  00AB               	movwf	___ftmul@f2
  3593  0C43  160A  118A  2000  120A  158A  	fcall	stringdir
  3594  0C48  00AC               	movwf	___ftmul@f2+1
  3595  0C49  160A  118A  2000  120A  158A  	fcall	stringdir
  3596  0C4E  00AD               	movwf	___ftmul@f2+2
  3597  0C4F  120A  118A  200D  120A  158A  	fcall	___ftmul
  3598  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  3599  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  3600  0C56  0828               	movf	?___ftmul,w
  3601  0C57  00BD               	movwf	_scale$1040
  3602  0C58  0829               	movf	?___ftmul+1,w
  3603  0C59  00BE               	movwf	_scale$1040+1
  3604  0C5A  082A               	movf	?___ftmul+2,w
  3605  0C5B  00BF               	movwf	_scale$1040+2
  3606                           
  3607                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigned
      +                           char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned cha
      +                          r)(scl%10)];
  3608  0C5C  3003               	movlw	3
  3609  0C5D  00BB               	movwf	??_scale
  3610  0C5E  083B               	movf	??_scale,w
  3611  0C5F  00A4               	movwf	___bmul@multiplicand
  3612  0C60  0840               	movf	scale@scl,w
  3613  0C61  00F2               	movwf	___awmod@dividend
  3614  0C62  01F3               	clrf	___awmod@dividend+1
  3615  0C63  1BF2               	btfsc	___awmod@dividend,7
  3616  0C64  03F3               	decf	___awmod@dividend+1,f
  3617  0C65  300A               	movlw	10
  3618  0C66  00F0               	movwf	___awmod@divisor
  3619  0C67  3000               	movlw	0
  3620  0C68  00F1               	movwf	___awmod@divisor+1
  3621  0C69  160A  118A  20E1  120A  158A  	fcall	___awmod
  3622  0C6E  0870               	movf	?___awmod,w
  3623  0C6F  120A  158A  200C  120A  158A  	fcall	___bmul
  3624  0C74  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3625  0C75  0084               	movwf	4
  3626  0C76  160A  118A  2000  120A  158A  	fcall	stringdir
  3627  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  3629  0C7D  00A8               	movwf	___ftmul@f1
  3630  0C7E  160A  118A  2000  120A  158A  	fcall	stringdir
  3631  0C83  00A9               	movwf	___ftmul@f1+1
  3632  0C84  160A  118A  2000  120A  158A  	fcall	stringdir
  3633  0C89  00AA               	movwf	___ftmul@f1+2
  3634  0C8A  083D               	movf	_scale$1040,w
  3635  0C8B  00AB               	movwf	___ftmul@f2
  3636  0C8C  083E               	movf	_scale$1040+1,w
  3637  0C8D  00AC               	movwf	___ftmul@f2+1
  3638  0C8E  083F               	movf	_scale$1040+2,w
  3639  0C8F  00AD               	movwf	___ftmul@f2+2
  3640  0C90  120A  118A  200D  120A  158A  	fcall	___ftmul
  3641  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  3642  0C96  1303               	bcf	3,6	;RP1=0, select bank0
  3643  0C97  0828               	movf	?___ftmul,w
  3644  0C98  00B8               	movwf	?_scale
  3645  0C99  0829               	movf	?___ftmul+1,w
  3646  0C9A  00B9               	movwf	?_scale+1
  3647  0C9B  082A               	movf	?___ftmul+2,w
  3648  0C9C  00BA               	movwf	?_scale+2
  3649  0C9D  2D2F               	goto	l311
  3650  0C9E                     l2508:
  3651  0C9E  0840               	movf	scale@scl,w
  3652  0C9F  3A80               	xorlw	128
  3653  0CA0  3E75               	addlw	-139
  3654  0CA1  1C03               	skipc
  3655  0CA2  2CA4               	goto	u3421
  3656  0CA3  2CA5               	goto	u3420
  3657  0CA4                     u3421:
  3658  0CA4  2D0F               	goto	l2514
  3659  0CA5                     u3420:
  3660  0CA5                     l2510:
  3661                           
  3662                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 447:   return _powers_[(unsigned
      +                           char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3663  0CA5  3003               	movlw	3
  3664  0CA6  00BB               	movwf	??_scale
  3665  0CA7  083B               	movf	??_scale,w
  3666  0CA8  00A4               	movwf	___bmul@multiplicand
  3667  0CA9  0840               	movf	scale@scl,w
  3668  0CAA  00F2               	movwf	___awmod@dividend
  3669  0CAB  01F3               	clrf	___awmod@dividend+1
  3670  0CAC  1BF2               	btfsc	___awmod@dividend,7
  3671  0CAD  03F3               	decf	___awmod@dividend+1,f
  3672  0CAE  300A               	movlw	10
  3673  0CAF  00F0               	movwf	___awmod@divisor
  3674  0CB0  3000               	movlw	0
  3675  0CB1  00F1               	movwf	___awmod@divisor+1
  3676  0CB2  160A  118A  20E1  120A  158A  	fcall	___awmod
  3677  0CB7  0870               	movf	?___awmod,w
  3678  0CB8  120A  158A  200C  120A  158A  	fcall	___bmul
  3679  0CBD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3680  0CBE  0084               	movwf	4
  3681  0CBF  160A  118A  2000  120A  158A  	fcall	stringdir
  3682  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  3683  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  3684  0CC6  00A8               	movwf	___ftmul@f1
  3685  0CC7  160A  118A  2000  120A  158A  	fcall	stringdir
  3686  0CCC  00A9               	movwf	___ftmul@f1+1
  3687  0CCD  160A  118A  2000  120A  158A  	fcall	stringdir
  3688  0CD2  00AA               	movwf	___ftmul@f1+2
  3689  0CD3  3003               	movlw	3
  3690  0CD4  00BC               	movwf	??_scale+1
  3691  0CD5  083C               	movf	??_scale+1,w
  3692  0CD6  00A4               	movwf	___bmul@multiplicand
  3693  0CD7  0840               	movf	scale@scl,w
  3694  0CD8  00F9               	movwf	___awdiv@dividend
  3695  0CD9  01FA               	clrf	___awdiv@dividend+1
  3696  0CDA  1BF9               	btfsc	___awdiv@dividend,7
  3697  0CDB  03FA               	decf	___awdiv@dividend+1,f
  3698  0CDC  300A               	movlw	10
  3699  0CDD  00F7               	movwf	___awdiv@divisor
  3700  0CDE  3000               	movlw	0
  3701  0CDF  00F8               	movwf	___awdiv@divisor+1
  3702  0CE0  160A  118A  21FD  120A  158A  	fcall	___awdiv
  3703  0CE5  0877               	movf	?___awdiv,w
  3704  0CE6  120A  158A  200C  120A  158A  	fcall	___bmul
  3705  0CEB  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3706  0CEC  0084               	movwf	4
  3707  0CED  160A  118A  2000  120A  158A  	fcall	stringdir
  3708  0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  3709  0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  3710  0CF4  00AB               	movwf	___ftmul@f2
  3711  0CF5  160A  118A  2000  120A  158A  	fcall	stringdir
  3712  0CFA  00AC               	movwf	___ftmul@f2+1
  3713  0CFB  160A  118A  2000  120A  158A  	fcall	stringdir
  3714  0D00  00AD               	movwf	___ftmul@f2+2
  3715  0D01  120A  118A  200D  120A  158A  	fcall	___ftmul
  3716  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3717  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3718  0D08  0828               	movf	?___ftmul,w
  3719  0D09  00B8               	movwf	?_scale
  3720  0D0A  0829               	movf	?___ftmul+1,w
  3721  0D0B  00B9               	movwf	?_scale+1
  3722  0D0C  082A               	movf	?___ftmul+2,w
  3723  0D0D  00BA               	movwf	?_scale+2
  3724  0D0E  2D2F               	goto	l311
  3725  0D0F                     l2514:
  3726                           
  3727                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 448:  return _powers_[(unsigned 
      +                          char)scl];
  3728  0D0F  3003               	movlw	3
  3729  0D10  00BB               	movwf	??_scale
  3730  0D11  083B               	movf	??_scale,w
  3731  0D12  00A4               	movwf	___bmul@multiplicand
  3732  0D13  0840               	movf	scale@scl,w
  3733  0D14  120A  158A  200C  120A  158A  	fcall	___bmul
  3734  0D19  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3735  0D1A  0084               	movwf	4
  3736  0D1B  160A  118A  2000  120A  158A  	fcall	stringdir
  3737  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  3738  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  3739  0D22  00B8               	movwf	?_scale
  3740  0D23  160A  118A  2000  120A  158A  	fcall	stringdir
  3741  0D28  00B9               	movwf	?_scale+1
  3742  0D29  160A  118A  2000  120A  158A  	fcall	stringdir
  3743  0D2E  00BA               	movwf	?_scale+2
  3744  0D2F                     l311:
  3745  0D2F  0008               	return
  3746  0D30                     __end_of_scale:
  3747                           
  3748                           	psect	text7
  3749  10E1                     __ptext7:	
  3750 ;; *************** function ___awmod *****************
  3751 ;; Defined at:
  3752 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\awmod.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  divisor         2    0[COMMON] int 
  3755 ;;  dividend        2    2[COMMON] int 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  sign            1    6[COMMON] unsigned char 
  3758 ;;  counter         1    5[COMMON] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  2    0[COMMON] int 
  3761 ;; Registers used:
  3762 ;;		wreg, status,2, status,0
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3768 ;;      Params:         4       0       0       0       0
  3769 ;;      Locals:         2       0       0       0       0
  3770 ;;      Temps:          1       0       0       0       0
  3771 ;;      Totals:         7       0       0       0       0
  3772 ;;Total ram usage:        7 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; This function calls:
  3775 ;;		Nothing
  3776 ;; This function is called by:
  3777 ;;		_scale
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           
  3782                           ;psect for function ___awmod
  3783  10E1                     ___awmod:
  3784  10E1                     l2220:	
  3785                           ;incstack = 0
  3786                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3787                           
  3788  10E1  01F6               	clrf	___awmod@sign
  3789  10E2                     l2222:
  3790  10E2  1FF3               	btfss	___awmod@dividend+1,7
  3791  10E3  28E5               	goto	u2671
  3792  10E4  28E6               	goto	u2670
  3793  10E5                     u2671:
  3794  10E5  28ED               	goto	l2228
  3795  10E6                     u2670:
  3796  10E6                     l2224:
  3797  10E6  09F2               	comf	___awmod@dividend,f
  3798  10E7  09F3               	comf	___awmod@dividend+1,f
  3799  10E8  0AF2               	incf	___awmod@dividend,f
  3800  10E9  1903               	skipnz
  3801  10EA  0AF3               	incf	___awmod@dividend+1,f
  3802  10EB                     l2226:
  3803  10EB  01F6               	clrf	___awmod@sign
  3804  10EC  0AF6               	incf	___awmod@sign,f
  3805  10ED                     l2228:
  3806  10ED  1FF1               	btfss	___awmod@divisor+1,7
  3807  10EE  28F0               	goto	u2681
  3808  10EF  28F1               	goto	u2680
  3809  10F0                     u2681:
  3810  10F0  28F6               	goto	l2232
  3811  10F1                     u2680:
  3812  10F1                     l2230:
  3813  10F1  09F0               	comf	___awmod@divisor,f
  3814  10F2  09F1               	comf	___awmod@divisor+1,f
  3815  10F3  0AF0               	incf	___awmod@divisor,f
  3816  10F4  1903               	skipnz
  3817  10F5  0AF1               	incf	___awmod@divisor+1,f
  3818  10F6                     l2232:
  3819  10F6  0870               	movf	___awmod@divisor,w
  3820  10F7  0471               	iorwf	___awmod@divisor+1,w
  3821  10F8  1903               	btfsc	3,2
  3822  10F9  28FB               	goto	u2691
  3823  10FA  28FC               	goto	u2690
  3824  10FB                     u2691:
  3825  10FB  292B               	goto	l2250
  3826  10FC                     u2690:
  3827  10FC                     l2234:
  3828  10FC  01F5               	clrf	___awmod@counter
  3829  10FD  0AF5               	incf	___awmod@counter,f
  3830  10FE  290A               	goto	l2240
  3831  10FF                     l2236:
  3832  10FF  3001               	movlw	1
  3833  1100                     u2705:
  3834  1100  1003               	clrc
  3835  1101  0DF0               	rlf	___awmod@divisor,f
  3836  1102  0DF1               	rlf	___awmod@divisor+1,f
  3837  1103  3EFF               	addlw	-1
  3838  1104  1D03               	skipz
  3839  1105  2900               	goto	u2705
  3840  1106                     l2238:
  3841  1106  3001               	movlw	1
  3842  1107  00F4               	movwf	??___awmod
  3843  1108  0874               	movf	??___awmod,w
  3844  1109  07F5               	addwf	___awmod@counter,f
  3845  110A                     l2240:
  3846  110A  1FF1               	btfss	___awmod@divisor+1,7
  3847  110B  290D               	goto	u2711
  3848  110C  290E               	goto	u2710
  3849  110D                     u2711:
  3850  110D  28FF               	goto	l2236
  3851  110E                     u2710:
  3852  110E                     l2242:
  3853  110E  0871               	movf	___awmod@divisor+1,w
  3854  110F  0273               	subwf	___awmod@dividend+1,w
  3855  1110  1D03               	skipz
  3856  1111  2914               	goto	u2725
  3857  1112  0870               	movf	___awmod@divisor,w
  3858  1113  0272               	subwf	___awmod@dividend,w
  3859  1114                     u2725:
  3860  1114  1C03               	skipc
  3861  1115  2917               	goto	u2721
  3862  1116  2918               	goto	u2720
  3863  1117                     u2721:
  3864  1117  291E               	goto	l2246
  3865  1118                     u2720:
  3866  1118                     l2244:
  3867  1118  0870               	movf	___awmod@divisor,w
  3868  1119  02F2               	subwf	___awmod@dividend,f
  3869  111A  0871               	movf	___awmod@divisor+1,w
  3870  111B  1C03               	skipc
  3871  111C  03F3               	decf	___awmod@dividend+1,f
  3872  111D  02F3               	subwf	___awmod@dividend+1,f
  3873  111E                     l2246:
  3874  111E  3001               	movlw	1
  3875  111F                     u2735:
  3876  111F  1003               	clrc
  3877  1120  0CF1               	rrf	___awmod@divisor+1,f
  3878  1121  0CF0               	rrf	___awmod@divisor,f
  3879  1122  3EFF               	addlw	-1
  3880  1123  1D03               	skipz
  3881  1124  291F               	goto	u2735
  3882  1125                     l2248:
  3883  1125  3001               	movlw	1
  3884  1126  02F5               	subwf	___awmod@counter,f
  3885  1127  1D03               	btfss	3,2
  3886  1128  292A               	goto	u2741
  3887  1129  292B               	goto	u2740
  3888  112A                     u2741:
  3889  112A  290E               	goto	l2242
  3890  112B                     u2740:
  3891  112B                     l2250:
  3892  112B  0876               	movf	___awmod@sign,w
  3893  112C  1903               	btfsc	3,2
  3894  112D  292F               	goto	u2751
  3895  112E  2930               	goto	u2750
  3896  112F                     u2751:
  3897  112F  2935               	goto	l2254
  3898  1130                     u2750:
  3899  1130                     l2252:
  3900  1130  09F2               	comf	___awmod@dividend,f
  3901  1131  09F3               	comf	___awmod@dividend+1,f
  3902  1132  0AF2               	incf	___awmod@dividend,f
  3903  1133  1903               	skipnz
  3904  1134  0AF3               	incf	___awmod@dividend+1,f
  3905  1135                     l2254:
  3906  1135  0873               	movf	___awmod@dividend+1,w
  3907  1136  00F1               	movwf	?___awmod+1
  3908  1137  0872               	movf	___awmod@dividend,w
  3909  1138  00F0               	movwf	?___awmod
  3910  1139                     l594:
  3911  1139  0008               	return
  3912  113A                     __end_of___awmod:
  3913                           
  3914                           	psect	text8
  3915  11FD                     __ptext8:	
  3916 ;; *************** function ___awdiv *****************
  3917 ;; Defined at:
  3918 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\awdiv.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  divisor         2    7[COMMON] int 
  3921 ;;  dividend        2    9[COMMON] int 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  quotient        2    2[BANK0 ] int 
  3924 ;;  sign            1    1[BANK0 ] unsigned char 
  3925 ;;  counter         1    0[BANK0 ] unsigned char 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  2    7[COMMON] int 
  3928 ;; Registers used:
  3929 ;;		wreg, status,2, status,0
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3935 ;;      Params:         4       0       0       0       0
  3936 ;;      Locals:         0       4       0       0       0
  3937 ;;      Temps:          1       0       0       0       0
  3938 ;;      Totals:         5       4       0       0       0
  3939 ;;Total ram usage:        9 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_scale
  3945 ;;		_sprintf
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           
  3950                           ;psect for function ___awdiv
  3951  11FD                     ___awdiv:
  3952  11FD                     l2176:	
  3953                           ;incstack = 0
  3954                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3955                           
  3956  11FD  1283               	bcf	3,5	;RP0=0, select bank0
  3957  11FE  1303               	bcf	3,6	;RP1=0, select bank0
  3958  11FF  01A1               	clrf	___awdiv@sign
  3959  1200                     l2178:
  3960  1200  1FF8               	btfss	___awdiv@divisor+1,7
  3961  1201  2A03               	goto	u2571
  3962  1202  2A04               	goto	u2570
  3963  1203                     u2571:
  3964  1203  2A0B               	goto	l2184
  3965  1204                     u2570:
  3966  1204                     l2180:
  3967  1204  09F7               	comf	___awdiv@divisor,f
  3968  1205  09F8               	comf	___awdiv@divisor+1,f
  3969  1206  0AF7               	incf	___awdiv@divisor,f
  3970  1207  1903               	skipnz
  3971  1208  0AF8               	incf	___awdiv@divisor+1,f
  3972  1209                     l2182:
  3973  1209  01A1               	clrf	___awdiv@sign
  3974  120A  0AA1               	incf	___awdiv@sign,f
  3975  120B                     l2184:
  3976  120B  1FFA               	btfss	___awdiv@dividend+1,7
  3977  120C  2A0E               	goto	u2581
  3978  120D  2A0F               	goto	u2580
  3979  120E                     u2581:
  3980  120E  2A18               	goto	l2190
  3981  120F                     u2580:
  3982  120F                     l2186:
  3983  120F  09F9               	comf	___awdiv@dividend,f
  3984  1210  09FA               	comf	___awdiv@dividend+1,f
  3985  1211  0AF9               	incf	___awdiv@dividend,f
  3986  1212  1903               	skipnz
  3987  1213  0AFA               	incf	___awdiv@dividend+1,f
  3988  1214                     l2188:
  3989  1214  3001               	movlw	1
  3990  1215  00FB               	movwf	??___awdiv
  3991  1216  087B               	movf	??___awdiv,w
  3992  1217  06A1               	xorwf	___awdiv@sign,f
  3993  1218                     l2190:
  3994  1218  01A2               	clrf	___awdiv@quotient
  3995  1219  01A3               	clrf	___awdiv@quotient+1
  3996  121A                     l2192:
  3997  121A  0877               	movf	___awdiv@divisor,w
  3998  121B  0478               	iorwf	___awdiv@divisor+1,w
  3999  121C  1903               	btfsc	3,2
  4000  121D  2A1F               	goto	u2591
  4001  121E  2A20               	goto	u2590
  4002  121F                     u2591:
  4003  121F  2A57               	goto	l2212
  4004  1220                     u2590:
  4005  1220                     l2194:
  4006  1220  01A0               	clrf	___awdiv@counter
  4007  1221  0AA0               	incf	___awdiv@counter,f
  4008  1222  2A2E               	goto	l2200
  4009  1223                     l2196:
  4010  1223  3001               	movlw	1
  4011  1224                     u2605:
  4012  1224  1003               	clrc
  4013  1225  0DF7               	rlf	___awdiv@divisor,f
  4014  1226  0DF8               	rlf	___awdiv@divisor+1,f
  4015  1227  3EFF               	addlw	-1
  4016  1228  1D03               	skipz
  4017  1229  2A24               	goto	u2605
  4018  122A                     l2198:
  4019  122A  3001               	movlw	1
  4020  122B  00FB               	movwf	??___awdiv
  4021  122C  087B               	movf	??___awdiv,w
  4022  122D  07A0               	addwf	___awdiv@counter,f
  4023  122E                     l2200:
  4024  122E  1FF8               	btfss	___awdiv@divisor+1,7
  4025  122F  2A31               	goto	u2611
  4026  1230  2A32               	goto	u2610
  4027  1231                     u2611:
  4028  1231  2A23               	goto	l2196
  4029  1232                     u2610:
  4030  1232                     l2202:
  4031  1232  3001               	movlw	1
  4032  1233                     u2625:
  4033  1233  1003               	clrc
  4034  1234  0DA2               	rlf	___awdiv@quotient,f
  4035  1235  0DA3               	rlf	___awdiv@quotient+1,f
  4036  1236  3EFF               	addlw	-1
  4037  1237  1D03               	skipz
  4038  1238  2A33               	goto	u2625
  4039  1239  0878               	movf	___awdiv@divisor+1,w
  4040  123A  027A               	subwf	___awdiv@dividend+1,w
  4041  123B  1D03               	skipz
  4042  123C  2A3F               	goto	u2635
  4043  123D  0877               	movf	___awdiv@divisor,w
  4044  123E  0279               	subwf	___awdiv@dividend,w
  4045  123F                     u2635:
  4046  123F  1C03               	skipc
  4047  1240  2A42               	goto	u2631
  4048  1241  2A43               	goto	u2630
  4049  1242                     u2631:
  4050  1242  2A4A               	goto	l2208
  4051  1243                     u2630:
  4052  1243                     l2204:
  4053  1243  0877               	movf	___awdiv@divisor,w
  4054  1244  02F9               	subwf	___awdiv@dividend,f
  4055  1245  0878               	movf	___awdiv@divisor+1,w
  4056  1246  1C03               	skipc
  4057  1247  03FA               	decf	___awdiv@dividend+1,f
  4058  1248  02FA               	subwf	___awdiv@dividend+1,f
  4059  1249                     l2206:
  4060  1249  1422               	bsf	___awdiv@quotient,0
  4061  124A                     l2208:
  4062  124A  3001               	movlw	1
  4063  124B                     u2645:
  4064  124B  1003               	clrc
  4065  124C  0CF8               	rrf	___awdiv@divisor+1,f
  4066  124D  0CF7               	rrf	___awdiv@divisor,f
  4067  124E  3EFF               	addlw	-1
  4068  124F  1D03               	skipz
  4069  1250  2A4B               	goto	u2645
  4070  1251                     l2210:
  4071  1251  3001               	movlw	1
  4072  1252  02A0               	subwf	___awdiv@counter,f
  4073  1253  1D03               	btfss	3,2
  4074  1254  2A56               	goto	u2651
  4075  1255  2A57               	goto	u2650
  4076  1256                     u2651:
  4077  1256  2A32               	goto	l2202
  4078  1257                     u2650:
  4079  1257                     l2212:
  4080  1257  0821               	movf	___awdiv@sign,w
  4081  1258  1903               	btfsc	3,2
  4082  1259  2A5B               	goto	u2661
  4083  125A  2A5C               	goto	u2660
  4084  125B                     u2661:
  4085  125B  2A61               	goto	l2216
  4086  125C                     u2660:
  4087  125C                     l2214:
  4088  125C  09A2               	comf	___awdiv@quotient,f
  4089  125D  09A3               	comf	___awdiv@quotient+1,f
  4090  125E  0AA2               	incf	___awdiv@quotient,f
  4091  125F  1903               	skipnz
  4092  1260  0AA3               	incf	___awdiv@quotient+1,f
  4093  1261                     l2216:
  4094  1261  0823               	movf	___awdiv@quotient+1,w
  4095  1262  00F8               	movwf	?___awdiv+1
  4096  1263  0822               	movf	___awdiv@quotient,w
  4097  1264  00F7               	movwf	?___awdiv
  4098  1265                     l581:
  4099  1265  0008               	return
  4100  1266                     __end_of___awdiv:
  4101                           
  4102                           	psect	text9
  4103  1D91                     __ptext9:	
  4104 ;; *************** function _isdigit *****************
  4105 ;; Defined at:
  4106 ;;		line 8 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\isdigit.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;  c               1    wreg     unsigned char 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;  c               1    1[COMMON] unsigned char 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;		None               void
  4113 ;; Registers used:
  4114 ;;		wreg, status,2, status,0
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4120 ;;      Params:         0       0       0       0       0
  4121 ;;      Locals:         2       0       0       0       0
  4122 ;;      Temps:          0       0       0       0       0
  4123 ;;      Totals:         2       0       0       0       0
  4124 ;;Total ram usage:        2 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_sprintf
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           
  4134                           ;psect for function _isdigit
  4135  1D91                     _isdigit:
  4136                           
  4137                           ;incstack = 0
  4138                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4139                           ;isdigit@c stored from wreg
  4140  1D91  00F1               	movwf	isdigit@c
  4141  1D92                     l2518:
  4142  1D92  01F0               	clrf	_isdigit$834
  4143  1D93                     l2520:
  4144  1D93  303A               	movlw	58
  4145  1D94  0271               	subwf	isdigit@c,w
  4146  1D95  1803               	skipnc
  4147  1D96  2D98               	goto	u3431
  4148  1D97  2D99               	goto	u3430
  4149  1D98                     u3431:
  4150  1D98  2DA1               	goto	l2526
  4151  1D99                     u3430:
  4152  1D99                     l2522:
  4153  1D99  3030               	movlw	48
  4154  1D9A  0271               	subwf	isdigit@c,w
  4155  1D9B  1C03               	skipc
  4156  1D9C  2D9E               	goto	u3441
  4157  1D9D  2D9F               	goto	u3440
  4158  1D9E                     u3441:
  4159  1D9E  2DA1               	goto	l2526
  4160  1D9F                     u3440:
  4161  1D9F                     l2524:
  4162  1D9F  01F0               	clrf	_isdigit$834
  4163  1DA0  0AF0               	incf	_isdigit$834,f
  4164  1DA1                     l2526:
  4165  1DA1  0C70               	rrf	_isdigit$834,w
  4166  1DA2                     l860:
  4167  1DA2  0008               	return
  4168  1DA3                     __end_of_isdigit:
  4169                           
  4170                           	psect	text10
  4171  00F2                     __ptext10:	
  4172 ;; *************** function _fround *****************
  4173 ;; Defined at:
  4174 ;;		line 417 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  prec            1    wreg     unsigned char 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  prec            1   39[BANK0 ] unsigned char 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  3   24[BANK0 ] unsigned char 
  4181 ;; Registers used:
  4182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4188 ;;      Params:         0       3       0       0       0
  4189 ;;      Locals:         0       7       0       0       0
  4190 ;;      Temps:          0       6       0       0       0
  4191 ;;      Totals:         0      16       0       0       0
  4192 ;;Total ram usage:       16 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; Hardware stack levels required when called:    2
  4195 ;; This function calls:
  4196 ;;		___bmul
  4197 ;;		___ftmul
  4198 ;;		___lwdiv
  4199 ;;		___lwmod
  4200 ;; This function is called by:
  4201 ;;		_sprintf
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           
  4206                           ;psect for function _fround
  4207  00F2                     _fround:
  4208                           
  4209                           ;incstack = 0
  4210                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4211                           ;fround@prec stored from wreg
  4212  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  4213  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  4214  00F4  00C7               	movwf	fround@prec
  4215  00F5                     l2456:
  4216                           
  4217                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 417: fround(unsigned char prec);
      +                          D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 418: {;D:\MPLAB XC8 compiler\pic\
      +                          sources\c90\common\doprnt.c: 421:  if(prec>=110)
  4218  00F5  306E               	movlw	110
  4219  00F6  0247               	subwf	fround@prec,w
  4220  00F7  1C03               	skipc
  4221  00F8  28FA               	goto	u3361
  4222  00F9  28FB               	goto	u3360
  4223  00FA                     u3361:
  4224  00FA  29D2               	goto	l2466
  4225  00FB                     u3360:
  4226  00FB                     l2458:
  4227                           
  4228                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4229  00FB  3003               	movlw	3
  4230  00FC  00BB               	movwf	??_fround
  4231  00FD  083B               	movf	??_fround,w
  4232  00FE  00A4               	movwf	___bmul@multiplicand
  4233  00FF  0847               	movf	fround@prec,w
  4234  0100  00BC               	movwf	??_fround+1
  4235  0101  01BD               	clrf	??_fround+2
  4236  0102  083C               	movf	??_fround+1,w
  4237  0103  00F2               	movwf	___lwmod@dividend
  4238  0104  083D               	movf	??_fround+2,w
  4239  0105  00F3               	movwf	___lwmod@dividend+1
  4240  0106  3064               	movlw	100
  4241  0107  00F0               	movwf	___lwmod@divisor
  4242  0108  3000               	movlw	0
  4243  0109  00F1               	movwf	___lwmod@divisor+1
  4244  010A  160A  158A  2719  120A  118A  	fcall	___lwmod
  4245  010F  0871               	movf	?___lwmod+1,w
  4246  0110  00F9               	movwf	___lwdiv@dividend+1
  4247  0111  0870               	movf	?___lwmod,w
  4248  0112  00F8               	movwf	___lwdiv@dividend
  4249  0113  300A               	movlw	10
  4250  0114  00F6               	movwf	___lwdiv@divisor
  4251  0115  3000               	movlw	0
  4252  0116  00F7               	movwf	___lwdiv@divisor+1
  4253  0117  160A  118A  209D  120A  118A  	fcall	___lwdiv
  4254  011C  0876               	movf	?___lwdiv,w
  4255  011D  120A  158A  200C  120A  118A  	fcall	___bmul
  4256  0122  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  4257  0123  0084               	movwf	4
  4258  0124  160A  118A  2000  120A  118A  	fcall	stringdir
  4259  0129  1283               	bcf	3,5	;RP0=0, select bank0
  4260  012A  1303               	bcf	3,6	;RP1=0, select bank0
  4261  012B  00A8               	movwf	___ftmul@f1
  4262  012C  160A  118A  2000  120A  118A  	fcall	stringdir
  4263  0131  00A9               	movwf	___ftmul@f1+1
  4264  0132  160A  118A  2000  120A  118A  	fcall	stringdir
  4265  0137  00AA               	movwf	___ftmul@f1+2
  4266  0138  3003               	movlw	3
  4267  0139  00BE               	movwf	??_fround+3
  4268  013A  083E               	movf	??_fround+3,w
  4269  013B  00A4               	movwf	___bmul@multiplicand
  4270  013C  0847               	movf	fround@prec,w
  4271  013D  00BF               	movwf	??_fround+4
  4272  013E  01C0               	clrf	??_fround+5
  4273  013F  083F               	movf	??_fround+4,w
  4274  0140  00F8               	movwf	___lwdiv@dividend
  4275  0141  0840               	movf	??_fround+5,w
  4276  0142  00F9               	movwf	___lwdiv@dividend+1
  4277  0143  3064               	movlw	100
  4278  0144  00F6               	movwf	___lwdiv@divisor
  4279  0145  3000               	movlw	0
  4280  0146  00F7               	movwf	___lwdiv@divisor+1
  4281  0147  160A  118A  209D  120A  118A  	fcall	___lwdiv
  4282  014C  0876               	movf	?___lwdiv,w
  4283  014D  120A  158A  200C  120A  118A  	fcall	___bmul
  4284  0152  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  4285  0153  0084               	movwf	4
  4286  0154  160A  118A  2000  120A  118A  	fcall	stringdir
  4287  0159  1283               	bcf	3,5	;RP0=0, select bank0
  4288  015A  1303               	bcf	3,6	;RP1=0, select bank0
  4289  015B  00AB               	movwf	___ftmul@f2
  4290  015C  160A  118A  2000  120A  118A  	fcall	stringdir
  4291  0161  00AC               	movwf	___ftmul@f2+1
  4292  0162  160A  118A  2000  120A  118A  	fcall	stringdir
  4293  0167  00AD               	movwf	___ftmul@f2+2
  4294  0168  120A  118A  200D  120A  118A  	fcall	___ftmul
  4295  016D  1283               	bcf	3,5	;RP0=0, select bank0
  4296  016E  1303               	bcf	3,6	;RP1=0, select bank0
  4297  016F  0828               	movf	?___ftmul,w
  4298  0170  00C4               	movwf	_fround$1038
  4299  0171  0829               	movf	?___ftmul+1,w
  4300  0172  00C5               	movwf	_fround$1038+1
  4301  0173  082A               	movf	?___ftmul+2,w
  4302  0174  00C6               	movwf	_fround$1038+2
  4303                           
  4304                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4305  0175  3003               	movlw	3
  4306  0176  00BB               	movwf	??_fround
  4307  0177  083B               	movf	??_fround,w
  4308  0178  00A4               	movwf	___bmul@multiplicand
  4309  0179  0847               	movf	fround@prec,w
  4310  017A  00BC               	movwf	??_fround+1
  4311  017B  01BD               	clrf	??_fround+2
  4312  017C  083C               	movf	??_fround+1,w
  4313  017D  00F2               	movwf	___lwmod@dividend
  4314  017E  083D               	movf	??_fround+2,w
  4315  017F  00F3               	movwf	___lwmod@dividend+1
  4316  0180  300A               	movlw	10
  4317  0181  00F0               	movwf	___lwmod@divisor
  4318  0182  3000               	movlw	0
  4319  0183  00F1               	movwf	___lwmod@divisor+1
  4320  0184  160A  158A  2719  120A  118A  	fcall	___lwmod
  4321  0189  0870               	movf	?___lwmod,w
  4322  018A  120A  158A  200C  120A  118A  	fcall	___bmul
  4323  018F  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4324  0190  0084               	movwf	4
  4325  0191  160A  118A  2000  120A  118A  	fcall	stringdir
  4326  0196  1283               	bcf	3,5	;RP0=0, select bank0
  4327  0197  1303               	bcf	3,6	;RP1=0, select bank0
  4328  0198  00A8               	movwf	___ftmul@f1
  4329  0199  160A  118A  2000  120A  118A  	fcall	stringdir
  4330  019E  00A9               	movwf	___ftmul@f1+1
  4331  019F  160A  118A  2000  120A  118A  	fcall	stringdir
  4332  01A4  00AA               	movwf	___ftmul@f1+2
  4333  01A5  0844               	movf	_fround$1038,w
  4334  01A6  00AB               	movwf	___ftmul@f2
  4335  01A7  0845               	movf	_fround$1038+1,w
  4336  01A8  00AC               	movwf	___ftmul@f2+1
  4337  01A9  0846               	movf	_fround$1038+2,w
  4338  01AA  00AD               	movwf	___ftmul@f2+2
  4339  01AB  120A  118A  200D  120A  118A  	fcall	___ftmul
  4340  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  4341  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  4342  01B2  0828               	movf	?___ftmul,w
  4343  01B3  00C1               	movwf	_fround$1039
  4344  01B4  0829               	movf	?___ftmul+1,w
  4345  01B5  00C2               	movwf	_fround$1039+1
  4346  01B6  082A               	movf	?___ftmul+2,w
  4347  01B7  00C3               	movwf	_fround$1039+2
  4348  01B8                     l2460:
  4349                           
  4350                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4351  01B8  3000               	movlw	0
  4352  01B9  00A8               	movwf	___ftmul@f1
  4353  01BA  3000               	movlw	0
  4354  01BB  00A9               	movwf	___ftmul@f1+1
  4355  01BC  303F               	movlw	63
  4356  01BD  00AA               	movwf	___ftmul@f1+2
  4357  01BE  0841               	movf	_fround$1039,w
  4358  01BF  00AB               	movwf	___ftmul@f2
  4359  01C0  0842               	movf	_fround$1039+1,w
  4360  01C1  00AC               	movwf	___ftmul@f2+1
  4361  01C2  0843               	movf	_fround$1039+2,w
  4362  01C3  00AD               	movwf	___ftmul@f2+2
  4363  01C4  120A  118A  200D  120A  118A  	fcall	___ftmul
  4364  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  4365  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  4366  01CB  0828               	movf	?___ftmul,w
  4367  01CC  00B8               	movwf	?_fround
  4368  01CD  0829               	movf	?___ftmul+1,w
  4369  01CE  00B9               	movwf	?_fround+1
  4370  01CF  082A               	movf	?___ftmul+2,w
  4371  01D0  00BA               	movwf	?_fround+2
  4372  01D1  2A92               	goto	l304
  4373  01D2                     l2466:
  4374  01D2  300B               	movlw	11
  4375  01D3  0247               	subwf	fround@prec,w
  4376  01D4  1C03               	skipc
  4377  01D5  29D7               	goto	u3371
  4378  01D6  29D8               	goto	u3370
  4379  01D7                     u3371:
  4380  01D7  2A5F               	goto	l2474
  4381  01D8                     u3370:
  4382  01D8                     l2468:
  4383                           
  4384                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[pr
      +                          ec/10U+9U] * _npowers_[prec%10U];
  4385  01D8  3003               	movlw	3
  4386  01D9  00BB               	movwf	??_fround
  4387  01DA  083B               	movf	??_fround,w
  4388  01DB  00A4               	movwf	___bmul@multiplicand
  4389  01DC  0847               	movf	fround@prec,w
  4390  01DD  00BC               	movwf	??_fround+1
  4391  01DE  01BD               	clrf	??_fround+2
  4392  01DF  083C               	movf	??_fround+1,w
  4393  01E0  00F2               	movwf	___lwmod@dividend
  4394  01E1  083D               	movf	??_fround+2,w
  4395  01E2  00F3               	movwf	___lwmod@dividend+1
  4396  01E3  300A               	movlw	10
  4397  01E4  00F0               	movwf	___lwmod@divisor
  4398  01E5  3000               	movlw	0
  4399  01E6  00F1               	movwf	___lwmod@divisor+1
  4400  01E7  160A  158A  2719  120A  118A  	fcall	___lwmod
  4401  01EC  0870               	movf	?___lwmod,w
  4402  01ED  120A  158A  200C  120A  118A  	fcall	___bmul
  4403  01F2  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4404  01F3  0084               	movwf	4
  4405  01F4  160A  118A  2000  120A  118A  	fcall	stringdir
  4406  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  4407  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  4408  01FB  00A8               	movwf	___ftmul@f1
  4409  01FC  160A  118A  2000  120A  118A  	fcall	stringdir
  4410  0201  00A9               	movwf	___ftmul@f1+1
  4411  0202  160A  118A  2000  120A  118A  	fcall	stringdir
  4412  0207  00AA               	movwf	___ftmul@f1+2
  4413  0208  3003               	movlw	3
  4414  0209  00BE               	movwf	??_fround+3
  4415  020A  083E               	movf	??_fround+3,w
  4416  020B  00A4               	movwf	___bmul@multiplicand
  4417  020C  0847               	movf	fround@prec,w
  4418  020D  00BF               	movwf	??_fround+4
  4419  020E  01C0               	clrf	??_fround+5
  4420  020F  083F               	movf	??_fround+4,w
  4421  0210  00F8               	movwf	___lwdiv@dividend
  4422  0211  0840               	movf	??_fround+5,w
  4423  0212  00F9               	movwf	___lwdiv@dividend+1
  4424  0213  300A               	movlw	10
  4425  0214  00F6               	movwf	___lwdiv@divisor
  4426  0215  3000               	movlw	0
  4427  0216  00F7               	movwf	___lwdiv@divisor+1
  4428  0217  160A  118A  209D  120A  118A  	fcall	___lwdiv
  4429  021C  0876               	movf	?___lwdiv,w
  4430  021D  120A  158A  200C  120A  118A  	fcall	___bmul
  4431  0222  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  4432  0223  0084               	movwf	4
  4433  0224  160A  118A  2000  120A  118A  	fcall	stringdir
  4434  0229  1283               	bcf	3,5	;RP0=0, select bank0
  4435  022A  1303               	bcf	3,6	;RP1=0, select bank0
  4436  022B  00AB               	movwf	___ftmul@f2
  4437  022C  160A  118A  2000  120A  118A  	fcall	stringdir
  4438  0231  00AC               	movwf	___ftmul@f2+1
  4439  0232  160A  118A  2000  120A  118A  	fcall	stringdir
  4440  0237  00AD               	movwf	___ftmul@f2+2
  4441  0238  120A  118A  200D  120A  118A  	fcall	___ftmul
  4442  023D  1283               	bcf	3,5	;RP0=0, select bank0
  4443  023E  1303               	bcf	3,6	;RP1=0, select bank0
  4444  023F  0828               	movf	?___ftmul,w
  4445  0240  00C4               	movwf	_fround$1038
  4446  0241  0829               	movf	?___ftmul+1,w
  4447  0242  00C5               	movwf	_fround$1038+1
  4448  0243  082A               	movf	?___ftmul+2,w
  4449  0244  00C6               	movwf	_fround$1038+2
  4450  0245                     l2470:
  4451                           
  4452                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[pr
      +                          ec/10U+9U] * _npowers_[prec%10U];
  4453  0245  3000               	movlw	0
  4454  0246  00A8               	movwf	___ftmul@f1
  4455  0247  3000               	movlw	0
  4456  0248  00A9               	movwf	___ftmul@f1+1
  4457  0249  303F               	movlw	63
  4458  024A  00AA               	movwf	___ftmul@f1+2
  4459  024B  0844               	movf	_fround$1038,w
  4460  024C  00AB               	movwf	___ftmul@f2
  4461  024D  0845               	movf	_fround$1038+1,w
  4462  024E  00AC               	movwf	___ftmul@f2+1
  4463  024F  0846               	movf	_fround$1038+2,w
  4464  0250  00AD               	movwf	___ftmul@f2+2
  4465  0251  120A  118A  200D  120A  118A  	fcall	___ftmul
  4466  0256  1283               	bcf	3,5	;RP0=0, select bank0
  4467  0257  1303               	bcf	3,6	;RP1=0, select bank0
  4468  0258  0828               	movf	?___ftmul,w
  4469  0259  00B8               	movwf	?_fround
  4470  025A  0829               	movf	?___ftmul+1,w
  4471  025B  00B9               	movwf	?_fround+1
  4472  025C  082A               	movf	?___ftmul+2,w
  4473  025D  00BA               	movwf	?_fround+2
  4474  025E  2A92               	goto	l304
  4475  025F                     l2474:
  4476                           
  4477                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 425:  return 0.5 * _npowers_[pre
      +                          c];
  4478  025F  3000               	movlw	0
  4479  0260  00A8               	movwf	___ftmul@f1
  4480  0261  3000               	movlw	0
  4481  0262  00A9               	movwf	___ftmul@f1+1
  4482  0263  303F               	movlw	63
  4483  0264  00AA               	movwf	___ftmul@f1+2
  4484  0265  3003               	movlw	3
  4485  0266  00BB               	movwf	??_fround
  4486  0267  083B               	movf	??_fround,w
  4487  0268  00A4               	movwf	___bmul@multiplicand
  4488  0269  0847               	movf	fround@prec,w
  4489  026A  120A  158A  200C  120A  118A  	fcall	___bmul
  4490  026F  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4491  0270  0084               	movwf	4
  4492  0271  160A  118A  2000  120A  118A  	fcall	stringdir
  4493  0276  1283               	bcf	3,5	;RP0=0, select bank0
  4494  0277  1303               	bcf	3,6	;RP1=0, select bank0
  4495  0278  00AB               	movwf	___ftmul@f2
  4496  0279  160A  118A  2000  120A  118A  	fcall	stringdir
  4497  027E  00AC               	movwf	___ftmul@f2+1
  4498  027F  160A  118A  2000  120A  118A  	fcall	stringdir
  4499  0284  00AD               	movwf	___ftmul@f2+2
  4500  0285  120A  118A  200D  120A  118A  	fcall	___ftmul
  4501  028A  1283               	bcf	3,5	;RP0=0, select bank0
  4502  028B  1303               	bcf	3,6	;RP1=0, select bank0
  4503  028C  0828               	movf	?___ftmul,w
  4504  028D  00B8               	movwf	?_fround
  4505  028E  0829               	movf	?___ftmul+1,w
  4506  028F  00B9               	movwf	?_fround+1
  4507  0290  082A               	movf	?___ftmul+2,w
  4508  0291  00BA               	movwf	?_fround+2
  4509  0292                     l304:
  4510  0292  0008               	return
  4511  0293                     __end_of_fround:
  4512                           
  4513                           	psect	text11
  4514  1F19                     __ptext11:	
  4515 ;; *************** function ___lwmod *****************
  4516 ;; Defined at:
  4517 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lwmod.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  divisor         2    0[COMMON] unsigned int 
  4520 ;;  dividend        2    2[COMMON] unsigned int 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  counter         1    5[COMMON] unsigned char 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  2    0[COMMON] unsigned int 
  4525 ;; Registers used:
  4526 ;;		wreg, status,2, status,0
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4532 ;;      Params:         4       0       0       0       0
  4533 ;;      Locals:         1       0       0       0       0
  4534 ;;      Temps:          1       0       0       0       0
  4535 ;;      Totals:         6       0       0       0       0
  4536 ;;Total ram usage:        6 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_fround
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           
  4546                           ;psect for function ___lwmod
  4547  1F19                     ___lwmod:
  4548  1F19                     l2404:	
  4549                           ;incstack = 0
  4550                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4551                           
  4552  1F19  0870               	movf	___lwmod@divisor,w
  4553  1F1A  0471               	iorwf	___lwmod@divisor+1,w
  4554  1F1B  1903               	btfsc	3,2
  4555  1F1C  2F1E               	goto	u3211
  4556  1F1D  2F1F               	goto	u3210
  4557  1F1E                     u3211:
  4558  1F1E  2F4E               	goto	l2422
  4559  1F1F                     u3210:
  4560  1F1F                     l2406:
  4561  1F1F  01F5               	clrf	___lwmod@counter
  4562  1F20  0AF5               	incf	___lwmod@counter,f
  4563  1F21  2F2D               	goto	l2412
  4564  1F22                     l2408:
  4565  1F22  3001               	movlw	1
  4566  1F23                     u3225:
  4567  1F23  1003               	clrc
  4568  1F24  0DF0               	rlf	___lwmod@divisor,f
  4569  1F25  0DF1               	rlf	___lwmod@divisor+1,f
  4570  1F26  3EFF               	addlw	-1
  4571  1F27  1D03               	skipz
  4572  1F28  2F23               	goto	u3225
  4573  1F29                     l2410:
  4574  1F29  3001               	movlw	1
  4575  1F2A  00F4               	movwf	??___lwmod
  4576  1F2B  0874               	movf	??___lwmod,w
  4577  1F2C  07F5               	addwf	___lwmod@counter,f
  4578  1F2D                     l2412:
  4579  1F2D  1FF1               	btfss	___lwmod@divisor+1,7
  4580  1F2E  2F30               	goto	u3231
  4581  1F2F  2F31               	goto	u3230
  4582  1F30                     u3231:
  4583  1F30  2F22               	goto	l2408
  4584  1F31                     u3230:
  4585  1F31                     l2414:
  4586  1F31  0871               	movf	___lwmod@divisor+1,w
  4587  1F32  0273               	subwf	___lwmod@dividend+1,w
  4588  1F33  1D03               	skipz
  4589  1F34  2F37               	goto	u3245
  4590  1F35  0870               	movf	___lwmod@divisor,w
  4591  1F36  0272               	subwf	___lwmod@dividend,w
  4592  1F37                     u3245:
  4593  1F37  1C03               	skipc
  4594  1F38  2F3A               	goto	u3241
  4595  1F39  2F3B               	goto	u3240
  4596  1F3A                     u3241:
  4597  1F3A  2F41               	goto	l2418
  4598  1F3B                     u3240:
  4599  1F3B                     l2416:
  4600  1F3B  0870               	movf	___lwmod@divisor,w
  4601  1F3C  02F2               	subwf	___lwmod@dividend,f
  4602  1F3D  0871               	movf	___lwmod@divisor+1,w
  4603  1F3E  1C03               	skipc
  4604  1F3F  03F3               	decf	___lwmod@dividend+1,f
  4605  1F40  02F3               	subwf	___lwmod@dividend+1,f
  4606  1F41                     l2418:
  4607  1F41  3001               	movlw	1
  4608  1F42                     u3255:
  4609  1F42  1003               	clrc
  4610  1F43  0CF1               	rrf	___lwmod@divisor+1,f
  4611  1F44  0CF0               	rrf	___lwmod@divisor,f
  4612  1F45  3EFF               	addlw	-1
  4613  1F46  1D03               	skipz
  4614  1F47  2F42               	goto	u3255
  4615  1F48                     l2420:
  4616  1F48  3001               	movlw	1
  4617  1F49  02F5               	subwf	___lwmod@counter,f
  4618  1F4A  1D03               	btfss	3,2
  4619  1F4B  2F4D               	goto	u3261
  4620  1F4C  2F4E               	goto	u3260
  4621  1F4D                     u3261:
  4622  1F4D  2F31               	goto	l2414
  4623  1F4E                     u3260:
  4624  1F4E                     l2422:
  4625  1F4E  0873               	movf	___lwmod@dividend+1,w
  4626  1F4F  00F1               	movwf	?___lwmod+1
  4627  1F50  0872               	movf	___lwmod@dividend,w
  4628  1F51  00F0               	movwf	?___lwmod
  4629  1F52                     l850:
  4630  1F52  0008               	return
  4631  1F53                     __end_of___lwmod:
  4632                           
  4633                           	psect	text12
  4634  109D                     __ptext12:	
  4635 ;; *************** function ___lwdiv *****************
  4636 ;; Defined at:
  4637 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lwdiv.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  divisor         2    6[COMMON] unsigned int 
  4640 ;;  dividend        2    8[COMMON] unsigned int 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  quotient        2   11[COMMON] unsigned int 
  4643 ;;  counter         1   13[COMMON] unsigned char 
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  2    6[COMMON] unsigned int 
  4646 ;; Registers used:
  4647 ;;		wreg, status,2, status,0
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4653 ;;      Params:         4       0       0       0       0
  4654 ;;      Locals:         3       0       0       0       0
  4655 ;;      Temps:          1       0       0       0       0
  4656 ;;      Totals:         8       0       0       0       0
  4657 ;;Total ram usage:        8 bytes
  4658 ;; Hardware stack levels used:    1
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_fround
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           
  4667                           ;psect for function ___lwdiv
  4668  109D                     ___lwdiv:
  4669  109D                     l2378:	
  4670                           ;incstack = 0
  4671                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4672                           
  4673  109D  01FB               	clrf	___lwdiv@quotient
  4674  109E  01FC               	clrf	___lwdiv@quotient+1
  4675  109F                     l2380:
  4676  109F  0876               	movf	___lwdiv@divisor,w
  4677  10A0  0477               	iorwf	___lwdiv@divisor+1,w
  4678  10A1  1903               	btfsc	3,2
  4679  10A2  28A4               	goto	u3141
  4680  10A3  28A5               	goto	u3140
  4681  10A4                     u3141:
  4682  10A4  28DC               	goto	l2400
  4683  10A5                     u3140:
  4684  10A5                     l2382:
  4685  10A5  01FD               	clrf	___lwdiv@counter
  4686  10A6  0AFD               	incf	___lwdiv@counter,f
  4687  10A7  28B3               	goto	l2388
  4688  10A8                     l2384:
  4689  10A8  3001               	movlw	1
  4690  10A9                     u3155:
  4691  10A9  1003               	clrc
  4692  10AA  0DF6               	rlf	___lwdiv@divisor,f
  4693  10AB  0DF7               	rlf	___lwdiv@divisor+1,f
  4694  10AC  3EFF               	addlw	-1
  4695  10AD  1D03               	skipz
  4696  10AE  28A9               	goto	u3155
  4697  10AF                     l2386:
  4698  10AF  3001               	movlw	1
  4699  10B0  00FA               	movwf	??___lwdiv
  4700  10B1  087A               	movf	??___lwdiv,w
  4701  10B2  07FD               	addwf	___lwdiv@counter,f
  4702  10B3                     l2388:
  4703  10B3  1FF7               	btfss	___lwdiv@divisor+1,7
  4704  10B4  28B6               	goto	u3161
  4705  10B5  28B7               	goto	u3160
  4706  10B6                     u3161:
  4707  10B6  28A8               	goto	l2384
  4708  10B7                     u3160:
  4709  10B7                     l2390:
  4710  10B7  3001               	movlw	1
  4711  10B8                     u3175:
  4712  10B8  1003               	clrc
  4713  10B9  0DFB               	rlf	___lwdiv@quotient,f
  4714  10BA  0DFC               	rlf	___lwdiv@quotient+1,f
  4715  10BB  3EFF               	addlw	-1
  4716  10BC  1D03               	skipz
  4717  10BD  28B8               	goto	u3175
  4718  10BE  0877               	movf	___lwdiv@divisor+1,w
  4719  10BF  0279               	subwf	___lwdiv@dividend+1,w
  4720  10C0  1D03               	skipz
  4721  10C1  28C4               	goto	u3185
  4722  10C2  0876               	movf	___lwdiv@divisor,w
  4723  10C3  0278               	subwf	___lwdiv@dividend,w
  4724  10C4                     u3185:
  4725  10C4  1C03               	skipc
  4726  10C5  28C7               	goto	u3181
  4727  10C6  28C8               	goto	u3180
  4728  10C7                     u3181:
  4729  10C7  28CF               	goto	l2396
  4730  10C8                     u3180:
  4731  10C8                     l2392:
  4732  10C8  0876               	movf	___lwdiv@divisor,w
  4733  10C9  02F8               	subwf	___lwdiv@dividend,f
  4734  10CA  0877               	movf	___lwdiv@divisor+1,w
  4735  10CB  1C03               	skipc
  4736  10CC  03F9               	decf	___lwdiv@dividend+1,f
  4737  10CD  02F9               	subwf	___lwdiv@dividend+1,f
  4738  10CE                     l2394:
  4739  10CE  147B               	bsf	___lwdiv@quotient,0
  4740  10CF                     l2396:
  4741  10CF  3001               	movlw	1
  4742  10D0                     u3195:
  4743  10D0  1003               	clrc
  4744  10D1  0CF7               	rrf	___lwdiv@divisor+1,f
  4745  10D2  0CF6               	rrf	___lwdiv@divisor,f
  4746  10D3  3EFF               	addlw	-1
  4747  10D4  1D03               	skipz
  4748  10D5  28D0               	goto	u3195
  4749  10D6                     l2398:
  4750  10D6  3001               	movlw	1
  4751  10D7  02FD               	subwf	___lwdiv@counter,f
  4752  10D8  1D03               	btfss	3,2
  4753  10D9  28DB               	goto	u3201
  4754  10DA  28DC               	goto	u3200
  4755  10DB                     u3201:
  4756  10DB  28B7               	goto	l2390
  4757  10DC                     u3200:
  4758  10DC                     l2400:
  4759  10DC  087C               	movf	___lwdiv@quotient+1,w
  4760  10DD  00F7               	movwf	?___lwdiv+1
  4761  10DE  087B               	movf	___lwdiv@quotient,w
  4762  10DF  00F6               	movwf	?___lwdiv
  4763  10E0                     l840:
  4764  10E0  0008               	return
  4765  10E1                     __end_of___lwdiv:
  4766                           
  4767                           	psect	text13
  4768  080C                     __ptext13:	
  4769 ;; *************** function ___bmul *****************
  4770 ;; Defined at:
  4771 ;;		line 4 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\Umul8.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;  multiplier      1    wreg     unsigned char 
  4774 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  multiplier      1    7[BANK0 ] unsigned char 
  4777 ;;  product         1    6[BANK0 ] unsigned char 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      unsigned char 
  4780 ;; Registers used:
  4781 ;;		wreg, status,2, status,0
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4787 ;;      Params:         0       1       0       0       0
  4788 ;;      Locals:         0       2       0       0       0
  4789 ;;      Temps:          0       1       0       0       0
  4790 ;;      Totals:         0       4       0       0       0
  4791 ;;Total ram usage:        4 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; This function calls:
  4794 ;;		Nothing
  4795 ;; This function is called by:
  4796 ;;		_fround
  4797 ;;		_scale
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           
  4802                           ;psect for function ___bmul
  4803  080C                     ___bmul:
  4804                           
  4805                           ;incstack = 0
  4806                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4807                           ;___bmul@multiplier stored from wreg
  4808  080C  1283               	bcf	3,5	;RP0=0, select bank0
  4809  080D  1303               	bcf	3,6	;RP1=0, select bank0
  4810  080E  00A7               	movwf	___bmul@multiplier
  4811  080F                     l2162:
  4812  080F  01A6               	clrf	___bmul@product
  4813  0810                     l2164:
  4814  0810  1C27               	btfss	___bmul@multiplier,0
  4815  0811  2813               	goto	u2551
  4816  0812  2814               	goto	u2550
  4817  0813                     u2551:
  4818  0813  2818               	goto	l2168
  4819  0814                     u2550:
  4820  0814                     l2166:
  4821  0814  0824               	movf	___bmul@multiplicand,w
  4822  0815  00A5               	movwf	??___bmul
  4823  0816  0825               	movf	??___bmul,w
  4824  0817  07A6               	addwf	___bmul@product,f
  4825  0818                     l2168:
  4826  0818  1003               	clrc
  4827  0819  0DA4               	rlf	___bmul@multiplicand,f
  4828  081A                     l2170:
  4829  081A  1003               	clrc
  4830  081B  0CA7               	rrf	___bmul@multiplier,f
  4831  081C  0827               	movf	___bmul@multiplier,w
  4832  081D  1D03               	btfss	3,2
  4833  081E  2820               	goto	u2561
  4834  081F  2821               	goto	u2560
  4835  0820                     u2561:
  4836  0820  2810               	goto	l2164
  4837  0821                     u2560:
  4838  0821                     l2172:
  4839  0821  0826               	movf	___bmul@product,w
  4840  0822                     l424:
  4841  0822  0008               	return
  4842  0823                     __end_of___bmul:
  4843                           
  4844                           	psect	text14
  4845  14B0                     __ptext14:	
  4846 ;; *************** function __tdiv_to_l_ *****************
  4847 ;; Defined at:
  4848 ;;		line 60 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftdivl.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;  f1              3    0[COMMON] float 
  4851 ;;  f2              3    3[COMMON] float 
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;  quot            4    0[BANK0 ] unsigned long 
  4854 ;;  exp1            1    5[BANK0 ] unsigned char 
  4855 ;;  cntr            1    4[BANK0 ] unsigned char 
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  4    0[COMMON] unsigned long 
  4858 ;; Registers used:
  4859 ;;		wreg, status,2, status,0
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4865 ;;      Params:         6       0       0       0       0
  4866 ;;      Locals:         0       6       0       0       0
  4867 ;;      Temps:          4       0       0       0       0
  4868 ;;      Totals:        10       6       0       0       0
  4869 ;;Total ram usage:       16 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_sprintf
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           
  4879                           ;psect for function __tdiv_to_l_
  4880  14B0                     __tdiv_to_l_:
  4881  14B0                     l2530:	
  4882                           ;incstack = 0
  4883                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4884                           
  4885  14B0  0870               	movf	__tdiv_to_l_@f1,w
  4886  14B1  00F6               	movwf	??__tdiv_to_l_
  4887  14B2  0871               	movf	__tdiv_to_l_@f1+1,w
  4888  14B3  00F7               	movwf	??__tdiv_to_l_+1
  4889  14B4  0872               	movf	__tdiv_to_l_@f1+2,w
  4890  14B5  00F8               	movwf	??__tdiv_to_l_+2
  4891  14B6  1003               	clrc
  4892  14B7  0D77               	rlf	??__tdiv_to_l_+1,w
  4893  14B8  0D78               	rlf	??__tdiv_to_l_+2,w
  4894  14B9  00F9               	movwf	??__tdiv_to_l_+3
  4895  14BA  0879               	movf	??__tdiv_to_l_+3,w
  4896  14BB  1283               	bcf	3,5	;RP0=0, select bank0
  4897  14BC  1303               	bcf	3,6	;RP1=0, select bank0
  4898  14BD  00A5               	movwf	__tdiv_to_l_@exp1
  4899  14BE  0825               	movf	__tdiv_to_l_@exp1,w
  4900  14BF  1D03               	btfss	3,2
  4901  14C0  2CC2               	goto	u3451
  4902  14C1  2CC3               	goto	u3450
  4903  14C2                     u3451:
  4904  14C2  2CCC               	goto	l2536
  4905  14C3                     u3450:
  4906  14C3                     l2532:
  4907  14C3  3000               	movlw	0
  4908  14C4  00F3               	movwf	?__tdiv_to_l_+3
  4909  14C5  3000               	movlw	0
  4910  14C6  00F2               	movwf	?__tdiv_to_l_+2
  4911  14C7  3000               	movlw	0
  4912  14C8  00F1               	movwf	?__tdiv_to_l_+1
  4913  14C9  3000               	movlw	0
  4914  14CA  00F0               	movwf	?__tdiv_to_l_
  4915  14CB  2D6C               	goto	l683
  4916  14CC                     l2536:
  4917  14CC  0873               	movf	__tdiv_to_l_@f2,w
  4918  14CD  00F6               	movwf	??__tdiv_to_l_
  4919  14CE  0874               	movf	__tdiv_to_l_@f2+1,w
  4920  14CF  00F7               	movwf	??__tdiv_to_l_+1
  4921  14D0  0875               	movf	__tdiv_to_l_@f2+2,w
  4922  14D1  00F8               	movwf	??__tdiv_to_l_+2
  4923  14D2  1003               	clrc
  4924  14D3  0D77               	rlf	??__tdiv_to_l_+1,w
  4925  14D4  0D78               	rlf	??__tdiv_to_l_+2,w
  4926  14D5  00F9               	movwf	??__tdiv_to_l_+3
  4927  14D6  0879               	movf	??__tdiv_to_l_+3,w
  4928  14D7  00A4               	movwf	__tdiv_to_l_@cntr
  4929  14D8  0824               	movf	__tdiv_to_l_@cntr,w
  4930  14D9  1D03               	btfss	3,2
  4931  14DA  2CDC               	goto	u3461
  4932  14DB  2CDD               	goto	u3460
  4933  14DC                     u3461:
  4934  14DC  2CDE               	goto	l684
  4935  14DD                     u3460:
  4936  14DD  2CC3               	goto	l2532
  4937  14DE                     l684:
  4938  14DE  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4939  14DF                     l2542:
  4940  14DF  30FF               	movlw	255
  4941  14E0  05F0               	andwf	__tdiv_to_l_@f1,f
  4942  14E1  30FF               	movlw	255
  4943  14E2  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4944  14E3  3000               	movlw	0
  4945  14E4  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4946  14E5                     l2544:
  4947  14E5  17F4               	bsf	__tdiv_to_l_@f2+1,7
  4948  14E6  30FF               	movlw	255
  4949  14E7  05F3               	andwf	__tdiv_to_l_@f2,f
  4950  14E8  30FF               	movlw	255
  4951  14E9  05F4               	andwf	__tdiv_to_l_@f2+1,f
  4952  14EA  3000               	movlw	0
  4953  14EB  05F5               	andwf	__tdiv_to_l_@f2+2,f
  4954  14EC  3000               	movlw	0
  4955  14ED  00A3               	movwf	__tdiv_to_l_@quot+3
  4956  14EE  3000               	movlw	0
  4957  14EF  00A2               	movwf	__tdiv_to_l_@quot+2
  4958  14F0  3000               	movlw	0
  4959  14F1  00A1               	movwf	__tdiv_to_l_@quot+1
  4960  14F2  3000               	movlw	0
  4961  14F3  00A0               	movwf	__tdiv_to_l_@quot
  4962  14F4                     l2546:
  4963  14F4  307F               	movlw	127
  4964  14F5  02A5               	subwf	__tdiv_to_l_@exp1,f
  4965  14F6                     l2548:
  4966  14F6  3098               	movlw	152
  4967  14F7  0724               	addwf	__tdiv_to_l_@cntr,w
  4968  14F8  00F6               	movwf	??__tdiv_to_l_
  4969  14F9  0876               	movf	??__tdiv_to_l_,w
  4970  14FA  02A5               	subwf	__tdiv_to_l_@exp1,f
  4971  14FB  3018               	movlw	24
  4972  14FC  00F6               	movwf	??__tdiv_to_l_
  4973  14FD  0876               	movf	??__tdiv_to_l_,w
  4974  14FE  00A4               	movwf	__tdiv_to_l_@cntr
  4975  14FF                     l2550:
  4976  14FF  3001               	movlw	1
  4977  1500  00F6               	movwf	??__tdiv_to_l_
  4978  1501                     u3475:
  4979  1501  1003               	clrc
  4980  1502  0DA0               	rlf	__tdiv_to_l_@quot,f
  4981  1503  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4982  1504  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4983  1505  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4984  1506  0BF6               	decfsz	??__tdiv_to_l_,f
  4985  1507  2D01               	goto	u3475
  4986  1508                     l2552:
  4987  1508  0875               	movf	__tdiv_to_l_@f2+2,w
  4988  1509  0272               	subwf	__tdiv_to_l_@f1+2,w
  4989  150A  1D03               	skipz
  4990  150B  2D12               	goto	u3485
  4991  150C  0874               	movf	__tdiv_to_l_@f2+1,w
  4992  150D  0271               	subwf	__tdiv_to_l_@f1+1,w
  4993  150E  1D03               	skipz
  4994  150F  2D12               	goto	u3485
  4995  1510  0873               	movf	__tdiv_to_l_@f2,w
  4996  1511  0270               	subwf	__tdiv_to_l_@f1,w
  4997  1512                     u3485:
  4998  1512  1C03               	skipc
  4999  1513  2D15               	goto	u3481
  5000  1514  2D16               	goto	u3480
  5001  1515                     u3481:
  5002  1515  2D21               	goto	l2558
  5003  1516                     u3480:
  5004  1516                     l2554:
  5005  1516  0873               	movf	__tdiv_to_l_@f2,w
  5006  1517  02F0               	subwf	__tdiv_to_l_@f1,f
  5007  1518  0874               	movf	__tdiv_to_l_@f2+1,w
  5008  1519  1C03               	skipc
  5009  151A  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  5010  151B  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5011  151C  0875               	movf	__tdiv_to_l_@f2+2,w
  5012  151D  1C03               	skipc
  5013  151E  0A75               	incf	__tdiv_to_l_@f2+2,w
  5014  151F  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5015  1520                     l2556:
  5016  1520  1420               	bsf	__tdiv_to_l_@quot,0
  5017  1521                     l2558:
  5018  1521  3001               	movlw	1
  5019  1522                     u3495:
  5020  1522  1003               	clrc
  5021  1523  0DF0               	rlf	__tdiv_to_l_@f1,f
  5022  1524  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5023  1525  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5024  1526  3EFF               	addlw	-1
  5025  1527  1D03               	skipz
  5026  1528  2D22               	goto	u3495
  5027  1529                     l2560:
  5028  1529  3001               	movlw	1
  5029  152A  02A4               	subwf	__tdiv_to_l_@cntr,f
  5030  152B  1D03               	btfss	3,2
  5031  152C  2D2E               	goto	u3501
  5032  152D  2D2F               	goto	u3500
  5033  152E                     u3501:
  5034  152E  2CFF               	goto	l2550
  5035  152F                     u3500:
  5036  152F                     l687:
  5037  152F  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5038  1530  2D32               	goto	u3511
  5039  1531  2D33               	goto	u3510
  5040  1532                     u3511:
  5041  1532  2D4D               	goto	l2570
  5042  1533                     u3510:
  5043  1533                     l2562:
  5044  1533  0825               	movf	__tdiv_to_l_@exp1,w
  5045  1534  3A80               	xorlw	128
  5046  1535  3E97               	addlw	151
  5047  1536  1803               	skipnc
  5048  1537  2D39               	goto	u3521
  5049  1538  2D3A               	goto	u3520
  5050  1539                     u3521:
  5051  1539  2D3B               	goto	l2568
  5052  153A                     u3520:
  5053  153A  2CC3               	goto	l2532
  5054  153B                     l2568:
  5055  153B  3001               	movlw	1
  5056  153C                     u3535:
  5057  153C  1003               	clrc
  5058  153D  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5059  153E  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5060  153F  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5061  1540  0CA0               	rrf	__tdiv_to_l_@quot,f
  5062  1541  3EFF               	addlw	-1
  5063  1542  1D03               	skipz
  5064  1543  2D3C               	goto	u3535
  5065  1544  3001               	movlw	1
  5066  1545  00F6               	movwf	??__tdiv_to_l_
  5067  1546  0876               	movf	??__tdiv_to_l_,w
  5068  1547  07A5               	addwf	__tdiv_to_l_@exp1,f
  5069  1548  1D03               	btfss	3,2
  5070  1549  2D4B               	goto	u3541
  5071  154A  2D4C               	goto	u3540
  5072  154B                     u3541:
  5073  154B  2D3B               	goto	l2568
  5074  154C                     u3540:
  5075  154C  2D64               	goto	l2578
  5076  154D                     l2570:
  5077  154D  3018               	movlw	24
  5078  154E  0225               	subwf	__tdiv_to_l_@exp1,w
  5079  154F  1C03               	skipc
  5080  1550  2D52               	goto	u3551
  5081  1551  2D53               	goto	u3550
  5082  1552                     u3551:
  5083  1552  2D5F               	goto	l694
  5084  1553                     u3550:
  5085  1553  2CC3               	goto	l2532
  5086  1554                     l2576:
  5087  1554  3001               	movlw	1
  5088  1555  00F6               	movwf	??__tdiv_to_l_
  5089  1556                     u3565:
  5090  1556  1003               	clrc
  5091  1557  0DA0               	rlf	__tdiv_to_l_@quot,f
  5092  1558  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5093  1559  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5094  155A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5095  155B  0BF6               	decfsz	??__tdiv_to_l_,f
  5096  155C  2D56               	goto	u3565
  5097  155D  3001               	movlw	1
  5098  155E  02A5               	subwf	__tdiv_to_l_@exp1,f
  5099  155F                     l694:
  5100  155F  0825               	movf	__tdiv_to_l_@exp1,w
  5101  1560  1D03               	btfss	3,2
  5102  1561  2D63               	goto	u3571
  5103  1562  2D64               	goto	u3570
  5104  1563                     u3571:
  5105  1563  2D54               	goto	l2576
  5106  1564                     u3570:
  5107  1564                     l2578:
  5108  1564  0823               	movf	__tdiv_to_l_@quot+3,w
  5109  1565  00F3               	movwf	?__tdiv_to_l_+3
  5110  1566  0822               	movf	__tdiv_to_l_@quot+2,w
  5111  1567  00F2               	movwf	?__tdiv_to_l_+2
  5112  1568  0821               	movf	__tdiv_to_l_@quot+1,w
  5113  1569  00F1               	movwf	?__tdiv_to_l_+1
  5114  156A  0820               	movf	__tdiv_to_l_@quot,w
  5115  156B  00F0               	movwf	?__tdiv_to_l_
  5116  156C                     l683:
  5117  156C  0008               	return
  5118  156D                     __end_of__tdiv_to_l_:
  5119                           
  5120                           	psect	text15
  5121  0823                     __ptext15:	
  5122 ;; *************** function __div_to_l_ *****************
  5123 ;; Defined at:
  5124 ;;		line 60 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\fldivl.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  f1              3    0[COMMON] unsigned long 
  5127 ;;  f2              3    3[COMMON] unsigned long 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;  quot            4    0[BANK0 ] unsigned long 
  5130 ;;  exp1            1    5[BANK0 ] unsigned char 
  5131 ;;  cntr            1    4[BANK0 ] unsigned char 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  4    0[COMMON] unsigned long 
  5134 ;; Registers used:
  5135 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5141 ;;      Params:         6       0       0       0       0
  5142 ;;      Locals:         0       6       0       0       0
  5143 ;;      Temps:          8       0       0       0       0
  5144 ;;      Totals:        14       6       0       0       0
  5145 ;;Total ram usage:       20 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_sprintf
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           
  5155                           ;psect for function __div_to_l_
  5156  0823                     __div_to_l_:
  5157  0823                     l2582:	
  5158                           ;incstack = 0
  5159                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5160                           
  5161  0823  3070               	movlw	low (__div_to_l_@f1| 0)
  5162  0824  0084               	movwf	4
  5163  0825  0800               	movf	0,w
  5164  0826  00F6               	movwf	??__div_to_l_
  5165  0827  0A84               	incf	4,f
  5166  0828  0800               	movf	0,w
  5167  0829  00F7               	movwf	??__div_to_l_+1
  5168  082A  0A84               	incf	4,f
  5169  082B  0800               	movf	0,w
  5170  082C  00F8               	movwf	??__div_to_l_+2
  5171  082D  0A84               	incf	4,f
  5172  082E  0800               	movf	0,w
  5173  082F  00F9               	movwf	??__div_to_l_+3
  5174  0830  1003               	clrc
  5175  0831  0D78               	rlf	??__div_to_l_+2,w
  5176  0832  0D79               	rlf	??__div_to_l_+3,w
  5177  0833  00FA               	movwf	??__div_to_l_+4
  5178  0834  087A               	movf	??__div_to_l_+4,w
  5179  0835  1283               	bcf	3,5	;RP0=0, select bank0
  5180  0836  1303               	bcf	3,6	;RP1=0, select bank0
  5181  0837  00A5               	movwf	__div_to_l_@exp1
  5182  0838  0825               	movf	__div_to_l_@exp1,w
  5183  0839  1D03               	btfss	3,2
  5184  083A  283C               	goto	u3581
  5185  083B  283D               	goto	u3580
  5186  083C                     u3581:
  5187  083C  2846               	goto	l2588
  5188  083D                     u3580:
  5189  083D                     l2584:
  5190  083D  3000               	movlw	0
  5191  083E  00F3               	movwf	?__div_to_l_+3
  5192  083F  3000               	movlw	0
  5193  0840  00F2               	movwf	?__div_to_l_+2
  5194  0841  3000               	movlw	0
  5195  0842  00F1               	movwf	?__div_to_l_+1
  5196  0843  3000               	movlw	0
  5197  0844  00F0               	movwf	?__div_to_l_
  5198  0845  294E               	goto	l604
  5199  0846                     l2588:
  5200  0846  3073               	movlw	low (__div_to_l_@f2| 0)
  5201  0847  0084               	movwf	4
  5202  0848  0800               	movf	0,w
  5203  0849  00F6               	movwf	??__div_to_l_
  5204  084A  0A84               	incf	4,f
  5205  084B  0800               	movf	0,w
  5206  084C  00F7               	movwf	??__div_to_l_+1
  5207  084D  0A84               	incf	4,f
  5208  084E  0800               	movf	0,w
  5209  084F  00F8               	movwf	??__div_to_l_+2
  5210  0850  0A84               	incf	4,f
  5211  0851  0800               	movf	0,w
  5212  0852  00F9               	movwf	??__div_to_l_+3
  5213  0853  1003               	clrc
  5214  0854  0D78               	rlf	??__div_to_l_+2,w
  5215  0855  0D79               	rlf	??__div_to_l_+3,w
  5216  0856  00FA               	movwf	??__div_to_l_+4
  5217  0857  087A               	movf	??__div_to_l_+4,w
  5218  0858  00A4               	movwf	__div_to_l_@cntr
  5219  0859  0824               	movf	__div_to_l_@cntr,w
  5220  085A  1D03               	btfss	3,2
  5221  085B  285D               	goto	u3591
  5222  085C  285E               	goto	u3590
  5223  085D                     u3591:
  5224  085D  285F               	goto	l2594
  5225  085E                     u3590:
  5226  085E  283D               	goto	l2584
  5227  085F                     l2594:
  5228  085F  3070               	movlw	low (__div_to_l_@f1| 0)
  5229  0860  0084               	movwf	4
  5230  0861  3000               	movlw	0
  5231  0862  0480               	iorwf	0,f
  5232  0863  0A84               	incf	4,f
  5233  0864  3000               	movlw	0
  5234  0865  0480               	iorwf	0,f
  5235  0866  0A84               	incf	4,f
  5236  0867  3080               	movlw	128
  5237  0868  0480               	iorwf	0,f
  5238  0869  0A84               	incf	4,f
  5239  086A  3000               	movlw	0
  5240  086B  0480               	iorwf	0,f
  5241  086C  3070               	movlw	low (__div_to_l_@f1| 0)
  5242  086D  0084               	movwf	4
  5243  086E  30FF               	movlw	255
  5244  086F  0580               	andwf	0,f
  5245  0870  0A84               	incf	4,f
  5246  0871  30FF               	movlw	255
  5247  0872  0580               	andwf	0,f
  5248  0873  0A84               	incf	4,f
  5249  0874  30FF               	movlw	255
  5250  0875  0580               	andwf	0,f
  5251  0876  0A84               	incf	4,f
  5252  0877  3000               	movlw	0
  5253  0878  0580               	andwf	0,f
  5254  0879  3073               	movlw	low (__div_to_l_@f2| 0)
  5255  087A  0084               	movwf	4
  5256  087B  3000               	movlw	0
  5257  087C  0480               	iorwf	0,f
  5258  087D  0A84               	incf	4,f
  5259  087E  3000               	movlw	0
  5260  087F  0480               	iorwf	0,f
  5261  0880  0A84               	incf	4,f
  5262  0881  3080               	movlw	128
  5263  0882  0480               	iorwf	0,f
  5264  0883  0A84               	incf	4,f
  5265  0884  3000               	movlw	0
  5266  0885  0480               	iorwf	0,f
  5267  0886  3073               	movlw	low (__div_to_l_@f2| 0)
  5268  0887  0084               	movwf	4
  5269  0888  30FF               	movlw	255
  5270  0889  0580               	andwf	0,f
  5271  088A  0A84               	incf	4,f
  5272  088B  30FF               	movlw	255
  5273  088C  0580               	andwf	0,f
  5274  088D  0A84               	incf	4,f
  5275  088E  30FF               	movlw	255
  5276  088F  0580               	andwf	0,f
  5277  0890  0A84               	incf	4,f
  5278  0891  3000               	movlw	0
  5279  0892  0580               	andwf	0,f
  5280  0893                     l2596:
  5281  0893  3000               	movlw	0
  5282  0894  00A3               	movwf	__div_to_l_@quot+3
  5283  0895  3000               	movlw	0
  5284  0896  00A2               	movwf	__div_to_l_@quot+2
  5285  0897  3000               	movlw	0
  5286  0898  00A1               	movwf	__div_to_l_@quot+1
  5287  0899  3000               	movlw	0
  5288  089A  00A0               	movwf	__div_to_l_@quot
  5289  089B                     l2598:
  5290  089B  307F               	movlw	127
  5291  089C  02A5               	subwf	__div_to_l_@exp1,f
  5292  089D                     l2600:
  5293  089D  30A0               	movlw	160
  5294  089E  0724               	addwf	__div_to_l_@cntr,w
  5295  089F  00F6               	movwf	??__div_to_l_
  5296  08A0  0876               	movf	??__div_to_l_,w
  5297  08A1  02A5               	subwf	__div_to_l_@exp1,f
  5298  08A2                     l2602:
  5299  08A2  3020               	movlw	32
  5300  08A3  00F6               	movwf	??__div_to_l_
  5301  08A4  0876               	movf	??__div_to_l_,w
  5302  08A5  00A4               	movwf	__div_to_l_@cntr
  5303  08A6                     l2604:
  5304  08A6  3001               	movlw	1
  5305  08A7  00F6               	movwf	??__div_to_l_
  5306  08A8                     u3605:
  5307  08A8  1003               	clrc
  5308  08A9  0DA0               	rlf	__div_to_l_@quot,f
  5309  08AA  0DA1               	rlf	__div_to_l_@quot+1,f
  5310  08AB  0DA2               	rlf	__div_to_l_@quot+2,f
  5311  08AC  0DA3               	rlf	__div_to_l_@quot+3,f
  5312  08AD  0BF6               	decfsz	??__div_to_l_,f
  5313  08AE  28A8               	goto	u3605
  5314  08AF                     l2606:
  5315  08AF  3073               	movlw	low (__div_to_l_@f2| 0)
  5316  08B0  0084               	movwf	4
  5317  08B1  0800               	movf	0,w
  5318  08B2  00F6               	movwf	??__div_to_l_
  5319  08B3  0A84               	incf	4,f
  5320  08B4  0800               	movf	0,w
  5321  08B5  00F7               	movwf	??__div_to_l_+1
  5322  08B6  0A84               	incf	4,f
  5323  08B7  0800               	movf	0,w
  5324  08B8  00F8               	movwf	??__div_to_l_+2
  5325  08B9  0A84               	incf	4,f
  5326  08BA  0800               	movf	0,w
  5327  08BB  00F9               	movwf	??__div_to_l_+3
  5328  08BC  3070               	movlw	low (__div_to_l_@f1| 0)
  5329  08BD  0084               	movwf	4
  5330  08BE  0800               	movf	0,w
  5331  08BF  00FA               	movwf	??__div_to_l_+4
  5332  08C0  0A84               	incf	4,f
  5333  08C1  0800               	movf	0,w
  5334  08C2  00FB               	movwf	??__div_to_l_+5
  5335  08C3  0A84               	incf	4,f
  5336  08C4  0800               	movf	0,w
  5337  08C5  00FC               	movwf	??__div_to_l_+6
  5338  08C6  0A84               	incf	4,f
  5339  08C7  0800               	movf	0,w
  5340  08C8  00FD               	movwf	??__div_to_l_+7
  5341  08C9  0879               	movf	??__div_to_l_+3,w
  5342  08CA  027D               	subwf	??__div_to_l_+7,w
  5343  08CB  1D03               	skipz
  5344  08CC  28D7               	goto	u3615
  5345  08CD  0878               	movf	??__div_to_l_+2,w
  5346  08CE  027C               	subwf	??__div_to_l_+6,w
  5347  08CF  1D03               	skipz
  5348  08D0  28D7               	goto	u3615
  5349  08D1  0877               	movf	??__div_to_l_+1,w
  5350  08D2  027B               	subwf	??__div_to_l_+5,w
  5351  08D3  1D03               	skipz
  5352  08D4  28D7               	goto	u3615
  5353  08D5  0876               	movf	??__div_to_l_,w
  5354  08D6  027A               	subwf	??__div_to_l_+4,w
  5355  08D7                     u3615:
  5356  08D7  1C03               	skipc
  5357  08D8  28DA               	goto	u3611
  5358  08D9  28DB               	goto	u3610
  5359  08DA                     u3611:
  5360  08DA  28FE               	goto	l607
  5361  08DB                     u3610:
  5362  08DB                     l2608:
  5363  08DB  3073               	movlw	low (__div_to_l_@f2| 0)
  5364  08DC  0084               	movwf	4
  5365  08DD  0800               	movf	0,w
  5366  08DE  00F6               	movwf	??__div_to_l_
  5367  08DF  0A84               	incf	4,f
  5368  08E0  0800               	movf	0,w
  5369  08E1  00F7               	movwf	??__div_to_l_+1
  5370  08E2  0A84               	incf	4,f
  5371  08E3  0800               	movf	0,w
  5372  08E4  00F8               	movwf	??__div_to_l_+2
  5373  08E5  0A84               	incf	4,f
  5374  08E6  0800               	movf	0,w
  5375  08E7  00F9               	movwf	??__div_to_l_+3
  5376  08E8  3070               	movlw	low (__div_to_l_@f1| 0)
  5377  08E9  0084               	movwf	4
  5378  08EA  0876               	movf	??__div_to_l_,w
  5379  08EB  0280               	subwf	0,f
  5380  08EC  0A84               	incf	4,f
  5381  08ED  0877               	movf	??__div_to_l_+1,w
  5382  08EE  1C03               	skipc
  5383  08EF  0F77               	incfsz	??__div_to_l_+1,w
  5384  08F0  0280               	subwf	0,f
  5385  08F1  0A84               	incf	4,f
  5386  08F2  0878               	movf	??__div_to_l_+2,w
  5387  08F3  1C03               	skipc
  5388  08F4  0F78               	incfsz	??__div_to_l_+2,w
  5389  08F5  0280               	subwf	0,f
  5390  08F6  0A84               	incf	4,f
  5391  08F7  0879               	movf	??__div_to_l_+3,w
  5392  08F8  1C03               	skipc
  5393  08F9  0A79               	incf	??__div_to_l_+3,w
  5394  08FA  0280               	subwf	0,f
  5395  08FB  3003               	movlw	3
  5396  08FC  0284               	subwf	4,f
  5397  08FD                     l2610:
  5398  08FD  1420               	bsf	__div_to_l_@quot,0
  5399  08FE                     l607:
  5400  08FE  3070               	movlw	low (__div_to_l_@f1| 0)
  5401  08FF  0084               	movwf	4
  5402  0900  1003               	clrc
  5403  0901  0D80               	rlf	0,f
  5404  0902  0A84               	incf	4,f
  5405  0903  0D80               	rlf	0,f
  5406  0904  0A84               	incf	4,f
  5407  0905  0D80               	rlf	0,f
  5408  0906  0A84               	incf	4,f
  5409  0907  0D80               	rlf	0,f
  5410  0908  0384               	decf	4,f
  5411  0909  0384               	decf	4,f
  5412  090A  0384               	decf	4,f
  5413  090B                     l2612:
  5414  090B  3001               	movlw	1
  5415  090C  02A4               	subwf	__div_to_l_@cntr,f
  5416  090D  1D03               	btfss	3,2
  5417  090E  2910               	goto	u3621
  5418  090F  2911               	goto	u3620
  5419  0910                     u3621:
  5420  0910  28A6               	goto	l2604
  5421  0911                     u3620:
  5422  0911                     l608:
  5423  0911  1FA5               	btfss	__div_to_l_@exp1,7
  5424  0912  2914               	goto	u3631
  5425  0913  2915               	goto	u3630
  5426  0914                     u3631:
  5427  0914  292F               	goto	l2622
  5428  0915                     u3630:
  5429  0915                     l2614:
  5430  0915  0825               	movf	__div_to_l_@exp1,w
  5431  0916  3A80               	xorlw	128
  5432  0917  3E9F               	addlw	159
  5433  0918  1803               	skipnc
  5434  0919  291B               	goto	u3641
  5435  091A  291C               	goto	u3640
  5436  091B                     u3641:
  5437  091B  291D               	goto	l2620
  5438  091C                     u3640:
  5439  091C  283D               	goto	l2584
  5440  091D                     l2620:
  5441  091D  3001               	movlw	1
  5442  091E                     u3655:
  5443  091E  1003               	clrc
  5444  091F  0CA3               	rrf	__div_to_l_@quot+3,f
  5445  0920  0CA2               	rrf	__div_to_l_@quot+2,f
  5446  0921  0CA1               	rrf	__div_to_l_@quot+1,f
  5447  0922  0CA0               	rrf	__div_to_l_@quot,f
  5448  0923  3EFF               	addlw	-1
  5449  0924  1D03               	skipz
  5450  0925  291E               	goto	u3655
  5451  0926  3001               	movlw	1
  5452  0927  00F6               	movwf	??__div_to_l_
  5453  0928  0876               	movf	??__div_to_l_,w
  5454  0929  07A5               	addwf	__div_to_l_@exp1,f
  5455  092A  1D03               	btfss	3,2
  5456  092B  292D               	goto	u3661
  5457  092C  292E               	goto	u3660
  5458  092D                     u3661:
  5459  092D  291D               	goto	l2620
  5460  092E                     u3660:
  5461  092E  2946               	goto	l2630
  5462  092F                     l2622:
  5463  092F  3020               	movlw	32
  5464  0930  0225               	subwf	__div_to_l_@exp1,w
  5465  0931  1C03               	skipc
  5466  0932  2934               	goto	u3671
  5467  0933  2935               	goto	u3670
  5468  0934                     u3671:
  5469  0934  2941               	goto	l615
  5470  0935                     u3670:
  5471  0935  283D               	goto	l2584
  5472  0936                     l2628:
  5473  0936  3001               	movlw	1
  5474  0937  00F6               	movwf	??__div_to_l_
  5475  0938                     u3685:
  5476  0938  1003               	clrc
  5477  0939  0DA0               	rlf	__div_to_l_@quot,f
  5478  093A  0DA1               	rlf	__div_to_l_@quot+1,f
  5479  093B  0DA2               	rlf	__div_to_l_@quot+2,f
  5480  093C  0DA3               	rlf	__div_to_l_@quot+3,f
  5481  093D  0BF6               	decfsz	??__div_to_l_,f
  5482  093E  2938               	goto	u3685
  5483  093F  3001               	movlw	1
  5484  0940  02A5               	subwf	__div_to_l_@exp1,f
  5485  0941                     l615:
  5486  0941  0825               	movf	__div_to_l_@exp1,w
  5487  0942  1D03               	btfss	3,2
  5488  0943  2945               	goto	u3691
  5489  0944  2946               	goto	u3690
  5490  0945                     u3691:
  5491  0945  2936               	goto	l2628
  5492  0946                     u3690:
  5493  0946                     l2630:
  5494  0946  0823               	movf	__div_to_l_@quot+3,w
  5495  0947  00F3               	movwf	?__div_to_l_+3
  5496  0948  0822               	movf	__div_to_l_@quot+2,w
  5497  0949  00F2               	movwf	?__div_to_l_+2
  5498  094A  0821               	movf	__div_to_l_@quot+1,w
  5499  094B  00F1               	movwf	?__div_to_l_+1
  5500  094C  0820               	movf	__div_to_l_@quot,w
  5501  094D  00F0               	movwf	?__div_to_l_
  5502  094E                     l604:
  5503  094E  0008               	return
  5504  094F                     __end_of__div_to_l_:
  5505                           
  5506                           	psect	text16
  5507  1E00                     __ptext16:	
  5508 ;; *************** function ___wmul *****************
  5509 ;; Defined at:
  5510 ;;		line 15 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\Umul16.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  multiplier      2    0[COMMON] unsigned int 
  5513 ;;  multiplicand    2    2[COMMON] unsigned int 
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;  product         2    4[COMMON] unsigned int 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  2    0[COMMON] unsigned int 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5525 ;;      Params:         4       0       0       0       0
  5526 ;;      Locals:         2       0       0       0       0
  5527 ;;      Temps:          0       0       0       0       0
  5528 ;;      Totals:         6       0       0       0       0
  5529 ;;Total ram usage:        6 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; This function calls:
  5532 ;;		Nothing
  5533 ;; This function is called by:
  5534 ;;		_sprintf
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           
  5539                           ;psect for function ___wmul
  5540  1E00                     ___wmul:
  5541  1E00                     l2634:	
  5542                           ;incstack = 0
  5543                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5544                           
  5545  1E00  01F4               	clrf	___wmul@product
  5546  1E01  01F5               	clrf	___wmul@product+1
  5547  1E02                     l2636:
  5548  1E02  1C70               	btfss	___wmul@multiplier,0
  5549  1E03  2E05               	goto	u3701
  5550  1E04  2E06               	goto	u3700
  5551  1E05                     u3701:
  5552  1E05  2E0C               	goto	l398
  5553  1E06                     u3700:
  5554  1E06                     l2638:
  5555  1E06  0872               	movf	___wmul@multiplicand,w
  5556  1E07  07F4               	addwf	___wmul@product,f
  5557  1E08  1803               	skipnc
  5558  1E09  0AF5               	incf	___wmul@product+1,f
  5559  1E0A  0873               	movf	___wmul@multiplicand+1,w
  5560  1E0B  07F5               	addwf	___wmul@product+1,f
  5561  1E0C                     l398:
  5562  1E0C  3001               	movlw	1
  5563  1E0D                     u3715:
  5564  1E0D  1003               	clrc
  5565  1E0E  0DF2               	rlf	___wmul@multiplicand,f
  5566  1E0F  0DF3               	rlf	___wmul@multiplicand+1,f
  5567  1E10  3EFF               	addlw	-1
  5568  1E11  1D03               	skipz
  5569  1E12  2E0D               	goto	u3715
  5570  1E13                     l2640:
  5571  1E13  3001               	movlw	1
  5572  1E14                     u3725:
  5573  1E14  1003               	clrc
  5574  1E15  0CF1               	rrf	___wmul@multiplier+1,f
  5575  1E16  0CF0               	rrf	___wmul@multiplier,f
  5576  1E17  3EFF               	addlw	-1
  5577  1E18  1D03               	skipz
  5578  1E19  2E14               	goto	u3725
  5579  1E1A                     l2642:
  5580  1E1A  0870               	movf	___wmul@multiplier,w
  5581  1E1B  0471               	iorwf	___wmul@multiplier+1,w
  5582  1E1C  1D03               	btfss	3,2
  5583  1E1D  2E1F               	goto	u3731
  5584  1E1E  2E20               	goto	u3730
  5585  1E1F                     u3731:
  5586  1E1F  2E02               	goto	l2636
  5587  1E20                     u3730:
  5588  1E20                     l2644:
  5589  1E20  0875               	movf	___wmul@product+1,w
  5590  1E21  00F1               	movwf	?___wmul+1
  5591  1E22  0874               	movf	___wmul@product,w
  5592  1E23  00F0               	movwf	?___wmul
  5593  1E24                     l400:
  5594  1E24  0008               	return
  5595  1E25                     __end_of___wmul:
  5596                           
  5597                           	psect	text17
  5598  1F53                     __ptext17:	
  5599 ;; *************** function ___llmod *****************
  5600 ;; Defined at:
  5601 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\llmod.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  divisor         4    0[COMMON] unsigned long 
  5604 ;;  dividend        4    4[COMMON] unsigned long 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  counter         1    9[COMMON] unsigned char 
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  4    0[COMMON] unsigned long 
  5609 ;; Registers used:
  5610 ;;		wreg, status,2, status,0
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5616 ;;      Params:         8       0       0       0       0
  5617 ;;      Locals:         1       0       0       0       0
  5618 ;;      Temps:          1       0       0       0       0
  5619 ;;      Totals:        10       0       0       0       0
  5620 ;;Total ram usage:       10 bytes
  5621 ;; Hardware stack levels used:    1
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_sprintf
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           
  5630                           ;psect for function ___llmod
  5631  1F53                     ___llmod:
  5632  1F53                     l2832:	
  5633                           ;incstack = 0
  5634                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5635                           
  5636  1F53  0873               	movf	___llmod@divisor+3,w
  5637  1F54  0472               	iorwf	___llmod@divisor+2,w
  5638  1F55  0471               	iorwf	___llmod@divisor+1,w
  5639  1F56  0470               	iorwf	___llmod@divisor,w
  5640  1F57  1903               	skipnz
  5641  1F58  2F5A               	goto	u4141
  5642  1F59  2F5B               	goto	u4140
  5643  1F5A                     u4141:
  5644  1F5A  2F9E               	goto	l2848
  5645  1F5B                     u4140:
  5646  1F5B                     l2834:
  5647  1F5B  01F9               	clrf	___llmod@counter
  5648  1F5C  0AF9               	incf	___llmod@counter,f
  5649  1F5D  2F6B               	goto	l2838
  5650  1F5E                     l2836:
  5651  1F5E  3001               	movlw	1
  5652  1F5F  00F8               	movwf	??___llmod
  5653  1F60                     u4155:
  5654  1F60  1003               	clrc
  5655  1F61  0DF0               	rlf	___llmod@divisor,f
  5656  1F62  0DF1               	rlf	___llmod@divisor+1,f
  5657  1F63  0DF2               	rlf	___llmod@divisor+2,f
  5658  1F64  0DF3               	rlf	___llmod@divisor+3,f
  5659  1F65  0BF8               	decfsz	??___llmod,f
  5660  1F66  2F60               	goto	u4155
  5661  1F67  3001               	movlw	1
  5662  1F68  00F8               	movwf	??___llmod
  5663  1F69  0878               	movf	??___llmod,w
  5664  1F6A  07F9               	addwf	___llmod@counter,f
  5665  1F6B                     l2838:
  5666  1F6B  1FF3               	btfss	___llmod@divisor+3,7
  5667  1F6C  2F6E               	goto	u4161
  5668  1F6D  2F6F               	goto	u4160
  5669  1F6E                     u4161:
  5670  1F6E  2F5E               	goto	l2836
  5671  1F6F                     u4160:
  5672  1F6F                     l2840:
  5673  1F6F  0873               	movf	___llmod@divisor+3,w
  5674  1F70  0277               	subwf	___llmod@dividend+3,w
  5675  1F71  1D03               	skipz
  5676  1F72  2F7D               	goto	u4175
  5677  1F73  0872               	movf	___llmod@divisor+2,w
  5678  1F74  0276               	subwf	___llmod@dividend+2,w
  5679  1F75  1D03               	skipz
  5680  1F76  2F7D               	goto	u4175
  5681  1F77  0871               	movf	___llmod@divisor+1,w
  5682  1F78  0275               	subwf	___llmod@dividend+1,w
  5683  1F79  1D03               	skipz
  5684  1F7A  2F7D               	goto	u4175
  5685  1F7B  0870               	movf	___llmod@divisor,w
  5686  1F7C  0274               	subwf	___llmod@dividend,w
  5687  1F7D                     u4175:
  5688  1F7D  1C03               	skipc
  5689  1F7E  2F80               	goto	u4171
  5690  1F7F  2F81               	goto	u4170
  5691  1F80                     u4171:
  5692  1F80  2F8F               	goto	l2844
  5693  1F81                     u4170:
  5694  1F81                     l2842:
  5695  1F81  0870               	movf	___llmod@divisor,w
  5696  1F82  02F4               	subwf	___llmod@dividend,f
  5697  1F83  0871               	movf	___llmod@divisor+1,w
  5698  1F84  1C03               	skipc
  5699  1F85  0F71               	incfsz	___llmod@divisor+1,w
  5700  1F86  02F5               	subwf	___llmod@dividend+1,f
  5701  1F87  0872               	movf	___llmod@divisor+2,w
  5702  1F88  1C03               	skipc
  5703  1F89  0F72               	incfsz	___llmod@divisor+2,w
  5704  1F8A  02F6               	subwf	___llmod@dividend+2,f
  5705  1F8B  0873               	movf	___llmod@divisor+3,w
  5706  1F8C  1C03               	skipc
  5707  1F8D  0F73               	incfsz	___llmod@divisor+3,w
  5708  1F8E  02F7               	subwf	___llmod@dividend+3,f
  5709  1F8F                     l2844:
  5710  1F8F  3001               	movlw	1
  5711  1F90                     u4185:
  5712  1F90  1003               	clrc
  5713  1F91  0CF3               	rrf	___llmod@divisor+3,f
  5714  1F92  0CF2               	rrf	___llmod@divisor+2,f
  5715  1F93  0CF1               	rrf	___llmod@divisor+1,f
  5716  1F94  0CF0               	rrf	___llmod@divisor,f
  5717  1F95  3EFF               	addlw	-1
  5718  1F96  1D03               	skipz
  5719  1F97  2F90               	goto	u4185
  5720  1F98                     l2846:
  5721  1F98  3001               	movlw	1
  5722  1F99  02F9               	subwf	___llmod@counter,f
  5723  1F9A  1D03               	btfss	3,2
  5724  1F9B  2F9D               	goto	u4191
  5725  1F9C  2F9E               	goto	u4190
  5726  1F9D                     u4191:
  5727  1F9D  2F6F               	goto	l2840
  5728  1F9E                     u4190:
  5729  1F9E                     l2848:
  5730  1F9E  0877               	movf	___llmod@dividend+3,w
  5731  1F9F  00F3               	movwf	?___llmod+3
  5732  1FA0  0876               	movf	___llmod@dividend+2,w
  5733  1FA1  00F2               	movwf	?___llmod+2
  5734  1FA2  0875               	movf	___llmod@dividend+1,w
  5735  1FA3  00F1               	movwf	?___llmod+1
  5736  1FA4  0874               	movf	___llmod@dividend,w
  5737  1FA5  00F0               	movwf	?___llmod
  5738  1FA6                     l769:
  5739  1FA6  0008               	return
  5740  1FA7                     __end_of___llmod:
  5741                           
  5742                           	psect	text18
  5743  12E2                     __ptext18:	
  5744 ;; *************** function ___fttol *****************
  5745 ;; Defined at:
  5746 ;;		line 44 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\fttol.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  f1              3   33[BANK0 ] float 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;  lval            4   42[BANK0 ] unsigned long 
  5751 ;;  exp1            1   46[BANK0 ] unsigned char 
  5752 ;;  sign1           1   41[BANK0 ] unsigned char 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  4   33[BANK0 ] long 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2, status,0
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5762 ;;      Params:         0       4       0       0       0
  5763 ;;      Locals:         0       6       0       0       0
  5764 ;;      Temps:          0       4       0       0       0
  5765 ;;      Totals:         0      14       0       0       0
  5766 ;;Total ram usage:       14 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_sprintf
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           
  5776                           ;psect for function ___fttol
  5777  12E2                     ___fttol:
  5778  12E2                     l2790:	
  5779                           ;incstack = 0
  5780                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5781                           
  5782  12E2  1283               	bcf	3,5	;RP0=0, select bank0
  5783  12E3  1303               	bcf	3,6	;RP1=0, select bank0
  5784  12E4  0841               	movf	___fttol@f1,w
  5785  12E5  00C5               	movwf	??___fttol
  5786  12E6  0842               	movf	___fttol@f1+1,w
  5787  12E7  00C6               	movwf	??___fttol+1
  5788  12E8  0843               	movf	___fttol@f1+2,w
  5789  12E9  00C7               	movwf	??___fttol+2
  5790  12EA  1003               	clrc
  5791  12EB  0D46               	rlf	??___fttol+1,w
  5792  12EC  0D47               	rlf	??___fttol+2,w
  5793  12ED  00C8               	movwf	??___fttol+3
  5794  12EE  0848               	movf	??___fttol+3,w
  5795  12EF  00CE               	movwf	___fttol@exp1
  5796  12F0  084E               	movf	___fttol@exp1,w
  5797  12F1  1D03               	btfss	3,2
  5798  12F2  2AF4               	goto	u4041
  5799  12F3  2AF5               	goto	u4040
  5800  12F4                     u4041:
  5801  12F4  2AFE               	goto	l2796
  5802  12F5                     u4040:
  5803  12F5                     l2792:
  5804  12F5  3000               	movlw	0
  5805  12F6  00C4               	movwf	?___fttol+3
  5806  12F7  3000               	movlw	0
  5807  12F8  00C3               	movwf	?___fttol+2
  5808  12F9  3000               	movlw	0
  5809  12FA  00C2               	movwf	?___fttol+1
  5810  12FB  3000               	movlw	0
  5811  12FC  00C1               	movwf	?___fttol
  5812  12FD  2B6D               	goto	l728
  5813  12FE                     l2796:
  5814  12FE  0841               	movf	___fttol@f1,w
  5815  12FF  00C5               	movwf	??___fttol
  5816  1300  0842               	movf	___fttol@f1+1,w
  5817  1301  00C6               	movwf	??___fttol+1
  5818  1302  0843               	movf	___fttol@f1+2,w
  5819  1303  00C7               	movwf	??___fttol+2
  5820  1304  3017               	movlw	23
  5821  1305                     u4055:
  5822  1305  1003               	clrc
  5823  1306  0CC7               	rrf	??___fttol+2,f
  5824  1307  0CC6               	rrf	??___fttol+1,f
  5825  1308  0CC5               	rrf	??___fttol,f
  5826  1309                     u4050:
  5827  1309  3EFF               	addlw	-1
  5828  130A  1D03               	skipz
  5829  130B  2B05               	goto	u4055
  5830  130C  0845               	movf	??___fttol,w
  5831  130D  00C8               	movwf	??___fttol+3
  5832  130E  0848               	movf	??___fttol+3,w
  5833  130F  00C9               	movwf	___fttol@sign1
  5834  1310                     l2798:
  5835  1310  17C2               	bsf	___fttol@f1+1,7
  5836  1311                     l2800:
  5837  1311  30FF               	movlw	255
  5838  1312  05C1               	andwf	___fttol@f1,f
  5839  1313  30FF               	movlw	255
  5840  1314  05C2               	andwf	___fttol@f1+1,f
  5841  1315  3000               	movlw	0
  5842  1316  05C3               	andwf	___fttol@f1+2,f
  5843  1317                     l2802:
  5844  1317  0841               	movf	___fttol@f1,w
  5845  1318  00CA               	movwf	___fttol@lval
  5846  1319  0842               	movf	___fttol@f1+1,w
  5847  131A  00CB               	movwf	___fttol@lval+1
  5848  131B  0843               	movf	___fttol@f1+2,w
  5849  131C  00CC               	movwf	___fttol@lval+2
  5850  131D  01CD               	clrf	___fttol@lval+3
  5851  131E                     l2804:
  5852  131E  308E               	movlw	142
  5853  131F  02CE               	subwf	___fttol@exp1,f
  5854  1320                     l2806:
  5855  1320  1FCE               	btfss	___fttol@exp1,7
  5856  1321  2B23               	goto	u4061
  5857  1322  2B24               	goto	u4060
  5858  1323                     u4061:
  5859  1323  2B3E               	goto	l2816
  5860  1324                     u4060:
  5861  1324                     l2808:
  5862  1324  084E               	movf	___fttol@exp1,w
  5863  1325  3A80               	xorlw	128
  5864  1326  3E8F               	addlw	143
  5865  1327  1803               	skipnc
  5866  1328  2B2A               	goto	u4071
  5867  1329  2B2B               	goto	u4070
  5868  132A                     u4071:
  5869  132A  2B2C               	goto	l2814
  5870  132B                     u4070:
  5871  132B  2AF5               	goto	l2792
  5872  132C                     l2814:
  5873  132C  3001               	movlw	1
  5874  132D                     u4085:
  5875  132D  1003               	clrc
  5876  132E  0CCD               	rrf	___fttol@lval+3,f
  5877  132F  0CCC               	rrf	___fttol@lval+2,f
  5878  1330  0CCB               	rrf	___fttol@lval+1,f
  5879  1331  0CCA               	rrf	___fttol@lval,f
  5880  1332  3EFF               	addlw	-1
  5881  1333  1D03               	skipz
  5882  1334  2B2D               	goto	u4085
  5883  1335  3001               	movlw	1
  5884  1336  00C5               	movwf	??___fttol
  5885  1337  0845               	movf	??___fttol,w
  5886  1338  07CE               	addwf	___fttol@exp1,f
  5887  1339  1D03               	btfss	3,2
  5888  133A  2B3C               	goto	u4091
  5889  133B  2B3D               	goto	u4090
  5890  133C                     u4091:
  5891  133C  2B2C               	goto	l2814
  5892  133D                     u4090:
  5893  133D  2B55               	goto	l2824
  5894  133E                     l2816:
  5895  133E  3018               	movlw	24
  5896  133F  024E               	subwf	___fttol@exp1,w
  5897  1340  1C03               	skipc
  5898  1341  2B43               	goto	u4101
  5899  1342  2B44               	goto	u4100
  5900  1343                     u4101:
  5901  1343  2B50               	goto	l735
  5902  1344                     u4100:
  5903  1344  2AF5               	goto	l2792
  5904  1345                     l2822:
  5905  1345  3001               	movlw	1
  5906  1346  00C5               	movwf	??___fttol
  5907  1347                     u4115:
  5908  1347  1003               	clrc
  5909  1348  0DCA               	rlf	___fttol@lval,f
  5910  1349  0DCB               	rlf	___fttol@lval+1,f
  5911  134A  0DCC               	rlf	___fttol@lval+2,f
  5912  134B  0DCD               	rlf	___fttol@lval+3,f
  5913  134C  0BC5               	decfsz	??___fttol,f
  5914  134D  2B47               	goto	u4115
  5915  134E  3001               	movlw	1
  5916  134F  02CE               	subwf	___fttol@exp1,f
  5917  1350                     l735:
  5918  1350  084E               	movf	___fttol@exp1,w
  5919  1351  1D03               	btfss	3,2
  5920  1352  2B54               	goto	u4121
  5921  1353  2B55               	goto	u4120
  5922  1354                     u4121:
  5923  1354  2B45               	goto	l2822
  5924  1355                     u4120:
  5925  1355                     l2824:
  5926  1355  0849               	movf	___fttol@sign1,w
  5927  1356  1903               	btfsc	3,2
  5928  1357  2B59               	goto	u4131
  5929  1358  2B5A               	goto	u4130
  5930  1359                     u4131:
  5931  1359  2B65               	goto	l2828
  5932  135A                     u4130:
  5933  135A                     l2826:
  5934  135A  09CA               	comf	___fttol@lval,f
  5935  135B  09CB               	comf	___fttol@lval+1,f
  5936  135C  09CC               	comf	___fttol@lval+2,f
  5937  135D  09CD               	comf	___fttol@lval+3,f
  5938  135E  0ACA               	incf	___fttol@lval,f
  5939  135F  1903               	skipnz
  5940  1360  0ACB               	incf	___fttol@lval+1,f
  5941  1361  1903               	skipnz
  5942  1362  0ACC               	incf	___fttol@lval+2,f
  5943  1363  1903               	skipnz
  5944  1364  0ACD               	incf	___fttol@lval+3,f
  5945  1365                     l2828:
  5946  1365  084D               	movf	___fttol@lval+3,w
  5947  1366  00C4               	movwf	?___fttol+3
  5948  1367  084C               	movf	___fttol@lval+2,w
  5949  1368  00C3               	movwf	?___fttol+2
  5950  1369  084B               	movf	___fttol@lval+1,w
  5951  136A  00C2               	movwf	?___fttol+1
  5952  136B  084A               	movf	___fttol@lval,w
  5953  136C  00C1               	movwf	?___fttol
  5954  136D                     l728:
  5955  136D  0008               	return
  5956  136E                     __end_of___fttol:
  5957                           
  5958                           	psect	text19
  5959  1DDB                     __ptext19:	
  5960 ;; *************** function ___ftsub *****************
  5961 ;; Defined at:
  5962 ;;		line 17 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftsub.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;  f2              3   53[BANK0 ] float 
  5965 ;;  f1              3   56[BANK0 ] float 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;		None
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  3   53[BANK0 ] float 
  5970 ;; Registers used:
  5971 ;;		wreg, status,2, status,0, pclath, cstack
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5977 ;;      Params:         0       6       0       0       0
  5978 ;;      Locals:         0       0       0       0       0
  5979 ;;      Temps:          0       0       0       0       0
  5980 ;;      Totals:         0       6       0       0       0
  5981 ;;Total ram usage:        6 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:    2
  5984 ;; This function calls:
  5985 ;;		___ftadd
  5986 ;; This function is called by:
  5987 ;;		_sprintf
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           
  5992                           ;psect for function ___ftsub
  5993  1DDB                     ___ftsub:
  5994  1DDB                     l2782:	
  5995                           ;incstack = 0
  5996                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5997                           
  5998  1DDB  1283               	bcf	3,5	;RP0=0, select bank0
  5999  1DDC  1303               	bcf	3,6	;RP1=0, select bank0
  6000  1DDD  0857               	movf	___ftsub@f2+2,w
  6001  1DDE  0456               	iorwf	___ftsub@f2+1,w
  6002  1DDF  0455               	iorwf	___ftsub@f2,w
  6003  1DE0  1903               	skipnz
  6004  1DE1  2DE3               	goto	u4031
  6005  1DE2  2DE4               	goto	u4030
  6006  1DE3                     u4031:
  6007  1DE3  2DE6               	goto	l2786
  6008  1DE4                     u4030:
  6009  1DE4                     l2784:
  6010  1DE4  3080               	movlw	128
  6011  1DE5  06D7               	xorwf	___ftsub@f2+2,f
  6012  1DE6                     l2786:
  6013  1DE6  0858               	movf	___ftsub@f1,w
  6014  1DE7  00C8               	movwf	___ftadd@f1
  6015  1DE8  0859               	movf	___ftsub@f1+1,w
  6016  1DE9  00C9               	movwf	___ftadd@f1+1
  6017  1DEA  085A               	movf	___ftsub@f1+2,w
  6018  1DEB  00CA               	movwf	___ftadd@f1+2
  6019  1DEC  0855               	movf	___ftsub@f2,w
  6020  1DED  00CB               	movwf	___ftadd@f2
  6021  1DEE  0856               	movf	___ftsub@f2+1,w
  6022  1DEF  00CC               	movwf	___ftadd@f2+1
  6023  1DF0  0857               	movf	___ftsub@f2+2,w
  6024  1DF1  00CD               	movwf	___ftadd@f2+2
  6025  1DF2  120A  158A  214F  160A  158A  	fcall	___ftadd
  6026  1DF7  1283               	bcf	3,5	;RP0=0, select bank0
  6027  1DF8  1303               	bcf	3,6	;RP1=0, select bank0
  6028  1DF9  0848               	movf	?___ftadd,w
  6029  1DFA  00D5               	movwf	?___ftsub
  6030  1DFB  0849               	movf	?___ftadd+1,w
  6031  1DFC  00D6               	movwf	?___ftsub+1
  6032  1DFD  084A               	movf	?___ftadd+2,w
  6033  1DFE  00D7               	movwf	?___ftsub+2
  6034  1DFF                     l724:
  6035  1DFF  0008               	return
  6036  1E00                     __end_of___ftsub:
  6037                           
  6038                           	psect	text20
  6039  0003                     __ptext20:	
  6040 ;; *************** function ___ftneg *****************
  6041 ;; Defined at:
  6042 ;;		line 15 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftneg.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  f1              3    0[COMMON] float 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  3    0[COMMON] float 
  6049 ;; Registers used:
  6050 ;;		wreg
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6056 ;;      Params:         3       0       0       0       0
  6057 ;;      Locals:         0       0       0       0       0
  6058 ;;      Temps:          0       0       0       0       0
  6059 ;;      Totals:         3       0       0       0       0
  6060 ;;Total ram usage:        3 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; This function calls:
  6063 ;;		Nothing
  6064 ;; This function is called by:
  6065 ;;		_sprintf
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           
  6070                           ;psect for function ___ftneg
  6071  0003                     ___ftneg:
  6072  0003                     l2774:	
  6073                           ;incstack = 0
  6074                           ; Regs used in ___ftneg: [wreg]
  6075                           
  6076  0003  0872               	movf	___ftneg@f1+2,w
  6077  0004  0471               	iorwf	___ftneg@f1+1,w
  6078  0005  0470               	iorwf	___ftneg@f1,w
  6079  0006  1903               	skipnz
  6080  0007  2809               	goto	u4021
  6081  0008  280A               	goto	u4020
  6082  0009                     u4021:
  6083  0009  280C               	goto	l2778
  6084  000A                     u4020:
  6085  000A                     l2776:
  6086  000A  3080               	movlw	128
  6087  000B  06F2               	xorwf	___ftneg@f1+2,f
  6088  000C                     l2778:
  6089  000C                     l718:
  6090  000C  0008               	return
  6091  000D                     __end_of___ftneg:
  6092                           
  6093                           	psect	text21
  6094  1EE1                     __ptext21:	
  6095 ;; *************** function ___ftge *****************
  6096 ;; Defined at:
  6097 ;;		line 4 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftge.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  ff1             3    0[COMMON] float 
  6100 ;;  ff2             3    3[COMMON] float 
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;		None
  6103 ;; Return value:  Size  Location     Type
  6104 ;;		None               void
  6105 ;; Registers used:
  6106 ;;		wreg, status,2, status,0
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6112 ;;      Params:         6       0       0       0       0
  6113 ;;      Locals:         0       0       0       0       0
  6114 ;;      Temps:          0       0       0       0       0
  6115 ;;      Totals:         6       0       0       0       0
  6116 ;;Total ram usage:        6 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_sprintf
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           
  6126                           ;psect for function ___ftge
  6127  1EE1                     ___ftge:
  6128  1EE1                     l2754:	
  6129                           ;incstack = 0
  6130                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6131                           
  6132  1EE1  1FF2               	btfss	___ftge@ff1+2,7
  6133  1EE2  2EE4               	goto	u3991
  6134  1EE3  2EE5               	goto	u3990
  6135  1EE4                     u3991:
  6136  1EE4  2EF2               	goto	l2758
  6137  1EE5                     u3990:
  6138  1EE5                     l2756:
  6139  1EE5  0870               	movf	___ftge@ff1,w
  6140  1EE6  3C00               	sublw	0
  6141  1EE7  00F0               	movwf	___ftge@ff1
  6142  1EE8  0871               	movf	___ftge@ff1+1,w
  6143  1EE9  1C03               	skipc
  6144  1EEA  0F71               	incfsz	___ftge@ff1+1,w
  6145  1EEB  3C00               	sublw	0
  6146  1EEC  00F1               	movwf	___ftge@ff1+1
  6147  1EED  0872               	movf	___ftge@ff1+2,w
  6148  1EEE  1C03               	skipc
  6149  1EEF  0F72               	incfsz	___ftge@ff1+2,w
  6150  1EF0  3C80               	sublw	128
  6151  1EF1  00F2               	movwf	___ftge@ff1+2
  6152  1EF2                     l2758:
  6153  1EF2  1FF5               	btfss	___ftge@ff2+2,7
  6154  1EF3  2EF5               	goto	u4001
  6155  1EF4  2EF6               	goto	u4000
  6156  1EF5                     u4001:
  6157  1EF5  2F03               	goto	l2762
  6158  1EF6                     u4000:
  6159  1EF6                     l2760:
  6160  1EF6  0873               	movf	___ftge@ff2,w
  6161  1EF7  3C00               	sublw	0
  6162  1EF8  00F3               	movwf	___ftge@ff2
  6163  1EF9  0874               	movf	___ftge@ff2+1,w
  6164  1EFA  1C03               	skipc
  6165  1EFB  0F74               	incfsz	___ftge@ff2+1,w
  6166  1EFC  3C00               	sublw	0
  6167  1EFD  00F4               	movwf	___ftge@ff2+1
  6168  1EFE  0875               	movf	___ftge@ff2+2,w
  6169  1EFF  1C03               	skipc
  6170  1F00  0F75               	incfsz	___ftge@ff2+2,w
  6171  1F01  3C80               	sublw	128
  6172  1F02  00F5               	movwf	___ftge@ff2+2
  6173  1F03                     l2762:
  6174  1F03  3080               	movlw	128
  6175  1F04  06F2               	xorwf	___ftge@ff1+2,f
  6176  1F05                     l2764:
  6177  1F05  3080               	movlw	128
  6178  1F06  06F5               	xorwf	___ftge@ff2+2,f
  6179  1F07                     l2766:
  6180  1F07  0875               	movf	___ftge@ff2+2,w
  6181  1F08  0272               	subwf	___ftge@ff1+2,w
  6182  1F09  1D03               	skipz
  6183  1F0A  2F11               	goto	u4015
  6184  1F0B  0874               	movf	___ftge@ff2+1,w
  6185  1F0C  0271               	subwf	___ftge@ff1+1,w
  6186  1F0D  1D03               	skipz
  6187  1F0E  2F11               	goto	u4015
  6188  1F0F  0873               	movf	___ftge@ff2,w
  6189  1F10  0270               	subwf	___ftge@ff1,w
  6190  1F11                     u4015:
  6191  1F11  1803               	skipnc
  6192  1F12  2F14               	goto	u4011
  6193  1F13  2F15               	goto	u4010
  6194  1F14                     u4011:
  6195  1F14  2F17               	goto	l2770
  6196  1F15                     u4010:
  6197  1F15                     l2768:
  6198  1F15  1003               	clrc
  6199  1F16  2F18               	goto	l701
  6200  1F17                     l2770:
  6201  1F17  1403               	setc
  6202  1F18                     l701:
  6203  1F18  0008               	return
  6204  1F19                     __end_of___ftge:
  6205                           
  6206                           	psect	text22
  6207  1DB5                     __ptext22:	
  6208 ;; *************** function _configIO *****************
  6209 ;; Defined at:
  6210 ;;		line 45 in file "pic16f.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;		None
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;		None
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  1    wreg      void 
  6217 ;; Registers used:
  6218 ;;		status,2
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6224 ;;      Params:         0       0       0       0       0
  6225 ;;      Locals:         0       0       0       0       0
  6226 ;;      Temps:          0       0       0       0       0
  6227 ;;      Totals:         0       0       0       0       0
  6228 ;;Total ram usage:        0 bytes
  6229 ;; Hardware stack levels used:    1
  6230 ;; This function calls:
  6231 ;;		Nothing
  6232 ;; This function is called by:
  6233 ;;		_main
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           
  6238                           ;psect for function _configIO
  6239  1DB5                     _configIO:
  6240  1DB5                     l2862:	
  6241                           ;incstack = 0
  6242                           ; Regs used in _configIO: [status,2]
  6243                           
  6244                           
  6245                           ;pic16f.c: 46:     TRISD=0;
  6246  1DB5  1683               	bsf	3,5	;RP0=1, select bank1
  6247  1DB6  1303               	bcf	3,6	;RP1=0, select bank1
  6248  1DB7  0188               	clrf	8	;volatile
  6249                           
  6250                           ;pic16f.c: 47:     ANSEL=0;
  6251  1DB8  1683               	bsf	3,5	;RP0=1, select bank3
  6252  1DB9  1703               	bsf	3,6	;RP1=1, select bank3
  6253  1DBA  0188               	clrf	8	;volatile
  6254                           
  6255                           ;pic16f.c: 48:     ANSELH=0;
  6256  1DBB  0189               	clrf	9	;volatile
  6257                           
  6258                           ;pic16f.c: 49:     PORTD=0;
  6259  1DBC  1283               	bcf	3,5	;RP0=0, select bank0
  6260  1DBD  1303               	bcf	3,6	;RP1=0, select bank0
  6261  1DBE  0188               	clrf	8	;volatile
  6262  1DBF                     l2864:
  6263                           
  6264                           ;pic16f.c: 51:     INTCONbits.PEIE=1;
  6265  1DBF  170B               	bsf	11,6	;volatile
  6266  1DC0                     l2866:
  6267                           
  6268                           ;pic16f.c: 52:     PIE1bits.RCIE=1;
  6269  1DC0  1683               	bsf	3,5	;RP0=1, select bank1
  6270  1DC1  1303               	bcf	3,6	;RP1=0, select bank1
  6271  1DC2  168C               	bsf	12,5	;volatile
  6272  1DC3                     l2868:
  6273                           
  6274                           ;pic16f.c: 53:     PIR1bits.RCIF=0;
  6275  1DC3  1283               	bcf	3,5	;RP0=0, select bank0
  6276  1DC4  1303               	bcf	3,6	;RP1=0, select bank0
  6277  1DC5  128C               	bcf	12,5	;volatile
  6278  1DC6                     l2870:
  6279                           
  6280                           ;pic16f.c: 54:     INTCONbits.GIE=1;
  6281  1DC6  178B               	bsf	11,7	;volatile
  6282  1DC7                     l47:
  6283  1DC7  0008               	return
  6284  1DC8                     __end_of_configIO:
  6285                           
  6286                           	psect	text23
  6287  113A                     __ptext23:	
  6288 ;; *************** function _aht_GetTemperature *****************
  6289 ;; Defined at:
  6290 ;;		line 62 in file "aht10.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  value           3   56[BANK0 ] float 
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  3   53[BANK0 ] float 
  6297 ;; Registers used:
  6298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6304 ;;      Params:         0       3       0       0       0
  6305 ;;      Locals:         0       3       0       0       0
  6306 ;;      Temps:          0       0       0       0       0
  6307 ;;      Totals:         0       6       0       0       0
  6308 ;;Total ram usage:        6 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:    3
  6311 ;; This function calls:
  6312 ;;		___ftadd
  6313 ;;		___ftdiv
  6314 ;;		___ftmul
  6315 ;;		___lltoft
  6316 ;;		_aht_readSensor
  6317 ;; This function is called by:
  6318 ;;		_main
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           
  6323                           ;psect for function _aht_GetTemperature
  6324  113A                     _aht_GetTemperature:
  6325  113A                     l2906:	
  6326                           ;incstack = 0
  6327                           ; Regs used in _aht_GetTemperature: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6328                           
  6329                           
  6330                           ;aht10.c: 64:     float value = aht_readSensor(GetTempCmd);
  6331  113A  3000               	movlw	0
  6332  113B  00F6               	movwf	aht_readSensor@GetDataCmd
  6333  113C  00F7               	movwf	aht_readSensor@GetDataCmd+1
  6334  113D  160A  118A  26F7  160A  118A  	fcall	_aht_readSensor
  6335  1142  0879               	movf	?_aht_readSensor+3,w
  6336  1143  00FD               	movwf	___lltoft@c+3
  6337  1144  0878               	movf	?_aht_readSensor+2,w
  6338  1145  00FC               	movwf	___lltoft@c+2
  6339  1146  0877               	movf	?_aht_readSensor+1,w
  6340  1147  00FB               	movwf	___lltoft@c+1
  6341  1148  0876               	movf	?_aht_readSensor,w
  6342  1149  00FA               	movwf	___lltoft@c
  6343  114A  160A  158A  2678  160A  118A  	fcall	___lltoft
  6344  114F  087A               	movf	?___lltoft,w
  6345  1150  1283               	bcf	3,5	;RP0=0, select bank0
  6346  1151  1303               	bcf	3,6	;RP1=0, select bank0
  6347  1152  00D8               	movwf	aht_GetTemperature@value
  6348  1153  087B               	movf	?___lltoft+1,w
  6349  1154  00D9               	movwf	aht_GetTemperature@value+1
  6350  1155  087C               	movf	?___lltoft+2,w
  6351  1156  00DA               	movwf	aht_GetTemperature@value+2
  6352  1157                     l2908:
  6353                           
  6354                           ;aht10.c: 65:     return ((200 * value) / 1048576) - 50;
  6355  1157  3000               	movlw	0
  6356  1158  00C8               	movwf	___ftadd@f1
  6357  1159  3048               	movlw	72
  6358  115A  00C9               	movwf	___ftadd@f1+1
  6359  115B  30C2               	movlw	194
  6360  115C  00CA               	movwf	___ftadd@f1+2
  6361  115D  3000               	movlw	0
  6362  115E  00B8               	movwf	___ftdiv@f2
  6363  115F  3080               	movlw	128
  6364  1160  00B9               	movwf	___ftdiv@f2+1
  6365  1161  3049               	movlw	73
  6366  1162  00BA               	movwf	___ftdiv@f2+2
  6367  1163  3000               	movlw	0
  6368  1164  00A8               	movwf	___ftmul@f1
  6369  1165  3048               	movlw	72
  6370  1166  00A9               	movwf	___ftmul@f1+1
  6371  1167  3043               	movlw	67
  6372  1168  00AA               	movwf	___ftmul@f1+2
  6373  1169  0858               	movf	aht_GetTemperature@value,w
  6374  116A  00AB               	movwf	___ftmul@f2
  6375  116B  0859               	movf	aht_GetTemperature@value+1,w
  6376  116C  00AC               	movwf	___ftmul@f2+1
  6377  116D  085A               	movf	aht_GetTemperature@value+2,w
  6378  116E  00AD               	movwf	___ftmul@f2+2
  6379  116F  120A  118A  200D  160A  118A  	fcall	___ftmul
  6380  1174  1283               	bcf	3,5	;RP0=0, select bank0
  6381  1175  1303               	bcf	3,6	;RP1=0, select bank0
  6382  1176  0828               	movf	?___ftmul,w
  6383  1177  00BB               	movwf	___ftdiv@f1
  6384  1178  0829               	movf	?___ftmul+1,w
  6385  1179  00BC               	movwf	___ftdiv@f1+1
  6386  117A  082A               	movf	?___ftmul+2,w
  6387  117B  00BD               	movwf	___ftdiv@f1+2
  6388  117C  160A  118A  256D  160A  118A  	fcall	___ftdiv
  6389  1181  1283               	bcf	3,5	;RP0=0, select bank0
  6390  1182  1303               	bcf	3,6	;RP1=0, select bank0
  6391  1183  0838               	movf	?___ftdiv,w
  6392  1184  00CB               	movwf	___ftadd@f2
  6393  1185  0839               	movf	?___ftdiv+1,w
  6394  1186  00CC               	movwf	___ftadd@f2+1
  6395  1187  083A               	movf	?___ftdiv+2,w
  6396  1188  00CD               	movwf	___ftadd@f2+2
  6397  1189  120A  158A  214F  160A  118A  	fcall	___ftadd
  6398  118E  1283               	bcf	3,5	;RP0=0, select bank0
  6399  118F  1303               	bcf	3,6	;RP1=0, select bank0
  6400  1190  0848               	movf	?___ftadd,w
  6401  1191  00D5               	movwf	?_aht_GetTemperature
  6402  1192  0849               	movf	?___ftadd+1,w
  6403  1193  00D6               	movwf	?_aht_GetTemperature+1
  6404  1194  084A               	movf	?___ftadd+2,w
  6405  1195  00D7               	movwf	?_aht_GetTemperature+2
  6406  1196                     l156:
  6407  1196  0008               	return
  6408  1197                     __end_of_aht_GetTemperature:
  6409                           
  6410                           	psect	text24
  6411  094F                     __ptext24:	
  6412 ;; *************** function ___ftadd *****************
  6413 ;; Defined at:
  6414 ;;		line 86 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftadd.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  f1              3   40[BANK0 ] float 
  6417 ;;  f2              3   43[BANK0 ] float 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;  exp1            1   52[BANK0 ] unsigned char 
  6420 ;;  exp2            1   51[BANK0 ] unsigned char 
  6421 ;;  sign            1   50[BANK0 ] unsigned char 
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  3   40[BANK0 ] float 
  6424 ;; Registers used:
  6425 ;;		wreg, status,2, status,0, pclath, cstack
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6431 ;;      Params:         0       6       0       0       0
  6432 ;;      Locals:         0       3       0       0       0
  6433 ;;      Temps:          0       4       0       0       0
  6434 ;;      Totals:         0      13       0       0       0
  6435 ;;Total ram usage:       13 bytes
  6436 ;; Hardware stack levels used:    1
  6437 ;; Hardware stack levels required when called:    1
  6438 ;; This function calls:
  6439 ;;		___ftpack
  6440 ;; This function is called by:
  6441 ;;		_aht_GetTemperature
  6442 ;;		_sprintf
  6443 ;;		___ftsub
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           
  6448                           ;psect for function ___ftadd
  6449  094F                     ___ftadd:
  6450  094F                     l2258:	
  6451                           ;incstack = 0
  6452                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6453                           
  6454  094F  1283               	bcf	3,5	;RP0=0, select bank0
  6455  0950  1303               	bcf	3,6	;RP1=0, select bank0
  6456  0951  0848               	movf	___ftadd@f1,w
  6457  0952  00CE               	movwf	??___ftadd
  6458  0953  0849               	movf	___ftadd@f1+1,w
  6459  0954  00CF               	movwf	??___ftadd+1
  6460  0955  084A               	movf	___ftadd@f1+2,w
  6461  0956  00D0               	movwf	??___ftadd+2
  6462  0957  1003               	clrc
  6463  0958  0D4F               	rlf	??___ftadd+1,w
  6464  0959  0D50               	rlf	??___ftadd+2,w
  6465  095A  00D1               	movwf	??___ftadd+3
  6466  095B  0851               	movf	??___ftadd+3,w
  6467  095C  00D4               	movwf	___ftadd@exp1
  6468  095D  084B               	movf	___ftadd@f2,w
  6469  095E  00CE               	movwf	??___ftadd
  6470  095F  084C               	movf	___ftadd@f2+1,w
  6471  0960  00CF               	movwf	??___ftadd+1
  6472  0961  084D               	movf	___ftadd@f2+2,w
  6473  0962  00D0               	movwf	??___ftadd+2
  6474  0963  1003               	clrc
  6475  0964  0D4F               	rlf	??___ftadd+1,w
  6476  0965  0D50               	rlf	??___ftadd+2,w
  6477  0966  00D1               	movwf	??___ftadd+3
  6478  0967  0851               	movf	??___ftadd+3,w
  6479  0968  00D3               	movwf	___ftadd@exp2
  6480  0969  0854               	movf	___ftadd@exp1,w
  6481  096A  1903               	btfsc	3,2
  6482  096B  296D               	goto	u2761
  6483  096C  296E               	goto	u2760
  6484  096D                     u2761:
  6485  096D  297E               	goto	l2264
  6486  096E                     u2760:
  6487  096E                     l2260:
  6488  096E  0853               	movf	___ftadd@exp2,w
  6489  096F  0254               	subwf	___ftadd@exp1,w
  6490  0970  1803               	skipnc
  6491  0971  2973               	goto	u2771
  6492  0972  2974               	goto	u2770
  6493  0973                     u2771:
  6494  0973  2985               	goto	l2268
  6495  0974                     u2770:
  6496  0974                     l2262:
  6497  0974  0853               	movf	___ftadd@exp2,w
  6498  0975  00CE               	movwf	??___ftadd
  6499  0976  0854               	movf	___ftadd@exp1,w
  6500  0977  02CE               	subwf	??___ftadd,f
  6501  0978  3019               	movlw	25
  6502  0979  024E               	subwf	??___ftadd,w
  6503  097A  1C03               	skipc
  6504  097B  297D               	goto	u2781
  6505  097C  297E               	goto	u2780
  6506  097D                     u2781:
  6507  097D  2985               	goto	l2268
  6508  097E                     u2780:
  6509  097E                     l2264:
  6510  097E  084B               	movf	___ftadd@f2,w
  6511  097F  00C8               	movwf	?___ftadd
  6512  0980  084C               	movf	___ftadd@f2+1,w
  6513  0981  00C9               	movwf	?___ftadd+1
  6514  0982  084D               	movf	___ftadd@f2+2,w
  6515  0983  00CA               	movwf	?___ftadd+2
  6516  0984  2A84               	goto	l644
  6517  0985                     l2268:
  6518  0985  0853               	movf	___ftadd@exp2,w
  6519  0986  1903               	btfsc	3,2
  6520  0987  2989               	goto	u2791
  6521  0988  298A               	goto	u2790
  6522  0989                     u2791:
  6523  0989  299A               	goto	l647
  6524  098A                     u2790:
  6525  098A                     l2270:
  6526  098A  0854               	movf	___ftadd@exp1,w
  6527  098B  0253               	subwf	___ftadd@exp2,w
  6528  098C  1803               	skipnc
  6529  098D  298F               	goto	u2801
  6530  098E  2990               	goto	u2800
  6531  098F                     u2801:
  6532  098F  299B               	goto	l2274
  6533  0990                     u2800:
  6534  0990                     l2272:
  6535  0990  0854               	movf	___ftadd@exp1,w
  6536  0991  00CE               	movwf	??___ftadd
  6537  0992  0853               	movf	___ftadd@exp2,w
  6538  0993  02CE               	subwf	??___ftadd,f
  6539  0994  3019               	movlw	25
  6540  0995  024E               	subwf	??___ftadd,w
  6541  0996  1C03               	skipc
  6542  0997  2999               	goto	u2811
  6543  0998  299A               	goto	u2810
  6544  0999                     u2811:
  6545  0999  299B               	goto	l2274
  6546  099A                     u2810:
  6547  099A                     l647:
  6548  099A  2A84               	goto	l644
  6549  099B                     l2274:
  6550  099B  3006               	movlw	6
  6551  099C  00CE               	movwf	??___ftadd
  6552  099D  084E               	movf	??___ftadd,w
  6553  099E  00D2               	movwf	___ftadd@sign
  6554  099F                     l2276:
  6555  099F  1FCA               	btfss	___ftadd@f1+2,7
  6556  09A0  29A2               	goto	u2821
  6557  09A1  29A3               	goto	u2820
  6558  09A2                     u2821:
  6559  09A2  29A4               	goto	l648
  6560  09A3                     u2820:
  6561  09A3                     l2278:
  6562  09A3  17D2               	bsf	___ftadd@sign,7
  6563  09A4                     l648:
  6564  09A4  1FCD               	btfss	___ftadd@f2+2,7
  6565  09A5  29A7               	goto	u2831
  6566  09A6  29A8               	goto	u2830
  6567  09A7                     u2831:
  6568  09A7  29A9               	goto	l649
  6569  09A8                     u2830:
  6570  09A8                     l2280:
  6571  09A8  1752               	bsf	___ftadd@sign,6
  6572  09A9                     l649:
  6573  09A9  17C9               	bsf	___ftadd@f1+1,7
  6574  09AA                     l2282:
  6575  09AA  30FF               	movlw	255
  6576  09AB  05C8               	andwf	___ftadd@f1,f
  6577  09AC  30FF               	movlw	255
  6578  09AD  05C9               	andwf	___ftadd@f1+1,f
  6579  09AE  3000               	movlw	0
  6580  09AF  05CA               	andwf	___ftadd@f1+2,f
  6581  09B0                     l2284:
  6582  09B0  17CC               	bsf	___ftadd@f2+1,7
  6583  09B1  30FF               	movlw	255
  6584  09B2  05CB               	andwf	___ftadd@f2,f
  6585  09B3  30FF               	movlw	255
  6586  09B4  05CC               	andwf	___ftadd@f2+1,f
  6587  09B5  3000               	movlw	0
  6588  09B6  05CD               	andwf	___ftadd@f2+2,f
  6589  09B7  0853               	movf	___ftadd@exp2,w
  6590  09B8  0254               	subwf	___ftadd@exp1,w
  6591  09B9  1803               	skipnc
  6592  09BA  29BC               	goto	u2841
  6593  09BB  29BD               	goto	u2840
  6594  09BC                     u2841:
  6595  09BC  29E9               	goto	l2296
  6596  09BD                     u2840:
  6597  09BD                     l2286:
  6598  09BD  3001               	movlw	1
  6599  09BE                     u2855:
  6600  09BE  1003               	clrc
  6601  09BF  0DCB               	rlf	___ftadd@f2,f
  6602  09C0  0DCC               	rlf	___ftadd@f2+1,f
  6603  09C1  0DCD               	rlf	___ftadd@f2+2,f
  6604  09C2  3EFF               	addlw	-1
  6605  09C3  1D03               	skipz
  6606  09C4  29BE               	goto	u2855
  6607  09C5  3001               	movlw	1
  6608  09C6  02D3               	subwf	___ftadd@exp2,f
  6609  09C7                     l2288:
  6610  09C7  0853               	movf	___ftadd@exp2,w
  6611  09C8  0654               	xorwf	___ftadd@exp1,w
  6612  09C9  1903               	skipnz
  6613  09CA  29CC               	goto	u2861
  6614  09CB  29CD               	goto	u2860
  6615  09CC                     u2861:
  6616  09CC  29E2               	goto	l2294
  6617  09CD                     u2860:
  6618  09CD                     l2290:
  6619  09CD  3001               	movlw	1
  6620  09CE  02D2               	subwf	___ftadd@sign,f
  6621  09CF  0852               	movf	___ftadd@sign,w
  6622  09D0  3907               	andlw	7
  6623  09D1  1D03               	btfss	3,2
  6624  09D2  29D4               	goto	u2871
  6625  09D3  29D5               	goto	u2870
  6626  09D4                     u2871:
  6627  09D4  29BD               	goto	l2286
  6628  09D5                     u2870:
  6629  09D5  29E2               	goto	l2294
  6630  09D6                     l2292:
  6631  09D6  3001               	movlw	1
  6632  09D7                     u2885:
  6633  09D7  1003               	clrc
  6634  09D8  0CCA               	rrf	___ftadd@f1+2,f
  6635  09D9  0CC9               	rrf	___ftadd@f1+1,f
  6636  09DA  0CC8               	rrf	___ftadd@f1,f
  6637  09DB  3EFF               	addlw	-1
  6638  09DC  1D03               	skipz
  6639  09DD  29D7               	goto	u2885
  6640  09DE  3001               	movlw	1
  6641  09DF  00CE               	movwf	??___ftadd
  6642  09E0  084E               	movf	??___ftadd,w
  6643  09E1  07D4               	addwf	___ftadd@exp1,f
  6644  09E2                     l2294:
  6645  09E2  0854               	movf	___ftadd@exp1,w
  6646  09E3  0653               	xorwf	___ftadd@exp2,w
  6647  09E4  1D03               	skipz
  6648  09E5  29E7               	goto	u2891
  6649  09E6  29E8               	goto	u2890
  6650  09E7                     u2891:
  6651  09E7  29D6               	goto	l2292
  6652  09E8                     u2890:
  6653  09E8  2A1A               	goto	l658
  6654  09E9                     l2296:
  6655  09E9  0854               	movf	___ftadd@exp1,w
  6656  09EA  0253               	subwf	___ftadd@exp2,w
  6657  09EB  1803               	skipnc
  6658  09EC  29EE               	goto	u2901
  6659  09ED  29EF               	goto	u2900
  6660  09EE                     u2901:
  6661  09EE  2A1A               	goto	l658
  6662  09EF                     u2900:
  6663  09EF                     l2298:
  6664  09EF  3001               	movlw	1
  6665  09F0                     u2915:
  6666  09F0  1003               	clrc
  6667  09F1  0DC8               	rlf	___ftadd@f1,f
  6668  09F2  0DC9               	rlf	___ftadd@f1+1,f
  6669  09F3  0DCA               	rlf	___ftadd@f1+2,f
  6670  09F4  3EFF               	addlw	-1
  6671  09F5  1D03               	skipz
  6672  09F6  29F0               	goto	u2915
  6673  09F7  3001               	movlw	1
  6674  09F8  02D4               	subwf	___ftadd@exp1,f
  6675  09F9                     l2300:
  6676  09F9  0853               	movf	___ftadd@exp2,w
  6677  09FA  0654               	xorwf	___ftadd@exp1,w
  6678  09FB  1903               	skipnz
  6679  09FC  29FE               	goto	u2921
  6680  09FD  29FF               	goto	u2920
  6681  09FE                     u2921:
  6682  09FE  2A14               	goto	l2306
  6683  09FF                     u2920:
  6684  09FF                     l2302:
  6685  09FF  3001               	movlw	1
  6686  0A00  02D2               	subwf	___ftadd@sign,f
  6687  0A01  0852               	movf	___ftadd@sign,w
  6688  0A02  3907               	andlw	7
  6689  0A03  1D03               	btfss	3,2
  6690  0A04  2A06               	goto	u2931
  6691  0A05  2A07               	goto	u2930
  6692  0A06                     u2931:
  6693  0A06  29EF               	goto	l2298
  6694  0A07                     u2930:
  6695  0A07  2A14               	goto	l2306
  6696  0A08                     l2304:
  6697  0A08  3001               	movlw	1
  6698  0A09                     u2945:
  6699  0A09  1003               	clrc
  6700  0A0A  0CCD               	rrf	___ftadd@f2+2,f
  6701  0A0B  0CCC               	rrf	___ftadd@f2+1,f
  6702  0A0C  0CCB               	rrf	___ftadd@f2,f
  6703  0A0D  3EFF               	addlw	-1
  6704  0A0E  1D03               	skipz
  6705  0A0F  2A09               	goto	u2945
  6706  0A10  3001               	movlw	1
  6707  0A11  00CE               	movwf	??___ftadd
  6708  0A12  084E               	movf	??___ftadd,w
  6709  0A13  07D3               	addwf	___ftadd@exp2,f
  6710  0A14                     l2306:
  6711  0A14  0854               	movf	___ftadd@exp1,w
  6712  0A15  0653               	xorwf	___ftadd@exp2,w
  6713  0A16  1D03               	skipz
  6714  0A17  2A19               	goto	u2951
  6715  0A18  2A1A               	goto	u2950
  6716  0A19                     u2951:
  6717  0A19  2A08               	goto	l2304
  6718  0A1A                     u2950:
  6719  0A1A                     l658:
  6720  0A1A  1FD2               	btfss	___ftadd@sign,7
  6721  0A1B  2A1D               	goto	u2961
  6722  0A1C  2A1E               	goto	u2960
  6723  0A1D                     u2961:
  6724  0A1D  2A2E               	goto	l2310
  6725  0A1E                     u2960:
  6726  0A1E                     l2308:
  6727  0A1E  30FF               	movlw	255
  6728  0A1F  06C8               	xorwf	___ftadd@f1,f
  6729  0A20  30FF               	movlw	255
  6730  0A21  06C9               	xorwf	___ftadd@f1+1,f
  6731  0A22  30FF               	movlw	255
  6732  0A23  06CA               	xorwf	___ftadd@f1+2,f
  6733  0A24  3001               	movlw	1
  6734  0A25  07C8               	addwf	___ftadd@f1,f
  6735  0A26  3000               	movlw	0
  6736  0A27  1803               	skipnc
  6737  0A28  3001               	movlw	1
  6738  0A29  07C9               	addwf	___ftadd@f1+1,f
  6739  0A2A  3000               	movlw	0
  6740  0A2B  1803               	skipnc
  6741  0A2C  3001               	movlw	1
  6742  0A2D  07CA               	addwf	___ftadd@f1+2,f
  6743  0A2E                     l2310:
  6744  0A2E  1F52               	btfss	___ftadd@sign,6
  6745  0A2F  2A31               	goto	u2971
  6746  0A30  2A32               	goto	u2970
  6747  0A31                     u2971:
  6748  0A31  2A42               	goto	l2314
  6749  0A32                     u2970:
  6750  0A32                     l2312:
  6751  0A32  30FF               	movlw	255
  6752  0A33  06CB               	xorwf	___ftadd@f2,f
  6753  0A34  30FF               	movlw	255
  6754  0A35  06CC               	xorwf	___ftadd@f2+1,f
  6755  0A36  30FF               	movlw	255
  6756  0A37  06CD               	xorwf	___ftadd@f2+2,f
  6757  0A38  3001               	movlw	1
  6758  0A39  07CB               	addwf	___ftadd@f2,f
  6759  0A3A  3000               	movlw	0
  6760  0A3B  1803               	skipnc
  6761  0A3C  3001               	movlw	1
  6762  0A3D  07CC               	addwf	___ftadd@f2+1,f
  6763  0A3E  3000               	movlw	0
  6764  0A3F  1803               	skipnc
  6765  0A40  3001               	movlw	1
  6766  0A41  07CD               	addwf	___ftadd@f2+2,f
  6767  0A42                     l2314:
  6768  0A42  01D2               	clrf	___ftadd@sign
  6769  0A43                     l2316:
  6770  0A43  0848               	movf	___ftadd@f1,w
  6771  0A44  07CB               	addwf	___ftadd@f2,f
  6772  0A45  0849               	movf	___ftadd@f1+1,w
  6773  0A46  1103               	clrz
  6774  0A47  1803               	skipnc
  6775  0A48  0A49               	incf	___ftadd@f1+1,w
  6776  0A49  1903               	skipnz
  6777  0A4A  2A4C               	goto	u2981
  6778  0A4B  07CC               	addwf	___ftadd@f2+1,f
  6779  0A4C                     u2981:
  6780  0A4C  084A               	movf	___ftadd@f1+2,w
  6781  0A4D  1103               	clrz
  6782  0A4E  1803               	skipnc
  6783  0A4F  0A4A               	incf	___ftadd@f1+2,w
  6784  0A50  1903               	skipnz
  6785  0A51  2A53               	goto	u2982
  6786  0A52  07CD               	addwf	___ftadd@f2+2,f
  6787  0A53                     u2982:
  6788  0A53                     l2318:
  6789  0A53  1FCD               	btfss	___ftadd@f2+2,7
  6790  0A54  2A56               	goto	u2991
  6791  0A55  2A57               	goto	u2990
  6792  0A56                     u2991:
  6793  0A56  2A69               	goto	l2324
  6794  0A57                     u2990:
  6795  0A57                     l2320:
  6796  0A57  30FF               	movlw	255
  6797  0A58  06CB               	xorwf	___ftadd@f2,f
  6798  0A59  30FF               	movlw	255
  6799  0A5A  06CC               	xorwf	___ftadd@f2+1,f
  6800  0A5B  30FF               	movlw	255
  6801  0A5C  06CD               	xorwf	___ftadd@f2+2,f
  6802  0A5D  3001               	movlw	1
  6803  0A5E  07CB               	addwf	___ftadd@f2,f
  6804  0A5F  3000               	movlw	0
  6805  0A60  1803               	skipnc
  6806  0A61  3001               	movlw	1
  6807  0A62  07CC               	addwf	___ftadd@f2+1,f
  6808  0A63  3000               	movlw	0
  6809  0A64  1803               	skipnc
  6810  0A65  3001               	movlw	1
  6811  0A66  07CD               	addwf	___ftadd@f2+2,f
  6812  0A67                     l2322:
  6813  0A67  01D2               	clrf	___ftadd@sign
  6814  0A68  0AD2               	incf	___ftadd@sign,f
  6815  0A69                     l2324:
  6816  0A69  084B               	movf	___ftadd@f2,w
  6817  0A6A  00F0               	movwf	___ftpack@arg
  6818  0A6B  084C               	movf	___ftadd@f2+1,w
  6819  0A6C  00F1               	movwf	___ftpack@arg+1
  6820  0A6D  084D               	movf	___ftadd@f2+2,w
  6821  0A6E  00F2               	movwf	___ftpack@arg+2
  6822  0A6F  0854               	movf	___ftadd@exp1,w
  6823  0A70  00CE               	movwf	??___ftadd
  6824  0A71  084E               	movf	??___ftadd,w
  6825  0A72  00F3               	movwf	___ftpack@exp
  6826  0A73  0852               	movf	___ftadd@sign,w
  6827  0A74  00CF               	movwf	??___ftadd+1
  6828  0A75  084F               	movf	??___ftadd+1,w
  6829  0A76  00F4               	movwf	___ftpack@sign
  6830  0A77  160A  118A  2266  120A  158A  	fcall	___ftpack
  6831  0A7C  0870               	movf	?___ftpack,w
  6832  0A7D  1283               	bcf	3,5	;RP0=0, select bank0
  6833  0A7E  1303               	bcf	3,6	;RP1=0, select bank0
  6834  0A7F  00C8               	movwf	?___ftadd
  6835  0A80  0871               	movf	?___ftpack+1,w
  6836  0A81  00C9               	movwf	?___ftadd+1
  6837  0A82  0872               	movf	?___ftpack+2,w
  6838  0A83  00CA               	movwf	?___ftadd+2
  6839  0A84                     l644:
  6840  0A84  0008               	return
  6841  0A85                     __end_of___ftadd:
  6842                           
  6843                           	psect	text25
  6844  1FA7                     __ptext25:	
  6845 ;; *************** function _aht_GetHumidity *****************
  6846 ;; Defined at:
  6847 ;;		line 47 in file "aht10.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;		None
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;  value           3   46[BANK0 ] float 
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  3   43[BANK0 ] float 
  6854 ;; Registers used:
  6855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6861 ;;      Params:         0       3       0       0       0
  6862 ;;      Locals:         0       3       0       0       0
  6863 ;;      Temps:          0       0       0       0       0
  6864 ;;      Totals:         0       6       0       0       0
  6865 ;;Total ram usage:        6 bytes
  6866 ;; Hardware stack levels used:    1
  6867 ;; Hardware stack levels required when called:    3
  6868 ;; This function calls:
  6869 ;;		___ftdiv
  6870 ;;		___ftmul
  6871 ;;		___lltoft
  6872 ;;		_aht_readSensor
  6873 ;; This function is called by:
  6874 ;;		_main
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           
  6879                           ;psect for function _aht_GetHumidity
  6880  1FA7                     _aht_GetHumidity:
  6881  1FA7                     l2912:	
  6882                           ;incstack = 0
  6883                           ; Regs used in _aht_GetHumidity: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6884                           
  6885                           
  6886                           ;aht10.c: 49:     float value = aht_readSensor(GetRHumidityCmd);
  6887  1FA7  3001               	movlw	1
  6888  1FA8  00F6               	movwf	aht_readSensor@GetDataCmd
  6889  1FA9  3000               	movlw	0
  6890  1FAA  00F7               	movwf	aht_readSensor@GetDataCmd+1
  6891  1FAB  160A  118A  26F7  160A  158A  	fcall	_aht_readSensor
  6892  1FB0  0879               	movf	?_aht_readSensor+3,w
  6893  1FB1  00FD               	movwf	___lltoft@c+3
  6894  1FB2  0878               	movf	?_aht_readSensor+2,w
  6895  1FB3  00FC               	movwf	___lltoft@c+2
  6896  1FB4  0877               	movf	?_aht_readSensor+1,w
  6897  1FB5  00FB               	movwf	___lltoft@c+1
  6898  1FB6  0876               	movf	?_aht_readSensor,w
  6899  1FB7  00FA               	movwf	___lltoft@c
  6900  1FB8  160A  158A  2678  160A  158A  	fcall	___lltoft
  6901  1FBD  087A               	movf	?___lltoft,w
  6902  1FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6903  1FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6904  1FC0  00CE               	movwf	aht_GetHumidity@value
  6905  1FC1  087B               	movf	?___lltoft+1,w
  6906  1FC2  00CF               	movwf	aht_GetHumidity@value+1
  6907  1FC3  087C               	movf	?___lltoft+2,w
  6908  1FC4  00D0               	movwf	aht_GetHumidity@value+2
  6909  1FC5                     l2914:
  6910                           
  6911                           ;aht10.c: 50:     if (value == 0) {
  6912  1FC5  0850               	movf	aht_GetHumidity@value+2,w
  6913  1FC6  044F               	iorwf	aht_GetHumidity@value+1,w
  6914  1FC7  044E               	iorwf	aht_GetHumidity@value,w
  6915  1FC8  1D03               	skipz
  6916  1FC9  2FCB               	goto	u4291
  6917  1FCA  2FCC               	goto	u4290
  6918  1FCB                     u4291:
  6919  1FCB  2FD3               	goto	l2920
  6920  1FCC                     u4290:
  6921  1FCC                     l2916:
  6922                           
  6923                           ;aht10.c: 51:         return 0;
  6924  1FCC  3000               	movlw	0
  6925  1FCD  00CB               	movwf	?_aht_GetHumidity
  6926  1FCE  3000               	movlw	0
  6927  1FCF  00CC               	movwf	?_aht_GetHumidity+1
  6928  1FD0  3000               	movlw	0
  6929  1FD1  00CD               	movwf	?_aht_GetHumidity+2
  6930  1FD2  2FFF               	goto	l153
  6931  1FD3                     l2920:
  6932                           
  6933                           ;aht10.c: 53:     return value * 100 / 1048576;
  6934  1FD3  3000               	movlw	0
  6935  1FD4  00B8               	movwf	___ftdiv@f2
  6936  1FD5  3080               	movlw	128
  6937  1FD6  00B9               	movwf	___ftdiv@f2+1
  6938  1FD7  3049               	movlw	73
  6939  1FD8  00BA               	movwf	___ftdiv@f2+2
  6940  1FD9  3000               	movlw	0
  6941  1FDA  00A8               	movwf	___ftmul@f1
  6942  1FDB  30C8               	movlw	200
  6943  1FDC  00A9               	movwf	___ftmul@f1+1
  6944  1FDD  3042               	movlw	66
  6945  1FDE  00AA               	movwf	___ftmul@f1+2
  6946  1FDF  084E               	movf	aht_GetHumidity@value,w
  6947  1FE0  00AB               	movwf	___ftmul@f2
  6948  1FE1  084F               	movf	aht_GetHumidity@value+1,w
  6949  1FE2  00AC               	movwf	___ftmul@f2+1
  6950  1FE3  0850               	movf	aht_GetHumidity@value+2,w
  6951  1FE4  00AD               	movwf	___ftmul@f2+2
  6952  1FE5  120A  118A  200D  160A  158A  	fcall	___ftmul
  6953  1FEA  1283               	bcf	3,5	;RP0=0, select bank0
  6954  1FEB  1303               	bcf	3,6	;RP1=0, select bank0
  6955  1FEC  0828               	movf	?___ftmul,w
  6956  1FED  00BB               	movwf	___ftdiv@f1
  6957  1FEE  0829               	movf	?___ftmul+1,w
  6958  1FEF  00BC               	movwf	___ftdiv@f1+1
  6959  1FF0  082A               	movf	?___ftmul+2,w
  6960  1FF1  00BD               	movwf	___ftdiv@f1+2
  6961  1FF2  160A  118A  256D  160A  158A  	fcall	___ftdiv
  6962  1FF7  1283               	bcf	3,5	;RP0=0, select bank0
  6963  1FF8  1303               	bcf	3,6	;RP1=0, select bank0
  6964  1FF9  0838               	movf	?___ftdiv,w
  6965  1FFA  00CB               	movwf	?_aht_GetHumidity
  6966  1FFB  0839               	movf	?___ftdiv+1,w
  6967  1FFC  00CC               	movwf	?_aht_GetHumidity+1
  6968  1FFD  083A               	movf	?___ftdiv+2,w
  6969  1FFE  00CD               	movwf	?_aht_GetHumidity+2
  6970  1FFF                     l153:
  6971  1FFF  0008               	return
  6972  2000                     __end_of_aht_GetHumidity:
  6973                           
  6974                           	psect	text26
  6975  16F7                     __ptext26:	
  6976 ;; *************** function _aht_readSensor *****************
  6977 ;; Defined at:
  6978 ;;		line 72 in file "aht10.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;  GetDataCmd      2    6[COMMON] int 
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;  i               1   40[BANK0 ] unsigned char 
  6983 ;;  temp           24   12[BANK0 ] unsigned long [6]
  6984 ;;  result          4   36[BANK0 ] unsigned long 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  4    6[COMMON] unsigned long 
  6987 ;; Registers used:
  6988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6994 ;;      Params:         4       0       0       0       0
  6995 ;;      Locals:         0      29       0       0       0
  6996 ;;      Temps:          0      12       0       0       0
  6997 ;;      Totals:         4      41       0       0       0
  6998 ;;Total ram usage:       45 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    2
  7001 ;; This function calls:
  7002 ;;		_I2C_Master_Read
  7003 ;;		_I2C_Master_Start
  7004 ;;		_I2C_Master_Stop
  7005 ;;		_I2C_Master_Write
  7006 ;; This function is called by:
  7007 ;;		_aht_GetHumidity
  7008 ;;		_aht_GetTemperature
  7009 ;; This function uses a non-reentrant model
  7010 ;;
  7011                           
  7012                           
  7013                           ;psect for function _aht_readSensor
  7014  16F7                     _aht_readSensor:
  7015  16F7                     l2432:	
  7016                           ;incstack = 0
  7017                           ; Regs used in _aht_readSensor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7018                           
  7019                           
  7020                           ;aht10.c: 72: unsigned long aht_readSensor(int GetDataCmd);aht10.c: 73: {;aht10.c: 74:  
      +                             unsigned long result, temp[6];;aht10.c: 76:     I2C_Master_Start();
  7021  16F7  160A  158A  2563  160A  118A  	fcall	_I2C_Master_Start
  7022                           
  7023                           ;aht10.c: 77:     I2C_Master_Write(eSensorMeasureCmd[2]);
  7024  16FC  1683               	bsf	3,5	;RP0=1, select bank1
  7025  16FD  1303               	bcf	3,6	;RP1=0, select bank1
  7026  16FE  0854               	movf	(_eSensorMeasureCmd^(0+128)+2),w
  7027  16FF  1283               	bcf	3,5	;RP0=0, select bank0
  7028  1700  1303               	bcf	3,6	;RP1=0, select bank0
  7029  1701  00A0               	movwf	??_aht_readSensor
  7030  1702  01A1               	clrf	??_aht_readSensor+1
  7031  1703  0820               	movf	??_aht_readSensor,w
  7032  1704  00F0               	movwf	I2C_Master_Write@d
  7033  1705  0821               	movf	??_aht_readSensor+1,w
  7034  1706  00F1               	movwf	I2C_Master_Write@d+1
  7035  1707  120A  158A  2002  160A  118A  	fcall	_I2C_Master_Write
  7036                           
  7037                           ;aht10.c: 78:     I2C_Master_Stop();
  7038  170C  160A  158A  256C  160A  118A  	fcall	_I2C_Master_Stop
  7039  1711                     l2434:
  7040                           
  7041                           ;aht10.c: 79:     _delay((unsigned long)((100)*(4000000/4000.0)));
  7042  1711  3082               	movlw	130
  7043  1712  1283               	bcf	3,5	;RP0=0, select bank0
  7044  1713  1303               	bcf	3,6	;RP1=0, select bank0
  7045  1714  00A1               	movwf	??_aht_readSensor+1
  7046  1715  30DD               	movlw	221
  7047  1716  00A0               	movwf	??_aht_readSensor
  7048  1717                     u4827:
  7049  1717  0BA0               	decfsz	??_aht_readSensor,f
  7050  1718  2F17               	goto	u4827
  7051  1719  0BA1               	decfsz	??_aht_readSensor+1,f
  7052  171A  2F17               	goto	u4827
  7053  171B                     l2436:
  7054                           
  7055                           ;aht10.c: 81:     I2C_Master_Start();
  7056  171B  160A  158A  2563  160A  118A  	fcall	_I2C_Master_Start
  7057  1720                     l2438:
  7058                           
  7059                           ;aht10.c: 83:     for(unsigned char i = 0; I2C_Master_Read(1) > 0; i++)
  7060  1720  1283               	bcf	3,5	;RP0=0, select bank0
  7061  1721  1303               	bcf	3,6	;RP1=0, select bank0
  7062  1722  01C8               	clrf	aht_readSensor@i
  7063  1723  2F51               	goto	l2444
  7064  1724                     l2440:
  7065                           
  7066                           ;aht10.c: 84:     {;aht10.c: 85:         temp[i] = I2C_Master_Read(1);
  7067  1724  3001               	movlw	1
  7068  1725  00F0               	movwf	I2C_Master_Read@a
  7069  1726  3000               	movlw	0
  7070  1727  00F1               	movwf	I2C_Master_Read@a+1
  7071  1728  160A  158A  264A  160A  118A  	fcall	_I2C_Master_Read
  7072  172D  0870               	movf	?_I2C_Master_Read,w
  7073  172E  1283               	bcf	3,5	;RP0=0, select bank0
  7074  172F  1303               	bcf	3,6	;RP1=0, select bank0
  7075  1730  00A0               	movwf	??_aht_readSensor
  7076  1731  0871               	movf	?_I2C_Master_Read+1,w
  7077  1732  00A1               	movwf	??_aht_readSensor+1
  7078  1733  01A2               	clrf	??_aht_readSensor+2
  7079  1734  01A3               	clrf	??_aht_readSensor+3
  7080  1735  0848               	movf	aht_readSensor@i,w
  7081  1736  00A4               	movwf	??_aht_readSensor+4
  7082  1737  3001               	movlw	1
  7083  1738                     u3285:
  7084  1738  1003               	clrc
  7085  1739  0DA4               	rlf	??_aht_readSensor+4,f
  7086  173A  3EFF               	addlw	-1
  7087  173B  1D03               	skipz
  7088  173C  2F38               	goto	u3285
  7089  173D  1003               	clrc
  7090  173E  0D24               	rlf	??_aht_readSensor+4,w
  7091  173F  3E2C               	addlw	(low (aht_readSensor@temp| 0))& (0+255)
  7092  1740  0084               	movwf	4
  7093  1741  0820               	movf	??_aht_readSensor,w
  7094  1742  1383               	bcf	3,7	;select IRP bank0
  7095  1743  0080               	movwf	0
  7096  1744  0A84               	incf	4,f
  7097  1745  0821               	movf	??_aht_readSensor+1,w
  7098  1746  0080               	movwf	0
  7099  1747  0A84               	incf	4,f
  7100  1748  0822               	movf	??_aht_readSensor+2,w
  7101  1749  0080               	movwf	0
  7102  174A  0A84               	incf	4,f
  7103  174B  0823               	movf	??_aht_readSensor+3,w
  7104  174C  0080               	movwf	0
  7105  174D                     l2442:
  7106                           
  7107                           ;aht10.c: 86:     }
  7108  174D  3001               	movlw	1
  7109  174E  00A0               	movwf	??_aht_readSensor
  7110  174F  0820               	movf	??_aht_readSensor,w
  7111  1750  07C8               	addwf	aht_readSensor@i,f
  7112  1751                     l2444:
  7113  1751  3001               	movlw	1
  7114  1752  00F0               	movwf	I2C_Master_Read@a
  7115  1753  3000               	movlw	0
  7116  1754  00F1               	movwf	I2C_Master_Read@a+1
  7117  1755  160A  158A  264A  160A  118A  	fcall	_I2C_Master_Read
  7118  175A  0870               	movf	?_I2C_Master_Read,w
  7119  175B  0471               	iorwf	?_I2C_Master_Read+1,w
  7120  175C  1D03               	btfss	3,2
  7121  175D  2F5F               	goto	u3291
  7122  175E  2F60               	goto	u3290
  7123  175F                     u3291:
  7124  175F  2F24               	goto	l2440
  7125  1760                     u3290:
  7126  1760                     l2446:
  7127                           
  7128                           ;aht10.c: 88:     if(GetDataCmd)
  7129  1760  0876               	movf	aht_readSensor@GetDataCmd,w
  7130  1761  0477               	iorwf	aht_readSensor@GetDataCmd+1,w
  7131  1762  1903               	btfsc	3,2
  7132  1763  2F65               	goto	u3301
  7133  1764  2F66               	goto	u3300
  7134  1765                     u3301:
  7135  1765  2FB4               	goto	l2450
  7136  1766                     u3300:
  7137  1766                     l2448:
  7138                           
  7139                           ;aht10.c: 89:     {;aht10.c: 90:         result = ((temp[1] << 16) | (temp[2] << 8) | te
      +                          mp[3]) >> 4;
  7140  1766  1283               	bcf	3,5	;RP0=0, select bank0
  7141  1767  1303               	bcf	3,6	;RP1=0, select bank0
  7142  1768  0838               	movf	aht_readSensor@temp+12,w
  7143  1769  00A0               	movwf	??_aht_readSensor
  7144  176A  0839               	movf	aht_readSensor@temp+13,w
  7145  176B  00A1               	movwf	??_aht_readSensor+1
  7146  176C  083A               	movf	aht_readSensor@temp+14,w
  7147  176D  00A2               	movwf	??_aht_readSensor+2
  7148  176E  083B               	movf	aht_readSensor@temp+15,w
  7149  176F  00A3               	movwf	??_aht_readSensor+3
  7150  1770  0834               	movf	aht_readSensor@temp+8,w
  7151  1771  00A4               	movwf	??_aht_readSensor+4
  7152  1772  0835               	movf	aht_readSensor@temp+9,w
  7153  1773  00A5               	movwf	??_aht_readSensor+5
  7154  1774  0836               	movf	aht_readSensor@temp+10,w
  7155  1775  00A6               	movwf	??_aht_readSensor+6
  7156  1776  0837               	movf	aht_readSensor@temp+11,w
  7157  1777  00A7               	movwf	??_aht_readSensor+7
  7158  1778  3008               	movlw	8
  7159  1779                     u3315:
  7160  1779  1003               	clrc
  7161  177A  0DA4               	rlf	??_aht_readSensor+4,f
  7162  177B  0DA5               	rlf	??_aht_readSensor+5,f
  7163  177C  0DA6               	rlf	??_aht_readSensor+6,f
  7164  177D  0DA7               	rlf	??_aht_readSensor+7,f
  7165  177E                     u3310:
  7166  177E  3EFF               	addlw	-1
  7167  177F  1D03               	skipz
  7168  1780  2F79               	goto	u3315
  7169  1781  0830               	movf	aht_readSensor@temp+4,w
  7170  1782  00A8               	movwf	??_aht_readSensor+8
  7171  1783  0831               	movf	aht_readSensor@temp+5,w
  7172  1784  00A9               	movwf	??_aht_readSensor+9
  7173  1785  0832               	movf	aht_readSensor@temp+6,w
  7174  1786  00AA               	movwf	??_aht_readSensor+10
  7175  1787  0833               	movf	aht_readSensor@temp+7,w
  7176  1788  00AB               	movwf	??_aht_readSensor+11
  7177  1789  3010               	movlw	16
  7178  178A                     u3325:
  7179  178A  1003               	clrc
  7180  178B  0DA8               	rlf	??_aht_readSensor+8,f
  7181  178C  0DA9               	rlf	??_aht_readSensor+9,f
  7182  178D  0DAA               	rlf	??_aht_readSensor+10,f
  7183  178E  0DAB               	rlf	??_aht_readSensor+11,f
  7184  178F                     u3320:
  7185  178F  3EFF               	addlw	-1
  7186  1790  1D03               	skipz
  7187  1791  2F8A               	goto	u3325
  7188  1792  0828               	movf	??_aht_readSensor+8,w
  7189  1793  04A4               	iorwf	??_aht_readSensor+4,f
  7190  1794  0829               	movf	??_aht_readSensor+9,w
  7191  1795  04A5               	iorwf	??_aht_readSensor+5,f
  7192  1796  082A               	movf	??_aht_readSensor+10,w
  7193  1797  04A6               	iorwf	??_aht_readSensor+6,f
  7194  1798  082B               	movf	??_aht_readSensor+11,w
  7195  1799  04A7               	iorwf	??_aht_readSensor+7,f
  7196  179A  0824               	movf	??_aht_readSensor+4,w
  7197  179B  04A0               	iorwf	??_aht_readSensor,f
  7198  179C  0825               	movf	??_aht_readSensor+5,w
  7199  179D  04A1               	iorwf	??_aht_readSensor+1,f
  7200  179E  0826               	movf	??_aht_readSensor+6,w
  7201  179F  04A2               	iorwf	??_aht_readSensor+2,f
  7202  17A0  0827               	movf	??_aht_readSensor+7,w
  7203  17A1  04A3               	iorwf	??_aht_readSensor+3,f
  7204  17A2  3004               	movlw	4
  7205  17A3                     u3335:
  7206  17A3  1003               	clrc
  7207  17A4  0CA3               	rrf	??_aht_readSensor+3,f
  7208  17A5  0CA2               	rrf	??_aht_readSensor+2,f
  7209  17A6  0CA1               	rrf	??_aht_readSensor+1,f
  7210  17A7  0CA0               	rrf	??_aht_readSensor,f
  7211  17A8                     u3330:
  7212  17A8  3EFF               	addlw	-1
  7213  17A9  1D03               	skipz
  7214  17AA  2FA3               	goto	u3335
  7215  17AB  0823               	movf	??_aht_readSensor+3,w
  7216  17AC  00C7               	movwf	aht_readSensor@result+3
  7217  17AD  0822               	movf	??_aht_readSensor+2,w
  7218  17AE  00C6               	movwf	aht_readSensor@result+2
  7219  17AF  0821               	movf	??_aht_readSensor+1,w
  7220  17B0  00C5               	movwf	aht_readSensor@result+1
  7221  17B1  0820               	movf	??_aht_readSensor,w
  7222  17B2  00C4               	movwf	aht_readSensor@result
  7223                           
  7224                           ;aht10.c: 91:     }
  7225  17B3  2FF7               	goto	l2452
  7226  17B4                     l2450:
  7227                           
  7228                           ;aht10.c: 93:     {;aht10.c: 94:         result = ((temp[3] & 0x0F) << 16) | (temp[4] <<
      +                           8) | temp[5];
  7229  17B4  1283               	bcf	3,5	;RP0=0, select bank0
  7230  17B5  1303               	bcf	3,6	;RP1=0, select bank0
  7231  17B6  083C               	movf	aht_readSensor@temp+16,w
  7232  17B7  00A0               	movwf	??_aht_readSensor
  7233  17B8  083D               	movf	aht_readSensor@temp+17,w
  7234  17B9  00A1               	movwf	??_aht_readSensor+1
  7235  17BA  083E               	movf	aht_readSensor@temp+18,w
  7236  17BB  00A2               	movwf	??_aht_readSensor+2
  7237  17BC  083F               	movf	aht_readSensor@temp+19,w
  7238  17BD  00A3               	movwf	??_aht_readSensor+3
  7239  17BE  3008               	movlw	8
  7240  17BF                     u3345:
  7241  17BF  1003               	clrc
  7242  17C0  0DA0               	rlf	??_aht_readSensor,f
  7243  17C1  0DA1               	rlf	??_aht_readSensor+1,f
  7244  17C2  0DA2               	rlf	??_aht_readSensor+2,f
  7245  17C3  0DA3               	rlf	??_aht_readSensor+3,f
  7246  17C4                     u3340:
  7247  17C4  3EFF               	addlw	-1
  7248  17C5  1D03               	skipz
  7249  17C6  2FBF               	goto	u3345
  7250  17C7  300C               	movlw	12
  7251  17C8  3E2C               	addlw	(low (aht_readSensor@temp| 0))& (0+255)
  7252  17C9  0084               	movwf	4
  7253  17CA  300F               	movlw	15
  7254  17CB  1383               	bcf	3,7	;select IRP bank0
  7255  17CC  0500               	andwf	0,w
  7256  17CD  00A4               	movwf	??_aht_readSensor+4
  7257  17CE  0A84               	incf	4,f
  7258  17CF  3000               	movlw	0
  7259  17D0  0500               	andwf	0,w
  7260  17D1  00A5               	movwf	??_aht_readSensor+5
  7261  17D2  0A84               	incf	4,f
  7262  17D3  3000               	movlw	0
  7263  17D4  0500               	andwf	0,w
  7264  17D5  00A6               	movwf	??_aht_readSensor+6
  7265  17D6  0A84               	incf	4,f
  7266  17D7  3000               	movlw	0
  7267  17D8  0500               	andwf	0,w
  7268  17D9  00A7               	movwf	??_aht_readSensor+7
  7269  17DA  3010               	movlw	16
  7270  17DB                     u3355:
  7271  17DB  1003               	clrc
  7272  17DC  0DA4               	rlf	??_aht_readSensor+4,f
  7273  17DD  0DA5               	rlf	??_aht_readSensor+5,f
  7274  17DE  0DA6               	rlf	??_aht_readSensor+6,f
  7275  17DF  0DA7               	rlf	??_aht_readSensor+7,f
  7276  17E0                     u3350:
  7277  17E0  3EFF               	addlw	-1
  7278  17E1  1D03               	skipz
  7279  17E2  2FDB               	goto	u3355
  7280  17E3  0824               	movf	??_aht_readSensor+4,w
  7281  17E4  04A0               	iorwf	??_aht_readSensor,f
  7282  17E5  0825               	movf	??_aht_readSensor+5,w
  7283  17E6  04A1               	iorwf	??_aht_readSensor+1,f
  7284  17E7  0826               	movf	??_aht_readSensor+6,w
  7285  17E8  04A2               	iorwf	??_aht_readSensor+2,f
  7286  17E9  0827               	movf	??_aht_readSensor+7,w
  7287  17EA  04A3               	iorwf	??_aht_readSensor+3,f
  7288  17EB  0840               	movf	aht_readSensor@temp+20,w
  7289  17EC  0420               	iorwf	??_aht_readSensor,w
  7290  17ED  00C4               	movwf	aht_readSensor@result
  7291  17EE  0841               	movf	aht_readSensor@temp+21,w
  7292  17EF  0421               	iorwf	??_aht_readSensor+1,w
  7293  17F0  00C5               	movwf	aht_readSensor@result+1
  7294  17F1  0842               	movf	aht_readSensor@temp+22,w
  7295  17F2  0422               	iorwf	??_aht_readSensor+2,w
  7296  17F3  00C6               	movwf	aht_readSensor@result+2
  7297  17F4  0843               	movf	aht_readSensor@temp+23,w
  7298  17F5  0423               	iorwf	??_aht_readSensor+3,w
  7299  17F6  00C7               	movwf	aht_readSensor@result+3
  7300  17F7                     l2452:
  7301                           
  7302                           ;aht10.c: 97:     return result;
  7303  17F7  0847               	movf	aht_readSensor@result+3,w
  7304  17F8  00F9               	movwf	?_aht_readSensor+3
  7305  17F9  0846               	movf	aht_readSensor@result+2,w
  7306  17FA  00F8               	movwf	?_aht_readSensor+2
  7307  17FB  0845               	movf	aht_readSensor@result+1,w
  7308  17FC  00F7               	movwf	?_aht_readSensor+1
  7309  17FD  0844               	movf	aht_readSensor@result,w
  7310  17FE  00F6               	movwf	?_aht_readSensor
  7311  17FF                     l164:
  7312  17FF  0008               	return
  7313  1800                     __end_of_aht_readSensor:
  7314                           
  7315                           	psect	text27
  7316  0802                     __ptext27:	
  7317 ;; *************** function _I2C_Master_Write *****************
  7318 ;; Defined at:
  7319 ;;		line 65 in file "I2C.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;  d               2    0[COMMON] unsigned int 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;		None
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, status,2, status,0, pclath, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7333 ;;      Params:         2       0       0       0       0
  7334 ;;      Locals:         0       0       0       0       0
  7335 ;;      Temps:          0       0       0       0       0
  7336 ;;      Totals:         2       0       0       0       0
  7337 ;;Total ram usage:        2 bytes
  7338 ;; Hardware stack levels used:    1
  7339 ;; Hardware stack levels required when called:    1
  7340 ;; This function calls:
  7341 ;;		_I2C_Master_Wait
  7342 ;; This function is called by:
  7343 ;;		_main
  7344 ;;		_aht_readSensor
  7345 ;;		_aht_begin
  7346 ;;		_aht_Reset
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           
  7351                           ;psect for function _I2C_Master_Write
  7352  0802                     _I2C_Master_Write:
  7353  0802                     l2138:	
  7354                           ;incstack = 0
  7355                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  7356                           
  7357                           
  7358                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  7359  0802  160A  158A  2575  120A  158A  	fcall	_I2C_Master_Wait
  7360  0807                     l2140:
  7361                           
  7362                           ;I2C.c: 68:     SSPBUF = d;
  7363  0807  0870               	movf	I2C_Master_Write@d,w
  7364  0808  1283               	bcf	3,5	;RP0=0, select bank0
  7365  0809  1303               	bcf	3,6	;RP1=0, select bank0
  7366  080A  0093               	movwf	19	;volatile
  7367  080B                     l102:
  7368  080B  0008               	return
  7369  080C                     __end_of_I2C_Master_Write:
  7370                           
  7371                           	psect	text28
  7372  1D6C                     __ptext28:	
  7373 ;; *************** function _I2C_Master_Stop *****************
  7374 ;; Defined at:
  7375 ;;		line 55 in file "I2C.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;		None
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      void 
  7382 ;; Registers used:
  7383 ;;		wreg, status,2, status,0, pclath, cstack
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7389 ;;      Params:         0       0       0       0       0
  7390 ;;      Locals:         0       0       0       0       0
  7391 ;;      Temps:          0       0       0       0       0
  7392 ;;      Totals:         0       0       0       0       0
  7393 ;;Total ram usage:        0 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; Hardware stack levels required when called:    1
  7396 ;; This function calls:
  7397 ;;		_I2C_Master_Wait
  7398 ;; This function is called by:
  7399 ;;		_aht_readSensor
  7400 ;;		_aht_begin
  7401 ;;		_aht_Reset
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           
  7406                           ;psect for function _I2C_Master_Stop
  7407  1D6C                     _I2C_Master_Stop:
  7408  1D6C                     l2142:	
  7409                           ;incstack = 0
  7410                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  7411                           
  7412                           
  7413                           ;I2C.c: 57:     I2C_Master_Wait();
  7414  1D6C  160A  158A  2575  160A  158A  	fcall	_I2C_Master_Wait
  7415  1D71                     l2144:
  7416                           
  7417                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  7418  1D71  1683               	bsf	3,5	;RP0=1, select bank1
  7419  1D72  1303               	bcf	3,6	;RP1=0, select bank1
  7420  1D73  1511               	bsf	17,2	;volatile
  7421  1D74                     l99:
  7422  1D74  0008               	return
  7423  1D75                     __end_of_I2C_Master_Stop:
  7424                           
  7425                           	psect	text29
  7426  1D63                     __ptext29:	
  7427 ;; *************** function _I2C_Master_Start *****************
  7428 ;; Defined at:
  7429 ;;		line 39 in file "I2C.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;		None
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;		None
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  1    wreg      void 
  7436 ;; Registers used:
  7437 ;;		wreg, status,2, status,0, pclath, cstack
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7443 ;;      Params:         0       0       0       0       0
  7444 ;;      Locals:         0       0       0       0       0
  7445 ;;      Temps:          0       0       0       0       0
  7446 ;;      Totals:         0       0       0       0       0
  7447 ;;Total ram usage:        0 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:    1
  7450 ;; This function calls:
  7451 ;;		_I2C_Master_Wait
  7452 ;; This function is called by:
  7453 ;;		_main
  7454 ;;		_aht_readSensor
  7455 ;;		_aht_begin
  7456 ;;		_aht_readStatus
  7457 ;;		_aht_Reset
  7458 ;; This function uses a non-reentrant model
  7459 ;;
  7460                           
  7461                           
  7462                           ;psect for function _I2C_Master_Start
  7463  1D63                     _I2C_Master_Start:
  7464  1D63                     l2134:	
  7465                           ;incstack = 0
  7466                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  7467                           
  7468                           
  7469                           ;I2C.c: 41:     I2C_Master_Wait();
  7470  1D63  160A  158A  2575  160A  158A  	fcall	_I2C_Master_Wait
  7471  1D68                     l2136:
  7472                           
  7473                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  7474  1D68  1683               	bsf	3,5	;RP0=1, select bank1
  7475  1D69  1303               	bcf	3,6	;RP1=0, select bank1
  7476  1D6A  1411               	bsf	17,0	;volatile
  7477  1D6B                     l93:
  7478  1D6B  0008               	return
  7479  1D6C                     __end_of_I2C_Master_Start:
  7480                           
  7481                           	psect	text30
  7482  1E4A                     __ptext30:	
  7483 ;; *************** function _I2C_Master_Read *****************
  7484 ;; Defined at:
  7485 ;;		line 74 in file "I2C.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;  a               2    0[COMMON] unsigned short 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;  temp            2    4[COMMON] unsigned short 
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  2    0[COMMON] unsigned short 
  7492 ;; Registers used:
  7493 ;;		wreg, status,2, status,0, pclath, cstack
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7499 ;;      Params:         2       0       0       0       0
  7500 ;;      Locals:         2       0       0       0       0
  7501 ;;      Temps:          2       0       0       0       0
  7502 ;;      Totals:         6       0       0       0       0
  7503 ;;Total ram usage:        6 bytes
  7504 ;; Hardware stack levels used:    1
  7505 ;; Hardware stack levels required when called:    1
  7506 ;; This function calls:
  7507 ;;		_I2C_Master_Wait
  7508 ;; This function is called by:
  7509 ;;		_aht_readSensor
  7510 ;;		_aht_readStatus
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           
  7515                           ;psect for function _I2C_Master_Read
  7516  1E4A                     _I2C_Master_Read:
  7517  1E4A                     l2146:	
  7518                           ;incstack = 0
  7519                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  7520                           
  7521                           
  7522                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  7523  1E4A  160A  158A  2575  160A  158A  	fcall	_I2C_Master_Wait
  7524  1E4F                     l2148:
  7525                           
  7526                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  7527  1E4F  1683               	bsf	3,5	;RP0=1, select bank1
  7528  1E50  1303               	bcf	3,6	;RP1=0, select bank1
  7529  1E51  1591               	bsf	17,3	;volatile
  7530                           
  7531                           ;I2C.c: 79:     I2C_Master_Wait();
  7532  1E52  160A  158A  2575  160A  158A  	fcall	_I2C_Master_Wait
  7533  1E57                     l2150:
  7534                           
  7535                           ;I2C.c: 80:     temp = SSPBUF;
  7536  1E57  1283               	bcf	3,5	;RP0=0, select bank0
  7537  1E58  1303               	bcf	3,6	;RP1=0, select bank0
  7538  1E59  0813               	movf	19,w	;volatile
  7539  1E5A  00F2               	movwf	??_I2C_Master_Read
  7540  1E5B  01F3               	clrf	??_I2C_Master_Read+1
  7541  1E5C  0872               	movf	??_I2C_Master_Read,w
  7542  1E5D  00F4               	movwf	I2C_Master_Read@temp
  7543  1E5E  0873               	movf	??_I2C_Master_Read+1,w
  7544  1E5F  00F5               	movwf	I2C_Master_Read@temp+1
  7545  1E60                     l2152:
  7546                           
  7547                           ;I2C.c: 81:     I2C_Master_Wait();
  7548  1E60  160A  158A  2575  160A  158A  	fcall	_I2C_Master_Wait
  7549  1E65                     l2154:
  7550                           
  7551                           ;I2C.c: 82:     if(a == 1){
  7552  1E65  0370               	decf	I2C_Master_Read@a,w
  7553  1E66  0471               	iorwf	I2C_Master_Read@a+1,w
  7554  1E67  1D03               	btfss	3,2
  7555  1E68  2E6A               	goto	u2541
  7556  1E69  2E6B               	goto	u2540
  7557  1E6A                     u2541:
  7558  1E6A  2E6F               	goto	l105
  7559  1E6B                     u2540:
  7560  1E6B                     l2156:
  7561                           
  7562                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  7563  1E6B  1683               	bsf	3,5	;RP0=1, select bank1
  7564  1E6C  1303               	bcf	3,6	;RP1=0, select bank1
  7565  1E6D  1291               	bcf	17,5	;volatile
  7566                           
  7567                           ;I2C.c: 84:     }else{
  7568  1E6E  2E72               	goto	l106
  7569  1E6F                     l105:
  7570                           
  7571                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  7572  1E6F  1683               	bsf	3,5	;RP0=1, select bank1
  7573  1E70  1303               	bcf	3,6	;RP1=0, select bank1
  7574  1E71  1691               	bsf	17,5	;volatile
  7575  1E72                     l106:	
  7576                           ;I2C.c: 86:     }
  7577                           
  7578                           
  7579                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  7580  1E72  1611               	bsf	17,4	;volatile
  7581  1E73                     l2158:
  7582                           
  7583                           ;I2C.c: 88:     return temp;
  7584  1E73  0875               	movf	I2C_Master_Read@temp+1,w
  7585  1E74  00F1               	movwf	?_I2C_Master_Read+1
  7586  1E75  0874               	movf	I2C_Master_Read@temp,w
  7587  1E76  00F0               	movwf	?_I2C_Master_Read
  7588  1E77                     l107:
  7589  1E77  0008               	return
  7590  1E78                     __end_of_I2C_Master_Read:
  7591                           
  7592                           	psect	text31
  7593  1D75                     __ptext31:	
  7594 ;; *************** function _I2C_Master_Wait *****************
  7595 ;; Defined at:
  7596 ;;		line 32 in file "I2C.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;		None
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;		None
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  1    wreg      void 
  7603 ;; Registers used:
  7604 ;;		wreg, status,2
  7605 ;; Tracked objects:
  7606 ;;		On entry : 0/0
  7607 ;;		On exit  : 0/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7610 ;;      Params:         0       0       0       0       0
  7611 ;;      Locals:         0       0       0       0       0
  7612 ;;      Temps:          0       0       0       0       0
  7613 ;;      Totals:         0       0       0       0       0
  7614 ;;Total ram usage:        0 bytes
  7615 ;; Hardware stack levels used:    1
  7616 ;; This function calls:
  7617 ;;		Nothing
  7618 ;; This function is called by:
  7619 ;;		_I2C_Master_Start
  7620 ;;		_I2C_Master_Stop
  7621 ;;		_I2C_Master_Write
  7622 ;;		_I2C_Master_Read
  7623 ;;		_I2C_Master_RepeatedStart
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           
  7628                           ;psect for function _I2C_Master_Wait
  7629  1D75                     _I2C_Master_Wait:
  7630  1D75                     l2098:	
  7631                           ;incstack = 0
  7632                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  7633                           
  7634  1D75                     l87:	
  7635                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  7636                           
  7637  1D75  1683               	bsf	3,5	;RP0=1, select bank1
  7638  1D76  1303               	bcf	3,6	;RP1=0, select bank1
  7639  1D77  1914               	btfsc	20,2	;volatile
  7640  1D78  2D7A               	goto	u2401
  7641  1D79  2D7B               	goto	u2400
  7642  1D7A                     u2401:
  7643  1D7A  2D75               	goto	l87
  7644  1D7B                     u2400:
  7645  1D7B                     l2100:
  7646  1D7B  0811               	movf	17,w	;volatile
  7647  1D7C  391F               	andlw	31
  7648  1D7D  1D03               	btfss	3,2
  7649  1D7E  2D80               	goto	u2411
  7650  1D7F  2D81               	goto	u2410
  7651  1D80                     u2411:
  7652  1D80  2D75               	goto	l87
  7653  1D81                     u2410:
  7654  1D81                     l90:
  7655  1D81  0008               	return
  7656  1D82                     __end_of_I2C_Master_Wait:
  7657                           
  7658                           	psect	text32
  7659  1E78                     __ptext32:	
  7660 ;; *************** function ___lltoft *****************
  7661 ;; Defined at:
  7662 ;;		line 35 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lltoft.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;  c               4   10[COMMON] unsigned long 
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;  exp             1   42[BANK0 ] unsigned char 
  7667 ;; Return value:  Size  Location     Type
  7668 ;;                  3   10[COMMON] float 
  7669 ;; Registers used:
  7670 ;;		wreg, status,2, status,0, pclath, cstack
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7676 ;;      Params:         4       0       0       0       0
  7677 ;;      Locals:         0       1       0       0       0
  7678 ;;      Temps:          0       1       0       0       0
  7679 ;;      Totals:         4       2       0       0       0
  7680 ;;Total ram usage:        6 bytes
  7681 ;; Hardware stack levels used:    1
  7682 ;; Hardware stack levels required when called:    1
  7683 ;; This function calls:
  7684 ;;		___ftpack
  7685 ;; This function is called by:
  7686 ;;		_aht_GetHumidity
  7687 ;;		_aht_GetTemperature
  7688 ;;		_sprintf
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           
  7693                           ;psect for function ___lltoft
  7694  1E78                     ___lltoft:
  7695  1E78                     l2852:	
  7696                           ;incstack = 0
  7697                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  7698                           
  7699  1E78  308E               	movlw	142
  7700  1E79  1283               	bcf	3,5	;RP0=0, select bank0
  7701  1E7A  1303               	bcf	3,6	;RP1=0, select bank0
  7702  1E7B  00C9               	movwf	??___lltoft
  7703  1E7C  0849               	movf	??___lltoft,w
  7704  1E7D  00CA               	movwf	___lltoft@exp
  7705  1E7E  2E8C               	goto	l2856
  7706  1E7F                     l2854:
  7707  1E7F  3001               	movlw	1
  7708  1E80                     u4205:
  7709  1E80  1003               	clrc
  7710  1E81  0CFD               	rrf	___lltoft@c+3,f
  7711  1E82  0CFC               	rrf	___lltoft@c+2,f
  7712  1E83  0CFB               	rrf	___lltoft@c+1,f
  7713  1E84  0CFA               	rrf	___lltoft@c,f
  7714  1E85  3EFF               	addlw	-1
  7715  1E86  1D03               	skipz
  7716  1E87  2E80               	goto	u4205
  7717  1E88  3001               	movlw	1
  7718  1E89  00C9               	movwf	??___lltoft
  7719  1E8A  0849               	movf	??___lltoft,w
  7720  1E8B  07CA               	addwf	___lltoft@exp,f
  7721  1E8C                     l2856:
  7722  1E8C  30FF               	movlw	255
  7723  1E8D  057D               	andwf	___lltoft@c+3,w
  7724  1E8E  1D03               	btfss	3,2
  7725  1E8F  2E91               	goto	u4211
  7726  1E90  2E92               	goto	u4210
  7727  1E91                     u4211:
  7728  1E91  2E7F               	goto	l2854
  7729  1E92                     u4210:
  7730  1E92                     l2858:
  7731  1E92  087A               	movf	___lltoft@c,w
  7732  1E93  00F0               	movwf	___ftpack@arg
  7733  1E94  087B               	movf	___lltoft@c+1,w
  7734  1E95  00F1               	movwf	___ftpack@arg+1
  7735  1E96  087C               	movf	___lltoft@c+2,w
  7736  1E97  00F2               	movwf	___ftpack@arg+2
  7737  1E98  084A               	movf	___lltoft@exp,w
  7738  1E99  00C9               	movwf	??___lltoft
  7739  1E9A  0849               	movf	??___lltoft,w
  7740  1E9B  00F3               	movwf	___ftpack@exp
  7741  1E9C  01F4               	clrf	___ftpack@sign
  7742  1E9D  160A  118A  2266  160A  158A  	fcall	___ftpack
  7743  1EA2  0870               	movf	?___ftpack,w
  7744  1EA3  00FA               	movwf	?___lltoft
  7745  1EA4  0871               	movf	?___ftpack+1,w
  7746  1EA5  00FB               	movwf	?___lltoft+1
  7747  1EA6  0872               	movf	?___ftpack+2,w
  7748  1EA7  00FC               	movwf	?___lltoft+2
  7749  1EA8                     l777:
  7750  1EA8  0008               	return
  7751  1EA9                     __end_of___lltoft:
  7752                           
  7753                           	psect	text33
  7754  000D                     __ptext33:	
  7755 ;; *************** function ___ftmul *****************
  7756 ;; Defined at:
  7757 ;;		line 62 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftmul.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;  f1              3    8[BANK0 ] float 
  7760 ;;  f2              3   11[BANK0 ] float 
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
  7763 ;;  sign            1   23[BANK0 ] unsigned char 
  7764 ;;  cntr            1   22[BANK0 ] unsigned char 
  7765 ;;  exp             1   18[BANK0 ] unsigned char 
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  3    8[BANK0 ] float 
  7768 ;; Registers used:
  7769 ;;		wreg, status,2, status,0, pclath, cstack
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7775 ;;      Params:         0       6       0       0       0
  7776 ;;      Locals:         0       6       0       0       0
  7777 ;;      Temps:          0       4       0       0       0
  7778 ;;      Totals:         0      16       0       0       0
  7779 ;;Total ram usage:       16 bytes
  7780 ;; Hardware stack levels used:    1
  7781 ;; Hardware stack levels required when called:    1
  7782 ;; This function calls:
  7783 ;;		___ftpack
  7784 ;; This function is called by:
  7785 ;;		_aht_GetHumidity
  7786 ;;		_aht_GetTemperature
  7787 ;;		_fround
  7788 ;;		_scale
  7789 ;;		_sprintf
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           
  7794                           ;psect for function ___ftmul
  7795  000D                     ___ftmul:
  7796  000D                     l2328:	
  7797                           ;incstack = 0
  7798                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7799                           
  7800  000D  1283               	bcf	3,5	;RP0=0, select bank0
  7801  000E  1303               	bcf	3,6	;RP1=0, select bank0
  7802  000F  0828               	movf	___ftmul@f1,w
  7803  0010  00AE               	movwf	??___ftmul
  7804  0011  0829               	movf	___ftmul@f1+1,w
  7805  0012  00AF               	movwf	??___ftmul+1
  7806  0013  082A               	movf	___ftmul@f1+2,w
  7807  0014  00B0               	movwf	??___ftmul+2
  7808  0015  1003               	clrc
  7809  0016  0D2F               	rlf	??___ftmul+1,w
  7810  0017  0D30               	rlf	??___ftmul+2,w
  7811  0018  00B1               	movwf	??___ftmul+3
  7812  0019  0831               	movf	??___ftmul+3,w
  7813  001A  00B2               	movwf	___ftmul@exp
  7814  001B  0832               	movf	___ftmul@exp,w
  7815  001C  1D03               	btfss	3,2
  7816  001D  281F               	goto	u3001
  7817  001E  2820               	goto	u3000
  7818  001F                     u3001:
  7819  001F  2827               	goto	l2334
  7820  0020                     u3000:
  7821  0020                     l2330:
  7822  0020  3000               	movlw	0
  7823  0021  00A8               	movwf	?___ftmul
  7824  0022  3000               	movlw	0
  7825  0023  00A9               	movwf	?___ftmul+1
  7826  0024  3000               	movlw	0
  7827  0025  00AA               	movwf	?___ftmul+2
  7828  0026  28F1               	goto	l707
  7829  0027                     l2334:
  7830  0027  082B               	movf	___ftmul@f2,w
  7831  0028  00AE               	movwf	??___ftmul
  7832  0029  082C               	movf	___ftmul@f2+1,w
  7833  002A  00AF               	movwf	??___ftmul+1
  7834  002B  082D               	movf	___ftmul@f2+2,w
  7835  002C  00B0               	movwf	??___ftmul+2
  7836  002D  1003               	clrc
  7837  002E  0D2F               	rlf	??___ftmul+1,w
  7838  002F  0D30               	rlf	??___ftmul+2,w
  7839  0030  00B1               	movwf	??___ftmul+3
  7840  0031  0831               	movf	??___ftmul+3,w
  7841  0032  00B7               	movwf	___ftmul@sign
  7842  0033  0837               	movf	___ftmul@sign,w
  7843  0034  1D03               	btfss	3,2
  7844  0035  2837               	goto	u3011
  7845  0036  2838               	goto	u3010
  7846  0037                     u3011:
  7847  0037  283F               	goto	l2340
  7848  0038                     u3010:
  7849  0038                     l2336:
  7850  0038  3000               	movlw	0
  7851  0039  00A8               	movwf	?___ftmul
  7852  003A  3000               	movlw	0
  7853  003B  00A9               	movwf	?___ftmul+1
  7854  003C  3000               	movlw	0
  7855  003D  00AA               	movwf	?___ftmul+2
  7856  003E  28F1               	goto	l707
  7857  003F                     l2340:
  7858  003F  0837               	movf	___ftmul@sign,w
  7859  0040  3E7B               	addlw	123
  7860  0041  00AE               	movwf	??___ftmul
  7861  0042  082E               	movf	??___ftmul,w
  7862  0043  07B2               	addwf	___ftmul@exp,f
  7863  0044  0828               	movf	___ftmul@f1,w
  7864  0045  00AE               	movwf	??___ftmul
  7865  0046  0829               	movf	___ftmul@f1+1,w
  7866  0047  00AF               	movwf	??___ftmul+1
  7867  0048  082A               	movf	___ftmul@f1+2,w
  7868  0049  00B0               	movwf	??___ftmul+2
  7869  004A  3010               	movlw	16
  7870  004B                     u3025:
  7871  004B  1003               	clrc
  7872  004C  0CB0               	rrf	??___ftmul+2,f
  7873  004D  0CAF               	rrf	??___ftmul+1,f
  7874  004E  0CAE               	rrf	??___ftmul,f
  7875  004F                     u3020:
  7876  004F  3EFF               	addlw	-1
  7877  0050  1D03               	skipz
  7878  0051  284B               	goto	u3025
  7879  0052  082E               	movf	??___ftmul,w
  7880  0053  00B1               	movwf	??___ftmul+3
  7881  0054  0831               	movf	??___ftmul+3,w
  7882  0055  00B7               	movwf	___ftmul@sign
  7883  0056  082B               	movf	___ftmul@f2,w
  7884  0057  00AE               	movwf	??___ftmul
  7885  0058  082C               	movf	___ftmul@f2+1,w
  7886  0059  00AF               	movwf	??___ftmul+1
  7887  005A  082D               	movf	___ftmul@f2+2,w
  7888  005B  00B0               	movwf	??___ftmul+2
  7889  005C  3010               	movlw	16
  7890  005D                     u3035:
  7891  005D  1003               	clrc
  7892  005E  0CB0               	rrf	??___ftmul+2,f
  7893  005F  0CAF               	rrf	??___ftmul+1,f
  7894  0060  0CAE               	rrf	??___ftmul,f
  7895  0061                     u3030:
  7896  0061  3EFF               	addlw	-1
  7897  0062  1D03               	skipz
  7898  0063  285D               	goto	u3035
  7899  0064  082E               	movf	??___ftmul,w
  7900  0065  00B1               	movwf	??___ftmul+3
  7901  0066  0831               	movf	??___ftmul+3,w
  7902  0067  06B7               	xorwf	___ftmul@sign,f
  7903  0068  3080               	movlw	128
  7904  0069  00AE               	movwf	??___ftmul
  7905  006A  082E               	movf	??___ftmul,w
  7906  006B  05B7               	andwf	___ftmul@sign,f
  7907  006C                     l2342:
  7908  006C  17A9               	bsf	___ftmul@f1+1,7
  7909  006D                     l2344:
  7910  006D  17AC               	bsf	___ftmul@f2+1,7
  7911  006E                     l2346:
  7912  006E  30FF               	movlw	255
  7913  006F  05AB               	andwf	___ftmul@f2,f
  7914  0070  30FF               	movlw	255
  7915  0071  05AC               	andwf	___ftmul@f2+1,f
  7916  0072  3000               	movlw	0
  7917  0073  05AD               	andwf	___ftmul@f2+2,f
  7918  0074                     l2348:
  7919  0074  3000               	movlw	0
  7920  0075  00B3               	movwf	___ftmul@f3_as_product
  7921  0076  3000               	movlw	0
  7922  0077  00B4               	movwf	___ftmul@f3_as_product+1
  7923  0078  3000               	movlw	0
  7924  0079  00B5               	movwf	___ftmul@f3_as_product+2
  7925  007A                     l2350:
  7926  007A  3007               	movlw	7
  7927  007B  00AE               	movwf	??___ftmul
  7928  007C  082E               	movf	??___ftmul,w
  7929  007D  00B6               	movwf	___ftmul@cntr
  7930  007E                     l2352:
  7931  007E  1C28               	btfss	___ftmul@f1,0
  7932  007F  2881               	goto	u3041
  7933  0080  2882               	goto	u3040
  7934  0081                     u3041:
  7935  0081  2892               	goto	l2356
  7936  0082                     u3040:
  7937  0082                     l2354:
  7938  0082  082B               	movf	___ftmul@f2,w
  7939  0083  07B3               	addwf	___ftmul@f3_as_product,f
  7940  0084  082C               	movf	___ftmul@f2+1,w
  7941  0085  1103               	clrz
  7942  0086  1803               	skipnc
  7943  0087  0A2C               	incf	___ftmul@f2+1,w
  7944  0088  1903               	skipnz
  7945  0089  288B               	goto	u3051
  7946  008A  07B4               	addwf	___ftmul@f3_as_product+1,f
  7947  008B                     u3051:
  7948  008B  082D               	movf	___ftmul@f2+2,w
  7949  008C  1103               	clrz
  7950  008D  1803               	skipnc
  7951  008E  0A2D               	incf	___ftmul@f2+2,w
  7952  008F  1903               	skipnz
  7953  0090  2892               	goto	u3052
  7954  0091  07B5               	addwf	___ftmul@f3_as_product+2,f
  7955  0092                     u3052:
  7956  0092                     l2356:
  7957  0092  3001               	movlw	1
  7958  0093                     u3065:
  7959  0093  1003               	clrc
  7960  0094  0CAA               	rrf	___ftmul@f1+2,f
  7961  0095  0CA9               	rrf	___ftmul@f1+1,f
  7962  0096  0CA8               	rrf	___ftmul@f1,f
  7963  0097  3EFF               	addlw	-1
  7964  0098  1D03               	skipz
  7965  0099  2893               	goto	u3065
  7966  009A                     l2358:
  7967  009A  3001               	movlw	1
  7968  009B                     u3075:
  7969  009B  1003               	clrc
  7970  009C  0DAB               	rlf	___ftmul@f2,f
  7971  009D  0DAC               	rlf	___ftmul@f2+1,f
  7972  009E  0DAD               	rlf	___ftmul@f2+2,f
  7973  009F  3EFF               	addlw	-1
  7974  00A0  1D03               	skipz
  7975  00A1  289B               	goto	u3075
  7976  00A2                     l2360:
  7977  00A2  3001               	movlw	1
  7978  00A3  02B6               	subwf	___ftmul@cntr,f
  7979  00A4  1D03               	btfss	3,2
  7980  00A5  28A7               	goto	u3081
  7981  00A6  28A8               	goto	u3080
  7982  00A7                     u3081:
  7983  00A7  287E               	goto	l2352
  7984  00A8                     u3080:
  7985  00A8                     l2362:
  7986  00A8  3009               	movlw	9
  7987  00A9  00AE               	movwf	??___ftmul
  7988  00AA  082E               	movf	??___ftmul,w
  7989  00AB  00B6               	movwf	___ftmul@cntr
  7990  00AC                     l2364:
  7991  00AC  1C28               	btfss	___ftmul@f1,0
  7992  00AD  28AF               	goto	u3091
  7993  00AE  28B0               	goto	u3090
  7994  00AF                     u3091:
  7995  00AF  28C0               	goto	l2368
  7996  00B0                     u3090:
  7997  00B0                     l2366:
  7998  00B0  082B               	movf	___ftmul@f2,w
  7999  00B1  07B3               	addwf	___ftmul@f3_as_product,f
  8000  00B2  082C               	movf	___ftmul@f2+1,w
  8001  00B3  1103               	clrz
  8002  00B4  1803               	skipnc
  8003  00B5  0A2C               	incf	___ftmul@f2+1,w
  8004  00B6  1903               	skipnz
  8005  00B7  28B9               	goto	u3101
  8006  00B8  07B4               	addwf	___ftmul@f3_as_product+1,f
  8007  00B9                     u3101:
  8008  00B9  082D               	movf	___ftmul@f2+2,w
  8009  00BA  1103               	clrz
  8010  00BB  1803               	skipnc
  8011  00BC  0A2D               	incf	___ftmul@f2+2,w
  8012  00BD  1903               	skipnz
  8013  00BE  28C0               	goto	u3102
  8014  00BF  07B5               	addwf	___ftmul@f3_as_product+2,f
  8015  00C0                     u3102:
  8016  00C0                     l2368:
  8017  00C0  3001               	movlw	1
  8018  00C1                     u3115:
  8019  00C1  1003               	clrc
  8020  00C2  0CAA               	rrf	___ftmul@f1+2,f
  8021  00C3  0CA9               	rrf	___ftmul@f1+1,f
  8022  00C4  0CA8               	rrf	___ftmul@f1,f
  8023  00C5  3EFF               	addlw	-1
  8024  00C6  1D03               	skipz
  8025  00C7  28C1               	goto	u3115
  8026  00C8                     l2370:
  8027  00C8  3001               	movlw	1
  8028  00C9                     u3125:
  8029  00C9  1003               	clrc
  8030  00CA  0CB5               	rrf	___ftmul@f3_as_product+2,f
  8031  00CB  0CB4               	rrf	___ftmul@f3_as_product+1,f
  8032  00CC  0CB3               	rrf	___ftmul@f3_as_product,f
  8033  00CD  3EFF               	addlw	-1
  8034  00CE  1D03               	skipz
  8035  00CF  28C9               	goto	u3125
  8036  00D0                     l2372:
  8037  00D0  3001               	movlw	1
  8038  00D1  02B6               	subwf	___ftmul@cntr,f
  8039  00D2  1D03               	btfss	3,2
  8040  00D3  28D5               	goto	u3131
  8041  00D4  28D6               	goto	u3130
  8042  00D5                     u3131:
  8043  00D5  28AC               	goto	l2364
  8044  00D6                     u3130:
  8045  00D6                     l2374:
  8046  00D6  0833               	movf	___ftmul@f3_as_product,w
  8047  00D7  00F0               	movwf	___ftpack@arg
  8048  00D8  0834               	movf	___ftmul@f3_as_product+1,w
  8049  00D9  00F1               	movwf	___ftpack@arg+1
  8050  00DA  0835               	movf	___ftmul@f3_as_product+2,w
  8051  00DB  00F2               	movwf	___ftpack@arg+2
  8052  00DC  0832               	movf	___ftmul@exp,w
  8053  00DD  00AE               	movwf	??___ftmul
  8054  00DE  082E               	movf	??___ftmul,w
  8055  00DF  00F3               	movwf	___ftpack@exp
  8056  00E0  0837               	movf	___ftmul@sign,w
  8057  00E1  00AF               	movwf	??___ftmul+1
  8058  00E2  082F               	movf	??___ftmul+1,w
  8059  00E3  00F4               	movwf	___ftpack@sign
  8060  00E4  160A  118A  2266  120A  118A  	fcall	___ftpack
  8061  00E9  0870               	movf	?___ftpack,w
  8062  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  8063  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  8064  00EC  00A8               	movwf	?___ftmul
  8065  00ED  0871               	movf	?___ftpack+1,w
  8066  00EE  00A9               	movwf	?___ftmul+1
  8067  00EF  0872               	movf	?___ftpack+2,w
  8068  00F0  00AA               	movwf	?___ftmul+2
  8069  00F1                     l707:
  8070  00F1  0008               	return
  8071  00F2                     __end_of___ftmul:
  8072                           
  8073                           	psect	text34
  8074  156D                     __ptext34:	
  8075 ;; *************** function ___ftdiv *****************
  8076 ;; Defined at:
  8077 ;;		line 56 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftdiv.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;  f2              3   24[BANK0 ] float 
  8080 ;;  f1              3   27[BANK0 ] float 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;  f3              3   35[BANK0 ] float 
  8083 ;;  sign            1   39[BANK0 ] unsigned char 
  8084 ;;  exp             1   38[BANK0 ] unsigned char 
  8085 ;;  cntr            1   34[BANK0 ] unsigned char 
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  3   24[BANK0 ] float 
  8088 ;; Registers used:
  8089 ;;		wreg, status,2, status,0, pclath, cstack
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8095 ;;      Params:         0       6       0       0       0
  8096 ;;      Locals:         0       6       0       0       0
  8097 ;;      Temps:          0       4       0       0       0
  8098 ;;      Totals:         0      16       0       0       0
  8099 ;;Total ram usage:       16 bytes
  8100 ;; Hardware stack levels used:    1
  8101 ;; Hardware stack levels required when called:    1
  8102 ;; This function calls:
  8103 ;;		___ftpack
  8104 ;; This function is called by:
  8105 ;;		_aht_GetHumidity
  8106 ;;		_aht_GetTemperature
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110                           
  8111                           ;psect for function ___ftdiv
  8112  156D                     ___ftdiv:
  8113  156D                     l2712:	
  8114                           ;incstack = 0
  8115                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8116                           
  8117  156D  1283               	bcf	3,5	;RP0=0, select bank0
  8118  156E  1303               	bcf	3,6	;RP1=0, select bank0
  8119  156F  083B               	movf	___ftdiv@f1,w
  8120  1570  00BE               	movwf	??___ftdiv
  8121  1571  083C               	movf	___ftdiv@f1+1,w
  8122  1572  00BF               	movwf	??___ftdiv+1
  8123  1573  083D               	movf	___ftdiv@f1+2,w
  8124  1574  00C0               	movwf	??___ftdiv+2
  8125  1575  1003               	clrc
  8126  1576  0D3F               	rlf	??___ftdiv+1,w
  8127  1577  0D40               	rlf	??___ftdiv+2,w
  8128  1578  00C1               	movwf	??___ftdiv+3
  8129  1579  0841               	movf	??___ftdiv+3,w
  8130  157A  00C6               	movwf	___ftdiv@exp
  8131  157B  0846               	movf	___ftdiv@exp,w
  8132  157C  1D03               	btfss	3,2
  8133  157D  2D7F               	goto	u3911
  8134  157E  2D80               	goto	u3910
  8135  157F                     u3911:
  8136  157F  2D87               	goto	l2718
  8137  1580                     u3910:
  8138  1580                     l2714:
  8139  1580  3000               	movlw	0
  8140  1581  00B8               	movwf	?___ftdiv
  8141  1582  3000               	movlw	0
  8142  1583  00B9               	movwf	?___ftdiv+1
  8143  1584  3000               	movlw	0
  8144  1585  00BA               	movwf	?___ftdiv+2
  8145  1586  2E2E               	goto	l675
  8146  1587                     l2718:
  8147  1587  0838               	movf	___ftdiv@f2,w
  8148  1588  00BE               	movwf	??___ftdiv
  8149  1589  0839               	movf	___ftdiv@f2+1,w
  8150  158A  00BF               	movwf	??___ftdiv+1
  8151  158B  083A               	movf	___ftdiv@f2+2,w
  8152  158C  00C0               	movwf	??___ftdiv+2
  8153  158D  1003               	clrc
  8154  158E  0D3F               	rlf	??___ftdiv+1,w
  8155  158F  0D40               	rlf	??___ftdiv+2,w
  8156  1590  00C1               	movwf	??___ftdiv+3
  8157  1591  0841               	movf	??___ftdiv+3,w
  8158  1592  00C7               	movwf	___ftdiv@sign
  8159  1593  0847               	movf	___ftdiv@sign,w
  8160  1594  1D03               	btfss	3,2
  8161  1595  2D97               	goto	u3921
  8162  1596  2D98               	goto	u3920
  8163  1597                     u3921:
  8164  1597  2D9F               	goto	l2724
  8165  1598                     u3920:
  8166  1598                     l2720:
  8167  1598  3000               	movlw	0
  8168  1599  00B8               	movwf	?___ftdiv
  8169  159A  3000               	movlw	0
  8170  159B  00B9               	movwf	?___ftdiv+1
  8171  159C  3000               	movlw	0
  8172  159D  00BA               	movwf	?___ftdiv+2
  8173  159E  2E2E               	goto	l675
  8174  159F                     l2724:
  8175  159F  3000               	movlw	0
  8176  15A0  00C3               	movwf	___ftdiv@f3
  8177  15A1  3000               	movlw	0
  8178  15A2  00C4               	movwf	___ftdiv@f3+1
  8179  15A3  3000               	movlw	0
  8180  15A4  00C5               	movwf	___ftdiv@f3+2
  8181  15A5                     l2726:
  8182  15A5  3089               	movlw	137
  8183  15A6  0747               	addwf	___ftdiv@sign,w
  8184  15A7  00BE               	movwf	??___ftdiv
  8185  15A8  083E               	movf	??___ftdiv,w
  8186  15A9  02C6               	subwf	___ftdiv@exp,f
  8187  15AA                     l2728:
  8188  15AA  083B               	movf	___ftdiv@f1,w
  8189  15AB  00BE               	movwf	??___ftdiv
  8190  15AC  083C               	movf	___ftdiv@f1+1,w
  8191  15AD  00BF               	movwf	??___ftdiv+1
  8192  15AE  083D               	movf	___ftdiv@f1+2,w
  8193  15AF  00C0               	movwf	??___ftdiv+2
  8194  15B0  3010               	movlw	16
  8195  15B1                     u3935:
  8196  15B1  1003               	clrc
  8197  15B2  0CC0               	rrf	??___ftdiv+2,f
  8198  15B3  0CBF               	rrf	??___ftdiv+1,f
  8199  15B4  0CBE               	rrf	??___ftdiv,f
  8200  15B5                     u3930:
  8201  15B5  3EFF               	addlw	-1
  8202  15B6  1D03               	skipz
  8203  15B7  2DB1               	goto	u3935
  8204  15B8  083E               	movf	??___ftdiv,w
  8205  15B9  00C1               	movwf	??___ftdiv+3
  8206  15BA  0841               	movf	??___ftdiv+3,w
  8207  15BB  00C7               	movwf	___ftdiv@sign
  8208  15BC                     l2730:
  8209  15BC  0838               	movf	___ftdiv@f2,w
  8210  15BD  00BE               	movwf	??___ftdiv
  8211  15BE  0839               	movf	___ftdiv@f2+1,w
  8212  15BF  00BF               	movwf	??___ftdiv+1
  8213  15C0  083A               	movf	___ftdiv@f2+2,w
  8214  15C1  00C0               	movwf	??___ftdiv+2
  8215  15C2  3010               	movlw	16
  8216  15C3                     u3945:
  8217  15C3  1003               	clrc
  8218  15C4  0CC0               	rrf	??___ftdiv+2,f
  8219  15C5  0CBF               	rrf	??___ftdiv+1,f
  8220  15C6  0CBE               	rrf	??___ftdiv,f
  8221  15C7                     u3940:
  8222  15C7  3EFF               	addlw	-1
  8223  15C8  1D03               	skipz
  8224  15C9  2DC3               	goto	u3945
  8225  15CA  083E               	movf	??___ftdiv,w
  8226  15CB  00C1               	movwf	??___ftdiv+3
  8227  15CC  0841               	movf	??___ftdiv+3,w
  8228  15CD  06C7               	xorwf	___ftdiv@sign,f
  8229  15CE                     l2732:
  8230  15CE  3080               	movlw	128
  8231  15CF  00BE               	movwf	??___ftdiv
  8232  15D0  083E               	movf	??___ftdiv,w
  8233  15D1  05C7               	andwf	___ftdiv@sign,f
  8234  15D2                     l2734:
  8235  15D2  17BC               	bsf	___ftdiv@f1+1,7
  8236  15D3  30FF               	movlw	255
  8237  15D4  05BB               	andwf	___ftdiv@f1,f
  8238  15D5  30FF               	movlw	255
  8239  15D6  05BC               	andwf	___ftdiv@f1+1,f
  8240  15D7  3000               	movlw	0
  8241  15D8  05BD               	andwf	___ftdiv@f1+2,f
  8242  15D9                     l2736:
  8243  15D9  17B9               	bsf	___ftdiv@f2+1,7
  8244  15DA  30FF               	movlw	255
  8245  15DB  05B8               	andwf	___ftdiv@f2,f
  8246  15DC  30FF               	movlw	255
  8247  15DD  05B9               	andwf	___ftdiv@f2+1,f
  8248  15DE  3000               	movlw	0
  8249  15DF  05BA               	andwf	___ftdiv@f2+2,f
  8250  15E0  3018               	movlw	24
  8251  15E1  00BE               	movwf	??___ftdiv
  8252  15E2  083E               	movf	??___ftdiv,w
  8253  15E3  00C2               	movwf	___ftdiv@cntr
  8254  15E4                     l2738:
  8255  15E4  3001               	movlw	1
  8256  15E5                     u3955:
  8257  15E5  1003               	clrc
  8258  15E6  0DC3               	rlf	___ftdiv@f3,f
  8259  15E7  0DC4               	rlf	___ftdiv@f3+1,f
  8260  15E8  0DC5               	rlf	___ftdiv@f3+2,f
  8261  15E9  3EFF               	addlw	-1
  8262  15EA  1D03               	skipz
  8263  15EB  2DE5               	goto	u3955
  8264  15EC                     l2740:
  8265  15EC  083A               	movf	___ftdiv@f2+2,w
  8266  15ED  023D               	subwf	___ftdiv@f1+2,w
  8267  15EE  1D03               	skipz
  8268  15EF  2DF6               	goto	u3965
  8269  15F0  0839               	movf	___ftdiv@f2+1,w
  8270  15F1  023C               	subwf	___ftdiv@f1+1,w
  8271  15F2  1D03               	skipz
  8272  15F3  2DF6               	goto	u3965
  8273  15F4  0838               	movf	___ftdiv@f2,w
  8274  15F5  023B               	subwf	___ftdiv@f1,w
  8275  15F6                     u3965:
  8276  15F6  1C03               	skipc
  8277  15F7  2DF9               	goto	u3961
  8278  15F8  2DFA               	goto	u3960
  8279  15F9                     u3961:
  8280  15F9  2E05               	goto	l2746
  8281  15FA                     u3960:
  8282  15FA                     l2742:
  8283  15FA  0838               	movf	___ftdiv@f2,w
  8284  15FB  02BB               	subwf	___ftdiv@f1,f
  8285  15FC  0839               	movf	___ftdiv@f2+1,w
  8286  15FD  1C03               	skipc
  8287  15FE  0F39               	incfsz	___ftdiv@f2+1,w
  8288  15FF  02BC               	subwf	___ftdiv@f1+1,f
  8289  1600  083A               	movf	___ftdiv@f2+2,w
  8290  1601  1C03               	skipc
  8291  1602  0A3A               	incf	___ftdiv@f2+2,w
  8292  1603  02BD               	subwf	___ftdiv@f1+2,f
  8293  1604                     l2744:
  8294  1604  1443               	bsf	___ftdiv@f3,0
  8295  1605                     l2746:
  8296  1605  3001               	movlw	1
  8297  1606                     u3975:
  8298  1606  1003               	clrc
  8299  1607  0DBB               	rlf	___ftdiv@f1,f
  8300  1608  0DBC               	rlf	___ftdiv@f1+1,f
  8301  1609  0DBD               	rlf	___ftdiv@f1+2,f
  8302  160A  3EFF               	addlw	-1
  8303  160B  1D03               	skipz
  8304  160C  2E06               	goto	u3975
  8305  160D                     l2748:
  8306  160D  3001               	movlw	1
  8307  160E  02C2               	subwf	___ftdiv@cntr,f
  8308  160F  1D03               	btfss	3,2
  8309  1610  2E12               	goto	u3981
  8310  1611  2E13               	goto	u3980
  8311  1612                     u3981:
  8312  1612  2DE4               	goto	l2738
  8313  1613                     u3980:
  8314  1613                     l2750:
  8315  1613  0843               	movf	___ftdiv@f3,w
  8316  1614  00F0               	movwf	___ftpack@arg
  8317  1615  0844               	movf	___ftdiv@f3+1,w
  8318  1616  00F1               	movwf	___ftpack@arg+1
  8319  1617  0845               	movf	___ftdiv@f3+2,w
  8320  1618  00F2               	movwf	___ftpack@arg+2
  8321  1619  0846               	movf	___ftdiv@exp,w
  8322  161A  00BE               	movwf	??___ftdiv
  8323  161B  083E               	movf	??___ftdiv,w
  8324  161C  00F3               	movwf	___ftpack@exp
  8325  161D  0847               	movf	___ftdiv@sign,w
  8326  161E  00BF               	movwf	??___ftdiv+1
  8327  161F  083F               	movf	??___ftdiv+1,w
  8328  1620  00F4               	movwf	___ftpack@sign
  8329  1621  160A  118A  2266  160A  118A  	fcall	___ftpack
  8330  1626  0870               	movf	?___ftpack,w
  8331  1627  1283               	bcf	3,5	;RP0=0, select bank0
  8332  1628  1303               	bcf	3,6	;RP1=0, select bank0
  8333  1629  00B8               	movwf	?___ftdiv
  8334  162A  0871               	movf	?___ftpack+1,w
  8335  162B  00B9               	movwf	?___ftdiv+1
  8336  162C  0872               	movf	?___ftpack+2,w
  8337  162D  00BA               	movwf	?___ftdiv+2
  8338  162E                     l675:
  8339  162E  0008               	return
  8340  162F                     __end_of___ftdiv:
  8341                           
  8342                           	psect	text35
  8343  1266                     __ptext35:	
  8344 ;; *************** function ___ftpack *****************
  8345 ;; Defined at:
  8346 ;;		line 62 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\float.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  arg             3    0[COMMON] unsigned um
  8349 ;;  exp             1    3[COMMON] unsigned char 
  8350 ;;  sign            1    4[COMMON] unsigned char 
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;		None
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  3    0[COMMON] float 
  8355 ;; Registers used:
  8356 ;;		wreg, status,2, status,0
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8362 ;;      Params:         5       0       0       0       0
  8363 ;;      Locals:         0       0       0       0       0
  8364 ;;      Temps:          3       0       0       0       0
  8365 ;;      Totals:         8       0       0       0       0
  8366 ;;Total ram usage:        8 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; This function calls:
  8369 ;;		Nothing
  8370 ;; This function is called by:
  8371 ;;		___ftadd
  8372 ;;		___ftdiv
  8373 ;;		___ftmul
  8374 ;;		___lltoft
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           
  8379                           ;psect for function ___ftpack
  8380  1266                     ___ftpack:
  8381  1266                     l2102:	
  8382                           ;incstack = 0
  8383                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8384                           
  8385  1266  0873               	movf	___ftpack@exp,w
  8386  1267  1903               	btfsc	3,2
  8387  1268  2A6A               	goto	u2421
  8388  1269  2A6B               	goto	u2420
  8389  126A                     u2421:
  8390  126A  2A72               	goto	l2106
  8391  126B                     u2420:
  8392  126B                     l2104:
  8393  126B  0872               	movf	___ftpack@arg+2,w
  8394  126C  0471               	iorwf	___ftpack@arg+1,w
  8395  126D  0470               	iorwf	___ftpack@arg,w
  8396  126E  1D03               	skipz
  8397  126F  2A71               	goto	u2431
  8398  1270  2A72               	goto	u2430
  8399  1271                     u2431:
  8400  1271  2A85               	goto	l2112
  8401  1272                     u2430:
  8402  1272                     l2106:
  8403  1272  3000               	movlw	0
  8404  1273  00F0               	movwf	?___ftpack
  8405  1274  3000               	movlw	0
  8406  1275  00F1               	movwf	?___ftpack+1
  8407  1276  3000               	movlw	0
  8408  1277  00F2               	movwf	?___ftpack+2
  8409  1278  2AE1               	goto	l623
  8410  1279                     l2110:
  8411  1279  3001               	movlw	1
  8412  127A  00F5               	movwf	??___ftpack
  8413  127B  0875               	movf	??___ftpack,w
  8414  127C  07F3               	addwf	___ftpack@exp,f
  8415  127D  3001               	movlw	1
  8416  127E                     u2445:
  8417  127E  1003               	clrc
  8418  127F  0CF2               	rrf	___ftpack@arg+2,f
  8419  1280  0CF1               	rrf	___ftpack@arg+1,f
  8420  1281  0CF0               	rrf	___ftpack@arg,f
  8421  1282  3EFF               	addlw	-1
  8422  1283  1D03               	skipz
  8423  1284  2A7E               	goto	u2445
  8424  1285                     l2112:
  8425  1285  30FE               	movlw	254
  8426  1286  0572               	andwf	___ftpack@arg+2,w
  8427  1287  1D03               	btfss	3,2
  8428  1288  2A8A               	goto	u2451
  8429  1289  2A8B               	goto	u2450
  8430  128A                     u2451:
  8431  128A  2A79               	goto	l2110
  8432  128B                     u2450:
  8433  128B  2AA2               	goto	l627
  8434  128C                     l2114:
  8435  128C  3001               	movlw	1
  8436  128D  00F5               	movwf	??___ftpack
  8437  128E  0875               	movf	??___ftpack,w
  8438  128F  07F3               	addwf	___ftpack@exp,f
  8439  1290                     l2116:
  8440  1290  3001               	movlw	1
  8441  1291  07F0               	addwf	___ftpack@arg,f
  8442  1292  3000               	movlw	0
  8443  1293  1803               	skipnc
  8444  1294  3001               	movlw	1
  8445  1295  07F1               	addwf	___ftpack@arg+1,f
  8446  1296  3000               	movlw	0
  8447  1297  1803               	skipnc
  8448  1298  3001               	movlw	1
  8449  1299  07F2               	addwf	___ftpack@arg+2,f
  8450  129A                     l2118:
  8451  129A  3001               	movlw	1
  8452  129B                     u2465:
  8453  129B  1003               	clrc
  8454  129C  0CF2               	rrf	___ftpack@arg+2,f
  8455  129D  0CF1               	rrf	___ftpack@arg+1,f
  8456  129E  0CF0               	rrf	___ftpack@arg,f
  8457  129F  3EFF               	addlw	-1
  8458  12A0  1D03               	skipz
  8459  12A1  2A9B               	goto	u2465
  8460  12A2                     l627:
  8461  12A2  30FF               	movlw	255
  8462  12A3  0572               	andwf	___ftpack@arg+2,w
  8463  12A4  1D03               	btfss	3,2
  8464  12A5  2AA7               	goto	u2471
  8465  12A6  2AA8               	goto	u2470
  8466  12A7                     u2471:
  8467  12A7  2A8C               	goto	l2114
  8468  12A8                     u2470:
  8469  12A8  2AB3               	goto	l2122
  8470  12A9                     l2120:
  8471  12A9  3001               	movlw	1
  8472  12AA  02F3               	subwf	___ftpack@exp,f
  8473  12AB  3001               	movlw	1
  8474  12AC                     u2485:
  8475  12AC  1003               	clrc
  8476  12AD  0DF0               	rlf	___ftpack@arg,f
  8477  12AE  0DF1               	rlf	___ftpack@arg+1,f
  8478  12AF  0DF2               	rlf	___ftpack@arg+2,f
  8479  12B0  3EFF               	addlw	-1
  8480  12B1  1D03               	skipz
  8481  12B2  2AAC               	goto	u2485
  8482  12B3                     l2122:
  8483  12B3  1BF1               	btfsc	___ftpack@arg+1,7
  8484  12B4  2AB6               	goto	u2491
  8485  12B5  2AB7               	goto	u2490
  8486  12B6                     u2491:
  8487  12B6  2ABD               	goto	l634
  8488  12B7                     u2490:
  8489  12B7                     l2124:
  8490  12B7  3002               	movlw	2
  8491  12B8  0273               	subwf	___ftpack@exp,w
  8492  12B9  1803               	skipnc
  8493  12BA  2ABC               	goto	u2501
  8494  12BB  2ABD               	goto	u2500
  8495  12BC                     u2501:
  8496  12BC  2AA9               	goto	l2120
  8497  12BD                     u2500:
  8498  12BD                     l634:
  8499  12BD  1873               	btfsc	___ftpack@exp,0
  8500  12BE  2AC0               	goto	u2511
  8501  12BF  2AC1               	goto	u2510
  8502  12C0                     u2511:
  8503  12C0  2AC7               	goto	l635
  8504  12C1                     u2510:
  8505  12C1                     l2126:
  8506  12C1  30FF               	movlw	255
  8507  12C2  05F0               	andwf	___ftpack@arg,f
  8508  12C3  307F               	movlw	127
  8509  12C4  05F1               	andwf	___ftpack@arg+1,f
  8510  12C5  30FF               	movlw	255
  8511  12C6  05F2               	andwf	___ftpack@arg+2,f
  8512  12C7                     l635:
  8513  12C7  1003               	clrc
  8514  12C8  0CF3               	rrf	___ftpack@exp,f
  8515  12C9                     l2128:
  8516  12C9  0873               	movf	___ftpack@exp,w
  8517  12CA  00F5               	movwf	??___ftpack
  8518  12CB  01F6               	clrf	??___ftpack+1
  8519  12CC  01F7               	clrf	??___ftpack+2
  8520  12CD  3010               	movlw	16
  8521  12CE                     u2525:
  8522  12CE  1003               	clrc
  8523  12CF  0DF5               	rlf	??___ftpack,f
  8524  12D0  0DF6               	rlf	??___ftpack+1,f
  8525  12D1  0DF7               	rlf	??___ftpack+2,f
  8526  12D2                     u2520:
  8527  12D2  3EFF               	addlw	-1
  8528  12D3  1D03               	skipz
  8529  12D4  2ACE               	goto	u2525
  8530  12D5  0875               	movf	??___ftpack,w
  8531  12D6  04F0               	iorwf	___ftpack@arg,f
  8532  12D7  0876               	movf	??___ftpack+1,w
  8533  12D8  04F1               	iorwf	___ftpack@arg+1,f
  8534  12D9  0877               	movf	??___ftpack+2,w
  8535  12DA  04F2               	iorwf	___ftpack@arg+2,f
  8536  12DB                     l2130:
  8537  12DB  0874               	movf	___ftpack@sign,w
  8538  12DC  1903               	btfsc	3,2
  8539  12DD  2ADF               	goto	u2531
  8540  12DE  2AE0               	goto	u2530
  8541  12DF                     u2531:
  8542  12DF  2AE1               	goto	l636
  8543  12E0                     u2530:
  8544  12E0                     l2132:
  8545  12E0  17F2               	bsf	___ftpack@arg+2,7
  8546  12E1                     l636:
  8547  12E1                     l623:
  8548  12E1  0008               	return
  8549  12E2                     __end_of___ftpack:
  8550                           
  8551                           	psect	text36
  8552  1EA9                     __ptext36:	
  8553 ;; *************** function _I2C_Master_Init *****************
  8554 ;; Defined at:
  8555 ;;		line 16 in file "I2C.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;  c               4    0[BANK0 ] const unsigned long 
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;		None
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  1    wreg      void 
  8562 ;; Registers used:
  8563 ;;		wreg, status,2, status,0, pclath, cstack
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8569 ;;      Params:         0       4       0       0       0
  8570 ;;      Locals:         0       0       0       0       0
  8571 ;;      Temps:          0       4       0       0       0
  8572 ;;      Totals:         0       8       0       0       0
  8573 ;;Total ram usage:        8 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:    1
  8576 ;; This function calls:
  8577 ;;		___lldiv
  8578 ;; This function is called by:
  8579 ;;		_main
  8580 ;;		_aht_begin
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           
  8585                           ;psect for function _I2C_Master_Init
  8586  1EA9                     _I2C_Master_Init:
  8587  1EA9                     l2894:	
  8588                           ;incstack = 0
  8589                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  8590                           
  8591                           
  8592                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  8593  1EA9  3028               	movlw	40
  8594  1EAA  1283               	bcf	3,5	;RP0=0, select bank0
  8595  1EAB  1303               	bcf	3,6	;RP1=0, select bank0
  8596  1EAC  0094               	movwf	20	;volatile
  8597  1EAD                     l2896:
  8598                           
  8599                           ;I2C.c: 19:     SSPCON2 = 0;
  8600  1EAD  1683               	bsf	3,5	;RP0=1, select bank1
  8601  1EAE  1303               	bcf	3,6	;RP1=0, select bank1
  8602  1EAF  0191               	clrf	17	;volatile
  8603  1EB0                     l2898:
  8604                           
  8605                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  8606  1EB0  1283               	bcf	3,5	;RP0=0, select bank0
  8607  1EB1  1303               	bcf	3,6	;RP1=0, select bank0
  8608  1EB2  0820               	movf	I2C_Master_Init@c,w
  8609  1EB3  00A4               	movwf	??_I2C_Master_Init
  8610  1EB4  0821               	movf	I2C_Master_Init@c+1,w
  8611  1EB5  00A5               	movwf	??_I2C_Master_Init+1
  8612  1EB6  0822               	movf	I2C_Master_Init@c+2,w
  8613  1EB7  00A6               	movwf	??_I2C_Master_Init+2
  8614  1EB8  0823               	movf	I2C_Master_Init@c+3,w
  8615  1EB9  00A7               	movwf	??_I2C_Master_Init+3
  8616  1EBA  3002               	movlw	2
  8617  1EBB                     u4285:
  8618  1EBB  1003               	clrc
  8619  1EBC  0DA4               	rlf	??_I2C_Master_Init,f
  8620  1EBD  0DA5               	rlf	??_I2C_Master_Init+1,f
  8621  1EBE  0DA6               	rlf	??_I2C_Master_Init+2,f
  8622  1EBF  0DA7               	rlf	??_I2C_Master_Init+3,f
  8623  1EC0                     u4280:
  8624  1EC0  3EFF               	addlw	-1
  8625  1EC1  1D03               	skipz
  8626  1EC2  2EBB               	goto	u4285
  8627  1EC3  0827               	movf	??_I2C_Master_Init+3,w
  8628  1EC4  00F3               	movwf	___lldiv@divisor+3
  8629  1EC5  0826               	movf	??_I2C_Master_Init+2,w
  8630  1EC6  00F2               	movwf	___lldiv@divisor+2
  8631  1EC7  0825               	movf	??_I2C_Master_Init+1,w
  8632  1EC8  00F1               	movwf	___lldiv@divisor+1
  8633  1EC9  0824               	movf	??_I2C_Master_Init,w
  8634  1ECA  00F0               	movwf	___lldiv@divisor
  8635  1ECB  3000               	movlw	0
  8636  1ECC  00F7               	movwf	___lldiv@dividend+3
  8637  1ECD  303D               	movlw	61
  8638  1ECE  00F6               	movwf	___lldiv@dividend+2
  8639  1ECF  3009               	movlw	9
  8640  1ED0  00F5               	movwf	___lldiv@dividend+1
  8641  1ED1  3000               	movlw	0
  8642  1ED2  00F4               	movwf	___lldiv@dividend
  8643  1ED3  160A  118A  2197  160A  158A  	fcall	___lldiv
  8644  1ED8  0870               	movf	?___lldiv,w
  8645  1ED9  3EFF               	addlw	255
  8646  1EDA  1683               	bsf	3,5	;RP0=1, select bank1
  8647  1EDB  1303               	bcf	3,6	;RP1=0, select bank1
  8648  1EDC  0093               	movwf	19	;volatile
  8649  1EDD                     l2900:
  8650                           
  8651                           ;I2C.c: 21:     SSPSTAT = 0;
  8652  1EDD  0194               	clrf	20	;volatile
  8653  1EDE                     l2902:
  8654                           
  8655                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  8656  1EDE  1587               	bsf	7,3	;volatile
  8657  1EDF                     l2904:
  8658                           
  8659                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  8660  1EDF  1607               	bsf	7,4	;volatile
  8661  1EE0                     l84:
  8662  1EE0  0008               	return
  8663  1EE1                     __end_of_I2C_Master_Init:
  8664                           
  8665                           	psect	text37
  8666  1197                     __ptext37:	
  8667 ;; *************** function ___lldiv *****************
  8668 ;; Defined at:
  8669 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\__lldiv.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;  divisor         4    0[COMMON] unsigned long 
  8672 ;;  dividend        4    4[COMMON] unsigned long 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;  quotient        4    9[COMMON] unsigned long 
  8675 ;;  counter         1   13[COMMON] unsigned char 
  8676 ;; Return value:  Size  Location     Type
  8677 ;;                  4    0[COMMON] unsigned long 
  8678 ;; Registers used:
  8679 ;;		wreg, status,2, status,0
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8685 ;;      Params:         8       0       0       0       0
  8686 ;;      Locals:         5       0       0       0       0
  8687 ;;      Temps:          1       0       0       0       0
  8688 ;;      Totals:        14       0       0       0       0
  8689 ;;Total ram usage:       14 bytes
  8690 ;; Hardware stack levels used:    1
  8691 ;; This function calls:
  8692 ;;		Nothing
  8693 ;; This function is called by:
  8694 ;;		_I2C_Master_Init
  8695 ;;		_sprintf
  8696 ;; This function uses a non-reentrant model
  8697 ;;
  8698                           
  8699                           
  8700                           ;psect for function ___lldiv
  8701  1197                     ___lldiv:
  8702  1197                     l2648:	
  8703                           ;incstack = 0
  8704                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8705                           
  8706  1197  3000               	movlw	0
  8707  1198  00FC               	movwf	___lldiv@quotient+3
  8708  1199  3000               	movlw	0
  8709  119A  00FB               	movwf	___lldiv@quotient+2
  8710  119B  3000               	movlw	0
  8711  119C  00FA               	movwf	___lldiv@quotient+1
  8712  119D  3000               	movlw	0
  8713  119E  00F9               	movwf	___lldiv@quotient
  8714  119F  0873               	movf	___lldiv@divisor+3,w
  8715  11A0  0472               	iorwf	___lldiv@divisor+2,w
  8716  11A1  0471               	iorwf	___lldiv@divisor+1,w
  8717  11A2  0470               	iorwf	___lldiv@divisor,w
  8718  11A3  1903               	skipnz
  8719  11A4  29A6               	goto	u3741
  8720  11A5  29A7               	goto	u3740
  8721  11A6                     u3741:
  8722  11A6  29F4               	goto	l2668
  8723  11A7                     u3740:
  8724  11A7                     l2650:
  8725  11A7  01FD               	clrf	___lldiv@counter
  8726  11A8  0AFD               	incf	___lldiv@counter,f
  8727  11A9  29B7               	goto	l2654
  8728  11AA                     l2652:
  8729  11AA  3001               	movlw	1
  8730  11AB  00F8               	movwf	??___lldiv
  8731  11AC                     u3755:
  8732  11AC  1003               	clrc
  8733  11AD  0DF0               	rlf	___lldiv@divisor,f
  8734  11AE  0DF1               	rlf	___lldiv@divisor+1,f
  8735  11AF  0DF2               	rlf	___lldiv@divisor+2,f
  8736  11B0  0DF3               	rlf	___lldiv@divisor+3,f
  8737  11B1  0BF8               	decfsz	??___lldiv,f
  8738  11B2  29AC               	goto	u3755
  8739  11B3  3001               	movlw	1
  8740  11B4  00F8               	movwf	??___lldiv
  8741  11B5  0878               	movf	??___lldiv,w
  8742  11B6  07FD               	addwf	___lldiv@counter,f
  8743  11B7                     l2654:
  8744  11B7  1FF3               	btfss	___lldiv@divisor+3,7
  8745  11B8  29BA               	goto	u3761
  8746  11B9  29BB               	goto	u3760
  8747  11BA                     u3761:
  8748  11BA  29AA               	goto	l2652
  8749  11BB                     u3760:
  8750  11BB                     l2656:
  8751  11BB  3001               	movlw	1
  8752  11BC  00F8               	movwf	??___lldiv
  8753  11BD                     u3775:
  8754  11BD  1003               	clrc
  8755  11BE  0DF9               	rlf	___lldiv@quotient,f
  8756  11BF  0DFA               	rlf	___lldiv@quotient+1,f
  8757  11C0  0DFB               	rlf	___lldiv@quotient+2,f
  8758  11C1  0DFC               	rlf	___lldiv@quotient+3,f
  8759  11C2  0BF8               	decfsz	??___lldiv,f
  8760  11C3  29BD               	goto	u3775
  8761  11C4                     l2658:
  8762  11C4  0873               	movf	___lldiv@divisor+3,w
  8763  11C5  0277               	subwf	___lldiv@dividend+3,w
  8764  11C6  1D03               	skipz
  8765  11C7  29D2               	goto	u3785
  8766  11C8  0872               	movf	___lldiv@divisor+2,w
  8767  11C9  0276               	subwf	___lldiv@dividend+2,w
  8768  11CA  1D03               	skipz
  8769  11CB  29D2               	goto	u3785
  8770  11CC  0871               	movf	___lldiv@divisor+1,w
  8771  11CD  0275               	subwf	___lldiv@dividend+1,w
  8772  11CE  1D03               	skipz
  8773  11CF  29D2               	goto	u3785
  8774  11D0  0870               	movf	___lldiv@divisor,w
  8775  11D1  0274               	subwf	___lldiv@dividend,w
  8776  11D2                     u3785:
  8777  11D2  1C03               	skipc
  8778  11D3  29D5               	goto	u3781
  8779  11D4  29D6               	goto	u3780
  8780  11D5                     u3781:
  8781  11D5  29E5               	goto	l2664
  8782  11D6                     u3780:
  8783  11D6                     l2660:
  8784  11D6  0870               	movf	___lldiv@divisor,w
  8785  11D7  02F4               	subwf	___lldiv@dividend,f
  8786  11D8  0871               	movf	___lldiv@divisor+1,w
  8787  11D9  1C03               	skipc
  8788  11DA  0F71               	incfsz	___lldiv@divisor+1,w
  8789  11DB  02F5               	subwf	___lldiv@dividend+1,f
  8790  11DC  0872               	movf	___lldiv@divisor+2,w
  8791  11DD  1C03               	skipc
  8792  11DE  0F72               	incfsz	___lldiv@divisor+2,w
  8793  11DF  02F6               	subwf	___lldiv@dividend+2,f
  8794  11E0  0873               	movf	___lldiv@divisor+3,w
  8795  11E1  1C03               	skipc
  8796  11E2  0F73               	incfsz	___lldiv@divisor+3,w
  8797  11E3  02F7               	subwf	___lldiv@dividend+3,f
  8798  11E4                     l2662:
  8799  11E4  1479               	bsf	___lldiv@quotient,0
  8800  11E5                     l2664:
  8801  11E5  3001               	movlw	1
  8802  11E6                     u3795:
  8803  11E6  1003               	clrc
  8804  11E7  0CF3               	rrf	___lldiv@divisor+3,f
  8805  11E8  0CF2               	rrf	___lldiv@divisor+2,f
  8806  11E9  0CF1               	rrf	___lldiv@divisor+1,f
  8807  11EA  0CF0               	rrf	___lldiv@divisor,f
  8808  11EB  3EFF               	addlw	-1
  8809  11EC  1D03               	skipz
  8810  11ED  29E6               	goto	u3795
  8811  11EE                     l2666:
  8812  11EE  3001               	movlw	1
  8813  11EF  02FD               	subwf	___lldiv@counter,f
  8814  11F0  1D03               	btfss	3,2
  8815  11F1  29F3               	goto	u3801
  8816  11F2  29F4               	goto	u3800
  8817  11F3                     u3801:
  8818  11F3  29BB               	goto	l2656
  8819  11F4                     u3800:
  8820  11F4                     l2668:
  8821  11F4  087C               	movf	___lldiv@quotient+3,w
  8822  11F5  00F3               	movwf	?___lldiv+3
  8823  11F6  087B               	movf	___lldiv@quotient+2,w
  8824  11F7  00F2               	movwf	?___lldiv+2
  8825  11F8  087A               	movf	___lldiv@quotient+1,w
  8826  11F9  00F1               	movwf	?___lldiv+1
  8827  11FA  0879               	movf	___lldiv@quotient,w
  8828  11FB  00F0               	movwf	?___lldiv
  8829  11FC                     l434:
  8830  11FC  0008               	return
  8831  11FD                     __end_of___lldiv:
  8832  007E                     btemp	set	126	;btemp
  8833  007E                     wtemp0	set	126
  8834                           
  8835                           	psect	config
  8836                           
  8837                           ;Config register CONFIG1 @ 0x2007
  8838                           ;	Oscillator Selection bits
  8839                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8840                           ;	Watchdog Timer Enable bit
  8841                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8842                           ;	Power-up Timer Enable bit
  8843                           ;	PWRTE = OFF, PWRT disabled
  8844                           ;	RE3/MCLR pin function select bit
  8845                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8846                           ;	Code Protection bit
  8847                           ;	CP = OFF, Program memory code protection is disabled
  8848                           ;	Data Code Protection bit
  8849                           ;	CPD = OFF, Data memory code protection is disabled
  8850                           ;	Brown Out Reset Selection bits
  8851                           ;	BOREN = OFF, BOR disabled
  8852                           ;	Internal External Switchover bit
  8853                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8854                           ;	Fail-Safe Clock Monitor Enabled bit
  8855                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8856                           ;	Low Voltage Programming Enable bit
  8857                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8858                           ;	In-Circuit Debugger Mode bit
  8859                           ;	DEBUG = 0x1, unprogrammed default
  8860  2007                     	org	8199
  8861  2007  20D4               	dw	8404
  8862                           
  8863                           ;Config register CONFIG2 @ 0x2008
  8864                           ;	Brown-out Reset Selection bit
  8865                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8866                           ;	Flash Program Memory Self Write Enable bits
  8867                           ;	WRT = OFF, Write protection off
  8868  2008                     	org	8200
  8869  2008  3FFF               	dw	16383
  8870                           
  8871                           	psect	text5_split_1
  8872  0293                     u4450:
  8873  0293                     l3028:
  8874  0293  1683               	bsf	3,5	;RP0=1, select bank1
  8875  0294  1303               	bcf	3,6	;RP1=0, select bank1
  8876  0295  084E               	movf	(sprintf@fval+2)^(0+128),w
  8877  0296  044D               	iorwf	(sprintf@fval+1)^(0+128),w
  8878  0297  044C               	iorwf	sprintf@fval^(0+128),w
  8879  0298  1903               	skipnz
  8880  0299  2A9B               	goto	u4461
  8881  029A  2A9C               	goto	u4460
  8882  029B                     u4461:
  8883  029B  2B2C               	goto	l3048
  8884  029C                     u4460:
  8885  029C                     l3030:
  8886  029C  084C               	movf	sprintf@fval^(0+128),w
  8887  029D  1283               	bcf	3,5	;RP0=0, select bank0
  8888  029E  1303               	bcf	3,6	;RP1=0, select bank0
  8889  029F  00C1               	movwf	___fttol@f1
  8890  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  8891  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  8892  02A2  084D               	movf	(sprintf@fval+1)^(0+128),w
  8893  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  8894  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  8895  02A5  00C2               	movwf	___fttol@f1+1
  8896  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  8897  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  8898  02A8  084E               	movf	(sprintf@fval+2)^(0+128),w
  8899  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  8900  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  8901  02AB  00C3               	movwf	___fttol@f1+2
  8902  02AC  160A  118A  22E2  120A  118A  	fcall	___fttol
  8903  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  8904  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  8905  02B3  0844               	movf	?___fttol+3,w
  8906  02B4  0443               	iorwf	?___fttol+2,w
  8907  02B5  0442               	iorwf	?___fttol+1,w
  8908  02B6  0441               	iorwf	?___fttol,w
  8909  02B7  1D03               	skipz
  8910  02B8  2ABA               	goto	u4471
  8911  02B9  2ABB               	goto	u4470
  8912  02BA                     u4471:
  8913  02BA  2B2C               	goto	l3048
  8914  02BB                     u4470:
  8915  02BB                     l3032:
  8916  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  8917  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  8918  02BD  084A               	movf	(sprintf@eexp+1)^(0+128),w
  8919  02BE  3A80               	xorlw	128
  8920  02BF  00FF               	movwf	btemp+1
  8921  02C0  3080               	movlw	128
  8922  02C1  027F               	subwf	btemp+1,w
  8923  02C2  1D03               	skipz
  8924  02C3  2AC6               	goto	u4485
  8925  02C4  3002               	movlw	2
  8926  02C5  0249               	subwf	sprintf@eexp^(0+128),w
  8927  02C6                     u4485:
  8928  02C6  1C03               	skipc
  8929  02C7  2AC9               	goto	u4481
  8930  02C8  2ACA               	goto	u4480
  8931  02C9                     u4481:
  8932  02C9  2B2C               	goto	l3048
  8933  02CA                     u4480:
  8934  02CA                     l3034:
  8935                           
  8936                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1146:      if(tmpval.integ < 4.2
      +                          94967296){
  8937  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  8938  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  8939  02CC  0845               	movf	sprintf@tmpval^(0+128),w
  8940  02CD  00F0               	movwf	___ftge@ff1
  8941  02CE  0846               	movf	(sprintf@tmpval+1)^(0+128),w
  8942  02CF  00F1               	movwf	___ftge@ff1+1
  8943  02D0  0847               	movf	(sprintf@tmpval+2)^(0+128),w
  8944  02D1  00F2               	movwf	___ftge@ff1+2
  8945  02D2  3070               	movlw	112
  8946  02D3  00F3               	movwf	___ftge@ff2
  8947  02D4  3089               	movlw	137
  8948  02D5  00F4               	movwf	___ftge@ff2+1
  8949  02D6  3040               	movlw	64
  8950  02D7  00F5               	movwf	___ftge@ff2+2
  8951  02D8  160A  158A  26E1  120A  118A  	fcall	___ftge
  8952  02DD  1803               	btfsc	3,0
  8953  02DE  2AE0               	goto	u4491
  8954  02DF  2AE1               	goto	u4490
  8955  02E0                     u4491:
  8956  02E0  2AEA               	goto	l3038
  8957  02E1                     u4490:
  8958  02E1                     l3036:
  8959                           
  8960                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1147:       eexp -= (sizeof dpow
      +                          ers/sizeof dpowers[0])-1;
  8961  02E1  30F7               	movlw	247
  8962  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  8963  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  8964  02E4  07C9               	addwf	sprintf@eexp^(0+128),f
  8965  02E5  1803               	skipnc
  8966  02E6  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  8967  02E7  30FF               	movlw	255
  8968  02E8  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  8969                           
  8970                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1148:      }else{
  8971  02E9  2AF2               	goto	l3040
  8972  02EA                     l3038:
  8973                           
  8974                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1149:       eexp -= (sizeof dpow
      +                          ers/sizeof dpowers[0])-2;
  8975  02EA  30F8               	movlw	248
  8976  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  8977  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  8978  02ED  07C9               	addwf	sprintf@eexp^(0+128),f
  8979  02EE  1803               	skipnc
  8980  02EF  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  8981  02F0  30FF               	movlw	255
  8982  02F1  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  8983  02F2                     l3040:
  8984                           
  8985                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1151:      tmpval.integ = scale(
      +                          eexp);
  8986  02F2  0849               	movf	sprintf@eexp^(0+128),w
  8987  02F3  120A  158A  2285  120A  118A  	fcall	_scale
  8988  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  8989  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  8990  02FA  0838               	movf	?_scale,w
  8991  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  8992  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  8993  02FD  00C5               	movwf	sprintf@tmpval^(0+128)
  8994  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  8995  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  8996  0300  0839               	movf	?_scale+1,w
  8997  0301  1683               	bsf	3,5	;RP0=1, select bank1
  8998  0302  1303               	bcf	3,6	;RP1=0, select bank1
  8999  0303  00C6               	movwf	(sprintf@tmpval+1)^(0+128)
  9000  0304  1283               	bcf	3,5	;RP0=0, select bank0
  9001  0305  1303               	bcf	3,6	;RP1=0, select bank0
  9002  0306  083A               	movf	?_scale+2,w
  9003  0307  1683               	bsf	3,5	;RP0=1, select bank1
  9004  0308  1303               	bcf	3,6	;RP1=0, select bank1
  9005  0309  00C7               	movwf	(sprintf@tmpval+2)^(0+128)
  9006  030A                     l3044:	
  9007                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1152:      val = ((sizeof(double
      +                          )== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9008                           
  9009  030A  084C               	movf	sprintf@fval^(0+128),w
  9010  030B  00F0               	movwf	__tdiv_to_l_@f1
  9011  030C  084D               	movf	(sprintf@fval+1)^(0+128),w
  9012  030D  00F1               	movwf	__tdiv_to_l_@f1+1
  9013  030E  084E               	movf	(sprintf@fval+2)^(0+128),w
  9014  030F  00F2               	movwf	__tdiv_to_l_@f1+2
  9015  0310  0845               	movf	sprintf@tmpval^(0+128),w
  9016  0311  00F3               	movwf	__tdiv_to_l_@f2
  9017  0312  0846               	movf	(sprintf@tmpval+1)^(0+128),w
  9018  0313  00F4               	movwf	__tdiv_to_l_@f2+1
  9019  0314  0847               	movf	(sprintf@tmpval+2)^(0+128),w
  9020  0315  00F5               	movwf	__tdiv_to_l_@f2+2
  9021  0316  160A  118A  24B0  120A  118A  	fcall	__tdiv_to_l_
  9022  031B  0873               	movf	?__tdiv_to_l_+3,w
  9023  031C  1683               	bsf	3,5	;RP0=1, select bank1
  9024  031D  1303               	bcf	3,6	;RP1=0, select bank1
  9025  031E  00C0               	movwf	(sprintf@val+3)^(0+128)
  9026  031F  0872               	movf	?__tdiv_to_l_+2,w
  9027  0320  00BF               	movwf	(sprintf@val+2)^(0+128)
  9028  0321  0871               	movf	?__tdiv_to_l_+1,w
  9029  0322  00BE               	movwf	(sprintf@val+1)^(0+128)
  9030  0323  0870               	movf	?__tdiv_to_l_,w
  9031  0324  00BD               	movwf	sprintf@val^(0+128)
  9032  0325                     l3046:
  9033                           
  9034                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1155:      fval = 0.0;
  9035  0325  3000               	movlw	0
  9036  0326  00CC               	movwf	sprintf@fval^(0+128)
  9037  0327  3000               	movlw	0
  9038  0328  00CD               	movwf	(sprintf@fval+1)^(0+128)
  9039  0329  3000               	movlw	0
  9040  032A  00CE               	movwf	(sprintf@fval+2)^(0+128)
  9041                           
  9042                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1156:     } else {
  9043  032B  2B9B               	goto	l3052
  9044  032C                     l3048:
  9045                           
  9046                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1157:      val = (unsigned long)
      +                          fval;
  9047  032C  1683               	bsf	3,5	;RP0=1, select bank1
  9048  032D  1303               	bcf	3,6	;RP1=0, select bank1
  9049  032E  084C               	movf	sprintf@fval^(0+128),w
  9050  032F  1283               	bcf	3,5	;RP0=0, select bank0
  9051  0330  1303               	bcf	3,6	;RP1=0, select bank0
  9052  0331  00C1               	movwf	___fttol@f1
  9053  0332  1683               	bsf	3,5	;RP0=1, select bank1
  9054  0333  1303               	bcf	3,6	;RP1=0, select bank1
  9055  0334  084D               	movf	(sprintf@fval+1)^(0+128),w
  9056  0335  1283               	bcf	3,5	;RP0=0, select bank0
  9057  0336  1303               	bcf	3,6	;RP1=0, select bank0
  9058  0337  00C2               	movwf	___fttol@f1+1
  9059  0338  1683               	bsf	3,5	;RP0=1, select bank1
  9060  0339  1303               	bcf	3,6	;RP1=0, select bank1
  9061  033A  084E               	movf	(sprintf@fval+2)^(0+128),w
  9062  033B  1283               	bcf	3,5	;RP0=0, select bank0
  9063  033C  1303               	bcf	3,6	;RP1=0, select bank0
  9064  033D  00C3               	movwf	___fttol@f1+2
  9065  033E  160A  118A  22E2  120A  118A  	fcall	___fttol
  9066  0343  1283               	bcf	3,5	;RP0=0, select bank0
  9067  0344  1303               	bcf	3,6	;RP1=0, select bank0
  9068  0345  0844               	movf	?___fttol+3,w
  9069  0346  1683               	bsf	3,5	;RP0=1, select bank1
  9070  0347  1303               	bcf	3,6	;RP1=0, select bank1
  9071  0348  00C0               	movwf	(sprintf@val+3)^(0+128)
  9072  0349  1283               	bcf	3,5	;RP0=0, select bank0
  9073  034A  1303               	bcf	3,6	;RP1=0, select bank0
  9074  034B  0843               	movf	?___fttol+2,w
  9075  034C  1683               	bsf	3,5	;RP0=1, select bank1
  9076  034D  1303               	bcf	3,6	;RP1=0, select bank1
  9077  034E  00BF               	movwf	(sprintf@val+2)^(0+128)
  9078  034F  1283               	bcf	3,5	;RP0=0, select bank0
  9079  0350  1303               	bcf	3,6	;RP1=0, select bank0
  9080  0351  0842               	movf	?___fttol+1,w
  9081  0352  1683               	bsf	3,5	;RP0=1, select bank1
  9082  0353  1303               	bcf	3,6	;RP1=0, select bank1
  9083  0354  00BE               	movwf	(sprintf@val+1)^(0+128)
  9084  0355  1283               	bcf	3,5	;RP0=0, select bank0
  9085  0356  1303               	bcf	3,6	;RP1=0, select bank0
  9086  0357  0841               	movf	?___fttol,w
  9087  0358  1683               	bsf	3,5	;RP0=1, select bank1
  9088  0359  1303               	bcf	3,6	;RP1=0, select bank1
  9089  035A  00BD               	movwf	sprintf@val^(0+128)
  9090                           
  9091                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1158:      fval -= (double)val;
  9092  035B  0840               	movf	(sprintf@val+3)^(0+128),w
  9093  035C  00FD               	movwf	___lltoft@c+3
  9094  035D  083F               	movf	(sprintf@val+2)^(0+128),w
  9095  035E  00FC               	movwf	___lltoft@c+2
  9096  035F  083E               	movf	(sprintf@val+1)^(0+128),w
  9097  0360  00FB               	movwf	___lltoft@c+1
  9098  0361  083D               	movf	sprintf@val^(0+128),w
  9099  0362  00FA               	movwf	___lltoft@c
  9100  0363  160A  158A  2678  120A  118A  	fcall	___lltoft
  9101  0368  087A               	movf	?___lltoft,w
  9102  0369  1283               	bcf	3,5	;RP0=0, select bank0
  9103  036A  1303               	bcf	3,6	;RP1=0, select bank0
  9104  036B  00D5               	movwf	___ftsub@f2
  9105  036C  087B               	movf	?___lltoft+1,w
  9106  036D  00D6               	movwf	___ftsub@f2+1
  9107  036E  087C               	movf	?___lltoft+2,w
  9108  036F  00D7               	movwf	___ftsub@f2+2
  9109  0370  1683               	bsf	3,5	;RP0=1, select bank1
  9110  0371  1303               	bcf	3,6	;RP1=0, select bank1
  9111  0372  084C               	movf	sprintf@fval^(0+128),w
  9112  0373  1283               	bcf	3,5	;RP0=0, select bank0
  9113  0374  1303               	bcf	3,6	;RP1=0, select bank0
  9114  0375  00D8               	movwf	___ftsub@f1
  9115  0376  1683               	bsf	3,5	;RP0=1, select bank1
  9116  0377  1303               	bcf	3,6	;RP1=0, select bank1
  9117  0378  084D               	movf	(sprintf@fval+1)^(0+128),w
  9118  0379  1283               	bcf	3,5	;RP0=0, select bank0
  9119  037A  1303               	bcf	3,6	;RP1=0, select bank0
  9120  037B  00D9               	movwf	___ftsub@f1+1
  9121  037C  1683               	bsf	3,5	;RP0=1, select bank1
  9122  037D  1303               	bcf	3,6	;RP1=0, select bank1
  9123  037E  084E               	movf	(sprintf@fval+2)^(0+128),w
  9124  037F  1283               	bcf	3,5	;RP0=0, select bank0
  9125  0380  1303               	bcf	3,6	;RP1=0, select bank0
  9126  0381  00DA               	movwf	___ftsub@f1+2
  9127  0382  160A  158A  25DB  120A  118A  	fcall	___ftsub
  9128  0387  1283               	bcf	3,5	;RP0=0, select bank0
  9129  0388  1303               	bcf	3,6	;RP1=0, select bank0
  9130  0389  0855               	movf	?___ftsub,w
  9131  038A  1683               	bsf	3,5	;RP0=1, select bank1
  9132  038B  1303               	bcf	3,6	;RP1=0, select bank1
  9133  038C  00CC               	movwf	sprintf@fval^(0+128)
  9134  038D  1283               	bcf	3,5	;RP0=0, select bank0
  9135  038E  1303               	bcf	3,6	;RP1=0, select bank0
  9136  038F  0856               	movf	?___ftsub+1,w
  9137  0390  1683               	bsf	3,5	;RP0=1, select bank1
  9138  0391  1303               	bcf	3,6	;RP1=0, select bank1
  9139  0392  00CD               	movwf	(sprintf@fval+1)^(0+128)
  9140  0393  1283               	bcf	3,5	;RP0=0, select bank0
  9141  0394  1303               	bcf	3,6	;RP1=0, select bank0
  9142  0395  0857               	movf	?___ftsub+2,w
  9143  0396  1683               	bsf	3,5	;RP0=1, select bank1
  9144  0397  1303               	bcf	3,6	;RP1=0, select bank1
  9145  0398  00CE               	movwf	(sprintf@fval+2)^(0+128)
  9146  0399                     l3050:
  9147                           
  9148                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1159:      eexp = 0;
  9149  0399  01C9               	clrf	sprintf@eexp^(0+128)
  9150  039A  01CA               	clrf	(sprintf@eexp+1)^(0+128)
  9151  039B                     l3052:
  9152                           
  9153                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1162:     for(c = 1 ; c != (size
      +                          of dpowers/sizeof dpowers[0]) ; c++)
  9154  039B  01D1               	clrf	sprintf@c^(0+128)
  9155  039C  0AD1               	incf	sprintf@c^(0+128),f
  9156  039D                     l3058:
  9157                           
  9158                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1163:      if(val < dpowers[c])
  9159  039D  0851               	movf	sprintf@c^(0+128),w
  9160  039E  1283               	bcf	3,5	;RP0=0, select bank0
  9161  039F  1303               	bcf	3,6	;RP1=0, select bank0
  9162  03A0  00E2               	movwf	??_sprintf
  9163  03A1  3001               	movlw	1
  9164  03A2                     u4505:
  9165  03A2  1003               	clrc
  9166  03A3  0DE2               	rlf	??_sprintf,f
  9167  03A4  3EFF               	addlw	-1
  9168  03A5  1D03               	skipz
  9169  03A6  2BA2               	goto	u4505
  9170  03A7  1003               	clrc
  9171  03A8  0D62               	rlf	??_sprintf,w
  9172  03A9  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9173  03AA  0084               	movwf	4
  9174  03AB  160A  118A  2000  120A  118A  	fcall	stringdir
  9175  03B0  00E3               	movwf	??_sprintf+1
  9176  03B1  160A  118A  2000  120A  118A  	fcall	stringdir
  9177  03B6  00E4               	movwf	??_sprintf+2
  9178  03B7  160A  118A  2000  120A  118A  	fcall	stringdir
  9179  03BC  00E5               	movwf	??_sprintf+3
  9180  03BD  160A  118A  2000  120A  118A  	fcall	stringdir
  9181  03C2  00E6               	movwf	??_sprintf+4
  9182  03C3  0866               	movf	??_sprintf+4,w
  9183  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  9184  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  9185  03C6  0240               	subwf	(sprintf@val+3)^(0+128),w
  9186  03C7  1D03               	skipz
  9187  03C8  2BDF               	goto	u4515
  9188  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  9189  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  9190  03CB  0865               	movf	??_sprintf+3,w
  9191  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  9192  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  9193  03CE  023F               	subwf	(sprintf@val+2)^(0+128),w
  9194  03CF  1D03               	skipz
  9195  03D0  2BDF               	goto	u4515
  9196  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  9197  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  9198  03D3  0864               	movf	??_sprintf+2,w
  9199  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  9200  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  9201  03D6  023E               	subwf	(sprintf@val+1)^(0+128),w
  9202  03D7  1D03               	skipz
  9203  03D8  2BDF               	goto	u4515
  9204  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  9205  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  9206  03DB  0863               	movf	??_sprintf+1,w
  9207  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  9208  03DD  1303               	bcf	3,6	;RP1=0, select bank1
  9209  03DE  023D               	subwf	sprintf@val^(0+128),w
  9210  03DF                     u4515:
  9211  03DF  1803               	skipnc
  9212  03E0  2BE2               	goto	u4511
  9213  03E1  2BE3               	goto	u4510
  9214  03E2                     u4511:
  9215  03E2  2BE4               	goto	l3062
  9216  03E3                     u4510:
  9217  03E3  2BF2               	goto	l3064
  9218  03E4                     l3062:
  9219  03E4  3001               	movlw	1
  9220  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  9221  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  9222  03E7  00E2               	movwf	??_sprintf
  9223  03E8  0862               	movf	??_sprintf,w
  9224  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  9225  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  9226  03EB  07D1               	addwf	sprintf@c^(0+128),f
  9227  03EC  300A               	movlw	10
  9228  03ED  0651               	xorwf	sprintf@c^(0+128),w
  9229  03EE  1D03               	btfss	3,2
  9230  03EF  2BF1               	goto	u4521
  9231  03F0  2BF2               	goto	u4520
  9232  03F1                     u4521:
  9233  03F1  2B9D               	goto	l3058
  9234  03F2                     u4520:
  9235  03F2                     l3064:
  9236                           
  9237                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1168:     width -= prec + c + ee
      +                          xp;
  9238  03F2  0851               	movf	sprintf@c^(0+128),w
  9239  03F3  074F               	addwf	sprintf@prec^(0+128),w
  9240  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  9241  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  9242  03F6  00E2               	movwf	??_sprintf
  9243  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  9244  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  9245  03F9  0850               	movf	(sprintf@prec+1)^(0+128),w
  9246  03FA  1803               	skipnc
  9247  03FB  0A50               	incf	(sprintf@prec+1)^(0+128),w
  9248  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  9249  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  9250  03FE  00E3               	movwf	??_sprintf+1
  9251  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  9252  0400  1303               	bcf	3,6	;RP1=0, select bank1
  9253  0401  0849               	movf	sprintf@eexp^(0+128),w
  9254  0402  1283               	bcf	3,5	;RP0=0, select bank0
  9255  0403  1303               	bcf	3,6	;RP1=0, select bank0
  9256  0404  0762               	addwf	??_sprintf,w
  9257  0405  00E4               	movwf	??_sprintf+2
  9258  0406  1683               	bsf	3,5	;RP0=1, select bank1
  9259  0407  1303               	bcf	3,6	;RP1=0, select bank1
  9260  0408  084A               	movf	(sprintf@eexp+1)^(0+128),w
  9261  0409  1803               	skipnc
  9262  040A  0A4A               	incf	(sprintf@eexp+1)^(0+128),w
  9263  040B  1283               	bcf	3,5	;RP0=0, select bank0
  9264  040C  1303               	bcf	3,6	;RP1=0, select bank0
  9265  040D  0763               	addwf	??_sprintf+1,w
  9266  040E  00E5               	movwf	??_sprintf+3
  9267  040F  0864               	movf	??_sprintf+2,w
  9268  0410  1683               	bsf	3,5	;RP0=1, select bank1
  9269  0411  1303               	bcf	3,6	;RP1=0, select bank1
  9270  0412  02C3               	subwf	sprintf@width^(0+128),f
  9271  0413  1283               	bcf	3,5	;RP0=0, select bank0
  9272  0414  1303               	bcf	3,6	;RP1=0, select bank0
  9273  0415  0865               	movf	??_sprintf+3,w
  9274  0416  1683               	bsf	3,5	;RP0=1, select bank1
  9275  0417  1303               	bcf	3,6	;RP1=0, select bank1
  9276  0418  1C03               	skipc
  9277  0419  03C4               	decf	(sprintf@width+1)^(0+128),f
  9278  041A  02C4               	subwf	(sprintf@width+1)^(0+128),f
  9279                           
  9280                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1169:     if(
  9281  041B  084F               	movf	sprintf@prec^(0+128),w
  9282  041C  0450               	iorwf	(sprintf@prec+1)^(0+128),w
  9283  041D  1903               	btfsc	3,2
  9284  041E  2C20               	goto	u4531
  9285  041F  2C21               	goto	u4530
  9286  0420                     u4531:
  9287  0420  2C27               	goto	l3068
  9288  0421                     u4530:
  9289  0421                     l3066:
  9290                           
  9291                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1174:      width--;
  9292  0421  30FF               	movlw	255
  9293  0422  07C3               	addwf	sprintf@width^(0+128),f
  9294  0423  1803               	skipnc
  9295  0424  0AC4               	incf	(sprintf@width+1)^(0+128),f
  9296  0425  30FF               	movlw	255
  9297  0426  07C4               	addwf	(sprintf@width+1)^(0+128),f
  9298  0427                     l3068:
  9299                           
  9300                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1175:     if(flag & 0x03)
  9301  0427  3003               	movlw	3
  9302  0428  0541               	andwf	sprintf@flag^(0+128),w
  9303  0429  1283               	bcf	3,5	;RP0=0, select bank0
  9304  042A  1303               	bcf	3,6	;RP1=0, select bank0
  9305  042B  00E2               	movwf	??_sprintf
  9306  042C  3000               	movlw	0
  9307  042D  1683               	bsf	3,5	;RP0=1, select bank1
  9308  042E  1303               	bcf	3,6	;RP1=0, select bank1
  9309  042F  0542               	andwf	(sprintf@flag+1)^(0+128),w
  9310  0430  1283               	bcf	3,5	;RP0=0, select bank0
  9311  0431  1303               	bcf	3,6	;RP1=0, select bank0
  9312  0432  00E3               	movwf	??_sprintf+1
  9313  0433  0862               	movf	??_sprintf,w
  9314  0434  0463               	iorwf	??_sprintf+1,w
  9315  0435  1903               	btfsc	3,2
  9316  0436  2C38               	goto	u4541
  9317  0437  2C39               	goto	u4540
  9318  0438                     u4541:
  9319  0438  2C56               	goto	l3078
  9320  0439                     u4540:
  9321  0439                     l3070:
  9322                           
  9323                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1176:      width--;
  9324  0439  30FF               	movlw	255
  9325  043A  1683               	bsf	3,5	;RP0=1, select bank1
  9326  043B  1303               	bcf	3,6	;RP1=0, select bank1
  9327  043C  07C3               	addwf	sprintf@width^(0+128),f
  9328  043D  1803               	skipnc
  9329  043E  0AC4               	incf	(sprintf@width+1)^(0+128),f
  9330  043F  30FF               	movlw	255
  9331  0440  07C4               	addwf	(sprintf@width+1)^(0+128),f
  9332  0441  2C56               	goto	l3078
  9333  0442                     l3072:
  9334                           
  9335                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1207:       ((*sp++ = (' ')));
  9336  0442  3020               	movlw	32
  9337  0443  1283               	bcf	3,5	;RP0=0, select bank0
  9338  0444  1303               	bcf	3,6	;RP1=0, select bank0
  9339  0445  00E2               	movwf	??_sprintf
  9340  0446  1683               	bsf	3,5	;RP0=1, select bank1
  9341  0447  1303               	bcf	3,6	;RP1=0, select bank1
  9342  0448  084B               	movf	sprintf@sp^(0+128),w
  9343  0449  0084               	movwf	4
  9344  044A  1283               	bcf	3,5	;RP0=0, select bank0
  9345  044B  1303               	bcf	3,6	;RP1=0, select bank0
  9346  044C  0862               	movf	??_sprintf,w
  9347  044D  1383               	bcf	3,7	;select IRP bank0
  9348  044E  0080               	movwf	0
  9349  044F                     l3074:
  9350  044F  3001               	movlw	1
  9351  0450  00E2               	movwf	??_sprintf
  9352  0451  0862               	movf	??_sprintf,w
  9353  0452  1683               	bsf	3,5	;RP0=1, select bank1
  9354  0453  1303               	bcf	3,6	;RP1=0, select bank1
  9355  0454  07CB               	addwf	sprintf@sp^(0+128),f
  9356  0455  2C39               	goto	l3070
  9357  0456                     l3078:
  9358                           
  9359                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1206:      while(width > 0) {
  9360  0456  1683               	bsf	3,5	;RP0=1, select bank1
  9361  0457  1303               	bcf	3,6	;RP1=0, select bank1
  9362  0458  0844               	movf	(sprintf@width+1)^(0+128),w
  9363  0459  3A80               	xorlw	128
  9364  045A  00FF               	movwf	btemp+1
  9365  045B  3080               	movlw	128
  9366  045C  027F               	subwf	btemp+1,w
  9367  045D  1D03               	skipz
  9368  045E  2C61               	goto	u4555
  9369  045F  3001               	movlw	1
  9370  0460  0243               	subwf	sprintf@width^(0+128),w
  9371  0461                     u4555:
  9372  0461  1803               	skipnc
  9373  0462  2C64               	goto	u4551
  9374  0463  2C65               	goto	u4550
  9375  0464                     u4551:
  9376  0464  2C42               	goto	l3072
  9377  0465                     u4550:
  9378  0465                     l3080:
  9379                           
  9380                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x03)
  9381  0465  3003               	movlw	3
  9382  0466  1683               	bsf	3,5	;RP0=1, select bank1
  9383  0467  1303               	bcf	3,6	;RP1=0, select bank1
  9384  0468  0541               	andwf	sprintf@flag^(0+128),w
  9385  0469  1283               	bcf	3,5	;RP0=0, select bank0
  9386  046A  1303               	bcf	3,6	;RP1=0, select bank0
  9387  046B  00E2               	movwf	??_sprintf
  9388  046C  3000               	movlw	0
  9389  046D  1683               	bsf	3,5	;RP0=1, select bank1
  9390  046E  1303               	bcf	3,6	;RP1=0, select bank1
  9391  046F  0542               	andwf	(sprintf@flag+1)^(0+128),w
  9392  0470  1283               	bcf	3,5	;RP0=0, select bank0
  9393  0471  1303               	bcf	3,6	;RP1=0, select bank0
  9394  0472  00E3               	movwf	??_sprintf+1
  9395  0473  0862               	movf	??_sprintf,w
  9396  0474  0463               	iorwf	??_sprintf+1,w
  9397  0475  1903               	btfsc	3,2
  9398  0476  2C78               	goto	u4561
  9399  0477  2C79               	goto	u4560
  9400  0478                     u4561:
  9401  0478  2CFD               	goto	l364
  9402  0479                     u4560:
  9403  0479                     l3082:
  9404                           
  9405                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1216:      ((*sp++ = ('-')));
  9406  0479  302D               	movlw	45
  9407  047A  00E2               	movwf	??_sprintf
  9408  047B  1683               	bsf	3,5	;RP0=1, select bank1
  9409  047C  1303               	bcf	3,6	;RP1=0, select bank1
  9410  047D  084B               	movf	sprintf@sp^(0+128),w
  9411  047E  0084               	movwf	4
  9412  047F  1283               	bcf	3,5	;RP0=0, select bank0
  9413  0480  1303               	bcf	3,6	;RP1=0, select bank0
  9414  0481  0862               	movf	??_sprintf,w
  9415  0482  1383               	bcf	3,7	;select IRP bank0
  9416  0483  0080               	movwf	0
  9417  0484                     l3084:
  9418  0484  3001               	movlw	1
  9419  0485  00E2               	movwf	??_sprintf
  9420  0486  0862               	movf	??_sprintf,w
  9421  0487  1683               	bsf	3,5	;RP0=1, select bank1
  9422  0488  1303               	bcf	3,6	;RP1=0, select bank1
  9423  0489  07CB               	addwf	sprintf@sp^(0+128),f
  9424  048A  2CFD               	goto	l364
  9425  048B                     l3086:
  9426                           
  9427                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1226:     {;D:\MPLAB XC8 compile
      +                          r\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = val/dpowers[c];
  9428  048B  0851               	movf	sprintf@c^(0+128),w
  9429  048C  1283               	bcf	3,5	;RP0=0, select bank0
  9430  048D  1303               	bcf	3,6	;RP1=0, select bank0
  9431  048E  00E2               	movwf	??_sprintf
  9432  048F  3001               	movlw	1
  9433  0490                     u4575:
  9434  0490  1003               	clrc
  9435  0491  0DE2               	rlf	??_sprintf,f
  9436  0492  3EFF               	addlw	-1
  9437  0493  1D03               	skipz
  9438  0494  2C90               	goto	u4575
  9439  0495  1003               	clrc
  9440  0496  0D62               	rlf	??_sprintf,w
  9441  0497  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9442  0498  0084               	movwf	4
  9443  0499  160A  118A  2000  120A  118A  	fcall	stringdir
  9444  049E  00F0               	movwf	___lldiv@divisor
  9445  049F  160A  118A  2000  120A  118A  	fcall	stringdir
  9446  04A4  00F1               	movwf	___lldiv@divisor+1
  9447  04A5  160A  118A  2000  120A  118A  	fcall	stringdir
  9448  04AA  00F2               	movwf	___lldiv@divisor+2
  9449  04AB  160A  118A  2000  120A  118A  	fcall	stringdir
  9450  04B0  00F3               	movwf	___lldiv@divisor+3
  9451  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  9452  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  9453  04B3  0840               	movf	(sprintf@val+3)^(0+128),w
  9454  04B4  00F7               	movwf	___lldiv@dividend+3
  9455  04B5  083F               	movf	(sprintf@val+2)^(0+128),w
  9456  04B6  00F6               	movwf	___lldiv@dividend+2
  9457  04B7  083E               	movf	(sprintf@val+1)^(0+128),w
  9458  04B8  00F5               	movwf	___lldiv@dividend+1
  9459  04B9  083D               	movf	sprintf@val^(0+128),w
  9460  04BA  00F4               	movwf	___lldiv@dividend
  9461  04BB  160A  118A  2197  120A  118A  	fcall	___lldiv
  9462  04C0  0873               	movf	?___lldiv+3,w
  9463  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  9464  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  9465  04C3  00C8               	movwf	(sprintf@tmpval+3)^(0+128)
  9466  04C4  0872               	movf	?___lldiv+2,w
  9467  04C5  00C7               	movwf	(sprintf@tmpval+2)^(0+128)
  9468  04C6  0871               	movf	?___lldiv+1,w
  9469  04C7  00C6               	movwf	(sprintf@tmpval+1)^(0+128)
  9470  04C8  0870               	movf	?___lldiv,w
  9471  04C9  00C5               	movwf	sprintf@tmpval^(0+128)
  9472  04CA                     l3088:
  9473                           
  9474                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1228:      tmpval.vd %= 10;
  9475  04CA  3000               	movlw	0
  9476  04CB  00F3               	movwf	___llmod@divisor+3
  9477  04CC  3000               	movlw	0
  9478  04CD  00F2               	movwf	___llmod@divisor+2
  9479  04CE  3000               	movlw	0
  9480  04CF  00F1               	movwf	___llmod@divisor+1
  9481  04D0  300A               	movlw	10
  9482  04D1  00F0               	movwf	___llmod@divisor
  9483  04D2  0848               	movf	(sprintf@tmpval+3)^(0+128),w
  9484  04D3  00F7               	movwf	___llmod@dividend+3
  9485  04D4  0847               	movf	(sprintf@tmpval+2)^(0+128),w
  9486  04D5  00F6               	movwf	___llmod@dividend+2
  9487  04D6  0846               	movf	(sprintf@tmpval+1)^(0+128),w
  9488  04D7  00F5               	movwf	___llmod@dividend+1
  9489  04D8  0845               	movf	sprintf@tmpval^(0+128),w
  9490  04D9  00F4               	movwf	___llmod@dividend
  9491  04DA  160A  158A  2753  120A  118A  	fcall	___llmod
  9492  04DF  0873               	movf	?___llmod+3,w
  9493  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  9494  04E1  1303               	bcf	3,6	;RP1=0, select bank1
  9495  04E2  00C8               	movwf	(sprintf@tmpval+3)^(0+128)
  9496  04E3  0872               	movf	?___llmod+2,w
  9497  04E4  00C7               	movwf	(sprintf@tmpval+2)^(0+128)
  9498  04E5  0871               	movf	?___llmod+1,w
  9499  04E6  00C6               	movwf	(sprintf@tmpval+1)^(0+128)
  9500  04E7  0870               	movf	?___llmod,w
  9501  04E8  00C5               	movwf	sprintf@tmpval^(0+128)
  9502  04E9                     l3090:
  9503                           
  9504                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1229:      ((*sp++ = ('0' + tmpv
      +                          al.vd)));
  9505  04E9  0845               	movf	sprintf@tmpval^(0+128),w
  9506  04EA  3E30               	addlw	48
  9507  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  9508  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  9509  04ED  00E2               	movwf	??_sprintf
  9510  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  9511  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  9512  04F0  084B               	movf	sprintf@sp^(0+128),w
  9513  04F1  0084               	movwf	4
  9514  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  9515  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  9516  04F4  0862               	movf	??_sprintf,w
  9517  04F5  1383               	bcf	3,7	;select IRP bank0
  9518  04F6  0080               	movwf	0
  9519  04F7  3001               	movlw	1
  9520  04F8  00E2               	movwf	??_sprintf
  9521  04F9  0862               	movf	??_sprintf,w
  9522  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  9523  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  9524  04FC  07CB               	addwf	sprintf@sp^(0+128),f
  9525  04FD                     l364:	
  9526                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1230:     };D:\MPLAB XC8 compile
      +                          r\pic\sources\c90\common\doprnt.c: 1232:    }
  9527                           
  9528                           
  9529                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1222:    while(c--) {
  9530  04FD  3001               	movlw	1
  9531  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  9532  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  9533  0500  02D1               	subwf	sprintf@c^(0+128),f
  9534  0501  0A51               	incf	sprintf@c^(0+128),w
  9535  0502  1D03               	btfss	3,2
  9536  0503  2D05               	goto	u4581
  9537  0504  2D06               	goto	u4580
  9538  0505                     u4581:
  9539  0505  2C8B               	goto	l3086
  9540  0506                     u4580:
  9541  0506  2D20               	goto	l3098
  9542  0507                     l3092:
  9543                           
  9544                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++ = ('0')));
  9545  0507  3030               	movlw	48
  9546  0508  1283               	bcf	3,5	;RP0=0, select bank0
  9547  0509  1303               	bcf	3,6	;RP1=0, select bank0
  9548  050A  00E2               	movwf	??_sprintf
  9549  050B  1683               	bsf	3,5	;RP0=1, select bank1
  9550  050C  1303               	bcf	3,6	;RP1=0, select bank1
  9551  050D  084B               	movf	sprintf@sp^(0+128),w
  9552  050E  0084               	movwf	4
  9553  050F  1283               	bcf	3,5	;RP0=0, select bank0
  9554  0510  1303               	bcf	3,6	;RP1=0, select bank0
  9555  0511  0862               	movf	??_sprintf,w
  9556  0512  1383               	bcf	3,7	;select IRP bank0
  9557  0513  0080               	movwf	0
  9558  0514                     l3094:
  9559  0514  3001               	movlw	1
  9560  0515  00E2               	movwf	??_sprintf
  9561  0516  0862               	movf	??_sprintf,w
  9562  0517  1683               	bsf	3,5	;RP0=1, select bank1
  9563  0518  1303               	bcf	3,6	;RP1=0, select bank1
  9564  0519  07CB               	addwf	sprintf@sp^(0+128),f
  9565  051A                     l3096:
  9566                           
  9567                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9568  051A  30FF               	movlw	255
  9569  051B  07C9               	addwf	sprintf@eexp^(0+128),f
  9570  051C  1803               	skipnc
  9571  051D  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  9572  051E  30FF               	movlw	255
  9573  051F  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  9574  0520                     l3098:
  9575                           
  9576                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1233:    while(eexp > 0) {
  9577  0520  084A               	movf	(sprintf@eexp+1)^(0+128),w
  9578  0521  3A80               	xorlw	128
  9579  0522  00FF               	movwf	btemp+1
  9580  0523  3080               	movlw	128
  9581  0524  027F               	subwf	btemp+1,w
  9582  0525  1D03               	skipz
  9583  0526  2D29               	goto	u4595
  9584  0527  3001               	movlw	1
  9585  0528  0249               	subwf	sprintf@eexp^(0+128),w
  9586  0529                     u4595:
  9587  0529  1803               	skipnc
  9588  052A  2D2C               	goto	u4591
  9589  052B  2D2D               	goto	u4590
  9590  052C                     u4591:
  9591  052C  2D07               	goto	l3092
  9592  052D                     u4590:
  9593  052D                     l3100:
  9594                           
  9595                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1237:    if(prec > (int)((sizeof
      +                           dpowers/sizeof dpowers[0])-2))
  9596  052D  1683               	bsf	3,5	;RP0=1, select bank1
  9597  052E  1303               	bcf	3,6	;RP1=0, select bank1
  9598  052F  0850               	movf	(sprintf@prec+1)^(0+128),w
  9599  0530  3A80               	xorlw	128
  9600  0531  00FF               	movwf	btemp+1
  9601  0532  3080               	movlw	128
  9602  0533  027F               	subwf	btemp+1,w
  9603  0534  1D03               	skipz
  9604  0535  2D38               	goto	u4605
  9605  0536  3009               	movlw	9
  9606  0537  024F               	subwf	sprintf@prec^(0+128),w
  9607  0538                     u4605:
  9608  0538  1C03               	skipc
  9609  0539  2D3B               	goto	u4601
  9610  053A  2D3C               	goto	u4600
  9611  053B                     u4601:
  9612  053B  2D45               	goto	l3104
  9613  053C                     u4600:
  9614  053C                     l3102:
  9615                           
  9616                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1238:     c = (sizeof dpowers/si
      +                          zeof dpowers[0])-2;
  9617  053C  3008               	movlw	8
  9618  053D  1283               	bcf	3,5	;RP0=0, select bank0
  9619  053E  1303               	bcf	3,6	;RP1=0, select bank0
  9620  053F  00E2               	movwf	??_sprintf
  9621  0540  0862               	movf	??_sprintf,w
  9622  0541  1683               	bsf	3,5	;RP0=1, select bank1
  9623  0542  1303               	bcf	3,6	;RP1=0, select bank1
  9624  0543  00D1               	movwf	sprintf@c^(0+128)
  9625  0544  2D4F               	goto	l371
  9626  0545                     l3104:
  9627                           
  9628                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1240:     c = (char)prec;
  9629  0545  1683               	bsf	3,5	;RP0=1, select bank1
  9630  0546  1303               	bcf	3,6	;RP1=0, select bank1
  9631  0547  084F               	movf	sprintf@prec^(0+128),w
  9632  0548  1283               	bcf	3,5	;RP0=0, select bank0
  9633  0549  1303               	bcf	3,6	;RP1=0, select bank0
  9634  054A  00E2               	movwf	??_sprintf
  9635  054B  0862               	movf	??_sprintf,w
  9636  054C  1683               	bsf	3,5	;RP0=1, select bank1
  9637  054D  1303               	bcf	3,6	;RP1=0, select bank1
  9638  054E  00D1               	movwf	sprintf@c^(0+128)
  9639  054F                     l371:
  9640                           
  9641                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1241:    prec -= (int)c;
  9642  054F  0851               	movf	sprintf@c^(0+128),w
  9643  0550  1283               	bcf	3,5	;RP0=0, select bank0
  9644  0551  1303               	bcf	3,6	;RP1=0, select bank0
  9645  0552  00E2               	movwf	??_sprintf
  9646  0553  01E3               	clrf	??_sprintf+1
  9647  0554  0862               	movf	??_sprintf,w
  9648  0555  1683               	bsf	3,5	;RP0=1, select bank1
  9649  0556  1303               	bcf	3,6	;RP1=0, select bank1
  9650  0557  02CF               	subwf	sprintf@prec^(0+128),f
  9651  0558  1283               	bcf	3,5	;RP0=0, select bank0
  9652  0559  1303               	bcf	3,6	;RP1=0, select bank0
  9653  055A  0863               	movf	??_sprintf+1,w
  9654  055B  1683               	bsf	3,5	;RP0=1, select bank1
  9655  055C  1303               	bcf	3,6	;RP1=0, select bank1
  9656  055D  1C03               	skipc
  9657  055E  03D0               	decf	(sprintf@prec+1)^(0+128),f
  9658  055F  02D0               	subwf	(sprintf@prec+1)^(0+128),f
  9659  0560                     l3106:
  9660                           
  9661                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9662  0560  0851               	movf	sprintf@c^(0+128),w
  9663  0561  1903               	btfsc	3,2
  9664  0562  2D64               	goto	u4611
  9665  0563  2D65               	goto	u4610
  9666  0564                     u4611:
  9667  0564  2D78               	goto	l3112
  9668  0565                     u4610:
  9669  0565                     l3108:
  9670                           
  9671                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++ = ('.')));
  9672  0565  302E               	movlw	46
  9673  0566  1283               	bcf	3,5	;RP0=0, select bank0
  9674  0567  1303               	bcf	3,6	;RP1=0, select bank0
  9675  0568  00E2               	movwf	??_sprintf
  9676  0569  1683               	bsf	3,5	;RP0=1, select bank1
  9677  056A  1303               	bcf	3,6	;RP1=0, select bank1
  9678  056B  084B               	movf	sprintf@sp^(0+128),w
  9679  056C  0084               	movwf	4
  9680  056D  1283               	bcf	3,5	;RP0=0, select bank0
  9681  056E  1303               	bcf	3,6	;RP1=0, select bank0
  9682  056F  0862               	movf	??_sprintf,w
  9683  0570  1383               	bcf	3,7	;select IRP bank0
  9684  0571  0080               	movwf	0
  9685  0572                     l3110:
  9686  0572  3001               	movlw	1
  9687  0573  00E2               	movwf	??_sprintf
  9688  0574  0862               	movf	??_sprintf,w
  9689  0575  1683               	bsf	3,5	;RP0=1, select bank1
  9690  0576  1303               	bcf	3,6	;RP1=0, select bank1
  9691  0577  07CB               	addwf	sprintf@sp^(0+128),f
  9692  0578                     l3112:
  9693                           
  9694                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(f
      +                          val * scale((signed char)c));
  9695  0578  0851               	movf	sprintf@c^(0+128),w
  9696  0579  120A  158A  2285  120A  118A  	fcall	_scale
  9697  057E  1283               	bcf	3,5	;RP0=0, select bank0
  9698  057F  1303               	bcf	3,6	;RP1=0, select bank0
  9699  0580  0838               	movf	?_scale,w
  9700  0581  1683               	bsf	3,5	;RP0=1, select bank1
  9701  0582  1303               	bcf	3,6	;RP1=0, select bank1
  9702  0583  00B9               	movwf	_sprintf$1041^(0+128)
  9703  0584  1283               	bcf	3,5	;RP0=0, select bank0
  9704  0585  1303               	bcf	3,6	;RP1=0, select bank0
  9705  0586  0839               	movf	?_scale+1,w
  9706  0587  1683               	bsf	3,5	;RP0=1, select bank1
  9707  0588  1303               	bcf	3,6	;RP1=0, select bank1
  9708  0589  00BA               	movwf	(_sprintf$1041+1)^(0+128)
  9709  058A  1283               	bcf	3,5	;RP0=0, select bank0
  9710  058B  1303               	bcf	3,6	;RP1=0, select bank0
  9711  058C  083A               	movf	?_scale+2,w
  9712  058D  1683               	bsf	3,5	;RP0=1, select bank1
  9713  058E  1303               	bcf	3,6	;RP1=0, select bank1
  9714  058F  00BB               	movwf	(_sprintf$1041+2)^(0+128)
  9715  0590                     l3114:
  9716                           
  9717                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(f
      +                          val * scale((signed char)c));
  9718  0590  0839               	movf	_sprintf$1041^(0+128),w
  9719  0591  1283               	bcf	3,5	;RP0=0, select bank0
  9720  0592  1303               	bcf	3,6	;RP1=0, select bank0
  9721  0593  00AB               	movwf	___ftmul@f2
  9722  0594  1683               	bsf	3,5	;RP0=1, select bank1
  9723  0595  1303               	bcf	3,6	;RP1=0, select bank1
  9724  0596  083A               	movf	(_sprintf$1041+1)^(0+128),w
  9725  0597  1283               	bcf	3,5	;RP0=0, select bank0
  9726  0598  1303               	bcf	3,6	;RP1=0, select bank0
  9727  0599  00AC               	movwf	___ftmul@f2+1
  9728  059A  1683               	bsf	3,5	;RP0=1, select bank1
  9729  059B  1303               	bcf	3,6	;RP1=0, select bank1
  9730  059C  083B               	movf	(_sprintf$1041+2)^(0+128),w
  9731  059D  1283               	bcf	3,5	;RP0=0, select bank0
  9732  059E  1303               	bcf	3,6	;RP1=0, select bank0
  9733  059F  00AD               	movwf	___ftmul@f2+2
  9734  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  9735  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  9736  05A2  084C               	movf	sprintf@fval^(0+128),w
  9737  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  9738  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  9739  05A5  00A8               	movwf	___ftmul@f1
  9740  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  9741  05A7  1303               	bcf	3,6	;RP1=0, select bank1
  9742  05A8  084D               	movf	(sprintf@fval+1)^(0+128),w
  9743  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  9744  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  9745  05AB  00A9               	movwf	___ftmul@f1+1
  9746  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  9747  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  9748  05AE  084E               	movf	(sprintf@fval+2)^(0+128),w
  9749  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  9750  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  9751  05B1  00AA               	movwf	___ftmul@f1+2
  9752  05B2  120A  118A  200D  120A  118A  	fcall	___ftmul
  9753  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  9754  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  9755  05B9  0828               	movf	?___ftmul,w
  9756  05BA  00C1               	movwf	___fttol@f1
  9757  05BB  0829               	movf	?___ftmul+1,w
  9758  05BC  00C2               	movwf	___fttol@f1+1
  9759  05BD  082A               	movf	?___ftmul+2,w
  9760  05BE  00C3               	movwf	___fttol@f1+2
  9761  05BF  160A  118A  22E2  120A  118A  	fcall	___fttol
  9762  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  9763  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  9764  05C6  0844               	movf	?___fttol+3,w
  9765  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  9766  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  9767  05C9  00C0               	movwf	(sprintf@val+3)^(0+128)
  9768  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  9769  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  9770  05CC  0843               	movf	?___fttol+2,w
  9771  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  9772  05CE  1303               	bcf	3,6	;RP1=0, select bank1
  9773  05CF  00BF               	movwf	(sprintf@val+2)^(0+128)
  9774  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  9775  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  9776  05D2  0842               	movf	?___fttol+1,w
  9777  05D3  1683               	bsf	3,5	;RP0=1, select bank1
  9778  05D4  1303               	bcf	3,6	;RP1=0, select bank1
  9779  05D5  00BE               	movwf	(sprintf@val+1)^(0+128)
  9780  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  9781  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  9782  05D8  0841               	movf	?___fttol,w
  9783  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  9784  05DA  1303               	bcf	3,6	;RP1=0, select bank1
  9785  05DB  00BD               	movwf	sprintf@val^(0+128)
  9786                           
  9787                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
  9788  05DC  2E8E               	goto	l3124
  9789  05DD                     l3116:
  9790                           
  9791                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1255:     tmpval.vd = val/dpower
      +                          s[c];
  9792  05DD  0851               	movf	sprintf@c^(0+128),w
  9793  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  9794  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  9795  05E0  00E2               	movwf	??_sprintf
  9796  05E1  3001               	movlw	1
  9797  05E2                     u4625:
  9798  05E2  1003               	clrc
  9799  05E3  0DE2               	rlf	??_sprintf,f
  9800  05E4  3EFF               	addlw	-1
  9801  05E5  1D03               	skipz
  9802  05E6  2DE2               	goto	u4625
  9803  05E7  1003               	clrc
  9804  05E8  0D62               	rlf	??_sprintf,w
  9805  05E9  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9806  05EA  0084               	movwf	4
  9807  05EB  160A  118A  2000  120A  118A  	fcall	stringdir
  9808  05F0  00F0               	movwf	___lldiv@divisor
  9809  05F1  160A  118A  2000  120A  118A  	fcall	stringdir
  9810  05F6  00F1               	movwf	___lldiv@divisor+1
  9811  05F7  160A  118A  2000  120A  118A  	fcall	stringdir
  9812  05FC  00F2               	movwf	___lldiv@divisor+2
  9813  05FD  160A  118A  2000  120A  118A  	fcall	stringdir
  9814  0602  00F3               	movwf	___lldiv@divisor+3
  9815  0603  1683               	bsf	3,5	;RP0=1, select bank1
  9816  0604  1303               	bcf	3,6	;RP1=0, select bank1
  9817  0605  0840               	movf	(sprintf@val+3)^(0+128),w
  9818  0606  00F7               	movwf	___lldiv@dividend+3
  9819  0607  083F               	movf	(sprintf@val+2)^(0+128),w
  9820  0608  00F6               	movwf	___lldiv@dividend+2
  9821  0609  083E               	movf	(sprintf@val+1)^(0+128),w
  9822  060A  00F5               	movwf	___lldiv@dividend+1
  9823  060B  083D               	movf	sprintf@val^(0+128),w
  9824  060C  00F4               	movwf	___lldiv@dividend
  9825  060D  160A  118A  2197  120A  118A  	fcall	___lldiv
  9826  0612  0873               	movf	?___lldiv+3,w
  9827  0613  1683               	bsf	3,5	;RP0=1, select bank1
  9828  0614  1303               	bcf	3,6	;RP1=0, select bank1
  9829  0615  00C8               	movwf	(sprintf@tmpval+3)^(0+128)
  9830  0616  0872               	movf	?___lldiv+2,w
  9831  0617  00C7               	movwf	(sprintf@tmpval+2)^(0+128)
  9832  0618  0871               	movf	?___lldiv+1,w
  9833  0619  00C6               	movwf	(sprintf@tmpval+1)^(0+128)
  9834  061A  0870               	movf	?___lldiv,w
  9835  061B  00C5               	movwf	sprintf@tmpval^(0+128)
  9836  061C                     l3118:
  9837                           
  9838                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1256:     tmpval.vd %= 10;
  9839  061C  3000               	movlw	0
  9840  061D  00F3               	movwf	___llmod@divisor+3
  9841  061E  3000               	movlw	0
  9842  061F  00F2               	movwf	___llmod@divisor+2
  9843  0620  3000               	movlw	0
  9844  0621  00F1               	movwf	___llmod@divisor+1
  9845  0622  300A               	movlw	10
  9846  0623  00F0               	movwf	___llmod@divisor
  9847  0624  0848               	movf	(sprintf@tmpval+3)^(0+128),w
  9848  0625  00F7               	movwf	___llmod@dividend+3
  9849  0626  0847               	movf	(sprintf@tmpval+2)^(0+128),w
  9850  0627  00F6               	movwf	___llmod@dividend+2
  9851  0628  0846               	movf	(sprintf@tmpval+1)^(0+128),w
  9852  0629  00F5               	movwf	___llmod@dividend+1
  9853  062A  0845               	movf	sprintf@tmpval^(0+128),w
  9854  062B  00F4               	movwf	___llmod@dividend
  9855  062C  160A  158A  2753  120A  118A  	fcall	___llmod
  9856  0631  0873               	movf	?___llmod+3,w
  9857  0632  1683               	bsf	3,5	;RP0=1, select bank1
  9858  0633  1303               	bcf	3,6	;RP1=0, select bank1
  9859  0634  00C8               	movwf	(sprintf@tmpval+3)^(0+128)
  9860  0635  0872               	movf	?___llmod+2,w
  9861  0636  00C7               	movwf	(sprintf@tmpval+2)^(0+128)
  9862  0637  0871               	movf	?___llmod+1,w
  9863  0638  00C6               	movwf	(sprintf@tmpval+1)^(0+128)
  9864  0639  0870               	movf	?___llmod,w
  9865  063A  00C5               	movwf	sprintf@tmpval^(0+128)
  9866  063B                     l3120:
  9867                           
  9868                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++ = ('0' + tmpva
      +                          l.vd)));
  9869  063B  0845               	movf	sprintf@tmpval^(0+128),w
  9870  063C  3E30               	addlw	48
  9871  063D  1283               	bcf	3,5	;RP0=0, select bank0
  9872  063E  1303               	bcf	3,6	;RP1=0, select bank0
  9873  063F  00E2               	movwf	??_sprintf
  9874  0640  1683               	bsf	3,5	;RP0=1, select bank1
  9875  0641  1303               	bcf	3,6	;RP1=0, select bank1
  9876  0642  084B               	movf	sprintf@sp^(0+128),w
  9877  0643  0084               	movwf	4
  9878  0644  1283               	bcf	3,5	;RP0=0, select bank0
  9879  0645  1303               	bcf	3,6	;RP1=0, select bank0
  9880  0646  0862               	movf	??_sprintf,w
  9881  0647  1383               	bcf	3,7	;select IRP bank0
  9882  0648  0080               	movwf	0
  9883  0649  3001               	movlw	1
  9884  064A  00E2               	movwf	??_sprintf
  9885  064B  0862               	movf	??_sprintf,w
  9886  064C  1683               	bsf	3,5	;RP0=1, select bank1
  9887  064D  1303               	bcf	3,6	;RP1=0, select bank1
  9888  064E  07CB               	addwf	sprintf@sp^(0+128),f
  9889  064F                     l3122:
  9890                           
  9891                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1258:     val %= dpowers[c];
  9892  064F  0851               	movf	sprintf@c^(0+128),w
  9893  0650  1283               	bcf	3,5	;RP0=0, select bank0
  9894  0651  1303               	bcf	3,6	;RP1=0, select bank0
  9895  0652  00E2               	movwf	??_sprintf
  9896  0653  3001               	movlw	1
  9897  0654                     u4635:
  9898  0654  1003               	clrc
  9899  0655  0DE2               	rlf	??_sprintf,f
  9900  0656  3EFF               	addlw	-1
  9901  0657  1D03               	skipz
  9902  0658  2E54               	goto	u4635
  9903  0659  1003               	clrc
  9904  065A  0D62               	rlf	??_sprintf,w
  9905  065B  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9906  065C  0084               	movwf	4
  9907  065D  160A  118A  2000  120A  118A  	fcall	stringdir
  9908  0662  00F0               	movwf	___llmod@divisor
  9909  0663  160A  118A  2000  120A  118A  	fcall	stringdir
  9910  0668  00F1               	movwf	___llmod@divisor+1
  9911  0669  160A  118A  2000  120A  118A  	fcall	stringdir
  9912  066E  00F2               	movwf	___llmod@divisor+2
  9913  066F  160A  118A  2000  120A  118A  	fcall	stringdir
  9914  0674  00F3               	movwf	___llmod@divisor+3
  9915  0675  1683               	bsf	3,5	;RP0=1, select bank1
  9916  0676  1303               	bcf	3,6	;RP1=0, select bank1
  9917  0677  0840               	movf	(sprintf@val+3)^(0+128),w
  9918  0678  00F7               	movwf	___llmod@dividend+3
  9919  0679  083F               	movf	(sprintf@val+2)^(0+128),w
  9920  067A  00F6               	movwf	___llmod@dividend+2
  9921  067B  083E               	movf	(sprintf@val+1)^(0+128),w
  9922  067C  00F5               	movwf	___llmod@dividend+1
  9923  067D  083D               	movf	sprintf@val^(0+128),w
  9924  067E  00F4               	movwf	___llmod@dividend
  9925  067F  160A  158A  2753  120A  118A  	fcall	___llmod
  9926  0684  0873               	movf	?___llmod+3,w
  9927  0685  1683               	bsf	3,5	;RP0=1, select bank1
  9928  0686  1303               	bcf	3,6	;RP1=0, select bank1
  9929  0687  00C0               	movwf	(sprintf@val+3)^(0+128)
  9930  0688  0872               	movf	?___llmod+2,w
  9931  0689  00BF               	movwf	(sprintf@val+2)^(0+128)
  9932  068A  0871               	movf	?___llmod+1,w
  9933  068B  00BE               	movwf	(sprintf@val+1)^(0+128)
  9934  068C  0870               	movf	?___llmod,w
  9935  068D  00BD               	movwf	sprintf@val^(0+128)
  9936  068E                     l3124:
  9937                           
  9938                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
  9939  068E  3001               	movlw	1
  9940  068F  02D1               	subwf	sprintf@c^(0+128),f
  9941  0690  0A51               	incf	sprintf@c^(0+128),w
  9942  0691  1D03               	btfss	3,2
  9943  0692  2E94               	goto	u4641
  9944  0693  2E95               	goto	u4640
  9945  0694                     u4641:
  9946  0694  2DDD               	goto	l3116
  9947  0695                     u4640:
  9948  0695  2EAF               	goto	l3132
  9949  0696                     l3126:
  9950                           
  9951                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++ = ('0')));
  9952  0696  3030               	movlw	48
  9953  0697  1283               	bcf	3,5	;RP0=0, select bank0
  9954  0698  1303               	bcf	3,6	;RP1=0, select bank0
  9955  0699  00E2               	movwf	??_sprintf
  9956  069A  1683               	bsf	3,5	;RP0=1, select bank1
  9957  069B  1303               	bcf	3,6	;RP1=0, select bank1
  9958  069C  084B               	movf	sprintf@sp^(0+128),w
  9959  069D  0084               	movwf	4
  9960  069E  1283               	bcf	3,5	;RP0=0, select bank0
  9961  069F  1303               	bcf	3,6	;RP1=0, select bank0
  9962  06A0  0862               	movf	??_sprintf,w
  9963  06A1  1383               	bcf	3,7	;select IRP bank0
  9964  06A2  0080               	movwf	0
  9965  06A3                     l3128:
  9966  06A3  3001               	movlw	1
  9967  06A4  00E2               	movwf	??_sprintf
  9968  06A5  0862               	movf	??_sprintf,w
  9969  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  9970  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  9971  06A8  07CB               	addwf	sprintf@sp^(0+128),f
  9972  06A9                     l3130:
  9973                           
  9974                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  9975  06A9  30FF               	movlw	255
  9976  06AA  07CF               	addwf	sprintf@prec^(0+128),f
  9977  06AB  1803               	skipnc
  9978  06AC  0AD0               	incf	(sprintf@prec+1)^(0+128),f
  9979  06AD  30FF               	movlw	255
  9980  06AE  07D0               	addwf	(sprintf@prec+1)^(0+128),f
  9981  06AF                     l3132:
  9982                           
  9983                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1261:    while(prec) {
  9984  06AF  084F               	movf	sprintf@prec^(0+128),w
  9985  06B0  0450               	iorwf	(sprintf@prec+1)^(0+128),w
  9986  06B1  1D03               	btfss	3,2
  9987  06B2  2EB4               	goto	u4651
  9988  06B3  2EB5               	goto	u4650
  9989  06B4                     u4651:
  9990  06B4  2E96               	goto	l3126
  9991  06B5                     u4650:
  9992  06B5  2FB9               	goto	l3180
  9993  06B6                     l3134:
  9994                           
  9995                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && val == 0
      +                          )
  9996  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  9997  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  9998  06B8  084F               	movf	sprintf@prec^(0+128),w
  9999  06B9  0450               	iorwf	(sprintf@prec+1)^(0+128),w
 10000  06BA  1D03               	btfss	3,2
 10001  06BB  2EBD               	goto	u4661
 10002  06BC  2EBE               	goto	u4660
 10003  06BD                     u4661:
 10004  06BD  2ECC               	goto	l379
 10005  06BE                     u4660:
 10006  06BE                     l3136:
 10007  06BE  0840               	movf	(sprintf@val+3)^(0+128),w
 10008  06BF  043F               	iorwf	(sprintf@val+2)^(0+128),w
 10009  06C0  043E               	iorwf	(sprintf@val+1)^(0+128),w
 10010  06C1  043D               	iorwf	sprintf@val^(0+128),w
 10011  06C2  1D03               	skipz
 10012  06C3  2EC5               	goto	u4671
 10013  06C4  2EC6               	goto	u4670
 10014  06C5                     u4671:
 10015  06C5  2ECC               	goto	l379
 10016  06C6                     u4670:
 10017  06C6                     l3138:
 10018                           
 10019                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10020  06C6  3001               	movlw	1
 10021  06C7  07CF               	addwf	sprintf@prec^(0+128),f
 10022  06C8  1803               	skipnc
 10023  06C9  0AD0               	incf	(sprintf@prec+1)^(0+128),f
 10024  06CA  3000               	movlw	0
 10025  06CB  07D0               	addwf	(sprintf@prec+1)^(0+128),f
 10026  06CC                     l379:
 10027                           
 10028                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
 10029  06CC  0850               	movf	(sprintf@prec+1)^(0+128),w
 10030  06CD  3A80               	xorlw	128
 10031  06CE  3C80               	sublw	128
 10032  06CF  1D03               	skipz
 10033  06D0  2ED3               	goto	u4685
 10034  06D1  084F               	movf	sprintf@prec^(0+128),w
 10035  06D2  0251               	subwf	sprintf@c^(0+128),w
 10036  06D3                     u4685:
 10037  06D3  1803               	skipnc
 10038  06D4  2ED6               	goto	u4681
 10039  06D5  2ED7               	goto	u4680
 10040  06D6                     u4681:
 10041  06D6  2EE2               	goto	l3142
 10042  06D7                     u4680:
 10043  06D7                     l3140:
 10044                           
 10045                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1366:    c = (char)prec;
 10046  06D7  1683               	bsf	3,5	;RP0=1, select bank1
 10047  06D8  1303               	bcf	3,6	;RP1=0, select bank1
 10048  06D9  084F               	movf	sprintf@prec^(0+128),w
 10049  06DA  1283               	bcf	3,5	;RP0=0, select bank0
 10050  06DB  1303               	bcf	3,6	;RP1=0, select bank0
 10051  06DC  00E2               	movwf	??_sprintf
 10052  06DD  0862               	movf	??_sprintf,w
 10053  06DE  1683               	bsf	3,5	;RP0=1, select bank1
 10054  06DF  1303               	bcf	3,6	;RP1=0, select bank1
 10055  06E0  00D1               	movwf	sprintf@c^(0+128)
 10056  06E1  2F06               	goto	l3146
 10057  06E2                     l3142:
 10058  06E2  1683               	bsf	3,5	;RP0=1, select bank1
 10059  06E3  1303               	bcf	3,6	;RP1=0, select bank1
 10060  06E4  0850               	movf	(sprintf@prec+1)^(0+128),w
 10061  06E5  3A80               	xorlw	128
 10062  06E6  1283               	bcf	3,5	;RP0=0, select bank0
 10063  06E7  1303               	bcf	3,6	;RP1=0, select bank0
 10064  06E8  00E2               	movwf	??_sprintf
 10065  06E9  3080               	movlw	128
 10066  06EA  0262               	subwf	??_sprintf,w
 10067  06EB  1D03               	skipz
 10068  06EC  2EF1               	goto	u4695
 10069  06ED  1683               	bsf	3,5	;RP0=1, select bank1
 10070  06EE  1303               	bcf	3,6	;RP1=0, select bank1
 10071  06EF  0851               	movf	sprintf@c^(0+128),w
 10072  06F0  024F               	subwf	sprintf@prec^(0+128),w
 10073  06F1                     u4695:
 10074  06F1  1803               	skipnc
 10075  06F2  2EF4               	goto	u4691
 10076  06F3  2EF5               	goto	u4690
 10077  06F4                     u4691:
 10078  06F4  2F06               	goto	l3146
 10079  06F5                     u4690:
 10080  06F5                     l3144:
 10081                           
 10082                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
 10083  06F5  1683               	bsf	3,5	;RP0=1, select bank1
 10084  06F6  1303               	bcf	3,6	;RP1=0, select bank1
 10085  06F7  0851               	movf	sprintf@c^(0+128),w
 10086  06F8  1283               	bcf	3,5	;RP0=0, select bank0
 10087  06F9  1303               	bcf	3,6	;RP1=0, select bank0
 10088  06FA  00E2               	movwf	??_sprintf
 10089  06FB  01E3               	clrf	??_sprintf+1
 10090  06FC  0862               	movf	??_sprintf,w
 10091  06FD  1683               	bsf	3,5	;RP0=1, select bank1
 10092  06FE  1303               	bcf	3,6	;RP1=0, select bank1
 10093  06FF  00CF               	movwf	sprintf@prec^(0+128)
 10094  0700  1283               	bcf	3,5	;RP0=0, select bank0
 10095  0701  1303               	bcf	3,6	;RP1=0, select bank0
 10096  0702  0863               	movf	??_sprintf+1,w
 10097  0703  1683               	bsf	3,5	;RP0=1, select bank1
 10098  0704  1303               	bcf	3,6	;RP1=0, select bank1
 10099  0705  00D0               	movwf	(sprintf@prec+1)^(0+128)
 10100  0706                     l3146:
 10101                           
 10102                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0x03)
 10103  0706  1683               	bsf	3,5	;RP0=1, select bank1
 10104  0707  1303               	bcf	3,6	;RP1=0, select bank1
 10105  0708  0843               	movf	sprintf@width^(0+128),w
 10106  0709  0444               	iorwf	(sprintf@width+1)^(0+128),w
 10107  070A  1903               	btfsc	3,2
 10108  070B  2F0D               	goto	u4701
 10109  070C  2F0E               	goto	u4700
 10110  070D                     u4701:
 10111  070D  2F28               	goto	l3152
 10112  070E                     u4700:
 10113  070E                     l3148:
 10114  070E  3003               	movlw	3
 10115  070F  0541               	andwf	sprintf@flag^(0+128),w
 10116  0710  1283               	bcf	3,5	;RP0=0, select bank0
 10117  0711  1303               	bcf	3,6	;RP1=0, select bank0
 10118  0712  00E2               	movwf	??_sprintf
 10119  0713  3000               	movlw	0
 10120  0714  1683               	bsf	3,5	;RP0=1, select bank1
 10121  0715  1303               	bcf	3,6	;RP1=0, select bank1
 10122  0716  0542               	andwf	(sprintf@flag+1)^(0+128),w
 10123  0717  1283               	bcf	3,5	;RP0=0, select bank0
 10124  0718  1303               	bcf	3,6	;RP1=0, select bank0
 10125  0719  00E3               	movwf	??_sprintf+1
 10126  071A  0862               	movf	??_sprintf,w
 10127  071B  0463               	iorwf	??_sprintf+1,w
 10128  071C  1903               	btfsc	3,2
 10129  071D  2F1F               	goto	u4711
 10130  071E  2F20               	goto	u4710
 10131  071F                     u4711:
 10132  071F  2F28               	goto	l3152
 10133  0720                     u4710:
 10134  0720                     l3150:
 10135                           
 10136                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10137  0720  30FF               	movlw	255
 10138  0721  1683               	bsf	3,5	;RP0=1, select bank1
 10139  0722  1303               	bcf	3,6	;RP1=0, select bank1
 10140  0723  07C3               	addwf	sprintf@width^(0+128),f
 10141  0724  1803               	skipnc
 10142  0725  0AC4               	incf	(sprintf@width+1)^(0+128),f
 10143  0726  30FF               	movlw	255
 10144  0727  07C4               	addwf	(sprintf@width+1)^(0+128),f
 10145  0728                     l3152:
 10146                           
 10147                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1374:   if(flag & 0x4000) {
 10148  0728  1683               	bsf	3,5	;RP0=1, select bank1
 10149  0729  1303               	bcf	3,6	;RP1=0, select bank1
 10150  072A  1F42               	btfss	(sprintf@flag+1)^(0+128),6
 10151  072B  2F2D               	goto	u4721
 10152  072C  2F2E               	goto	u4720
 10153  072D                     u4721:
 10154  072D  2F51               	goto	l3160
 10155  072E                     u4720:
 10156  072E                     l3154:
 10157                           
 10158                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1375:    if(width > prec)
 10159  072E  0850               	movf	(sprintf@prec+1)^(0+128),w
 10160  072F  3A80               	xorlw	128
 10161  0730  1283               	bcf	3,5	;RP0=0, select bank0
 10162  0731  1303               	bcf	3,6	;RP1=0, select bank0
 10163  0732  00E2               	movwf	??_sprintf
 10164  0733  1683               	bsf	3,5	;RP0=1, select bank1
 10165  0734  1303               	bcf	3,6	;RP1=0, select bank1
 10166  0735  0844               	movf	(sprintf@width+1)^(0+128),w
 10167  0736  3A80               	xorlw	128
 10168  0737  1283               	bcf	3,5	;RP0=0, select bank0
 10169  0738  1303               	bcf	3,6	;RP1=0, select bank0
 10170  0739  0262               	subwf	??_sprintf,w
 10171  073A  1D03               	skipz
 10172  073B  2F40               	goto	u4735
 10173  073C  1683               	bsf	3,5	;RP0=1, select bank1
 10174  073D  1303               	bcf	3,6	;RP1=0, select bank1
 10175  073E  0843               	movf	sprintf@width^(0+128),w
 10176  073F  024F               	subwf	sprintf@prec^(0+128),w
 10177  0740                     u4735:
 10178  0740  1803               	skipnc
 10179  0741  2F43               	goto	u4731
 10180  0742  2F44               	goto	u4730
 10181  0743                     u4731:
 10182  0743  2F4D               	goto	l3158
 10183  0744                     u4730:
 10184  0744                     l3156:
 10185                           
 10186                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1376:     width -= prec;
 10187  0744  1683               	bsf	3,5	;RP0=1, select bank1
 10188  0745  1303               	bcf	3,6	;RP1=0, select bank1
 10189  0746  084F               	movf	sprintf@prec^(0+128),w
 10190  0747  02C3               	subwf	sprintf@width^(0+128),f
 10191  0748  0850               	movf	(sprintf@prec+1)^(0+128),w
 10192  0749  1C03               	skipc
 10193  074A  03C4               	decf	(sprintf@width+1)^(0+128),f
 10194  074B  02C4               	subwf	(sprintf@width+1)^(0+128),f
 10195  074C  2F51               	goto	l3160
 10196  074D                     l3158:
 10197                           
 10198                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1378:     width = 0;
 10199  074D  1683               	bsf	3,5	;RP0=1, select bank1
 10200  074E  1303               	bcf	3,6	;RP1=0, select bank1
 10201  074F  01C3               	clrf	sprintf@width^(0+128)
 10202  0750  01C4               	clrf	(sprintf@width+1)^(0+128)
 10203  0751                     l3160:
 10204                           
 10205                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
 10206  0751  0844               	movf	(sprintf@width+1)^(0+128),w
 10207  0752  3A80               	xorlw	128
 10208  0753  3C80               	sublw	128
 10209  0754  1D03               	skipz
 10210  0755  2F58               	goto	u4745
 10211  0756  0843               	movf	sprintf@width^(0+128),w
 10212  0757  0251               	subwf	sprintf@c^(0+128),w
 10213  0758                     u4745:
 10214  0758  1803               	skipnc
 10215  0759  2F5B               	goto	u4741
 10216  075A  2F5C               	goto	u4740
 10217  075B                     u4741:
 10218  075B  2F70               	goto	l3164
 10219  075C                     u4740:
 10220  075C                     l3162:
 10221                           
 10222                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
 10223  075C  1683               	bsf	3,5	;RP0=1, select bank1
 10224  075D  1303               	bcf	3,6	;RP1=0, select bank1
 10225  075E  0851               	movf	sprintf@c^(0+128),w
 10226  075F  1283               	bcf	3,5	;RP0=0, select bank0
 10227  0760  1303               	bcf	3,6	;RP1=0, select bank0
 10228  0761  00E2               	movwf	??_sprintf
 10229  0762  01E3               	clrf	??_sprintf+1
 10230  0763  0862               	movf	??_sprintf,w
 10231  0764  1683               	bsf	3,5	;RP0=1, select bank1
 10232  0765  1303               	bcf	3,6	;RP1=0, select bank1
 10233  0766  02C3               	subwf	sprintf@width^(0+128),f
 10234  0767  1283               	bcf	3,5	;RP0=0, select bank0
 10235  0768  1303               	bcf	3,6	;RP1=0, select bank0
 10236  0769  0863               	movf	??_sprintf+1,w
 10237  076A  1683               	bsf	3,5	;RP0=1, select bank1
 10238  076B  1303               	bcf	3,6	;RP1=0, select bank1
 10239  076C  1C03               	skipc
 10240  076D  03C4               	decf	(sprintf@width+1)^(0+128),f
 10241  076E  02C4               	subwf	(sprintf@width+1)^(0+128),f
 10242  076F  2F74               	goto	l3166
 10243  0770                     l3164:
 10244                           
 10245                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
 10246  0770  1683               	bsf	3,5	;RP0=1, select bank1
 10247  0771  1303               	bcf	3,6	;RP1=0, select bank1
 10248  0772  01C3               	clrf	sprintf@width^(0+128)
 10249  0773  01C4               	clrf	(sprintf@width+1)^(0+128)
 10250  0774                     l3166:
 10251                           
 10252                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1448:   {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 1450:    if(width
 10253  0774  0843               	movf	sprintf@width^(0+128),w
 10254  0775  0444               	iorwf	(sprintf@width+1)^(0+128),w
 10255  0776  1903               	btfsc	3,2
 10256  0777  2F79               	goto	u4751
 10257  0778  2F7A               	goto	u4750
 10258  0779                     u4751:
 10259  0779  2F99               	goto	l3174
 10260  077A                     u4750:
 10261  077A                     l3168:
 10262                           
 10263                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')));
 10264  077A  3020               	movlw	32
 10265  077B  1283               	bcf	3,5	;RP0=0, select bank0
 10266  077C  1303               	bcf	3,6	;RP1=0, select bank0
 10267  077D  00E2               	movwf	??_sprintf
 10268  077E  1683               	bsf	3,5	;RP0=1, select bank1
 10269  077F  1303               	bcf	3,6	;RP1=0, select bank1
 10270  0780  084B               	movf	sprintf@sp^(0+128),w
 10271  0781  0084               	movwf	4
 10272  0782  1283               	bcf	3,5	;RP0=0, select bank0
 10273  0783  1303               	bcf	3,6	;RP1=0, select bank0
 10274  0784  0862               	movf	??_sprintf,w
 10275  0785  1383               	bcf	3,7	;select IRP bank0
 10276  0786  0080               	movwf	0
 10277  0787                     l3170:
 10278  0787  3001               	movlw	1
 10279  0788  00E2               	movwf	??_sprintf
 10280  0789  0862               	movf	??_sprintf,w
 10281  078A  1683               	bsf	3,5	;RP0=1, select bank1
 10282  078B  1303               	bcf	3,6	;RP1=0, select bank1
 10283  078C  07CB               	addwf	sprintf@sp^(0+128),f
 10284  078D                     l3172:
 10285  078D  30FF               	movlw	255
 10286  078E  07C3               	addwf	sprintf@width^(0+128),f
 10287  078F  1803               	skipnc
 10288  0790  0AC4               	incf	(sprintf@width+1)^(0+128),f
 10289  0791  30FF               	movlw	255
 10290  0792  07C4               	addwf	(sprintf@width+1)^(0+128),f
 10291  0793  0843               	movf	sprintf@width^(0+128),w
 10292  0794  0444               	iorwf	(sprintf@width+1)^(0+128),w
 10293  0795  1D03               	btfss	3,2
 10294  0796  2F98               	goto	u4761
 10295  0797  2F99               	goto	u4760
 10296  0798                     u4761:
 10297  0798  2F7A               	goto	l3168
 10298  0799                     u4760:
 10299  0799                     l3174:
 10300                           
 10301                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 10302  0799  3003               	movlw	3
 10303  079A  0541               	andwf	sprintf@flag^(0+128),w
 10304  079B  1283               	bcf	3,5	;RP0=0, select bank0
 10305  079C  1303               	bcf	3,6	;RP1=0, select bank0
 10306  079D  00E2               	movwf	??_sprintf
 10307  079E  3000               	movlw	0
 10308  079F  1683               	bsf	3,5	;RP0=1, select bank1
 10309  07A0  1303               	bcf	3,6	;RP1=0, select bank1
 10310  07A1  0542               	andwf	(sprintf@flag+1)^(0+128),w
 10311  07A2  1283               	bcf	3,5	;RP0=0, select bank0
 10312  07A3  1303               	bcf	3,6	;RP1=0, select bank0
 10313  07A4  00E3               	movwf	??_sprintf+1
 10314  07A5  0862               	movf	??_sprintf,w
 10315  07A6  0463               	iorwf	??_sprintf+1,w
 10316  07A7  1903               	btfsc	3,2
 10317  07A8  2FAA               	goto	u4771
 10318  07A9  2FAB               	goto	u4770
 10319  07AA                     u4771:
 10320  07AA  2FB9               	goto	l3180
 10321  07AB                     u4770:
 10322  07AB                     l3176:
 10323                           
 10324                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
 10325  07AB  302D               	movlw	45
 10326  07AC  00E2               	movwf	??_sprintf
 10327  07AD  1683               	bsf	3,5	;RP0=1, select bank1
 10328  07AE  1303               	bcf	3,6	;RP1=0, select bank1
 10329  07AF  084B               	movf	sprintf@sp^(0+128),w
 10330  07B0  0084               	movwf	4
 10331  07B1  1283               	bcf	3,5	;RP0=0, select bank0
 10332  07B2  1303               	bcf	3,6	;RP1=0, select bank0
 10333  07B3  0862               	movf	??_sprintf,w
 10334  07B4  1383               	bcf	3,7	;select IRP bank0
 10335  07B5  0080               	movwf	0
 10336  07B6  120A  158A  2D51   	goto	l2938
 10337  07B9                     l3180:
 10338                           
 10339                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
 10340  07B9  3001               	movlw	1
 10341  07BA  1283               	bcf	3,5	;RP0=0, select bank0
 10342  07BB  07DB               	addwf	sprintf@f,f
 10343  07BC  30FF               	movlw	-1
 10344  07BD  075B               	addwf	sprintf@f,w
 10345  07BE  0084               	movwf	4
 10346  07BF  160A  118A  2000  120A  118A  	fcall	stringdir
 10347  07C4  00E2               	movwf	??_sprintf
 10348  07C5  0862               	movf	??_sprintf,w
 10349  07C6  1683               	bsf	3,5	;RP0=1, select bank1
 10350  07C7  1303               	bcf	3,6	;RP1=0, select bank1
 10351  07C8  00D1               	movwf	sprintf@c^(0+128)
 10352  07C9  0851               	movf	sprintf@c^(0+128),w
 10353  07CA  1D03               	btfss	3,2
 10354  07CB  2FCD               	goto	u4781
 10355  07CC  2FD0               	goto	u4780
 10356  07CD                     u4781:
 10357  07CD  120A  158A  2D3E   	goto	l2934
 10358  07D0                     u4780:
 10359  07D0                     l3182:
 10360                           
 10361                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10362  07D0  1683               	bsf	3,5	;RP0=1, select bank1
 10363  07D1  1303               	bcf	3,6	;RP1=0, select bank1
 10364  07D2  084B               	movf	sprintf@sp^(0+128),w
 10365  07D3  0084               	movwf	4
 10366  07D4  1383               	bcf	3,7	;select IRP bank0
 10367  07D5  0180               	clrf	0
 10368  07D6                     l394:
 10369  07D6  0008               	return
 10370  07D7                     __end_of_sprintf:

Data Sizes:
    Strings     27
    Constant    118
    Data        17
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      79
    BANK1            80     25      65
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> datos(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    uartTX_Write_Str@string	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _uartTX_Write_Str->_uartTX_Write
    _uartRC_init->___aldiv
    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___bmul->___lwdiv
    ___ftsub->___lltoft
    _aht_GetTemperature->___lltoft
    _aht_GetHumidity->___lltoft
    _aht_readSensor->_I2C_Master_Read
    ___lltoft->_aht_readSensor
    ___ftmul->___lwdiv
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _uartRC_init->___aldiv
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    _aht_GetTemperature->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->_fround
    _aht_GetHumidity->___lltoft
    ___lltoft->_aht_readSensor
    ___ftmul->___bmul
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   56790
                                             72 BANK0      2     2      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                   _I2C_Master_Write
                    _aht_GetHumidity
                 _aht_GetTemperature
                           _configIO
                            _sprintf
                        _uartRC_init
                       _uartTX_Write
                   _uartTX_Write_Str
 ---------------------------------------------------------------------------------
 (1) _uartTX_Write_Str                                     3     3      0     139
                                              2 COMMON     3     3      0
                       _uartTX_Write
 ---------------------------------------------------------------------------------
 (2) _uartTX_Write                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _uartRC_init                                         16    14      2     721
                                              9 COMMON     2     2      0
                                              6 BANK0     14    12      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    36      7   33175
                                             59 BANK0     13     6      7
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    6946
                                             24 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     932
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1042
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    5731
                                             24 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     477
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     480
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                              4 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1382
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             33 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3278
                                             53 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     560
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _aht_GetTemperature                                   6     3      3   12487
                                             53 BANK0      6     3      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lltoft
                     _aht_readSensor
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3105
                                             40 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) _aht_GetHumidity                                      6     3      3    9404
                                             43 BANK0      6     3      3
                            ___ftdiv
                            ___ftmul
                           ___lltoft
                     _aht_readSensor
 ---------------------------------------------------------------------------------
 (2) _aht_readSensor                                      45    41      4     776
                                              6 COMMON     4     0      4
                                              0 BANK0     41    41      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     234
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     204
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2175
                                             10 COMMON     4     0      4
                                             41 BANK0      2     2      0
                           ___ftpack
                     _aht_readSensor (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3969
                                              8 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2439
                                             24 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1947
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     608
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _aht_GetHumidity
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___lltoft
       ___ftpack
       _aht_readSensor (ARG)
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _aht_readSensor
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _aht_GetTemperature
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___lltoft
       ___ftpack
       _aht_readSensor (ARG)
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _aht_readSensor
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _configIO
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
         _aht_readSensor (ARG)
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
       _aht_readSensor (ARG)
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
   _uartRC_init
     ___aldiv
   _uartTX_Write
   _uartTX_Write_Str
     _uartTX_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     19      41       7       81.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4A      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9E      12        0.0%
ABS                  0      0      9E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 16:36:13 2021

                          pc 0002               ___bmul@product 0026                           l47 1DC7  
                         l90 1D81                           l84 1EE0                           l93 1D6B  
                         l87 1D75                           l99 1D74                 ___awdiv@sign 0021  
                         fsr 0004          ___wmul@multiplicand 0072                 ___ftadd@exp1 0054  
               ___ftadd@exp2 0053                 ___ftadd@sign 0052                          l102 080B  
                        l105 1E6F                          l106 1E72                          l202 1E49  
                        l107 1E77                          l311 0D2F                          l400 1E24  
                        l304 0292                          l153 1FFF                          l164 17FF  
                        l156 1196                          l333 0E22                          l424 0822  
                        l434 11FC                          l371 054F                          l187 16F6  
                        l604 094E                          l364 04FD                          l196 1DB4  
                        l701 1F18                          l623 12E1                          l615 0941  
                        l607 08FE                          l608 0911                          l634 12BD  
                        l394 07D6                          l635 12C7                          l627 12A2  
                        l707 00F1                          l379 06CC                          l636 12E1  
                        l644 0A84                          l724 1DFF                          l581 1265  
                        l469 1382                          l718 000C                          l398 1E0C  
                        l647 099A                          l735 1350                          l479 140A  
                        l648 09A4                          l728 136D                          l840 10E0  
                        l649 09A9                          l658 0A1A                          l850 1F52  
                        l594 1139                          l675 162E                          l683 156C  
                        l684 14DE                          l860 1DA2                          l694 155F  
                        l687 152F                          l777 1EA8                          l769 1FA6  
                        _GIE 005F                          fsr0 0004                          indf 0000  
               ___awmod@sign 0076                 ___ftdiv@cntr 0042                 ___ftdiv@sign 0047  
                       l2100 1D7B                         l2110 1279                         l2102 1266  
                       l2120 12A9                         l2112 1285                         l2104 126B  
                       l2200 122E                         l3000 0EDD                         l2130 12DB  
                       l2122 12B3                         l2114 128C                         l2106 1272  
                       l2210 1251                         l2202 1232                         l3010 0F13  
                       l3002 0EE3                         l2132 12E0                         l2124 12B7  
                       l2116 1290                         l2140 0807                         l2300 09F9  
                       l2204 1243                         l2212 1257                         l2220 10E1  
                       l3100 052D                         l3020 0F9A                         l3012 0F2C  
                       l3004 0EF6                         l2126 12C1                         l2118 129A  
                       l2150 1E57                         l2134 1D63                         l2142 1D6C  
                       l2310 0A2E                         l2302 09FF                         l2214 125C  
                       l2206 1249                         l2230 10F1                         l2222 10E2  
                       l3110 0572                         l3102 053C                         l3030 029C  
                       l3014 0F65                         l3006 0F09                         l3022 0FA2  
                       l2128 12C9                         l2152 1E60                         l2136 1D68  
                       l2144 1D71                         l2320 0A57                         l2312 0A32  
                       l2304 0A08                         l2400 10DC                         l2216 1261  
                       l2208 124A                         l2240 110A                         l2232 10F6  
                       l2224 10E6                         l3120 063B                         l3112 0578  
                       l3104 0545                         l3040 02F2                         l3032 02BB  
                       l3024 0FB1                         l3016 0F7A                         l3008 0F0D  
                       l3200 142F                         l2330 0020                         l2154 1E65  
                       l2146 1E4A                         l2138 0802                         l2322 0A67  
                       l2314 0A42                         l2306 0A14                         l2170 081A  
                       l2162 080F                         l2410 1F29                         l2242 110E  
                       l2234 10FC                         l2250 112B                         l2226 10EB  
                       l3130 06A9                         l3122 064F                         l3114 0590  
                       l3106 0560                         l3050 0399                         l3034 02CA  
                       l3026 0FEA                         l3018 0F83                         l3210 146C  
                       l3202 1438                         l2340 003F                         l2156 1E6B  
                       l2148 1E4F                         l2324 0A69                         l2316 0A43  
                       l2308 0A1E                         l2260 096E                         l2172 0821  
                       l2164 0810                         l2420 1F48                         l2412 1F2D  
                       l2404 1F19                         l2180 1204                         l2252 1130  
                       l2244 1118                         l2236 10FF                         l2228 10ED  
                       l2500 0BDF                         l3140 06D7                         l3132 06AF  
                       l3116 05DD                         l3124 068E                         l3108 0565  
                       l3052 039B                         l3044 030A                         l3036 02E1  
                       l3028 0293                         l3212 14A2                         l3204 1442  
                       l2350 007A                         l2342 006C                         l2334 0027  
                       l2158 1E73                         l2318 0A53                         l2270 098A  
                       l2262 0974                         l2166 0814                         l2414 1F31  
                       l2406 1F1F                         l2422 1F4E                         l2190 1218  
                       l2182 1209                         l2254 1135                         l2246 111E  
                       l2238 1106                         l2510 0CA5                         l2502 0BE6  
                       l3150 0720                         l3142 06E2                         l3126 0696  
                       l3118 061C                         l3070 0439                         l3062 03E4  
                       l3046 0325                         l3038 02EA                         l3134 06B6  
                       l2430 1DAE                         l3206 144F                         l2360 00A2  
                       l2352 007E                         l2344 006D                         l2336 0038  
                       l2328 000D                         l2440 1724                         l2432 16F7  
                       l2280 09A8                         l2272 0990                         l2264 097E  
                       l2600 089D                         l2168 0818                         l2416 1F3B  
                       l2408 1F22                         l2520 1D93                         l2192 121A  
                       l2184 120B                         l2176 11FD                         l2248 1125  
                       l3160 0751                         l3152 0728                         l3144 06F5  
                       l3136 06BE                         l3128 06A3                         l3080 0465  
                       l3072 0442                         l3064 03F2                         l3048 032C  
                       l3208 1466                         l2370 00C8                         l2362 00A8  
                       l2354 0082                         l2346 006E                         l2098 1D75  
                       l2450 17B4                         l2442 174D                         l2434 1711  
                       l2290 09CD                         l2282 09AA                         l2274 099B  
                       l2258 094F                         l2610 08FD                         l2602 08A2  
                       l2530 14B0                         l2418 1F41                         l2522 1D99  
                       l2194 1220                         l2186 120F                         l2178 1200  
                       l2514 0D0F                         l3170 0787                         l3162 075C  
                       l3154 072E                         l3146 0706                         l3138 06C6  
                       l3090 04E9                         l3082 0479                         l3074 044F  
                       l3066 0421                         l3058 039D                         l2426 1DA4  
                       l2372 00D0                         l2364 00AC                         l2356 0092  
                       l2348 0074                         l2452 17F7                         l2444 1751  
                       l2436 171B                         l2292 09D6                         l2284 09B0  
                       l2276 099F                         l2268 0985                         l2620 091D  
                       l2612 090B                         l2604 08A6                         l2532 14C3  
                       l2380 109F                         l2460 01B8                         l2524 1D9F  
                       l2196 1223                         l2188 1214                         l2508 0C9E  
                       l3172 078D                         l3164 0770                         l3156 0744  
                       l3148 070E                         l3092 0507                         l3084 0484  
                       l3068 0427                         l3180 07B9                         l2700 13E3  
                       l2428 1DA9                         l2374 00D6                         l2366 00B0  
                       l2358 009A                         l2446 1760                         l2438 1720  
                       l2294 09E2                         l2286 09BD                         l2278 09A3  
                       l2630 0946                         l2614 0915                         l2622 092F  
                       l2606 08AF                         l2550 14FF                         l2542 14DF  
                       l2390 10B7                         l2382 10A5                         l2470 0245  
                       l2526 1DA1                         l2518 1D92                         l2198 122A  
                       l3174 0799                         l3166 0774                         l3158 074D  
                       l3094 0514                         l3086 048B                         l3078 0456  
                       l3182 07D0                         l2702 13EC                         l2720 1598  
                       l2712 156D                         l2368 00C0                         l2448 1766  
                       l2288 09C7                         l2296 09E9                         l2800 1311  
                       l2640 1E13                         l2608 08DB                         l2560 1529  
                       l2552 1508                         l2544 14E5                         l2536 14CC  
                       l2392 10C8                         l2384 10A8                         l2456 00F5  
                       l2480 0A8C                         l3176 07AB                         l3168 077A  
                       l3096 051A                         l3088 04CA                         l2704 13F2  
                       l3192 140B                         l2650 11A7                         l2730 15BC  
                       l2714 1580                         l2298 09EF                         l2802 1317  
                       l2642 1E1A                         l2634 1E00                         l2562 1533  
                       l2570 154D                         l2554 1516                         l2546 14F4  
                       l2394 10CE                         l2386 10AF                         l2378 109D  
                       l2474 025F                         l2458 00FB                         l2466 01D2  
                       l2490 0B4D                         l2482 0A8E                         l3098 0520  
                       l2706 13F7                         l3194 1410                         l2660 11D6  
                       l2652 11AA                         l2900 1EDD                         l2740 15EC  
                       l2732 15CE                         l2724 159F                         l2804 131E  
                       l2644 1E20                         l2636 1E02                         l2628 0936  
                       l2556 1520                         l2548 14F6                         l2396 10CF  
                       l2388 10B3                         l2468 01D8                         l2492 0B54  
                       l2484 0A95                         l2708 1402                         l3196 141B  
                       l2662 11E4                         l2654 11B7                         l2902 1EDE  
                       l2750 1613                         l2742 15FA                         l2734 15D2  
                       l2726 15A5                         l2718 1587                         l2822 1345  
                       l2814 132C                         l2806 1320                         l2638 1E06  
                       l2582 0823                         l2558 1521                         l2398 10D6  
                       l2478 0A88                         l3278 0E3E                         l3198 142A  
                       l2664 11E5                         l2656 11BB                         l2648 1197  
                       l2904 1EDF                         l2744 1604                         l2736 15D9  
                       l2728 15AA                         l2920 1FD3                         l2912 1FA7  
                       l2760 1EF6                         l2824 1355                         l2808 1324  
                       l2816 133E                         l2840 1F6F                         l2832 1F53  
                       l2584 083D                         l2576 1554                         l2568 153B  
                       l2496 0BBE                         l2680 1391                         l2672 136E  
                       l2666 11EE                         l2658 11C4                         l2746 1605  
                       l2738 15E4                         l2914 1FC5                         l2906 113A  
                       l2770 1F17                         l2762 1F03                         l2754 1EE1  
                       l2826 135A                         l2842 1F81                         l2834 1F5B  
                       l2594 085F                         l2578 1564                         l2690 13B5  
                       l2682 1395                         l2674 1371                         l2930 1E3C  
                       l2668 11F4                         l2748 160D                         l2852 1E78  
                       l2916 1FCC                         l2908 1157                         l2764 1F05  
                       l2756 1EE5                         l2828 1365                         l2844 1F8F  
                       l2836 1F5E                         l2596 0893                         l2588 0846  
                       l2940 0D58                         l2932 0D33                         l2692 13B9  
                       l2684 139D                         l2676 1375                         l2924 1E26  
                       l2854 1E7F                         l2870 1DC6                         l2862 1DB5  
                       l2766 1F07                         l2758 1EF2                         l2774 0003  
                       l2782 1DDB                         l2790 12E2                         l2846 1F98  
                       l2838 1F6B                         l2598 089B                         l2950 0DA2  
                       l2942 0D5C                         l2934 0D3E                         l2694 13C2  
                       l2686 13A5                         l2678 1386                         l2926 1E29  
                       l2856 1E8C                         l2864 1DBF                         l2768 1F15  
                       l2776 000A                         l2784 1DE4                         l2792 12F5  
                       l2848 1F9E                         l2960 0DCF                         l2952 0DA8  
                       l2944 0D6E                         l2936 0D44                         l2696 13D4  
                       l2688 13A8                         l2880 16E1                         l2872 162F  
                       l2928 1E36                         l2858 1E92                         l2866 1DC0  
                       l2778 000C                         l2786 1DE6                         l2962 0DD4  
                       l2970 0E1C                         l2946 0D72                         l2954 0DB8  
                       l2938 0D51                         l2698 13E2                         l2890 16F3  
                       l2882 16EA                         l2874 1680                         l2868 1DC3  
                       l2796 12FE                         l2980 0E5A                         l2972 0E20  
                       l2964 0DE9                         l2956 0DC6                         l2948 0D87  
                       l2884 16EE                         l2876 1689                         l2894 1EA9  
                       l2798 1310                         l2990 0E8C                         l2982 0E60  
                       l2966 0E04                         l2958 0DC9                         l2886 16EF  
                       l2878 16DE                         l2896 1EAD                         l2992 0EA1  
                       l2984 0E64                         l2976 0E26                         l2968 0E0A  
                       l2888 16F2                         l2898 1EB0                         l2994 0EA5  
                       l2986 0E6F                         l2978 0E46                         l2996 0EA9  
                       l2988 0E77                         l2998 0EB0                         STR_1 108B  
                       STR_2 107C                         u3000 0020                         u3001 001F  
                       u3010 0038                         u3011 0037                         u3020 004F  
                       u3101 00B9                         u3102 00C0                         u3030 0061  
                       u3040 0082                         u2400 1D7B                         u4000 1EF6  
                       u3200 10DC                         u3041 0081                         u3025 004B  
                       u2401 1D7A                         u4001 1EF5                         u3201 10DB  
                       u3130 00D6                         u2410 1D81                         u4010 1F15  
                       u3210 1F1F                         u3131 00D5                         u3115 00C1  
                       u3051 008B                         u3035 005D                         u2411 1D80  
                       u4011 1F14                         u3211 1F1E                         u2500 12BD  
                       u2420 126B                         u3052 0092                         u3300 1766  
                       u4020 000A                         u4100 1344                         u3140 10A5  
                       u2501 12BC                         u2421 126A                         u3125 00C9  
                       u3301 1765                         u4021 0009                         u4101 1343  
                       u3141 10A4                         u2510 12C1                         u2430 1272  
                       u3310 177E                         u4030 1DE4                         u3230 1F31  
                       u2511 12C0                         u2431 1271                         u4015 1F11  
                       u4031 1DE3                         u3231 1F30                         u2520 12D2  
                       u3080 00A8                         u3320 178F                         u4120 1355  
                       u4040 12F5                         u3160 10B7                         u3240 1F3B  
                       u3400 0B54                         u3081 00A7                         u3065 0093  
                       u4121 1354                         u4041 12F4                         u3161 10B6  
                       u3241 1F3A                         u3225 1F23                         u3401 0B53  
                       u2530 12E0                         u2450 128B                         u3090 00B0  
                       u4210 1E92                         u3330 17A8                         u4130 135A  
                       u4050 1309                         u2610 1232                         u3410 0BE6  
                       u2531 12DF                         u2451 128A                         u3091 00AF  
                       u3075 009B                         u4211 1E91                         u3315 1779  
                       u4131 1359                         u4115 1347                         u3155 10A9  
                       u2611 1231                         u3411 0BE5                         u2540 1E6B  
                       u3340 17C4                         u4060 1324                         u4140 1F5B  
                       u3500 152F                         u3180 10C8                         u3260 1F4E  
                       u3420 0CA5                         u4300 1E49                         u2525 12CE  
                       u2445 127E                         u4205 1E80                         u2541 1E6A  
                       u3325 178A                         u4061 1323                         u4141 1F5A  
                       u3501 152E                         u3181 10C7                         u3261 1F4D  
                       u3245 1F37                         u2605 1224                         u3421 0CA4  
                       u4301 1E48                         u2470 12A8                         u3350 17E0  
                       u4070 132B                         u3510 1533                         u2550 0814  
                       u3430 1D99                         u2630 1243                         u2710 110E  
                       u4310 0D44                         u3270 1DB4                         u2471 12A7  
                       u3335 17A3                         u4071 132A                         u4055 1305  
                       u3511 1532                         u2551 0813                         u3175 10B8  
                       u3255 1F42                         u3431 1D98                         u2631 1242  
                       u2711 110D                         u4311 0D43                         u3271 1DB3  
                       u2800 0990                         u4160 1F6F                         u3520 153A  
                       u2560 0821                         u3360 00FB                         u3440 1D9F  
                       u2720 1118                         u4400 0EC6                         u4320 0D6E  
                       u2465 129B                         u3345 17BF                         u2801 098F  
                       u4161 1F6E                         u3521 1539                         u2561 0820  
                       u3185 10C4                         u3361 00FA                         u3441 1D9E  
                       u2625 1233                         u2721 1117                         u2705 1100  
                       u4321 0D6D                         u4241 1662                         u4225 1637  
                       u2490 12B7                         u3290 1760                         u2810 099A  
                       u4090 133D                         u4170 1F81                         u3610 08DB  
                       u3450 14C3                         u3370 01D8                         u2650 1257  
                       u2570 1204                         u4410 0F0D                         u4330 0DB8  
                       u4250 1689                         u4242 1663                         u2491 12B6  
                       u3355 17DB                         u3291 175F                         u2811 0999  
                       u4091 133C                         u4171 1F80                         u4155 1F60  
                       u3611 08DA                         u3451 14C2                         u3195 10D0  
                       u3371 01D7                         u2651 1256                         u2635 123F  
                       u2571 1203                         u4411 0F0C                         u4331 0DB7  
                       u4251 1688                         u4243 1668                         u4235 1648  
                       u2900 09EF                         u2820 09A3                         u3700 1E06  
                       u3620 0911                         u3540 154C                         u3460 14DD  
                       u2660 125C                         u2580 120F                         u2740 112B  
                       u3380 0A8C                         u4420 0F7A                         u4340 0DC6  
                       u4244 1669                         u2485 12AC                         u3285 1738  
                       u2901 09EE                         u2821 09A2                         u4085 132D  
                       u3701 1E05                         u3621 0910                         u3605 08A8  
                       u3541 154B                         u3461 14DC                         u2661 125B  
                       u2645 124B                         u2581 120E                         u2741 112A  
                       u2725 1114                         u3381 0A8B                         u4421 0F79  
                       u4405 0EC1                         u4341 0DC5                         u4261 16C0  
                       u4245 166E                         u2830 09A8                         u4190 1F9E  
                       u3630 0915                         u3550 1553                         u2590 1220  
                       u2750 1130                         u2670 10E6                         u3390 0A95  
                       u4510 03E3                         u4430 0F9A                         u4350 0E1B  
                       u4270 16EA                         u4262 16C1                         u4246 166F  
                       u2831 09A7                         u4191 1F9D                         u4175 1F7D  
                       u3631 0914                         u3615 08D7                         u3551 1552  
                       u3535 153C                         u2591 121F                         u2751 112F  
                       u2735 111F                         u2671 10E5                         u3391 0A94  
                       u4511 03E2                         u4431 0F99                         u4351 0E1A  
                       u4271 16E9                         u4263 16C6                         u3800 11F4  
                       u4280 1EC0                         u2920 09FF                         u2840 09BD  
                       u2760 096E                         u3640 091C                         u3480 1516  
                       u2680 10F1                         u4600 053C                         u4520 03F2  
                       u4440 0FB1                         u4360 0E5A                         u4264 16C7  
                       u3801 11F3                         u2921 09FE                         u2841 09BC  
                       u2761 096D                         u4185 1F90                         u3641 091B  
                       u3481 1515                         u2681 10F0                         u4601 053B  
                       u4521 03F1                         u4505 03A2                         u4441 0FB0  
                       u4361 0E57                         u4265 16CC                         u4290 1FCC  
                       u2930 0A07                         u2770 0974                         u3730 1E20  
                       u3570 1564                         u2690 10FC                         u4610 0565  
                       u4530 0421                         u4450 0293                         u4370 0E60  
                       u3810 1375                         u4266 16CD                         u4291 1FCB  
                       u2931 0A06                         u2915 09F0                         u2771 0973  
                       u3731 1E1F                         u3715 1E0D                         u3571 1563  
                       u3475 1501                         u2691 10FB                         u4611 0564  
                       u4531 0420                         u4515 03DF                         u4451 0FFA  
                       u4371 0E5F                         u3811 1374                         _PEIE 005E  
                       u3740 11A7                         u2860 09CD                         u2780 097E  
                       u3660 092E                         u3580 083D                         u4700 070E  
                       u4540 0439                         u4460 029C                         u4380 0E8C  
                       u3900 13F7                         u3820 1386                         u3741 11A6  
                       u4285 1EBB                         u2861 09CC                         u2781 097D  
                       u3725 1E14                         u3661 092D                         u3581 083C  
                       u3565 1556                         u3485 1512                         u4701 070D  
                       u4605 0538                         u4541 0438                         u4461 029B  
                       u4445 0FAD                         u4381 0E8B                         u3901 13F6  
                       u3821 1385                         u3910 1580                         u2950 0A1A  
                       u2870 09D5                         u2790 098A                         u3670 0935  
                       u3590 085E                         u4710 0720                         u4550 0465  
                       u4470 02BB                         u4390 0EB0                         u3830 13A5  
                       u3911 157F                         u2951 0A19                         u2871 09D4  
                       u2855 09BE                         u2791 0989                         u3671 0934  
                       u3655 091E                         u3591 085D                         u3495 1522  
                       u4711 071F                         u4551 0464                         u4471 02BA  
                       u4455 0FF5                         u4391 0EAF                         u3831 13A4  
                       u3760 11BB                         u3920 1598                         u2960 0A1E  
                       u4720 072E                         u4640 0695                         u4560 0479  
                       u4480 02CA                         u3761 11BA                         u3921 1597  
                       u2961 0A1D                         u2945 0A09                         u4721 072D  
                       u4641 0694                         u4625 05E2                         u4561 0478  
                       u4481 02C9                         u3930 15B5                         u2970 0A32  
                       u2890 09E8                         u3690 0946                         u4730 0744  
                       u4650 06B5                         u4490 02E1                         u3850 13B9  
                       u3755 11AC                         u2971 0A31                         u2891 09E7  
                       u3691 0945                         u4731 0743                         u4651 06B4  
                       u4635 0654                         u4555 0461                         u4491 02E0  
                       u3851 13B8                         u3780 11D6                         u3940 15C7  
                       u4740 075C                         u4660 06BE                         u4580 0506  
                       u3781 11D5                         u2981 0A4C                         u2885 09D7  
                       u3685 0938                         u4741 075B                         u4661 06BD  
                       u4581 0505                         u4485 02C6                         u3845 13AA  
                       u2990 0A57                         u2982 0A53                         u4750 077A  
                       u4670 06C6                         u4590 052D                         u3870 13D4  
                       u3775 11BD                         u3935 15B1                         u2991 0A56  
                       u4751 0779                         u4735 0740                         u4671 06C5  
                       u4591 052C                         u4575 0490                         u3871 13D3  
                       u4807 14A8                         u3960 15FA                         u4760 0799  
                       u4680 06D7                         u3785 11D2                         u3961 15F9  
                       u3945 15C3                         u4761 0798                         u4745 0758  
                       u4681 06D6                         u3865 13BB                         u4817 1DAB  
                       u4770 07AB                         u4690 06F5                         u3890 13F2  
                       u3795 11E6                         u3955 15E5                         u4827 1717  
                       u4771 07AA                         u4691 06F4                         u4595 0529  
                       u3891 13F1                         u3875 13D0                         u3980 1613  
                       u4780 07D0                         u3981 1612                         u3965 15F6  
                       u4781 07CD                         u4685 06D3                         u3885 13E4  
                       u3990 1EE5                         u3975 1606                         u3991 1EE4  
                       u4695 06F1                         u4797 143E  __size_of_aht_GetTemperature 005D  
    __size_of_aht_readSensor 0109                         _main 140B                 ___ftpack@arg 0070  
               ___ftpack@exp 0073                         btemp 007E                         start 0000  
       aht_readSensor@result 0044                 _sprintf$1041 00B9              aht_readSensor@i 0048  
   __end_of_uartTX_Write_Str 1E4A            ___bmul@multiplier 0027                 ___ftmul@cntr 0036  
               ___ftmul@sign 0037             ?_aht_GetHumidity 004B                 ___fttol@exp1 004E  
               ___fttol@lval 004A                   _GetTempCmd 00A3             ?_I2C_Master_Init 0020  
           ?_I2C_Master_Read 0070             ?_I2C_Master_Wait 0070             ?_I2C_Master_Stop 0070  
            __end_of___aldiv 140B                        ?_main 0070              __end_of___awdiv 1266  
            __end_of___ftadd 0A85              __end_of___awmod 113A              __end_of___ftdiv 162F  
            __end_of___ftneg 000D                        _ANSEL 0188              __end_of___lldiv 11FD  
            __end_of___ftmul 00F2              ___awdiv@divisor 0077              __end_of___llmod 1FA7  
            __end_of___ftsub 1E00              __end_of___fttol 136E              __end_of___lwdiv 10E1  
            __end_of___lwmod 1F53              ___awdiv@counter 0020                        _RCREG 001A  
                      _SPBRG 0099                        _PORTD 0008                        _TRISD 0088  
                      _SSPIE 0463                        _SSPIF 0063                        _TXREG 0019  
               ___lltoft@exp 004A                        _datos 00A5              __end_of_dpowers 107C  
                      _scale 0A85              __end_of_isdigit 1DA3                ___ftpack@sign 0074  
            _GetRHumidityCmd 00DB                        pclath 000A                        status 0003  
                      wtemp0 007E              __end_of_sprintf 07D7      aht_GetTemperature@value 0058  
            __initialization 07D7                 __end_of_main 14B0                       ??_main 0068  
              ___fttol@sign1 0049                _AHT10_address 006D         __size_of__tdiv_to_l_ 00BD  
          ?_I2C_Master_Start 0070            ?_I2C_Master_Write 0070           ??_I2C_Master_Start 0070  
         ??_I2C_Master_Write 0072             ___llmod@dividend 0074                       ?_scale 0038  
           ___awdiv@dividend 0079             __end_of___ftpack 12E2                       _ANSELH 0189  
           __end_of___lltoft 1EA9                       _SSPADD 0093                       _TRISC3 043B  
                     _TRISC4 043C                 ?_uartRC_init 0026                       _SSPCON 0014  
                     _SSPBUF 0013             __end_of__powers_ 102D             __end_of_configIO 1DC8  
                     ___bmul 080C                       ___ftge 1EE1                    ??___aldiv 0078  
       aht_GetHumidity@value 004E                       ___wmul 1E00                    ??___awdiv 007B  
                  ??___ftadd 004E                    ??___awmod 0074                    ??___ftdiv 003E  
                  ??___ftneg 0073                    ??___lldiv 0078                    ??___ftmul 002E  
                  ??___llmod 0078                    ??___ftsub 007E                    ??___fttol 0045  
                  ??___lwdiv 007A                    ??___lwmod 0074                       _fround 00F2  
           ___awdiv@quotient 0022              ___awmod@divisor 0070              ___awmod@counter 0075  
      ___ftmul@f3_as_product 0033                    ??_isdigit 0070                    ??_sprintf 0062  
             _aht_readSensor 16F7      __end_of__initialization 07FC                   ___ftadd@f1 0048  
                 ___ftadd@f2 004B                   ___ftge@ff1 0070                   ___ftge@ff2 0073  
                 ___ftdiv@f1 003B                   ___ftdiv@f2 0038                   ___ftdiv@f3 0043  
                 ___ftneg@f1 0070          ___bmul@multiplicand 0024                   ___ftmul@f1 0028  
                 ___ftmul@f2 002B                   ___ftsub@f1 0058                   ___ftsub@f2 0055  
                 ___fttol@f1 0041               __pcstackCOMMON 0070                 __pidataBANK0 0800  
               __pidataBANK1 1D82                   ___lltoft@c 007A                __end_of_scale 0D30  
                 __div_to_l_ 0823       __end_of_aht_readSensor 1800              __div_to_l_@exp1 0025  
            __div_to_l_@cntr 0024                      ??_scale 003B              __div_to_l_@quot 0020  
               sprintf@width 00C3                   __pbssBANK0 006A                   __pbssBANK1 00A0  
              __div_to_l_@f1 0070                __div_to_l_@f2 0073                   __pmaintext 140B  
          ?_uartTX_Write_Str 0070                      ?___bmul 0024                      ?___ftge 0070  
                    ?___wmul 0070           ??_uartTX_Write_Str 0072                      ?_fround 0038  
                  ?___ftpack 0070                    ?___lltoft 007A              ?_aht_readSensor 0076  
 __end_of_aht_GetTemperature 1197                      _SSPCON2 0091                    ?_configIO 0070  
                    _SSPSTAT 0094                   __stringtab 1000              _eSensorResetCmd 006E  
          __end_of__npowers_ 1054                ?_uartTX_Write 0070         __size_of_uartRC_init 00C8  
                 _scale$1040 003D                      ___aldiv 136E              __size_of___bmul 0017  
            __size_of___ftge 0038                      ___awdiv 11FD                      ___ftadd 094F  
                    ___awmod 10E1                      ___ftdiv 156D                      ___ftneg 0003  
                    ___lldiv 1197              __size_of___wmul 0025                      ___ftmul 000D  
                    ___llmod 1F53                      ___ftsub 1DDB                      ___fttol 12E2  
                    ___lwdiv 109D                      ___lwmod 1F19                   ??___ftpack 0075  
            __size_of_fround 01A1                   ??___lltoft 0049                      __ptext1 1E25  
                    __ptext2 1DA3                      __ptext3 162F                      __ptext4 136E  
                    __ptext5 0D30                      __ptext6 0A85                      __ptext7 10E1  
                    __ptext8 11FD                      __ptext9 1D91                  ?__div_to_l_ 0070  
                    _dpowers 1054                      _isdigit 1D91                      _humeda1 00A0  
   __size_of_aht_GetHumidity 0059             ___awmod@dividend 0072             ___aldiv@dividend 0074  
   __size_of_I2C_Master_Init 0038     __size_of_I2C_Master_Read 002E     __size_of_I2C_Master_Wait 000D  
   __size_of_I2C_Master_Stop 0009                   ??_configIO 0070                      _sprintf 0D30  
                    clrloop0 1D5C         end_of_initialization 07FC               ??_uartTX_Write 0070  
  __size_of_I2C_Master_Start 0009    __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0070  
            ___lldiv@counter 007D            _eSensorMeasureCmd 00D2                    _RCSTAbits 0018  
           ___aldiv@quotient 0022             I2C_Master_Init@c 0020             I2C_Master_Read@a 0070  
                    psplit$0 140036               __tdiv_to_l_@f1 0070               __tdiv_to_l_@f2 0073  
        _eSensorCalibrateCmd 00D8                ??__tdiv_to_l_ 0076                    _TRISCbits 0087  
         aht_readSensor@temp 002C                  ___ftdiv@exp 0046                    _TXSTAbits 0098  
        __size_of__div_to_l_ 012C                  ___ftmul@exp 0032               __end_of___bmul 0823  
             __end_of___ftge 1F19               __end_of___wmul 1E25     aht_readSensor@GetDataCmd 0076  
             __end_of_fround 0293            _AHT10Address_High 00DD          start_initialization 07D7  
          pnum$text5_split_1 0036          __end_of__tdiv_to_l_ 156D            ??_aht_GetHumidity 007E  
          ??_I2C_Master_Init 0024            ??_I2C_Master_Read 0072            ??_I2C_Master_Wait 0070  
          ??_I2C_Master_Stop 0070              ___llmod@divisor 0070              ___llmod@counter 0079  
                   ??___bmul 0025                     ??___ftge 0076                     ??___wmul 0074  
                 init_fetch0 1DC8                  __pdataBANK0 006D                  __pdataBANK1 00D2  
                   ??_fround 003B                sprintf@tmpval 00C5                   fround@prec 0047  
           ??_aht_readSensor 0020            __size_of___ftpack 007C            __size_of___lltoft 0031  
       __end_of_uartTX_Write 1DB5                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00B9    __size_of_uartTX_Write_Str 0025            uartTX_Write_Str@n 0072  
          __size_of_configIO 0013                  sprintf@flag 00C1                  sprintf@eexp 00C9  
                sprintf@fval 00CC                  sprintf@prec 00CF             _I2C_Master_Start 1D63  
           _I2C_Master_Write 0802             ___lwdiv@dividend 0078           _aht_GetTemperature 113A  
                   ?___aldiv 0070                     ?___awdiv 0077                     ?___ftadd 0048  
                   ?___awmod 0070                     ?___ftdiv 0038                     ?___ftneg 0070  
                   ?___lldiv 0070                     ?___ftmul 0028                     ?___llmod 0070  
                   ?___ftsub 0055                    __npowers_ 102D                     ?___fttol 0041  
                   ?___lwdiv 0076                     ?___lwmod 0070          ?_aht_GetTemperature 0055  
                  __pstrings 1000                  __tdiv_to_l_ 14B0                 ??__div_to_l_ 0076  
                   ?_isdigit 0070             ___lwdiv@quotient 007B                     ?_sprintf 005B  
             __size_of_scale 02AB         ??_aht_GetTemperature 007E              ___aldiv@divisor 0070  
              ??_uartRC_init 0028              ___aldiv@counter 0020               ___wmul@product 0074  
                  clear_ram0 1D5B                     _PIE1bits 008C                     _PIR1bits 000C  
         __end_of__div_to_l_ 094F       uartTX_Write_Str@string 0074                  __stringbase 1005  
          ___wmul@multiplier 0070             _eSensorNormalCmd 00D5          uartRC_init@baudrate 0026  
        I2C_Master_Read@temp 0074             _AHT10Address_Low 00DF          __end_of_uartRC_init 16F7  
           __size_of___aldiv 009D             __size_of___awdiv 0069             __size_of___ftadd 0136  
           __size_of___awmod 0059             __size_of___ftdiv 00C2             __size_of___ftneg 000A  
           __size_of___lldiv 0066             __size_of___ftmul 00E5             __size_of___llmod 0054  
           __size_of___ftsub 0025             __size_of___fttol 008C             __size_of___lwdiv 0044  
           __size_of___lwmod 003A        __size_of_uartTX_Write 0012                     ___ftpack 1266  
           uartTX_Write@dato 0071                  _fround$1038 0044                  _fround$1039 0041  
         __end_of__stringtab 1006                 uartRC_init@n 0079                     ___lltoft 1E78  
                _isdigit$834 0070              _aht_GetHumidity 1FA7                   sprintf@val 00BD  
            _I2C_Master_Init 1EA9              _I2C_Master_Read 1E4A              _I2C_Master_Wait 1D75  
            _I2C_Master_Stop 1D6C             __size_of_isdigit 0012             _uartTX_Write_Str 1E25  
            ___lwdiv@divisor 0076              ___lwdiv@counter 007D                     __ptext10 00F2  
                   __ptext11 1F19                     __ptext20 0003                     __ptext12 109D  
                   __ptext21 1EE1                     __ptext13 080C                     __ptext30 1E4A  
                   __ptext22 1DB5                     __ptext14 14B0                     __ptext31 1D75  
                   __ptext23 113A                     __ptext15 0823                     __ptext32 1E78  
                   __ptext24 094F                     __ptext16 1E00                     __ptext33 000D  
                   __ptext25 1FA7                     __ptext17 1F53                     __ptext34 156D  
                   __ptext26 16F7                     __ptext18 12E2                     __ptext35 1266  
                   __ptext27 0802                     __ptext19 1DDB                     __ptext36 1EA9  
                   __ptext28 1D6C                     __ptext37 1197                     __ptext29 1D63  
                   __powers_ 1006                     _configIO 1DB5             __size_of_sprintf FAA7  
              __size_of_main 00A5                    pnum$text5 0014                 _uartTX_Write 1DA3  
                   _tempera1 006A     __end_of_I2C_Master_Start 1D6C     __end_of_I2C_Master_Write 080C  
                 _INTCONbits 000B                     init_ram0 1DCC                     isdigit@c 0071  
                   scale@scl 0040                    sprintf@ap 00BC             __tdiv_to_l_@exp1 0025  
           __tdiv_to_l_@cntr 0024                    sprintf@sp 00CB             __tdiv_to_l_@quot 0020  
           ___lwmod@dividend 0072             ___lldiv@dividend 0074                  _uartRC_init 162F  
                  stringcode 1000      __end_of_aht_GetHumidity 2000      __end_of_I2C_Master_Init 1EE1  
    __end_of_I2C_Master_Read 1E78      __end_of_I2C_Master_Wait 1D82      __end_of_I2C_Master_Stop 1D75  
               ?__tdiv_to_l_ 0070                     sprintf@c 00D1                     sprintf@f 005B  
           ___lldiv@quotient 0079            I2C_Master_Write@d 0070              ___lwmod@divisor 0070  
            ___lwmod@counter 0075                     stringdir 1000                     stringtab 1000  
               ___aldiv@sign 0021                  _SSPCON2bits 0091  
