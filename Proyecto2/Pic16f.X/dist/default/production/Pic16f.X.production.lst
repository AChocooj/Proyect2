

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 12:58:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  0000                     	;# 
   371  0001                     	;# 
   372  0002                     	;# 
   373  0003                     	;# 
   374  0004                     	;# 
   375  0005                     	;# 
   376  0006                     	;# 
   377  0007                     	;# 
   378  0008                     	;# 
   379  0009                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  000E                     	;# 
   386  000F                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0014                     	;# 
   392  0015                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001D                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  0081                     	;# 
   406  0085                     	;# 
   407  0086                     	;# 
   408  0087                     	;# 
   409  0088                     	;# 
   410  0089                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  008E                     	;# 
   414  008F                     	;# 
   415  0090                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0095                     	;# 
   423  0096                     	;# 
   424  0097                     	;# 
   425  0098                     	;# 
   426  0099                     	;# 
   427  009A                     	;# 
   428  009B                     	;# 
   429  009C                     	;# 
   430  009D                     	;# 
   431  009E                     	;# 
   432  009F                     	;# 
   433  0105                     	;# 
   434  0107                     	;# 
   435  0108                     	;# 
   436  0109                     	;# 
   437  010C                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  0185                     	;# 
   443  0187                     	;# 
   444  0188                     	;# 
   445  0189                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448                           
   449                           	psect	idataBANK0
   450  0542                     __pidataBANK0:
   451                           
   452                           ;initializer for _eSensorMeasureCmd
   453  0542  34AC               	retlw	172
   454  0543  3433               	retlw	51
   455  0544  3400               	retlw	0
   456                           
   457                           ;initializer for _eSensorNormalCmd
   458  0545  34A8               	retlw	168
   459  0546  3400               	retlw	0
   460  0547  3400               	retlw	0
   461                           
   462                           ;initializer for _eSensorCalibrateCmd
   463  0548  34E1               	retlw	225
   464  0549  3408               	retlw	8
   465  054A  3400               	retlw	0
   466                           
   467                           ;initializer for _GetRHumidityCmd
   468  054B  3401               	retlw	1
   469  054C  3400               	retlw	0
   470                           
   471                           ;initializer for _AHT10Address_High
   472  054D  3439               	retlw	57
   473  054E  3400               	retlw	0
   474                           
   475                           ;initializer for _AHT10Address_Low
   476  054F  3438               	retlw	56
   477  0550  3400               	retlw	0
   478                           
   479                           ;initializer for _AHT10_address
   480  0551  3438               	retlw	56
   481                           
   482                           ;initializer for _eSensorResetCmd
   483  0552  34BA               	retlw	186
   484  0019                     _TXREG	set	25
   485  001A                     _RCREG	set	26
   486  0018                     _RCSTAbits	set	24
   487  0013                     _SSPBUF	set	19
   488  0014                     _SSPCON	set	20
   489  000C                     _PIR1bits	set	12
   490  000B                     _INTCONbits	set	11
   491  0008                     _PORTD	set	8
   492  0063                     _SSPIF	set	99
   493  005E                     _PEIE	set	94
   494  005F                     _GIE	set	95
   495  0099                     _SPBRG	set	153
   496  0098                     _TXSTAbits	set	152
   497  0091                     _SSPCON2bits	set	145
   498  0087                     _TRISCbits	set	135
   499  0094                     _SSPSTAT	set	148
   500  0093                     _SSPADD	set	147
   501  0091                     _SSPCON2	set	145
   502  008C                     _PIE1bits	set	140
   503  0088                     _TRISD	set	136
   504  0463                     _SSPIE	set	1123
   505  043C                     _TRISC4	set	1084
   506  043B                     _TRISC3	set	1083
   507  0189                     _ANSELH	set	393
   508  0188                     _ANSEL	set	392
   509                           
   510                           	psect	strings
   511  0003                     __pstrings:
   512  0003                     stringtab:
   513  0003                     __stringtab:
   514  0003                     stringcode:	
   515                           ;	String table - string pointers are 1 byte each
   516                           
   517  0003                     stringdir:
   518  0003  3000               	movlw	high stringdir
   519  0004  008A               	movwf	10
   520  0005  0804               	movf	4,w
   521  0006  0A84               	incf	4,f
   522  0007  0782               	addwf	2,f
   523  0008                     __stringbase:
   524  0008  3400               	retlw	0
   525  0009                     __end_of__stringtab:
   526  0009                     STR_1:
   527  0009  3432               	retlw	50	;'2'
   528  000A  3430               	retlw	48	;'0'
   529  000B  3420               	retlw	32	;' '
   530  000C  340A               	retlw	10
   531  000D  3400               	retlw	0
   532                           
   533                           	psect	cinit
   534  07E6                     start_initialization:	
   535                           ; #config settings
   536                           
   537  07E6                     __initialization:
   538                           
   539                           ; Initialize objects allocated to BANK0
   540  07E6  1383               	bcf	3,7	;select IRP bank0
   541  07E7  3066               	movlw	low (__pdataBANK0+17)
   542  07E8  00FD               	movwf	btemp+-1
   543  07E9  3005               	movlw	high __pidataBANK0
   544  07EA  00FE               	movwf	btemp
   545  07EB  3042               	movlw	low __pidataBANK0
   546  07EC  00FF               	movwf	btemp+1
   547  07ED  3055               	movlw	low __pdataBANK0
   548  07EE  0084               	movwf	4
   549  07EF  120A  118A  257C  120A  118A  	fcall	init_ram0
   550                           
   551                           ; Clear objects allocated to BANK0
   552  07F4  3020               	movlw	low __pbssBANK0
   553  07F5  0084               	movwf	4
   554  07F6  303F               	movlw	low (__pbssBANK0+31)
   555  07F7  120A  118A  253A  120A  118A  	fcall	clear_ram0
   556  07FC                     end_of_initialization:	
   557                           ;End of C runtime variable initialization code
   558                           
   559  07FC                     __end_of__initialization:
   560  07FC  0183               	clrf	3
   561  07FD  120A  118A  2DB0   	ljmp	_main	;jump to C main() function
   562                           
   563                           	psect	bssBANK0
   564  0020                     __pbssBANK0:
   565  0020                     _datos:
   566  0020                     	ds	20
   567  0034                     _humeda1:
   568  0034                     	ds	3
   569  0037                     _tempera1:
   570  0037                     	ds	3
   571  003A                     _GetTempCmd:
   572  003A                     	ds	2
   573  003C                     _humedad:
   574  003C                     	ds	1
   575  003D                     _temperatura:
   576  003D                     	ds	1
   577  003E                     _LecturaUSART:
   578  003E                     	ds	1
   579                           
   580                           	psect	dataBANK0
   581  0055                     __pdataBANK0:
   582  0055                     _eSensorMeasureCmd:
   583  0055                     	ds	3
   584  0058                     _eSensorNormalCmd:
   585  0058                     	ds	3
   586  005B                     _eSensorCalibrateCmd:
   587  005B                     	ds	3
   588  005E                     _GetRHumidityCmd:
   589  005E                     	ds	2
   590  0060                     _AHT10Address_High:
   591  0060                     	ds	2
   592  0062                     _AHT10Address_Low:
   593  0062                     	ds	2
   594  0064                     _AHT10_address:
   595  0064                     	ds	1
   596  0065                     _eSensorResetCmd:
   597  0065                     	ds	1
   598                           
   599                           	psect	inittext
   600  0578                     init_fetch0:	
   601                           ;	Called with low address in FSR and high address in W
   602                           
   603  0578  087E               	movf	btemp,w
   604  0579  008A               	movwf	10
   605  057A  087F               	movf	btemp+1,w
   606  057B  0082               	movwf	2
   607  057C                     init_ram0:	
   608                           ;Called with:
   609                           ;	high address of idata address in btemp 
   610                           ;	low address of idata address in btemp+1 
   611                           ;	low address of data in FSR
   612                           ;	high address + 1 of data in btemp-1
   613                           
   614  057C  120A  118A  2578  120A  118A  	fcall	init_fetch0
   615  0581  0080               	movwf	0
   616  0582  0A84               	incf	4,f
   617  0583  0804               	movf	4,w
   618  0584  067D               	xorwf	btemp+-1,w
   619  0585  1903               	btfsc	3,2
   620  0586  3400               	retlw	0
   621  0587  0AFF               	incf	btemp+1,f
   622  0588  1903               	btfsc	3,2
   623  0589  0AFE               	incf	btemp,f
   624  058A  2D7C               	goto	init_ram0
   625                           
   626                           	psect	clrtext
   627  053A                     clear_ram0:	
   628                           ;	Called with FSR containing the base address, and
   629                           ;	W with the last address+1
   630                           
   631  053A  0064               	clrwdt	;clear the watchdog before getting into this loop
   632  053B                     clrloop0:
   633  053B  0180               	clrf	0	;clear RAM location pointed to by FSR
   634  053C  0A84               	incf	4,f	;increment pointer
   635  053D  0604               	xorwf	4,w	;XOR with final address
   636  053E  1903               	btfsc	3,2	;have we reached the end yet?
   637  053F  3400               	retlw	0	;all done for this memory range, return
   638  0540  0604               	xorwf	4,w	;XOR again to restore value
   639  0541  2D3B               	goto	clrloop0	;do the next byte
   640                           
   641                           	psect	cstackCOMMON
   642  0070                     __pcstackCOMMON:
   643  0070                     ?_uartTX_Write_Str:
   644  0070                     ?_configIO:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ??_configIO:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_main:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_uartTX_Write:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ??_uartTX_Write:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?___lldiv:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?___aldiv:	
   663                           ; 4 bytes @ 0x0
   664                           
   665  0070                     ___lldiv@divisor:	
   666                           ; 4 bytes @ 0x0
   667                           
   668  0070                     ___aldiv@divisor:	
   669                           ; 4 bytes @ 0x0
   670                           
   671                           
   672                           ; 4 bytes @ 0x0
   673  0070                     	ds	1
   674  0071                     uartTX_Write@dato:
   675                           
   676                           ; 1 bytes @ 0x1
   677  0071                     	ds	1
   678  0072                     ??_uartTX_Write_Str:
   679  0072                     uartTX_Write_Str@n:	
   680                           ; 1 bytes @ 0x2
   681                           
   682                           
   683                           ; 2 bytes @ 0x2
   684  0072                     	ds	2
   685  0074                     uartTX_Write_Str@string:
   686  0074                     ___lldiv@dividend:	
   687                           ; 1 bytes @ 0x4
   688                           
   689  0074                     ___aldiv@dividend:	
   690                           ; 4 bytes @ 0x4
   691                           
   692                           
   693                           ; 4 bytes @ 0x4
   694  0074                     	ds	4
   695  0078                     ??___lldiv:
   696  0078                     ??___aldiv:	
   697                           ; 1 bytes @ 0x8
   698                           
   699                           
   700                           ; 1 bytes @ 0x8
   701  0078                     	ds	1
   702  0079                     uartRC_init@n:
   703  0079                     ___lldiv@quotient:	
   704                           ; 2 bytes @ 0x9
   705                           
   706                           
   707                           ; 4 bytes @ 0x9
   708  0079                     	ds	4
   709  007D                     ___lldiv@counter:
   710                           
   711                           ; 1 bytes @ 0xD
   712  007D                     	ds	1
   713                           
   714                           	psect	cstackBANK0
   715  003F                     __pcstackBANK0:
   716  003F                     ?_I2C_Master_Init:
   717  003F                     ___aldiv@counter:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  003F                     I2C_Master_Init@c:	
   721                           ; 1 bytes @ 0x0
   722                           
   723                           
   724                           ; 4 bytes @ 0x0
   725  003F                     	ds	1
   726  0040                     ___aldiv@sign:
   727                           
   728                           ; 1 bytes @ 0x1
   729  0040                     	ds	1
   730  0041                     ___aldiv@quotient:
   731                           
   732                           ; 4 bytes @ 0x2
   733  0041                     	ds	2
   734  0043                     ??_I2C_Master_Init:
   735                           
   736                           ; 1 bytes @ 0x4
   737  0043                     	ds	2
   738  0045                     ?_uartRC_init:
   739  0045                     uartRC_init@baudrate:	
   740                           ; 1 bytes @ 0x6
   741                           
   742                           
   743                           ; 2 bytes @ 0x6
   744  0045                     	ds	2
   745  0047                     ??_uartRC_init:
   746                           
   747                           ; 1 bytes @ 0x8
   748  0047                     	ds	12
   749  0053                     ??_main:
   750                           
   751                           ; 1 bytes @ 0x14
   752  0053                     	ds	2
   753                           
   754                           	psect	maintext
   755  05B0                     __pmaintext:	
   756 ;;
   757 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   758 ;;
   759 ;; *************** function _main *****************
   760 ;; Defined at:
   761 ;;		line 64 in file "pic16f.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : B00/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   775 ;;      Params:         0       0       0       0       0
   776 ;;      Locals:         0       0       0       0       0
   777 ;;      Temps:          0       2       0       0       0
   778 ;;      Totals:         0       2       0       0       0
   779 ;;Total ram usage:        2 bytes
   780 ;; Hardware stack levels required when called:    2
   781 ;; This function calls:
   782 ;;		_I2C_Master_Init
   783 ;;		_configIO
   784 ;;		_uartRC_init
   785 ;;		_uartTX_Write_Str
   786 ;; This function is called by:
   787 ;;		Startup code after reset
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           
   792                           ;psect for function _main
   793  05B0                     _main:
   794  05B0                     l1219:	
   795                           ;incstack = 0
   796                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   797                           
   798                           
   799                           ;pic16f.c: 65:     configIO();
   800  05B0  120A  118A  2565  120A  118A  	fcall	_configIO
   801  05B5                     l1221:
   802                           
   803                           ;pic16f.c: 66:     uartRC_init(300);
   804  05B5  302C               	movlw	44
   805  05B6  1283               	bcf	3,5	;RP0=0, select bank0
   806  05B7  1303               	bcf	3,6	;RP1=0, select bank0
   807  05B8  00C5               	movwf	uartRC_init@baudrate
   808  05B9  3001               	movlw	1
   809  05BA  00C6               	movwf	uartRC_init@baudrate+1
   810  05BB  120A  118A  271E  120A  118A  	fcall	_uartRC_init
   811  05C0                     l1223:
   812                           
   813                           ;pic16f.c: 67:     I2C_Master_Init(100000);
   814  05C0  3000               	movlw	0
   815  05C1  1283               	bcf	3,5	;RP0=0, select bank0
   816  05C2  1303               	bcf	3,6	;RP1=0, select bank0
   817  05C3  00C2               	movwf	I2C_Master_Init@c+3
   818  05C4  3001               	movlw	1
   819  05C5  00C1               	movwf	I2C_Master_Init@c+2
   820  05C6  3086               	movlw	134
   821  05C7  00C0               	movwf	I2C_Master_Init@c+1
   822  05C8  30A0               	movlw	160
   823  05C9  00BF               	movwf	I2C_Master_Init@c
   824  05CA  120A  118A  25E3  120A  118A  	fcall	_I2C_Master_Init
   825  05CF                     l1225:
   826                           
   827                           ;pic16f.c: 79:         uartTX_Write_Str("20 \n");
   828  05CF  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   829  05D0  120A  118A  258B  120A  118A  	fcall	_uartTX_Write_Str
   830  05D5                     l1227:
   831                           
   832                           ;pic16f.c: 88:         _delay((unsigned long)((10)*(4000000/4000.0)));
   833  05D5  300D               	movlw	13
   834  05D6  1283               	bcf	3,5	;RP0=0, select bank0
   835  05D7  1303               	bcf	3,6	;RP1=0, select bank0
   836  05D8  00D4               	movwf	??_main+1
   837  05D9  30FB               	movlw	251
   838  05DA  00D3               	movwf	??_main
   839  05DB                     u1367:
   840  05DB  0BD3               	decfsz	??_main,f
   841  05DC  2DDB               	goto	u1367
   842  05DD  0BD4               	decfsz	??_main+1,f
   843  05DE  2DDB               	goto	u1367
   844  05DF  2DCF               	goto	l1225
   845  05E0  120A  118A  2800   	ljmp	start
   846  05E3                     __end_of_main:
   847                           
   848                           	psect	text1
   849  058B                     __ptext1:	
   850 ;; *************** function _uartTX_Write_Str *****************
   851 ;; Defined at:
   852 ;;		line 43 in file "USART.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;  string          1    wreg     PTR unsigned char 
   855 ;;		 -> STR_1(5), 
   856 ;; Auto vars:     Size  Location     Type
   857 ;;  string          1    4[COMMON] PTR unsigned char 
   858 ;;		 -> STR_1(5), 
   859 ;;  n               2    2[COMMON] int 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       0       0       0       0
   870 ;;      Locals:         3       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0
   872 ;;      Totals:         3       0       0       0       0
   873 ;;Total ram usage:        3 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    1
   876 ;; This function calls:
   877 ;;		_uartTX_Write
   878 ;; This function is called by:
   879 ;;		_main
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function _uartTX_Write_Str
   885  058B                     _uartTX_Write_Str:
   886                           
   887                           ;incstack = 0
   888                           ; Regs used in _uartTX_Write_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   889                           ;uartTX_Write_Str@string stored from wreg
   890  058B  00F4               	movwf	uartTX_Write_Str@string
   891  058C                     l1081:
   892                           
   893                           ;USART.c: 44:     int n;;USART.c: 45:     for (n=0; string[n] != '\n'; n++){
   894  058C  01F2               	clrf	uartTX_Write_Str@n
   895  058D  01F3               	clrf	uartTX_Write_Str@n+1
   896  058E  2DA2               	goto	l1087
   897  058F                     l1083:
   898                           
   899                           ;USART.c: 46:         uartTX_Write(string[n]);
   900  058F  0872               	movf	uartTX_Write_Str@n,w
   901  0590  0774               	addwf	uartTX_Write_Str@string,w
   902  0591  0084               	movwf	4
   903  0592  120A  118A  2003  120A  118A  	fcall	stringdir
   904  0597  120A  118A  2553  120A  118A  	fcall	_uartTX_Write
   905  059C                     l1085:
   906                           
   907                           ;USART.c: 47:     }
   908  059C  3001               	movlw	1
   909  059D  07F2               	addwf	uartTX_Write_Str@n,f
   910  059E  1803               	skipnc
   911  059F  0AF3               	incf	uartTX_Write_Str@n+1,f
   912  05A0  3000               	movlw	0
   913  05A1  07F3               	addwf	uartTX_Write_Str@n+1,f
   914  05A2                     l1087:
   915  05A2  0872               	movf	uartTX_Write_Str@n,w
   916  05A3  0774               	addwf	uartTX_Write_Str@string,w
   917  05A4  0084               	movwf	4
   918  05A5  120A  118A  2003  120A  118A  	fcall	stringdir
   919  05AA  3A0A               	xorlw	10
   920  05AB  1D03               	skipz
   921  05AC  2DAE               	goto	u651
   922  05AD  2DAF               	goto	u650
   923  05AE                     u651:
   924  05AE  2D8F               	goto	l1083
   925  05AF                     u650:
   926  05AF                     l196:
   927  05AF  0008               	return
   928  05B0                     __end_of_uartTX_Write_Str:
   929                           
   930                           	psect	text2
   931  0553                     __ptext2:	
   932 ;; *************** function _uartTX_Write *****************
   933 ;; Defined at:
   934 ;;		line 36 in file "USART.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;  dato            1    wreg     unsigned char 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  dato            1    1[COMMON] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       0       0       0       0
   949 ;;      Locals:         1       0       0       0       0
   950 ;;      Temps:          1       0       0       0       0
   951 ;;      Totals:         2       0       0       0       0
   952 ;;Total ram usage:        2 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_uartTX_Write_Str
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           
   962                           ;psect for function _uartTX_Write
   963  0553                     _uartTX_Write:
   964                           
   965                           ;incstack = 0
   966                           ; Regs used in _uartTX_Write: [wreg]
   967                           ;uartTX_Write@dato stored from wreg
   968  0553  00F1               	movwf	uartTX_Write@dato
   969  0554                     l731:
   970                           
   971                           ;USART.c: 37:         TXREG = dato;
   972  0554  0871               	movf	uartTX_Write@dato,w
   973  0555  1283               	bcf	3,5	;RP0=0, select bank0
   974  0556  1303               	bcf	3,6	;RP1=0, select bank0
   975  0557  0099               	movwf	25	;volatile
   976                           
   977                           ;USART.c: 38:         while(TXSTAbits.TRMT == 0){
   978  0558  2D5E               	goto	l735
   979  0559                     l733:
   980                           
   981                           ;USART.c: 39:             _delay((unsigned long)((500)*(4000000/4000000.0)));
   982  0559  30A6               	movlw	166
   983  055A  00F0               	movwf	??_uartTX_Write
   984  055B                     u1377:
   985  055B  0BF0               	decfsz	??_uartTX_Write,f
   986  055C  2D5B               	goto	u1377
   987  055D  0000               	nop
   988  055E                     l735:
   989                           
   990                           ;USART.c: 38:         while(TXSTAbits.TRMT == 0){
   991  055E  1683               	bsf	3,5	;RP0=1, select bank1
   992  055F  1303               	bcf	3,6	;RP1=0, select bank1
   993  0560  1C98               	btfss	24,1	;volatile
   994  0561  2D63               	goto	u31
   995  0562  2D64               	goto	u30
   996  0563                     u31:
   997  0563  2D59               	goto	l733
   998  0564                     u30:
   999  0564                     l190:
  1000  0564  0008               	return
  1001  0565                     __end_of_uartTX_Write:
  1002                           
  1003                           	psect	text3
  1004  071E                     __ptext3:	
  1005 ;; *************** function _uartRC_init *****************
  1006 ;; Defined at:
  1007 ;;		line 13 in file "USART.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;  baudrate        2    6[BANK0 ] unsigned int 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  n               2    9[COMMON] unsigned int 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      unsigned char 
  1014 ;; Registers used:
  1015 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1021 ;;      Params:         0       2       0       0       0
  1022 ;;      Locals:         2       0       0       0       0
  1023 ;;      Temps:          0      12       0       0       0
  1024 ;;      Totals:         2      14       0       0       0
  1025 ;;Total ram usage:       16 bytes
  1026 ;; Hardware stack levels used:    1
  1027 ;; Hardware stack levels required when called:    1
  1028 ;; This function calls:
  1029 ;;		___aldiv
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           
  1036                           ;psect for function _uartRC_init
  1037  071E                     _uartRC_init:
  1038  071E                     l1047:	
  1039                           ;incstack = 0
  1040                           ; Regs used in _uartRC_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1041                           
  1042                           
  1043                           ;USART.c: 14:     uint16_t n;;USART.c: 15:     n = (4000000 - baudrate*64)/(baudrate*64)
      +                          ;
  1044  071E  1283               	bcf	3,5	;RP0=0, select bank0
  1045  071F  1303               	bcf	3,6	;RP1=0, select bank0
  1046  0720  0846               	movf	uartRC_init@baudrate+1,w
  1047  0721  00C8               	movwf	??_uartRC_init+1
  1048  0722  0845               	movf	uartRC_init@baudrate,w
  1049  0723  00C7               	movwf	??_uartRC_init
  1050  0724  3006               	movlw	6
  1051  0725  00FF               	movwf	btemp+1
  1052  0726                     u585:
  1053  0726  1003               	clrc
  1054  0727  0DC7               	rlf	??_uartRC_init,f
  1055  0728  0DC8               	rlf	??_uartRC_init+1,f
  1056  0729  0BFF               	decfsz	btemp+1,f
  1057  072A  2F26               	goto	u585
  1058  072B  0847               	movf	??_uartRC_init,w
  1059  072C  00F0               	movwf	___aldiv@divisor
  1060  072D  0848               	movf	??_uartRC_init+1,w
  1061  072E  00F1               	movwf	___aldiv@divisor+1
  1062  072F  01F2               	clrf	___aldiv@divisor+2
  1063  0730  01F3               	clrf	___aldiv@divisor+3
  1064  0731  0846               	movf	uartRC_init@baudrate+1,w
  1065  0732  00CA               	movwf	??_uartRC_init+3
  1066  0733  0845               	movf	uartRC_init@baudrate,w
  1067  0734  00C9               	movwf	??_uartRC_init+2
  1068  0735  3006               	movlw	6
  1069  0736  00FF               	movwf	btemp+1
  1070  0737                     u595:
  1071  0737  1003               	clrc
  1072  0738  0DC9               	rlf	??_uartRC_init+2,f
  1073  0739  0DCA               	rlf	??_uartRC_init+3,f
  1074  073A  0BFF               	decfsz	btemp+1,f
  1075  073B  2F37               	goto	u595
  1076  073C  0849               	movf	??_uartRC_init+2,w
  1077  073D  00CB               	movwf	??_uartRC_init+4
  1078  073E  084A               	movf	??_uartRC_init+3,w
  1079  073F  00CC               	movwf	??_uartRC_init+5
  1080  0740  01CD               	clrf	??_uartRC_init+6
  1081  0741  01CE               	clrf	??_uartRC_init+7
  1082  0742  3000               	movlw	0
  1083  0743  00CF               	movwf	??_uartRC_init+8
  1084  0744  3009               	movlw	9
  1085  0745  00D0               	movwf	??_uartRC_init+9
  1086  0746  303D               	movlw	61
  1087  0747  00D1               	movwf	??_uartRC_init+10
  1088  0748  3000               	movlw	0
  1089  0749  00D2               	movwf	??_uartRC_init+11
  1090  074A  084B               	movf	??_uartRC_init+4,w
  1091  074B  02CF               	subwf	??_uartRC_init+8,f
  1092  074C  084C               	movf	??_uartRC_init+5,w
  1093  074D  1C03               	skipc
  1094  074E  0F4C               	incfsz	??_uartRC_init+5,w
  1095  074F  2F51               	goto	u601
  1096  0750  2F52               	goto	u602
  1097  0751                     u601:
  1098  0751  02D0               	subwf	??_uartRC_init+9,f
  1099  0752                     u602:
  1100  0752  084D               	movf	??_uartRC_init+6,w
  1101  0753  1C03               	skipc
  1102  0754  0F4D               	incfsz	??_uartRC_init+6,w
  1103  0755  2F57               	goto	u603
  1104  0756  2F58               	goto	u604
  1105  0757                     u603:
  1106  0757  02D1               	subwf	??_uartRC_init+10,f
  1107  0758                     u604:
  1108  0758  084E               	movf	??_uartRC_init+7,w
  1109  0759  1C03               	skipc
  1110  075A  0F4E               	incfsz	??_uartRC_init+7,w
  1111  075B  2F5D               	goto	u605
  1112  075C  2F5E               	goto	u606
  1113  075D                     u605:
  1114  075D  02D2               	subwf	??_uartRC_init+11,f
  1115  075E                     u606:
  1116  075E  0852               	movf	??_uartRC_init+11,w
  1117  075F  00F7               	movwf	___aldiv@dividend+3
  1118  0760  0851               	movf	??_uartRC_init+10,w
  1119  0761  00F6               	movwf	___aldiv@dividend+2
  1120  0762  0850               	movf	??_uartRC_init+9,w
  1121  0763  00F5               	movwf	___aldiv@dividend+1
  1122  0764  084F               	movf	??_uartRC_init+8,w
  1123  0765  00F4               	movwf	___aldiv@dividend
  1124  0766  120A  118A  2681  120A  118A  	fcall	___aldiv
  1125  076B  0871               	movf	?___aldiv+1,w
  1126  076C  00FA               	movwf	uartRC_init@n+1
  1127  076D  0870               	movf	?___aldiv,w
  1128  076E  00F9               	movwf	uartRC_init@n
  1129  076F                     l1049:
  1130                           
  1131                           ;USART.c: 16:     if (n > 255){
  1132  076F  3001               	movlw	1
  1133  0770  027A               	subwf	uartRC_init@n+1,w
  1134  0771  3000               	movlw	0
  1135  0772  1903               	skipnz
  1136  0773  0279               	subwf	uartRC_init@n,w
  1137  0774  1C03               	skipc
  1138  0775  2F77               	goto	u611
  1139  0776  2F78               	goto	u610
  1140  0777                     u611:
  1141  0777  2FD0               	goto	l1055
  1142  0778                     u610:
  1143  0778                     l1051:
  1144                           
  1145                           ;USART.c: 17:         n = (4000000 - baudrate*16)/(baudrate*16);
  1146  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1147  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1148  077A  0846               	movf	uartRC_init@baudrate+1,w
  1149  077B  00C8               	movwf	??_uartRC_init+1
  1150  077C  0845               	movf	uartRC_init@baudrate,w
  1151  077D  00C7               	movwf	??_uartRC_init
  1152  077E  0EC7               	swapf	??_uartRC_init,f
  1153  077F  0EC8               	swapf	??_uartRC_init+1,f
  1154  0780  30F0               	movlw	240
  1155  0781  05C8               	andwf	??_uartRC_init+1,f
  1156  0782  0847               	movf	??_uartRC_init,w
  1157  0783  390F               	andlw	15
  1158  0784  04C8               	iorwf	??_uartRC_init+1,f
  1159  0785  30F0               	movlw	240
  1160  0786  05C7               	andwf	??_uartRC_init,f
  1161  0787  0847               	movf	??_uartRC_init,w
  1162  0788  00F0               	movwf	___aldiv@divisor
  1163  0789  0848               	movf	??_uartRC_init+1,w
  1164  078A  00F1               	movwf	___aldiv@divisor+1
  1165  078B  01F2               	clrf	___aldiv@divisor+2
  1166  078C  01F3               	clrf	___aldiv@divisor+3
  1167  078D  0846               	movf	uartRC_init@baudrate+1,w
  1168  078E  00CA               	movwf	??_uartRC_init+3
  1169  078F  0845               	movf	uartRC_init@baudrate,w
  1170  0790  00C9               	movwf	??_uartRC_init+2
  1171  0791  0EC9               	swapf	??_uartRC_init+2,f
  1172  0792  0ECA               	swapf	??_uartRC_init+3,f
  1173  0793  30F0               	movlw	240
  1174  0794  05CA               	andwf	??_uartRC_init+3,f
  1175  0795  0849               	movf	??_uartRC_init+2,w
  1176  0796  390F               	andlw	15
  1177  0797  04CA               	iorwf	??_uartRC_init+3,f
  1178  0798  30F0               	movlw	240
  1179  0799  05C9               	andwf	??_uartRC_init+2,f
  1180  079A  0849               	movf	??_uartRC_init+2,w
  1181  079B  00CB               	movwf	??_uartRC_init+4
  1182  079C  084A               	movf	??_uartRC_init+3,w
  1183  079D  00CC               	movwf	??_uartRC_init+5
  1184  079E  01CD               	clrf	??_uartRC_init+6
  1185  079F  01CE               	clrf	??_uartRC_init+7
  1186  07A0  3000               	movlw	0
  1187  07A1  00CF               	movwf	??_uartRC_init+8
  1188  07A2  3009               	movlw	9
  1189  07A3  00D0               	movwf	??_uartRC_init+9
  1190  07A4  303D               	movlw	61
  1191  07A5  00D1               	movwf	??_uartRC_init+10
  1192  07A6  3000               	movlw	0
  1193  07A7  00D2               	movwf	??_uartRC_init+11
  1194  07A8  084B               	movf	??_uartRC_init+4,w
  1195  07A9  02CF               	subwf	??_uartRC_init+8,f
  1196  07AA  084C               	movf	??_uartRC_init+5,w
  1197  07AB  1C03               	skipc
  1198  07AC  0F4C               	incfsz	??_uartRC_init+5,w
  1199  07AD  2FAF               	goto	u621
  1200  07AE  2FB0               	goto	u622
  1201  07AF                     u621:
  1202  07AF  02D0               	subwf	??_uartRC_init+9,f
  1203  07B0                     u622:
  1204  07B0  084D               	movf	??_uartRC_init+6,w
  1205  07B1  1C03               	skipc
  1206  07B2  0F4D               	incfsz	??_uartRC_init+6,w
  1207  07B3  2FB5               	goto	u623
  1208  07B4  2FB6               	goto	u624
  1209  07B5                     u623:
  1210  07B5  02D1               	subwf	??_uartRC_init+10,f
  1211  07B6                     u624:
  1212  07B6  084E               	movf	??_uartRC_init+7,w
  1213  07B7  1C03               	skipc
  1214  07B8  0F4E               	incfsz	??_uartRC_init+7,w
  1215  07B9  2FBB               	goto	u625
  1216  07BA  2FBC               	goto	u626
  1217  07BB                     u625:
  1218  07BB  02D2               	subwf	??_uartRC_init+11,f
  1219  07BC                     u626:
  1220  07BC  0852               	movf	??_uartRC_init+11,w
  1221  07BD  00F7               	movwf	___aldiv@dividend+3
  1222  07BE  0851               	movf	??_uartRC_init+10,w
  1223  07BF  00F6               	movwf	___aldiv@dividend+2
  1224  07C0  0850               	movf	??_uartRC_init+9,w
  1225  07C1  00F5               	movwf	___aldiv@dividend+1
  1226  07C2  084F               	movf	??_uartRC_init+8,w
  1227  07C3  00F4               	movwf	___aldiv@dividend
  1228  07C4  120A  118A  2681  120A  118A  	fcall	___aldiv
  1229  07C9  0871               	movf	?___aldiv+1,w
  1230  07CA  00FA               	movwf	uartRC_init@n+1
  1231  07CB  0870               	movf	?___aldiv,w
  1232  07CC  00F9               	movwf	uartRC_init@n
  1233  07CD                     l1053:
  1234                           
  1235                           ;USART.c: 18:         TXSTAbits.BRGH = 1;
  1236  07CD  1683               	bsf	3,5	;RP0=1, select bank1
  1237  07CE  1303               	bcf	3,6	;RP1=0, select bank1
  1238  07CF  1518               	bsf	24,2	;volatile
  1239  07D0                     l1055:
  1240                           
  1241                           ;USART.c: 20:     if (n < 256){
  1242  07D0  3001               	movlw	1
  1243  07D1  027A               	subwf	uartRC_init@n+1,w
  1244  07D2  3000               	movlw	0
  1245  07D3  1903               	skipnz
  1246  07D4  0279               	subwf	uartRC_init@n,w
  1247  07D5  1803               	skipnc
  1248  07D6  2FD8               	goto	u631
  1249  07D7  2FD9               	goto	u630
  1250  07D8                     u631:
  1251  07D8  2FE5               	goto	l181
  1252  07D9                     u630:
  1253  07D9                     l1057:
  1254                           
  1255                           ;USART.c: 21:         SPBRG = n;
  1256  07D9  0879               	movf	uartRC_init@n,w
  1257  07DA  1683               	bsf	3,5	;RP0=1, select bank1
  1258  07DB  1303               	bcf	3,6	;RP1=0, select bank1
  1259  07DC  0099               	movwf	25	;volatile
  1260  07DD                     l1059:
  1261                           
  1262                           ;USART.c: 22:         TXSTAbits.SYNC = 0;
  1263  07DD  1218               	bcf	24,4	;volatile
  1264  07DE                     l1061:
  1265                           
  1266                           ;USART.c: 23:         RCSTAbits.SPEN = 1;
  1267  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1268  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1269  07E0  1798               	bsf	24,7	;volatile
  1270  07E1                     l1063:
  1271                           
  1272                           ;USART.c: 24:         RCSTAbits.CREN = 1;
  1273  07E1  1618               	bsf	24,4	;volatile
  1274  07E2                     l1065:
  1275                           
  1276                           ;USART.c: 25:         TXSTAbits.TXEN = 1;
  1277  07E2  1683               	bsf	3,5	;RP0=1, select bank1
  1278  07E3  1303               	bcf	3,6	;RP1=0, select bank1
  1279  07E4  1698               	bsf	24,5	;volatile
  1280  07E5                     l181:
  1281  07E5  0008               	return
  1282  07E6                     __end_of_uartRC_init:
  1283                           
  1284                           	psect	text4
  1285  0681                     __ptext4:	
  1286 ;; *************** function ___aldiv *****************
  1287 ;; Defined at:
  1288 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\aldiv.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  divisor         4    0[COMMON] long 
  1291 ;;  dividend        4    4[COMMON] long 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  quotient        4    2[BANK0 ] long 
  1294 ;;  sign            1    1[BANK0 ] unsigned char 
  1295 ;;  counter         1    0[BANK0 ] unsigned char 
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  4    0[COMMON] long 
  1298 ;; Registers used:
  1299 ;;		wreg, status,2, status,0
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1305 ;;      Params:         8       0       0       0       0
  1306 ;;      Locals:         0       6       0       0       0
  1307 ;;      Temps:          1       0       0       0       0
  1308 ;;      Totals:         9       6       0       0       0
  1309 ;;Total ram usage:       15 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; This function calls:
  1312 ;;		Nothing
  1313 ;; This function is called by:
  1314 ;;		_uartRC_init
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           
  1319                           ;psect for function ___aldiv
  1320  0681                     ___aldiv:
  1321  0681                     l1007:	
  1322                           ;incstack = 0
  1323                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1324                           
  1325  0681  1283               	bcf	3,5	;RP0=0, select bank0
  1326  0682  1303               	bcf	3,6	;RP1=0, select bank0
  1327  0683  01C0               	clrf	___aldiv@sign
  1328  0684                     l1009:
  1329  0684  1FF3               	btfss	___aldiv@divisor+3,7
  1330  0685  2E87               	goto	u481
  1331  0686  2E88               	goto	u480
  1332  0687                     u481:
  1333  0687  2E95               	goto	l353
  1334  0688                     u480:
  1335  0688                     l1011:
  1336  0688  09F0               	comf	___aldiv@divisor,f
  1337  0689  09F1               	comf	___aldiv@divisor+1,f
  1338  068A  09F2               	comf	___aldiv@divisor+2,f
  1339  068B  09F3               	comf	___aldiv@divisor+3,f
  1340  068C  0AF0               	incf	___aldiv@divisor,f
  1341  068D  1903               	skipnz
  1342  068E  0AF1               	incf	___aldiv@divisor+1,f
  1343  068F  1903               	skipnz
  1344  0690  0AF2               	incf	___aldiv@divisor+2,f
  1345  0691  1903               	skipnz
  1346  0692  0AF3               	incf	___aldiv@divisor+3,f
  1347  0693  01C0               	clrf	___aldiv@sign
  1348  0694  0AC0               	incf	___aldiv@sign,f
  1349  0695                     l353:
  1350  0695  1FF7               	btfss	___aldiv@dividend+3,7
  1351  0696  2E98               	goto	u491
  1352  0697  2E99               	goto	u490
  1353  0698                     u491:
  1354  0698  2EA8               	goto	l1017
  1355  0699                     u490:
  1356  0699                     l1013:
  1357  0699  09F4               	comf	___aldiv@dividend,f
  1358  069A  09F5               	comf	___aldiv@dividend+1,f
  1359  069B  09F6               	comf	___aldiv@dividend+2,f
  1360  069C  09F7               	comf	___aldiv@dividend+3,f
  1361  069D  0AF4               	incf	___aldiv@dividend,f
  1362  069E  1903               	skipnz
  1363  069F  0AF5               	incf	___aldiv@dividend+1,f
  1364  06A0  1903               	skipnz
  1365  06A1  0AF6               	incf	___aldiv@dividend+2,f
  1366  06A2  1903               	skipnz
  1367  06A3  0AF7               	incf	___aldiv@dividend+3,f
  1368  06A4                     l1015:
  1369  06A4  3001               	movlw	1
  1370  06A5  00F8               	movwf	??___aldiv
  1371  06A6  0878               	movf	??___aldiv,w
  1372  06A7  06C0               	xorwf	___aldiv@sign,f
  1373  06A8                     l1017:
  1374  06A8  3000               	movlw	0
  1375  06A9  00C4               	movwf	___aldiv@quotient+3
  1376  06AA  3000               	movlw	0
  1377  06AB  00C3               	movwf	___aldiv@quotient+2
  1378  06AC  3000               	movlw	0
  1379  06AD  00C2               	movwf	___aldiv@quotient+1
  1380  06AE  3000               	movlw	0
  1381  06AF  00C1               	movwf	___aldiv@quotient
  1382  06B0                     l1019:
  1383  06B0  0873               	movf	___aldiv@divisor+3,w
  1384  06B1  0472               	iorwf	___aldiv@divisor+2,w
  1385  06B2  0471               	iorwf	___aldiv@divisor+1,w
  1386  06B3  0470               	iorwf	___aldiv@divisor,w
  1387  06B4  1903               	skipnz
  1388  06B5  2EB7               	goto	u501
  1389  06B6  2EB8               	goto	u500
  1390  06B7                     u501:
  1391  06B7  2F05               	goto	l1039
  1392  06B8                     u500:
  1393  06B8                     l1021:
  1394  06B8  01BF               	clrf	___aldiv@counter
  1395  06B9  0ABF               	incf	___aldiv@counter,f
  1396  06BA  2EC8               	goto	l1025
  1397  06BB                     l1023:
  1398  06BB  3001               	movlw	1
  1399  06BC  00F8               	movwf	??___aldiv
  1400  06BD                     u515:
  1401  06BD  1003               	clrc
  1402  06BE  0DF0               	rlf	___aldiv@divisor,f
  1403  06BF  0DF1               	rlf	___aldiv@divisor+1,f
  1404  06C0  0DF2               	rlf	___aldiv@divisor+2,f
  1405  06C1  0DF3               	rlf	___aldiv@divisor+3,f
  1406  06C2  0BF8               	decfsz	??___aldiv,f
  1407  06C3  2EBD               	goto	u515
  1408  06C4  3001               	movlw	1
  1409  06C5  00F8               	movwf	??___aldiv
  1410  06C6  0878               	movf	??___aldiv,w
  1411  06C7  07BF               	addwf	___aldiv@counter,f
  1412  06C8                     l1025:
  1413  06C8  1FF3               	btfss	___aldiv@divisor+3,7
  1414  06C9  2ECB               	goto	u521
  1415  06CA  2ECC               	goto	u520
  1416  06CB                     u521:
  1417  06CB  2EBB               	goto	l1023
  1418  06CC                     u520:
  1419  06CC                     l1027:
  1420  06CC  3001               	movlw	1
  1421  06CD  00F8               	movwf	??___aldiv
  1422  06CE                     u535:
  1423  06CE  1003               	clrc
  1424  06CF  0DC1               	rlf	___aldiv@quotient,f
  1425  06D0  0DC2               	rlf	___aldiv@quotient+1,f
  1426  06D1  0DC3               	rlf	___aldiv@quotient+2,f
  1427  06D2  0DC4               	rlf	___aldiv@quotient+3,f
  1428  06D3  0BF8               	decfsz	??___aldiv,f
  1429  06D4  2ECE               	goto	u535
  1430  06D5                     l1029:
  1431  06D5  0873               	movf	___aldiv@divisor+3,w
  1432  06D6  0277               	subwf	___aldiv@dividend+3,w
  1433  06D7  1D03               	skipz
  1434  06D8  2EE3               	goto	u545
  1435  06D9  0872               	movf	___aldiv@divisor+2,w
  1436  06DA  0276               	subwf	___aldiv@dividend+2,w
  1437  06DB  1D03               	skipz
  1438  06DC  2EE3               	goto	u545
  1439  06DD  0871               	movf	___aldiv@divisor+1,w
  1440  06DE  0275               	subwf	___aldiv@dividend+1,w
  1441  06DF  1D03               	skipz
  1442  06E0  2EE3               	goto	u545
  1443  06E1  0870               	movf	___aldiv@divisor,w
  1444  06E2  0274               	subwf	___aldiv@dividend,w
  1445  06E3                     u545:
  1446  06E3  1C03               	skipc
  1447  06E4  2EE6               	goto	u541
  1448  06E5  2EE7               	goto	u540
  1449  06E6                     u541:
  1450  06E6  2EF6               	goto	l1035
  1451  06E7                     u540:
  1452  06E7                     l1031:
  1453  06E7  0870               	movf	___aldiv@divisor,w
  1454  06E8  02F4               	subwf	___aldiv@dividend,f
  1455  06E9  0871               	movf	___aldiv@divisor+1,w
  1456  06EA  1C03               	skipc
  1457  06EB  0F71               	incfsz	___aldiv@divisor+1,w
  1458  06EC  02F5               	subwf	___aldiv@dividend+1,f
  1459  06ED  0872               	movf	___aldiv@divisor+2,w
  1460  06EE  1C03               	skipc
  1461  06EF  0F72               	incfsz	___aldiv@divisor+2,w
  1462  06F0  02F6               	subwf	___aldiv@dividend+2,f
  1463  06F1  0873               	movf	___aldiv@divisor+3,w
  1464  06F2  1C03               	skipc
  1465  06F3  0F73               	incfsz	___aldiv@divisor+3,w
  1466  06F4  02F7               	subwf	___aldiv@dividend+3,f
  1467  06F5                     l1033:
  1468  06F5  1441               	bsf	___aldiv@quotient,0
  1469  06F6                     l1035:
  1470  06F6  3001               	movlw	1
  1471  06F7                     u555:
  1472  06F7  1003               	clrc
  1473  06F8  0CF3               	rrf	___aldiv@divisor+3,f
  1474  06F9  0CF2               	rrf	___aldiv@divisor+2,f
  1475  06FA  0CF1               	rrf	___aldiv@divisor+1,f
  1476  06FB  0CF0               	rrf	___aldiv@divisor,f
  1477  06FC  3EFF               	addlw	-1
  1478  06FD  1D03               	skipz
  1479  06FE  2EF7               	goto	u555
  1480  06FF                     l1037:
  1481  06FF  3001               	movlw	1
  1482  0700  02BF               	subwf	___aldiv@counter,f
  1483  0701  1D03               	btfss	3,2
  1484  0702  2F04               	goto	u561
  1485  0703  2F05               	goto	u560
  1486  0704                     u561:
  1487  0704  2ECC               	goto	l1027
  1488  0705                     u560:
  1489  0705                     l1039:
  1490  0705  0840               	movf	___aldiv@sign,w
  1491  0706  1903               	btfsc	3,2
  1492  0707  2F09               	goto	u571
  1493  0708  2F0A               	goto	u570
  1494  0709                     u571:
  1495  0709  2F15               	goto	l1043
  1496  070A                     u570:
  1497  070A                     l1041:
  1498  070A  09C1               	comf	___aldiv@quotient,f
  1499  070B  09C2               	comf	___aldiv@quotient+1,f
  1500  070C  09C3               	comf	___aldiv@quotient+2,f
  1501  070D  09C4               	comf	___aldiv@quotient+3,f
  1502  070E  0AC1               	incf	___aldiv@quotient,f
  1503  070F  1903               	skipnz
  1504  0710  0AC2               	incf	___aldiv@quotient+1,f
  1505  0711  1903               	skipnz
  1506  0712  0AC3               	incf	___aldiv@quotient+2,f
  1507  0713  1903               	skipnz
  1508  0714  0AC4               	incf	___aldiv@quotient+3,f
  1509  0715                     l1043:
  1510  0715  0844               	movf	___aldiv@quotient+3,w
  1511  0716  00F3               	movwf	?___aldiv+3
  1512  0717  0843               	movf	___aldiv@quotient+2,w
  1513  0718  00F2               	movwf	?___aldiv+2
  1514  0719  0842               	movf	___aldiv@quotient+1,w
  1515  071A  00F1               	movwf	?___aldiv+1
  1516  071B  0841               	movf	___aldiv@quotient,w
  1517  071C  00F0               	movwf	?___aldiv
  1518  071D                     l363:
  1519  071D  0008               	return
  1520  071E                     __end_of___aldiv:
  1521                           
  1522                           	psect	text5
  1523  0565                     __ptext5:	
  1524 ;; *************** function _configIO *****************
  1525 ;; Defined at:
  1526 ;;		line 45 in file "pic16f.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		status,2
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1540 ;;      Params:         0       0       0       0       0
  1541 ;;      Locals:         0       0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0
  1543 ;;      Totals:         0       0       0       0       0
  1544 ;;Total ram usage:        0 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_main
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           
  1554                           ;psect for function _configIO
  1555  0565                     _configIO:
  1556  0565                     l801:	
  1557                           ;incstack = 0
  1558                           ; Regs used in _configIO: [status,2]
  1559                           
  1560                           
  1561                           ;pic16f.c: 46:     TRISD=0;
  1562  0565  1683               	bsf	3,5	;RP0=1, select bank1
  1563  0566  1303               	bcf	3,6	;RP1=0, select bank1
  1564  0567  0188               	clrf	8	;volatile
  1565                           
  1566                           ;pic16f.c: 47:     ANSEL=0;
  1567  0568  1683               	bsf	3,5	;RP0=1, select bank3
  1568  0569  1703               	bsf	3,6	;RP1=1, select bank3
  1569  056A  0188               	clrf	8	;volatile
  1570                           
  1571                           ;pic16f.c: 48:     ANSELH=0;
  1572  056B  0189               	clrf	9	;volatile
  1573                           
  1574                           ;pic16f.c: 49:     PORTD=0;
  1575  056C  1283               	bcf	3,5	;RP0=0, select bank0
  1576  056D  1303               	bcf	3,6	;RP1=0, select bank0
  1577  056E  0188               	clrf	8	;volatile
  1578  056F                     l803:
  1579                           
  1580                           ;pic16f.c: 51:     INTCONbits.PEIE=1;
  1581  056F  170B               	bsf	11,6	;volatile
  1582  0570                     l805:
  1583                           
  1584                           ;pic16f.c: 52:     PIE1bits.RCIE=1;
  1585  0570  1683               	bsf	3,5	;RP0=1, select bank1
  1586  0571  1303               	bcf	3,6	;RP1=0, select bank1
  1587  0572  168C               	bsf	12,5	;volatile
  1588  0573                     l807:
  1589                           
  1590                           ;pic16f.c: 53:     PIR1bits.RCIF=0;
  1591  0573  1283               	bcf	3,5	;RP0=0, select bank0
  1592  0574  1303               	bcf	3,6	;RP1=0, select bank0
  1593  0575  128C               	bcf	12,5	;volatile
  1594  0576                     l809:
  1595                           
  1596                           ;pic16f.c: 54:     INTCONbits.GIE=1;
  1597  0576  178B               	bsf	11,7	;volatile
  1598  0577                     l41:
  1599  0577  0008               	return
  1600  0578                     __end_of_configIO:
  1601                           
  1602                           	psect	text6
  1603  05E3                     __ptext6:	
  1604 ;; *************** function _I2C_Master_Init *****************
  1605 ;; Defined at:
  1606 ;;		line 16 in file "I2C.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  c               4    0[BANK0 ] const unsigned long 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0, pclath, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         0       4       0       0       0
  1621 ;;      Locals:         0       0       0       0       0
  1622 ;;      Temps:          0       4       0       0       0
  1623 ;;      Totals:         0       8       0       0       0
  1624 ;;Total ram usage:        8 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    1
  1627 ;; This function calls:
  1628 ;;		___lldiv
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;;		_aht_begin
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           
  1636                           ;psect for function _I2C_Master_Init
  1637  05E3                     _I2C_Master_Init:
  1638  05E3                     l1069:	
  1639                           ;incstack = 0
  1640                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1641                           
  1642                           
  1643                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1644  05E3  3028               	movlw	40
  1645  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  1646  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  1647  05E6  0094               	movwf	20	;volatile
  1648  05E7                     l1071:
  1649                           
  1650                           ;I2C.c: 19:     SSPCON2 = 0;
  1651  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  1652  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  1653  05E9  0191               	clrf	17	;volatile
  1654  05EA                     l1073:
  1655                           
  1656                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  1657  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  1658  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  1659  05EC  083F               	movf	I2C_Master_Init@c,w
  1660  05ED  00C3               	movwf	??_I2C_Master_Init
  1661  05EE  0840               	movf	I2C_Master_Init@c+1,w
  1662  05EF  00C4               	movwf	??_I2C_Master_Init+1
  1663  05F0  0841               	movf	I2C_Master_Init@c+2,w
  1664  05F1  00C5               	movwf	??_I2C_Master_Init+2
  1665  05F2  0842               	movf	I2C_Master_Init@c+3,w
  1666  05F3  00C6               	movwf	??_I2C_Master_Init+3
  1667  05F4  3002               	movlw	2
  1668  05F5                     u645:
  1669  05F5  1003               	clrc
  1670  05F6  0DC3               	rlf	??_I2C_Master_Init,f
  1671  05F7  0DC4               	rlf	??_I2C_Master_Init+1,f
  1672  05F8  0DC5               	rlf	??_I2C_Master_Init+2,f
  1673  05F9  0DC6               	rlf	??_I2C_Master_Init+3,f
  1674  05FA                     u640:
  1675  05FA  3EFF               	addlw	-1
  1676  05FB  1D03               	skipz
  1677  05FC  2DF5               	goto	u645
  1678  05FD  0846               	movf	??_I2C_Master_Init+3,w
  1679  05FE  00F3               	movwf	___lldiv@divisor+3
  1680  05FF  0845               	movf	??_I2C_Master_Init+2,w
  1681  0600  00F2               	movwf	___lldiv@divisor+2
  1682  0601  0844               	movf	??_I2C_Master_Init+1,w
  1683  0602  00F1               	movwf	___lldiv@divisor+1
  1684  0603  0843               	movf	??_I2C_Master_Init,w
  1685  0604  00F0               	movwf	___lldiv@divisor
  1686  0605  3000               	movlw	0
  1687  0606  00F7               	movwf	___lldiv@dividend+3
  1688  0607  303D               	movlw	61
  1689  0608  00F6               	movwf	___lldiv@dividend+2
  1690  0609  3009               	movlw	9
  1691  060A  00F5               	movwf	___lldiv@dividend+1
  1692  060B  3000               	movlw	0
  1693  060C  00F4               	movwf	___lldiv@dividend
  1694  060D  120A  118A  261B  120A  118A  	fcall	___lldiv
  1695  0612  0870               	movf	?___lldiv,w
  1696  0613  3EFF               	addlw	255
  1697  0614  1683               	bsf	3,5	;RP0=1, select bank1
  1698  0615  1303               	bcf	3,6	;RP1=0, select bank1
  1699  0616  0093               	movwf	19	;volatile
  1700  0617                     l1075:
  1701                           
  1702                           ;I2C.c: 21:     SSPSTAT = 0;
  1703  0617  0194               	clrf	20	;volatile
  1704  0618                     l1077:
  1705                           
  1706                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1707  0618  1587               	bsf	7,3	;volatile
  1708  0619                     l1079:
  1709                           
  1710                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1711  0619  1607               	bsf	7,4	;volatile
  1712  061A                     l78:
  1713  061A  0008               	return
  1714  061B                     __end_of_I2C_Master_Init:
  1715                           
  1716                           	psect	text7
  1717  061B                     __ptext7:	
  1718 ;; *************** function ___lldiv *****************
  1719 ;; Defined at:
  1720 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\__lldiv.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  divisor         4    0[COMMON] unsigned long 
  1723 ;;  dividend        4    4[COMMON] unsigned long 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;  quotient        4    9[COMMON] unsigned long 
  1726 ;;  counter         1   13[COMMON] unsigned char 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  4    0[COMMON] unsigned long 
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1736 ;;      Params:         8       0       0       0       0
  1737 ;;      Locals:         5       0       0       0       0
  1738 ;;      Temps:          1       0       0       0       0
  1739 ;;      Totals:        14       0       0       0       0
  1740 ;;Total ram usage:       14 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; This function calls:
  1743 ;;		Nothing
  1744 ;; This function is called by:
  1745 ;;		_I2C_Master_Init
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           
  1750                           ;psect for function ___lldiv
  1751  061B                     ___lldiv:
  1752  061B                     l983:	
  1753                           ;incstack = 0
  1754                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1755                           
  1756  061B  3000               	movlw	0
  1757  061C  00FC               	movwf	___lldiv@quotient+3
  1758  061D  3000               	movlw	0
  1759  061E  00FB               	movwf	___lldiv@quotient+2
  1760  061F  3000               	movlw	0
  1761  0620  00FA               	movwf	___lldiv@quotient+1
  1762  0621  3000               	movlw	0
  1763  0622  00F9               	movwf	___lldiv@quotient
  1764  0623  0873               	movf	___lldiv@divisor+3,w
  1765  0624  0472               	iorwf	___lldiv@divisor+2,w
  1766  0625  0471               	iorwf	___lldiv@divisor+1,w
  1767  0626  0470               	iorwf	___lldiv@divisor,w
  1768  0627  1903               	skipnz
  1769  0628  2E2A               	goto	u411
  1770  0629  2E2B               	goto	u410
  1771  062A                     u411:
  1772  062A  2E78               	goto	l1003
  1773  062B                     u410:
  1774  062B                     l985:
  1775  062B  01FD               	clrf	___lldiv@counter
  1776  062C  0AFD               	incf	___lldiv@counter,f
  1777  062D  2E3B               	goto	l989
  1778  062E                     l987:
  1779  062E  3001               	movlw	1
  1780  062F  00F8               	movwf	??___lldiv
  1781  0630                     u425:
  1782  0630  1003               	clrc
  1783  0631  0DF0               	rlf	___lldiv@divisor,f
  1784  0632  0DF1               	rlf	___lldiv@divisor+1,f
  1785  0633  0DF2               	rlf	___lldiv@divisor+2,f
  1786  0634  0DF3               	rlf	___lldiv@divisor+3,f
  1787  0635  0BF8               	decfsz	??___lldiv,f
  1788  0636  2E30               	goto	u425
  1789  0637  3001               	movlw	1
  1790  0638  00F8               	movwf	??___lldiv
  1791  0639  0878               	movf	??___lldiv,w
  1792  063A  07FD               	addwf	___lldiv@counter,f
  1793  063B                     l989:
  1794  063B  1FF3               	btfss	___lldiv@divisor+3,7
  1795  063C  2E3E               	goto	u431
  1796  063D  2E3F               	goto	u430
  1797  063E                     u431:
  1798  063E  2E2E               	goto	l987
  1799  063F                     u430:
  1800  063F                     l991:
  1801  063F  3001               	movlw	1
  1802  0640  00F8               	movwf	??___lldiv
  1803  0641                     u445:
  1804  0641  1003               	clrc
  1805  0642  0DF9               	rlf	___lldiv@quotient,f
  1806  0643  0DFA               	rlf	___lldiv@quotient+1,f
  1807  0644  0DFB               	rlf	___lldiv@quotient+2,f
  1808  0645  0DFC               	rlf	___lldiv@quotient+3,f
  1809  0646  0BF8               	decfsz	??___lldiv,f
  1810  0647  2E41               	goto	u445
  1811  0648                     l993:
  1812  0648  0873               	movf	___lldiv@divisor+3,w
  1813  0649  0277               	subwf	___lldiv@dividend+3,w
  1814  064A  1D03               	skipz
  1815  064B  2E56               	goto	u455
  1816  064C  0872               	movf	___lldiv@divisor+2,w
  1817  064D  0276               	subwf	___lldiv@dividend+2,w
  1818  064E  1D03               	skipz
  1819  064F  2E56               	goto	u455
  1820  0650  0871               	movf	___lldiv@divisor+1,w
  1821  0651  0275               	subwf	___lldiv@dividend+1,w
  1822  0652  1D03               	skipz
  1823  0653  2E56               	goto	u455
  1824  0654  0870               	movf	___lldiv@divisor,w
  1825  0655  0274               	subwf	___lldiv@dividend,w
  1826  0656                     u455:
  1827  0656  1C03               	skipc
  1828  0657  2E59               	goto	u451
  1829  0658  2E5A               	goto	u450
  1830  0659                     u451:
  1831  0659  2E69               	goto	l999
  1832  065A                     u450:
  1833  065A                     l995:
  1834  065A  0870               	movf	___lldiv@divisor,w
  1835  065B  02F4               	subwf	___lldiv@dividend,f
  1836  065C  0871               	movf	___lldiv@divisor+1,w
  1837  065D  1C03               	skipc
  1838  065E  0F71               	incfsz	___lldiv@divisor+1,w
  1839  065F  02F5               	subwf	___lldiv@dividend+1,f
  1840  0660  0872               	movf	___lldiv@divisor+2,w
  1841  0661  1C03               	skipc
  1842  0662  0F72               	incfsz	___lldiv@divisor+2,w
  1843  0663  02F6               	subwf	___lldiv@dividend+2,f
  1844  0664  0873               	movf	___lldiv@divisor+3,w
  1845  0665  1C03               	skipc
  1846  0666  0F73               	incfsz	___lldiv@divisor+3,w
  1847  0667  02F7               	subwf	___lldiv@dividend+3,f
  1848  0668                     l997:
  1849  0668  1479               	bsf	___lldiv@quotient,0
  1850  0669                     l999:
  1851  0669  3001               	movlw	1
  1852  066A                     u465:
  1853  066A  1003               	clrc
  1854  066B  0CF3               	rrf	___lldiv@divisor+3,f
  1855  066C  0CF2               	rrf	___lldiv@divisor+2,f
  1856  066D  0CF1               	rrf	___lldiv@divisor+1,f
  1857  066E  0CF0               	rrf	___lldiv@divisor,f
  1858  066F  3EFF               	addlw	-1
  1859  0670  1D03               	skipz
  1860  0671  2E6A               	goto	u465
  1861  0672                     l1001:
  1862  0672  3001               	movlw	1
  1863  0673  02FD               	subwf	___lldiv@counter,f
  1864  0674  1D03               	btfss	3,2
  1865  0675  2E77               	goto	u471
  1866  0676  2E78               	goto	u470
  1867  0677                     u471:
  1868  0677  2E3F               	goto	l991
  1869  0678                     u470:
  1870  0678                     l1003:
  1871  0678  087C               	movf	___lldiv@quotient+3,w
  1872  0679  00F3               	movwf	?___lldiv+3
  1873  067A  087B               	movf	___lldiv@quotient+2,w
  1874  067B  00F2               	movwf	?___lldiv+2
  1875  067C  087A               	movf	___lldiv@quotient+1,w
  1876  067D  00F1               	movwf	?___lldiv+1
  1877  067E  0879               	movf	___lldiv@quotient,w
  1878  067F  00F0               	movwf	?___lldiv
  1879  0680                     l318:
  1880  0680  0008               	return
  1881  0681                     __end_of___lldiv:
  1882  007E                     btemp	set	126	;btemp
  1883  007E                     wtemp0	set	126
  1884                           
  1885                           	psect	config
  1886                           
  1887                           ;Config register CONFIG1 @ 0x2007
  1888                           ;	Oscillator Selection bits
  1889                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1890                           ;	Watchdog Timer Enable bit
  1891                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1892                           ;	Power-up Timer Enable bit
  1893                           ;	PWRTE = OFF, PWRT disabled
  1894                           ;	RE3/MCLR pin function select bit
  1895                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1896                           ;	Code Protection bit
  1897                           ;	CP = OFF, Program memory code protection is disabled
  1898                           ;	Data Code Protection bit
  1899                           ;	CPD = OFF, Data memory code protection is disabled
  1900                           ;	Brown Out Reset Selection bits
  1901                           ;	BOREN = OFF, BOR disabled
  1902                           ;	Internal External Switchover bit
  1903                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1904                           ;	Fail-Safe Clock Monitor Enabled bit
  1905                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1906                           ;	Low Voltage Programming Enable bit
  1907                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1908                           ;	In-Circuit Debugger Mode bit
  1909                           ;	DEBUG = 0x1, unprogrammed default
  1910  2007                     	org	8199
  1911  2007  20D4               	dw	8404
  1912                           
  1913                           ;Config register CONFIG2 @ 0x2008
  1914                           ;	Brown-out Reset Selection bit
  1915                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1916                           ;	Flash Program Memory Self Write Enable bits
  1917                           ;	WRT = OFF, Write protection off
  1918  2008                     	org	8200
  1919  2008  3FFF               	dw	16383

Data Sizes:
    Strings     5
    Constant    0
    Data        17
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      70
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    uartTX_Write_Str@string	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _uartTX_Write_Str->_uartTX_Write
    _uartRC_init->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_uartRC_init
    _uartRC_init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1249
                                             20 BANK0      2     2      0
                    _I2C_Master_Init
                           _configIO
                        _uartRC_init
                   _uartTX_Write_Str
 ---------------------------------------------------------------------------------
 (1) _uartTX_Write_Str                                     3     3      0     132
                                              2 COMMON     3     3      0
                       _uartTX_Write
 ---------------------------------------------------------------------------------
 (2) _uartTX_Write                                         2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _uartRC_init                                         16    14      2     721
                                              9 COMMON     2     2      0
                                              6 BANK0     14    12      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     396
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _configIO
   _uartRC_init
     ___aldiv
   _uartTX_Write_Str
     _uartTX_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      54      12        0.0%
ABS                  0      0      54       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 12:58:37 2021

                        pc 0002                         l41 0577                         l78 061A  
                       u30 0564                         u31 0563                         fsr 0004  
                      l181 07E5                        l318 0680                        l190 0564  
                      l353 0695                        l363 071D                        l196 05AF  
                      l801 0565                        l803 056F                        l731 0554  
                      l805 0570                        l733 0559                        l807 0573  
                      l735 055E                        l809 0576                        l991 063F  
                      l983 061B                        l993 0648                        l985 062B  
                      l995 065A                        l987 062E                        _GIE 005F  
                      l997 0668                        l989 063B                        l999 0669  
                      u410 062B                        u411 062A                        u500 06B8  
                      u501 06B7                        u430 063F                        u431 063E  
                      u520 06CC                        u425 0630                        u521 06CB  
                      u601 0751                        u450 065A                        u610 0778  
                      u602 0752                        u451 0659                        u515 06BD  
                      u611 0777                        u603 0757                        u540 06E7  
                      u604 0758                        u445 0641                        u541 06E6  
                      u621 07AF                        u605 075D                        u470 0678  
                      u630 07D9                        u622 07B0                        u606 075E  
                      u471 0677                        u455 0656                        u535 06CE  
                      u631 07D8                        u623 07B5                        u640 05FA  
                      u560 0705                        u480 0688                        u624 07B6  
                      u465 066A                        u561 0704                        u545 06E3  
                      u481 0687                        u625 07BB                        u570 070A  
                      u490 0699                        u626 07BC                        u650 05AF  
                      u571 0709                        u555 06F7                        u491 0698  
                      u651 05AE                        u645 05F5                        u585 0726  
                      u595 0737                        fsr0 0004                        indf 0000  
                     l1001 0672                       l1003 0678                       l1011 0688  
                     l1021 06B8                       l1013 0699                       l1031 06E7  
                     l1023 06BB                       l1015 06A4                       l1007 0681  
                     l1041 070A                       l1033 06F5                       l1025 06C8  
                     l1017 06A8                       l1009 0684                       l1043 0715  
                     l1035 06F6                       l1027 06CC                       l1019 06B0  
                     l1051 0778                       l1037 06FF                       l1029 06D5  
                     l1061 07DE                       l1053 07CD                       l1221 05B5  
                     l1071 05E7                       l1039 0705                       l1063 07E1  
                     l1055 07D0                       l1047 071E                       l1223 05C0  
                     l1073 05EA                       l1065 07E2                       l1057 07D9  
                     l1049 076F                       l1081 058C                       l1225 05CF  
                     l1075 0617                       l1059 07DD                       l1083 058F  
                     l1227 05D5                       l1219 05B0                       l1077 0618  
                     l1069 05E3                       l1085 059C                       l1079 0619  
                     l1087 05A2                       STR_1 0009                       u1367 05DB  
                     u1377 055B                       _PEIE 005E                       _main 05B0  
                     btemp 007E                       start 0000   __end_of_uartTX_Write_Str 05B0  
               _GetTempCmd 003A           ?_I2C_Master_Init 003F            __end_of___aldiv 071E  
                    ?_main 0070                      _ANSEL 0188            __end_of___lldiv 0681  
                    _RCREG 001A                      _SPBRG 0099                      _PORTD 0008  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
                    _TXREG 0019                      _datos 0020            _GetRHumidityCmd 005E  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 07E6               __end_of_main 05E3                     ??_main 0053  
            _AHT10_address 0064                     _ANSELH 0189                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C               ?_uartRC_init 0045  
                   _SSPCON 0014                     _SSPBUF 0013           __end_of_configIO 0578  
                ??___aldiv 0078                  ??___lldiv 0078    __end_of__initialization 07FC  
           __pcstackCOMMON 0070               __pidataBANK0 0542                 __pbssBANK0 0020  
               __pmaintext 05B0          ?_uartTX_Write_Str 0070         ??_uartTX_Write_Str 0072  
                  _SSPCON2 0091                  ?_configIO 0070                    _SSPSTAT 0094  
               __stringtab 0003            _eSensorResetCmd 0065              ?_uartTX_Write 0070  
     __size_of_uartRC_init 00C8                    ___aldiv 0681                    ___lldiv 061B  
                  __ptext1 058B                    __ptext2 0553                    __ptext3 071E  
                  __ptext4 0681                    __ptext5 0565                    __ptext6 05E3  
                  __ptext7 061B                    _humeda1 0034                    _humedad 003C  
         ___aldiv@dividend 0074   __size_of_I2C_Master_Init 0038                 ??_configIO 0070  
                  clrloop0 053B       end_of_initialization 07FC             ??_uartTX_Write 0070  
          ___lldiv@divisor 0070            ___lldiv@counter 007D          _eSensorMeasureCmd 0055  
                _RCSTAbits 0018           ___aldiv@quotient 0041           I2C_Master_Init@c 003F  
      _eSensorCalibrateCmd 005B                  _TRISCbits 0087               _LecturaUSART 003E  
                _TXSTAbits 0098          _AHT10Address_High 0060        start_initialization 07E6  
        ??_I2C_Master_Init 0043                 init_fetch0 0578                __pdataBANK0 0055  
     __end_of_uartTX_Write 0565                  ___latbits 0002              __pcstackBANK0 003F  
__size_of_uartTX_Write_Str 0025          uartTX_Write_Str@n 0072          __size_of_configIO 0013  
                 ?___aldiv 0070                   ?___lldiv 0070                  __pstrings 0003  
          ___aldiv@divisor 0070              ??_uartRC_init 0047            ___aldiv@counter 003F  
                clear_ram0 053A                   _PIE1bits 008C                   _PIR1bits 000C  
   uartTX_Write_Str@string 0074                __stringbase 0008           _eSensorNormalCmd 0058  
      uartRC_init@baudrate 0045           _AHT10Address_Low 0062        __end_of_uartRC_init 07E6  
         __size_of___aldiv 009D           __size_of___lldiv 0066      __size_of_uartTX_Write 0012  
         uartTX_Write@dato 0071         __end_of__stringtab 0009               uartRC_init@n 0079  
          _I2C_Master_Init 05E3           _uartTX_Write_Str 058B                   _configIO 0565  
            __size_of_main 0033               _uartTX_Write 0553                   _tempera1 0037  
               _INTCONbits 000B                   init_ram0 057C           ___lldiv@dividend 0074  
              _uartRC_init 071E                  stringcode 0003    __end_of_I2C_Master_Init 061B  
              _temperatura 003D           ___lldiv@quotient 0079                   stringdir 0003  
                 stringtab 0003               ___aldiv@sign 0040                _SSPCON2bits 0091  
