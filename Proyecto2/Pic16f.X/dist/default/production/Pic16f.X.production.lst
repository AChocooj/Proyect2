

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 22:44:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	psect	text6_split_1,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  0107                     	;# 
   158  0108                     	;# 
   159  0109                     	;# 
   160  010C                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0185                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  008F                     	;# 
   216  0090                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  0105                     	;# 
   235  0107                     	;# 
   236  0108                     	;# 
   237  0109                     	;# 
   238  010C                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  0185                     	;# 
   244  0187                     	;# 
   245  0188                     	;# 
   246  0189                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0185                     	;# 
   322  0187                     	;# 
   323  0188                     	;# 
   324  0189                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0008                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000D                     	;# 
   341  000E                     	;# 
   342  000E                     	;# 
   343  000F                     	;# 
   344  0010                     	;# 
   345  0011                     	;# 
   346  0012                     	;# 
   347  0013                     	;# 
   348  0014                     	;# 
   349  0015                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001B                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  0081                     	;# 
   363  0085                     	;# 
   364  0086                     	;# 
   365  0087                     	;# 
   366  0088                     	;# 
   367  0089                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0094                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  0105                     	;# 
   391  0107                     	;# 
   392  0108                     	;# 
   393  0109                     	;# 
   394  010C                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0185                     	;# 
   400  0187                     	;# 
   401  0188                     	;# 
   402  0189                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  000E                     	;# 
   421  000F                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001D                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  0081                     	;# 
   441  0085                     	;# 
   442  0086                     	;# 
   443  0087                     	;# 
   444  0088                     	;# 
   445  0089                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  008F                     	;# 
   450  0090                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0095                     	;# 
   458  0096                     	;# 
   459  0097                     	;# 
   460  0098                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  0105                     	;# 
   469  0107                     	;# 
   470  0108                     	;# 
   471  0109                     	;# 
   472  010C                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  0185                     	;# 
   478  0187                     	;# 
   479  0188                     	;# 
   480  0189                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483                           
   484                           	psect	idataBANK0
   485  0006                     __pidataBANK0:
   486                           
   487                           ;initializer for _AHT10Address_Low
   488  0006  3438               	retlw	56
   489  0007  3400               	retlw	0
   490                           
   491                           ;initializer for _AHT10_address
   492  0008  3439               	retlw	57
   493                           
   494                           ;initializer for _eSensorResetCmd
   495  0009  34BA               	retlw	186
   496                           
   497                           	psect	idataBANK1
   498  1DD3                     __pidataBANK1:
   499                           
   500                           ;initializer for _eSensorMeasureCmd
   501  1DD3  34AC               	retlw	172
   502  1DD4  3433               	retlw	51
   503  1DD5  3400               	retlw	0
   504                           
   505                           ;initializer for _eSensorNormalCmd
   506  1DD6  34A8               	retlw	168
   507  1DD7  3400               	retlw	0
   508  1DD8  3400               	retlw	0
   509                           
   510                           ;initializer for _eSensorCalibrateCmd
   511  1DD9  34E1               	retlw	225
   512  1DDA  3408               	retlw	8
   513  1DDB  3400               	retlw	0
   514                           
   515                           ;initializer for _GetRHumidityCmd
   516  1DDC  3401               	retlw	1
   517  1DDD  3400               	retlw	0
   518                           
   519                           ;initializer for _AHT10Address_High
   520  1DDE  3439               	retlw	57
   521  1DDF  3400               	retlw	0
   522                           
   523                           	psect	strings
   524  1000                     __pstrings:
   525  1000                     stringtab:
   526  1000                     __stringtab:
   527  1000                     stringcode:	
   528                           ;	String table - string pointers are 1 byte each
   529                           
   530  1000                     stringdir:
   531  1000  3010               	movlw	high stringdir
   532  1001  008A               	movwf	10
   533  1002  0804               	movf	4,w
   534  1003  0A84               	incf	4,f
   535  1004  0782               	addwf	2,f
   536  1005                     __stringbase:
   537  1005  3400               	retlw	0
   538  1006                     __end_of__stringtab:
   539  1006                     __powers_:
   540  1006  3400               	retlw	0
   541  1007  3480               	retlw	128
   542  1008  343F               	retlw	63
   543  1009  3400               	retlw	0
   544  100A  3420               	retlw	32
   545  100B  3441               	retlw	65
   546  100C  3400               	retlw	0
   547  100D  34C8               	retlw	200
   548  100E  3442               	retlw	66
   549  100F  3400               	retlw	0
   550  1010  347A               	retlw	122
   551  1011  3444               	retlw	68
   552  1012  3440               	retlw	64
   553  1013  341C               	retlw	28
   554  1014  3446               	retlw	70
   555  1015  3450               	retlw	80
   556  1016  34C3               	retlw	195
   557  1017  3447               	retlw	71
   558  1018  3424               	retlw	36
   559  1019  3474               	retlw	116
   560  101A  3449               	retlw	73
   561  101B  3497               	retlw	151
   562  101C  3418               	retlw	24
   563  101D  344B               	retlw	75
   564  101E  34BC               	retlw	188
   565  101F  34BE               	retlw	190
   566  1020  344C               	retlw	76
   567  1021  346B               	retlw	107
   568  1022  346E               	retlw	110
   569  1023  344E               	retlw	78
   570  1024  3403               	retlw	3
   571  1025  3415               	retlw	21
   572  1026  3450               	retlw	80
   573  1027  3479               	retlw	121
   574  1028  34AD               	retlw	173
   575  1029  3460               	retlw	96
   576  102A  34F3               	retlw	243
   577  102B  3449               	retlw	73
   578  102C  3471               	retlw	113
   579  102D                     __end_of__powers_:
   580  102D                     __npowers_:
   581  102D  3400               	retlw	0
   582  102E  3480               	retlw	128
   583  102F  343F               	retlw	63
   584  1030  34CD               	retlw	205
   585  1031  34CC               	retlw	204
   586  1032  343D               	retlw	61
   587  1033  34D7               	retlw	215
   588  1034  3423               	retlw	35
   589  1035  343C               	retlw	60
   590  1036  3412               	retlw	18
   591  1037  3483               	retlw	131
   592  1038  343A               	retlw	58
   593  1039  34B7               	retlw	183
   594  103A  34D1               	retlw	209
   595  103B  3438               	retlw	56
   596  103C  34C6               	retlw	198
   597  103D  3427               	retlw	39
   598  103E  3437               	retlw	55
   599  103F  3438               	retlw	56
   600  1040  3486               	retlw	134
   601  1041  3435               	retlw	53
   602  1042  34C0               	retlw	192
   603  1043  34D6               	retlw	214
   604  1044  3433               	retlw	51
   605  1045  34CC               	retlw	204
   606  1046  342B               	retlw	43
   607  1047  3432               	retlw	50
   608  1048  3470               	retlw	112
   609  1049  3489               	retlw	137
   610  104A  3430               	retlw	48
   611  104B  34E7               	retlw	231
   612  104C  34DB               	retlw	219
   613  104D  342E               	retlw	46
   614  104E  34E5               	retlw	229
   615  104F  343C               	retlw	60
   616  1050  341E               	retlw	30
   617  1051  3442               	retlw	66
   618  1052  34A2               	retlw	162
   619  1053  340D               	retlw	13
   620  1054                     __end_of__npowers_:
   621  1054                     _dpowers:
   622  1054  3401               	retlw	1
   623  1055  3400               	retlw	0
   624  1056  3400               	retlw	0
   625  1057  3400               	retlw	0
   626  1058  340A               	retlw	10
   627  1059  3400               	retlw	0
   628  105A  3400               	retlw	0
   629  105B  3400               	retlw	0
   630  105C  3464               	retlw	100
   631  105D  3400               	retlw	0
   632  105E  3400               	retlw	0
   633  105F  3400               	retlw	0
   634  1060  34E8               	retlw	232
   635  1061  3403               	retlw	3
   636  1062  3400               	retlw	0
   637  1063  3400               	retlw	0
   638  1064  3410               	retlw	16
   639  1065  3427               	retlw	39
   640  1066  3400               	retlw	0
   641  1067  3400               	retlw	0
   642  1068  34A0               	retlw	160
   643  1069  3486               	retlw	134
   644  106A  3401               	retlw	1
   645  106B  3400               	retlw	0
   646  106C  3440               	retlw	64
   647  106D  3442               	retlw	66
   648  106E  340F               	retlw	15
   649  106F  3400               	retlw	0
   650  1070  3480               	retlw	128
   651  1071  3496               	retlw	150
   652  1072  3498               	retlw	152
   653  1073  3400               	retlw	0
   654  1074  3400               	retlw	0
   655  1075  34E1               	retlw	225
   656  1076  34F5               	retlw	245
   657  1077  3405               	retlw	5
   658  1078  3400               	retlw	0
   659  1079  34CA               	retlw	202
   660  107A  349A               	retlw	154
   661  107B  343B               	retlw	59
   662  107C                     __end_of_dpowers:
   663  0019                     _TXREG	set	25
   664  001A                     _RCREG	set	26
   665  0018                     _RCSTAbits	set	24
   666  0013                     _SSPBUF	set	19
   667  0014                     _SSPCON	set	20
   668  0008                     _PORTDbits	set	8
   669  000C                     _PIR1bits	set	12
   670  000B                     _INTCONbits	set	11
   671  0008                     _PORTD	set	8
   672  0063                     _SSPIF	set	99
   673  005E                     _PEIE	set	94
   674  005F                     _GIE	set	95
   675  0099                     _SPBRG	set	153
   676  0098                     _TXSTAbits	set	152
   677  0091                     _SSPCON2bits	set	145
   678  0087                     _TRISCbits	set	135
   679  0094                     _SSPSTAT	set	148
   680  0093                     _SSPADD	set	147
   681  0091                     _SSPCON2	set	145
   682  008C                     _PIE1bits	set	140
   683  0088                     _TRISD	set	136
   684  0463                     _SSPIE	set	1123
   685  043C                     _TRISC4	set	1084
   686  043B                     _TRISC3	set	1083
   687  0189                     _ANSELH	set	393
   688  0188                     _ANSEL	set	392
   689  107C                     STR_2:
   690  107C  3425               	retlw	37	;'%'
   691  107D  3432               	retlw	50	;'2'
   692  107E  342E               	retlw	46	;'.'
   693  107F  3431               	retlw	49	;'1'
   694  1080  3466               	retlw	102	;'f'
   695  1081  3420               	retlw	32	;' '
   696  1082  3420               	retlw	32	;' '
   697  1083  3420               	retlw	32	;' '
   698  1084  3425               	retlw	37	;'%'
   699  1085  3432               	retlw	50	;'2'
   700  1086  342E               	retlw	46	;'.'
   701  1087  3431               	retlw	49	;'1'
   702  1088  3466               	retlw	102	;'f'
   703  1089  3420               	retlw	32	;' '
   704  108A  3400               	retlw	0
   705  108B                     STR_1:
   706  108B  3454               	retlw	84	;'T'
   707  108C  3431               	retlw	49	;'1'
   708  108D  3420               	retlw	32	;' '
   709  108E  3420               	retlw	32	;' '
   710  108F  3420               	retlw	32	;' '
   711  1090  3448               	retlw	72	;'H'
   712  1091  3431               	retlw	49	;'1'
   713  1092  3420               	retlw	32	;' '
   714  1093  3420               	retlw	32	;' '
   715  1094  3420               	retlw	32	;' '
   716  1095  340A               	retlw	10
   717  1096  3400               	retlw	0
   718                           
   719                           	psect	cinit
   720  07D4                     start_initialization:	
   721                           ; #config settings
   722                           
   723  07D4                     __initialization:
   724                           
   725                           ; Initialize objects allocated to BANK1
   726  07D4  1383               	bcf	3,7	;select IRP bank0
   727  07D5  30DC               	movlw	low (__pdataBANK1+13)
   728  07D6  00FD               	movwf	btemp+-1
   729  07D7  301D               	movlw	high __pidataBANK1
   730  07D8  00FE               	movwf	btemp
   731  07D9  30D3               	movlw	low __pidataBANK1
   732  07DA  00FF               	movwf	btemp+1
   733  07DB  30CF               	movlw	low __pdataBANK1
   734  07DC  0084               	movwf	4
   735  07DD  160A  158A  261B  120A  118A  	fcall	init_ram0
   736                           
   737                           ; Initialize objects allocated to BANK0
   738  07E2  3070               	movlw	low (__pdataBANK0+4)
   739  07E3  00FD               	movwf	btemp+-1
   740  07E4  3000               	movlw	high __pidataBANK0
   741  07E5  00FE               	movwf	btemp
   742  07E6  3006               	movlw	low __pidataBANK0
   743  07E7  00FF               	movwf	btemp+1
   744  07E8  306C               	movlw	low __pdataBANK0
   745  07E9  0084               	movwf	4
   746  07EA  160A  158A  261B  120A  118A  	fcall	init_ram0
   747                           
   748                           ; Clear objects allocated to BANK1
   749  07EF  30B9               	movlw	low __pbssBANK1
   750  07F0  0084               	movwf	4
   751  07F1  30CF               	movlw	low (__pbssBANK1+22)
   752  07F2  160A  158A  25A1  120A  118A  	fcall	clear_ram0
   753                           
   754                           ; Clear objects allocated to BANK0
   755  07F7  01E7               	clrf	__pbssBANK0& (0+127)
   756  07F8  01E8               	clrf	(__pbssBANK0+1)& (0+127)
   757  07F9  01E9               	clrf	(__pbssBANK0+2)& (0+127)
   758  07FA  01EA               	clrf	(__pbssBANK0+3)& (0+127)
   759  07FB  01EB               	clrf	(__pbssBANK0+4)& (0+127)
   760  07FC                     end_of_initialization:	
   761                           ;End of C runtime variable initialization code
   762                           
   763  07FC                     __end_of__initialization:
   764  07FC  0183               	clrf	3
   765  07FD  160A  118A  2C04   	ljmp	_main	;jump to C main() function
   766                           
   767                           	psect	bssBANK0
   768  0067                     __pbssBANK0:
   769  0067                     _tempera1:
   770  0067                     	ds	3
   771  006A                     _caso:
   772  006A                     	ds	2
   773                           
   774                           	psect	dataBANK0
   775  006C                     __pdataBANK0:
   776  006C                     _AHT10Address_Low:
   777  006C                     	ds	2
   778  006E                     _AHT10_address:
   779  006E                     	ds	1
   780  006F                     _eSensorResetCmd:
   781  006F                     	ds	1
   782                           
   783                           	psect	bssBANK1
   784  00B9                     __pbssBANK1:
   785  00B9                     _GetTempCmd:
   786  00B9                     	ds	2
   787  00BB                     _datos:
   788  00BB                     	ds	20
   789                           
   790                           	psect	dataBANK1
   791  00CF                     __pdataBANK1:
   792  00CF                     _eSensorMeasureCmd:
   793  00CF                     	ds	3
   794  00D2                     _eSensorNormalCmd:
   795  00D2                     	ds	3
   796  00D5                     _eSensorCalibrateCmd:
   797  00D5                     	ds	3
   798  00D8                     _GetRHumidityCmd:
   799  00D8                     	ds	2
   800  00DA                     _AHT10Address_High:
   801  00DA                     	ds	2
   802                           
   803                           	psect	inittext
   804  1E17                     init_fetch0:	
   805                           ;	Called with low address in FSR and high address in W
   806                           
   807  1E17  087E               	movf	btemp,w
   808  1E18  008A               	movwf	10
   809  1E19  087F               	movf	btemp+1,w
   810  1E1A  0082               	movwf	2
   811  1E1B                     init_ram0:	
   812                           ;Called with:
   813                           ;	high address of idata address in btemp 
   814                           ;	low address of idata address in btemp+1 
   815                           ;	low address of data in FSR
   816                           ;	high address + 1 of data in btemp-1
   817                           
   818  1E1B  160A  158A  2617  160A  158A  	fcall	init_fetch0
   819  1E20  0080               	movwf	0
   820  1E21  0A84               	incf	4,f
   821  1E22  0804               	movf	4,w
   822  1E23  067D               	xorwf	btemp+-1,w
   823  1E24  1903               	btfsc	3,2
   824  1E25  3400               	retlw	0
   825  1E26  0AFF               	incf	btemp+1,f
   826  1E27  1903               	btfsc	3,2
   827  1E28  0AFE               	incf	btemp,f
   828  1E29  2E1B               	goto	init_ram0
   829                           
   830                           	psect	clrtext
   831  1DA1                     clear_ram0:	
   832                           ;	Called with FSR containing the base address, and
   833                           ;	W with the last address+1
   834                           
   835  1DA1  0064               	clrwdt	;clear the watchdog before getting into this loop
   836  1DA2                     clrloop0:
   837  1DA2  0180               	clrf	0	;clear RAM location pointed to by FSR
   838  1DA3  0A84               	incf	4,f	;increment pointer
   839  1DA4  0604               	xorwf	4,w	;XOR with final address
   840  1DA5  1903               	btfsc	3,2	;have we reached the end yet?
   841  1DA6  3400               	retlw	0	;all done for this memory range, return
   842  1DA7  0604               	xorwf	4,w	;XOR again to restore value
   843  1DA8  2DA2               	goto	clrloop0	;do the next byte
   844                           
   845                           	psect	cstackBANK1
   846  00A0                     __pcstackBANK1:
   847  00A0                     _sprintf$1070:
   848                           
   849                           ; 3 bytes @ 0x0
   850  00A0                     	ds	3
   851  00A3                     sprintf@ap:
   852                           
   853                           ; 1 bytes @ 0x3
   854  00A3                     	ds	1
   855  00A4                     sprintf@val:
   856                           
   857                           ; 4 bytes @ 0x4
   858  00A4                     	ds	4
   859  00A8                     sprintf@flag:
   860                           
   861                           ; 2 bytes @ 0x8
   862  00A8                     	ds	2
   863  00AA                     sprintf@width:
   864                           
   865                           ; 2 bytes @ 0xA
   866  00AA                     	ds	2
   867  00AC                     sprintf@tmpval:
   868                           
   869                           ; 4 bytes @ 0xC
   870  00AC                     	ds	4
   871  00B0                     sprintf@eexp:
   872                           
   873                           ; 2 bytes @ 0x10
   874  00B0                     	ds	2
   875  00B2                     sprintf@sp:
   876                           
   877                           ; 1 bytes @ 0x12
   878  00B2                     	ds	1
   879  00B3                     sprintf@fval:
   880                           
   881                           ; 3 bytes @ 0x13
   882  00B3                     	ds	3
   883  00B6                     sprintf@prec:
   884                           
   885                           ; 2 bytes @ 0x16
   886  00B6                     	ds	2
   887  00B8                     sprintf@c:
   888                           
   889                           ; 1 bytes @ 0x18
   890  00B8                     	ds	1
   891                           
   892                           	psect	cstackCOMMON
   893  0070                     __pcstackCOMMON:
   894  0070                     ?_isdigit:
   895  0070                     ?___ftge:	
   896                           ; 1 bit 
   897                           
   898  0070                     ?_I2C_Master_Start:	
   899                           ; 1 bit 
   900                           
   901  0070                     ??_I2C_Master_Start:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0070                     ?_I2C_Master_Write:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0070                     ?_uartTX_Write_Str:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0070                     ?_uartTX_Write:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  0070                     ??_uartTX_Write:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0070                     ?_uartRC_Read:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0070                     ??_uartRC_Read:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0070                     ??_isdigit:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0070                     ?_configIO:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0070                     ??_configIO:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0070                     ?_main:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0070                     ?_I2C_Master_Wait:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0070                     ??_I2C_Master_Wait:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0070                     ?_I2C_Master_Stop:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0070                     ??_I2C_Master_Stop:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0070                     ?_I2C_Master_Read:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0070                     ?___wmul:	
   950                           ; 2 bytes @ 0x0
   951                           
   952  0070                     ?___awmod:	
   953                           ; 2 bytes @ 0x0
   954                           
   955  0070                     ?___lwmod:	
   956                           ; 2 bytes @ 0x0
   957                           
   958  0070                     ?___ftpack:	
   959                           ; 2 bytes @ 0x0
   960                           
   961  0070                     ?___ftneg:	
   962                           ; 3 bytes @ 0x0
   963                           
   964  0070                     ?__tdiv_to_l_:	
   965                           ; 3 bytes @ 0x0
   966                           
   967  0070                     ?__div_to_l_:	
   968                           ; 4 bytes @ 0x0
   969                           
   970  0070                     ?___lldiv:	
   971                           ; 4 bytes @ 0x0
   972                           
   973  0070                     ?___aldiv:	
   974                           ; 4 bytes @ 0x0
   975                           
   976  0070                     ?___llmod:	
   977                           ; 4 bytes @ 0x0
   978                           
   979  0070                     _isdigit$863:	
   980                           ; 4 bytes @ 0x0
   981                           
   982  0070                     I2C_Master_Write@d:	
   983                           ; 1 bytes @ 0x0
   984                           
   985  0070                     I2C_Master_Read@a:	
   986                           ; 2 bytes @ 0x0
   987                           
   988  0070                     ___wmul@multiplier:	
   989                           ; 2 bytes @ 0x0
   990                           
   991  0070                     ___awmod@divisor:	
   992                           ; 2 bytes @ 0x0
   993                           
   994  0070                     ___lwmod@divisor:	
   995                           ; 2 bytes @ 0x0
   996                           
   997  0070                     __div_to_l_@f1:	
   998                           ; 2 bytes @ 0x0
   999                           
  1000  0070                     ___ftpack@arg:	
  1001                           ; 3 bytes @ 0x0
  1002                           
  1003  0070                     __tdiv_to_l_@f1:	
  1004                           ; 3 bytes @ 0x0
  1005                           
  1006  0070                     ___ftge@ff1:	
  1007                           ; 3 bytes @ 0x0
  1008                           
  1009  0070                     ___ftneg@f1:	
  1010                           ; 3 bytes @ 0x0
  1011                           
  1012  0070                     ___lldiv@divisor:	
  1013                           ; 3 bytes @ 0x0
  1014                           
  1015  0070                     ___aldiv@divisor:	
  1016                           ; 4 bytes @ 0x0
  1017                           
  1018  0070                     ___llmod@divisor:	
  1019                           ; 4 bytes @ 0x0
  1020                           
  1021                           
  1022                           ; 4 bytes @ 0x0
  1023  0070                     	ds	1
  1024  0071                     uartTX_Write@dato:
  1025  0071                     isdigit@c:	
  1026                           ; 1 bytes @ 0x1
  1027                           
  1028                           
  1029                           ; 1 bytes @ 0x1
  1030  0071                     	ds	1
  1031  0072                     ??_I2C_Master_Write:
  1032  0072                     ??_uartTX_Write_Str:	
  1033                           ; 1 bytes @ 0x2
  1034                           
  1035  0072                     ??_I2C_Master_Read:	
  1036                           ; 1 bytes @ 0x2
  1037                           
  1038  0072                     uartTX_Write_Str@n:	
  1039                           ; 1 bytes @ 0x2
  1040                           
  1041  0072                     ___wmul@multiplicand:	
  1042                           ; 2 bytes @ 0x2
  1043                           
  1044  0072                     ___awmod@dividend:	
  1045                           ; 2 bytes @ 0x2
  1046                           
  1047  0072                     ___lwmod@dividend:	
  1048                           ; 2 bytes @ 0x2
  1049                           
  1050                           
  1051                           ; 2 bytes @ 0x2
  1052  0072                     	ds	1
  1053  0073                     ??___ftneg:
  1054  0073                     ___ftpack@exp:	
  1055                           ; 1 bytes @ 0x3
  1056                           
  1057  0073                     __div_to_l_@f2:	
  1058                           ; 1 bytes @ 0x3
  1059                           
  1060  0073                     __tdiv_to_l_@f2:	
  1061                           ; 3 bytes @ 0x3
  1062                           
  1063  0073                     ___ftge@ff2:	
  1064                           ; 3 bytes @ 0x3
  1065                           
  1066                           
  1067                           ; 3 bytes @ 0x3
  1068  0073                     	ds	1
  1069  0074                     ??___wmul:
  1070  0074                     ??___awmod:	
  1071                           ; 1 bytes @ 0x4
  1072                           
  1073  0074                     ??___lwmod:	
  1074                           ; 1 bytes @ 0x4
  1075                           
  1076  0074                     uartTX_Write_Str@string:	
  1077                           ; 1 bytes @ 0x4
  1078                           
  1079  0074                     ___ftpack@sign:	
  1080                           ; 1 bytes @ 0x4
  1081                           
  1082  0074                     I2C_Master_Read@temp:	
  1083                           ; 1 bytes @ 0x4
  1084                           
  1085  0074                     ___wmul@product:	
  1086                           ; 2 bytes @ 0x4
  1087                           
  1088  0074                     ___lldiv@dividend:	
  1089                           ; 2 bytes @ 0x4
  1090                           
  1091  0074                     ___aldiv@dividend:	
  1092                           ; 4 bytes @ 0x4
  1093                           
  1094  0074                     ___llmod@dividend:	
  1095                           ; 4 bytes @ 0x4
  1096                           
  1097                           
  1098                           ; 4 bytes @ 0x4
  1099  0074                     	ds	1
  1100  0075                     ??___ftpack:
  1101  0075                     ___awmod@counter:	
  1102                           ; 1 bytes @ 0x5
  1103                           
  1104  0075                     ___lwmod@counter:	
  1105                           ; 1 bytes @ 0x5
  1106                           
  1107                           
  1108                           ; 1 bytes @ 0x5
  1109  0075                     	ds	1
  1110  0076                     ??__tdiv_to_l_:
  1111  0076                     ??__div_to_l_:	
  1112                           ; 1 bytes @ 0x6
  1113                           
  1114  0076                     ??___ftge:	
  1115                           ; 1 bytes @ 0x6
  1116                           
  1117  0076                     ?___lwdiv:	
  1118                           ; 1 bytes @ 0x6
  1119                           
  1120  0076                     ?_aht_readSensor:	
  1121                           ; 2 bytes @ 0x6
  1122                           
  1123  0076                     ___awmod@sign:	
  1124                           ; 4 bytes @ 0x6
  1125                           
  1126  0076                     aht_readSensor@GetDataCmd:	
  1127                           ; 1 bytes @ 0x6
  1128                           
  1129  0076                     ___lwdiv@divisor:	
  1130                           ; 2 bytes @ 0x6
  1131                           
  1132                           
  1133                           ; 2 bytes @ 0x6
  1134  0076                     	ds	1
  1135  0077                     ?___awdiv:
  1136  0077                     ___awdiv@divisor:	
  1137                           ; 2 bytes @ 0x7
  1138                           
  1139                           
  1140                           ; 2 bytes @ 0x7
  1141  0077                     	ds	1
  1142  0078                     ??___lldiv:
  1143  0078                     ??___aldiv:	
  1144                           ; 1 bytes @ 0x8
  1145                           
  1146  0078                     ??___llmod:	
  1147                           ; 1 bytes @ 0x8
  1148                           
  1149  0078                     ___lwdiv@dividend:	
  1150                           ; 1 bytes @ 0x8
  1151                           
  1152                           
  1153                           ; 2 bytes @ 0x8
  1154  0078                     	ds	1
  1155  0079                     ___llmod@counter:
  1156  0079                     uartRC_init@n:	
  1157                           ; 1 bytes @ 0x9
  1158                           
  1159  0079                     ___awdiv@dividend:	
  1160                           ; 2 bytes @ 0x9
  1161                           
  1162  0079                     ___lldiv@quotient:	
  1163                           ; 2 bytes @ 0x9
  1164                           
  1165                           
  1166                           ; 4 bytes @ 0x9
  1167  0079                     	ds	1
  1168  007A                     ??___lwdiv:
  1169  007A                     ?___lltoft:	
  1170                           ; 1 bytes @ 0xA
  1171                           
  1172  007A                     ___lltoft@c:	
  1173                           ; 3 bytes @ 0xA
  1174                           
  1175                           
  1176                           ; 4 bytes @ 0xA
  1177  007A                     	ds	1
  1178  007B                     ??___awdiv:
  1179  007B                     ___lwdiv@quotient:	
  1180                           ; 1 bytes @ 0xB
  1181                           
  1182                           
  1183                           ; 2 bytes @ 0xB
  1184  007B                     	ds	2
  1185  007D                     ___lldiv@counter:
  1186  007D                     ___lwdiv@counter:	
  1187                           ; 1 bytes @ 0xD
  1188                           
  1189                           
  1190                           ; 1 bytes @ 0xD
  1191  007D                     	ds	1
  1192  007E                     ??_aht_GetTemperature:
  1193  007E                     ??___ftsub:	
  1194                           ; 1 bytes @ 0xE
  1195                           
  1196                           
  1197                           	psect	cstackBANK0
  1198  0020                     __pcstackBANK0:	
  1199                           ; 1 bytes @ 0xE
  1200                           
  1201  0020                     ?_I2C_Master_Init:
  1202  0020                     ??_aht_readSensor:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0020                     ___aldiv@counter:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0020                     ___awdiv@counter:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0020                     I2C_Master_Init@c:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214  0020                     __div_to_l_@quot:	
  1215                           ; 4 bytes @ 0x0
  1216                           
  1217  0020                     __tdiv_to_l_@quot:	
  1218                           ; 4 bytes @ 0x0
  1219                           
  1220                           
  1221                           ; 4 bytes @ 0x0
  1222  0020                     	ds	1
  1223  0021                     ___aldiv@sign:
  1224  0021                     ___awdiv@sign:	
  1225                           ; 1 bytes @ 0x1
  1226                           
  1227                           
  1228                           ; 1 bytes @ 0x1
  1229  0021                     	ds	1
  1230  0022                     ___awdiv@quotient:
  1231  0022                     ___aldiv@quotient:	
  1232                           ; 2 bytes @ 0x2
  1233                           
  1234                           
  1235                           ; 4 bytes @ 0x2
  1236  0022                     	ds	2
  1237  0024                     ??_I2C_Master_Init:
  1238  0024                     ?___bmul:	
  1239                           ; 1 bytes @ 0x4
  1240                           
  1241  0024                     ___bmul@multiplicand:	
  1242                           ; 1 bytes @ 0x4
  1243                           
  1244  0024                     __div_to_l_@cntr:	
  1245                           ; 1 bytes @ 0x4
  1246                           
  1247  0024                     __tdiv_to_l_@cntr:	
  1248                           ; 1 bytes @ 0x4
  1249                           
  1250                           
  1251                           ; 1 bytes @ 0x4
  1252  0024                     	ds	1
  1253  0025                     ??___bmul:
  1254  0025                     __div_to_l_@exp1:	
  1255                           ; 1 bytes @ 0x5
  1256                           
  1257  0025                     __tdiv_to_l_@exp1:	
  1258                           ; 1 bytes @ 0x5
  1259                           
  1260                           
  1261                           ; 1 bytes @ 0x5
  1262  0025                     	ds	1
  1263  0026                     ?_uartRC_init:
  1264  0026                     ___bmul@product:	
  1265                           ; 1 bytes @ 0x6
  1266                           
  1267  0026                     uartRC_init@baudrate:	
  1268                           ; 1 bytes @ 0x6
  1269                           
  1270                           
  1271                           ; 2 bytes @ 0x6
  1272  0026                     	ds	1
  1273  0027                     ___bmul@multiplier:
  1274                           
  1275                           ; 1 bytes @ 0x7
  1276  0027                     	ds	1
  1277  0028                     ??_uartRC_init:
  1278  0028                     ?___ftmul:	
  1279                           ; 1 bytes @ 0x8
  1280                           
  1281  0028                     ___ftmul@f1:	
  1282                           ; 3 bytes @ 0x8
  1283                           
  1284                           
  1285                           ; 3 bytes @ 0x8
  1286  0028                     	ds	3
  1287  002B                     ___ftmul@f2:
  1288                           
  1289                           ; 3 bytes @ 0xB
  1290  002B                     	ds	1
  1291  002C                     aht_readSensor@temp:
  1292                           
  1293                           ; 24 bytes @ 0xC
  1294  002C                     	ds	2
  1295  002E                     ??___ftmul:
  1296                           
  1297                           ; 1 bytes @ 0xE
  1298  002E                     	ds	4
  1299  0032                     ___ftmul@exp:
  1300                           
  1301                           ; 1 bytes @ 0x12
  1302  0032                     	ds	1
  1303  0033                     ___ftmul@f3_as_product:
  1304                           
  1305                           ; 3 bytes @ 0x13
  1306  0033                     	ds	3
  1307  0036                     ___ftmul@cntr:
  1308                           
  1309                           ; 1 bytes @ 0x16
  1310  0036                     	ds	1
  1311  0037                     ___ftmul@sign:
  1312                           
  1313                           ; 1 bytes @ 0x17
  1314  0037                     	ds	1
  1315  0038                     ?_fround:
  1316  0038                     ?_scale:	
  1317                           ; 3 bytes @ 0x18
  1318                           
  1319  0038                     ?___ftdiv:	
  1320                           ; 3 bytes @ 0x18
  1321                           
  1322  0038                     ___ftdiv@f2:	
  1323                           ; 3 bytes @ 0x18
  1324                           
  1325                           
  1326                           ; 3 bytes @ 0x18
  1327  0038                     	ds	3
  1328  003B                     ??_fround:
  1329  003B                     ??_scale:	
  1330                           ; 1 bytes @ 0x1B
  1331                           
  1332  003B                     ___ftdiv@f1:	
  1333                           ; 1 bytes @ 0x1B
  1334                           
  1335                           
  1336                           ; 3 bytes @ 0x1B
  1337  003B                     	ds	2
  1338  003D                     _scale$1069:
  1339                           
  1340                           ; 3 bytes @ 0x1D
  1341  003D                     	ds	1
  1342  003E                     ??___ftdiv:
  1343                           
  1344                           ; 1 bytes @ 0x1E
  1345  003E                     	ds	2
  1346  0040                     scale@scl:
  1347                           
  1348                           ; 1 bytes @ 0x20
  1349  0040                     	ds	1
  1350  0041                     ?___fttol:
  1351  0041                     ___fttol@f1:	
  1352                           ; 4 bytes @ 0x21
  1353                           
  1354  0041                     _fround$1068:	
  1355                           ; 3 bytes @ 0x21
  1356                           
  1357                           
  1358                           ; 3 bytes @ 0x21
  1359  0041                     	ds	1
  1360  0042                     ___ftdiv@cntr:
  1361                           
  1362                           ; 1 bytes @ 0x22
  1363  0042                     	ds	1
  1364  0043                     ___ftdiv@f3:
  1365                           
  1366                           ; 3 bytes @ 0x23
  1367  0043                     	ds	1
  1368  0044                     _fround$1067:
  1369  0044                     aht_readSensor@result:	
  1370                           ; 3 bytes @ 0x24
  1371                           
  1372                           
  1373                           ; 4 bytes @ 0x24
  1374  0044                     	ds	1
  1375  0045                     ??___fttol:
  1376                           
  1377                           ; 1 bytes @ 0x25
  1378  0045                     	ds	1
  1379  0046                     ___ftdiv@exp:
  1380                           
  1381                           ; 1 bytes @ 0x26
  1382  0046                     	ds	1
  1383  0047                     fround@prec:
  1384  0047                     ___ftdiv@sign:	
  1385                           ; 1 bytes @ 0x27
  1386                           
  1387                           
  1388                           ; 1 bytes @ 0x27
  1389  0047                     	ds	1
  1390  0048                     ?___ftadd:
  1391  0048                     aht_readSensor@i:	
  1392                           ; 3 bytes @ 0x28
  1393                           
  1394  0048                     ___ftadd@f1:	
  1395                           ; 1 bytes @ 0x28
  1396                           
  1397                           
  1398                           ; 3 bytes @ 0x28
  1399  0048                     	ds	1
  1400  0049                     ??___lltoft:
  1401  0049                     ___fttol@sign1:	
  1402                           ; 1 bytes @ 0x29
  1403                           
  1404                           
  1405                           ; 1 bytes @ 0x29
  1406  0049                     	ds	1
  1407  004A                     ___lltoft@exp:
  1408  004A                     ___fttol@lval:	
  1409                           ; 1 bytes @ 0x2A
  1410                           
  1411                           
  1412                           ; 4 bytes @ 0x2A
  1413  004A                     	ds	1
  1414  004B                     ___ftadd@f2:
  1415                           
  1416                           ; 3 bytes @ 0x2B
  1417  004B                     	ds	3
  1418  004E                     ??___ftadd:
  1419  004E                     ___fttol@exp1:	
  1420                           ; 1 bytes @ 0x2E
  1421                           
  1422                           
  1423                           ; 1 bytes @ 0x2E
  1424  004E                     	ds	4
  1425  0052                     ___ftadd@sign:
  1426                           
  1427                           ; 1 bytes @ 0x32
  1428  0052                     	ds	1
  1429  0053                     ___ftadd@exp2:
  1430                           
  1431                           ; 1 bytes @ 0x33
  1432  0053                     	ds	1
  1433  0054                     ___ftadd@exp1:
  1434                           
  1435                           ; 1 bytes @ 0x34
  1436  0054                     	ds	1
  1437  0055                     ?_aht_GetTemperature:
  1438  0055                     ?___ftsub:	
  1439                           ; 3 bytes @ 0x35
  1440                           
  1441  0055                     ___ftsub@f2:	
  1442                           ; 3 bytes @ 0x35
  1443                           
  1444                           
  1445                           ; 3 bytes @ 0x35
  1446  0055                     	ds	3
  1447  0058                     aht_GetTemperature@value:
  1448  0058                     ___ftsub@f1:	
  1449                           ; 3 bytes @ 0x38
  1450                           
  1451                           
  1452                           ; 3 bytes @ 0x38
  1453  0058                     	ds	3
  1454  005B                     ?_sprintf:
  1455  005B                     sprintf@f:	
  1456                           ; 2 bytes @ 0x3B
  1457                           
  1458                           
  1459                           ; 1 bytes @ 0x3B
  1460  005B                     	ds	4
  1461  005F                     ??_sprintf:
  1462                           
  1463                           ; 1 bytes @ 0x3F
  1464  005F                     	ds	6
  1465  0065                     ??_main:
  1466                           
  1467                           ; 1 bytes @ 0x45
  1468  0065                     	ds	2
  1469                           
  1470                           	psect	maintext
  1471  1404                     __pmaintext:	
  1472 ;;
  1473 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1474 ;;
  1475 ;; *************** function _main *****************
  1476 ;; Defined at:
  1477 ;;		line 56 in file "pic16f.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;		None
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : B00/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1491 ;;      Params:         0       0       0       0       0
  1492 ;;      Locals:         0       0       0       0       0
  1493 ;;      Temps:          0       2       0       0       0
  1494 ;;      Totals:         0       2       0       0       0
  1495 ;;Total ram usage:        2 bytes
  1496 ;; Hardware stack levels required when called:    4
  1497 ;; This function calls:
  1498 ;;		_I2C_Master_Init
  1499 ;;		_I2C_Master_Start
  1500 ;;		_I2C_Master_Write
  1501 ;;		_aht_GetTemperature
  1502 ;;		_configIO
  1503 ;;		_sprintf
  1504 ;;		_uartRC_Read
  1505 ;;		_uartRC_init
  1506 ;;		_uartTX_Write
  1507 ;;		_uartTX_Write_Str
  1508 ;; This function is called by:
  1509 ;;		Startup code after reset
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           
  1514                           ;psect for function _main
  1515  1404                     _main:
  1516  1404                     l3211:	
  1517                           ;incstack = 0
  1518                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1519                           
  1520                           
  1521                           ;pic16f.c: 57:     configIO();
  1522  1404  160A  158A  2604  160A  118A  	fcall	_configIO
  1523  1409                     l3213:
  1524                           
  1525                           ;pic16f.c: 58:     uartRC_init(9600);
  1526  1409  3080               	movlw	128
  1527  140A  1283               	bcf	3,5	;RP0=0, select bank0
  1528  140B  1303               	bcf	3,6	;RP1=0, select bank0
  1529  140C  00A6               	movwf	uartRC_init@baudrate
  1530  140D  3025               	movlw	37
  1531  140E  00A7               	movwf	uartRC_init@baudrate+1
  1532  140F  160A  118A  262F  160A  118A  	fcall	_uartRC_init
  1533  1414                     l3215:
  1534                           
  1535                           ;pic16f.c: 59:     I2C_Master_Init(100000);
  1536  1414  3000               	movlw	0
  1537  1415  1283               	bcf	3,5	;RP0=0, select bank0
  1538  1416  1303               	bcf	3,6	;RP1=0, select bank0
  1539  1417  00A3               	movwf	I2C_Master_Init@c+3
  1540  1418  3001               	movlw	1
  1541  1419  00A2               	movwf	I2C_Master_Init@c+2
  1542  141A  3086               	movlw	134
  1543  141B  00A1               	movwf	I2C_Master_Init@c+1
  1544  141C  30A0               	movlw	160
  1545  141D  00A0               	movwf	I2C_Master_Init@c
  1546  141E  160A  158A  26F8  160A  118A  	fcall	_I2C_Master_Init
  1547  1423                     l3217:
  1548                           
  1549                           ;pic16f.c: 63:        I2C_Master_Start();
  1550  1423  160A  158A  25A9  160A  118A  	fcall	_I2C_Master_Start
  1551  1428                     l3219:
  1552                           
  1553                           ;pic16f.c: 64:         I2C_Master_Write(0x39);
  1554  1428  3039               	movlw	57
  1555  1429  00F0               	movwf	I2C_Master_Write@d
  1556  142A  3000               	movlw	0
  1557  142B  00F1               	movwf	I2C_Master_Write@d+1
  1558  142C  160A  158A  25B2  160A  118A  	fcall	_I2C_Master_Write
  1559  1431                     l3221:
  1560                           
  1561                           ;pic16f.c: 65:        _delay((unsigned long)((10)*(4000000/4000.0)));
  1562  1431  300D               	movlw	13
  1563  1432  1283               	bcf	3,5	;RP0=0, select bank0
  1564  1433  1303               	bcf	3,6	;RP1=0, select bank0
  1565  1434  00E6               	movwf	??_main+1
  1566  1435  30FB               	movlw	251
  1567  1436  00E5               	movwf	??_main
  1568  1437                     u4877:
  1569  1437  0BE5               	decfsz	??_main,f
  1570  1438  2C37               	goto	u4877
  1571  1439  0BE6               	decfsz	??_main+1,f
  1572  143A  2C37               	goto	u4877
  1573  143B                     l3223:
  1574                           
  1575                           ;pic16f.c: 66:         tempera1 = aht_GetTemperature();
  1576  143B  160A  118A  2133  160A  118A  	fcall	_aht_GetTemperature
  1577  1440  1283               	bcf	3,5	;RP0=0, select bank0
  1578  1441  1303               	bcf	3,6	;RP1=0, select bank0
  1579  1442  0855               	movf	?_aht_GetTemperature,w
  1580  1443  00E7               	movwf	_tempera1
  1581  1444  0856               	movf	?_aht_GetTemperature+1,w
  1582  1445  00E8               	movwf	_tempera1+1
  1583  1446  0857               	movf	?_aht_GetTemperature+2,w
  1584  1447  00E9               	movwf	_tempera1+2
  1585  1448                     l3225:
  1586                           
  1587                           ;pic16f.c: 68:        uartTX_Write_Str("T1   H1   \n");
  1588  1448  3086               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1589  1449  160A  158A  2674  160A  118A  	fcall	_uartTX_Write_Str
  1590  144E                     l3227:
  1591                           
  1592                           ;pic16f.c: 69:        sprintf(datos, "%2.1f   %2.1f ", tempera1);
  1593  144E  3077               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1594  144F  1283               	bcf	3,5	;RP0=0, select bank0
  1595  1450  1303               	bcf	3,6	;RP1=0, select bank0
  1596  1451  00E5               	movwf	??_main
  1597  1452  0865               	movf	??_main,w
  1598  1453  00DB               	movwf	sprintf@f
  1599  1454  0867               	movf	_tempera1,w
  1600  1455  00DC               	movwf	?_sprintf+1
  1601  1456  0868               	movf	_tempera1+1,w
  1602  1457  00DD               	movwf	?_sprintf+2
  1603  1458  0869               	movf	_tempera1+2,w
  1604  1459  00DE               	movwf	?_sprintf+3
  1605  145A  30BB               	movlw	(low (_datos| 0))& (0+255)
  1606  145B  120A  158A  2530  160A  118A  	fcall	_sprintf
  1607  1460                     l3229:
  1608                           
  1609                           ;pic16f.c: 70:       uartTX_Write(datos);
  1610  1460  30BB               	movlw	(low _datos)& (0+255)
  1611  1461  160A  158A  25F2  160A  118A  	fcall	_uartTX_Write
  1612  1466                     l3231:
  1613                           
  1614                           ;pic16f.c: 71:       uartTX_Write(13);
  1615  1466  300D               	movlw	13
  1616  1467  160A  158A  25F2  160A  118A  	fcall	_uartTX_Write
  1617  146C                     l3233:
  1618                           
  1619                           ;pic16f.c: 72:       uartTX_Write(10);
  1620  146C  300A               	movlw	10
  1621  146D  160A  158A  25F2  160A  118A  	fcall	_uartTX_Write
  1622  1472                     l3235:
  1623                           
  1624                           ;pic16f.c: 73:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1625  1472  300D               	movlw	13
  1626  1473  1283               	bcf	3,5	;RP0=0, select bank0
  1627  1474  1303               	bcf	3,6	;RP1=0, select bank0
  1628  1475  00E6               	movwf	??_main+1
  1629  1476  30FB               	movlw	251
  1630  1477  00E5               	movwf	??_main
  1631  1478                     u4887:
  1632  1478  0BE5               	decfsz	??_main,f
  1633  1479  2C78               	goto	u4887
  1634  147A  0BE6               	decfsz	??_main+1,f
  1635  147B  2C78               	goto	u4887
  1636  147C                     l3237:
  1637                           
  1638                           ;pic16f.c: 74:         caso=uartRC_Read();
  1639  147C  120A  158A  2000  160A  118A  	fcall	_uartRC_Read
  1640  1481  1283               	bcf	3,5	;RP0=0, select bank0
  1641  1482  1303               	bcf	3,6	;RP1=0, select bank0
  1642  1483  00E5               	movwf	??_main
  1643  1484  01E6               	clrf	??_main+1
  1644  1485  0865               	movf	??_main,w
  1645  1486  00EA               	movwf	_caso
  1646  1487  0866               	movf	??_main+1,w
  1647  1488  00EB               	movwf	_caso+1
  1648  1489                     l3239:
  1649                           
  1650                           ;pic16f.c: 75:         if (caso == 1){
  1651  1489  036A               	decf	_caso,w
  1652  148A  046B               	iorwf	_caso+1,w
  1653  148B  1D03               	btfss	3,2
  1654  148C  2C8E               	goto	u4821
  1655  148D  2C8F               	goto	u4820
  1656  148E                     u4821:
  1657  148E  2C91               	goto	l3243
  1658  148F                     u4820:
  1659  148F                     l3241:
  1660                           
  1661                           ;pic16f.c: 76:             PORTDbits.RD0=1;
  1662  148F  1408               	bsf	8,0	;volatile
  1663                           
  1664                           ;pic16f.c: 77:         }else if (caso == 2){
  1665  1490  2C23               	goto	l3217
  1666  1491                     l3243:
  1667  1491  3002               	movlw	2
  1668  1492  066A               	xorwf	_caso,w
  1669  1493  046B               	iorwf	_caso+1,w
  1670  1494  1D03               	btfss	3,2
  1671  1495  2C97               	goto	u4831
  1672  1496  2C98               	goto	u4830
  1673  1497                     u4831:
  1674  1497  2C9A               	goto	l3247
  1675  1498                     u4830:
  1676  1498                     l3245:
  1677                           
  1678                           ;pic16f.c: 78:             PORTDbits.RD1 =1;
  1679  1498  1488               	bsf	8,1	;volatile
  1680                           
  1681                           ;pic16f.c: 79:         }else if (caso == 3){
  1682  1499  2C23               	goto	l3217
  1683  149A                     l3247:
  1684  149A  3003               	movlw	3
  1685  149B  066A               	xorwf	_caso,w
  1686  149C  046B               	iorwf	_caso+1,w
  1687  149D  1D03               	btfss	3,2
  1688  149E  2CA0               	goto	u4841
  1689  149F  2CA1               	goto	u4840
  1690  14A0                     u4841:
  1691  14A0  2CA3               	goto	l3251
  1692  14A1                     u4840:
  1693  14A1                     l3249:
  1694                           
  1695                           ;pic16f.c: 80:             PORTDbits.RD0 =0;
  1696  14A1  1008               	bcf	8,0	;volatile
  1697                           
  1698                           ;pic16f.c: 81:         }else if (caso == 4){
  1699  14A2  2C23               	goto	l3217
  1700  14A3                     l3251:
  1701  14A3  3004               	movlw	4
  1702  14A4  066A               	xorwf	_caso,w
  1703  14A5  046B               	iorwf	_caso+1,w
  1704  14A6  1D03               	btfss	3,2
  1705  14A7  2CA9               	goto	u4851
  1706  14A8  2CAA               	goto	u4850
  1707  14A9                     u4851:
  1708  14A9  2CAC               	goto	l56
  1709  14AA                     u4850:
  1710  14AA                     l3253:
  1711                           
  1712                           ;pic16f.c: 82:             PORTDbits.RD1 = 0;
  1713  14AA  1088               	bcf	8,1	;volatile
  1714  14AB  2C23               	goto	l3217
  1715  14AC                     l56:
  1716  14AC  2C23               	goto	l3217
  1717  14AD  120A  118A  2800   	ljmp	start
  1718  14B0                     __end_of_main:
  1719                           
  1720                           	psect	text1
  1721  1E74                     __ptext1:	
  1722 ;; *************** function _uartTX_Write_Str *****************
  1723 ;; Defined at:
  1724 ;;		line 43 in file "USART.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  string          1    wreg     PTR unsigned char 
  1727 ;;		 -> STR_1(12), 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  string          1    4[COMMON] PTR unsigned char 
  1730 ;;		 -> STR_1(12), 
  1731 ;;  n               2    2[COMMON] int 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1741 ;;      Params:         0       0       0       0       0
  1742 ;;      Locals:         3       0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0
  1744 ;;      Totals:         3       0       0       0       0
  1745 ;;Total ram usage:        3 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    1
  1748 ;; This function calls:
  1749 ;;		_uartTX_Write
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           
  1756                           ;psect for function _uartTX_Write_Str
  1757  1E74                     _uartTX_Write_Str:
  1758                           
  1759                           ;incstack = 0
  1760                           ; Regs used in _uartTX_Write_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1761                           ;uartTX_Write_Str@string stored from wreg
  1762  1E74  00F4               	movwf	uartTX_Write_Str@string
  1763  1E75                     l2941:
  1764                           
  1765                           ;USART.c: 44:     int n;;USART.c: 45:     for (n=0; string[n] != '\n'; n++){
  1766  1E75  01F2               	clrf	uartTX_Write_Str@n
  1767  1E76  01F3               	clrf	uartTX_Write_Str@n+1
  1768  1E77  2E8B               	goto	l2947
  1769  1E78                     l2943:
  1770                           
  1771                           ;USART.c: 46:         uartTX_Write(string[n]);
  1772  1E78  0872               	movf	uartTX_Write_Str@n,w
  1773  1E79  0774               	addwf	uartTX_Write_Str@string,w
  1774  1E7A  0084               	movwf	4
  1775  1E7B  160A  118A  2000  160A  158A  	fcall	stringdir
  1776  1E80  160A  158A  25F2  160A  158A  	fcall	_uartTX_Write
  1777  1E85                     l2945:
  1778                           
  1779                           ;USART.c: 47:     }
  1780  1E85  3001               	movlw	1
  1781  1E86  07F2               	addwf	uartTX_Write_Str@n,f
  1782  1E87  1803               	skipnc
  1783  1E88  0AF3               	incf	uartTX_Write_Str@n+1,f
  1784  1E89  3000               	movlw	0
  1785  1E8A  07F3               	addwf	uartTX_Write_Str@n+1,f
  1786  1E8B                     l2947:
  1787  1E8B  0872               	movf	uartTX_Write_Str@n,w
  1788  1E8C  0774               	addwf	uartTX_Write_Str@string,w
  1789  1E8D  0084               	movwf	4
  1790  1E8E  160A  118A  2000  160A  158A  	fcall	stringdir
  1791  1E93  3A0A               	xorlw	10
  1792  1E94  1D03               	skipz
  1793  1E95  2E97               	goto	u4331
  1794  1E96  2E98               	goto	u4330
  1795  1E97                     u4331:
  1796  1E97  2E78               	goto	l2943
  1797  1E98                     u4330:
  1798  1E98                     l211:
  1799  1E98  0008               	return
  1800  1E99                     __end_of_uartTX_Write_Str:
  1801                           
  1802                           	psect	text2
  1803  1DF2                     __ptext2:	
  1804 ;; *************** function _uartTX_Write *****************
  1805 ;; Defined at:
  1806 ;;		line 36 in file "USART.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  dato            1    wreg     unsigned char 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  dato            1    1[COMMON] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1820 ;;      Params:         0       0       0       0       0
  1821 ;;      Locals:         1       0       0       0       0
  1822 ;;      Temps:          1       0       0       0       0
  1823 ;;      Totals:         2       0       0       0       0
  1824 ;;Total ram usage:        2 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;;		_uartTX_Write_Str
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           
  1835                           ;psect for function _uartTX_Write
  1836  1DF2                     _uartTX_Write:
  1837                           
  1838                           ;incstack = 0
  1839                           ; Regs used in _uartTX_Write: [wreg]
  1840                           ;uartTX_Write@dato stored from wreg
  1841  1DF2  00F1               	movwf	uartTX_Write@dato
  1842  1DF3                     l2455:
  1843                           
  1844                           ;USART.c: 37:         TXREG = dato;
  1845  1DF3  0871               	movf	uartTX_Write@dato,w
  1846  1DF4  1283               	bcf	3,5	;RP0=0, select bank0
  1847  1DF5  1303               	bcf	3,6	;RP1=0, select bank0
  1848  1DF6  0099               	movwf	25	;volatile
  1849                           
  1850                           ;USART.c: 38:         while(TXSTAbits.TRMT == 0){
  1851  1DF7  2DFD               	goto	l2459
  1852  1DF8                     l2457:
  1853                           
  1854                           ;USART.c: 39:             _delay((unsigned long)((500)*(4000000/4000000.0)));
  1855  1DF8  30A6               	movlw	166
  1856  1DF9  00F0               	movwf	??_uartTX_Write
  1857  1DFA                     u4897:
  1858  1DFA  0BF0               	decfsz	??_uartTX_Write,f
  1859  1DFB  2DFA               	goto	u4897
  1860  1DFC  0000               	nop
  1861  1DFD                     l2459:
  1862                           
  1863                           ;USART.c: 38:         while(TXSTAbits.TRMT == 0){
  1864  1DFD  1683               	bsf	3,5	;RP0=1, select bank1
  1865  1DFE  1303               	bcf	3,6	;RP1=0, select bank1
  1866  1DFF  1C98               	btfss	24,1	;volatile
  1867  1E00  2E02               	goto	u3311
  1868  1E01  2E03               	goto	u3310
  1869  1E02                     u3311:
  1870  1E02  2DF8               	goto	l2457
  1871  1E03                     u3310:
  1872  1E03                     l205:
  1873  1E03  0008               	return
  1874  1E04                     __end_of_uartTX_Write:
  1875                           
  1876                           	psect	text3
  1877  162F                     __ptext3:	
  1878 ;; *************** function _uartRC_init *****************
  1879 ;; Defined at:
  1880 ;;		line 13 in file "USART.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  baudrate        2    6[BANK0 ] unsigned int 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  n               2    9[COMMON] unsigned int 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      unsigned char 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         0       2       0       0       0
  1895 ;;      Locals:         2       0       0       0       0
  1896 ;;      Temps:          0      12       0       0       0
  1897 ;;      Totals:         2      14       0       0       0
  1898 ;;Total ram usage:       16 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    1
  1901 ;; This function calls:
  1902 ;;		___aldiv
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           
  1909                           ;psect for function _uartRC_init
  1910  162F                     _uartRC_init:
  1911  162F                     l2901:	
  1912                           ;incstack = 0
  1913                           ; Regs used in _uartRC_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1914                           
  1915                           
  1916                           ;USART.c: 14:     uint16_t n;;USART.c: 15:     n = (4000000 - baudrate*64)/(baudrate*64)
      +                          ;
  1917  162F  1283               	bcf	3,5	;RP0=0, select bank0
  1918  1630  1303               	bcf	3,6	;RP1=0, select bank0
  1919  1631  0827               	movf	uartRC_init@baudrate+1,w
  1920  1632  00A9               	movwf	??_uartRC_init+1
  1921  1633  0826               	movf	uartRC_init@baudrate,w
  1922  1634  00A8               	movwf	??_uartRC_init
  1923  1635  3006               	movlw	6
  1924  1636  00FF               	movwf	btemp+1
  1925  1637                     u4265:
  1926  1637  1003               	clrc
  1927  1638  0DA8               	rlf	??_uartRC_init,f
  1928  1639  0DA9               	rlf	??_uartRC_init+1,f
  1929  163A  0BFF               	decfsz	btemp+1,f
  1930  163B  2E37               	goto	u4265
  1931  163C  0828               	movf	??_uartRC_init,w
  1932  163D  00F0               	movwf	___aldiv@divisor
  1933  163E  0829               	movf	??_uartRC_init+1,w
  1934  163F  00F1               	movwf	___aldiv@divisor+1
  1935  1640  01F2               	clrf	___aldiv@divisor+2
  1936  1641  01F3               	clrf	___aldiv@divisor+3
  1937  1642  0827               	movf	uartRC_init@baudrate+1,w
  1938  1643  00AB               	movwf	??_uartRC_init+3
  1939  1644  0826               	movf	uartRC_init@baudrate,w
  1940  1645  00AA               	movwf	??_uartRC_init+2
  1941  1646  3006               	movlw	6
  1942  1647  00FF               	movwf	btemp+1
  1943  1648                     u4275:
  1944  1648  1003               	clrc
  1945  1649  0DAA               	rlf	??_uartRC_init+2,f
  1946  164A  0DAB               	rlf	??_uartRC_init+3,f
  1947  164B  0BFF               	decfsz	btemp+1,f
  1948  164C  2E48               	goto	u4275
  1949  164D  082A               	movf	??_uartRC_init+2,w
  1950  164E  00AC               	movwf	??_uartRC_init+4
  1951  164F  082B               	movf	??_uartRC_init+3,w
  1952  1650  00AD               	movwf	??_uartRC_init+5
  1953  1651  01AE               	clrf	??_uartRC_init+6
  1954  1652  01AF               	clrf	??_uartRC_init+7
  1955  1653  3000               	movlw	0
  1956  1654  00B0               	movwf	??_uartRC_init+8
  1957  1655  3009               	movlw	9
  1958  1656  00B1               	movwf	??_uartRC_init+9
  1959  1657  303D               	movlw	61
  1960  1658  00B2               	movwf	??_uartRC_init+10
  1961  1659  3000               	movlw	0
  1962  165A  00B3               	movwf	??_uartRC_init+11
  1963  165B  082C               	movf	??_uartRC_init+4,w
  1964  165C  02B0               	subwf	??_uartRC_init+8,f
  1965  165D  082D               	movf	??_uartRC_init+5,w
  1966  165E  1C03               	skipc
  1967  165F  0F2D               	incfsz	??_uartRC_init+5,w
  1968  1660  2E62               	goto	u4281
  1969  1661  2E63               	goto	u4282
  1970  1662                     u4281:
  1971  1662  02B1               	subwf	??_uartRC_init+9,f
  1972  1663                     u4282:
  1973  1663  082E               	movf	??_uartRC_init+6,w
  1974  1664  1C03               	skipc
  1975  1665  0F2E               	incfsz	??_uartRC_init+6,w
  1976  1666  2E68               	goto	u4283
  1977  1667  2E69               	goto	u4284
  1978  1668                     u4283:
  1979  1668  02B2               	subwf	??_uartRC_init+10,f
  1980  1669                     u4284:
  1981  1669  082F               	movf	??_uartRC_init+7,w
  1982  166A  1C03               	skipc
  1983  166B  0F2F               	incfsz	??_uartRC_init+7,w
  1984  166C  2E6E               	goto	u4285
  1985  166D  2E6F               	goto	u4286
  1986  166E                     u4285:
  1987  166E  02B3               	subwf	??_uartRC_init+11,f
  1988  166F                     u4286:
  1989  166F  0833               	movf	??_uartRC_init+11,w
  1990  1670  00F7               	movwf	___aldiv@dividend+3
  1991  1671  0832               	movf	??_uartRC_init+10,w
  1992  1672  00F6               	movwf	___aldiv@dividend+2
  1993  1673  0831               	movf	??_uartRC_init+9,w
  1994  1674  00F5               	movwf	___aldiv@dividend+1
  1995  1675  0830               	movf	??_uartRC_init+8,w
  1996  1676  00F4               	movwf	___aldiv@dividend
  1997  1677  160A  118A  2367  160A  118A  	fcall	___aldiv
  1998  167C  0871               	movf	?___aldiv+1,w
  1999  167D  00FA               	movwf	uartRC_init@n+1
  2000  167E  0870               	movf	?___aldiv,w
  2001  167F  00F9               	movwf	uartRC_init@n
  2002  1680                     l2903:
  2003                           
  2004                           ;USART.c: 16:     if (n > 255){
  2005  1680  3001               	movlw	1
  2006  1681  027A               	subwf	uartRC_init@n+1,w
  2007  1682  3000               	movlw	0
  2008  1683  1903               	skipnz
  2009  1684  0279               	subwf	uartRC_init@n,w
  2010  1685  1C03               	skipc
  2011  1686  2E88               	goto	u4291
  2012  1687  2E89               	goto	u4290
  2013  1688                     u4291:
  2014  1688  2EE1               	goto	l2909
  2015  1689                     u4290:
  2016  1689                     l2905:
  2017                           
  2018                           ;USART.c: 17:         n = (4000000 - baudrate*16)/(baudrate*16);
  2019  1689  1283               	bcf	3,5	;RP0=0, select bank0
  2020  168A  1303               	bcf	3,6	;RP1=0, select bank0
  2021  168B  0827               	movf	uartRC_init@baudrate+1,w
  2022  168C  00A9               	movwf	??_uartRC_init+1
  2023  168D  0826               	movf	uartRC_init@baudrate,w
  2024  168E  00A8               	movwf	??_uartRC_init
  2025  168F  0EA8               	swapf	??_uartRC_init,f
  2026  1690  0EA9               	swapf	??_uartRC_init+1,f
  2027  1691  30F0               	movlw	240
  2028  1692  05A9               	andwf	??_uartRC_init+1,f
  2029  1693  0828               	movf	??_uartRC_init,w
  2030  1694  390F               	andlw	15
  2031  1695  04A9               	iorwf	??_uartRC_init+1,f
  2032  1696  30F0               	movlw	240
  2033  1697  05A8               	andwf	??_uartRC_init,f
  2034  1698  0828               	movf	??_uartRC_init,w
  2035  1699  00F0               	movwf	___aldiv@divisor
  2036  169A  0829               	movf	??_uartRC_init+1,w
  2037  169B  00F1               	movwf	___aldiv@divisor+1
  2038  169C  01F2               	clrf	___aldiv@divisor+2
  2039  169D  01F3               	clrf	___aldiv@divisor+3
  2040  169E  0827               	movf	uartRC_init@baudrate+1,w
  2041  169F  00AB               	movwf	??_uartRC_init+3
  2042  16A0  0826               	movf	uartRC_init@baudrate,w
  2043  16A1  00AA               	movwf	??_uartRC_init+2
  2044  16A2  0EAA               	swapf	??_uartRC_init+2,f
  2045  16A3  0EAB               	swapf	??_uartRC_init+3,f
  2046  16A4  30F0               	movlw	240
  2047  16A5  05AB               	andwf	??_uartRC_init+3,f
  2048  16A6  082A               	movf	??_uartRC_init+2,w
  2049  16A7  390F               	andlw	15
  2050  16A8  04AB               	iorwf	??_uartRC_init+3,f
  2051  16A9  30F0               	movlw	240
  2052  16AA  05AA               	andwf	??_uartRC_init+2,f
  2053  16AB  082A               	movf	??_uartRC_init+2,w
  2054  16AC  00AC               	movwf	??_uartRC_init+4
  2055  16AD  082B               	movf	??_uartRC_init+3,w
  2056  16AE  00AD               	movwf	??_uartRC_init+5
  2057  16AF  01AE               	clrf	??_uartRC_init+6
  2058  16B0  01AF               	clrf	??_uartRC_init+7
  2059  16B1  3000               	movlw	0
  2060  16B2  00B0               	movwf	??_uartRC_init+8
  2061  16B3  3009               	movlw	9
  2062  16B4  00B1               	movwf	??_uartRC_init+9
  2063  16B5  303D               	movlw	61
  2064  16B6  00B2               	movwf	??_uartRC_init+10
  2065  16B7  3000               	movlw	0
  2066  16B8  00B3               	movwf	??_uartRC_init+11
  2067  16B9  082C               	movf	??_uartRC_init+4,w
  2068  16BA  02B0               	subwf	??_uartRC_init+8,f
  2069  16BB  082D               	movf	??_uartRC_init+5,w
  2070  16BC  1C03               	skipc
  2071  16BD  0F2D               	incfsz	??_uartRC_init+5,w
  2072  16BE  2EC0               	goto	u4301
  2073  16BF  2EC1               	goto	u4302
  2074  16C0                     u4301:
  2075  16C0  02B1               	subwf	??_uartRC_init+9,f
  2076  16C1                     u4302:
  2077  16C1  082E               	movf	??_uartRC_init+6,w
  2078  16C2  1C03               	skipc
  2079  16C3  0F2E               	incfsz	??_uartRC_init+6,w
  2080  16C4  2EC6               	goto	u4303
  2081  16C5  2EC7               	goto	u4304
  2082  16C6                     u4303:
  2083  16C6  02B2               	subwf	??_uartRC_init+10,f
  2084  16C7                     u4304:
  2085  16C7  082F               	movf	??_uartRC_init+7,w
  2086  16C8  1C03               	skipc
  2087  16C9  0F2F               	incfsz	??_uartRC_init+7,w
  2088  16CA  2ECC               	goto	u4305
  2089  16CB  2ECD               	goto	u4306
  2090  16CC                     u4305:
  2091  16CC  02B3               	subwf	??_uartRC_init+11,f
  2092  16CD                     u4306:
  2093  16CD  0833               	movf	??_uartRC_init+11,w
  2094  16CE  00F7               	movwf	___aldiv@dividend+3
  2095  16CF  0832               	movf	??_uartRC_init+10,w
  2096  16D0  00F6               	movwf	___aldiv@dividend+2
  2097  16D1  0831               	movf	??_uartRC_init+9,w
  2098  16D2  00F5               	movwf	___aldiv@dividend+1
  2099  16D3  0830               	movf	??_uartRC_init+8,w
  2100  16D4  00F4               	movwf	___aldiv@dividend
  2101  16D5  160A  118A  2367  160A  118A  	fcall	___aldiv
  2102  16DA  0871               	movf	?___aldiv+1,w
  2103  16DB  00FA               	movwf	uartRC_init@n+1
  2104  16DC  0870               	movf	?___aldiv,w
  2105  16DD  00F9               	movwf	uartRC_init@n
  2106  16DE                     l2907:
  2107                           
  2108                           ;USART.c: 18:         TXSTAbits.BRGH = 1;
  2109  16DE  1683               	bsf	3,5	;RP0=1, select bank1
  2110  16DF  1303               	bcf	3,6	;RP1=0, select bank1
  2111  16E0  1518               	bsf	24,2	;volatile
  2112  16E1                     l2909:
  2113                           
  2114                           ;USART.c: 20:     if (n < 256){
  2115  16E1  3001               	movlw	1
  2116  16E2  027A               	subwf	uartRC_init@n+1,w
  2117  16E3  3000               	movlw	0
  2118  16E4  1903               	skipnz
  2119  16E5  0279               	subwf	uartRC_init@n,w
  2120  16E6  1803               	skipnc
  2121  16E7  2EE9               	goto	u4311
  2122  16E8  2EEA               	goto	u4310
  2123  16E9                     u4311:
  2124  16E9  2EF6               	goto	l196
  2125  16EA                     u4310:
  2126  16EA                     l2911:
  2127                           
  2128                           ;USART.c: 21:         SPBRG = n;
  2129  16EA  0879               	movf	uartRC_init@n,w
  2130  16EB  1683               	bsf	3,5	;RP0=1, select bank1
  2131  16EC  1303               	bcf	3,6	;RP1=0, select bank1
  2132  16ED  0099               	movwf	25	;volatile
  2133  16EE                     l2913:
  2134                           
  2135                           ;USART.c: 22:         TXSTAbits.SYNC = 0;
  2136  16EE  1218               	bcf	24,4	;volatile
  2137  16EF                     l2915:
  2138                           
  2139                           ;USART.c: 23:         RCSTAbits.SPEN = 1;
  2140  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2141  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2142  16F1  1798               	bsf	24,7	;volatile
  2143  16F2                     l2917:
  2144                           
  2145                           ;USART.c: 24:         RCSTAbits.CREN = 1;
  2146  16F2  1618               	bsf	24,4	;volatile
  2147  16F3                     l2919:
  2148                           
  2149                           ;USART.c: 25:         TXSTAbits.TXEN = 1;
  2150  16F3  1683               	bsf	3,5	;RP0=1, select bank1
  2151  16F4  1303               	bcf	3,6	;RP1=0, select bank1
  2152  16F5  1698               	bsf	24,5	;volatile
  2153  16F6                     l196:
  2154  16F6  0008               	return
  2155  16F7                     __end_of_uartRC_init:
  2156                           
  2157                           	psect	text4
  2158  1367                     __ptext4:	
  2159 ;; *************** function ___aldiv *****************
  2160 ;; Defined at:
  2161 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\aldiv.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  divisor         4    0[COMMON] long 
  2164 ;;  dividend        4    4[COMMON] long 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  quotient        4    2[BANK0 ] long 
  2167 ;;  sign            1    1[BANK0 ] unsigned char 
  2168 ;;  counter         1    0[BANK0 ] unsigned char 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  4    0[COMMON] long 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2178 ;;      Params:         8       0       0       0       0
  2179 ;;      Locals:         0       6       0       0       0
  2180 ;;      Temps:          1       0       0       0       0
  2181 ;;      Totals:         9       6       0       0       0
  2182 ;;Total ram usage:       15 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_uartRC_init
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           
  2192                           ;psect for function ___aldiv
  2193  1367                     ___aldiv:
  2194  1367                     l2701:	
  2195                           ;incstack = 0
  2196                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2197                           
  2198  1367  1283               	bcf	3,5	;RP0=0, select bank0
  2199  1368  1303               	bcf	3,6	;RP1=0, select bank0
  2200  1369  01A1               	clrf	___aldiv@sign
  2201  136A                     l2703:
  2202  136A  1FF3               	btfss	___aldiv@divisor+3,7
  2203  136B  2B6D               	goto	u3851
  2204  136C  2B6E               	goto	u3850
  2205  136D                     u3851:
  2206  136D  2B7B               	goto	l478
  2207  136E                     u3850:
  2208  136E                     l2705:
  2209  136E  09F0               	comf	___aldiv@divisor,f
  2210  136F  09F1               	comf	___aldiv@divisor+1,f
  2211  1370  09F2               	comf	___aldiv@divisor+2,f
  2212  1371  09F3               	comf	___aldiv@divisor+3,f
  2213  1372  0AF0               	incf	___aldiv@divisor,f
  2214  1373  1903               	skipnz
  2215  1374  0AF1               	incf	___aldiv@divisor+1,f
  2216  1375  1903               	skipnz
  2217  1376  0AF2               	incf	___aldiv@divisor+2,f
  2218  1377  1903               	skipnz
  2219  1378  0AF3               	incf	___aldiv@divisor+3,f
  2220  1379  01A1               	clrf	___aldiv@sign
  2221  137A  0AA1               	incf	___aldiv@sign,f
  2222  137B                     l478:
  2223  137B  1FF7               	btfss	___aldiv@dividend+3,7
  2224  137C  2B7E               	goto	u3861
  2225  137D  2B7F               	goto	u3860
  2226  137E                     u3861:
  2227  137E  2B8E               	goto	l2711
  2228  137F                     u3860:
  2229  137F                     l2707:
  2230  137F  09F4               	comf	___aldiv@dividend,f
  2231  1380  09F5               	comf	___aldiv@dividend+1,f
  2232  1381  09F6               	comf	___aldiv@dividend+2,f
  2233  1382  09F7               	comf	___aldiv@dividend+3,f
  2234  1383  0AF4               	incf	___aldiv@dividend,f
  2235  1384  1903               	skipnz
  2236  1385  0AF5               	incf	___aldiv@dividend+1,f
  2237  1386  1903               	skipnz
  2238  1387  0AF6               	incf	___aldiv@dividend+2,f
  2239  1388  1903               	skipnz
  2240  1389  0AF7               	incf	___aldiv@dividend+3,f
  2241  138A                     l2709:
  2242  138A  3001               	movlw	1
  2243  138B  00F8               	movwf	??___aldiv
  2244  138C  0878               	movf	??___aldiv,w
  2245  138D  06A1               	xorwf	___aldiv@sign,f
  2246  138E                     l2711:
  2247  138E  3000               	movlw	0
  2248  138F  00A5               	movwf	___aldiv@quotient+3
  2249  1390  3000               	movlw	0
  2250  1391  00A4               	movwf	___aldiv@quotient+2
  2251  1392  3000               	movlw	0
  2252  1393  00A3               	movwf	___aldiv@quotient+1
  2253  1394  3000               	movlw	0
  2254  1395  00A2               	movwf	___aldiv@quotient
  2255  1396                     l2713:
  2256  1396  0873               	movf	___aldiv@divisor+3,w
  2257  1397  0472               	iorwf	___aldiv@divisor+2,w
  2258  1398  0471               	iorwf	___aldiv@divisor+1,w
  2259  1399  0470               	iorwf	___aldiv@divisor,w
  2260  139A  1903               	skipnz
  2261  139B  2B9D               	goto	u3871
  2262  139C  2B9E               	goto	u3870
  2263  139D                     u3871:
  2264  139D  2BEB               	goto	l2733
  2265  139E                     u3870:
  2266  139E                     l2715:
  2267  139E  01A0               	clrf	___aldiv@counter
  2268  139F  0AA0               	incf	___aldiv@counter,f
  2269  13A0  2BAE               	goto	l2719
  2270  13A1                     l2717:
  2271  13A1  3001               	movlw	1
  2272  13A2  00F8               	movwf	??___aldiv
  2273  13A3                     u3885:
  2274  13A3  1003               	clrc
  2275  13A4  0DF0               	rlf	___aldiv@divisor,f
  2276  13A5  0DF1               	rlf	___aldiv@divisor+1,f
  2277  13A6  0DF2               	rlf	___aldiv@divisor+2,f
  2278  13A7  0DF3               	rlf	___aldiv@divisor+3,f
  2279  13A8  0BF8               	decfsz	??___aldiv,f
  2280  13A9  2BA3               	goto	u3885
  2281  13AA  3001               	movlw	1
  2282  13AB  00F8               	movwf	??___aldiv
  2283  13AC  0878               	movf	??___aldiv,w
  2284  13AD  07A0               	addwf	___aldiv@counter,f
  2285  13AE                     l2719:
  2286  13AE  1FF3               	btfss	___aldiv@divisor+3,7
  2287  13AF  2BB1               	goto	u3891
  2288  13B0  2BB2               	goto	u3890
  2289  13B1                     u3891:
  2290  13B1  2BA1               	goto	l2717
  2291  13B2                     u3890:
  2292  13B2                     l2721:
  2293  13B2  3001               	movlw	1
  2294  13B3  00F8               	movwf	??___aldiv
  2295  13B4                     u3905:
  2296  13B4  1003               	clrc
  2297  13B5  0DA2               	rlf	___aldiv@quotient,f
  2298  13B6  0DA3               	rlf	___aldiv@quotient+1,f
  2299  13B7  0DA4               	rlf	___aldiv@quotient+2,f
  2300  13B8  0DA5               	rlf	___aldiv@quotient+3,f
  2301  13B9  0BF8               	decfsz	??___aldiv,f
  2302  13BA  2BB4               	goto	u3905
  2303  13BB                     l2723:
  2304  13BB  0873               	movf	___aldiv@divisor+3,w
  2305  13BC  0277               	subwf	___aldiv@dividend+3,w
  2306  13BD  1D03               	skipz
  2307  13BE  2BC9               	goto	u3915
  2308  13BF  0872               	movf	___aldiv@divisor+2,w
  2309  13C0  0276               	subwf	___aldiv@dividend+2,w
  2310  13C1  1D03               	skipz
  2311  13C2  2BC9               	goto	u3915
  2312  13C3  0871               	movf	___aldiv@divisor+1,w
  2313  13C4  0275               	subwf	___aldiv@dividend+1,w
  2314  13C5  1D03               	skipz
  2315  13C6  2BC9               	goto	u3915
  2316  13C7  0870               	movf	___aldiv@divisor,w
  2317  13C8  0274               	subwf	___aldiv@dividend,w
  2318  13C9                     u3915:
  2319  13C9  1C03               	skipc
  2320  13CA  2BCC               	goto	u3911
  2321  13CB  2BCD               	goto	u3910
  2322  13CC                     u3911:
  2323  13CC  2BDC               	goto	l2729
  2324  13CD                     u3910:
  2325  13CD                     l2725:
  2326  13CD  0870               	movf	___aldiv@divisor,w
  2327  13CE  02F4               	subwf	___aldiv@dividend,f
  2328  13CF  0871               	movf	___aldiv@divisor+1,w
  2329  13D0  1C03               	skipc
  2330  13D1  0F71               	incfsz	___aldiv@divisor+1,w
  2331  13D2  02F5               	subwf	___aldiv@dividend+1,f
  2332  13D3  0872               	movf	___aldiv@divisor+2,w
  2333  13D4  1C03               	skipc
  2334  13D5  0F72               	incfsz	___aldiv@divisor+2,w
  2335  13D6  02F6               	subwf	___aldiv@dividend+2,f
  2336  13D7  0873               	movf	___aldiv@divisor+3,w
  2337  13D8  1C03               	skipc
  2338  13D9  0F73               	incfsz	___aldiv@divisor+3,w
  2339  13DA  02F7               	subwf	___aldiv@dividend+3,f
  2340  13DB                     l2727:
  2341  13DB  1422               	bsf	___aldiv@quotient,0
  2342  13DC                     l2729:
  2343  13DC  3001               	movlw	1
  2344  13DD                     u3925:
  2345  13DD  1003               	clrc
  2346  13DE  0CF3               	rrf	___aldiv@divisor+3,f
  2347  13DF  0CF2               	rrf	___aldiv@divisor+2,f
  2348  13E0  0CF1               	rrf	___aldiv@divisor+1,f
  2349  13E1  0CF0               	rrf	___aldiv@divisor,f
  2350  13E2  3EFF               	addlw	-1
  2351  13E3  1D03               	skipz
  2352  13E4  2BDD               	goto	u3925
  2353  13E5                     l2731:
  2354  13E5  3001               	movlw	1
  2355  13E6  02A0               	subwf	___aldiv@counter,f
  2356  13E7  1D03               	btfss	3,2
  2357  13E8  2BEA               	goto	u3931
  2358  13E9  2BEB               	goto	u3930
  2359  13EA                     u3931:
  2360  13EA  2BB2               	goto	l2721
  2361  13EB                     u3930:
  2362  13EB                     l2733:
  2363  13EB  0821               	movf	___aldiv@sign,w
  2364  13EC  1903               	btfsc	3,2
  2365  13ED  2BEF               	goto	u3941
  2366  13EE  2BF0               	goto	u3940
  2367  13EF                     u3941:
  2368  13EF  2BFB               	goto	l2737
  2369  13F0                     u3940:
  2370  13F0                     l2735:
  2371  13F0  09A2               	comf	___aldiv@quotient,f
  2372  13F1  09A3               	comf	___aldiv@quotient+1,f
  2373  13F2  09A4               	comf	___aldiv@quotient+2,f
  2374  13F3  09A5               	comf	___aldiv@quotient+3,f
  2375  13F4  0AA2               	incf	___aldiv@quotient,f
  2376  13F5  1903               	skipnz
  2377  13F6  0AA3               	incf	___aldiv@quotient+1,f
  2378  13F7  1903               	skipnz
  2379  13F8  0AA4               	incf	___aldiv@quotient+2,f
  2380  13F9  1903               	skipnz
  2381  13FA  0AA5               	incf	___aldiv@quotient+3,f
  2382  13FB                     l2737:
  2383  13FB  0825               	movf	___aldiv@quotient+3,w
  2384  13FC  00F3               	movwf	?___aldiv+3
  2385  13FD  0824               	movf	___aldiv@quotient+2,w
  2386  13FE  00F2               	movwf	?___aldiv+2
  2387  13FF  0823               	movf	___aldiv@quotient+1,w
  2388  1400  00F1               	movwf	?___aldiv+1
  2389  1401  0822               	movf	___aldiv@quotient,w
  2390  1402  00F0               	movwf	?___aldiv
  2391  1403                     l488:
  2392  1403  0008               	return
  2393  1404                     __end_of___aldiv:
  2394                           
  2395                           	psect	text5
  2396  0800                     __ptext5:	
  2397 ;; *************** function _uartRC_Read *****************
  2398 ;; Defined at:
  2399 ;;		line 31 in file "USART.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  lectura         1    0        unsigned char 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      unsigned char 
  2406 ;; Registers used:
  2407 ;;		wreg
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         0       0       0       0       0
  2414 ;;      Locals:         1       0       0       0       0
  2415 ;;      Temps:          2       0       0       0       0
  2416 ;;      Totals:         3       0       0       0       0
  2417 ;;Total ram usage:        3 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           
  2427                           ;psect for function _uartRC_Read
  2428  0800                     _uartRC_Read:
  2429  0800                     l3209:	
  2430                           ;incstack = 0
  2431                           ; Regs used in _uartRC_Read: [wreg]
  2432                           
  2433                           
  2434                           ;USART.c: 32:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2435  0800  3007               	movlw	7
  2436  0801  00F1               	movwf	??_uartRC_Read+1
  2437  0802  307D               	movlw	125
  2438  0803  00F0               	movwf	??_uartRC_Read
  2439  0804                     u4907:
  2440  0804  0BF0               	decfsz	??_uartRC_Read,f
  2441  0805  2804               	goto	u4907
  2442  0806  0BF1               	decfsz	??_uartRC_Read+1,f
  2443  0807  2804               	goto	u4907
  2444  0808  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0809  1303               	bcf	3,6	;RP1=0, select bank0
  2446  080A  081A               	movf	26,w	;volatile
  2447  080B                     l199:
  2448  080B  0008               	return
  2449  080C                     __end_of_uartRC_Read:
  2450                           
  2451                           	psect	text6
  2452  0D30                     __ptext6:	
  2453 ;; *************** function _sprintf *****************
  2454 ;; Defined at:
  2455 ;;		line 505 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  sp              1    wreg     PTR unsigned char 
  2458 ;;		 -> datos(20), 
  2459 ;;  f               1   59[BANK0 ] PTR const unsigned char 
  2460 ;;		 -> STR_2(15), 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  sp              1   18[BANK1 ] PTR unsigned char 
  2463 ;;		 -> datos(20), 
  2464 ;;  tmpval          4   12[BANK1 ] struct .
  2465 ;;  val             4    4[BANK1 ] unsigned long 
  2466 ;;  fval            3   19[BANK1 ] unsigned long 
  2467 ;;  prec            2   22[BANK1 ] int 
  2468 ;;  eexp            2   16[BANK1 ] int 
  2469 ;;  width           2   10[BANK1 ] int 
  2470 ;;  flag            2    8[BANK1 ] unsigned short 
  2471 ;;  cp              2    0        PTR const unsigned char 
  2472 ;;  len             2    0        unsigned int 
  2473 ;;  c               1   24[BANK1 ] unsigned char 
  2474 ;;  ap              1    3[BANK1 ] PTR void [1]
  2475 ;;		 -> ?_sprintf(2), 
  2476 ;;  d               1    0        unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  2   59[BANK0 ] int 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2486 ;;      Params:         0       4       0       0       0
  2487 ;;      Locals:         0       0      25       0       0
  2488 ;;      Temps:          0       6       0       0       0
  2489 ;;      Totals:         0      10      25       0       0
  2490 ;;Total ram usage:       35 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    3
  2493 ;; This function calls:
  2494 ;;		___awdiv
  2495 ;;		___ftadd
  2496 ;;		___ftge
  2497 ;;		___ftmul
  2498 ;;		___ftneg
  2499 ;;		___ftsub
  2500 ;;		___fttol
  2501 ;;		___lldiv
  2502 ;;		___llmod
  2503 ;;		___lltoft
  2504 ;;		___wmul
  2505 ;;		__div_to_l_
  2506 ;;		__tdiv_to_l_
  2507 ;;		_fround
  2508 ;;		_isdigit
  2509 ;;		_scale
  2510 ;; This function is called by:
  2511 ;;		_main
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           
  2516                           ;psect for function _sprintf
  2517  0D30                     _sprintf:
  2518                           
  2519                           ;incstack = 0
  2520                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2521                           ;sprintf@sp stored from wreg
  2522  0D30  1683               	bsf	3,5	;RP0=1, select bank1
  2523  0D31  1303               	bcf	3,6	;RP1=0, select bank1
  2524  0D32  00B2               	movwf	sprintf@sp^(0+128)
  2525  0D33                     l2949:
  2526                           
  2527                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const ch
      +                          ar * f, ...);D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 506: {;D:\MPLAB XC8 
      +                          compiler\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\MPLAB XC8 compiler\pic\so
      +                          urces\c90\common\doprnt.c: 512:  char c;;D:\MPLAB XC8 compiler\pic\sources\c90\common\do
      +                          prnt.c: 514:  int width;;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 517:  in
      +                          t prec;;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 525:  unsigned short flag
      +                          ;
  2528  0D33  305C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2529  0D34  1283               	bcf	3,5	;RP0=0, select bank0
  2530  0D35  1303               	bcf	3,6	;RP1=0, select bank0
  2531  0D36  00DF               	movwf	??_sprintf
  2532  0D37  085F               	movf	??_sprintf,w
  2533  0D38  1683               	bsf	3,5	;RP0=1, select bank1
  2534  0D39  1303               	bcf	3,6	;RP1=0, select bank1
  2535  0D3A  00A3               	movwf	sprintf@ap^(0+128)
  2536  0D3B                     L1:
  2537                           
  2538                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  2539  0D3B  120A  118A  2FB6   	goto	l3197
  2540  0D3E                     l2951:
  2541                           
  2542                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  2543  0D3E  3025               	movlw	37
  2544  0D3F  0638               	xorwf	sprintf@c^(0+128),w
  2545  0D40  1903               	btfsc	3,2
  2546  0D41  2D43               	goto	u4341
  2547  0D42  2D44               	goto	u4340
  2548  0D43                     u4341:
  2549  0D43  2D58               	goto	l2957
  2550  0D44                     u4340:
  2551  0D44                     l2953:
  2552                           
  2553                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 557:   {;D:\MPLAB XC8 compiler\p
      +                          ic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2554  0D44  0838               	movf	sprintf@c^(0+128),w
  2555  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  2556  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  2557  0D47  00DF               	movwf	??_sprintf
  2558  0D48  1683               	bsf	3,5	;RP0=1, select bank1
  2559  0D49  1303               	bcf	3,6	;RP1=0, select bank1
  2560  0D4A  0832               	movf	sprintf@sp^(0+128),w
  2561  0D4B  0084               	movwf	4
  2562  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  2563  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  2564  0D4E  085F               	movf	??_sprintf,w
  2565  0D4F  1383               	bcf	3,7	;select IRP bank0
  2566  0D50  0080               	movwf	0
  2567  0D51                     l2955:
  2568  0D51  3001               	movlw	1
  2569  0D52  00DF               	movwf	??_sprintf
  2570  0D53  085F               	movf	??_sprintf,w
  2571  0D54  1683               	bsf	3,5	;RP0=1, select bank1
  2572  0D55  1303               	bcf	3,6	;RP1=0, select bank1
  2573  0D56  07B2               	addwf	sprintf@sp^(0+128),f
  2574                           
  2575                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 559:    continue;
  2576  0D57  2D3B               	goto	L1
  2577  0D58                     l2957:
  2578                           
  2579                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2580  0D58  01AA               	clrf	sprintf@width^(0+128)
  2581  0D59  01AB               	clrf	(sprintf@width+1)^(0+128)
  2582                           
  2583                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2584  0D5A  01A8               	clrf	sprintf@flag^(0+128)
  2585  0D5B  01A9               	clrf	(sprintf@flag+1)^(0+128)
  2586  0D5C                     l2959:
  2587                           
  2588                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)*f))
      +                           {
  2589  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  2590  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  2591  0D5E  085B               	movf	sprintf@f,w
  2592  0D5F  0084               	movwf	4
  2593  0D60  160A  118A  2000  120A  158A  	fcall	stringdir
  2594  0D65  160A  158A  25E0  120A  158A  	fcall	_isdigit
  2595  0D6A  1C03               	btfss	3,0
  2596  0D6B  2D6D               	goto	u4351
  2597  0D6C  2D6E               	goto	u4350
  2598  0D6D                     u4351:
  2599  0D6D  2DB8               	goto	l2971
  2600  0D6E                     u4350:
  2601  0D6E                     l2961:
  2602                           
  2603                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  2604  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  2605  0D6F  1303               	bcf	3,6	;RP1=0, select bank1
  2606  0D70  01AA               	clrf	sprintf@width^(0+128)
  2607  0D71  01AB               	clrf	(sprintf@width+1)^(0+128)
  2608  0D72                     l2963:
  2609                           
  2610                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  2611  0D72  300A               	movlw	10
  2612  0D73  00F0               	movwf	___wmul@multiplier
  2613  0D74  3000               	movlw	0
  2614  0D75  00F1               	movwf	___wmul@multiplier+1
  2615  0D76  1683               	bsf	3,5	;RP0=1, select bank1
  2616  0D77  1303               	bcf	3,6	;RP1=0, select bank1
  2617  0D78  082B               	movf	(sprintf@width+1)^(0+128),w
  2618  0D79  00F3               	movwf	___wmul@multiplicand+1
  2619  0D7A  082A               	movf	sprintf@width^(0+128),w
  2620  0D7B  00F2               	movwf	___wmul@multiplicand
  2621  0D7C  160A  158A  264F  120A  158A  	fcall	___wmul
  2622  0D81  0871               	movf	?___wmul+1,w
  2623  0D82  1683               	bsf	3,5	;RP0=1, select bank1
  2624  0D83  1303               	bcf	3,6	;RP1=0, select bank1
  2625  0D84  00AB               	movwf	(sprintf@width+1)^(0+128)
  2626  0D85  0870               	movf	?___wmul,w
  2627  0D86  00AA               	movwf	sprintf@width^(0+128)
  2628  0D87                     l2965:
  2629                           
  2630                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - '0';
  2631  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  2632  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  2633  0D89  085B               	movf	sprintf@f,w
  2634  0D8A  0084               	movwf	4
  2635  0D8B  160A  118A  2000  120A  158A  	fcall	stringdir
  2636  0D90  3ED0               	addlw	208
  2637  0D91  00DF               	movwf	??_sprintf
  2638  0D92  30FF               	movlw	255
  2639  0D93  1803               	skipnc
  2640  0D94  3000               	movlw	0
  2641  0D95  00E0               	movwf	??_sprintf+1
  2642  0D96  085F               	movf	??_sprintf,w
  2643  0D97  1683               	bsf	3,5	;RP0=1, select bank1
  2644  0D98  1303               	bcf	3,6	;RP1=0, select bank1
  2645  0D99  07AA               	addwf	sprintf@width^(0+128),f
  2646  0D9A  1803               	skipnc
  2647  0D9B  0AAB               	incf	(sprintf@width+1)^(0+128),f
  2648  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  2649  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  2650  0D9E  0860               	movf	??_sprintf+1,w
  2651  0D9F  1683               	bsf	3,5	;RP0=1, select bank1
  2652  0DA0  1303               	bcf	3,6	;RP1=0, select bank1
  2653  0DA1  07AB               	addwf	(sprintf@width+1)^(0+128),f
  2654  0DA2                     l2967:
  2655  0DA2  3001               	movlw	1
  2656  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  2657  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  2658  0DA5  00DF               	movwf	??_sprintf
  2659  0DA6  085F               	movf	??_sprintf,w
  2660  0DA7  07DB               	addwf	sprintf@f,f
  2661  0DA8                     l2969:
  2662                           
  2663                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((unsigne
      +                          d)*f));
  2664  0DA8  085B               	movf	sprintf@f,w
  2665  0DA9  0084               	movwf	4
  2666  0DAA  160A  118A  2000  120A  158A  	fcall	stringdir
  2667  0DAF  160A  158A  25E0  120A  158A  	fcall	_isdigit
  2668  0DB4  1803               	btfsc	3,0
  2669  0DB5  2DB7               	goto	u4361
  2670  0DB6  2DB8               	goto	u4360
  2671  0DB7                     u4361:
  2672  0DB7  2D72               	goto	l2963
  2673  0DB8                     u4360:
  2674  0DB8                     l2971:
  2675                           
  2676                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
  2677  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  2678  0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  2679  0DBA  085B               	movf	sprintf@f,w
  2680  0DBB  0084               	movwf	4
  2681  0DBC  160A  118A  2000  120A  158A  	fcall	stringdir
  2682  0DC1  3A2E               	xorlw	46
  2683  0DC2  1D03               	skipz
  2684  0DC3  2DC5               	goto	u4371
  2685  0DC4  2DC6               	goto	u4370
  2686  0DC5                     u4371:
  2687  0DC5  2E1C               	goto	l2987
  2688  0DC6                     u4370:
  2689  0DC6                     l2973:
  2690                           
  2691                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 629:    flag |= 0x4000;
  2692  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  2693  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  2694  0DC8  1729               	bsf	(sprintf@flag^(0+128)+1),6
  2695  0DC9                     l2975:
  2696                           
  2697                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 630:    f++;
  2698  0DC9  3001               	movlw	1
  2699  0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  2700  0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  2701  0DCC  00DF               	movwf	??_sprintf
  2702  0DCD  085F               	movf	??_sprintf,w
  2703  0DCE  07DB               	addwf	sprintf@f,f
  2704  0DCF                     l2977:
  2705                           
  2706                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 644:    {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2707  0DCF  1683               	bsf	3,5	;RP0=1, select bank1
  2708  0DD0  1303               	bcf	3,6	;RP1=0, select bank1
  2709  0DD1  01B6               	clrf	sprintf@prec^(0+128)
  2710  0DD2  01B7               	clrf	(sprintf@prec+1)^(0+128)
  2711                           
  2712                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned
      +                          )*f)) {
  2713  0DD3  2E0A               	goto	l2985
  2714  0DD4                     l2979:
  2715                           
  2716                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  2717  0DD4  300A               	movlw	10
  2718  0DD5  00F0               	movwf	___wmul@multiplier
  2719  0DD6  3000               	movlw	0
  2720  0DD7  00F1               	movwf	___wmul@multiplier+1
  2721  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  2722  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  2723  0DDA  0837               	movf	(sprintf@prec+1)^(0+128),w
  2724  0DDB  00F3               	movwf	___wmul@multiplicand+1
  2725  0DDC  0836               	movf	sprintf@prec^(0+128),w
  2726  0DDD  00F2               	movwf	___wmul@multiplicand
  2727  0DDE  160A  158A  264F  120A  158A  	fcall	___wmul
  2728  0DE3  0871               	movf	?___wmul+1,w
  2729  0DE4  1683               	bsf	3,5	;RP0=1, select bank1
  2730  0DE5  1303               	bcf	3,6	;RP1=0, select bank1
  2731  0DE6  00B7               	movwf	(sprintf@prec+1)^(0+128)
  2732  0DE7  0870               	movf	?___wmul,w
  2733  0DE8  00B6               	movwf	sprintf@prec^(0+128)
  2734  0DE9                     l2981:
  2735                           
  2736                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0';
  2737  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  2738  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  2739  0DEB  085B               	movf	sprintf@f,w
  2740  0DEC  0084               	movwf	4
  2741  0DED  160A  118A  2000  120A  158A  	fcall	stringdir
  2742  0DF2  3ED0               	addlw	208
  2743  0DF3  00DF               	movwf	??_sprintf
  2744  0DF4  30FF               	movlw	255
  2745  0DF5  1803               	skipnc
  2746  0DF6  3000               	movlw	0
  2747  0DF7  00E0               	movwf	??_sprintf+1
  2748  0DF8  085F               	movf	??_sprintf,w
  2749  0DF9  1683               	bsf	3,5	;RP0=1, select bank1
  2750  0DFA  1303               	bcf	3,6	;RP1=0, select bank1
  2751  0DFB  07B6               	addwf	sprintf@prec^(0+128),f
  2752  0DFC  1803               	skipnc
  2753  0DFD  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  2754  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0E00  0860               	movf	??_sprintf+1,w
  2757  0E01  1683               	bsf	3,5	;RP0=1, select bank1
  2758  0E02  1303               	bcf	3,6	;RP1=0, select bank1
  2759  0E03  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  2760  0E04                     l2983:
  2761  0E04  3001               	movlw	1
  2762  0E05  1283               	bcf	3,5	;RP0=0, select bank0
  2763  0E06  1303               	bcf	3,6	;RP1=0, select bank0
  2764  0E07  00DF               	movwf	??_sprintf
  2765  0E08  085F               	movf	??_sprintf,w
  2766  0E09  07DB               	addwf	sprintf@f,f
  2767  0E0A                     l2985:
  2768                           
  2769                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned
      +                          )*f)) {
  2770  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  2771  0E0B  085B               	movf	sprintf@f,w
  2772  0E0C  0084               	movwf	4
  2773  0E0D  160A  118A  2000  120A  158A  	fcall	stringdir
  2774  0E12  160A  158A  25E0  120A  158A  	fcall	_isdigit
  2775  0E17  1803               	btfsc	3,0
  2776  0E18  2E1A               	goto	u4381
  2777  0E19  2E1B               	goto	u4380
  2778  0E1A                     u4381:
  2779  0E1A  2DD4               	goto	l2979
  2780  0E1B                     u4380:
  2781  0E1B  2E26               	goto	l2993
  2782  0E1C                     l2987:
  2783                           
  2784                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2785  0E1C  1683               	bsf	3,5	;RP0=1, select bank1
  2786  0E1D  1303               	bcf	3,6	;RP1=0, select bank1
  2787  0E1E  01B6               	clrf	sprintf@prec^(0+128)
  2788  0E1F  01B7               	clrf	(sprintf@prec+1)^(0+128)
  2789  0E20                     l2989:
  2790                           
  2791                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 654:    flag |= 0x1000;
  2792  0E20  1629               	bsf	(sprintf@flag^(0+128)+1),4
  2793  0E21  2E26               	goto	l2993
  2794  0E22                     l342:	
  2795                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2796                           
  2797                           
  2798                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 689:    flag |= 0x400;
  2799  0E22  1683               	bsf	3,5	;RP0=1, select bank1
  2800  0E23  1303               	bcf	3,6	;RP1=0, select bank1
  2801  0E24  1529               	bsf	(sprintf@flag^(0+128)+1),2
  2802                           
  2803                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 690:    break;
  2804  0E25  2E46               	goto	l2995
  2805  0E26                     l2993:
  2806  0E26  3001               	movlw	1
  2807  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0E29  07DB               	addwf	sprintf@f,f
  2810  0E2A  30FF               	movlw	-1
  2811  0E2B  075B               	addwf	sprintf@f,w
  2812  0E2C  0084               	movwf	4
  2813  0E2D  160A  118A  2000  120A  158A  	fcall	stringdir
  2814  0E32  1683               	bsf	3,5	;RP0=1, select bank1
  2815  0E33  1303               	bcf	3,6	;RP1=0, select bank1
  2816  0E34  00B8               	movwf	sprintf@c^(0+128)
  2817  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  2818  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  2819  0E37  00DF               	movwf	??_sprintf
  2820  0E38  01E0               	clrf	??_sprintf+1
  2821                           
  2822                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2823                           ; Switch size 1, requested type "simple"
  2824                           ; Number of cases is 1, Range of values is 0 to 0
  2825                           ; switch strategies available:
  2826                           ; Name         Instructions Cycles
  2827                           ; simple_byte            4     3 (average)
  2828                           ; direct_byte           11     8 (fixed)
  2829                           ; jumptable            260     6 (fixed)
  2830                           ;	Chosen strategy is simple_byte
  2831  0E39  0860               	movf	??_sprintf+1,w
  2832  0E3A  3A00               	xorlw	0	; case 0
  2833  0E3B  1903               	skipnz
  2834  0E3C  2E3E               	goto	l3329
  2835  0E3D  2D3B               	goto	L1
  2836  0E3E                     l3329:
  2837                           
  2838                           ; Switch size 1, requested type "simple"
  2839                           ; Number of cases is 2, Range of values is 0 to 102
  2840                           ; switch strategies available:
  2841                           ; Name         Instructions Cycles
  2842                           ; simple_byte            7     4 (average)
  2843                           ; jumptable            260     6 (fixed)
  2844                           ;	Chosen strategy is simple_byte
  2845  0E3E  085F               	movf	??_sprintf,w
  2846  0E3F  3A00               	xorlw	0	; case 0
  2847  0E40  1903               	skipnz
  2848  0E41  2FFD               	goto	L3
  2849  0E42  3A66               	xorlw	102	; case 102
  2850  0E43  1903               	skipnz
  2851  0E44  2E22               	goto	l342
  2852  0E45  2D3B               	goto	L1
  2853  0E46                     l2995:
  2854                           
  2855                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 851:   if(flag & (0x700)) {
  2856  0E46  3000               	movlw	0
  2857  0E47  0528               	andwf	sprintf@flag^(0+128),w
  2858  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  2859  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  2860  0E4A  00DF               	movwf	??_sprintf
  2861  0E4B  3007               	movlw	7
  2862  0E4C  1683               	bsf	3,5	;RP0=1, select bank1
  2863  0E4D  1303               	bcf	3,6	;RP1=0, select bank1
  2864  0E4E  0529               	andwf	(sprintf@flag+1)^(0+128),w
  2865  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  2866  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  2867  0E51  00E0               	movwf	??_sprintf+1
  2868  0E52  085F               	movf	??_sprintf,w
  2869  0E53  0460               	iorwf	??_sprintf+1,w
  2870  0E54  1903               	btfsc	3,2
  2871  0E55  2E57               	goto	u4391
  2872  0E56  2E5A               	goto	u4390
  2873  0E57                     u4391:
  2874  0E57  120A  118A  2EB3   	goto	l3151
  2875  0E5A                     u4390:
  2876  0E5A                     l2997:
  2877                           
  2878                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 853:    if(flag & 0x1000)
  2879  0E5A  1683               	bsf	3,5	;RP0=1, select bank1
  2880  0E5B  1303               	bcf	3,6	;RP1=0, select bank1
  2881  0E5C  1E29               	btfss	(sprintf@flag+1)^(0+128),4
  2882  0E5D  2E5F               	goto	u4401
  2883  0E5E  2E60               	goto	u4400
  2884  0E5F                     u4401:
  2885  0E5F  2E64               	goto	l3001
  2886  0E60                     u4400:
  2887  0E60                     l2999:
  2888                           
  2889                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 855:     prec = 6;
  2890  0E60  3006               	movlw	6
  2891  0E61  00B6               	movwf	sprintf@prec^(0+128)
  2892  0E62  3000               	movlw	0
  2893  0E63  00B7               	movwf	(sprintf@prec^(0+128)+1)
  2894  0E64                     l3001:
  2895                           
  2896                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 856:    fval = (*(double *)__va_
      +                          arg((*(double **)ap), (double)0));
  2897  0E64  0823               	movf	sprintf@ap^(0+128),w
  2898  0E65  0084               	movwf	4
  2899  0E66  1383               	bcf	3,7	;select IRP bank0
  2900  0E67  0800               	movf	0,w
  2901  0E68  00B3               	movwf	sprintf@fval^(0+128)
  2902  0E69  0A84               	incf	4,f
  2903  0E6A  0800               	movf	0,w
  2904  0E6B  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2905  0E6C  0A84               	incf	4,f
  2906  0E6D  0800               	movf	0,w
  2907  0E6E  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2908  0E6F                     l3003:
  2909  0E6F  3003               	movlw	3
  2910  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  2912  0E72  00DF               	movwf	??_sprintf
  2913  0E73  085F               	movf	??_sprintf,w
  2914  0E74  1683               	bsf	3,5	;RP0=1, select bank1
  2915  0E75  1303               	bcf	3,6	;RP1=0, select bank1
  2916  0E76  07A3               	addwf	sprintf@ap^(0+128),f
  2917  0E77                     l3005:
  2918                           
  2919                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 857:    if(fval < 0.0) {
  2920  0E77  0833               	movf	sprintf@fval^(0+128),w
  2921  0E78  00F0               	movwf	___ftge@ff1
  2922  0E79  0834               	movf	(sprintf@fval+1)^(0+128),w
  2923  0E7A  00F1               	movwf	___ftge@ff1+1
  2924  0E7B  0835               	movf	(sprintf@fval+2)^(0+128),w
  2925  0E7C  00F2               	movwf	___ftge@ff1+2
  2926  0E7D  3000               	movlw	0
  2927  0E7E  00F3               	movwf	___ftge@ff2
  2928  0E7F  3000               	movlw	0
  2929  0E80  00F4               	movwf	___ftge@ff2+1
  2930  0E81  3000               	movlw	0
  2931  0E82  00F5               	movwf	___ftge@ff2+2
  2932  0E83  160A  158A  2730  120A  158A  	fcall	___ftge
  2933  0E88  1803               	btfsc	3,0
  2934  0E89  2E8B               	goto	u4411
  2935  0E8A  2E8C               	goto	u4410
  2936  0E8B                     u4411:
  2937  0E8B  2EA5               	goto	l3011
  2938  0E8C                     u4410:
  2939  0E8C                     l3007:
  2940                           
  2941                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 858:     fval = -fval;
  2942  0E8C  1683               	bsf	3,5	;RP0=1, select bank1
  2943  0E8D  1303               	bcf	3,6	;RP1=0, select bank1
  2944  0E8E  0833               	movf	sprintf@fval^(0+128),w
  2945  0E8F  00F0               	movwf	___ftneg@f1
  2946  0E90  0834               	movf	(sprintf@fval+1)^(0+128),w
  2947  0E91  00F1               	movwf	___ftneg@f1+1
  2948  0E92  0835               	movf	(sprintf@fval+2)^(0+128),w
  2949  0E93  00F2               	movwf	___ftneg@f1+2
  2950  0E94  160A  158A  25BC  120A  158A  	fcall	___ftneg
  2951  0E99  0870               	movf	?___ftneg,w
  2952  0E9A  1683               	bsf	3,5	;RP0=1, select bank1
  2953  0E9B  1303               	bcf	3,6	;RP1=0, select bank1
  2954  0E9C  00B3               	movwf	sprintf@fval^(0+128)
  2955  0E9D  0871               	movf	?___ftneg+1,w
  2956  0E9E  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2957  0E9F  0872               	movf	?___ftneg+2,w
  2958  0EA0  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2959  0EA1                     l3009:
  2960                           
  2961                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 859:     flag |= 0x03;
  2962  0EA1  3003               	movlw	3
  2963  0EA2  04A8               	iorwf	sprintf@flag^(0+128),f
  2964  0EA3  3000               	movlw	0
  2965  0EA4  04A9               	iorwf	(sprintf@flag+1)^(0+128),f
  2966  0EA5                     l3011:
  2967                           
  2968                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2969  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  2970  0EA6  1303               	bcf	3,6	;RP1=0, select bank1
  2971  0EA7  01B0               	clrf	sprintf@eexp^(0+128)
  2972  0EA8  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  2973  0EA9                     l3013:
  2974                           
  2975                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 862:    if( fval!=0) {
  2976  0EA9  0835               	movf	(sprintf@fval+2)^(0+128),w
  2977  0EAA  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2978  0EAB  0433               	iorwf	sprintf@fval^(0+128),w
  2979  0EAC  1903               	skipnz
  2980  0EAD  2EAF               	goto	u4421
  2981  0EAE  2EB0               	goto	u4420
  2982  0EAF                     u4421:
  2983  0EAF  2FA2               	goto	l3039
  2984  0EB0                     u4420:
  2985  0EB0                     l3015:
  2986                           
  2987                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 863:     (void)(*(&eexp) = ((*(u
      +                          nsigned long *)&fval >> 15) & 255) - 126);
  2988  0EB0  30B3               	movlw	low (sprintf@fval| 0)
  2989  0EB1  0084               	movwf	4
  2990  0EB2  1383               	bcf	3,7	;select IRP bank1
  2991  0EB3  0800               	movf	0,w
  2992  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  2993  0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  2994  0EB6  00DF               	movwf	??_sprintf
  2995  0EB7  0A84               	incf	4,f
  2996  0EB8  0800               	movf	0,w
  2997  0EB9  00E0               	movwf	??_sprintf+1
  2998  0EBA  0A84               	incf	4,f
  2999  0EBB  0800               	movf	0,w
  3000  0EBC  00E1               	movwf	??_sprintf+2
  3001  0EBD  0A84               	incf	4,f
  3002  0EBE  0800               	movf	0,w
  3003  0EBF  00E2               	movwf	??_sprintf+3
  3004  0EC0  300F               	movlw	15
  3005  0EC1                     u4435:
  3006  0EC1  1003               	clrc
  3007  0EC2  0CE2               	rrf	??_sprintf+3,f
  3008  0EC3  0CE1               	rrf	??_sprintf+2,f
  3009  0EC4  0CE0               	rrf	??_sprintf+1,f
  3010  0EC5  0CDF               	rrf	??_sprintf,f
  3011  0EC6                     u4430:
  3012  0EC6  3EFF               	addlw	-1
  3013  0EC7  1D03               	skipz
  3014  0EC8  2EC1               	goto	u4435
  3015  0EC9  30FF               	movlw	255
  3016  0ECA  055F               	andwf	??_sprintf,w
  3017  0ECB  00E3               	movwf	??_sprintf+4
  3018  0ECC  3000               	movlw	0
  3019  0ECD  0560               	andwf	??_sprintf+1,w
  3020  0ECE  00E4               	movwf	??_sprintf+5
  3021  0ECF  0863               	movf	??_sprintf+4,w
  3022  0ED0  3E82               	addlw	130
  3023  0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  3024  0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  3025  0ED3  00B0               	movwf	sprintf@eexp^(0+128)
  3026  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  3028  0ED6  0864               	movf	??_sprintf+5,w
  3029  0ED7  1803               	skipnc
  3030  0ED8  3E01               	addlw	1
  3031  0ED9  3EFF               	addlw	255
  3032  0EDA  1683               	bsf	3,5	;RP0=1, select bank1
  3033  0EDB  1303               	bcf	3,6	;RP1=0, select bank1
  3034  0EDC  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  3035  0EDD                     l3017:
  3036                           
  3037                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  3038  0EDD  30FF               	movlw	255
  3039  0EDE  07B0               	addwf	sprintf@eexp^(0+128),f
  3040  0EDF  1803               	skipnc
  3041  0EE0  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  3042  0EE1  30FF               	movlw	255
  3043  0EE2  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  3044  0EE3                     l3019:
  3045                           
  3046                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 865:     eexp *= 3;
  3047  0EE3  3003               	movlw	3
  3048  0EE4  00F0               	movwf	___wmul@multiplier
  3049  0EE5  3000               	movlw	0
  3050  0EE6  00F1               	movwf	___wmul@multiplier+1
  3051  0EE7  0831               	movf	(sprintf@eexp+1)^(0+128),w
  3052  0EE8  00F3               	movwf	___wmul@multiplicand+1
  3053  0EE9  0830               	movf	sprintf@eexp^(0+128),w
  3054  0EEA  00F2               	movwf	___wmul@multiplicand
  3055  0EEB  160A  158A  264F  120A  158A  	fcall	___wmul
  3056  0EF0  0871               	movf	?___wmul+1,w
  3057  0EF1  1683               	bsf	3,5	;RP0=1, select bank1
  3058  0EF2  1303               	bcf	3,6	;RP1=0, select bank1
  3059  0EF3  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  3060  0EF4  0870               	movf	?___wmul,w
  3061  0EF5  00B0               	movwf	sprintf@eexp^(0+128)
  3062  0EF6                     l3021:
  3063                           
  3064                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 866:     eexp /= 10;
  3065  0EF6  300A               	movlw	10
  3066  0EF7  00F7               	movwf	___awdiv@divisor
  3067  0EF8  3000               	movlw	0
  3068  0EF9  00F8               	movwf	___awdiv@divisor+1
  3069  0EFA  0831               	movf	(sprintf@eexp+1)^(0+128),w
  3070  0EFB  00FA               	movwf	___awdiv@dividend+1
  3071  0EFC  0830               	movf	sprintf@eexp^(0+128),w
  3072  0EFD  00F9               	movwf	___awdiv@dividend
  3073  0EFE  160A  118A  21F6  120A  158A  	fcall	___awdiv
  3074  0F03  0878               	movf	?___awdiv+1,w
  3075  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  3076  0F05  1303               	bcf	3,6	;RP1=0, select bank1
  3077  0F06  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  3078  0F07  0877               	movf	?___awdiv,w
  3079  0F08  00B0               	movwf	sprintf@eexp^(0+128)
  3080  0F09                     l3023:
  3081                           
  3082                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 867:     if(eexp < 0)
  3083  0F09  1FB1               	btfss	(sprintf@eexp+1)^(0+128),7
  3084  0F0A  2F0C               	goto	u4441
  3085  0F0B  2F0D               	goto	u4440
  3086  0F0C                     u4441:
  3087  0F0C  2F13               	goto	l3027
  3088  0F0D                     u4440:
  3089  0F0D                     l3025:
  3090                           
  3091                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  3092  0F0D  30FF               	movlw	255
  3093  0F0E  07B0               	addwf	sprintf@eexp^(0+128),f
  3094  0F0F  1803               	skipnc
  3095  0F10  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  3096  0F11  30FF               	movlw	255
  3097  0F12  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  3098  0F13                     l3027:
  3099                           
  3100                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 872:     tmpval.integ = scale(-e
      +                          exp);
  3101  0F13  0330               	decf	sprintf@eexp^(0+128),w
  3102  0F14  3AFF               	xorlw	255
  3103  0F15  120A  158A  2285  120A  158A  	fcall	_scale
  3104  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  3105  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  3106  0F1C  0838               	movf	?_scale,w
  3107  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  3108  0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  3109  0F1F  00AC               	movwf	sprintf@tmpval^(0+128)
  3110  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  3111  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  3112  0F22  0839               	movf	?_scale+1,w
  3113  0F23  1683               	bsf	3,5	;RP0=1, select bank1
  3114  0F24  1303               	bcf	3,6	;RP1=0, select bank1
  3115  0F25  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  3116  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  3117  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  3118  0F28  083A               	movf	?_scale+2,w
  3119  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  3120  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  3121  0F2B  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  3122  0F2C                     l3029:
  3123                           
  3124                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 873:     tmpval.integ *= fval;
  3125  0F2C  0833               	movf	sprintf@fval^(0+128),w
  3126  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  3127  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  3128  0F2F  00A8               	movwf	___ftmul@f1
  3129  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  3130  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  3131  0F32  0834               	movf	(sprintf@fval+1)^(0+128),w
  3132  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  3133  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  3134  0F35  00A9               	movwf	___ftmul@f1+1
  3135  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  3136  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  3137  0F38  0835               	movf	(sprintf@fval+2)^(0+128),w
  3138  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3139  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3140  0F3B  00AA               	movwf	___ftmul@f1+2
  3141  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  3142  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  3143  0F3E  082C               	movf	sprintf@tmpval^(0+128),w
  3144  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3145  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3146  0F41  00AB               	movwf	___ftmul@f2
  3147  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  3148  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  3149  0F44  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  3150  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  3151  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  3152  0F47  00AC               	movwf	___ftmul@f2+1
  3153  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  3154  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  3155  0F4A  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  3156  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  3157  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  3158  0F4D  00AD               	movwf	___ftmul@f2+2
  3159  0F4E  120A  118A  200A  120A  158A  	fcall	___ftmul
  3160  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  3161  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  3162  0F55  0828               	movf	?___ftmul,w
  3163  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  3164  0F57  1303               	bcf	3,6	;RP1=0, select bank1
  3165  0F58  00AC               	movwf	sprintf@tmpval^(0+128)
  3166  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  3167  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  3168  0F5B  0829               	movf	?___ftmul+1,w
  3169  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  3170  0F5D  1303               	bcf	3,6	;RP1=0, select bank1
  3171  0F5E  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  3172  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3173  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  3174  0F61  082A               	movf	?___ftmul+2,w
  3175  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  3176  0F63  1303               	bcf	3,6	;RP1=0, select bank1
  3177  0F64  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  3178  0F65                     l3031:
  3179                           
  3180                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 874:     if(tmpval.integ < 1.0)
  3181  0F65  082C               	movf	sprintf@tmpval^(0+128),w
  3182  0F66  00F0               	movwf	___ftge@ff1
  3183  0F67  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  3184  0F68  00F1               	movwf	___ftge@ff1+1
  3185  0F69  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  3186  0F6A  00F2               	movwf	___ftge@ff1+2
  3187  0F6B  3000               	movlw	0
  3188  0F6C  00F3               	movwf	___ftge@ff2
  3189  0F6D  3080               	movlw	128
  3190  0F6E  00F4               	movwf	___ftge@ff2+1
  3191  0F6F  303F               	movlw	63
  3192  0F70  00F5               	movwf	___ftge@ff2+2
  3193  0F71  160A  158A  2730  120A  158A  	fcall	___ftge
  3194  0F76  1803               	btfsc	3,0
  3195  0F77  2F79               	goto	u4451
  3196  0F78  2F7A               	goto	u4450
  3197  0F79                     u4451:
  3198  0F79  2F83               	goto	l3035
  3199  0F7A                     u4450:
  3200  0F7A                     l3033:
  3201                           
  3202                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3203  0F7A  30FF               	movlw	255
  3204  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  3205  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  3206  0F7D  07B0               	addwf	sprintf@eexp^(0+128),f
  3207  0F7E  1803               	skipnc
  3208  0F7F  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  3209  0F80  30FF               	movlw	255
  3210  0F81  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  3211  0F82  2FA2               	goto	l3039
  3212  0F83                     l3035:
  3213  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  3214  0F84  1303               	bcf	3,6	;RP1=0, select bank1
  3215  0F85  082C               	movf	sprintf@tmpval^(0+128),w
  3216  0F86  00F0               	movwf	___ftge@ff1
  3217  0F87  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  3218  0F88  00F1               	movwf	___ftge@ff1+1
  3219  0F89  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  3220  0F8A  00F2               	movwf	___ftge@ff1+2
  3221  0F8B  3000               	movlw	0
  3222  0F8C  00F3               	movwf	___ftge@ff2
  3223  0F8D  3020               	movlw	32
  3224  0F8E  00F4               	movwf	___ftge@ff2+1
  3225  0F8F  3041               	movlw	65
  3226  0F90  00F5               	movwf	___ftge@ff2+2
  3227  0F91  160A  158A  2730  120A  158A  	fcall	___ftge
  3228  0F96  1C03               	btfss	3,0
  3229  0F97  2F99               	goto	u4461
  3230  0F98  2F9A               	goto	u4460
  3231  0F99                     u4461:
  3232  0F99  2FA2               	goto	l3039
  3233  0F9A                     u4460:
  3234  0F9A                     l3037:
  3235                           
  3236                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3237  0F9A  3001               	movlw	1
  3238  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  3239  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  3240  0F9D  07B0               	addwf	sprintf@eexp^(0+128),f
  3241  0F9E  1803               	skipnc
  3242  0F9F  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  3243  0FA0  3000               	movlw	0
  3244  0FA1  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  3245  0FA2                     l3039:
  3246                           
  3247                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1138:      if(prec <= 12)
  3248  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  3249  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  3250  0FA4  0837               	movf	(sprintf@prec+1)^(0+128),w
  3251  0FA5  3A80               	xorlw	128
  3252  0FA6  00FF               	movwf	btemp+1
  3253  0FA7  3080               	movlw	128
  3254  0FA8  027F               	subwf	btemp+1,w
  3255  0FA9  1D03               	skipz
  3256  0FAA  2FAD               	goto	u4475
  3257  0FAB  300D               	movlw	13
  3258  0FAC  0236               	subwf	sprintf@prec^(0+128),w
  3259  0FAD                     u4475:
  3260  0FAD  1803               	skipnc
  3261  0FAE  2FB0               	goto	u4471
  3262  0FAF  2FB1               	goto	u4470
  3263  0FB0                     u4471:
  3264  0FB0  2FEA               	goto	l3043
  3265  0FB1                     u4470:
  3266  0FB1                     l3041:
  3267                           
  3268                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1139:       fval += fround((unsi
      +                          gned int)prec);
  3269  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  3270  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  3271  0FB3  0836               	movf	sprintf@prec^(0+128),w
  3272  0FB4  120A  118A  20EF  120A  158A  	fcall	_fround
  3273  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  3274  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  3275  0FBB  0838               	movf	?_fround,w
  3276  0FBC  00C8               	movwf	___ftadd@f1
  3277  0FBD  0839               	movf	?_fround+1,w
  3278  0FBE  00C9               	movwf	___ftadd@f1+1
  3279  0FBF  083A               	movf	?_fround+2,w
  3280  0FC0  00CA               	movwf	___ftadd@f1+2
  3281  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  3282  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  3283  0FC3  0833               	movf	sprintf@fval^(0+128),w
  3284  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  3286  0FC6  00CB               	movwf	___ftadd@f2
  3287  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  3288  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  3289  0FC9  0834               	movf	(sprintf@fval+1)^(0+128),w
  3290  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3291  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3292  0FCC  00CC               	movwf	___ftadd@f2+1
  3293  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  3294  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  3295  0FCF  0835               	movf	(sprintf@fval+2)^(0+128),w
  3296  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  3298  0FD2  00CD               	movwf	___ftadd@f2+2
  3299  0FD3  120A  158A  214F  120A  158A  	fcall	___ftadd
  3300  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  3301  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  3302  0FDA  0848               	movf	?___ftadd,w
  3303  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3304  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  3305  0FDD  00B3               	movwf	sprintf@fval^(0+128)
  3306  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  3307  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  3308  0FE0  0849               	movf	?___ftadd+1,w
  3309  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  3310  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  3311  0FE3  00B4               	movwf	(sprintf@fval+1)^(0+128)
  3312  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  3314  0FE6  084A               	movf	?___ftadd+2,w
  3315  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  3316  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  3317  0FE9  00B5               	movwf	(sprintf@fval+2)^(0+128)
  3318  0FEA                     l3043:
  3319                           
  3320                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1142:     if((eexp > 9)||(fval !
      +                          = 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3321  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  3322  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  3323  0FEC  0831               	movf	(sprintf@eexp+1)^(0+128),w
  3324  0FED  3A80               	xorlw	128
  3325  0FEE  00FF               	movwf	btemp+1
  3326  0FEF  3080               	movlw	128
  3327  0FF0  027F               	subwf	btemp+1,w
  3328  0FF1  1D03               	skipz
  3329  0FF2  2FF5               	goto	u4485
  3330  0FF3  300A               	movlw	10
  3331  0FF4  0230               	subwf	sprintf@eexp^(0+128),w
  3332  0FF5                     u4485:
  3333  0FF5  1803               	skipnc
  3334  0FF6  2FFA               	goto	u4481
  3335  0FF7  120A  118A  2A90   	goto	u4480
  3336  0FFA                     u4481:
  3337  0FFA  120A  118A  2AC7   	goto	l3051
  3338  0FFD                     L3:
  3339  0FFD                     L2:
  3340  0FFD  120A  118A  2FCD   	ljmp	l3199
  3341                           
  3342                           	psect	text7
  3343  0A85                     __ptext7:	
  3344 ;; *************** function _scale *****************
  3345 ;; Defined at:
  3346 ;;		line 433 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  scl             1    wreg     char 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  scl             1   32[BANK0 ] char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  3   24[BANK0 ] char 
  3353 ;; Registers used:
  3354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3360 ;;      Params:         0       3       0       0       0
  3361 ;;      Locals:         0       4       0       0       0
  3362 ;;      Temps:          0       2       0       0       0
  3363 ;;      Totals:         0       9       0       0       0
  3364 ;;Total ram usage:        9 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    2
  3367 ;; This function calls:
  3368 ;;		___awdiv
  3369 ;;		___awmod
  3370 ;;		___bmul
  3371 ;;		___ftmul
  3372 ;; This function is called by:
  3373 ;;		_sprintf
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           
  3378                           ;psect for function _scale
  3379  0A85                     _scale:
  3380                           
  3381                           ;incstack = 0
  3382                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3383                           ;scale@scl stored from wreg
  3384  0A85  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0A86  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0A87  00C0               	movwf	scale@scl
  3387  0A88                     l2507:
  3388                           
  3389                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 433: scale(signed char scl);D:\M
      +                          PLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 434: {;D:\MPLAB XC8 compiler\pic\sour
      +                          ces\c90\common\doprnt.c: 436:  if(scl < 0) {
  3390  0A88  1FC0               	btfss	scale@scl,7
  3391  0A89  2A8B               	goto	u3421
  3392  0A8A  2A8C               	goto	u3420
  3393  0A8B                     u3421:
  3394  0A8B  2BDF               	goto	l2529
  3395  0A8C                     u3420:
  3396  0A8C                     l2509:
  3397                           
  3398                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 437:   scl = -scl;
  3399  0A8C  09C0               	comf	scale@scl,f
  3400  0A8D  0AC0               	incf	scale@scl,f
  3401  0A8E                     l2511:
  3402                           
  3403                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 438:   if(scl>=110)
  3404  0A8E  0840               	movf	scale@scl,w
  3405  0A8F  3A80               	xorlw	128
  3406  0A90  3E12               	addlw	-238
  3407  0A91  1C03               	skipc
  3408  0A92  2A94               	goto	u3431
  3409  0A93  2A95               	goto	u3430
  3410  0A94                     u3431:
  3411  0A94  2B4D               	goto	l2519
  3412  0A95                     u3430:
  3413  0A95                     l2513:
  3414                           
  3415                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsign
      +                          ed char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigned
      +                           char)(scl%10)];
  3416  0A95  3003               	movlw	3
  3417  0A96  00BB               	movwf	??_scale
  3418  0A97  083B               	movf	??_scale,w
  3419  0A98  00A4               	movwf	___bmul@multiplicand
  3420  0A99  0840               	movf	scale@scl,w
  3421  0A9A  00F2               	movwf	___awmod@dividend
  3422  0A9B  01F3               	clrf	___awmod@dividend+1
  3423  0A9C  1BF2               	btfsc	___awmod@dividend,7
  3424  0A9D  03F3               	decf	___awmod@dividend+1,f
  3425  0A9E  3064               	movlw	100
  3426  0A9F  00F0               	movwf	___awmod@divisor
  3427  0AA0  3000               	movlw	0
  3428  0AA1  00F1               	movwf	___awmod@divisor+1
  3429  0AA2  160A  118A  20DA  120A  158A  	fcall	___awmod
  3430  0AA7  0871               	movf	?___awmod+1,w
  3431  0AA8  00FA               	movwf	___awdiv@dividend+1
  3432  0AA9  0870               	movf	?___awmod,w
  3433  0AAA  00F9               	movwf	___awdiv@dividend
  3434  0AAB  300A               	movlw	10
  3435  0AAC  00F7               	movwf	___awdiv@divisor
  3436  0AAD  3000               	movlw	0
  3437  0AAE  00F8               	movwf	___awdiv@divisor+1
  3438  0AAF  160A  118A  21F6  120A  158A  	fcall	___awdiv
  3439  0AB4  0877               	movf	?___awdiv,w
  3440  0AB5  120A  158A  200C  120A  158A  	fcall	___bmul
  3441  0ABA  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3442  0ABB  0084               	movwf	4
  3443  0ABC  160A  118A  2000  120A  158A  	fcall	stringdir
  3444  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  3445  0AC2  1303               	bcf	3,6	;RP1=0, select bank0
  3446  0AC3  00A8               	movwf	___ftmul@f1
  3447  0AC4  160A  118A  2000  120A  158A  	fcall	stringdir
  3448  0AC9  00A9               	movwf	___ftmul@f1+1
  3449  0ACA  160A  118A  2000  120A  158A  	fcall	stringdir
  3450  0ACF  00AA               	movwf	___ftmul@f1+2
  3451  0AD0  3003               	movlw	3
  3452  0AD1  00BC               	movwf	??_scale+1
  3453  0AD2  083C               	movf	??_scale+1,w
  3454  0AD3  00A4               	movwf	___bmul@multiplicand
  3455  0AD4  0840               	movf	scale@scl,w
  3456  0AD5  00F9               	movwf	___awdiv@dividend
  3457  0AD6  01FA               	clrf	___awdiv@dividend+1
  3458  0AD7  1BF9               	btfsc	___awdiv@dividend,7
  3459  0AD8  03FA               	decf	___awdiv@dividend+1,f
  3460  0AD9  3064               	movlw	100
  3461  0ADA  00F7               	movwf	___awdiv@divisor
  3462  0ADB  3000               	movlw	0
  3463  0ADC  00F8               	movwf	___awdiv@divisor+1
  3464  0ADD  160A  118A  21F6  120A  158A  	fcall	___awdiv
  3465  0AE2  0877               	movf	?___awdiv,w
  3466  0AE3  120A  158A  200C  120A  158A  	fcall	___bmul
  3467  0AE8  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3468  0AE9  0084               	movwf	4
  3469  0AEA  160A  118A  2000  120A  158A  	fcall	stringdir
  3470  0AEF  1283               	bcf	3,5	;RP0=0, select bank0
  3471  0AF0  1303               	bcf	3,6	;RP1=0, select bank0
  3472  0AF1  00AB               	movwf	___ftmul@f2
  3473  0AF2  160A  118A  2000  120A  158A  	fcall	stringdir
  3474  0AF7  00AC               	movwf	___ftmul@f2+1
  3475  0AF8  160A  118A  2000  120A  158A  	fcall	stringdir
  3476  0AFD  00AD               	movwf	___ftmul@f2+2
  3477  0AFE  120A  118A  200A  120A  158A  	fcall	___ftmul
  3478  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  3479  0B04  1303               	bcf	3,6	;RP1=0, select bank0
  3480  0B05  0828               	movf	?___ftmul,w
  3481  0B06  00BD               	movwf	_scale$1069
  3482  0B07  0829               	movf	?___ftmul+1,w
  3483  0B08  00BE               	movwf	_scale$1069+1
  3484  0B09  082A               	movf	?___ftmul+2,w
  3485  0B0A  00BF               	movwf	_scale$1069+2
  3486                           
  3487                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsign
      +                          ed char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigned
      +                           char)(scl%10)];
  3488  0B0B  3003               	movlw	3
  3489  0B0C  00BB               	movwf	??_scale
  3490  0B0D  083B               	movf	??_scale,w
  3491  0B0E  00A4               	movwf	___bmul@multiplicand
  3492  0B0F  0840               	movf	scale@scl,w
  3493  0B10  00F2               	movwf	___awmod@dividend
  3494  0B11  01F3               	clrf	___awmod@dividend+1
  3495  0B12  1BF2               	btfsc	___awmod@dividend,7
  3496  0B13  03F3               	decf	___awmod@dividend+1,f
  3497  0B14  300A               	movlw	10
  3498  0B15  00F0               	movwf	___awmod@divisor
  3499  0B16  3000               	movlw	0
  3500  0B17  00F1               	movwf	___awmod@divisor+1
  3501  0B18  160A  118A  20DA  120A  158A  	fcall	___awmod
  3502  0B1D  0870               	movf	?___awmod,w
  3503  0B1E  120A  158A  200C  120A  158A  	fcall	___bmul
  3504  0B23  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3505  0B24  0084               	movwf	4
  3506  0B25  160A  118A  2000  120A  158A  	fcall	stringdir
  3507  0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  3508  0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  3509  0B2C  00A8               	movwf	___ftmul@f1
  3510  0B2D  160A  118A  2000  120A  158A  	fcall	stringdir
  3511  0B32  00A9               	movwf	___ftmul@f1+1
  3512  0B33  160A  118A  2000  120A  158A  	fcall	stringdir
  3513  0B38  00AA               	movwf	___ftmul@f1+2
  3514  0B39  083D               	movf	_scale$1069,w
  3515  0B3A  00AB               	movwf	___ftmul@f2
  3516  0B3B  083E               	movf	_scale$1069+1,w
  3517  0B3C  00AC               	movwf	___ftmul@f2+1
  3518  0B3D  083F               	movf	_scale$1069+2,w
  3519  0B3E  00AD               	movwf	___ftmul@f2+2
  3520  0B3F  120A  118A  200A  120A  158A  	fcall	___ftmul
  3521  0B44  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0B45  1303               	bcf	3,6	;RP1=0, select bank0
  3523  0B46  0828               	movf	?___ftmul,w
  3524  0B47  00B8               	movwf	?_scale
  3525  0B48  0829               	movf	?___ftmul+1,w
  3526  0B49  00B9               	movwf	?_scale+1
  3527  0B4A  082A               	movf	?___ftmul+2,w
  3528  0B4B  00BA               	movwf	?_scale+2
  3529  0B4C  2D2F               	goto	l320
  3530  0B4D                     l2519:
  3531  0B4D  0840               	movf	scale@scl,w
  3532  0B4E  3A80               	xorlw	128
  3533  0B4F  3E75               	addlw	-139
  3534  0B50  1C03               	skipc
  3535  0B51  2B53               	goto	u3441
  3536  0B52  2B54               	goto	u3440
  3537  0B53                     u3441:
  3538  0B53  2BBE               	goto	l2525
  3539  0B54                     u3440:
  3540  0B54                     l2521:
  3541                           
  3542                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 441:    return _npowers_[(unsign
      +                          ed char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3543  0B54  3003               	movlw	3
  3544  0B55  00BB               	movwf	??_scale
  3545  0B56  083B               	movf	??_scale,w
  3546  0B57  00A4               	movwf	___bmul@multiplicand
  3547  0B58  0840               	movf	scale@scl,w
  3548  0B59  00F2               	movwf	___awmod@dividend
  3549  0B5A  01F3               	clrf	___awmod@dividend+1
  3550  0B5B  1BF2               	btfsc	___awmod@dividend,7
  3551  0B5C  03F3               	decf	___awmod@dividend+1,f
  3552  0B5D  300A               	movlw	10
  3553  0B5E  00F0               	movwf	___awmod@divisor
  3554  0B5F  3000               	movlw	0
  3555  0B60  00F1               	movwf	___awmod@divisor+1
  3556  0B61  160A  118A  20DA  120A  158A  	fcall	___awmod
  3557  0B66  0870               	movf	?___awmod,w
  3558  0B67  120A  158A  200C  120A  158A  	fcall	___bmul
  3559  0B6C  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3560  0B6D  0084               	movwf	4
  3561  0B6E  160A  118A  2000  120A  158A  	fcall	stringdir
  3562  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  3563  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  3564  0B75  00A8               	movwf	___ftmul@f1
  3565  0B76  160A  118A  2000  120A  158A  	fcall	stringdir
  3566  0B7B  00A9               	movwf	___ftmul@f1+1
  3567  0B7C  160A  118A  2000  120A  158A  	fcall	stringdir
  3568  0B81  00AA               	movwf	___ftmul@f1+2
  3569  0B82  3003               	movlw	3
  3570  0B83  00BC               	movwf	??_scale+1
  3571  0B84  083C               	movf	??_scale+1,w
  3572  0B85  00A4               	movwf	___bmul@multiplicand
  3573  0B86  0840               	movf	scale@scl,w
  3574  0B87  00F9               	movwf	___awdiv@dividend
  3575  0B88  01FA               	clrf	___awdiv@dividend+1
  3576  0B89  1BF9               	btfsc	___awdiv@dividend,7
  3577  0B8A  03FA               	decf	___awdiv@dividend+1,f
  3578  0B8B  300A               	movlw	10
  3579  0B8C  00F7               	movwf	___awdiv@divisor
  3580  0B8D  3000               	movlw	0
  3581  0B8E  00F8               	movwf	___awdiv@divisor+1
  3582  0B8F  160A  118A  21F6  120A  158A  	fcall	___awdiv
  3583  0B94  0877               	movf	?___awdiv,w
  3584  0B95  120A  158A  200C  120A  158A  	fcall	___bmul
  3585  0B9A  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3586  0B9B  0084               	movwf	4
  3587  0B9C  160A  118A  2000  120A  158A  	fcall	stringdir
  3588  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  3589  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  3590  0BA3  00AB               	movwf	___ftmul@f2
  3591  0BA4  160A  118A  2000  120A  158A  	fcall	stringdir
  3592  0BA9  00AC               	movwf	___ftmul@f2+1
  3593  0BAA  160A  118A  2000  120A  158A  	fcall	stringdir
  3594  0BAF  00AD               	movwf	___ftmul@f2+2
  3595  0BB0  120A  118A  200A  120A  158A  	fcall	___ftmul
  3596  0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  3597  0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  3598  0BB7  0828               	movf	?___ftmul,w
  3599  0BB8  00B8               	movwf	?_scale
  3600  0BB9  0829               	movf	?___ftmul+1,w
  3601  0BBA  00B9               	movwf	?_scale+1
  3602  0BBB  082A               	movf	?___ftmul+2,w
  3603  0BBC  00BA               	movwf	?_scale+2
  3604  0BBD  2D2F               	goto	l320
  3605  0BBE                     l2525:
  3606                           
  3607                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 442:   return _npowers_[(unsigne
      +                          d char)scl];
  3608  0BBE  3003               	movlw	3
  3609  0BBF  00BB               	movwf	??_scale
  3610  0BC0  083B               	movf	??_scale,w
  3611  0BC1  00A4               	movwf	___bmul@multiplicand
  3612  0BC2  0840               	movf	scale@scl,w
  3613  0BC3  120A  158A  200C  120A  158A  	fcall	___bmul
  3614  0BC8  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3615  0BC9  0084               	movwf	4
  3616  0BCA  160A  118A  2000  120A  158A  	fcall	stringdir
  3617  0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  3618  0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  3619  0BD1  00B8               	movwf	?_scale
  3620  0BD2  160A  118A  2000  120A  158A  	fcall	stringdir
  3621  0BD7  00B9               	movwf	?_scale+1
  3622  0BD8  160A  118A  2000  120A  158A  	fcall	stringdir
  3623  0BDD  00BA               	movwf	?_scale+2
  3624  0BDE  2D2F               	goto	l320
  3625  0BDF                     l2529:
  3626                           
  3627                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110)
  3628  0BDF  0840               	movf	scale@scl,w
  3629  0BE0  3A80               	xorlw	128
  3630  0BE1  3E12               	addlw	-238
  3631  0BE2  1C03               	skipc
  3632  0BE3  2BE5               	goto	u3451
  3633  0BE4  2BE6               	goto	u3450
  3634  0BE5                     u3451:
  3635  0BE5  2C9E               	goto	l2537
  3636  0BE6                     u3450:
  3637  0BE6                     l2531:
  3638                           
  3639                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigned
      +                           char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned cha
      +                          r)(scl%10)];
  3640  0BE6  3003               	movlw	3
  3641  0BE7  00BB               	movwf	??_scale
  3642  0BE8  083B               	movf	??_scale,w
  3643  0BE9  00A4               	movwf	___bmul@multiplicand
  3644  0BEA  0840               	movf	scale@scl,w
  3645  0BEB  00F2               	movwf	___awmod@dividend
  3646  0BEC  01F3               	clrf	___awmod@dividend+1
  3647  0BED  1BF2               	btfsc	___awmod@dividend,7
  3648  0BEE  03F3               	decf	___awmod@dividend+1,f
  3649  0BEF  3064               	movlw	100
  3650  0BF0  00F0               	movwf	___awmod@divisor
  3651  0BF1  3000               	movlw	0
  3652  0BF2  00F1               	movwf	___awmod@divisor+1
  3653  0BF3  160A  118A  20DA  120A  158A  	fcall	___awmod
  3654  0BF8  0871               	movf	?___awmod+1,w
  3655  0BF9  00FA               	movwf	___awdiv@dividend+1
  3656  0BFA  0870               	movf	?___awmod,w
  3657  0BFB  00F9               	movwf	___awdiv@dividend
  3658  0BFC  300A               	movlw	10
  3659  0BFD  00F7               	movwf	___awdiv@divisor
  3660  0BFE  3000               	movlw	0
  3661  0BFF  00F8               	movwf	___awdiv@divisor+1
  3662  0C00  160A  118A  21F6  120A  158A  	fcall	___awdiv
  3663  0C05  0877               	movf	?___awdiv,w
  3664  0C06  120A  158A  200C  120A  158A  	fcall	___bmul
  3665  0C0B  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3666  0C0C  0084               	movwf	4
  3667  0C0D  160A  118A  2000  120A  158A  	fcall	stringdir
  3668  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  3669  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  3670  0C14  00A8               	movwf	___ftmul@f1
  3671  0C15  160A  118A  2000  120A  158A  	fcall	stringdir
  3672  0C1A  00A9               	movwf	___ftmul@f1+1
  3673  0C1B  160A  118A  2000  120A  158A  	fcall	stringdir
  3674  0C20  00AA               	movwf	___ftmul@f1+2
  3675  0C21  3003               	movlw	3
  3676  0C22  00BC               	movwf	??_scale+1
  3677  0C23  083C               	movf	??_scale+1,w
  3678  0C24  00A4               	movwf	___bmul@multiplicand
  3679  0C25  0840               	movf	scale@scl,w
  3680  0C26  00F9               	movwf	___awdiv@dividend
  3681  0C27  01FA               	clrf	___awdiv@dividend+1
  3682  0C28  1BF9               	btfsc	___awdiv@dividend,7
  3683  0C29  03FA               	decf	___awdiv@dividend+1,f
  3684  0C2A  3064               	movlw	100
  3685  0C2B  00F7               	movwf	___awdiv@divisor
  3686  0C2C  3000               	movlw	0
  3687  0C2D  00F8               	movwf	___awdiv@divisor+1
  3688  0C2E  160A  118A  21F6  120A  158A  	fcall	___awdiv
  3689  0C33  0877               	movf	?___awdiv,w
  3690  0C34  120A  158A  200C  120A  158A  	fcall	___bmul
  3691  0C39  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  3692  0C3A  0084               	movwf	4
  3693  0C3B  160A  118A  2000  120A  158A  	fcall	stringdir
  3694  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  3695  0C41  1303               	bcf	3,6	;RP1=0, select bank0
  3696  0C42  00AB               	movwf	___ftmul@f2
  3697  0C43  160A  118A  2000  120A  158A  	fcall	stringdir
  3698  0C48  00AC               	movwf	___ftmul@f2+1
  3699  0C49  160A  118A  2000  120A  158A  	fcall	stringdir
  3700  0C4E  00AD               	movwf	___ftmul@f2+2
  3701  0C4F  120A  118A  200A  120A  158A  	fcall	___ftmul
  3702  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  3703  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  3704  0C56  0828               	movf	?___ftmul,w
  3705  0C57  00BD               	movwf	_scale$1069
  3706  0C58  0829               	movf	?___ftmul+1,w
  3707  0C59  00BE               	movwf	_scale$1069+1
  3708  0C5A  082A               	movf	?___ftmul+2,w
  3709  0C5B  00BF               	movwf	_scale$1069+2
  3710                           
  3711                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigned
      +                           char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned cha
      +                          r)(scl%10)];
  3712  0C5C  3003               	movlw	3
  3713  0C5D  00BB               	movwf	??_scale
  3714  0C5E  083B               	movf	??_scale,w
  3715  0C5F  00A4               	movwf	___bmul@multiplicand
  3716  0C60  0840               	movf	scale@scl,w
  3717  0C61  00F2               	movwf	___awmod@dividend
  3718  0C62  01F3               	clrf	___awmod@dividend+1
  3719  0C63  1BF2               	btfsc	___awmod@dividend,7
  3720  0C64  03F3               	decf	___awmod@dividend+1,f
  3721  0C65  300A               	movlw	10
  3722  0C66  00F0               	movwf	___awmod@divisor
  3723  0C67  3000               	movlw	0
  3724  0C68  00F1               	movwf	___awmod@divisor+1
  3725  0C69  160A  118A  20DA  120A  158A  	fcall	___awmod
  3726  0C6E  0870               	movf	?___awmod,w
  3727  0C6F  120A  158A  200C  120A  158A  	fcall	___bmul
  3728  0C74  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3729  0C75  0084               	movwf	4
  3730  0C76  160A  118A  2000  120A  158A  	fcall	stringdir
  3731  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  3732  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  3733  0C7D  00A8               	movwf	___ftmul@f1
  3734  0C7E  160A  118A  2000  120A  158A  	fcall	stringdir
  3735  0C83  00A9               	movwf	___ftmul@f1+1
  3736  0C84  160A  118A  2000  120A  158A  	fcall	stringdir
  3737  0C89  00AA               	movwf	___ftmul@f1+2
  3738  0C8A  083D               	movf	_scale$1069,w
  3739  0C8B  00AB               	movwf	___ftmul@f2
  3740  0C8C  083E               	movf	_scale$1069+1,w
  3741  0C8D  00AC               	movwf	___ftmul@f2+1
  3742  0C8E  083F               	movf	_scale$1069+2,w
  3743  0C8F  00AD               	movwf	___ftmul@f2+2
  3744  0C90  120A  118A  200A  120A  158A  	fcall	___ftmul
  3745  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  3746  0C96  1303               	bcf	3,6	;RP1=0, select bank0
  3747  0C97  0828               	movf	?___ftmul,w
  3748  0C98  00B8               	movwf	?_scale
  3749  0C99  0829               	movf	?___ftmul+1,w
  3750  0C9A  00B9               	movwf	?_scale+1
  3751  0C9B  082A               	movf	?___ftmul+2,w
  3752  0C9C  00BA               	movwf	?_scale+2
  3753  0C9D  2D2F               	goto	l320
  3754  0C9E                     l2537:
  3755  0C9E  0840               	movf	scale@scl,w
  3756  0C9F  3A80               	xorlw	128
  3757  0CA0  3E75               	addlw	-139
  3758  0CA1  1C03               	skipc
  3759  0CA2  2CA4               	goto	u3461
  3760  0CA3  2CA5               	goto	u3460
  3761  0CA4                     u3461:
  3762  0CA4  2D0F               	goto	l2543
  3763  0CA5                     u3460:
  3764  0CA5                     l2539:
  3765                           
  3766                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 447:   return _powers_[(unsigned
      +                           char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3767  0CA5  3003               	movlw	3
  3768  0CA6  00BB               	movwf	??_scale
  3769  0CA7  083B               	movf	??_scale,w
  3770  0CA8  00A4               	movwf	___bmul@multiplicand
  3771  0CA9  0840               	movf	scale@scl,w
  3772  0CAA  00F2               	movwf	___awmod@dividend
  3773  0CAB  01F3               	clrf	___awmod@dividend+1
  3774  0CAC  1BF2               	btfsc	___awmod@dividend,7
  3775  0CAD  03F3               	decf	___awmod@dividend+1,f
  3776  0CAE  300A               	movlw	10
  3777  0CAF  00F0               	movwf	___awmod@divisor
  3778  0CB0  3000               	movlw	0
  3779  0CB1  00F1               	movwf	___awmod@divisor+1
  3780  0CB2  160A  118A  20DA  120A  158A  	fcall	___awmod
  3781  0CB7  0870               	movf	?___awmod,w
  3782  0CB8  120A  158A  200C  120A  158A  	fcall	___bmul
  3783  0CBD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3784  0CBE  0084               	movwf	4
  3785  0CBF  160A  118A  2000  120A  158A  	fcall	stringdir
  3786  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  3787  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  3788  0CC6  00A8               	movwf	___ftmul@f1
  3789  0CC7  160A  118A  2000  120A  158A  	fcall	stringdir
  3790  0CCC  00A9               	movwf	___ftmul@f1+1
  3791  0CCD  160A  118A  2000  120A  158A  	fcall	stringdir
  3792  0CD2  00AA               	movwf	___ftmul@f1+2
  3793  0CD3  3003               	movlw	3
  3794  0CD4  00BC               	movwf	??_scale+1
  3795  0CD5  083C               	movf	??_scale+1,w
  3796  0CD6  00A4               	movwf	___bmul@multiplicand
  3797  0CD7  0840               	movf	scale@scl,w
  3798  0CD8  00F9               	movwf	___awdiv@dividend
  3799  0CD9  01FA               	clrf	___awdiv@dividend+1
  3800  0CDA  1BF9               	btfsc	___awdiv@dividend,7
  3801  0CDB  03FA               	decf	___awdiv@dividend+1,f
  3802  0CDC  300A               	movlw	10
  3803  0CDD  00F7               	movwf	___awdiv@divisor
  3804  0CDE  3000               	movlw	0
  3805  0CDF  00F8               	movwf	___awdiv@divisor+1
  3806  0CE0  160A  118A  21F6  120A  158A  	fcall	___awdiv
  3807  0CE5  0877               	movf	?___awdiv,w
  3808  0CE6  120A  158A  200C  120A  158A  	fcall	___bmul
  3809  0CEB  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3810  0CEC  0084               	movwf	4
  3811  0CED  160A  118A  2000  120A  158A  	fcall	stringdir
  3812  0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  3813  0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  3814  0CF4  00AB               	movwf	___ftmul@f2
  3815  0CF5  160A  118A  2000  120A  158A  	fcall	stringdir
  3816  0CFA  00AC               	movwf	___ftmul@f2+1
  3817  0CFB  160A  118A  2000  120A  158A  	fcall	stringdir
  3818  0D00  00AD               	movwf	___ftmul@f2+2
  3819  0D01  120A  118A  200A  120A  158A  	fcall	___ftmul
  3820  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3821  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3822  0D08  0828               	movf	?___ftmul,w
  3823  0D09  00B8               	movwf	?_scale
  3824  0D0A  0829               	movf	?___ftmul+1,w
  3825  0D0B  00B9               	movwf	?_scale+1
  3826  0D0C  082A               	movf	?___ftmul+2,w
  3827  0D0D  00BA               	movwf	?_scale+2
  3828  0D0E  2D2F               	goto	l320
  3829  0D0F                     l2543:
  3830                           
  3831                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 448:  return _powers_[(unsigned 
      +                          char)scl];
  3832  0D0F  3003               	movlw	3
  3833  0D10  00BB               	movwf	??_scale
  3834  0D11  083B               	movf	??_scale,w
  3835  0D12  00A4               	movwf	___bmul@multiplicand
  3836  0D13  0840               	movf	scale@scl,w
  3837  0D14  120A  158A  200C  120A  158A  	fcall	___bmul
  3838  0D19  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3839  0D1A  0084               	movwf	4
  3840  0D1B  160A  118A  2000  120A  158A  	fcall	stringdir
  3841  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  3842  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  3843  0D22  00B8               	movwf	?_scale
  3844  0D23  160A  118A  2000  120A  158A  	fcall	stringdir
  3845  0D28  00B9               	movwf	?_scale+1
  3846  0D29  160A  118A  2000  120A  158A  	fcall	stringdir
  3847  0D2E  00BA               	movwf	?_scale+2
  3848  0D2F                     l320:
  3849  0D2F  0008               	return
  3850  0D30                     __end_of_scale:
  3851                           
  3852                           	psect	text8
  3853  10DA                     __ptext8:	
  3854 ;; *************** function ___awmod *****************
  3855 ;; Defined at:
  3856 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\awmod.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  divisor         2    0[COMMON] int 
  3859 ;;  dividend        2    2[COMMON] int 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;  sign            1    6[COMMON] unsigned char 
  3862 ;;  counter         1    5[COMMON] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  2    0[COMMON] int 
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3872 ;;      Params:         4       0       0       0       0
  3873 ;;      Locals:         2       0       0       0       0
  3874 ;;      Temps:          1       0       0       0       0
  3875 ;;      Totals:         7       0       0       0       0
  3876 ;;Total ram usage:        7 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; This function calls:
  3879 ;;		Nothing
  3880 ;; This function is called by:
  3881 ;;		_scale
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           
  3886                           ;psect for function ___awmod
  3887  10DA                     ___awmod:
  3888  10DA                     l2249:	
  3889                           ;incstack = 0
  3890                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3891                           
  3892  10DA  01F6               	clrf	___awmod@sign
  3893  10DB                     l2251:
  3894  10DB  1FF3               	btfss	___awmod@dividend+1,7
  3895  10DC  28DE               	goto	u2711
  3896  10DD  28DF               	goto	u2710
  3897  10DE                     u2711:
  3898  10DE  28E6               	goto	l2257
  3899  10DF                     u2710:
  3900  10DF                     l2253:
  3901  10DF  09F2               	comf	___awmod@dividend,f
  3902  10E0  09F3               	comf	___awmod@dividend+1,f
  3903  10E1  0AF2               	incf	___awmod@dividend,f
  3904  10E2  1903               	skipnz
  3905  10E3  0AF3               	incf	___awmod@dividend+1,f
  3906  10E4                     l2255:
  3907  10E4  01F6               	clrf	___awmod@sign
  3908  10E5  0AF6               	incf	___awmod@sign,f
  3909  10E6                     l2257:
  3910  10E6  1FF1               	btfss	___awmod@divisor+1,7
  3911  10E7  28E9               	goto	u2721
  3912  10E8  28EA               	goto	u2720
  3913  10E9                     u2721:
  3914  10E9  28EF               	goto	l2261
  3915  10EA                     u2720:
  3916  10EA                     l2259:
  3917  10EA  09F0               	comf	___awmod@divisor,f
  3918  10EB  09F1               	comf	___awmod@divisor+1,f
  3919  10EC  0AF0               	incf	___awmod@divisor,f
  3920  10ED  1903               	skipnz
  3921  10EE  0AF1               	incf	___awmod@divisor+1,f
  3922  10EF                     l2261:
  3923  10EF  0870               	movf	___awmod@divisor,w
  3924  10F0  0471               	iorwf	___awmod@divisor+1,w
  3925  10F1  1903               	btfsc	3,2
  3926  10F2  28F4               	goto	u2731
  3927  10F3  28F5               	goto	u2730
  3928  10F4                     u2731:
  3929  10F4  2924               	goto	l2279
  3930  10F5                     u2730:
  3931  10F5                     l2263:
  3932  10F5  01F5               	clrf	___awmod@counter
  3933  10F6  0AF5               	incf	___awmod@counter,f
  3934  10F7  2903               	goto	l2269
  3935  10F8                     l2265:
  3936  10F8  3001               	movlw	1
  3937  10F9                     u2745:
  3938  10F9  1003               	clrc
  3939  10FA  0DF0               	rlf	___awmod@divisor,f
  3940  10FB  0DF1               	rlf	___awmod@divisor+1,f
  3941  10FC  3EFF               	addlw	-1
  3942  10FD  1D03               	skipz
  3943  10FE  28F9               	goto	u2745
  3944  10FF                     l2267:
  3945  10FF  3001               	movlw	1
  3946  1100  00F4               	movwf	??___awmod
  3947  1101  0874               	movf	??___awmod,w
  3948  1102  07F5               	addwf	___awmod@counter,f
  3949  1103                     l2269:
  3950  1103  1FF1               	btfss	___awmod@divisor+1,7
  3951  1104  2906               	goto	u2751
  3952  1105  2907               	goto	u2750
  3953  1106                     u2751:
  3954  1106  28F8               	goto	l2265
  3955  1107                     u2750:
  3956  1107                     l2271:
  3957  1107  0871               	movf	___awmod@divisor+1,w
  3958  1108  0273               	subwf	___awmod@dividend+1,w
  3959  1109  1D03               	skipz
  3960  110A  290D               	goto	u2765
  3961  110B  0870               	movf	___awmod@divisor,w
  3962  110C  0272               	subwf	___awmod@dividend,w
  3963  110D                     u2765:
  3964  110D  1C03               	skipc
  3965  110E  2910               	goto	u2761
  3966  110F  2911               	goto	u2760
  3967  1110                     u2761:
  3968  1110  2917               	goto	l2275
  3969  1111                     u2760:
  3970  1111                     l2273:
  3971  1111  0870               	movf	___awmod@divisor,w
  3972  1112  02F2               	subwf	___awmod@dividend,f
  3973  1113  0871               	movf	___awmod@divisor+1,w
  3974  1114  1C03               	skipc
  3975  1115  03F3               	decf	___awmod@dividend+1,f
  3976  1116  02F3               	subwf	___awmod@dividend+1,f
  3977  1117                     l2275:
  3978  1117  3001               	movlw	1
  3979  1118                     u2775:
  3980  1118  1003               	clrc
  3981  1119  0CF1               	rrf	___awmod@divisor+1,f
  3982  111A  0CF0               	rrf	___awmod@divisor,f
  3983  111B  3EFF               	addlw	-1
  3984  111C  1D03               	skipz
  3985  111D  2918               	goto	u2775
  3986  111E                     l2277:
  3987  111E  3001               	movlw	1
  3988  111F  02F5               	subwf	___awmod@counter,f
  3989  1120  1D03               	btfss	3,2
  3990  1121  2923               	goto	u2781
  3991  1122  2924               	goto	u2780
  3992  1123                     u2781:
  3993  1123  2907               	goto	l2271
  3994  1124                     u2780:
  3995  1124                     l2279:
  3996  1124  0876               	movf	___awmod@sign,w
  3997  1125  1903               	btfsc	3,2
  3998  1126  2928               	goto	u2791
  3999  1127  2929               	goto	u2790
  4000  1128                     u2791:
  4001  1128  292E               	goto	l2283
  4002  1129                     u2790:
  4003  1129                     l2281:
  4004  1129  09F2               	comf	___awmod@dividend,f
  4005  112A  09F3               	comf	___awmod@dividend+1,f
  4006  112B  0AF2               	incf	___awmod@dividend,f
  4007  112C  1903               	skipnz
  4008  112D  0AF3               	incf	___awmod@dividend+1,f
  4009  112E                     l2283:
  4010  112E  0873               	movf	___awmod@dividend+1,w
  4011  112F  00F1               	movwf	?___awmod+1
  4012  1130  0872               	movf	___awmod@dividend,w
  4013  1131  00F0               	movwf	?___awmod
  4014  1132                     l603:
  4015  1132  0008               	return
  4016  1133                     __end_of___awmod:
  4017                           
  4018                           	psect	text9
  4019  11F6                     __ptext9:	
  4020 ;; *************** function ___awdiv *****************
  4021 ;; Defined at:
  4022 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\awdiv.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  divisor         2    7[COMMON] int 
  4025 ;;  dividend        2    9[COMMON] int 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  quotient        2    2[BANK0 ] int 
  4028 ;;  sign            1    1[BANK0 ] unsigned char 
  4029 ;;  counter         1    0[BANK0 ] unsigned char 
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  2    7[COMMON] int 
  4032 ;; Registers used:
  4033 ;;		wreg, status,2, status,0
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4039 ;;      Params:         4       0       0       0       0
  4040 ;;      Locals:         0       4       0       0       0
  4041 ;;      Temps:          1       0       0       0       0
  4042 ;;      Totals:         5       4       0       0       0
  4043 ;;Total ram usage:        9 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; This function calls:
  4046 ;;		Nothing
  4047 ;; This function is called by:
  4048 ;;		_scale
  4049 ;;		_sprintf
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           
  4054                           ;psect for function ___awdiv
  4055  11F6                     ___awdiv:
  4056  11F6                     l2205:	
  4057                           ;incstack = 0
  4058                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4059                           
  4060  11F6  1283               	bcf	3,5	;RP0=0, select bank0
  4061  11F7  1303               	bcf	3,6	;RP1=0, select bank0
  4062  11F8  01A1               	clrf	___awdiv@sign
  4063  11F9                     l2207:
  4064  11F9  1FF8               	btfss	___awdiv@divisor+1,7
  4065  11FA  29FC               	goto	u2611
  4066  11FB  29FD               	goto	u2610
  4067  11FC                     u2611:
  4068  11FC  2A04               	goto	l2213
  4069  11FD                     u2610:
  4070  11FD                     l2209:
  4071  11FD  09F7               	comf	___awdiv@divisor,f
  4072  11FE  09F8               	comf	___awdiv@divisor+1,f
  4073  11FF  0AF7               	incf	___awdiv@divisor,f
  4074  1200  1903               	skipnz
  4075  1201  0AF8               	incf	___awdiv@divisor+1,f
  4076  1202                     l2211:
  4077  1202  01A1               	clrf	___awdiv@sign
  4078  1203  0AA1               	incf	___awdiv@sign,f
  4079  1204                     l2213:
  4080  1204  1FFA               	btfss	___awdiv@dividend+1,7
  4081  1205  2A07               	goto	u2621
  4082  1206  2A08               	goto	u2620
  4083  1207                     u2621:
  4084  1207  2A11               	goto	l2219
  4085  1208                     u2620:
  4086  1208                     l2215:
  4087  1208  09F9               	comf	___awdiv@dividend,f
  4088  1209  09FA               	comf	___awdiv@dividend+1,f
  4089  120A  0AF9               	incf	___awdiv@dividend,f
  4090  120B  1903               	skipnz
  4091  120C  0AFA               	incf	___awdiv@dividend+1,f
  4092  120D                     l2217:
  4093  120D  3001               	movlw	1
  4094  120E  00FB               	movwf	??___awdiv
  4095  120F  087B               	movf	??___awdiv,w
  4096  1210  06A1               	xorwf	___awdiv@sign,f
  4097  1211                     l2219:
  4098  1211  01A2               	clrf	___awdiv@quotient
  4099  1212  01A3               	clrf	___awdiv@quotient+1
  4100  1213                     l2221:
  4101  1213  0877               	movf	___awdiv@divisor,w
  4102  1214  0478               	iorwf	___awdiv@divisor+1,w
  4103  1215  1903               	btfsc	3,2
  4104  1216  2A18               	goto	u2631
  4105  1217  2A19               	goto	u2630
  4106  1218                     u2631:
  4107  1218  2A50               	goto	l2241
  4108  1219                     u2630:
  4109  1219                     l2223:
  4110  1219  01A0               	clrf	___awdiv@counter
  4111  121A  0AA0               	incf	___awdiv@counter,f
  4112  121B  2A27               	goto	l2229
  4113  121C                     l2225:
  4114  121C  3001               	movlw	1
  4115  121D                     u2645:
  4116  121D  1003               	clrc
  4117  121E  0DF7               	rlf	___awdiv@divisor,f
  4118  121F  0DF8               	rlf	___awdiv@divisor+1,f
  4119  1220  3EFF               	addlw	-1
  4120  1221  1D03               	skipz
  4121  1222  2A1D               	goto	u2645
  4122  1223                     l2227:
  4123  1223  3001               	movlw	1
  4124  1224  00FB               	movwf	??___awdiv
  4125  1225  087B               	movf	??___awdiv,w
  4126  1226  07A0               	addwf	___awdiv@counter,f
  4127  1227                     l2229:
  4128  1227  1FF8               	btfss	___awdiv@divisor+1,7
  4129  1228  2A2A               	goto	u2651
  4130  1229  2A2B               	goto	u2650
  4131  122A                     u2651:
  4132  122A  2A1C               	goto	l2225
  4133  122B                     u2650:
  4134  122B                     l2231:
  4135  122B  3001               	movlw	1
  4136  122C                     u2665:
  4137  122C  1003               	clrc
  4138  122D  0DA2               	rlf	___awdiv@quotient,f
  4139  122E  0DA3               	rlf	___awdiv@quotient+1,f
  4140  122F  3EFF               	addlw	-1
  4141  1230  1D03               	skipz
  4142  1231  2A2C               	goto	u2665
  4143  1232  0878               	movf	___awdiv@divisor+1,w
  4144  1233  027A               	subwf	___awdiv@dividend+1,w
  4145  1234  1D03               	skipz
  4146  1235  2A38               	goto	u2675
  4147  1236  0877               	movf	___awdiv@divisor,w
  4148  1237  0279               	subwf	___awdiv@dividend,w
  4149  1238                     u2675:
  4150  1238  1C03               	skipc
  4151  1239  2A3B               	goto	u2671
  4152  123A  2A3C               	goto	u2670
  4153  123B                     u2671:
  4154  123B  2A43               	goto	l2237
  4155  123C                     u2670:
  4156  123C                     l2233:
  4157  123C  0877               	movf	___awdiv@divisor,w
  4158  123D  02F9               	subwf	___awdiv@dividend,f
  4159  123E  0878               	movf	___awdiv@divisor+1,w
  4160  123F  1C03               	skipc
  4161  1240  03FA               	decf	___awdiv@dividend+1,f
  4162  1241  02FA               	subwf	___awdiv@dividend+1,f
  4163  1242                     l2235:
  4164  1242  1422               	bsf	___awdiv@quotient,0
  4165  1243                     l2237:
  4166  1243  3001               	movlw	1
  4167  1244                     u2685:
  4168  1244  1003               	clrc
  4169  1245  0CF8               	rrf	___awdiv@divisor+1,f
  4170  1246  0CF7               	rrf	___awdiv@divisor,f
  4171  1247  3EFF               	addlw	-1
  4172  1248  1D03               	skipz
  4173  1249  2A44               	goto	u2685
  4174  124A                     l2239:
  4175  124A  3001               	movlw	1
  4176  124B  02A0               	subwf	___awdiv@counter,f
  4177  124C  1D03               	btfss	3,2
  4178  124D  2A4F               	goto	u2691
  4179  124E  2A50               	goto	u2690
  4180  124F                     u2691:
  4181  124F  2A2B               	goto	l2231
  4182  1250                     u2690:
  4183  1250                     l2241:
  4184  1250  0821               	movf	___awdiv@sign,w
  4185  1251  1903               	btfsc	3,2
  4186  1252  2A54               	goto	u2701
  4187  1253  2A55               	goto	u2700
  4188  1254                     u2701:
  4189  1254  2A5A               	goto	l2245
  4190  1255                     u2700:
  4191  1255                     l2243:
  4192  1255  09A2               	comf	___awdiv@quotient,f
  4193  1256  09A3               	comf	___awdiv@quotient+1,f
  4194  1257  0AA2               	incf	___awdiv@quotient,f
  4195  1258  1903               	skipnz
  4196  1259  0AA3               	incf	___awdiv@quotient+1,f
  4197  125A                     l2245:
  4198  125A  0823               	movf	___awdiv@quotient+1,w
  4199  125B  00F8               	movwf	?___awdiv+1
  4200  125C  0822               	movf	___awdiv@quotient,w
  4201  125D  00F7               	movwf	?___awdiv
  4202  125E                     l590:
  4203  125E  0008               	return
  4204  125F                     __end_of___awdiv:
  4205                           
  4206                           	psect	text10
  4207  1DE0                     __ptext10:	
  4208 ;; *************** function _isdigit *****************
  4209 ;; Defined at:
  4210 ;;		line 8 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\isdigit.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  c               1    wreg     unsigned char 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  c               1    1[COMMON] unsigned char 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;		None               void
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4224 ;;      Params:         0       0       0       0       0
  4225 ;;      Locals:         2       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0
  4227 ;;      Totals:         2       0       0       0       0
  4228 ;;Total ram usage:        2 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_sprintf
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           
  4238                           ;psect for function _isdigit
  4239  1DE0                     _isdigit:
  4240                           
  4241                           ;incstack = 0
  4242                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4243                           ;isdigit@c stored from wreg
  4244  1DE0  00F1               	movwf	isdigit@c
  4245  1DE1                     l2547:
  4246  1DE1  01F0               	clrf	_isdigit$863
  4247  1DE2                     l2549:
  4248  1DE2  303A               	movlw	58
  4249  1DE3  0271               	subwf	isdigit@c,w
  4250  1DE4  1803               	skipnc
  4251  1DE5  2DE7               	goto	u3471
  4252  1DE6  2DE8               	goto	u3470
  4253  1DE7                     u3471:
  4254  1DE7  2DF0               	goto	l2555
  4255  1DE8                     u3470:
  4256  1DE8                     l2551:
  4257  1DE8  3030               	movlw	48
  4258  1DE9  0271               	subwf	isdigit@c,w
  4259  1DEA  1C03               	skipc
  4260  1DEB  2DED               	goto	u3481
  4261  1DEC  2DEE               	goto	u3480
  4262  1DED                     u3481:
  4263  1DED  2DF0               	goto	l2555
  4264  1DEE                     u3480:
  4265  1DEE                     l2553:
  4266  1DEE  01F0               	clrf	_isdigit$863
  4267  1DEF  0AF0               	incf	_isdigit$863,f
  4268  1DF0                     l2555:
  4269  1DF0  0C70               	rrf	_isdigit$863,w
  4270  1DF1                     l869:
  4271  1DF1  0008               	return
  4272  1DF2                     __end_of_isdigit:
  4273                           
  4274                           	psect	text11
  4275  00EF                     __ptext11:	
  4276 ;; *************** function _fround *****************
  4277 ;; Defined at:
  4278 ;;		line 417 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;  prec            1    wreg     unsigned char 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  prec            1   39[BANK0 ] unsigned char 
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  3   24[BANK0 ] unsigned char 
  4285 ;; Registers used:
  4286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4292 ;;      Params:         0       3       0       0       0
  4293 ;;      Locals:         0       7       0       0       0
  4294 ;;      Temps:          0       6       0       0       0
  4295 ;;      Totals:         0      16       0       0       0
  4296 ;;Total ram usage:       16 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:    2
  4299 ;; This function calls:
  4300 ;;		___bmul
  4301 ;;		___ftmul
  4302 ;;		___lwdiv
  4303 ;;		___lwmod
  4304 ;; This function is called by:
  4305 ;;		_sprintf
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309                           
  4310                           ;psect for function _fround
  4311  00EF                     _fround:
  4312                           
  4313                           ;incstack = 0
  4314                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4315                           ;fround@prec stored from wreg
  4316  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  4317  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  4318  00F1  00C7               	movwf	fround@prec
  4319  00F2                     l2485:
  4320                           
  4321                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 417: fround(unsigned char prec);
      +                          D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 418: {;D:\MPLAB XC8 compiler\pic\
      +                          sources\c90\common\doprnt.c: 421:  if(prec>=110)
  4322  00F2  306E               	movlw	110
  4323  00F3  0247               	subwf	fround@prec,w
  4324  00F4  1C03               	skipc
  4325  00F5  28F7               	goto	u3401
  4326  00F6  28F8               	goto	u3400
  4327  00F7                     u3401:
  4328  00F7  29CF               	goto	l2495
  4329  00F8                     u3400:
  4330  00F8                     l2487:
  4331                           
  4332                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4333  00F8  3003               	movlw	3
  4334  00F9  00BB               	movwf	??_fround
  4335  00FA  083B               	movf	??_fround,w
  4336  00FB  00A4               	movwf	___bmul@multiplicand
  4337  00FC  0847               	movf	fround@prec,w
  4338  00FD  00BC               	movwf	??_fround+1
  4339  00FE  01BD               	clrf	??_fround+2
  4340  00FF  083C               	movf	??_fround+1,w
  4341  0100  00F2               	movwf	___lwmod@dividend
  4342  0101  083D               	movf	??_fround+2,w
  4343  0102  00F3               	movwf	___lwmod@dividend+1
  4344  0103  3064               	movlw	100
  4345  0104  00F0               	movwf	___lwmod@divisor
  4346  0105  3000               	movlw	0
  4347  0106  00F1               	movwf	___lwmod@divisor+1
  4348  0107  160A  118A  20A0  120A  118A  	fcall	___lwmod
  4349  010C  0871               	movf	?___lwmod+1,w
  4350  010D  00F9               	movwf	___lwdiv@dividend+1
  4351  010E  0870               	movf	?___lwmod,w
  4352  010F  00F8               	movwf	___lwdiv@dividend
  4353  0110  300A               	movlw	10
  4354  0111  00F6               	movwf	___lwdiv@divisor
  4355  0112  3000               	movlw	0
  4356  0113  00F7               	movwf	___lwdiv@divisor+1
  4357  0114  160A  158A  2768  120A  118A  	fcall	___lwdiv
  4358  0119  0876               	movf	?___lwdiv,w
  4359  011A  120A  158A  200C  120A  118A  	fcall	___bmul
  4360  011F  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  4361  0120  0084               	movwf	4
  4362  0121  160A  118A  2000  120A  118A  	fcall	stringdir
  4363  0126  1283               	bcf	3,5	;RP0=0, select bank0
  4364  0127  1303               	bcf	3,6	;RP1=0, select bank0
  4365  0128  00A8               	movwf	___ftmul@f1
  4366  0129  160A  118A  2000  120A  118A  	fcall	stringdir
  4367  012E  00A9               	movwf	___ftmul@f1+1
  4368  012F  160A  118A  2000  120A  118A  	fcall	stringdir
  4369  0134  00AA               	movwf	___ftmul@f1+2
  4370  0135  3003               	movlw	3
  4371  0136  00BE               	movwf	??_fround+3
  4372  0137  083E               	movf	??_fround+3,w
  4373  0138  00A4               	movwf	___bmul@multiplicand
  4374  0139  0847               	movf	fround@prec,w
  4375  013A  00BF               	movwf	??_fround+4
  4376  013B  01C0               	clrf	??_fround+5
  4377  013C  083F               	movf	??_fround+4,w
  4378  013D  00F8               	movwf	___lwdiv@dividend
  4379  013E  0840               	movf	??_fround+5,w
  4380  013F  00F9               	movwf	___lwdiv@dividend+1
  4381  0140  3064               	movlw	100
  4382  0141  00F6               	movwf	___lwdiv@divisor
  4383  0142  3000               	movlw	0
  4384  0143  00F7               	movwf	___lwdiv@divisor+1
  4385  0144  160A  158A  2768  120A  118A  	fcall	___lwdiv
  4386  0149  0876               	movf	?___lwdiv,w
  4387  014A  120A  158A  200C  120A  118A  	fcall	___bmul
  4388  014F  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  4389  0150  0084               	movwf	4
  4390  0151  160A  118A  2000  120A  118A  	fcall	stringdir
  4391  0156  1283               	bcf	3,5	;RP0=0, select bank0
  4392  0157  1303               	bcf	3,6	;RP1=0, select bank0
  4393  0158  00AB               	movwf	___ftmul@f2
  4394  0159  160A  118A  2000  120A  118A  	fcall	stringdir
  4395  015E  00AC               	movwf	___ftmul@f2+1
  4396  015F  160A  118A  2000  120A  118A  	fcall	stringdir
  4397  0164  00AD               	movwf	___ftmul@f2+2
  4398  0165  120A  118A  200A  120A  118A  	fcall	___ftmul
  4399  016A  1283               	bcf	3,5	;RP0=0, select bank0
  4400  016B  1303               	bcf	3,6	;RP1=0, select bank0
  4401  016C  0828               	movf	?___ftmul,w
  4402  016D  00C4               	movwf	_fround$1067
  4403  016E  0829               	movf	?___ftmul+1,w
  4404  016F  00C5               	movwf	_fround$1067+1
  4405  0170  082A               	movf	?___ftmul+2,w
  4406  0171  00C6               	movwf	_fround$1067+2
  4407                           
  4408                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4409  0172  3003               	movlw	3
  4410  0173  00BB               	movwf	??_fround
  4411  0174  083B               	movf	??_fround,w
  4412  0175  00A4               	movwf	___bmul@multiplicand
  4413  0176  0847               	movf	fround@prec,w
  4414  0177  00BC               	movwf	??_fround+1
  4415  0178  01BD               	clrf	??_fround+2
  4416  0179  083C               	movf	??_fround+1,w
  4417  017A  00F2               	movwf	___lwmod@dividend
  4418  017B  083D               	movf	??_fround+2,w
  4419  017C  00F3               	movwf	___lwmod@dividend+1
  4420  017D  300A               	movlw	10
  4421  017E  00F0               	movwf	___lwmod@divisor
  4422  017F  3000               	movlw	0
  4423  0180  00F1               	movwf	___lwmod@divisor+1
  4424  0181  160A  118A  20A0  120A  118A  	fcall	___lwmod
  4425  0186  0870               	movf	?___lwmod,w
  4426  0187  120A  158A  200C  120A  118A  	fcall	___bmul
  4427  018C  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4428  018D  0084               	movwf	4
  4429  018E  160A  118A  2000  120A  118A  	fcall	stringdir
  4430  0193  1283               	bcf	3,5	;RP0=0, select bank0
  4431  0194  1303               	bcf	3,6	;RP1=0, select bank0
  4432  0195  00A8               	movwf	___ftmul@f1
  4433  0196  160A  118A  2000  120A  118A  	fcall	stringdir
  4434  019B  00A9               	movwf	___ftmul@f1+1
  4435  019C  160A  118A  2000  120A  118A  	fcall	stringdir
  4436  01A1  00AA               	movwf	___ftmul@f1+2
  4437  01A2  0844               	movf	_fround$1067,w
  4438  01A3  00AB               	movwf	___ftmul@f2
  4439  01A4  0845               	movf	_fround$1067+1,w
  4440  01A5  00AC               	movwf	___ftmul@f2+1
  4441  01A6  0846               	movf	_fround$1067+2,w
  4442  01A7  00AD               	movwf	___ftmul@f2+2
  4443  01A8  120A  118A  200A  120A  118A  	fcall	___ftmul
  4444  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  4445  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  4446  01AF  0828               	movf	?___ftmul,w
  4447  01B0  00C1               	movwf	_fround$1068
  4448  01B1  0829               	movf	?___ftmul+1,w
  4449  01B2  00C2               	movwf	_fround$1068+1
  4450  01B3  082A               	movf	?___ftmul+2,w
  4451  01B4  00C3               	movwf	_fround$1068+2
  4452  01B5                     l2489:
  4453                           
  4454                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4455  01B5  3000               	movlw	0
  4456  01B6  00A8               	movwf	___ftmul@f1
  4457  01B7  3000               	movlw	0
  4458  01B8  00A9               	movwf	___ftmul@f1+1
  4459  01B9  303F               	movlw	63
  4460  01BA  00AA               	movwf	___ftmul@f1+2
  4461  01BB  0841               	movf	_fround$1068,w
  4462  01BC  00AB               	movwf	___ftmul@f2
  4463  01BD  0842               	movf	_fround$1068+1,w
  4464  01BE  00AC               	movwf	___ftmul@f2+1
  4465  01BF  0843               	movf	_fround$1068+2,w
  4466  01C0  00AD               	movwf	___ftmul@f2+2
  4467  01C1  120A  118A  200A  120A  118A  	fcall	___ftmul
  4468  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  4469  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  4470  01C8  0828               	movf	?___ftmul,w
  4471  01C9  00B8               	movwf	?_fround
  4472  01CA  0829               	movf	?___ftmul+1,w
  4473  01CB  00B9               	movwf	?_fround+1
  4474  01CC  082A               	movf	?___ftmul+2,w
  4475  01CD  00BA               	movwf	?_fround+2
  4476  01CE  2A8F               	goto	l313
  4477  01CF                     l2495:
  4478  01CF  300B               	movlw	11
  4479  01D0  0247               	subwf	fround@prec,w
  4480  01D1  1C03               	skipc
  4481  01D2  29D4               	goto	u3411
  4482  01D3  29D5               	goto	u3410
  4483  01D4                     u3411:
  4484  01D4  2A5C               	goto	l2503
  4485  01D5                     u3410:
  4486  01D5                     l2497:
  4487                           
  4488                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[pr
      +                          ec/10U+9U] * _npowers_[prec%10U];
  4489  01D5  3003               	movlw	3
  4490  01D6  00BB               	movwf	??_fround
  4491  01D7  083B               	movf	??_fround,w
  4492  01D8  00A4               	movwf	___bmul@multiplicand
  4493  01D9  0847               	movf	fround@prec,w
  4494  01DA  00BC               	movwf	??_fround+1
  4495  01DB  01BD               	clrf	??_fround+2
  4496  01DC  083C               	movf	??_fround+1,w
  4497  01DD  00F2               	movwf	___lwmod@dividend
  4498  01DE  083D               	movf	??_fround+2,w
  4499  01DF  00F3               	movwf	___lwmod@dividend+1
  4500  01E0  300A               	movlw	10
  4501  01E1  00F0               	movwf	___lwmod@divisor
  4502  01E2  3000               	movlw	0
  4503  01E3  00F1               	movwf	___lwmod@divisor+1
  4504  01E4  160A  118A  20A0  120A  118A  	fcall	___lwmod
  4505  01E9  0870               	movf	?___lwmod,w
  4506  01EA  120A  158A  200C  120A  118A  	fcall	___bmul
  4507  01EF  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4508  01F0  0084               	movwf	4
  4509  01F1  160A  118A  2000  120A  118A  	fcall	stringdir
  4510  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  4511  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  4512  01F8  00A8               	movwf	___ftmul@f1
  4513  01F9  160A  118A  2000  120A  118A  	fcall	stringdir
  4514  01FE  00A9               	movwf	___ftmul@f1+1
  4515  01FF  160A  118A  2000  120A  118A  	fcall	stringdir
  4516  0204  00AA               	movwf	___ftmul@f1+2
  4517  0205  3003               	movlw	3
  4518  0206  00BE               	movwf	??_fround+3
  4519  0207  083E               	movf	??_fround+3,w
  4520  0208  00A4               	movwf	___bmul@multiplicand
  4521  0209  0847               	movf	fround@prec,w
  4522  020A  00BF               	movwf	??_fround+4
  4523  020B  01C0               	clrf	??_fround+5
  4524  020C  083F               	movf	??_fround+4,w
  4525  020D  00F8               	movwf	___lwdiv@dividend
  4526  020E  0840               	movf	??_fround+5,w
  4527  020F  00F9               	movwf	___lwdiv@dividend+1
  4528  0210  300A               	movlw	10
  4529  0211  00F6               	movwf	___lwdiv@divisor
  4530  0212  3000               	movlw	0
  4531  0213  00F7               	movwf	___lwdiv@divisor+1
  4532  0214  160A  158A  2768  120A  118A  	fcall	___lwdiv
  4533  0219  0876               	movf	?___lwdiv,w
  4534  021A  120A  158A  200C  120A  118A  	fcall	___bmul
  4535  021F  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  4536  0220  0084               	movwf	4
  4537  0221  160A  118A  2000  120A  118A  	fcall	stringdir
  4538  0226  1283               	bcf	3,5	;RP0=0, select bank0
  4539  0227  1303               	bcf	3,6	;RP1=0, select bank0
  4540  0228  00AB               	movwf	___ftmul@f2
  4541  0229  160A  118A  2000  120A  118A  	fcall	stringdir
  4542  022E  00AC               	movwf	___ftmul@f2+1
  4543  022F  160A  118A  2000  120A  118A  	fcall	stringdir
  4544  0234  00AD               	movwf	___ftmul@f2+2
  4545  0235  120A  118A  200A  120A  118A  	fcall	___ftmul
  4546  023A  1283               	bcf	3,5	;RP0=0, select bank0
  4547  023B  1303               	bcf	3,6	;RP1=0, select bank0
  4548  023C  0828               	movf	?___ftmul,w
  4549  023D  00C4               	movwf	_fround$1067
  4550  023E  0829               	movf	?___ftmul+1,w
  4551  023F  00C5               	movwf	_fround$1067+1
  4552  0240  082A               	movf	?___ftmul+2,w
  4553  0241  00C6               	movwf	_fround$1067+2
  4554  0242                     l2499:
  4555                           
  4556                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[pr
      +                          ec/10U+9U] * _npowers_[prec%10U];
  4557  0242  3000               	movlw	0
  4558  0243  00A8               	movwf	___ftmul@f1
  4559  0244  3000               	movlw	0
  4560  0245  00A9               	movwf	___ftmul@f1+1
  4561  0246  303F               	movlw	63
  4562  0247  00AA               	movwf	___ftmul@f1+2
  4563  0248  0844               	movf	_fround$1067,w
  4564  0249  00AB               	movwf	___ftmul@f2
  4565  024A  0845               	movf	_fround$1067+1,w
  4566  024B  00AC               	movwf	___ftmul@f2+1
  4567  024C  0846               	movf	_fround$1067+2,w
  4568  024D  00AD               	movwf	___ftmul@f2+2
  4569  024E  120A  118A  200A  120A  118A  	fcall	___ftmul
  4570  0253  1283               	bcf	3,5	;RP0=0, select bank0
  4571  0254  1303               	bcf	3,6	;RP1=0, select bank0
  4572  0255  0828               	movf	?___ftmul,w
  4573  0256  00B8               	movwf	?_fround
  4574  0257  0829               	movf	?___ftmul+1,w
  4575  0258  00B9               	movwf	?_fround+1
  4576  0259  082A               	movf	?___ftmul+2,w
  4577  025A  00BA               	movwf	?_fround+2
  4578  025B  2A8F               	goto	l313
  4579  025C                     l2503:
  4580                           
  4581                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 425:  return 0.5 * _npowers_[pre
      +                          c];
  4582  025C  3000               	movlw	0
  4583  025D  00A8               	movwf	___ftmul@f1
  4584  025E  3000               	movlw	0
  4585  025F  00A9               	movwf	___ftmul@f1+1
  4586  0260  303F               	movlw	63
  4587  0261  00AA               	movwf	___ftmul@f1+2
  4588  0262  3003               	movlw	3
  4589  0263  00BB               	movwf	??_fround
  4590  0264  083B               	movf	??_fround,w
  4591  0265  00A4               	movwf	___bmul@multiplicand
  4592  0266  0847               	movf	fround@prec,w
  4593  0267  120A  158A  200C  120A  118A  	fcall	___bmul
  4594  026C  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4595  026D  0084               	movwf	4
  4596  026E  160A  118A  2000  120A  118A  	fcall	stringdir
  4597  0273  1283               	bcf	3,5	;RP0=0, select bank0
  4598  0274  1303               	bcf	3,6	;RP1=0, select bank0
  4599  0275  00AB               	movwf	___ftmul@f2
  4600  0276  160A  118A  2000  120A  118A  	fcall	stringdir
  4601  027B  00AC               	movwf	___ftmul@f2+1
  4602  027C  160A  118A  2000  120A  118A  	fcall	stringdir
  4603  0281  00AD               	movwf	___ftmul@f2+2
  4604  0282  120A  118A  200A  120A  118A  	fcall	___ftmul
  4605  0287  1283               	bcf	3,5	;RP0=0, select bank0
  4606  0288  1303               	bcf	3,6	;RP1=0, select bank0
  4607  0289  0828               	movf	?___ftmul,w
  4608  028A  00B8               	movwf	?_fround
  4609  028B  0829               	movf	?___ftmul+1,w
  4610  028C  00B9               	movwf	?_fround+1
  4611  028D  082A               	movf	?___ftmul+2,w
  4612  028E  00BA               	movwf	?_fround+2
  4613  028F                     l313:
  4614  028F  0008               	return
  4615  0290                     __end_of_fround:
  4616                           
  4617                           	psect	text12
  4618  10A0                     __ptext12:	
  4619 ;; *************** function ___lwmod *****************
  4620 ;; Defined at:
  4621 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lwmod.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;  divisor         2    0[COMMON] unsigned int 
  4624 ;;  dividend        2    2[COMMON] unsigned int 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  counter         1    5[COMMON] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  2    0[COMMON] unsigned int 
  4629 ;; Registers used:
  4630 ;;		wreg, status,2, status,0
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4636 ;;      Params:         4       0       0       0       0
  4637 ;;      Locals:         1       0       0       0       0
  4638 ;;      Temps:          1       0       0       0       0
  4639 ;;      Totals:         6       0       0       0       0
  4640 ;;Total ram usage:        6 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; This function calls:
  4643 ;;		Nothing
  4644 ;; This function is called by:
  4645 ;;		_fround
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           
  4650                           ;psect for function ___lwmod
  4651  10A0                     ___lwmod:
  4652  10A0                     l2433:	
  4653                           ;incstack = 0
  4654                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4655                           
  4656  10A0  0870               	movf	___lwmod@divisor,w
  4657  10A1  0471               	iorwf	___lwmod@divisor+1,w
  4658  10A2  1903               	btfsc	3,2
  4659  10A3  28A5               	goto	u3251
  4660  10A4  28A6               	goto	u3250
  4661  10A5                     u3251:
  4662  10A5  28D5               	goto	l2451
  4663  10A6                     u3250:
  4664  10A6                     l2435:
  4665  10A6  01F5               	clrf	___lwmod@counter
  4666  10A7  0AF5               	incf	___lwmod@counter,f
  4667  10A8  28B4               	goto	l2441
  4668  10A9                     l2437:
  4669  10A9  3001               	movlw	1
  4670  10AA                     u3265:
  4671  10AA  1003               	clrc
  4672  10AB  0DF0               	rlf	___lwmod@divisor,f
  4673  10AC  0DF1               	rlf	___lwmod@divisor+1,f
  4674  10AD  3EFF               	addlw	-1
  4675  10AE  1D03               	skipz
  4676  10AF  28AA               	goto	u3265
  4677  10B0                     l2439:
  4678  10B0  3001               	movlw	1
  4679  10B1  00F4               	movwf	??___lwmod
  4680  10B2  0874               	movf	??___lwmod,w
  4681  10B3  07F5               	addwf	___lwmod@counter,f
  4682  10B4                     l2441:
  4683  10B4  1FF1               	btfss	___lwmod@divisor+1,7
  4684  10B5  28B7               	goto	u3271
  4685  10B6  28B8               	goto	u3270
  4686  10B7                     u3271:
  4687  10B7  28A9               	goto	l2437
  4688  10B8                     u3270:
  4689  10B8                     l2443:
  4690  10B8  0871               	movf	___lwmod@divisor+1,w
  4691  10B9  0273               	subwf	___lwmod@dividend+1,w
  4692  10BA  1D03               	skipz
  4693  10BB  28BE               	goto	u3285
  4694  10BC  0870               	movf	___lwmod@divisor,w
  4695  10BD  0272               	subwf	___lwmod@dividend,w
  4696  10BE                     u3285:
  4697  10BE  1C03               	skipc
  4698  10BF  28C1               	goto	u3281
  4699  10C0  28C2               	goto	u3280
  4700  10C1                     u3281:
  4701  10C1  28C8               	goto	l2447
  4702  10C2                     u3280:
  4703  10C2                     l2445:
  4704  10C2  0870               	movf	___lwmod@divisor,w
  4705  10C3  02F2               	subwf	___lwmod@dividend,f
  4706  10C4  0871               	movf	___lwmod@divisor+1,w
  4707  10C5  1C03               	skipc
  4708  10C6  03F3               	decf	___lwmod@dividend+1,f
  4709  10C7  02F3               	subwf	___lwmod@dividend+1,f
  4710  10C8                     l2447:
  4711  10C8  3001               	movlw	1
  4712  10C9                     u3295:
  4713  10C9  1003               	clrc
  4714  10CA  0CF1               	rrf	___lwmod@divisor+1,f
  4715  10CB  0CF0               	rrf	___lwmod@divisor,f
  4716  10CC  3EFF               	addlw	-1
  4717  10CD  1D03               	skipz
  4718  10CE  28C9               	goto	u3295
  4719  10CF                     l2449:
  4720  10CF  3001               	movlw	1
  4721  10D0  02F5               	subwf	___lwmod@counter,f
  4722  10D1  1D03               	btfss	3,2
  4723  10D2  28D4               	goto	u3301
  4724  10D3  28D5               	goto	u3300
  4725  10D4                     u3301:
  4726  10D4  28B8               	goto	l2443
  4727  10D5                     u3300:
  4728  10D5                     l2451:
  4729  10D5  0873               	movf	___lwmod@dividend+1,w
  4730  10D6  00F1               	movwf	?___lwmod+1
  4731  10D7  0872               	movf	___lwmod@dividend,w
  4732  10D8  00F0               	movwf	?___lwmod
  4733  10D9                     l859:
  4734  10D9  0008               	return
  4735  10DA                     __end_of___lwmod:
  4736                           
  4737                           	psect	text13
  4738  1F68                     __ptext13:	
  4739 ;; *************** function ___lwdiv *****************
  4740 ;; Defined at:
  4741 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lwdiv.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  divisor         2    6[COMMON] unsigned int 
  4744 ;;  dividend        2    8[COMMON] unsigned int 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  quotient        2   11[COMMON] unsigned int 
  4747 ;;  counter         1   13[COMMON] unsigned char 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  2    6[COMMON] unsigned int 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4757 ;;      Params:         4       0       0       0       0
  4758 ;;      Locals:         3       0       0       0       0
  4759 ;;      Temps:          1       0       0       0       0
  4760 ;;      Totals:         8       0       0       0       0
  4761 ;;Total ram usage:        8 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_fround
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           
  4771                           ;psect for function ___lwdiv
  4772  1F68                     ___lwdiv:
  4773  1F68                     l2407:	
  4774                           ;incstack = 0
  4775                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4776                           
  4777  1F68  01FB               	clrf	___lwdiv@quotient
  4778  1F69  01FC               	clrf	___lwdiv@quotient+1
  4779  1F6A                     l2409:
  4780  1F6A  0876               	movf	___lwdiv@divisor,w
  4781  1F6B  0477               	iorwf	___lwdiv@divisor+1,w
  4782  1F6C  1903               	btfsc	3,2
  4783  1F6D  2F6F               	goto	u3181
  4784  1F6E  2F70               	goto	u3180
  4785  1F6F                     u3181:
  4786  1F6F  2FA7               	goto	l2429
  4787  1F70                     u3180:
  4788  1F70                     l2411:
  4789  1F70  01FD               	clrf	___lwdiv@counter
  4790  1F71  0AFD               	incf	___lwdiv@counter,f
  4791  1F72  2F7E               	goto	l2417
  4792  1F73                     l2413:
  4793  1F73  3001               	movlw	1
  4794  1F74                     u3195:
  4795  1F74  1003               	clrc
  4796  1F75  0DF6               	rlf	___lwdiv@divisor,f
  4797  1F76  0DF7               	rlf	___lwdiv@divisor+1,f
  4798  1F77  3EFF               	addlw	-1
  4799  1F78  1D03               	skipz
  4800  1F79  2F74               	goto	u3195
  4801  1F7A                     l2415:
  4802  1F7A  3001               	movlw	1
  4803  1F7B  00FA               	movwf	??___lwdiv
  4804  1F7C  087A               	movf	??___lwdiv,w
  4805  1F7D  07FD               	addwf	___lwdiv@counter,f
  4806  1F7E                     l2417:
  4807  1F7E  1FF7               	btfss	___lwdiv@divisor+1,7
  4808  1F7F  2F81               	goto	u3201
  4809  1F80  2F82               	goto	u3200
  4810  1F81                     u3201:
  4811  1F81  2F73               	goto	l2413
  4812  1F82                     u3200:
  4813  1F82                     l2419:
  4814  1F82  3001               	movlw	1
  4815  1F83                     u3215:
  4816  1F83  1003               	clrc
  4817  1F84  0DFB               	rlf	___lwdiv@quotient,f
  4818  1F85  0DFC               	rlf	___lwdiv@quotient+1,f
  4819  1F86  3EFF               	addlw	-1
  4820  1F87  1D03               	skipz
  4821  1F88  2F83               	goto	u3215
  4822  1F89  0877               	movf	___lwdiv@divisor+1,w
  4823  1F8A  0279               	subwf	___lwdiv@dividend+1,w
  4824  1F8B  1D03               	skipz
  4825  1F8C  2F8F               	goto	u3225
  4826  1F8D  0876               	movf	___lwdiv@divisor,w
  4827  1F8E  0278               	subwf	___lwdiv@dividend,w
  4828  1F8F                     u3225:
  4829  1F8F  1C03               	skipc
  4830  1F90  2F92               	goto	u3221
  4831  1F91  2F93               	goto	u3220
  4832  1F92                     u3221:
  4833  1F92  2F9A               	goto	l2425
  4834  1F93                     u3220:
  4835  1F93                     l2421:
  4836  1F93  0876               	movf	___lwdiv@divisor,w
  4837  1F94  02F8               	subwf	___lwdiv@dividend,f
  4838  1F95  0877               	movf	___lwdiv@divisor+1,w
  4839  1F96  1C03               	skipc
  4840  1F97  03F9               	decf	___lwdiv@dividend+1,f
  4841  1F98  02F9               	subwf	___lwdiv@dividend+1,f
  4842  1F99                     l2423:
  4843  1F99  147B               	bsf	___lwdiv@quotient,0
  4844  1F9A                     l2425:
  4845  1F9A  3001               	movlw	1
  4846  1F9B                     u3235:
  4847  1F9B  1003               	clrc
  4848  1F9C  0CF7               	rrf	___lwdiv@divisor+1,f
  4849  1F9D  0CF6               	rrf	___lwdiv@divisor,f
  4850  1F9E  3EFF               	addlw	-1
  4851  1F9F  1D03               	skipz
  4852  1FA0  2F9B               	goto	u3235
  4853  1FA1                     l2427:
  4854  1FA1  3001               	movlw	1
  4855  1FA2  02FD               	subwf	___lwdiv@counter,f
  4856  1FA3  1D03               	btfss	3,2
  4857  1FA4  2FA6               	goto	u3241
  4858  1FA5  2FA7               	goto	u3240
  4859  1FA6                     u3241:
  4860  1FA6  2F82               	goto	l2419
  4861  1FA7                     u3240:
  4862  1FA7                     l2429:
  4863  1FA7  087C               	movf	___lwdiv@quotient+1,w
  4864  1FA8  00F7               	movwf	?___lwdiv+1
  4865  1FA9  087B               	movf	___lwdiv@quotient,w
  4866  1FAA  00F6               	movwf	?___lwdiv
  4867  1FAB                     l849:
  4868  1FAB  0008               	return
  4869  1FAC                     __end_of___lwdiv:
  4870                           
  4871                           	psect	text14
  4872  080C                     __ptext14:	
  4873 ;; *************** function ___bmul *****************
  4874 ;; Defined at:
  4875 ;;		line 4 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\Umul8.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  multiplier      1    wreg     unsigned char 
  4878 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  multiplier      1    7[BANK0 ] unsigned char 
  4881 ;;  product         1    6[BANK0 ] unsigned char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1    wreg      unsigned char 
  4884 ;; Registers used:
  4885 ;;		wreg, status,2, status,0
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4891 ;;      Params:         0       1       0       0       0
  4892 ;;      Locals:         0       2       0       0       0
  4893 ;;      Temps:          0       1       0       0       0
  4894 ;;      Totals:         0       4       0       0       0
  4895 ;;Total ram usage:        4 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_fround
  4901 ;;		_scale
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           
  4906                           ;psect for function ___bmul
  4907  080C                     ___bmul:
  4908                           
  4909                           ;incstack = 0
  4910                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4911                           ;___bmul@multiplier stored from wreg
  4912  080C  1283               	bcf	3,5	;RP0=0, select bank0
  4913  080D  1303               	bcf	3,6	;RP1=0, select bank0
  4914  080E  00A7               	movwf	___bmul@multiplier
  4915  080F                     l2191:
  4916  080F  01A6               	clrf	___bmul@product
  4917  0810                     l2193:
  4918  0810  1C27               	btfss	___bmul@multiplier,0
  4919  0811  2813               	goto	u2591
  4920  0812  2814               	goto	u2590
  4921  0813                     u2591:
  4922  0813  2818               	goto	l2197
  4923  0814                     u2590:
  4924  0814                     l2195:
  4925  0814  0824               	movf	___bmul@multiplicand,w
  4926  0815  00A5               	movwf	??___bmul
  4927  0816  0825               	movf	??___bmul,w
  4928  0817  07A6               	addwf	___bmul@product,f
  4929  0818                     l2197:
  4930  0818  1003               	clrc
  4931  0819  0DA4               	rlf	___bmul@multiplicand,f
  4932  081A                     l2199:
  4933  081A  1003               	clrc
  4934  081B  0CA7               	rrf	___bmul@multiplier,f
  4935  081C  0827               	movf	___bmul@multiplier,w
  4936  081D  1D03               	btfss	3,2
  4937  081E  2820               	goto	u2601
  4938  081F  2821               	goto	u2600
  4939  0820                     u2601:
  4940  0820  2810               	goto	l2193
  4941  0821                     u2600:
  4942  0821                     l2201:
  4943  0821  0826               	movf	___bmul@product,w
  4944  0822                     l433:
  4945  0822  0008               	return
  4946  0823                     __end_of___bmul:
  4947                           
  4948                           	psect	text15
  4949  14B0                     __ptext15:	
  4950 ;; *************** function __tdiv_to_l_ *****************
  4951 ;; Defined at:
  4952 ;;		line 60 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftdivl.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;  f1              3    0[COMMON] float 
  4955 ;;  f2              3    3[COMMON] float 
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;  quot            4    0[BANK0 ] unsigned long 
  4958 ;;  exp1            1    5[BANK0 ] unsigned char 
  4959 ;;  cntr            1    4[BANK0 ] unsigned char 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  4    0[COMMON] unsigned long 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4969 ;;      Params:         6       0       0       0       0
  4970 ;;      Locals:         0       6       0       0       0
  4971 ;;      Temps:          4       0       0       0       0
  4972 ;;      Totals:        10       6       0       0       0
  4973 ;;Total ram usage:       16 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; This function calls:
  4976 ;;		Nothing
  4977 ;; This function is called by:
  4978 ;;		_sprintf
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           
  4983                           ;psect for function __tdiv_to_l_
  4984  14B0                     __tdiv_to_l_:
  4985  14B0                     l2559:	
  4986                           ;incstack = 0
  4987                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4988                           
  4989  14B0  0870               	movf	__tdiv_to_l_@f1,w
  4990  14B1  00F6               	movwf	??__tdiv_to_l_
  4991  14B2  0871               	movf	__tdiv_to_l_@f1+1,w
  4992  14B3  00F7               	movwf	??__tdiv_to_l_+1
  4993  14B4  0872               	movf	__tdiv_to_l_@f1+2,w
  4994  14B5  00F8               	movwf	??__tdiv_to_l_+2
  4995  14B6  1003               	clrc
  4996  14B7  0D77               	rlf	??__tdiv_to_l_+1,w
  4997  14B8  0D78               	rlf	??__tdiv_to_l_+2,w
  4998  14B9  00F9               	movwf	??__tdiv_to_l_+3
  4999  14BA  0879               	movf	??__tdiv_to_l_+3,w
  5000  14BB  1283               	bcf	3,5	;RP0=0, select bank0
  5001  14BC  1303               	bcf	3,6	;RP1=0, select bank0
  5002  14BD  00A5               	movwf	__tdiv_to_l_@exp1
  5003  14BE  0825               	movf	__tdiv_to_l_@exp1,w
  5004  14BF  1D03               	btfss	3,2
  5005  14C0  2CC2               	goto	u3491
  5006  14C1  2CC3               	goto	u3490
  5007  14C2                     u3491:
  5008  14C2  2CCC               	goto	l2565
  5009  14C3                     u3490:
  5010  14C3                     l2561:
  5011  14C3  3000               	movlw	0
  5012  14C4  00F3               	movwf	?__tdiv_to_l_+3
  5013  14C5  3000               	movlw	0
  5014  14C6  00F2               	movwf	?__tdiv_to_l_+2
  5015  14C7  3000               	movlw	0
  5016  14C8  00F1               	movwf	?__tdiv_to_l_+1
  5017  14C9  3000               	movlw	0
  5018  14CA  00F0               	movwf	?__tdiv_to_l_
  5019  14CB  2D6C               	goto	l692
  5020  14CC                     l2565:
  5021  14CC  0873               	movf	__tdiv_to_l_@f2,w
  5022  14CD  00F6               	movwf	??__tdiv_to_l_
  5023  14CE  0874               	movf	__tdiv_to_l_@f2+1,w
  5024  14CF  00F7               	movwf	??__tdiv_to_l_+1
  5025  14D0  0875               	movf	__tdiv_to_l_@f2+2,w
  5026  14D1  00F8               	movwf	??__tdiv_to_l_+2
  5027  14D2  1003               	clrc
  5028  14D3  0D77               	rlf	??__tdiv_to_l_+1,w
  5029  14D4  0D78               	rlf	??__tdiv_to_l_+2,w
  5030  14D5  00F9               	movwf	??__tdiv_to_l_+3
  5031  14D6  0879               	movf	??__tdiv_to_l_+3,w
  5032  14D7  00A4               	movwf	__tdiv_to_l_@cntr
  5033  14D8  0824               	movf	__tdiv_to_l_@cntr,w
  5034  14D9  1D03               	btfss	3,2
  5035  14DA  2CDC               	goto	u3501
  5036  14DB  2CDD               	goto	u3500
  5037  14DC                     u3501:
  5038  14DC  2CDE               	goto	l693
  5039  14DD                     u3500:
  5040  14DD  2CC3               	goto	l2561
  5041  14DE                     l693:
  5042  14DE  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5043  14DF                     l2571:
  5044  14DF  30FF               	movlw	255
  5045  14E0  05F0               	andwf	__tdiv_to_l_@f1,f
  5046  14E1  30FF               	movlw	255
  5047  14E2  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5048  14E3  3000               	movlw	0
  5049  14E4  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5050  14E5                     l2573:
  5051  14E5  17F4               	bsf	__tdiv_to_l_@f2+1,7
  5052  14E6  30FF               	movlw	255
  5053  14E7  05F3               	andwf	__tdiv_to_l_@f2,f
  5054  14E8  30FF               	movlw	255
  5055  14E9  05F4               	andwf	__tdiv_to_l_@f2+1,f
  5056  14EA  3000               	movlw	0
  5057  14EB  05F5               	andwf	__tdiv_to_l_@f2+2,f
  5058  14EC  3000               	movlw	0
  5059  14ED  00A3               	movwf	__tdiv_to_l_@quot+3
  5060  14EE  3000               	movlw	0
  5061  14EF  00A2               	movwf	__tdiv_to_l_@quot+2
  5062  14F0  3000               	movlw	0
  5063  14F1  00A1               	movwf	__tdiv_to_l_@quot+1
  5064  14F2  3000               	movlw	0
  5065  14F3  00A0               	movwf	__tdiv_to_l_@quot
  5066  14F4                     l2575:
  5067  14F4  307F               	movlw	127
  5068  14F5  02A5               	subwf	__tdiv_to_l_@exp1,f
  5069  14F6                     l2577:
  5070  14F6  3098               	movlw	152
  5071  14F7  0724               	addwf	__tdiv_to_l_@cntr,w
  5072  14F8  00F6               	movwf	??__tdiv_to_l_
  5073  14F9  0876               	movf	??__tdiv_to_l_,w
  5074  14FA  02A5               	subwf	__tdiv_to_l_@exp1,f
  5075  14FB  3018               	movlw	24
  5076  14FC  00F6               	movwf	??__tdiv_to_l_
  5077  14FD  0876               	movf	??__tdiv_to_l_,w
  5078  14FE  00A4               	movwf	__tdiv_to_l_@cntr
  5079  14FF                     l2579:
  5080  14FF  3001               	movlw	1
  5081  1500  00F6               	movwf	??__tdiv_to_l_
  5082  1501                     u3515:
  5083  1501  1003               	clrc
  5084  1502  0DA0               	rlf	__tdiv_to_l_@quot,f
  5085  1503  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5086  1504  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5087  1505  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5088  1506  0BF6               	decfsz	??__tdiv_to_l_,f
  5089  1507  2D01               	goto	u3515
  5090  1508                     l2581:
  5091  1508  0875               	movf	__tdiv_to_l_@f2+2,w
  5092  1509  0272               	subwf	__tdiv_to_l_@f1+2,w
  5093  150A  1D03               	skipz
  5094  150B  2D12               	goto	u3525
  5095  150C  0874               	movf	__tdiv_to_l_@f2+1,w
  5096  150D  0271               	subwf	__tdiv_to_l_@f1+1,w
  5097  150E  1D03               	skipz
  5098  150F  2D12               	goto	u3525
  5099  1510  0873               	movf	__tdiv_to_l_@f2,w
  5100  1511  0270               	subwf	__tdiv_to_l_@f1,w
  5101  1512                     u3525:
  5102  1512  1C03               	skipc
  5103  1513  2D15               	goto	u3521
  5104  1514  2D16               	goto	u3520
  5105  1515                     u3521:
  5106  1515  2D21               	goto	l2587
  5107  1516                     u3520:
  5108  1516                     l2583:
  5109  1516  0873               	movf	__tdiv_to_l_@f2,w
  5110  1517  02F0               	subwf	__tdiv_to_l_@f1,f
  5111  1518  0874               	movf	__tdiv_to_l_@f2+1,w
  5112  1519  1C03               	skipc
  5113  151A  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  5114  151B  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5115  151C  0875               	movf	__tdiv_to_l_@f2+2,w
  5116  151D  1C03               	skipc
  5117  151E  0A75               	incf	__tdiv_to_l_@f2+2,w
  5118  151F  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5119  1520                     l2585:
  5120  1520  1420               	bsf	__tdiv_to_l_@quot,0
  5121  1521                     l2587:
  5122  1521  3001               	movlw	1
  5123  1522                     u3535:
  5124  1522  1003               	clrc
  5125  1523  0DF0               	rlf	__tdiv_to_l_@f1,f
  5126  1524  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5127  1525  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5128  1526  3EFF               	addlw	-1
  5129  1527  1D03               	skipz
  5130  1528  2D22               	goto	u3535
  5131  1529                     l2589:
  5132  1529  3001               	movlw	1
  5133  152A  02A4               	subwf	__tdiv_to_l_@cntr,f
  5134  152B  1D03               	btfss	3,2
  5135  152C  2D2E               	goto	u3541
  5136  152D  2D2F               	goto	u3540
  5137  152E                     u3541:
  5138  152E  2CFF               	goto	l2579
  5139  152F                     u3540:
  5140  152F                     l696:
  5141  152F  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5142  1530  2D32               	goto	u3551
  5143  1531  2D33               	goto	u3550
  5144  1532                     u3551:
  5145  1532  2D4D               	goto	l2599
  5146  1533                     u3550:
  5147  1533                     l2591:
  5148  1533  0825               	movf	__tdiv_to_l_@exp1,w
  5149  1534  3A80               	xorlw	128
  5150  1535  3E97               	addlw	151
  5151  1536  1803               	skipnc
  5152  1537  2D39               	goto	u3561
  5153  1538  2D3A               	goto	u3560
  5154  1539                     u3561:
  5155  1539  2D3B               	goto	l2597
  5156  153A                     u3560:
  5157  153A  2CC3               	goto	l2561
  5158  153B                     l2597:
  5159  153B  3001               	movlw	1
  5160  153C                     u3575:
  5161  153C  1003               	clrc
  5162  153D  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5163  153E  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5164  153F  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5165  1540  0CA0               	rrf	__tdiv_to_l_@quot,f
  5166  1541  3EFF               	addlw	-1
  5167  1542  1D03               	skipz
  5168  1543  2D3C               	goto	u3575
  5169  1544  3001               	movlw	1
  5170  1545  00F6               	movwf	??__tdiv_to_l_
  5171  1546  0876               	movf	??__tdiv_to_l_,w
  5172  1547  07A5               	addwf	__tdiv_to_l_@exp1,f
  5173  1548  1D03               	btfss	3,2
  5174  1549  2D4B               	goto	u3581
  5175  154A  2D4C               	goto	u3580
  5176  154B                     u3581:
  5177  154B  2D3B               	goto	l2597
  5178  154C                     u3580:
  5179  154C  2D64               	goto	l2607
  5180  154D                     l2599:
  5181  154D  3018               	movlw	24
  5182  154E  0225               	subwf	__tdiv_to_l_@exp1,w
  5183  154F  1C03               	skipc
  5184  1550  2D52               	goto	u3591
  5185  1551  2D53               	goto	u3590
  5186  1552                     u3591:
  5187  1552  2D5F               	goto	l703
  5188  1553                     u3590:
  5189  1553  2CC3               	goto	l2561
  5190  1554                     l2605:
  5191  1554  3001               	movlw	1
  5192  1555  00F6               	movwf	??__tdiv_to_l_
  5193  1556                     u3605:
  5194  1556  1003               	clrc
  5195  1557  0DA0               	rlf	__tdiv_to_l_@quot,f
  5196  1558  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5197  1559  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5198  155A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5199  155B  0BF6               	decfsz	??__tdiv_to_l_,f
  5200  155C  2D56               	goto	u3605
  5201  155D  3001               	movlw	1
  5202  155E  02A5               	subwf	__tdiv_to_l_@exp1,f
  5203  155F                     l703:
  5204  155F  0825               	movf	__tdiv_to_l_@exp1,w
  5205  1560  1D03               	btfss	3,2
  5206  1561  2D63               	goto	u3611
  5207  1562  2D64               	goto	u3610
  5208  1563                     u3611:
  5209  1563  2D54               	goto	l2605
  5210  1564                     u3610:
  5211  1564                     l2607:
  5212  1564  0823               	movf	__tdiv_to_l_@quot+3,w
  5213  1565  00F3               	movwf	?__tdiv_to_l_+3
  5214  1566  0822               	movf	__tdiv_to_l_@quot+2,w
  5215  1567  00F2               	movwf	?__tdiv_to_l_+2
  5216  1568  0821               	movf	__tdiv_to_l_@quot+1,w
  5217  1569  00F1               	movwf	?__tdiv_to_l_+1
  5218  156A  0820               	movf	__tdiv_to_l_@quot,w
  5219  156B  00F0               	movwf	?__tdiv_to_l_
  5220  156C                     l692:
  5221  156C  0008               	return
  5222  156D                     __end_of__tdiv_to_l_:
  5223                           
  5224                           	psect	text16
  5225  0823                     __ptext16:	
  5226 ;; *************** function __div_to_l_ *****************
  5227 ;; Defined at:
  5228 ;;		line 60 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\fldivl.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;  f1              3    0[COMMON] unsigned long 
  5231 ;;  f2              3    3[COMMON] unsigned long 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;  quot            4    0[BANK0 ] unsigned long 
  5234 ;;  exp1            1    5[BANK0 ] unsigned char 
  5235 ;;  cntr            1    4[BANK0 ] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  4    0[COMMON] unsigned long 
  5238 ;; Registers used:
  5239 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5245 ;;      Params:         6       0       0       0       0
  5246 ;;      Locals:         0       6       0       0       0
  5247 ;;      Temps:          8       0       0       0       0
  5248 ;;      Totals:        14       6       0       0       0
  5249 ;;Total ram usage:       20 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; This function calls:
  5252 ;;		Nothing
  5253 ;; This function is called by:
  5254 ;;		_sprintf
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           
  5259                           ;psect for function __div_to_l_
  5260  0823                     __div_to_l_:
  5261  0823                     l2611:	
  5262                           ;incstack = 0
  5263                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5264                           
  5265  0823  3070               	movlw	low (__div_to_l_@f1| 0)
  5266  0824  0084               	movwf	4
  5267  0825  0800               	movf	0,w
  5268  0826  00F6               	movwf	??__div_to_l_
  5269  0827  0A84               	incf	4,f
  5270  0828  0800               	movf	0,w
  5271  0829  00F7               	movwf	??__div_to_l_+1
  5272  082A  0A84               	incf	4,f
  5273  082B  0800               	movf	0,w
  5274  082C  00F8               	movwf	??__div_to_l_+2
  5275  082D  0A84               	incf	4,f
  5276  082E  0800               	movf	0,w
  5277  082F  00F9               	movwf	??__div_to_l_+3
  5278  0830  1003               	clrc
  5279  0831  0D78               	rlf	??__div_to_l_+2,w
  5280  0832  0D79               	rlf	??__div_to_l_+3,w
  5281  0833  00FA               	movwf	??__div_to_l_+4
  5282  0834  087A               	movf	??__div_to_l_+4,w
  5283  0835  1283               	bcf	3,5	;RP0=0, select bank0
  5284  0836  1303               	bcf	3,6	;RP1=0, select bank0
  5285  0837  00A5               	movwf	__div_to_l_@exp1
  5286  0838  0825               	movf	__div_to_l_@exp1,w
  5287  0839  1D03               	btfss	3,2
  5288  083A  283C               	goto	u3621
  5289  083B  283D               	goto	u3620
  5290  083C                     u3621:
  5291  083C  2846               	goto	l2617
  5292  083D                     u3620:
  5293  083D                     l2613:
  5294  083D  3000               	movlw	0
  5295  083E  00F3               	movwf	?__div_to_l_+3
  5296  083F  3000               	movlw	0
  5297  0840  00F2               	movwf	?__div_to_l_+2
  5298  0841  3000               	movlw	0
  5299  0842  00F1               	movwf	?__div_to_l_+1
  5300  0843  3000               	movlw	0
  5301  0844  00F0               	movwf	?__div_to_l_
  5302  0845  294E               	goto	l613
  5303  0846                     l2617:
  5304  0846  3073               	movlw	low (__div_to_l_@f2| 0)
  5305  0847  0084               	movwf	4
  5306  0848  0800               	movf	0,w
  5307  0849  00F6               	movwf	??__div_to_l_
  5308  084A  0A84               	incf	4,f
  5309  084B  0800               	movf	0,w
  5310  084C  00F7               	movwf	??__div_to_l_+1
  5311  084D  0A84               	incf	4,f
  5312  084E  0800               	movf	0,w
  5313  084F  00F8               	movwf	??__div_to_l_+2
  5314  0850  0A84               	incf	4,f
  5315  0851  0800               	movf	0,w
  5316  0852  00F9               	movwf	??__div_to_l_+3
  5317  0853  1003               	clrc
  5318  0854  0D78               	rlf	??__div_to_l_+2,w
  5319  0855  0D79               	rlf	??__div_to_l_+3,w
  5320  0856  00FA               	movwf	??__div_to_l_+4
  5321  0857  087A               	movf	??__div_to_l_+4,w
  5322  0858  00A4               	movwf	__div_to_l_@cntr
  5323  0859  0824               	movf	__div_to_l_@cntr,w
  5324  085A  1D03               	btfss	3,2
  5325  085B  285D               	goto	u3631
  5326  085C  285E               	goto	u3630
  5327  085D                     u3631:
  5328  085D  285F               	goto	l2623
  5329  085E                     u3630:
  5330  085E  283D               	goto	l2613
  5331  085F                     l2623:
  5332  085F  3070               	movlw	low (__div_to_l_@f1| 0)
  5333  0860  0084               	movwf	4
  5334  0861  3000               	movlw	0
  5335  0862  0480               	iorwf	0,f
  5336  0863  0A84               	incf	4,f
  5337  0864  3000               	movlw	0
  5338  0865  0480               	iorwf	0,f
  5339  0866  0A84               	incf	4,f
  5340  0867  3080               	movlw	128
  5341  0868  0480               	iorwf	0,f
  5342  0869  0A84               	incf	4,f
  5343  086A  3000               	movlw	0
  5344  086B  0480               	iorwf	0,f
  5345  086C  3070               	movlw	low (__div_to_l_@f1| 0)
  5346  086D  0084               	movwf	4
  5347  086E  30FF               	movlw	255
  5348  086F  0580               	andwf	0,f
  5349  0870  0A84               	incf	4,f
  5350  0871  30FF               	movlw	255
  5351  0872  0580               	andwf	0,f
  5352  0873  0A84               	incf	4,f
  5353  0874  30FF               	movlw	255
  5354  0875  0580               	andwf	0,f
  5355  0876  0A84               	incf	4,f
  5356  0877  3000               	movlw	0
  5357  0878  0580               	andwf	0,f
  5358  0879  3073               	movlw	low (__div_to_l_@f2| 0)
  5359  087A  0084               	movwf	4
  5360  087B  3000               	movlw	0
  5361  087C  0480               	iorwf	0,f
  5362  087D  0A84               	incf	4,f
  5363  087E  3000               	movlw	0
  5364  087F  0480               	iorwf	0,f
  5365  0880  0A84               	incf	4,f
  5366  0881  3080               	movlw	128
  5367  0882  0480               	iorwf	0,f
  5368  0883  0A84               	incf	4,f
  5369  0884  3000               	movlw	0
  5370  0885  0480               	iorwf	0,f
  5371  0886  3073               	movlw	low (__div_to_l_@f2| 0)
  5372  0887  0084               	movwf	4
  5373  0888  30FF               	movlw	255
  5374  0889  0580               	andwf	0,f
  5375  088A  0A84               	incf	4,f
  5376  088B  30FF               	movlw	255
  5377  088C  0580               	andwf	0,f
  5378  088D  0A84               	incf	4,f
  5379  088E  30FF               	movlw	255
  5380  088F  0580               	andwf	0,f
  5381  0890  0A84               	incf	4,f
  5382  0891  3000               	movlw	0
  5383  0892  0580               	andwf	0,f
  5384  0893                     l2625:
  5385  0893  3000               	movlw	0
  5386  0894  00A3               	movwf	__div_to_l_@quot+3
  5387  0895  3000               	movlw	0
  5388  0896  00A2               	movwf	__div_to_l_@quot+2
  5389  0897  3000               	movlw	0
  5390  0898  00A1               	movwf	__div_to_l_@quot+1
  5391  0899  3000               	movlw	0
  5392  089A  00A0               	movwf	__div_to_l_@quot
  5393  089B                     l2627:
  5394  089B  307F               	movlw	127
  5395  089C  02A5               	subwf	__div_to_l_@exp1,f
  5396  089D                     l2629:
  5397  089D  30A0               	movlw	160
  5398  089E  0724               	addwf	__div_to_l_@cntr,w
  5399  089F  00F6               	movwf	??__div_to_l_
  5400  08A0  0876               	movf	??__div_to_l_,w
  5401  08A1  02A5               	subwf	__div_to_l_@exp1,f
  5402  08A2                     l2631:
  5403  08A2  3020               	movlw	32
  5404  08A3  00F6               	movwf	??__div_to_l_
  5405  08A4  0876               	movf	??__div_to_l_,w
  5406  08A5  00A4               	movwf	__div_to_l_@cntr
  5407  08A6                     l2633:
  5408  08A6  3001               	movlw	1
  5409  08A7  00F6               	movwf	??__div_to_l_
  5410  08A8                     u3645:
  5411  08A8  1003               	clrc
  5412  08A9  0DA0               	rlf	__div_to_l_@quot,f
  5413  08AA  0DA1               	rlf	__div_to_l_@quot+1,f
  5414  08AB  0DA2               	rlf	__div_to_l_@quot+2,f
  5415  08AC  0DA3               	rlf	__div_to_l_@quot+3,f
  5416  08AD  0BF6               	decfsz	??__div_to_l_,f
  5417  08AE  28A8               	goto	u3645
  5418  08AF                     l2635:
  5419  08AF  3073               	movlw	low (__div_to_l_@f2| 0)
  5420  08B0  0084               	movwf	4
  5421  08B1  0800               	movf	0,w
  5422  08B2  00F6               	movwf	??__div_to_l_
  5423  08B3  0A84               	incf	4,f
  5424  08B4  0800               	movf	0,w
  5425  08B5  00F7               	movwf	??__div_to_l_+1
  5426  08B6  0A84               	incf	4,f
  5427  08B7  0800               	movf	0,w
  5428  08B8  00F8               	movwf	??__div_to_l_+2
  5429  08B9  0A84               	incf	4,f
  5430  08BA  0800               	movf	0,w
  5431  08BB  00F9               	movwf	??__div_to_l_+3
  5432  08BC  3070               	movlw	low (__div_to_l_@f1| 0)
  5433  08BD  0084               	movwf	4
  5434  08BE  0800               	movf	0,w
  5435  08BF  00FA               	movwf	??__div_to_l_+4
  5436  08C0  0A84               	incf	4,f
  5437  08C1  0800               	movf	0,w
  5438  08C2  00FB               	movwf	??__div_to_l_+5
  5439  08C3  0A84               	incf	4,f
  5440  08C4  0800               	movf	0,w
  5441  08C5  00FC               	movwf	??__div_to_l_+6
  5442  08C6  0A84               	incf	4,f
  5443  08C7  0800               	movf	0,w
  5444  08C8  00FD               	movwf	??__div_to_l_+7
  5445  08C9  0879               	movf	??__div_to_l_+3,w
  5446  08CA  027D               	subwf	??__div_to_l_+7,w
  5447  08CB  1D03               	skipz
  5448  08CC  28D7               	goto	u3655
  5449  08CD  0878               	movf	??__div_to_l_+2,w
  5450  08CE  027C               	subwf	??__div_to_l_+6,w
  5451  08CF  1D03               	skipz
  5452  08D0  28D7               	goto	u3655
  5453  08D1  0877               	movf	??__div_to_l_+1,w
  5454  08D2  027B               	subwf	??__div_to_l_+5,w
  5455  08D3  1D03               	skipz
  5456  08D4  28D7               	goto	u3655
  5457  08D5  0876               	movf	??__div_to_l_,w
  5458  08D6  027A               	subwf	??__div_to_l_+4,w
  5459  08D7                     u3655:
  5460  08D7  1C03               	skipc
  5461  08D8  28DA               	goto	u3651
  5462  08D9  28DB               	goto	u3650
  5463  08DA                     u3651:
  5464  08DA  28FE               	goto	l616
  5465  08DB                     u3650:
  5466  08DB                     l2637:
  5467  08DB  3073               	movlw	low (__div_to_l_@f2| 0)
  5468  08DC  0084               	movwf	4
  5469  08DD  0800               	movf	0,w
  5470  08DE  00F6               	movwf	??__div_to_l_
  5471  08DF  0A84               	incf	4,f
  5472  08E0  0800               	movf	0,w
  5473  08E1  00F7               	movwf	??__div_to_l_+1
  5474  08E2  0A84               	incf	4,f
  5475  08E3  0800               	movf	0,w
  5476  08E4  00F8               	movwf	??__div_to_l_+2
  5477  08E5  0A84               	incf	4,f
  5478  08E6  0800               	movf	0,w
  5479  08E7  00F9               	movwf	??__div_to_l_+3
  5480  08E8  3070               	movlw	low (__div_to_l_@f1| 0)
  5481  08E9  0084               	movwf	4
  5482  08EA  0876               	movf	??__div_to_l_,w
  5483  08EB  0280               	subwf	0,f
  5484  08EC  0A84               	incf	4,f
  5485  08ED  0877               	movf	??__div_to_l_+1,w
  5486  08EE  1C03               	skipc
  5487  08EF  0F77               	incfsz	??__div_to_l_+1,w
  5488  08F0  0280               	subwf	0,f
  5489  08F1  0A84               	incf	4,f
  5490  08F2  0878               	movf	??__div_to_l_+2,w
  5491  08F3  1C03               	skipc
  5492  08F4  0F78               	incfsz	??__div_to_l_+2,w
  5493  08F5  0280               	subwf	0,f
  5494  08F6  0A84               	incf	4,f
  5495  08F7  0879               	movf	??__div_to_l_+3,w
  5496  08F8  1C03               	skipc
  5497  08F9  0A79               	incf	??__div_to_l_+3,w
  5498  08FA  0280               	subwf	0,f
  5499  08FB  3003               	movlw	3
  5500  08FC  0284               	subwf	4,f
  5501  08FD                     l2639:
  5502  08FD  1420               	bsf	__div_to_l_@quot,0
  5503  08FE                     l616:
  5504  08FE  3070               	movlw	low (__div_to_l_@f1| 0)
  5505  08FF  0084               	movwf	4
  5506  0900  1003               	clrc
  5507  0901  0D80               	rlf	0,f
  5508  0902  0A84               	incf	4,f
  5509  0903  0D80               	rlf	0,f
  5510  0904  0A84               	incf	4,f
  5511  0905  0D80               	rlf	0,f
  5512  0906  0A84               	incf	4,f
  5513  0907  0D80               	rlf	0,f
  5514  0908  0384               	decf	4,f
  5515  0909  0384               	decf	4,f
  5516  090A  0384               	decf	4,f
  5517  090B                     l2641:
  5518  090B  3001               	movlw	1
  5519  090C  02A4               	subwf	__div_to_l_@cntr,f
  5520  090D  1D03               	btfss	3,2
  5521  090E  2910               	goto	u3661
  5522  090F  2911               	goto	u3660
  5523  0910                     u3661:
  5524  0910  28A6               	goto	l2633
  5525  0911                     u3660:
  5526  0911                     l617:
  5527  0911  1FA5               	btfss	__div_to_l_@exp1,7
  5528  0912  2914               	goto	u3671
  5529  0913  2915               	goto	u3670
  5530  0914                     u3671:
  5531  0914  292F               	goto	l2651
  5532  0915                     u3670:
  5533  0915                     l2643:
  5534  0915  0825               	movf	__div_to_l_@exp1,w
  5535  0916  3A80               	xorlw	128
  5536  0917  3E9F               	addlw	159
  5537  0918  1803               	skipnc
  5538  0919  291B               	goto	u3681
  5539  091A  291C               	goto	u3680
  5540  091B                     u3681:
  5541  091B  291D               	goto	l2649
  5542  091C                     u3680:
  5543  091C  283D               	goto	l2613
  5544  091D                     l2649:
  5545  091D  3001               	movlw	1
  5546  091E                     u3695:
  5547  091E  1003               	clrc
  5548  091F  0CA3               	rrf	__div_to_l_@quot+3,f
  5549  0920  0CA2               	rrf	__div_to_l_@quot+2,f
  5550  0921  0CA1               	rrf	__div_to_l_@quot+1,f
  5551  0922  0CA0               	rrf	__div_to_l_@quot,f
  5552  0923  3EFF               	addlw	-1
  5553  0924  1D03               	skipz
  5554  0925  291E               	goto	u3695
  5555  0926  3001               	movlw	1
  5556  0927  00F6               	movwf	??__div_to_l_
  5557  0928  0876               	movf	??__div_to_l_,w
  5558  0929  07A5               	addwf	__div_to_l_@exp1,f
  5559  092A  1D03               	btfss	3,2
  5560  092B  292D               	goto	u3701
  5561  092C  292E               	goto	u3700
  5562  092D                     u3701:
  5563  092D  291D               	goto	l2649
  5564  092E                     u3700:
  5565  092E  2946               	goto	l2659
  5566  092F                     l2651:
  5567  092F  3020               	movlw	32
  5568  0930  0225               	subwf	__div_to_l_@exp1,w
  5569  0931  1C03               	skipc
  5570  0932  2934               	goto	u3711
  5571  0933  2935               	goto	u3710
  5572  0934                     u3711:
  5573  0934  2941               	goto	l624
  5574  0935                     u3710:
  5575  0935  283D               	goto	l2613
  5576  0936                     l2657:
  5577  0936  3001               	movlw	1
  5578  0937  00F6               	movwf	??__div_to_l_
  5579  0938                     u3725:
  5580  0938  1003               	clrc
  5581  0939  0DA0               	rlf	__div_to_l_@quot,f
  5582  093A  0DA1               	rlf	__div_to_l_@quot+1,f
  5583  093B  0DA2               	rlf	__div_to_l_@quot+2,f
  5584  093C  0DA3               	rlf	__div_to_l_@quot+3,f
  5585  093D  0BF6               	decfsz	??__div_to_l_,f
  5586  093E  2938               	goto	u3725
  5587  093F  3001               	movlw	1
  5588  0940  02A5               	subwf	__div_to_l_@exp1,f
  5589  0941                     l624:
  5590  0941  0825               	movf	__div_to_l_@exp1,w
  5591  0942  1D03               	btfss	3,2
  5592  0943  2945               	goto	u3731
  5593  0944  2946               	goto	u3730
  5594  0945                     u3731:
  5595  0945  2936               	goto	l2657
  5596  0946                     u3730:
  5597  0946                     l2659:
  5598  0946  0823               	movf	__div_to_l_@quot+3,w
  5599  0947  00F3               	movwf	?__div_to_l_+3
  5600  0948  0822               	movf	__div_to_l_@quot+2,w
  5601  0949  00F2               	movwf	?__div_to_l_+2
  5602  094A  0821               	movf	__div_to_l_@quot+1,w
  5603  094B  00F1               	movwf	?__div_to_l_+1
  5604  094C  0820               	movf	__div_to_l_@quot,w
  5605  094D  00F0               	movwf	?__div_to_l_
  5606  094E                     l613:
  5607  094E  0008               	return
  5608  094F                     __end_of__div_to_l_:
  5609                           
  5610                           	psect	text17
  5611  1E4F                     __ptext17:	
  5612 ;; *************** function ___wmul *****************
  5613 ;; Defined at:
  5614 ;;		line 15 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\Umul16.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;  multiplier      2    0[COMMON] unsigned int 
  5617 ;;  multiplicand    2    2[COMMON] unsigned int 
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;  product         2    4[COMMON] unsigned int 
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  2    0[COMMON] unsigned int 
  5622 ;; Registers used:
  5623 ;;		wreg, status,2, status,0
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5629 ;;      Params:         4       0       0       0       0
  5630 ;;      Locals:         2       0       0       0       0
  5631 ;;      Temps:          0       0       0       0       0
  5632 ;;      Totals:         6       0       0       0       0
  5633 ;;Total ram usage:        6 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		_sprintf
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           
  5643                           ;psect for function ___wmul
  5644  1E4F                     ___wmul:
  5645  1E4F                     l2663:	
  5646                           ;incstack = 0
  5647                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5648                           
  5649  1E4F  01F4               	clrf	___wmul@product
  5650  1E50  01F5               	clrf	___wmul@product+1
  5651  1E51                     l2665:
  5652  1E51  1C70               	btfss	___wmul@multiplier,0
  5653  1E52  2E54               	goto	u3741
  5654  1E53  2E55               	goto	u3740
  5655  1E54                     u3741:
  5656  1E54  2E5B               	goto	l407
  5657  1E55                     u3740:
  5658  1E55                     l2667:
  5659  1E55  0872               	movf	___wmul@multiplicand,w
  5660  1E56  07F4               	addwf	___wmul@product,f
  5661  1E57  1803               	skipnc
  5662  1E58  0AF5               	incf	___wmul@product+1,f
  5663  1E59  0873               	movf	___wmul@multiplicand+1,w
  5664  1E5A  07F5               	addwf	___wmul@product+1,f
  5665  1E5B                     l407:
  5666  1E5B  3001               	movlw	1
  5667  1E5C                     u3755:
  5668  1E5C  1003               	clrc
  5669  1E5D  0DF2               	rlf	___wmul@multiplicand,f
  5670  1E5E  0DF3               	rlf	___wmul@multiplicand+1,f
  5671  1E5F  3EFF               	addlw	-1
  5672  1E60  1D03               	skipz
  5673  1E61  2E5C               	goto	u3755
  5674  1E62                     l2669:
  5675  1E62  3001               	movlw	1
  5676  1E63                     u3765:
  5677  1E63  1003               	clrc
  5678  1E64  0CF1               	rrf	___wmul@multiplier+1,f
  5679  1E65  0CF0               	rrf	___wmul@multiplier,f
  5680  1E66  3EFF               	addlw	-1
  5681  1E67  1D03               	skipz
  5682  1E68  2E63               	goto	u3765
  5683  1E69                     l2671:
  5684  1E69  0870               	movf	___wmul@multiplier,w
  5685  1E6A  0471               	iorwf	___wmul@multiplier+1,w
  5686  1E6B  1D03               	btfss	3,2
  5687  1E6C  2E6E               	goto	u3771
  5688  1E6D  2E6F               	goto	u3770
  5689  1E6E                     u3771:
  5690  1E6E  2E51               	goto	l2665
  5691  1E6F                     u3770:
  5692  1E6F                     l2673:
  5693  1E6F  0875               	movf	___wmul@product+1,w
  5694  1E70  00F1               	movwf	?___wmul+1
  5695  1E71  0874               	movf	___wmul@product,w
  5696  1E72  00F0               	movwf	?___wmul
  5697  1E73                     l409:
  5698  1E73  0008               	return
  5699  1E74                     __end_of___wmul:
  5700                           
  5701                           	psect	text18
  5702  1FAC                     __ptext18:	
  5703 ;; *************** function ___llmod *****************
  5704 ;; Defined at:
  5705 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\llmod.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;  divisor         4    0[COMMON] unsigned long 
  5708 ;;  dividend        4    4[COMMON] unsigned long 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  counter         1    9[COMMON] unsigned char 
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  4    0[COMMON] unsigned long 
  5713 ;; Registers used:
  5714 ;;		wreg, status,2, status,0
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5720 ;;      Params:         8       0       0       0       0
  5721 ;;      Locals:         1       0       0       0       0
  5722 ;;      Temps:          1       0       0       0       0
  5723 ;;      Totals:        10       0       0       0       0
  5724 ;;Total ram usage:       10 bytes
  5725 ;; Hardware stack levels used:    1
  5726 ;; This function calls:
  5727 ;;		Nothing
  5728 ;; This function is called by:
  5729 ;;		_sprintf
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           
  5734                           ;psect for function ___llmod
  5735  1FAC                     ___llmod:
  5736  1FAC                     l2861:	
  5737                           ;incstack = 0
  5738                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5739                           
  5740  1FAC  0873               	movf	___llmod@divisor+3,w
  5741  1FAD  0472               	iorwf	___llmod@divisor+2,w
  5742  1FAE  0471               	iorwf	___llmod@divisor+1,w
  5743  1FAF  0470               	iorwf	___llmod@divisor,w
  5744  1FB0  1903               	skipnz
  5745  1FB1  2FB3               	goto	u4181
  5746  1FB2  2FB4               	goto	u4180
  5747  1FB3                     u4181:
  5748  1FB3  2FF7               	goto	l2877
  5749  1FB4                     u4180:
  5750  1FB4                     l2863:
  5751  1FB4  01F9               	clrf	___llmod@counter
  5752  1FB5  0AF9               	incf	___llmod@counter,f
  5753  1FB6  2FC4               	goto	l2867
  5754  1FB7                     l2865:
  5755  1FB7  3001               	movlw	1
  5756  1FB8  00F8               	movwf	??___llmod
  5757  1FB9                     u4195:
  5758  1FB9  1003               	clrc
  5759  1FBA  0DF0               	rlf	___llmod@divisor,f
  5760  1FBB  0DF1               	rlf	___llmod@divisor+1,f
  5761  1FBC  0DF2               	rlf	___llmod@divisor+2,f
  5762  1FBD  0DF3               	rlf	___llmod@divisor+3,f
  5763  1FBE  0BF8               	decfsz	??___llmod,f
  5764  1FBF  2FB9               	goto	u4195
  5765  1FC0  3001               	movlw	1
  5766  1FC1  00F8               	movwf	??___llmod
  5767  1FC2  0878               	movf	??___llmod,w
  5768  1FC3  07F9               	addwf	___llmod@counter,f
  5769  1FC4                     l2867:
  5770  1FC4  1FF3               	btfss	___llmod@divisor+3,7
  5771  1FC5  2FC7               	goto	u4201
  5772  1FC6  2FC8               	goto	u4200
  5773  1FC7                     u4201:
  5774  1FC7  2FB7               	goto	l2865
  5775  1FC8                     u4200:
  5776  1FC8                     l2869:
  5777  1FC8  0873               	movf	___llmod@divisor+3,w
  5778  1FC9  0277               	subwf	___llmod@dividend+3,w
  5779  1FCA  1D03               	skipz
  5780  1FCB  2FD6               	goto	u4215
  5781  1FCC  0872               	movf	___llmod@divisor+2,w
  5782  1FCD  0276               	subwf	___llmod@dividend+2,w
  5783  1FCE  1D03               	skipz
  5784  1FCF  2FD6               	goto	u4215
  5785  1FD0  0871               	movf	___llmod@divisor+1,w
  5786  1FD1  0275               	subwf	___llmod@dividend+1,w
  5787  1FD2  1D03               	skipz
  5788  1FD3  2FD6               	goto	u4215
  5789  1FD4  0870               	movf	___llmod@divisor,w
  5790  1FD5  0274               	subwf	___llmod@dividend,w
  5791  1FD6                     u4215:
  5792  1FD6  1C03               	skipc
  5793  1FD7  2FD9               	goto	u4211
  5794  1FD8  2FDA               	goto	u4210
  5795  1FD9                     u4211:
  5796  1FD9  2FE8               	goto	l2873
  5797  1FDA                     u4210:
  5798  1FDA                     l2871:
  5799  1FDA  0870               	movf	___llmod@divisor,w
  5800  1FDB  02F4               	subwf	___llmod@dividend,f
  5801  1FDC  0871               	movf	___llmod@divisor+1,w
  5802  1FDD  1C03               	skipc
  5803  1FDE  0F71               	incfsz	___llmod@divisor+1,w
  5804  1FDF  02F5               	subwf	___llmod@dividend+1,f
  5805  1FE0  0872               	movf	___llmod@divisor+2,w
  5806  1FE1  1C03               	skipc
  5807  1FE2  0F72               	incfsz	___llmod@divisor+2,w
  5808  1FE3  02F6               	subwf	___llmod@dividend+2,f
  5809  1FE4  0873               	movf	___llmod@divisor+3,w
  5810  1FE5  1C03               	skipc
  5811  1FE6  0F73               	incfsz	___llmod@divisor+3,w
  5812  1FE7  02F7               	subwf	___llmod@dividend+3,f
  5813  1FE8                     l2873:
  5814  1FE8  3001               	movlw	1
  5815  1FE9                     u4225:
  5816  1FE9  1003               	clrc
  5817  1FEA  0CF3               	rrf	___llmod@divisor+3,f
  5818  1FEB  0CF2               	rrf	___llmod@divisor+2,f
  5819  1FEC  0CF1               	rrf	___llmod@divisor+1,f
  5820  1FED  0CF0               	rrf	___llmod@divisor,f
  5821  1FEE  3EFF               	addlw	-1
  5822  1FEF  1D03               	skipz
  5823  1FF0  2FE9               	goto	u4225
  5824  1FF1                     l2875:
  5825  1FF1  3001               	movlw	1
  5826  1FF2  02F9               	subwf	___llmod@counter,f
  5827  1FF3  1D03               	btfss	3,2
  5828  1FF4  2FF6               	goto	u4231
  5829  1FF5  2FF7               	goto	u4230
  5830  1FF6                     u4231:
  5831  1FF6  2FC8               	goto	l2869
  5832  1FF7                     u4230:
  5833  1FF7                     l2877:
  5834  1FF7  0877               	movf	___llmod@dividend+3,w
  5835  1FF8  00F3               	movwf	?___llmod+3
  5836  1FF9  0876               	movf	___llmod@dividend+2,w
  5837  1FFA  00F2               	movwf	?___llmod+2
  5838  1FFB  0875               	movf	___llmod@dividend+1,w
  5839  1FFC  00F1               	movwf	?___llmod+1
  5840  1FFD  0874               	movf	___llmod@dividend,w
  5841  1FFE  00F0               	movwf	?___llmod
  5842  1FFF                     l778:
  5843  1FFF  0008               	return
  5844  2000                     __end_of___llmod:
  5845                           
  5846                           	psect	text19
  5847  12DB                     __ptext19:	
  5848 ;; *************** function ___fttol *****************
  5849 ;; Defined at:
  5850 ;;		line 44 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\fttol.c"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;  f1              3   33[BANK0 ] float 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;  lval            4   42[BANK0 ] unsigned long 
  5855 ;;  exp1            1   46[BANK0 ] unsigned char 
  5856 ;;  sign1           1   41[BANK0 ] unsigned char 
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  4   33[BANK0 ] long 
  5859 ;; Registers used:
  5860 ;;		wreg, status,2, status,0
  5861 ;; Tracked objects:
  5862 ;;		On entry : 0/0
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5866 ;;      Params:         0       4       0       0       0
  5867 ;;      Locals:         0       6       0       0       0
  5868 ;;      Temps:          0       4       0       0       0
  5869 ;;      Totals:         0      14       0       0       0
  5870 ;;Total ram usage:       14 bytes
  5871 ;; Hardware stack levels used:    1
  5872 ;; This function calls:
  5873 ;;		Nothing
  5874 ;; This function is called by:
  5875 ;;		_sprintf
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           
  5880                           ;psect for function ___fttol
  5881  12DB                     ___fttol:
  5882  12DB                     l2819:	
  5883                           ;incstack = 0
  5884                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5885                           
  5886  12DB  1283               	bcf	3,5	;RP0=0, select bank0
  5887  12DC  1303               	bcf	3,6	;RP1=0, select bank0
  5888  12DD  0841               	movf	___fttol@f1,w
  5889  12DE  00C5               	movwf	??___fttol
  5890  12DF  0842               	movf	___fttol@f1+1,w
  5891  12E0  00C6               	movwf	??___fttol+1
  5892  12E1  0843               	movf	___fttol@f1+2,w
  5893  12E2  00C7               	movwf	??___fttol+2
  5894  12E3  1003               	clrc
  5895  12E4  0D46               	rlf	??___fttol+1,w
  5896  12E5  0D47               	rlf	??___fttol+2,w
  5897  12E6  00C8               	movwf	??___fttol+3
  5898  12E7  0848               	movf	??___fttol+3,w
  5899  12E8  00CE               	movwf	___fttol@exp1
  5900  12E9  084E               	movf	___fttol@exp1,w
  5901  12EA  1D03               	btfss	3,2
  5902  12EB  2AED               	goto	u4081
  5903  12EC  2AEE               	goto	u4080
  5904  12ED                     u4081:
  5905  12ED  2AF7               	goto	l2825
  5906  12EE                     u4080:
  5907  12EE                     l2821:
  5908  12EE  3000               	movlw	0
  5909  12EF  00C4               	movwf	?___fttol+3
  5910  12F0  3000               	movlw	0
  5911  12F1  00C3               	movwf	?___fttol+2
  5912  12F2  3000               	movlw	0
  5913  12F3  00C2               	movwf	?___fttol+1
  5914  12F4  3000               	movlw	0
  5915  12F5  00C1               	movwf	?___fttol
  5916  12F6  2B66               	goto	l737
  5917  12F7                     l2825:
  5918  12F7  0841               	movf	___fttol@f1,w
  5919  12F8  00C5               	movwf	??___fttol
  5920  12F9  0842               	movf	___fttol@f1+1,w
  5921  12FA  00C6               	movwf	??___fttol+1
  5922  12FB  0843               	movf	___fttol@f1+2,w
  5923  12FC  00C7               	movwf	??___fttol+2
  5924  12FD  3017               	movlw	23
  5925  12FE                     u4095:
  5926  12FE  1003               	clrc
  5927  12FF  0CC7               	rrf	??___fttol+2,f
  5928  1300  0CC6               	rrf	??___fttol+1,f
  5929  1301  0CC5               	rrf	??___fttol,f
  5930  1302                     u4090:
  5931  1302  3EFF               	addlw	-1
  5932  1303  1D03               	skipz
  5933  1304  2AFE               	goto	u4095
  5934  1305  0845               	movf	??___fttol,w
  5935  1306  00C8               	movwf	??___fttol+3
  5936  1307  0848               	movf	??___fttol+3,w
  5937  1308  00C9               	movwf	___fttol@sign1
  5938  1309                     l2827:
  5939  1309  17C2               	bsf	___fttol@f1+1,7
  5940  130A                     l2829:
  5941  130A  30FF               	movlw	255
  5942  130B  05C1               	andwf	___fttol@f1,f
  5943  130C  30FF               	movlw	255
  5944  130D  05C2               	andwf	___fttol@f1+1,f
  5945  130E  3000               	movlw	0
  5946  130F  05C3               	andwf	___fttol@f1+2,f
  5947  1310                     l2831:
  5948  1310  0841               	movf	___fttol@f1,w
  5949  1311  00CA               	movwf	___fttol@lval
  5950  1312  0842               	movf	___fttol@f1+1,w
  5951  1313  00CB               	movwf	___fttol@lval+1
  5952  1314  0843               	movf	___fttol@f1+2,w
  5953  1315  00CC               	movwf	___fttol@lval+2
  5954  1316  01CD               	clrf	___fttol@lval+3
  5955  1317                     l2833:
  5956  1317  308E               	movlw	142
  5957  1318  02CE               	subwf	___fttol@exp1,f
  5958  1319                     l2835:
  5959  1319  1FCE               	btfss	___fttol@exp1,7
  5960  131A  2B1C               	goto	u4101
  5961  131B  2B1D               	goto	u4100
  5962  131C                     u4101:
  5963  131C  2B37               	goto	l2845
  5964  131D                     u4100:
  5965  131D                     l2837:
  5966  131D  084E               	movf	___fttol@exp1,w
  5967  131E  3A80               	xorlw	128
  5968  131F  3E8F               	addlw	143
  5969  1320  1803               	skipnc
  5970  1321  2B23               	goto	u4111
  5971  1322  2B24               	goto	u4110
  5972  1323                     u4111:
  5973  1323  2B25               	goto	l2843
  5974  1324                     u4110:
  5975  1324  2AEE               	goto	l2821
  5976  1325                     l2843:
  5977  1325  3001               	movlw	1
  5978  1326                     u4125:
  5979  1326  1003               	clrc
  5980  1327  0CCD               	rrf	___fttol@lval+3,f
  5981  1328  0CCC               	rrf	___fttol@lval+2,f
  5982  1329  0CCB               	rrf	___fttol@lval+1,f
  5983  132A  0CCA               	rrf	___fttol@lval,f
  5984  132B  3EFF               	addlw	-1
  5985  132C  1D03               	skipz
  5986  132D  2B26               	goto	u4125
  5987  132E  3001               	movlw	1
  5988  132F  00C5               	movwf	??___fttol
  5989  1330  0845               	movf	??___fttol,w
  5990  1331  07CE               	addwf	___fttol@exp1,f
  5991  1332  1D03               	btfss	3,2
  5992  1333  2B35               	goto	u4131
  5993  1334  2B36               	goto	u4130
  5994  1335                     u4131:
  5995  1335  2B25               	goto	l2843
  5996  1336                     u4130:
  5997  1336  2B4E               	goto	l2853
  5998  1337                     l2845:
  5999  1337  3018               	movlw	24
  6000  1338  024E               	subwf	___fttol@exp1,w
  6001  1339  1C03               	skipc
  6002  133A  2B3C               	goto	u4141
  6003  133B  2B3D               	goto	u4140
  6004  133C                     u4141:
  6005  133C  2B49               	goto	l744
  6006  133D                     u4140:
  6007  133D  2AEE               	goto	l2821
  6008  133E                     l2851:
  6009  133E  3001               	movlw	1
  6010  133F  00C5               	movwf	??___fttol
  6011  1340                     u4155:
  6012  1340  1003               	clrc
  6013  1341  0DCA               	rlf	___fttol@lval,f
  6014  1342  0DCB               	rlf	___fttol@lval+1,f
  6015  1343  0DCC               	rlf	___fttol@lval+2,f
  6016  1344  0DCD               	rlf	___fttol@lval+3,f
  6017  1345  0BC5               	decfsz	??___fttol,f
  6018  1346  2B40               	goto	u4155
  6019  1347  3001               	movlw	1
  6020  1348  02CE               	subwf	___fttol@exp1,f
  6021  1349                     l744:
  6022  1349  084E               	movf	___fttol@exp1,w
  6023  134A  1D03               	btfss	3,2
  6024  134B  2B4D               	goto	u4161
  6025  134C  2B4E               	goto	u4160
  6026  134D                     u4161:
  6027  134D  2B3E               	goto	l2851
  6028  134E                     u4160:
  6029  134E                     l2853:
  6030  134E  0849               	movf	___fttol@sign1,w
  6031  134F  1903               	btfsc	3,2
  6032  1350  2B52               	goto	u4171
  6033  1351  2B53               	goto	u4170
  6034  1352                     u4171:
  6035  1352  2B5E               	goto	l2857
  6036  1353                     u4170:
  6037  1353                     l2855:
  6038  1353  09CA               	comf	___fttol@lval,f
  6039  1354  09CB               	comf	___fttol@lval+1,f
  6040  1355  09CC               	comf	___fttol@lval+2,f
  6041  1356  09CD               	comf	___fttol@lval+3,f
  6042  1357  0ACA               	incf	___fttol@lval,f
  6043  1358  1903               	skipnz
  6044  1359  0ACB               	incf	___fttol@lval+1,f
  6045  135A  1903               	skipnz
  6046  135B  0ACC               	incf	___fttol@lval+2,f
  6047  135C  1903               	skipnz
  6048  135D  0ACD               	incf	___fttol@lval+3,f
  6049  135E                     l2857:
  6050  135E  084D               	movf	___fttol@lval+3,w
  6051  135F  00C4               	movwf	?___fttol+3
  6052  1360  084C               	movf	___fttol@lval+2,w
  6053  1361  00C3               	movwf	?___fttol+2
  6054  1362  084B               	movf	___fttol@lval+1,w
  6055  1363  00C2               	movwf	?___fttol+1
  6056  1364  084A               	movf	___fttol@lval,w
  6057  1365  00C1               	movwf	?___fttol
  6058  1366                     l737:
  6059  1366  0008               	return
  6060  1367                     __end_of___fttol:
  6061                           
  6062                           	psect	text20
  6063  1E2A                     __ptext20:	
  6064 ;; *************** function ___ftsub *****************
  6065 ;; Defined at:
  6066 ;;		line 17 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftsub.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  f2              3   53[BANK0 ] float 
  6069 ;;  f1              3   56[BANK0 ] float 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  3   53[BANK0 ] float 
  6074 ;; Registers used:
  6075 ;;		wreg, status,2, status,0, pclath, cstack
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6081 ;;      Params:         0       6       0       0       0
  6082 ;;      Locals:         0       0       0       0       0
  6083 ;;      Temps:          0       0       0       0       0
  6084 ;;      Totals:         0       6       0       0       0
  6085 ;;Total ram usage:        6 bytes
  6086 ;; Hardware stack levels used:    1
  6087 ;; Hardware stack levels required when called:    2
  6088 ;; This function calls:
  6089 ;;		___ftadd
  6090 ;; This function is called by:
  6091 ;;		_sprintf
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           
  6096                           ;psect for function ___ftsub
  6097  1E2A                     ___ftsub:
  6098  1E2A                     l2811:	
  6099                           ;incstack = 0
  6100                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6101                           
  6102  1E2A  1283               	bcf	3,5	;RP0=0, select bank0
  6103  1E2B  1303               	bcf	3,6	;RP1=0, select bank0
  6104  1E2C  0857               	movf	___ftsub@f2+2,w
  6105  1E2D  0456               	iorwf	___ftsub@f2+1,w
  6106  1E2E  0455               	iorwf	___ftsub@f2,w
  6107  1E2F  1903               	skipnz
  6108  1E30  2E32               	goto	u4071
  6109  1E31  2E33               	goto	u4070
  6110  1E32                     u4071:
  6111  1E32  2E35               	goto	l2815
  6112  1E33                     u4070:
  6113  1E33                     l2813:
  6114  1E33  3080               	movlw	128
  6115  1E34  06D7               	xorwf	___ftsub@f2+2,f
  6116  1E35                     l2815:
  6117  1E35  0858               	movf	___ftsub@f1,w
  6118  1E36  00C8               	movwf	___ftadd@f1
  6119  1E37  0859               	movf	___ftsub@f1+1,w
  6120  1E38  00C9               	movwf	___ftadd@f1+1
  6121  1E39  085A               	movf	___ftsub@f1+2,w
  6122  1E3A  00CA               	movwf	___ftadd@f1+2
  6123  1E3B  0855               	movf	___ftsub@f2,w
  6124  1E3C  00CB               	movwf	___ftadd@f2
  6125  1E3D  0856               	movf	___ftsub@f2+1,w
  6126  1E3E  00CC               	movwf	___ftadd@f2+1
  6127  1E3F  0857               	movf	___ftsub@f2+2,w
  6128  1E40  00CD               	movwf	___ftadd@f2+2
  6129  1E41  120A  158A  214F  160A  158A  	fcall	___ftadd
  6130  1E46  1283               	bcf	3,5	;RP0=0, select bank0
  6131  1E47  1303               	bcf	3,6	;RP1=0, select bank0
  6132  1E48  0848               	movf	?___ftadd,w
  6133  1E49  00D5               	movwf	?___ftsub
  6134  1E4A  0849               	movf	?___ftadd+1,w
  6135  1E4B  00D6               	movwf	?___ftsub+1
  6136  1E4C  084A               	movf	?___ftadd+2,w
  6137  1E4D  00D7               	movwf	?___ftsub+2
  6138  1E4E                     l733:
  6139  1E4E  0008               	return
  6140  1E4F                     __end_of___ftsub:
  6141                           
  6142                           	psect	text21
  6143  1DBC                     __ptext21:	
  6144 ;; *************** function ___ftneg *****************
  6145 ;; Defined at:
  6146 ;;		line 15 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftneg.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  f1              3    0[COMMON] float 
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;		None
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  3    0[COMMON] float 
  6153 ;; Registers used:
  6154 ;;		wreg
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6160 ;;      Params:         3       0       0       0       0
  6161 ;;      Locals:         0       0       0       0       0
  6162 ;;      Temps:          0       0       0       0       0
  6163 ;;      Totals:         3       0       0       0       0
  6164 ;;Total ram usage:        3 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		_sprintf
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           
  6174                           ;psect for function ___ftneg
  6175  1DBC                     ___ftneg:
  6176  1DBC                     l2803:	
  6177                           ;incstack = 0
  6178                           ; Regs used in ___ftneg: [wreg]
  6179                           
  6180  1DBC  0872               	movf	___ftneg@f1+2,w
  6181  1DBD  0471               	iorwf	___ftneg@f1+1,w
  6182  1DBE  0470               	iorwf	___ftneg@f1,w
  6183  1DBF  1903               	skipnz
  6184  1DC0  2DC2               	goto	u4061
  6185  1DC1  2DC3               	goto	u4060
  6186  1DC2                     u4061:
  6187  1DC2  2DC5               	goto	l2807
  6188  1DC3                     u4060:
  6189  1DC3                     l2805:
  6190  1DC3  3080               	movlw	128
  6191  1DC4  06F2               	xorwf	___ftneg@f1+2,f
  6192  1DC5                     l2807:
  6193  1DC5                     l727:
  6194  1DC5  0008               	return
  6195  1DC6                     __end_of___ftneg:
  6196                           
  6197                           	psect	text22
  6198  1F30                     __ptext22:	
  6199 ;; *************** function ___ftge *****************
  6200 ;; Defined at:
  6201 ;;		line 4 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftge.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;  ff1             3    0[COMMON] float 
  6204 ;;  ff2             3    3[COMMON] float 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;		None
  6207 ;; Return value:  Size  Location     Type
  6208 ;;		None               void
  6209 ;; Registers used:
  6210 ;;		wreg, status,2, status,0
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6216 ;;      Params:         6       0       0       0       0
  6217 ;;      Locals:         0       0       0       0       0
  6218 ;;      Temps:          0       0       0       0       0
  6219 ;;      Totals:         6       0       0       0       0
  6220 ;;Total ram usage:        6 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; This function calls:
  6223 ;;		Nothing
  6224 ;; This function is called by:
  6225 ;;		_sprintf
  6226 ;; This function uses a non-reentrant model
  6227 ;;
  6228                           
  6229                           
  6230                           ;psect for function ___ftge
  6231  1F30                     ___ftge:
  6232  1F30                     l2783:	
  6233                           ;incstack = 0
  6234                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6235                           
  6236  1F30  1FF2               	btfss	___ftge@ff1+2,7
  6237  1F31  2F33               	goto	u4031
  6238  1F32  2F34               	goto	u4030
  6239  1F33                     u4031:
  6240  1F33  2F41               	goto	l2787
  6241  1F34                     u4030:
  6242  1F34                     l2785:
  6243  1F34  0870               	movf	___ftge@ff1,w
  6244  1F35  3C00               	sublw	0
  6245  1F36  00F0               	movwf	___ftge@ff1
  6246  1F37  0871               	movf	___ftge@ff1+1,w
  6247  1F38  1C03               	skipc
  6248  1F39  0F71               	incfsz	___ftge@ff1+1,w
  6249  1F3A  3C00               	sublw	0
  6250  1F3B  00F1               	movwf	___ftge@ff1+1
  6251  1F3C  0872               	movf	___ftge@ff1+2,w
  6252  1F3D  1C03               	skipc
  6253  1F3E  0F72               	incfsz	___ftge@ff1+2,w
  6254  1F3F  3C80               	sublw	128
  6255  1F40  00F2               	movwf	___ftge@ff1+2
  6256  1F41                     l2787:
  6257  1F41  1FF5               	btfss	___ftge@ff2+2,7
  6258  1F42  2F44               	goto	u4041
  6259  1F43  2F45               	goto	u4040
  6260  1F44                     u4041:
  6261  1F44  2F52               	goto	l2791
  6262  1F45                     u4040:
  6263  1F45                     l2789:
  6264  1F45  0873               	movf	___ftge@ff2,w
  6265  1F46  3C00               	sublw	0
  6266  1F47  00F3               	movwf	___ftge@ff2
  6267  1F48  0874               	movf	___ftge@ff2+1,w
  6268  1F49  1C03               	skipc
  6269  1F4A  0F74               	incfsz	___ftge@ff2+1,w
  6270  1F4B  3C00               	sublw	0
  6271  1F4C  00F4               	movwf	___ftge@ff2+1
  6272  1F4D  0875               	movf	___ftge@ff2+2,w
  6273  1F4E  1C03               	skipc
  6274  1F4F  0F75               	incfsz	___ftge@ff2+2,w
  6275  1F50  3C80               	sublw	128
  6276  1F51  00F5               	movwf	___ftge@ff2+2
  6277  1F52                     l2791:
  6278  1F52  3080               	movlw	128
  6279  1F53  06F2               	xorwf	___ftge@ff1+2,f
  6280  1F54                     l2793:
  6281  1F54  3080               	movlw	128
  6282  1F55  06F5               	xorwf	___ftge@ff2+2,f
  6283  1F56                     l2795:
  6284  1F56  0875               	movf	___ftge@ff2+2,w
  6285  1F57  0272               	subwf	___ftge@ff1+2,w
  6286  1F58  1D03               	skipz
  6287  1F59  2F60               	goto	u4055
  6288  1F5A  0874               	movf	___ftge@ff2+1,w
  6289  1F5B  0271               	subwf	___ftge@ff1+1,w
  6290  1F5C  1D03               	skipz
  6291  1F5D  2F60               	goto	u4055
  6292  1F5E  0873               	movf	___ftge@ff2,w
  6293  1F5F  0270               	subwf	___ftge@ff1,w
  6294  1F60                     u4055:
  6295  1F60  1803               	skipnc
  6296  1F61  2F63               	goto	u4051
  6297  1F62  2F64               	goto	u4050
  6298  1F63                     u4051:
  6299  1F63  2F66               	goto	l2799
  6300  1F64                     u4050:
  6301  1F64                     l2797:
  6302  1F64  1003               	clrc
  6303  1F65  2F67               	goto	l710
  6304  1F66                     l2799:
  6305  1F66  1403               	setc
  6306  1F67                     l710:
  6307  1F67  0008               	return
  6308  1F68                     __end_of___ftge:
  6309                           
  6310                           	psect	text23
  6311  1E04                     __ptext23:	
  6312 ;; *************** function _configIO *****************
  6313 ;; Defined at:
  6314 ;;		line 43 in file "pic16f.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;		None
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		status,2
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6328 ;;      Params:         0       0       0       0       0
  6329 ;;      Locals:         0       0       0       0       0
  6330 ;;      Temps:          0       0       0       0       0
  6331 ;;      Totals:         0       0       0       0       0
  6332 ;;Total ram usage:        0 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; This function calls:
  6335 ;;		Nothing
  6336 ;; This function is called by:
  6337 ;;		_main
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           
  6342                           ;psect for function _configIO
  6343  1E04                     _configIO:
  6344  1E04                     l2891:	
  6345                           ;incstack = 0
  6346                           ; Regs used in _configIO: [status,2]
  6347                           
  6348                           
  6349                           ;pic16f.c: 44:     TRISD=0;
  6350  1E04  1683               	bsf	3,5	;RP0=1, select bank1
  6351  1E05  1303               	bcf	3,6	;RP1=0, select bank1
  6352  1E06  0188               	clrf	8	;volatile
  6353                           
  6354                           ;pic16f.c: 45:     ANSEL=0;
  6355  1E07  1683               	bsf	3,5	;RP0=1, select bank3
  6356  1E08  1703               	bsf	3,6	;RP1=1, select bank3
  6357  1E09  0188               	clrf	8	;volatile
  6358                           
  6359                           ;pic16f.c: 46:     ANSELH=0;
  6360  1E0A  0189               	clrf	9	;volatile
  6361                           
  6362                           ;pic16f.c: 47:     PORTD=0;
  6363  1E0B  1283               	bcf	3,5	;RP0=0, select bank0
  6364  1E0C  1303               	bcf	3,6	;RP1=0, select bank0
  6365  1E0D  0188               	clrf	8	;volatile
  6366  1E0E                     l2893:
  6367                           
  6368                           ;pic16f.c: 49:     INTCONbits.PEIE=1;
  6369  1E0E  170B               	bsf	11,6	;volatile
  6370  1E0F                     l2895:
  6371                           
  6372                           ;pic16f.c: 50:     PIE1bits.RCIE=1;
  6373  1E0F  1683               	bsf	3,5	;RP0=1, select bank1
  6374  1E10  1303               	bcf	3,6	;RP1=0, select bank1
  6375  1E11  168C               	bsf	12,5	;volatile
  6376  1E12                     l2897:
  6377                           
  6378                           ;pic16f.c: 51:     PIR1bits.RCIF=0;
  6379  1E12  1283               	bcf	3,5	;RP0=0, select bank0
  6380  1E13  1303               	bcf	3,6	;RP1=0, select bank0
  6381  1E14  128C               	bcf	12,5	;volatile
  6382  1E15                     l2899:
  6383                           
  6384                           ;pic16f.c: 52:     INTCONbits.GIE=1;
  6385  1E15  178B               	bsf	11,7	;volatile
  6386  1E16                     l49:
  6387  1E16  0008               	return
  6388  1E17                     __end_of_configIO:
  6389                           
  6390                           	psect	text24
  6391  1133                     __ptext24:	
  6392 ;; *************** function _aht_GetTemperature *****************
  6393 ;; Defined at:
  6394 ;;		line 62 in file "aht10.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;		None
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;  value           3   56[BANK0 ] float 
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  3   53[BANK0 ] float 
  6401 ;; Registers used:
  6402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6408 ;;      Params:         0       3       0       0       0
  6409 ;;      Locals:         0       3       0       0       0
  6410 ;;      Temps:          0       0       0       0       0
  6411 ;;      Totals:         0       6       0       0       0
  6412 ;;Total ram usage:        6 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:    3
  6415 ;; This function calls:
  6416 ;;		___ftadd
  6417 ;;		___ftdiv
  6418 ;;		___ftmul
  6419 ;;		___lltoft
  6420 ;;		_aht_readSensor
  6421 ;; This function is called by:
  6422 ;;		_main
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           
  6427                           ;psect for function _aht_GetTemperature
  6428  1133                     _aht_GetTemperature:
  6429  1133                     l2935:	
  6430                           ;incstack = 0
  6431                           ; Regs used in _aht_GetTemperature: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6432                           
  6433                           
  6434                           ;aht10.c: 64:     float value = aht_readSensor(GetTempCmd);
  6435  1133  3000               	movlw	0
  6436  1134  00F6               	movwf	aht_readSensor@GetDataCmd
  6437  1135  00F7               	movwf	aht_readSensor@GetDataCmd+1
  6438  1136  160A  118A  26F7  160A  118A  	fcall	_aht_readSensor
  6439  113B  0879               	movf	?_aht_readSensor+3,w
  6440  113C  00FD               	movwf	___lltoft@c+3
  6441  113D  0878               	movf	?_aht_readSensor+2,w
  6442  113E  00FC               	movwf	___lltoft@c+2
  6443  113F  0877               	movf	?_aht_readSensor+1,w
  6444  1140  00FB               	movwf	___lltoft@c+1
  6445  1141  0876               	movf	?_aht_readSensor,w
  6446  1142  00FA               	movwf	___lltoft@c
  6447  1143  160A  158A  26C7  160A  118A  	fcall	___lltoft
  6448  1148  087A               	movf	?___lltoft,w
  6449  1149  1283               	bcf	3,5	;RP0=0, select bank0
  6450  114A  1303               	bcf	3,6	;RP1=0, select bank0
  6451  114B  00D8               	movwf	aht_GetTemperature@value
  6452  114C  087B               	movf	?___lltoft+1,w
  6453  114D  00D9               	movwf	aht_GetTemperature@value+1
  6454  114E  087C               	movf	?___lltoft+2,w
  6455  114F  00DA               	movwf	aht_GetTemperature@value+2
  6456  1150                     l2937:
  6457                           
  6458                           ;aht10.c: 65:     return ((200 * value) / 1048576) - 50;
  6459  1150  3000               	movlw	0
  6460  1151  00C8               	movwf	___ftadd@f1
  6461  1152  3048               	movlw	72
  6462  1153  00C9               	movwf	___ftadd@f1+1
  6463  1154  30C2               	movlw	194
  6464  1155  00CA               	movwf	___ftadd@f1+2
  6465  1156  3000               	movlw	0
  6466  1157  00B8               	movwf	___ftdiv@f2
  6467  1158  3080               	movlw	128
  6468  1159  00B9               	movwf	___ftdiv@f2+1
  6469  115A  3049               	movlw	73
  6470  115B  00BA               	movwf	___ftdiv@f2+2
  6471  115C  3000               	movlw	0
  6472  115D  00A8               	movwf	___ftmul@f1
  6473  115E  3048               	movlw	72
  6474  115F  00A9               	movwf	___ftmul@f1+1
  6475  1160  3043               	movlw	67
  6476  1161  00AA               	movwf	___ftmul@f1+2
  6477  1162  0858               	movf	aht_GetTemperature@value,w
  6478  1163  00AB               	movwf	___ftmul@f2
  6479  1164  0859               	movf	aht_GetTemperature@value+1,w
  6480  1165  00AC               	movwf	___ftmul@f2+1
  6481  1166  085A               	movf	aht_GetTemperature@value+2,w
  6482  1167  00AD               	movwf	___ftmul@f2+2
  6483  1168  120A  118A  200A  160A  118A  	fcall	___ftmul
  6484  116D  1283               	bcf	3,5	;RP0=0, select bank0
  6485  116E  1303               	bcf	3,6	;RP1=0, select bank0
  6486  116F  0828               	movf	?___ftmul,w
  6487  1170  00BB               	movwf	___ftdiv@f1
  6488  1171  0829               	movf	?___ftmul+1,w
  6489  1172  00BC               	movwf	___ftdiv@f1+1
  6490  1173  082A               	movf	?___ftmul+2,w
  6491  1174  00BD               	movwf	___ftdiv@f1+2
  6492  1175  160A  118A  256D  160A  118A  	fcall	___ftdiv
  6493  117A  1283               	bcf	3,5	;RP0=0, select bank0
  6494  117B  1303               	bcf	3,6	;RP1=0, select bank0
  6495  117C  0838               	movf	?___ftdiv,w
  6496  117D  00CB               	movwf	___ftadd@f2
  6497  117E  0839               	movf	?___ftdiv+1,w
  6498  117F  00CC               	movwf	___ftadd@f2+1
  6499  1180  083A               	movf	?___ftdiv+2,w
  6500  1181  00CD               	movwf	___ftadd@f2+2
  6501  1182  120A  158A  214F  160A  118A  	fcall	___ftadd
  6502  1187  1283               	bcf	3,5	;RP0=0, select bank0
  6503  1188  1303               	bcf	3,6	;RP1=0, select bank0
  6504  1189  0848               	movf	?___ftadd,w
  6505  118A  00D5               	movwf	?_aht_GetTemperature
  6506  118B  0849               	movf	?___ftadd+1,w
  6507  118C  00D6               	movwf	?_aht_GetTemperature+1
  6508  118D  084A               	movf	?___ftadd+2,w
  6509  118E  00D7               	movwf	?_aht_GetTemperature+2
  6510  118F                     l165:
  6511  118F  0008               	return
  6512  1190                     __end_of_aht_GetTemperature:
  6513                           
  6514                           	psect	text25
  6515  16F7                     __ptext25:	
  6516 ;; *************** function _aht_readSensor *****************
  6517 ;; Defined at:
  6518 ;;		line 72 in file "aht10.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;  GetDataCmd      2    6[COMMON] int 
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;  i               1   40[BANK0 ] unsigned char 
  6523 ;;  temp           24   12[BANK0 ] unsigned long [6]
  6524 ;;  result          4   36[BANK0 ] unsigned long 
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  4    6[COMMON] unsigned long 
  6527 ;; Registers used:
  6528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6534 ;;      Params:         4       0       0       0       0
  6535 ;;      Locals:         0      29       0       0       0
  6536 ;;      Temps:          0      12       0       0       0
  6537 ;;      Totals:         4      41       0       0       0
  6538 ;;Total ram usage:       45 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; Hardware stack levels required when called:    2
  6541 ;; This function calls:
  6542 ;;		_I2C_Master_Read
  6543 ;;		_I2C_Master_Start
  6544 ;;		_I2C_Master_Stop
  6545 ;;		_I2C_Master_Write
  6546 ;; This function is called by:
  6547 ;;		_aht_GetTemperature
  6548 ;;		_aht_GetHumidity
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           
  6553                           ;psect for function _aht_readSensor
  6554  16F7                     _aht_readSensor:
  6555  16F7                     l2461:	
  6556                           ;incstack = 0
  6557                           ; Regs used in _aht_readSensor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6558                           
  6559                           
  6560                           ;aht10.c: 72: unsigned long aht_readSensor(int GetDataCmd);aht10.c: 73: {;aht10.c: 74:  
      +                             unsigned long result, temp[6];;aht10.c: 76:     I2C_Master_Start();
  6561  16F7  160A  158A  25A9  160A  118A  	fcall	_I2C_Master_Start
  6562                           
  6563                           ;aht10.c: 77:     I2C_Master_Write(eSensorMeasureCmd[2]);
  6564  16FC  1683               	bsf	3,5	;RP0=1, select bank1
  6565  16FD  1303               	bcf	3,6	;RP1=0, select bank1
  6566  16FE  0851               	movf	(_eSensorMeasureCmd^(0+128)+2),w
  6567  16FF  1283               	bcf	3,5	;RP0=0, select bank0
  6568  1700  1303               	bcf	3,6	;RP1=0, select bank0
  6569  1701  00A0               	movwf	??_aht_readSensor
  6570  1702  01A1               	clrf	??_aht_readSensor+1
  6571  1703  0820               	movf	??_aht_readSensor,w
  6572  1704  00F0               	movwf	I2C_Master_Write@d
  6573  1705  0821               	movf	??_aht_readSensor+1,w
  6574  1706  00F1               	movwf	I2C_Master_Write@d+1
  6575  1707  160A  158A  25B2  160A  118A  	fcall	_I2C_Master_Write
  6576                           
  6577                           ;aht10.c: 78:     I2C_Master_Stop();
  6578  170C  160A  118A  2097  160A  118A  	fcall	_I2C_Master_Stop
  6579  1711                     l2463:
  6580                           
  6581                           ;aht10.c: 79:     _delay((unsigned long)((100)*(4000000/4000.0)));
  6582  1711  3082               	movlw	130
  6583  1712  1283               	bcf	3,5	;RP0=0, select bank0
  6584  1713  1303               	bcf	3,6	;RP1=0, select bank0
  6585  1714  00A1               	movwf	??_aht_readSensor+1
  6586  1715  30DD               	movlw	221
  6587  1716  00A0               	movwf	??_aht_readSensor
  6588  1717                     u4917:
  6589  1717  0BA0               	decfsz	??_aht_readSensor,f
  6590  1718  2F17               	goto	u4917
  6591  1719  0BA1               	decfsz	??_aht_readSensor+1,f
  6592  171A  2F17               	goto	u4917
  6593  171B                     l2465:
  6594                           
  6595                           ;aht10.c: 81:     I2C_Master_Start();
  6596  171B  160A  158A  25A9  160A  118A  	fcall	_I2C_Master_Start
  6597  1720                     l2467:
  6598                           
  6599                           ;aht10.c: 83:     for(unsigned char i = 0; I2C_Master_Read(1) > 0; i++)
  6600  1720  1283               	bcf	3,5	;RP0=0, select bank0
  6601  1721  1303               	bcf	3,6	;RP1=0, select bank0
  6602  1722  01C8               	clrf	aht_readSensor@i
  6603  1723  2F51               	goto	l2473
  6604  1724                     l2469:
  6605                           
  6606                           ;aht10.c: 84:     {;aht10.c: 85:         temp[i] = I2C_Master_Read(1);
  6607  1724  3001               	movlw	1
  6608  1725  00F0               	movwf	I2C_Master_Read@a
  6609  1726  3000               	movlw	0
  6610  1727  00F1               	movwf	I2C_Master_Read@a+1
  6611  1728  160A  158A  2699  160A  118A  	fcall	_I2C_Master_Read
  6612  172D  0870               	movf	?_I2C_Master_Read,w
  6613  172E  1283               	bcf	3,5	;RP0=0, select bank0
  6614  172F  1303               	bcf	3,6	;RP1=0, select bank0
  6615  1730  00A0               	movwf	??_aht_readSensor
  6616  1731  0871               	movf	?_I2C_Master_Read+1,w
  6617  1732  00A1               	movwf	??_aht_readSensor+1
  6618  1733  01A2               	clrf	??_aht_readSensor+2
  6619  1734  01A3               	clrf	??_aht_readSensor+3
  6620  1735  0848               	movf	aht_readSensor@i,w
  6621  1736  00A4               	movwf	??_aht_readSensor+4
  6622  1737  3001               	movlw	1
  6623  1738                     u3325:
  6624  1738  1003               	clrc
  6625  1739  0DA4               	rlf	??_aht_readSensor+4,f
  6626  173A  3EFF               	addlw	-1
  6627  173B  1D03               	skipz
  6628  173C  2F38               	goto	u3325
  6629  173D  1003               	clrc
  6630  173E  0D24               	rlf	??_aht_readSensor+4,w
  6631  173F  3E2C               	addlw	(low (aht_readSensor@temp| 0))& (0+255)
  6632  1740  0084               	movwf	4
  6633  1741  0820               	movf	??_aht_readSensor,w
  6634  1742  1383               	bcf	3,7	;select IRP bank0
  6635  1743  0080               	movwf	0
  6636  1744  0A84               	incf	4,f
  6637  1745  0821               	movf	??_aht_readSensor+1,w
  6638  1746  0080               	movwf	0
  6639  1747  0A84               	incf	4,f
  6640  1748  0822               	movf	??_aht_readSensor+2,w
  6641  1749  0080               	movwf	0
  6642  174A  0A84               	incf	4,f
  6643  174B  0823               	movf	??_aht_readSensor+3,w
  6644  174C  0080               	movwf	0
  6645  174D                     l2471:
  6646                           
  6647                           ;aht10.c: 86:     }
  6648  174D  3001               	movlw	1
  6649  174E  00A0               	movwf	??_aht_readSensor
  6650  174F  0820               	movf	??_aht_readSensor,w
  6651  1750  07C8               	addwf	aht_readSensor@i,f
  6652  1751                     l2473:
  6653  1751  3001               	movlw	1
  6654  1752  00F0               	movwf	I2C_Master_Read@a
  6655  1753  3000               	movlw	0
  6656  1754  00F1               	movwf	I2C_Master_Read@a+1
  6657  1755  160A  158A  2699  160A  118A  	fcall	_I2C_Master_Read
  6658  175A  0870               	movf	?_I2C_Master_Read,w
  6659  175B  0471               	iorwf	?_I2C_Master_Read+1,w
  6660  175C  1D03               	btfss	3,2
  6661  175D  2F5F               	goto	u3331
  6662  175E  2F60               	goto	u3330
  6663  175F                     u3331:
  6664  175F  2F24               	goto	l2469
  6665  1760                     u3330:
  6666  1760                     l2475:
  6667                           
  6668                           ;aht10.c: 88:     if(GetDataCmd)
  6669  1760  0876               	movf	aht_readSensor@GetDataCmd,w
  6670  1761  0477               	iorwf	aht_readSensor@GetDataCmd+1,w
  6671  1762  1903               	btfsc	3,2
  6672  1763  2F65               	goto	u3341
  6673  1764  2F66               	goto	u3340
  6674  1765                     u3341:
  6675  1765  2FB4               	goto	l2479
  6676  1766                     u3340:
  6677  1766                     l2477:
  6678                           
  6679                           ;aht10.c: 89:     {;aht10.c: 90:         result = ((temp[1] << 16) | (temp[2] << 8) | te
      +                          mp[3]) >> 4;
  6680  1766  1283               	bcf	3,5	;RP0=0, select bank0
  6681  1767  1303               	bcf	3,6	;RP1=0, select bank0
  6682  1768  0838               	movf	aht_readSensor@temp+12,w
  6683  1769  00A0               	movwf	??_aht_readSensor
  6684  176A  0839               	movf	aht_readSensor@temp+13,w
  6685  176B  00A1               	movwf	??_aht_readSensor+1
  6686  176C  083A               	movf	aht_readSensor@temp+14,w
  6687  176D  00A2               	movwf	??_aht_readSensor+2
  6688  176E  083B               	movf	aht_readSensor@temp+15,w
  6689  176F  00A3               	movwf	??_aht_readSensor+3
  6690  1770  0834               	movf	aht_readSensor@temp+8,w
  6691  1771  00A4               	movwf	??_aht_readSensor+4
  6692  1772  0835               	movf	aht_readSensor@temp+9,w
  6693  1773  00A5               	movwf	??_aht_readSensor+5
  6694  1774  0836               	movf	aht_readSensor@temp+10,w
  6695  1775  00A6               	movwf	??_aht_readSensor+6
  6696  1776  0837               	movf	aht_readSensor@temp+11,w
  6697  1777  00A7               	movwf	??_aht_readSensor+7
  6698  1778  3008               	movlw	8
  6699  1779                     u3355:
  6700  1779  1003               	clrc
  6701  177A  0DA4               	rlf	??_aht_readSensor+4,f
  6702  177B  0DA5               	rlf	??_aht_readSensor+5,f
  6703  177C  0DA6               	rlf	??_aht_readSensor+6,f
  6704  177D  0DA7               	rlf	??_aht_readSensor+7,f
  6705  177E                     u3350:
  6706  177E  3EFF               	addlw	-1
  6707  177F  1D03               	skipz
  6708  1780  2F79               	goto	u3355
  6709  1781  0830               	movf	aht_readSensor@temp+4,w
  6710  1782  00A8               	movwf	??_aht_readSensor+8
  6711  1783  0831               	movf	aht_readSensor@temp+5,w
  6712  1784  00A9               	movwf	??_aht_readSensor+9
  6713  1785  0832               	movf	aht_readSensor@temp+6,w
  6714  1786  00AA               	movwf	??_aht_readSensor+10
  6715  1787  0833               	movf	aht_readSensor@temp+7,w
  6716  1788  00AB               	movwf	??_aht_readSensor+11
  6717  1789  3010               	movlw	16
  6718  178A                     u3365:
  6719  178A  1003               	clrc
  6720  178B  0DA8               	rlf	??_aht_readSensor+8,f
  6721  178C  0DA9               	rlf	??_aht_readSensor+9,f
  6722  178D  0DAA               	rlf	??_aht_readSensor+10,f
  6723  178E  0DAB               	rlf	??_aht_readSensor+11,f
  6724  178F                     u3360:
  6725  178F  3EFF               	addlw	-1
  6726  1790  1D03               	skipz
  6727  1791  2F8A               	goto	u3365
  6728  1792  0828               	movf	??_aht_readSensor+8,w
  6729  1793  04A4               	iorwf	??_aht_readSensor+4,f
  6730  1794  0829               	movf	??_aht_readSensor+9,w
  6731  1795  04A5               	iorwf	??_aht_readSensor+5,f
  6732  1796  082A               	movf	??_aht_readSensor+10,w
  6733  1797  04A6               	iorwf	??_aht_readSensor+6,f
  6734  1798  082B               	movf	??_aht_readSensor+11,w
  6735  1799  04A7               	iorwf	??_aht_readSensor+7,f
  6736  179A  0824               	movf	??_aht_readSensor+4,w
  6737  179B  04A0               	iorwf	??_aht_readSensor,f
  6738  179C  0825               	movf	??_aht_readSensor+5,w
  6739  179D  04A1               	iorwf	??_aht_readSensor+1,f
  6740  179E  0826               	movf	??_aht_readSensor+6,w
  6741  179F  04A2               	iorwf	??_aht_readSensor+2,f
  6742  17A0  0827               	movf	??_aht_readSensor+7,w
  6743  17A1  04A3               	iorwf	??_aht_readSensor+3,f
  6744  17A2  3004               	movlw	4
  6745  17A3                     u3375:
  6746  17A3  1003               	clrc
  6747  17A4  0CA3               	rrf	??_aht_readSensor+3,f
  6748  17A5  0CA2               	rrf	??_aht_readSensor+2,f
  6749  17A6  0CA1               	rrf	??_aht_readSensor+1,f
  6750  17A7  0CA0               	rrf	??_aht_readSensor,f
  6751  17A8                     u3370:
  6752  17A8  3EFF               	addlw	-1
  6753  17A9  1D03               	skipz
  6754  17AA  2FA3               	goto	u3375
  6755  17AB  0823               	movf	??_aht_readSensor+3,w
  6756  17AC  00C7               	movwf	aht_readSensor@result+3
  6757  17AD  0822               	movf	??_aht_readSensor+2,w
  6758  17AE  00C6               	movwf	aht_readSensor@result+2
  6759  17AF  0821               	movf	??_aht_readSensor+1,w
  6760  17B0  00C5               	movwf	aht_readSensor@result+1
  6761  17B1  0820               	movf	??_aht_readSensor,w
  6762  17B2  00C4               	movwf	aht_readSensor@result
  6763                           
  6764                           ;aht10.c: 91:     }
  6765  17B3  2FF7               	goto	l2481
  6766  17B4                     l2479:
  6767                           
  6768                           ;aht10.c: 93:     {;aht10.c: 94:         result = ((temp[3] & 0x0F) << 16) | (temp[4] <<
      +                           8) | temp[5];
  6769  17B4  1283               	bcf	3,5	;RP0=0, select bank0
  6770  17B5  1303               	bcf	3,6	;RP1=0, select bank0
  6771  17B6  083C               	movf	aht_readSensor@temp+16,w
  6772  17B7  00A0               	movwf	??_aht_readSensor
  6773  17B8  083D               	movf	aht_readSensor@temp+17,w
  6774  17B9  00A1               	movwf	??_aht_readSensor+1
  6775  17BA  083E               	movf	aht_readSensor@temp+18,w
  6776  17BB  00A2               	movwf	??_aht_readSensor+2
  6777  17BC  083F               	movf	aht_readSensor@temp+19,w
  6778  17BD  00A3               	movwf	??_aht_readSensor+3
  6779  17BE  3008               	movlw	8
  6780  17BF                     u3385:
  6781  17BF  1003               	clrc
  6782  17C0  0DA0               	rlf	??_aht_readSensor,f
  6783  17C1  0DA1               	rlf	??_aht_readSensor+1,f
  6784  17C2  0DA2               	rlf	??_aht_readSensor+2,f
  6785  17C3  0DA3               	rlf	??_aht_readSensor+3,f
  6786  17C4                     u3380:
  6787  17C4  3EFF               	addlw	-1
  6788  17C5  1D03               	skipz
  6789  17C6  2FBF               	goto	u3385
  6790  17C7  300C               	movlw	12
  6791  17C8  3E2C               	addlw	(low (aht_readSensor@temp| 0))& (0+255)
  6792  17C9  0084               	movwf	4
  6793  17CA  300F               	movlw	15
  6794  17CB  1383               	bcf	3,7	;select IRP bank0
  6795  17CC  0500               	andwf	0,w
  6796  17CD  00A4               	movwf	??_aht_readSensor+4
  6797  17CE  0A84               	incf	4,f
  6798  17CF  3000               	movlw	0
  6799  17D0  0500               	andwf	0,w
  6800  17D1  00A5               	movwf	??_aht_readSensor+5
  6801  17D2  0A84               	incf	4,f
  6802  17D3  3000               	movlw	0
  6803  17D4  0500               	andwf	0,w
  6804  17D5  00A6               	movwf	??_aht_readSensor+6
  6805  17D6  0A84               	incf	4,f
  6806  17D7  3000               	movlw	0
  6807  17D8  0500               	andwf	0,w
  6808  17D9  00A7               	movwf	??_aht_readSensor+7
  6809  17DA  3010               	movlw	16
  6810  17DB                     u3395:
  6811  17DB  1003               	clrc
  6812  17DC  0DA4               	rlf	??_aht_readSensor+4,f
  6813  17DD  0DA5               	rlf	??_aht_readSensor+5,f
  6814  17DE  0DA6               	rlf	??_aht_readSensor+6,f
  6815  17DF  0DA7               	rlf	??_aht_readSensor+7,f
  6816  17E0                     u3390:
  6817  17E0  3EFF               	addlw	-1
  6818  17E1  1D03               	skipz
  6819  17E2  2FDB               	goto	u3395
  6820  17E3  0824               	movf	??_aht_readSensor+4,w
  6821  17E4  04A0               	iorwf	??_aht_readSensor,f
  6822  17E5  0825               	movf	??_aht_readSensor+5,w
  6823  17E6  04A1               	iorwf	??_aht_readSensor+1,f
  6824  17E7  0826               	movf	??_aht_readSensor+6,w
  6825  17E8  04A2               	iorwf	??_aht_readSensor+2,f
  6826  17E9  0827               	movf	??_aht_readSensor+7,w
  6827  17EA  04A3               	iorwf	??_aht_readSensor+3,f
  6828  17EB  0840               	movf	aht_readSensor@temp+20,w
  6829  17EC  0420               	iorwf	??_aht_readSensor,w
  6830  17ED  00C4               	movwf	aht_readSensor@result
  6831  17EE  0841               	movf	aht_readSensor@temp+21,w
  6832  17EF  0421               	iorwf	??_aht_readSensor+1,w
  6833  17F0  00C5               	movwf	aht_readSensor@result+1
  6834  17F1  0842               	movf	aht_readSensor@temp+22,w
  6835  17F2  0422               	iorwf	??_aht_readSensor+2,w
  6836  17F3  00C6               	movwf	aht_readSensor@result+2
  6837  17F4  0843               	movf	aht_readSensor@temp+23,w
  6838  17F5  0423               	iorwf	??_aht_readSensor+3,w
  6839  17F6  00C7               	movwf	aht_readSensor@result+3
  6840  17F7                     l2481:
  6841                           
  6842                           ;aht10.c: 97:     return result;
  6843  17F7  0847               	movf	aht_readSensor@result+3,w
  6844  17F8  00F9               	movwf	?_aht_readSensor+3
  6845  17F9  0846               	movf	aht_readSensor@result+2,w
  6846  17FA  00F8               	movwf	?_aht_readSensor+2
  6847  17FB  0845               	movf	aht_readSensor@result+1,w
  6848  17FC  00F7               	movwf	?_aht_readSensor+1
  6849  17FD  0844               	movf	aht_readSensor@result,w
  6850  17FE  00F6               	movwf	?_aht_readSensor
  6851  17FF                     l173:
  6852  17FF  0008               	return
  6853  1800                     __end_of_aht_readSensor:
  6854                           
  6855                           	psect	text26
  6856  1DB2                     __ptext26:	
  6857 ;; *************** function _I2C_Master_Write *****************
  6858 ;; Defined at:
  6859 ;;		line 65 in file "I2C.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;  d               2    0[COMMON] unsigned int 
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;		None
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  1    wreg      void 
  6866 ;; Registers used:
  6867 ;;		wreg, status,2, status,0, pclath, cstack
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6873 ;;      Params:         2       0       0       0       0
  6874 ;;      Locals:         0       0       0       0       0
  6875 ;;      Temps:          0       0       0       0       0
  6876 ;;      Totals:         2       0       0       0       0
  6877 ;;Total ram usage:        2 bytes
  6878 ;; Hardware stack levels used:    1
  6879 ;; Hardware stack levels required when called:    1
  6880 ;; This function calls:
  6881 ;;		_I2C_Master_Wait
  6882 ;; This function is called by:
  6883 ;;		_main
  6884 ;;		_aht_readSensor
  6885 ;;		_aht_begin
  6886 ;;		_aht_Reset
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           
  6891                           ;psect for function _I2C_Master_Write
  6892  1DB2                     _I2C_Master_Write:
  6893  1DB2                     l2167:	
  6894                           ;incstack = 0
  6895                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  6896                           
  6897                           
  6898                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  6899  1DB2  160A  158A  25C6  160A  158A  	fcall	_I2C_Master_Wait
  6900  1DB7                     l2169:
  6901                           
  6902                           ;I2C.c: 68:     SSPBUF = d;
  6903  1DB7  0870               	movf	I2C_Master_Write@d,w
  6904  1DB8  1283               	bcf	3,5	;RP0=0, select bank0
  6905  1DB9  1303               	bcf	3,6	;RP1=0, select bank0
  6906  1DBA  0093               	movwf	19	;volatile
  6907  1DBB                     l111:
  6908  1DBB  0008               	return
  6909  1DBC                     __end_of_I2C_Master_Write:
  6910                           
  6911                           	psect	text27
  6912  1097                     __ptext27:	
  6913 ;; *************** function _I2C_Master_Stop *****************
  6914 ;; Defined at:
  6915 ;;		line 55 in file "I2C.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;		None
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;		None
  6920 ;; Return value:  Size  Location     Type
  6921 ;;                  1    wreg      void 
  6922 ;; Registers used:
  6923 ;;		wreg, status,2, status,0, pclath, cstack
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6929 ;;      Params:         0       0       0       0       0
  6930 ;;      Locals:         0       0       0       0       0
  6931 ;;      Temps:          0       0       0       0       0
  6932 ;;      Totals:         0       0       0       0       0
  6933 ;;Total ram usage:        0 bytes
  6934 ;; Hardware stack levels used:    1
  6935 ;; Hardware stack levels required when called:    1
  6936 ;; This function calls:
  6937 ;;		_I2C_Master_Wait
  6938 ;; This function is called by:
  6939 ;;		_aht_readSensor
  6940 ;;		_aht_begin
  6941 ;;		_aht_Reset
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945                           
  6946                           ;psect for function _I2C_Master_Stop
  6947  1097                     _I2C_Master_Stop:
  6948  1097                     l2171:	
  6949                           ;incstack = 0
  6950                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  6951                           
  6952                           
  6953                           ;I2C.c: 57:     I2C_Master_Wait();
  6954  1097  160A  158A  25C6  160A  118A  	fcall	_I2C_Master_Wait
  6955  109C                     l2173:
  6956                           
  6957                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  6958  109C  1683               	bsf	3,5	;RP0=1, select bank1
  6959  109D  1303               	bcf	3,6	;RP1=0, select bank1
  6960  109E  1511               	bsf	17,2	;volatile
  6961  109F                     l108:
  6962  109F  0008               	return
  6963  10A0                     __end_of_I2C_Master_Stop:
  6964                           
  6965                           	psect	text28
  6966  1DA9                     __ptext28:	
  6967 ;; *************** function _I2C_Master_Start *****************
  6968 ;; Defined at:
  6969 ;;		line 39 in file "I2C.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;		None
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;		None
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  1    wreg      void 
  6976 ;; Registers used:
  6977 ;;		wreg, status,2, status,0, pclath, cstack
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6983 ;;      Params:         0       0       0       0       0
  6984 ;;      Locals:         0       0       0       0       0
  6985 ;;      Temps:          0       0       0       0       0
  6986 ;;      Totals:         0       0       0       0       0
  6987 ;;Total ram usage:        0 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; Hardware stack levels required when called:    1
  6990 ;; This function calls:
  6991 ;;		_I2C_Master_Wait
  6992 ;; This function is called by:
  6993 ;;		_main
  6994 ;;		_aht_readSensor
  6995 ;;		_aht_begin
  6996 ;;		_aht_readStatus
  6997 ;;		_aht_Reset
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           
  7002                           ;psect for function _I2C_Master_Start
  7003  1DA9                     _I2C_Master_Start:
  7004  1DA9                     l2163:	
  7005                           ;incstack = 0
  7006                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  7007                           
  7008                           
  7009                           ;I2C.c: 41:     I2C_Master_Wait();
  7010  1DA9  160A  158A  25C6  160A  158A  	fcall	_I2C_Master_Wait
  7011  1DAE                     l2165:
  7012                           
  7013                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  7014  1DAE  1683               	bsf	3,5	;RP0=1, select bank1
  7015  1DAF  1303               	bcf	3,6	;RP1=0, select bank1
  7016  1DB0  1411               	bsf	17,0	;volatile
  7017  1DB1                     l102:
  7018  1DB1  0008               	return
  7019  1DB2                     __end_of_I2C_Master_Start:
  7020                           
  7021                           	psect	text29
  7022  1E99                     __ptext29:	
  7023 ;; *************** function _I2C_Master_Read *****************
  7024 ;; Defined at:
  7025 ;;		line 74 in file "I2C.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  a               2    0[COMMON] unsigned short 
  7028 ;; Auto vars:     Size  Location     Type
  7029 ;;  temp            2    4[COMMON] unsigned short 
  7030 ;; Return value:  Size  Location     Type
  7031 ;;                  2    0[COMMON] unsigned short 
  7032 ;; Registers used:
  7033 ;;		wreg, status,2, status,0, pclath, cstack
  7034 ;; Tracked objects:
  7035 ;;		On entry : 0/0
  7036 ;;		On exit  : 0/0
  7037 ;;		Unchanged: 0/0
  7038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7039 ;;      Params:         2       0       0       0       0
  7040 ;;      Locals:         2       0       0       0       0
  7041 ;;      Temps:          2       0       0       0       0
  7042 ;;      Totals:         6       0       0       0       0
  7043 ;;Total ram usage:        6 bytes
  7044 ;; Hardware stack levels used:    1
  7045 ;; Hardware stack levels required when called:    1
  7046 ;; This function calls:
  7047 ;;		_I2C_Master_Wait
  7048 ;; This function is called by:
  7049 ;;		_aht_readSensor
  7050 ;;		_aht_readStatus
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054                           
  7055                           ;psect for function _I2C_Master_Read
  7056  1E99                     _I2C_Master_Read:
  7057  1E99                     l2175:	
  7058                           ;incstack = 0
  7059                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  7060                           
  7061                           
  7062                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  7063  1E99  160A  158A  25C6  160A  158A  	fcall	_I2C_Master_Wait
  7064  1E9E                     l2177:
  7065                           
  7066                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  7067  1E9E  1683               	bsf	3,5	;RP0=1, select bank1
  7068  1E9F  1303               	bcf	3,6	;RP1=0, select bank1
  7069  1EA0  1591               	bsf	17,3	;volatile
  7070                           
  7071                           ;I2C.c: 79:     I2C_Master_Wait();
  7072  1EA1  160A  158A  25C6  160A  158A  	fcall	_I2C_Master_Wait
  7073  1EA6                     l2179:
  7074                           
  7075                           ;I2C.c: 80:     temp = SSPBUF;
  7076  1EA6  1283               	bcf	3,5	;RP0=0, select bank0
  7077  1EA7  1303               	bcf	3,6	;RP1=0, select bank0
  7078  1EA8  0813               	movf	19,w	;volatile
  7079  1EA9  00F2               	movwf	??_I2C_Master_Read
  7080  1EAA  01F3               	clrf	??_I2C_Master_Read+1
  7081  1EAB  0872               	movf	??_I2C_Master_Read,w
  7082  1EAC  00F4               	movwf	I2C_Master_Read@temp
  7083  1EAD  0873               	movf	??_I2C_Master_Read+1,w
  7084  1EAE  00F5               	movwf	I2C_Master_Read@temp+1
  7085  1EAF                     l2181:
  7086                           
  7087                           ;I2C.c: 81:     I2C_Master_Wait();
  7088  1EAF  160A  158A  25C6  160A  158A  	fcall	_I2C_Master_Wait
  7089  1EB4                     l2183:
  7090                           
  7091                           ;I2C.c: 82:     if(a == 1){
  7092  1EB4  0370               	decf	I2C_Master_Read@a,w
  7093  1EB5  0471               	iorwf	I2C_Master_Read@a+1,w
  7094  1EB6  1D03               	btfss	3,2
  7095  1EB7  2EB9               	goto	u2581
  7096  1EB8  2EBA               	goto	u2580
  7097  1EB9                     u2581:
  7098  1EB9  2EBE               	goto	l114
  7099  1EBA                     u2580:
  7100  1EBA                     l2185:
  7101                           
  7102                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  7103  1EBA  1683               	bsf	3,5	;RP0=1, select bank1
  7104  1EBB  1303               	bcf	3,6	;RP1=0, select bank1
  7105  1EBC  1291               	bcf	17,5	;volatile
  7106                           
  7107                           ;I2C.c: 84:     }else{
  7108  1EBD  2EC1               	goto	l115
  7109  1EBE                     l114:
  7110                           
  7111                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  7112  1EBE  1683               	bsf	3,5	;RP0=1, select bank1
  7113  1EBF  1303               	bcf	3,6	;RP1=0, select bank1
  7114  1EC0  1691               	bsf	17,5	;volatile
  7115  1EC1                     l115:	
  7116                           ;I2C.c: 86:     }
  7117                           
  7118                           
  7119                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  7120  1EC1  1611               	bsf	17,4	;volatile
  7121  1EC2                     l2187:
  7122                           
  7123                           ;I2C.c: 88:     return temp;
  7124  1EC2  0875               	movf	I2C_Master_Read@temp+1,w
  7125  1EC3  00F1               	movwf	?_I2C_Master_Read+1
  7126  1EC4  0874               	movf	I2C_Master_Read@temp,w
  7127  1EC5  00F0               	movwf	?_I2C_Master_Read
  7128  1EC6                     l116:
  7129  1EC6  0008               	return
  7130  1EC7                     __end_of_I2C_Master_Read:
  7131                           
  7132                           	psect	text30
  7133  1DC6                     __ptext30:	
  7134 ;; *************** function _I2C_Master_Wait *****************
  7135 ;; Defined at:
  7136 ;;		line 32 in file "I2C.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;		None
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;		None
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      void 
  7143 ;; Registers used:
  7144 ;;		wreg, status,2
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7150 ;;      Params:         0       0       0       0       0
  7151 ;;      Locals:         0       0       0       0       0
  7152 ;;      Temps:          0       0       0       0       0
  7153 ;;      Totals:         0       0       0       0       0
  7154 ;;Total ram usage:        0 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; This function calls:
  7157 ;;		Nothing
  7158 ;; This function is called by:
  7159 ;;		_I2C_Master_Start
  7160 ;;		_I2C_Master_Stop
  7161 ;;		_I2C_Master_Write
  7162 ;;		_I2C_Master_Read
  7163 ;;		_I2C_Master_RepeatedStart
  7164 ;; This function uses a non-reentrant model
  7165 ;;
  7166                           
  7167                           
  7168                           ;psect for function _I2C_Master_Wait
  7169  1DC6                     _I2C_Master_Wait:
  7170  1DC6                     l2127:	
  7171                           ;incstack = 0
  7172                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  7173                           
  7174  1DC6                     l96:	
  7175                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  7176                           
  7177  1DC6  1683               	bsf	3,5	;RP0=1, select bank1
  7178  1DC7  1303               	bcf	3,6	;RP1=0, select bank1
  7179  1DC8  1914               	btfsc	20,2	;volatile
  7180  1DC9  2DCB               	goto	u2441
  7181  1DCA  2DCC               	goto	u2440
  7182  1DCB                     u2441:
  7183  1DCB  2DC6               	goto	l96
  7184  1DCC                     u2440:
  7185  1DCC                     l2129:
  7186  1DCC  0811               	movf	17,w	;volatile
  7187  1DCD  391F               	andlw	31
  7188  1DCE  1D03               	btfss	3,2
  7189  1DCF  2DD1               	goto	u2451
  7190  1DD0  2DD2               	goto	u2450
  7191  1DD1                     u2451:
  7192  1DD1  2DC6               	goto	l96
  7193  1DD2                     u2450:
  7194  1DD2                     l99:
  7195  1DD2  0008               	return
  7196  1DD3                     __end_of_I2C_Master_Wait:
  7197                           
  7198                           	psect	text31
  7199  1EC7                     __ptext31:	
  7200 ;; *************** function ___lltoft *****************
  7201 ;; Defined at:
  7202 ;;		line 35 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lltoft.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;  c               4   10[COMMON] unsigned long 
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;  exp             1   42[BANK0 ] unsigned char 
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  3   10[COMMON] float 
  7209 ;; Registers used:
  7210 ;;		wreg, status,2, status,0, pclath, cstack
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7216 ;;      Params:         4       0       0       0       0
  7217 ;;      Locals:         0       1       0       0       0
  7218 ;;      Temps:          0       1       0       0       0
  7219 ;;      Totals:         4       2       0       0       0
  7220 ;;Total ram usage:        6 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; Hardware stack levels required when called:    1
  7223 ;; This function calls:
  7224 ;;		___ftpack
  7225 ;; This function is called by:
  7226 ;;		_aht_GetTemperature
  7227 ;;		_sprintf
  7228 ;;		_aht_GetHumidity
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           
  7233                           ;psect for function ___lltoft
  7234  1EC7                     ___lltoft:
  7235  1EC7                     l2881:	
  7236                           ;incstack = 0
  7237                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  7238                           
  7239  1EC7  308E               	movlw	142
  7240  1EC8  1283               	bcf	3,5	;RP0=0, select bank0
  7241  1EC9  1303               	bcf	3,6	;RP1=0, select bank0
  7242  1ECA  00C9               	movwf	??___lltoft
  7243  1ECB  0849               	movf	??___lltoft,w
  7244  1ECC  00CA               	movwf	___lltoft@exp
  7245  1ECD  2EDB               	goto	l2885
  7246  1ECE                     l2883:
  7247  1ECE  3001               	movlw	1
  7248  1ECF                     u4245:
  7249  1ECF  1003               	clrc
  7250  1ED0  0CFD               	rrf	___lltoft@c+3,f
  7251  1ED1  0CFC               	rrf	___lltoft@c+2,f
  7252  1ED2  0CFB               	rrf	___lltoft@c+1,f
  7253  1ED3  0CFA               	rrf	___lltoft@c,f
  7254  1ED4  3EFF               	addlw	-1
  7255  1ED5  1D03               	skipz
  7256  1ED6  2ECF               	goto	u4245
  7257  1ED7  3001               	movlw	1
  7258  1ED8  00C9               	movwf	??___lltoft
  7259  1ED9  0849               	movf	??___lltoft,w
  7260  1EDA  07CA               	addwf	___lltoft@exp,f
  7261  1EDB                     l2885:
  7262  1EDB  30FF               	movlw	255
  7263  1EDC  057D               	andwf	___lltoft@c+3,w
  7264  1EDD  1D03               	btfss	3,2
  7265  1EDE  2EE0               	goto	u4251
  7266  1EDF  2EE1               	goto	u4250
  7267  1EE0                     u4251:
  7268  1EE0  2ECE               	goto	l2883
  7269  1EE1                     u4250:
  7270  1EE1                     l2887:
  7271  1EE1  087A               	movf	___lltoft@c,w
  7272  1EE2  00F0               	movwf	___ftpack@arg
  7273  1EE3  087B               	movf	___lltoft@c+1,w
  7274  1EE4  00F1               	movwf	___ftpack@arg+1
  7275  1EE5  087C               	movf	___lltoft@c+2,w
  7276  1EE6  00F2               	movwf	___ftpack@arg+2
  7277  1EE7  084A               	movf	___lltoft@exp,w
  7278  1EE8  00C9               	movwf	??___lltoft
  7279  1EE9  0849               	movf	??___lltoft,w
  7280  1EEA  00F3               	movwf	___ftpack@exp
  7281  1EEB  01F4               	clrf	___ftpack@sign
  7282  1EEC  160A  118A  225F  160A  158A  	fcall	___ftpack
  7283  1EF1  0870               	movf	?___ftpack,w
  7284  1EF2  00FA               	movwf	?___lltoft
  7285  1EF3  0871               	movf	?___ftpack+1,w
  7286  1EF4  00FB               	movwf	?___lltoft+1
  7287  1EF5  0872               	movf	?___ftpack+2,w
  7288  1EF6  00FC               	movwf	?___lltoft+2
  7289  1EF7                     l786:
  7290  1EF7  0008               	return
  7291  1EF8                     __end_of___lltoft:
  7292                           
  7293                           	psect	text32
  7294  000A                     __ptext32:	
  7295 ;; *************** function ___ftmul *****************
  7296 ;; Defined at:
  7297 ;;		line 62 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftmul.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  f1              3    8[BANK0 ] float 
  7300 ;;  f2              3   11[BANK0 ] float 
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
  7303 ;;  sign            1   23[BANK0 ] unsigned char 
  7304 ;;  cntr            1   22[BANK0 ] unsigned char 
  7305 ;;  exp             1   18[BANK0 ] unsigned char 
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  3    8[BANK0 ] float 
  7308 ;; Registers used:
  7309 ;;		wreg, status,2, status,0, pclath, cstack
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7315 ;;      Params:         0       6       0       0       0
  7316 ;;      Locals:         0       6       0       0       0
  7317 ;;      Temps:          0       4       0       0       0
  7318 ;;      Totals:         0      16       0       0       0
  7319 ;;Total ram usage:       16 bytes
  7320 ;; Hardware stack levels used:    1
  7321 ;; Hardware stack levels required when called:    1
  7322 ;; This function calls:
  7323 ;;		___ftpack
  7324 ;; This function is called by:
  7325 ;;		_aht_GetTemperature
  7326 ;;		_fround
  7327 ;;		_scale
  7328 ;;		_sprintf
  7329 ;;		_aht_GetHumidity
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333                           
  7334                           ;psect for function ___ftmul
  7335  000A                     ___ftmul:
  7336  000A                     l2357:	
  7337                           ;incstack = 0
  7338                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7339                           
  7340  000A  1283               	bcf	3,5	;RP0=0, select bank0
  7341  000B  1303               	bcf	3,6	;RP1=0, select bank0
  7342  000C  0828               	movf	___ftmul@f1,w
  7343  000D  00AE               	movwf	??___ftmul
  7344  000E  0829               	movf	___ftmul@f1+1,w
  7345  000F  00AF               	movwf	??___ftmul+1
  7346  0010  082A               	movf	___ftmul@f1+2,w
  7347  0011  00B0               	movwf	??___ftmul+2
  7348  0012  1003               	clrc
  7349  0013  0D2F               	rlf	??___ftmul+1,w
  7350  0014  0D30               	rlf	??___ftmul+2,w
  7351  0015  00B1               	movwf	??___ftmul+3
  7352  0016  0831               	movf	??___ftmul+3,w
  7353  0017  00B2               	movwf	___ftmul@exp
  7354  0018  0832               	movf	___ftmul@exp,w
  7355  0019  1D03               	btfss	3,2
  7356  001A  281C               	goto	u3041
  7357  001B  281D               	goto	u3040
  7358  001C                     u3041:
  7359  001C  2824               	goto	l2363
  7360  001D                     u3040:
  7361  001D                     l2359:
  7362  001D  3000               	movlw	0
  7363  001E  00A8               	movwf	?___ftmul
  7364  001F  3000               	movlw	0
  7365  0020  00A9               	movwf	?___ftmul+1
  7366  0021  3000               	movlw	0
  7367  0022  00AA               	movwf	?___ftmul+2
  7368  0023  28EE               	goto	l716
  7369  0024                     l2363:
  7370  0024  082B               	movf	___ftmul@f2,w
  7371  0025  00AE               	movwf	??___ftmul
  7372  0026  082C               	movf	___ftmul@f2+1,w
  7373  0027  00AF               	movwf	??___ftmul+1
  7374  0028  082D               	movf	___ftmul@f2+2,w
  7375  0029  00B0               	movwf	??___ftmul+2
  7376  002A  1003               	clrc
  7377  002B  0D2F               	rlf	??___ftmul+1,w
  7378  002C  0D30               	rlf	??___ftmul+2,w
  7379  002D  00B1               	movwf	??___ftmul+3
  7380  002E  0831               	movf	??___ftmul+3,w
  7381  002F  00B7               	movwf	___ftmul@sign
  7382  0030  0837               	movf	___ftmul@sign,w
  7383  0031  1D03               	btfss	3,2
  7384  0032  2834               	goto	u3051
  7385  0033  2835               	goto	u3050
  7386  0034                     u3051:
  7387  0034  283C               	goto	l2369
  7388  0035                     u3050:
  7389  0035                     l2365:
  7390  0035  3000               	movlw	0
  7391  0036  00A8               	movwf	?___ftmul
  7392  0037  3000               	movlw	0
  7393  0038  00A9               	movwf	?___ftmul+1
  7394  0039  3000               	movlw	0
  7395  003A  00AA               	movwf	?___ftmul+2
  7396  003B  28EE               	goto	l716
  7397  003C                     l2369:
  7398  003C  0837               	movf	___ftmul@sign,w
  7399  003D  3E7B               	addlw	123
  7400  003E  00AE               	movwf	??___ftmul
  7401  003F  082E               	movf	??___ftmul,w
  7402  0040  07B2               	addwf	___ftmul@exp,f
  7403  0041  0828               	movf	___ftmul@f1,w
  7404  0042  00AE               	movwf	??___ftmul
  7405  0043  0829               	movf	___ftmul@f1+1,w
  7406  0044  00AF               	movwf	??___ftmul+1
  7407  0045  082A               	movf	___ftmul@f1+2,w
  7408  0046  00B0               	movwf	??___ftmul+2
  7409  0047  3010               	movlw	16
  7410  0048                     u3065:
  7411  0048  1003               	clrc
  7412  0049  0CB0               	rrf	??___ftmul+2,f
  7413  004A  0CAF               	rrf	??___ftmul+1,f
  7414  004B  0CAE               	rrf	??___ftmul,f
  7415  004C                     u3060:
  7416  004C  3EFF               	addlw	-1
  7417  004D  1D03               	skipz
  7418  004E  2848               	goto	u3065
  7419  004F  082E               	movf	??___ftmul,w
  7420  0050  00B1               	movwf	??___ftmul+3
  7421  0051  0831               	movf	??___ftmul+3,w
  7422  0052  00B7               	movwf	___ftmul@sign
  7423  0053  082B               	movf	___ftmul@f2,w
  7424  0054  00AE               	movwf	??___ftmul
  7425  0055  082C               	movf	___ftmul@f2+1,w
  7426  0056  00AF               	movwf	??___ftmul+1
  7427  0057  082D               	movf	___ftmul@f2+2,w
  7428  0058  00B0               	movwf	??___ftmul+2
  7429  0059  3010               	movlw	16
  7430  005A                     u3075:
  7431  005A  1003               	clrc
  7432  005B  0CB0               	rrf	??___ftmul+2,f
  7433  005C  0CAF               	rrf	??___ftmul+1,f
  7434  005D  0CAE               	rrf	??___ftmul,f
  7435  005E                     u3070:
  7436  005E  3EFF               	addlw	-1
  7437  005F  1D03               	skipz
  7438  0060  285A               	goto	u3075
  7439  0061  082E               	movf	??___ftmul,w
  7440  0062  00B1               	movwf	??___ftmul+3
  7441  0063  0831               	movf	??___ftmul+3,w
  7442  0064  06B7               	xorwf	___ftmul@sign,f
  7443  0065  3080               	movlw	128
  7444  0066  00AE               	movwf	??___ftmul
  7445  0067  082E               	movf	??___ftmul,w
  7446  0068  05B7               	andwf	___ftmul@sign,f
  7447  0069                     l2371:
  7448  0069  17A9               	bsf	___ftmul@f1+1,7
  7449  006A                     l2373:
  7450  006A  17AC               	bsf	___ftmul@f2+1,7
  7451  006B                     l2375:
  7452  006B  30FF               	movlw	255
  7453  006C  05AB               	andwf	___ftmul@f2,f
  7454  006D  30FF               	movlw	255
  7455  006E  05AC               	andwf	___ftmul@f2+1,f
  7456  006F  3000               	movlw	0
  7457  0070  05AD               	andwf	___ftmul@f2+2,f
  7458  0071                     l2377:
  7459  0071  3000               	movlw	0
  7460  0072  00B3               	movwf	___ftmul@f3_as_product
  7461  0073  3000               	movlw	0
  7462  0074  00B4               	movwf	___ftmul@f3_as_product+1
  7463  0075  3000               	movlw	0
  7464  0076  00B5               	movwf	___ftmul@f3_as_product+2
  7465  0077                     l2379:
  7466  0077  3007               	movlw	7
  7467  0078  00AE               	movwf	??___ftmul
  7468  0079  082E               	movf	??___ftmul,w
  7469  007A  00B6               	movwf	___ftmul@cntr
  7470  007B                     l2381:
  7471  007B  1C28               	btfss	___ftmul@f1,0
  7472  007C  287E               	goto	u3081
  7473  007D  287F               	goto	u3080
  7474  007E                     u3081:
  7475  007E  288F               	goto	l2385
  7476  007F                     u3080:
  7477  007F                     l2383:
  7478  007F  082B               	movf	___ftmul@f2,w
  7479  0080  07B3               	addwf	___ftmul@f3_as_product,f
  7480  0081  082C               	movf	___ftmul@f2+1,w
  7481  0082  1103               	clrz
  7482  0083  1803               	skipnc
  7483  0084  0A2C               	incf	___ftmul@f2+1,w
  7484  0085  1903               	skipnz
  7485  0086  2888               	goto	u3091
  7486  0087  07B4               	addwf	___ftmul@f3_as_product+1,f
  7487  0088                     u3091:
  7488  0088  082D               	movf	___ftmul@f2+2,w
  7489  0089  1103               	clrz
  7490  008A  1803               	skipnc
  7491  008B  0A2D               	incf	___ftmul@f2+2,w
  7492  008C  1903               	skipnz
  7493  008D  288F               	goto	u3092
  7494  008E  07B5               	addwf	___ftmul@f3_as_product+2,f
  7495  008F                     u3092:
  7496  008F                     l2385:
  7497  008F  3001               	movlw	1
  7498  0090                     u3105:
  7499  0090  1003               	clrc
  7500  0091  0CAA               	rrf	___ftmul@f1+2,f
  7501  0092  0CA9               	rrf	___ftmul@f1+1,f
  7502  0093  0CA8               	rrf	___ftmul@f1,f
  7503  0094  3EFF               	addlw	-1
  7504  0095  1D03               	skipz
  7505  0096  2890               	goto	u3105
  7506  0097                     l2387:
  7507  0097  3001               	movlw	1
  7508  0098                     u3115:
  7509  0098  1003               	clrc
  7510  0099  0DAB               	rlf	___ftmul@f2,f
  7511  009A  0DAC               	rlf	___ftmul@f2+1,f
  7512  009B  0DAD               	rlf	___ftmul@f2+2,f
  7513  009C  3EFF               	addlw	-1
  7514  009D  1D03               	skipz
  7515  009E  2898               	goto	u3115
  7516  009F                     l2389:
  7517  009F  3001               	movlw	1
  7518  00A0  02B6               	subwf	___ftmul@cntr,f
  7519  00A1  1D03               	btfss	3,2
  7520  00A2  28A4               	goto	u3121
  7521  00A3  28A5               	goto	u3120
  7522  00A4                     u3121:
  7523  00A4  287B               	goto	l2381
  7524  00A5                     u3120:
  7525  00A5                     l2391:
  7526  00A5  3009               	movlw	9
  7527  00A6  00AE               	movwf	??___ftmul
  7528  00A7  082E               	movf	??___ftmul,w
  7529  00A8  00B6               	movwf	___ftmul@cntr
  7530  00A9                     l2393:
  7531  00A9  1C28               	btfss	___ftmul@f1,0
  7532  00AA  28AC               	goto	u3131
  7533  00AB  28AD               	goto	u3130
  7534  00AC                     u3131:
  7535  00AC  28BD               	goto	l2397
  7536  00AD                     u3130:
  7537  00AD                     l2395:
  7538  00AD  082B               	movf	___ftmul@f2,w
  7539  00AE  07B3               	addwf	___ftmul@f3_as_product,f
  7540  00AF  082C               	movf	___ftmul@f2+1,w
  7541  00B0  1103               	clrz
  7542  00B1  1803               	skipnc
  7543  00B2  0A2C               	incf	___ftmul@f2+1,w
  7544  00B3  1903               	skipnz
  7545  00B4  28B6               	goto	u3141
  7546  00B5  07B4               	addwf	___ftmul@f3_as_product+1,f
  7547  00B6                     u3141:
  7548  00B6  082D               	movf	___ftmul@f2+2,w
  7549  00B7  1103               	clrz
  7550  00B8  1803               	skipnc
  7551  00B9  0A2D               	incf	___ftmul@f2+2,w
  7552  00BA  1903               	skipnz
  7553  00BB  28BD               	goto	u3142
  7554  00BC  07B5               	addwf	___ftmul@f3_as_product+2,f
  7555  00BD                     u3142:
  7556  00BD                     l2397:
  7557  00BD  3001               	movlw	1
  7558  00BE                     u3155:
  7559  00BE  1003               	clrc
  7560  00BF  0CAA               	rrf	___ftmul@f1+2,f
  7561  00C0  0CA9               	rrf	___ftmul@f1+1,f
  7562  00C1  0CA8               	rrf	___ftmul@f1,f
  7563  00C2  3EFF               	addlw	-1
  7564  00C3  1D03               	skipz
  7565  00C4  28BE               	goto	u3155
  7566  00C5                     l2399:
  7567  00C5  3001               	movlw	1
  7568  00C6                     u3165:
  7569  00C6  1003               	clrc
  7570  00C7  0CB5               	rrf	___ftmul@f3_as_product+2,f
  7571  00C8  0CB4               	rrf	___ftmul@f3_as_product+1,f
  7572  00C9  0CB3               	rrf	___ftmul@f3_as_product,f
  7573  00CA  3EFF               	addlw	-1
  7574  00CB  1D03               	skipz
  7575  00CC  28C6               	goto	u3165
  7576  00CD                     l2401:
  7577  00CD  3001               	movlw	1
  7578  00CE  02B6               	subwf	___ftmul@cntr,f
  7579  00CF  1D03               	btfss	3,2
  7580  00D0  28D2               	goto	u3171
  7581  00D1  28D3               	goto	u3170
  7582  00D2                     u3171:
  7583  00D2  28A9               	goto	l2393
  7584  00D3                     u3170:
  7585  00D3                     l2403:
  7586  00D3  0833               	movf	___ftmul@f3_as_product,w
  7587  00D4  00F0               	movwf	___ftpack@arg
  7588  00D5  0834               	movf	___ftmul@f3_as_product+1,w
  7589  00D6  00F1               	movwf	___ftpack@arg+1
  7590  00D7  0835               	movf	___ftmul@f3_as_product+2,w
  7591  00D8  00F2               	movwf	___ftpack@arg+2
  7592  00D9  0832               	movf	___ftmul@exp,w
  7593  00DA  00AE               	movwf	??___ftmul
  7594  00DB  082E               	movf	??___ftmul,w
  7595  00DC  00F3               	movwf	___ftpack@exp
  7596  00DD  0837               	movf	___ftmul@sign,w
  7597  00DE  00AF               	movwf	??___ftmul+1
  7598  00DF  082F               	movf	??___ftmul+1,w
  7599  00E0  00F4               	movwf	___ftpack@sign
  7600  00E1  160A  118A  225F  120A  118A  	fcall	___ftpack
  7601  00E6  0870               	movf	?___ftpack,w
  7602  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  7603  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  7604  00E9  00A8               	movwf	?___ftmul
  7605  00EA  0871               	movf	?___ftpack+1,w
  7606  00EB  00A9               	movwf	?___ftmul+1
  7607  00EC  0872               	movf	?___ftpack+2,w
  7608  00ED  00AA               	movwf	?___ftmul+2
  7609  00EE                     l716:
  7610  00EE  0008               	return
  7611  00EF                     __end_of___ftmul:
  7612                           
  7613                           	psect	text33
  7614  156D                     __ptext33:	
  7615 ;; *************** function ___ftdiv *****************
  7616 ;; Defined at:
  7617 ;;		line 56 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftdiv.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  f2              3   24[BANK0 ] float 
  7620 ;;  f1              3   27[BANK0 ] float 
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;  f3              3   35[BANK0 ] float 
  7623 ;;  sign            1   39[BANK0 ] unsigned char 
  7624 ;;  exp             1   38[BANK0 ] unsigned char 
  7625 ;;  cntr            1   34[BANK0 ] unsigned char 
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  3   24[BANK0 ] float 
  7628 ;; Registers used:
  7629 ;;		wreg, status,2, status,0, pclath, cstack
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7635 ;;      Params:         0       6       0       0       0
  7636 ;;      Locals:         0       6       0       0       0
  7637 ;;      Temps:          0       4       0       0       0
  7638 ;;      Totals:         0      16       0       0       0
  7639 ;;Total ram usage:       16 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; Hardware stack levels required when called:    1
  7642 ;; This function calls:
  7643 ;;		___ftpack
  7644 ;; This function is called by:
  7645 ;;		_aht_GetTemperature
  7646 ;;		_aht_GetHumidity
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           
  7651                           ;psect for function ___ftdiv
  7652  156D                     ___ftdiv:
  7653  156D                     l2741:	
  7654                           ;incstack = 0
  7655                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7656                           
  7657  156D  1283               	bcf	3,5	;RP0=0, select bank0
  7658  156E  1303               	bcf	3,6	;RP1=0, select bank0
  7659  156F  083B               	movf	___ftdiv@f1,w
  7660  1570  00BE               	movwf	??___ftdiv
  7661  1571  083C               	movf	___ftdiv@f1+1,w
  7662  1572  00BF               	movwf	??___ftdiv+1
  7663  1573  083D               	movf	___ftdiv@f1+2,w
  7664  1574  00C0               	movwf	??___ftdiv+2
  7665  1575  1003               	clrc
  7666  1576  0D3F               	rlf	??___ftdiv+1,w
  7667  1577  0D40               	rlf	??___ftdiv+2,w
  7668  1578  00C1               	movwf	??___ftdiv+3
  7669  1579  0841               	movf	??___ftdiv+3,w
  7670  157A  00C6               	movwf	___ftdiv@exp
  7671  157B  0846               	movf	___ftdiv@exp,w
  7672  157C  1D03               	btfss	3,2
  7673  157D  2D7F               	goto	u3951
  7674  157E  2D80               	goto	u3950
  7675  157F                     u3951:
  7676  157F  2D87               	goto	l2747
  7677  1580                     u3950:
  7678  1580                     l2743:
  7679  1580  3000               	movlw	0
  7680  1581  00B8               	movwf	?___ftdiv
  7681  1582  3000               	movlw	0
  7682  1583  00B9               	movwf	?___ftdiv+1
  7683  1584  3000               	movlw	0
  7684  1585  00BA               	movwf	?___ftdiv+2
  7685  1586  2E2E               	goto	l684
  7686  1587                     l2747:
  7687  1587  0838               	movf	___ftdiv@f2,w
  7688  1588  00BE               	movwf	??___ftdiv
  7689  1589  0839               	movf	___ftdiv@f2+1,w
  7690  158A  00BF               	movwf	??___ftdiv+1
  7691  158B  083A               	movf	___ftdiv@f2+2,w
  7692  158C  00C0               	movwf	??___ftdiv+2
  7693  158D  1003               	clrc
  7694  158E  0D3F               	rlf	??___ftdiv+1,w
  7695  158F  0D40               	rlf	??___ftdiv+2,w
  7696  1590  00C1               	movwf	??___ftdiv+3
  7697  1591  0841               	movf	??___ftdiv+3,w
  7698  1592  00C7               	movwf	___ftdiv@sign
  7699  1593  0847               	movf	___ftdiv@sign,w
  7700  1594  1D03               	btfss	3,2
  7701  1595  2D97               	goto	u3961
  7702  1596  2D98               	goto	u3960
  7703  1597                     u3961:
  7704  1597  2D9F               	goto	l2753
  7705  1598                     u3960:
  7706  1598                     l2749:
  7707  1598  3000               	movlw	0
  7708  1599  00B8               	movwf	?___ftdiv
  7709  159A  3000               	movlw	0
  7710  159B  00B9               	movwf	?___ftdiv+1
  7711  159C  3000               	movlw	0
  7712  159D  00BA               	movwf	?___ftdiv+2
  7713  159E  2E2E               	goto	l684
  7714  159F                     l2753:
  7715  159F  3000               	movlw	0
  7716  15A0  00C3               	movwf	___ftdiv@f3
  7717  15A1  3000               	movlw	0
  7718  15A2  00C4               	movwf	___ftdiv@f3+1
  7719  15A3  3000               	movlw	0
  7720  15A4  00C5               	movwf	___ftdiv@f3+2
  7721  15A5                     l2755:
  7722  15A5  3089               	movlw	137
  7723  15A6  0747               	addwf	___ftdiv@sign,w
  7724  15A7  00BE               	movwf	??___ftdiv
  7725  15A8  083E               	movf	??___ftdiv,w
  7726  15A9  02C6               	subwf	___ftdiv@exp,f
  7727  15AA                     l2757:
  7728  15AA  083B               	movf	___ftdiv@f1,w
  7729  15AB  00BE               	movwf	??___ftdiv
  7730  15AC  083C               	movf	___ftdiv@f1+1,w
  7731  15AD  00BF               	movwf	??___ftdiv+1
  7732  15AE  083D               	movf	___ftdiv@f1+2,w
  7733  15AF  00C0               	movwf	??___ftdiv+2
  7734  15B0  3010               	movlw	16
  7735  15B1                     u3975:
  7736  15B1  1003               	clrc
  7737  15B2  0CC0               	rrf	??___ftdiv+2,f
  7738  15B3  0CBF               	rrf	??___ftdiv+1,f
  7739  15B4  0CBE               	rrf	??___ftdiv,f
  7740  15B5                     u3970:
  7741  15B5  3EFF               	addlw	-1
  7742  15B6  1D03               	skipz
  7743  15B7  2DB1               	goto	u3975
  7744  15B8  083E               	movf	??___ftdiv,w
  7745  15B9  00C1               	movwf	??___ftdiv+3
  7746  15BA  0841               	movf	??___ftdiv+3,w
  7747  15BB  00C7               	movwf	___ftdiv@sign
  7748  15BC                     l2759:
  7749  15BC  0838               	movf	___ftdiv@f2,w
  7750  15BD  00BE               	movwf	??___ftdiv
  7751  15BE  0839               	movf	___ftdiv@f2+1,w
  7752  15BF  00BF               	movwf	??___ftdiv+1
  7753  15C0  083A               	movf	___ftdiv@f2+2,w
  7754  15C1  00C0               	movwf	??___ftdiv+2
  7755  15C2  3010               	movlw	16
  7756  15C3                     u3985:
  7757  15C3  1003               	clrc
  7758  15C4  0CC0               	rrf	??___ftdiv+2,f
  7759  15C5  0CBF               	rrf	??___ftdiv+1,f
  7760  15C6  0CBE               	rrf	??___ftdiv,f
  7761  15C7                     u3980:
  7762  15C7  3EFF               	addlw	-1
  7763  15C8  1D03               	skipz
  7764  15C9  2DC3               	goto	u3985
  7765  15CA  083E               	movf	??___ftdiv,w
  7766  15CB  00C1               	movwf	??___ftdiv+3
  7767  15CC  0841               	movf	??___ftdiv+3,w
  7768  15CD  06C7               	xorwf	___ftdiv@sign,f
  7769  15CE                     l2761:
  7770  15CE  3080               	movlw	128
  7771  15CF  00BE               	movwf	??___ftdiv
  7772  15D0  083E               	movf	??___ftdiv,w
  7773  15D1  05C7               	andwf	___ftdiv@sign,f
  7774  15D2                     l2763:
  7775  15D2  17BC               	bsf	___ftdiv@f1+1,7
  7776  15D3  30FF               	movlw	255
  7777  15D4  05BB               	andwf	___ftdiv@f1,f
  7778  15D5  30FF               	movlw	255
  7779  15D6  05BC               	andwf	___ftdiv@f1+1,f
  7780  15D7  3000               	movlw	0
  7781  15D8  05BD               	andwf	___ftdiv@f1+2,f
  7782  15D9                     l2765:
  7783  15D9  17B9               	bsf	___ftdiv@f2+1,7
  7784  15DA  30FF               	movlw	255
  7785  15DB  05B8               	andwf	___ftdiv@f2,f
  7786  15DC  30FF               	movlw	255
  7787  15DD  05B9               	andwf	___ftdiv@f2+1,f
  7788  15DE  3000               	movlw	0
  7789  15DF  05BA               	andwf	___ftdiv@f2+2,f
  7790  15E0  3018               	movlw	24
  7791  15E1  00BE               	movwf	??___ftdiv
  7792  15E2  083E               	movf	??___ftdiv,w
  7793  15E3  00C2               	movwf	___ftdiv@cntr
  7794  15E4                     l2767:
  7795  15E4  3001               	movlw	1
  7796  15E5                     u3995:
  7797  15E5  1003               	clrc
  7798  15E6  0DC3               	rlf	___ftdiv@f3,f
  7799  15E7  0DC4               	rlf	___ftdiv@f3+1,f
  7800  15E8  0DC5               	rlf	___ftdiv@f3+2,f
  7801  15E9  3EFF               	addlw	-1
  7802  15EA  1D03               	skipz
  7803  15EB  2DE5               	goto	u3995
  7804  15EC                     l2769:
  7805  15EC  083A               	movf	___ftdiv@f2+2,w
  7806  15ED  023D               	subwf	___ftdiv@f1+2,w
  7807  15EE  1D03               	skipz
  7808  15EF  2DF6               	goto	u4005
  7809  15F0  0839               	movf	___ftdiv@f2+1,w
  7810  15F1  023C               	subwf	___ftdiv@f1+1,w
  7811  15F2  1D03               	skipz
  7812  15F3  2DF6               	goto	u4005
  7813  15F4  0838               	movf	___ftdiv@f2,w
  7814  15F5  023B               	subwf	___ftdiv@f1,w
  7815  15F6                     u4005:
  7816  15F6  1C03               	skipc
  7817  15F7  2DF9               	goto	u4001
  7818  15F8  2DFA               	goto	u4000
  7819  15F9                     u4001:
  7820  15F9  2E05               	goto	l2775
  7821  15FA                     u4000:
  7822  15FA                     l2771:
  7823  15FA  0838               	movf	___ftdiv@f2,w
  7824  15FB  02BB               	subwf	___ftdiv@f1,f
  7825  15FC  0839               	movf	___ftdiv@f2+1,w
  7826  15FD  1C03               	skipc
  7827  15FE  0F39               	incfsz	___ftdiv@f2+1,w
  7828  15FF  02BC               	subwf	___ftdiv@f1+1,f
  7829  1600  083A               	movf	___ftdiv@f2+2,w
  7830  1601  1C03               	skipc
  7831  1602  0A3A               	incf	___ftdiv@f2+2,w
  7832  1603  02BD               	subwf	___ftdiv@f1+2,f
  7833  1604                     l2773:
  7834  1604  1443               	bsf	___ftdiv@f3,0
  7835  1605                     l2775:
  7836  1605  3001               	movlw	1
  7837  1606                     u4015:
  7838  1606  1003               	clrc
  7839  1607  0DBB               	rlf	___ftdiv@f1,f
  7840  1608  0DBC               	rlf	___ftdiv@f1+1,f
  7841  1609  0DBD               	rlf	___ftdiv@f1+2,f
  7842  160A  3EFF               	addlw	-1
  7843  160B  1D03               	skipz
  7844  160C  2E06               	goto	u4015
  7845  160D                     l2777:
  7846  160D  3001               	movlw	1
  7847  160E  02C2               	subwf	___ftdiv@cntr,f
  7848  160F  1D03               	btfss	3,2
  7849  1610  2E12               	goto	u4021
  7850  1611  2E13               	goto	u4020
  7851  1612                     u4021:
  7852  1612  2DE4               	goto	l2767
  7853  1613                     u4020:
  7854  1613                     l2779:
  7855  1613  0843               	movf	___ftdiv@f3,w
  7856  1614  00F0               	movwf	___ftpack@arg
  7857  1615  0844               	movf	___ftdiv@f3+1,w
  7858  1616  00F1               	movwf	___ftpack@arg+1
  7859  1617  0845               	movf	___ftdiv@f3+2,w
  7860  1618  00F2               	movwf	___ftpack@arg+2
  7861  1619  0846               	movf	___ftdiv@exp,w
  7862  161A  00BE               	movwf	??___ftdiv
  7863  161B  083E               	movf	??___ftdiv,w
  7864  161C  00F3               	movwf	___ftpack@exp
  7865  161D  0847               	movf	___ftdiv@sign,w
  7866  161E  00BF               	movwf	??___ftdiv+1
  7867  161F  083F               	movf	??___ftdiv+1,w
  7868  1620  00F4               	movwf	___ftpack@sign
  7869  1621  160A  118A  225F  160A  118A  	fcall	___ftpack
  7870  1626  0870               	movf	?___ftpack,w
  7871  1627  1283               	bcf	3,5	;RP0=0, select bank0
  7872  1628  1303               	bcf	3,6	;RP1=0, select bank0
  7873  1629  00B8               	movwf	?___ftdiv
  7874  162A  0871               	movf	?___ftpack+1,w
  7875  162B  00B9               	movwf	?___ftdiv+1
  7876  162C  0872               	movf	?___ftpack+2,w
  7877  162D  00BA               	movwf	?___ftdiv+2
  7878  162E                     l684:
  7879  162E  0008               	return
  7880  162F                     __end_of___ftdiv:
  7881                           
  7882                           	psect	text34
  7883  094F                     __ptext34:	
  7884 ;; *************** function ___ftadd *****************
  7885 ;; Defined at:
  7886 ;;		line 86 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftadd.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;  f1              3   40[BANK0 ] float 
  7889 ;;  f2              3   43[BANK0 ] float 
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;  exp1            1   52[BANK0 ] unsigned char 
  7892 ;;  exp2            1   51[BANK0 ] unsigned char 
  7893 ;;  sign            1   50[BANK0 ] unsigned char 
  7894 ;; Return value:  Size  Location     Type
  7895 ;;                  3   40[BANK0 ] float 
  7896 ;; Registers used:
  7897 ;;		wreg, status,2, status,0, pclath, cstack
  7898 ;; Tracked objects:
  7899 ;;		On entry : 0/0
  7900 ;;		On exit  : 0/0
  7901 ;;		Unchanged: 0/0
  7902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7903 ;;      Params:         0       6       0       0       0
  7904 ;;      Locals:         0       3       0       0       0
  7905 ;;      Temps:          0       4       0       0       0
  7906 ;;      Totals:         0      13       0       0       0
  7907 ;;Total ram usage:       13 bytes
  7908 ;; Hardware stack levels used:    1
  7909 ;; Hardware stack levels required when called:    1
  7910 ;; This function calls:
  7911 ;;		___ftpack
  7912 ;; This function is called by:
  7913 ;;		_aht_GetTemperature
  7914 ;;		_sprintf
  7915 ;;		___ftsub
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           
  7920                           ;psect for function ___ftadd
  7921  094F                     ___ftadd:
  7922  094F                     l2287:	
  7923                           ;incstack = 0
  7924                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7925                           
  7926  094F  1283               	bcf	3,5	;RP0=0, select bank0
  7927  0950  1303               	bcf	3,6	;RP1=0, select bank0
  7928  0951  0848               	movf	___ftadd@f1,w
  7929  0952  00CE               	movwf	??___ftadd
  7930  0953  0849               	movf	___ftadd@f1+1,w
  7931  0954  00CF               	movwf	??___ftadd+1
  7932  0955  084A               	movf	___ftadd@f1+2,w
  7933  0956  00D0               	movwf	??___ftadd+2
  7934  0957  1003               	clrc
  7935  0958  0D4F               	rlf	??___ftadd+1,w
  7936  0959  0D50               	rlf	??___ftadd+2,w
  7937  095A  00D1               	movwf	??___ftadd+3
  7938  095B  0851               	movf	??___ftadd+3,w
  7939  095C  00D4               	movwf	___ftadd@exp1
  7940  095D  084B               	movf	___ftadd@f2,w
  7941  095E  00CE               	movwf	??___ftadd
  7942  095F  084C               	movf	___ftadd@f2+1,w
  7943  0960  00CF               	movwf	??___ftadd+1
  7944  0961  084D               	movf	___ftadd@f2+2,w
  7945  0962  00D0               	movwf	??___ftadd+2
  7946  0963  1003               	clrc
  7947  0964  0D4F               	rlf	??___ftadd+1,w
  7948  0965  0D50               	rlf	??___ftadd+2,w
  7949  0966  00D1               	movwf	??___ftadd+3
  7950  0967  0851               	movf	??___ftadd+3,w
  7951  0968  00D3               	movwf	___ftadd@exp2
  7952  0969  0854               	movf	___ftadd@exp1,w
  7953  096A  1903               	btfsc	3,2
  7954  096B  296D               	goto	u2801
  7955  096C  296E               	goto	u2800
  7956  096D                     u2801:
  7957  096D  297E               	goto	l2293
  7958  096E                     u2800:
  7959  096E                     l2289:
  7960  096E  0853               	movf	___ftadd@exp2,w
  7961  096F  0254               	subwf	___ftadd@exp1,w
  7962  0970  1803               	skipnc
  7963  0971  2973               	goto	u2811
  7964  0972  2974               	goto	u2810
  7965  0973                     u2811:
  7966  0973  2985               	goto	l2297
  7967  0974                     u2810:
  7968  0974                     l2291:
  7969  0974  0853               	movf	___ftadd@exp2,w
  7970  0975  00CE               	movwf	??___ftadd
  7971  0976  0854               	movf	___ftadd@exp1,w
  7972  0977  02CE               	subwf	??___ftadd,f
  7973  0978  3019               	movlw	25
  7974  0979  024E               	subwf	??___ftadd,w
  7975  097A  1C03               	skipc
  7976  097B  297D               	goto	u2821
  7977  097C  297E               	goto	u2820
  7978  097D                     u2821:
  7979  097D  2985               	goto	l2297
  7980  097E                     u2820:
  7981  097E                     l2293:
  7982  097E  084B               	movf	___ftadd@f2,w
  7983  097F  00C8               	movwf	?___ftadd
  7984  0980  084C               	movf	___ftadd@f2+1,w
  7985  0981  00C9               	movwf	?___ftadd+1
  7986  0982  084D               	movf	___ftadd@f2+2,w
  7987  0983  00CA               	movwf	?___ftadd+2
  7988  0984  2A84               	goto	l653
  7989  0985                     l2297:
  7990  0985  0853               	movf	___ftadd@exp2,w
  7991  0986  1903               	btfsc	3,2
  7992  0987  2989               	goto	u2831
  7993  0988  298A               	goto	u2830
  7994  0989                     u2831:
  7995  0989  299A               	goto	l656
  7996  098A                     u2830:
  7997  098A                     l2299:
  7998  098A  0854               	movf	___ftadd@exp1,w
  7999  098B  0253               	subwf	___ftadd@exp2,w
  8000  098C  1803               	skipnc
  8001  098D  298F               	goto	u2841
  8002  098E  2990               	goto	u2840
  8003  098F                     u2841:
  8004  098F  299B               	goto	l2303
  8005  0990                     u2840:
  8006  0990                     l2301:
  8007  0990  0854               	movf	___ftadd@exp1,w
  8008  0991  00CE               	movwf	??___ftadd
  8009  0992  0853               	movf	___ftadd@exp2,w
  8010  0993  02CE               	subwf	??___ftadd,f
  8011  0994  3019               	movlw	25
  8012  0995  024E               	subwf	??___ftadd,w
  8013  0996  1C03               	skipc
  8014  0997  2999               	goto	u2851
  8015  0998  299A               	goto	u2850
  8016  0999                     u2851:
  8017  0999  299B               	goto	l2303
  8018  099A                     u2850:
  8019  099A                     l656:
  8020  099A  2A84               	goto	l653
  8021  099B                     l2303:
  8022  099B  3006               	movlw	6
  8023  099C  00CE               	movwf	??___ftadd
  8024  099D  084E               	movf	??___ftadd,w
  8025  099E  00D2               	movwf	___ftadd@sign
  8026  099F                     l2305:
  8027  099F  1FCA               	btfss	___ftadd@f1+2,7
  8028  09A0  29A2               	goto	u2861
  8029  09A1  29A3               	goto	u2860
  8030  09A2                     u2861:
  8031  09A2  29A4               	goto	l657
  8032  09A3                     u2860:
  8033  09A3                     l2307:
  8034  09A3  17D2               	bsf	___ftadd@sign,7
  8035  09A4                     l657:
  8036  09A4  1FCD               	btfss	___ftadd@f2+2,7
  8037  09A5  29A7               	goto	u2871
  8038  09A6  29A8               	goto	u2870
  8039  09A7                     u2871:
  8040  09A7  29A9               	goto	l658
  8041  09A8                     u2870:
  8042  09A8                     l2309:
  8043  09A8  1752               	bsf	___ftadd@sign,6
  8044  09A9                     l658:
  8045  09A9  17C9               	bsf	___ftadd@f1+1,7
  8046  09AA                     l2311:
  8047  09AA  30FF               	movlw	255
  8048  09AB  05C8               	andwf	___ftadd@f1,f
  8049  09AC  30FF               	movlw	255
  8050  09AD  05C9               	andwf	___ftadd@f1+1,f
  8051  09AE  3000               	movlw	0
  8052  09AF  05CA               	andwf	___ftadd@f1+2,f
  8053  09B0                     l2313:
  8054  09B0  17CC               	bsf	___ftadd@f2+1,7
  8055  09B1  30FF               	movlw	255
  8056  09B2  05CB               	andwf	___ftadd@f2,f
  8057  09B3  30FF               	movlw	255
  8058  09B4  05CC               	andwf	___ftadd@f2+1,f
  8059  09B5  3000               	movlw	0
  8060  09B6  05CD               	andwf	___ftadd@f2+2,f
  8061  09B7  0853               	movf	___ftadd@exp2,w
  8062  09B8  0254               	subwf	___ftadd@exp1,w
  8063  09B9  1803               	skipnc
  8064  09BA  29BC               	goto	u2881
  8065  09BB  29BD               	goto	u2880
  8066  09BC                     u2881:
  8067  09BC  29E9               	goto	l2325
  8068  09BD                     u2880:
  8069  09BD                     l2315:
  8070  09BD  3001               	movlw	1
  8071  09BE                     u2895:
  8072  09BE  1003               	clrc
  8073  09BF  0DCB               	rlf	___ftadd@f2,f
  8074  09C0  0DCC               	rlf	___ftadd@f2+1,f
  8075  09C1  0DCD               	rlf	___ftadd@f2+2,f
  8076  09C2  3EFF               	addlw	-1
  8077  09C3  1D03               	skipz
  8078  09C4  29BE               	goto	u2895
  8079  09C5  3001               	movlw	1
  8080  09C6  02D3               	subwf	___ftadd@exp2,f
  8081  09C7                     l2317:
  8082  09C7  0853               	movf	___ftadd@exp2,w
  8083  09C8  0654               	xorwf	___ftadd@exp1,w
  8084  09C9  1903               	skipnz
  8085  09CA  29CC               	goto	u2901
  8086  09CB  29CD               	goto	u2900
  8087  09CC                     u2901:
  8088  09CC  29E2               	goto	l2323
  8089  09CD                     u2900:
  8090  09CD                     l2319:
  8091  09CD  3001               	movlw	1
  8092  09CE  02D2               	subwf	___ftadd@sign,f
  8093  09CF  0852               	movf	___ftadd@sign,w
  8094  09D0  3907               	andlw	7
  8095  09D1  1D03               	btfss	3,2
  8096  09D2  29D4               	goto	u2911
  8097  09D3  29D5               	goto	u2910
  8098  09D4                     u2911:
  8099  09D4  29BD               	goto	l2315
  8100  09D5                     u2910:
  8101  09D5  29E2               	goto	l2323
  8102  09D6                     l2321:
  8103  09D6  3001               	movlw	1
  8104  09D7                     u2925:
  8105  09D7  1003               	clrc
  8106  09D8  0CCA               	rrf	___ftadd@f1+2,f
  8107  09D9  0CC9               	rrf	___ftadd@f1+1,f
  8108  09DA  0CC8               	rrf	___ftadd@f1,f
  8109  09DB  3EFF               	addlw	-1
  8110  09DC  1D03               	skipz
  8111  09DD  29D7               	goto	u2925
  8112  09DE  3001               	movlw	1
  8113  09DF  00CE               	movwf	??___ftadd
  8114  09E0  084E               	movf	??___ftadd,w
  8115  09E1  07D4               	addwf	___ftadd@exp1,f
  8116  09E2                     l2323:
  8117  09E2  0854               	movf	___ftadd@exp1,w
  8118  09E3  0653               	xorwf	___ftadd@exp2,w
  8119  09E4  1D03               	skipz
  8120  09E5  29E7               	goto	u2931
  8121  09E6  29E8               	goto	u2930
  8122  09E7                     u2931:
  8123  09E7  29D6               	goto	l2321
  8124  09E8                     u2930:
  8125  09E8  2A1A               	goto	l667
  8126  09E9                     l2325:
  8127  09E9  0854               	movf	___ftadd@exp1,w
  8128  09EA  0253               	subwf	___ftadd@exp2,w
  8129  09EB  1803               	skipnc
  8130  09EC  29EE               	goto	u2941
  8131  09ED  29EF               	goto	u2940
  8132  09EE                     u2941:
  8133  09EE  2A1A               	goto	l667
  8134  09EF                     u2940:
  8135  09EF                     l2327:
  8136  09EF  3001               	movlw	1
  8137  09F0                     u2955:
  8138  09F0  1003               	clrc
  8139  09F1  0DC8               	rlf	___ftadd@f1,f
  8140  09F2  0DC9               	rlf	___ftadd@f1+1,f
  8141  09F3  0DCA               	rlf	___ftadd@f1+2,f
  8142  09F4  3EFF               	addlw	-1
  8143  09F5  1D03               	skipz
  8144  09F6  29F0               	goto	u2955
  8145  09F7  3001               	movlw	1
  8146  09F8  02D4               	subwf	___ftadd@exp1,f
  8147  09F9                     l2329:
  8148  09F9  0853               	movf	___ftadd@exp2,w
  8149  09FA  0654               	xorwf	___ftadd@exp1,w
  8150  09FB  1903               	skipnz
  8151  09FC  29FE               	goto	u2961
  8152  09FD  29FF               	goto	u2960
  8153  09FE                     u2961:
  8154  09FE  2A14               	goto	l2335
  8155  09FF                     u2960:
  8156  09FF                     l2331:
  8157  09FF  3001               	movlw	1
  8158  0A00  02D2               	subwf	___ftadd@sign,f
  8159  0A01  0852               	movf	___ftadd@sign,w
  8160  0A02  3907               	andlw	7
  8161  0A03  1D03               	btfss	3,2
  8162  0A04  2A06               	goto	u2971
  8163  0A05  2A07               	goto	u2970
  8164  0A06                     u2971:
  8165  0A06  29EF               	goto	l2327
  8166  0A07                     u2970:
  8167  0A07  2A14               	goto	l2335
  8168  0A08                     l2333:
  8169  0A08  3001               	movlw	1
  8170  0A09                     u2985:
  8171  0A09  1003               	clrc
  8172  0A0A  0CCD               	rrf	___ftadd@f2+2,f
  8173  0A0B  0CCC               	rrf	___ftadd@f2+1,f
  8174  0A0C  0CCB               	rrf	___ftadd@f2,f
  8175  0A0D  3EFF               	addlw	-1
  8176  0A0E  1D03               	skipz
  8177  0A0F  2A09               	goto	u2985
  8178  0A10  3001               	movlw	1
  8179  0A11  00CE               	movwf	??___ftadd
  8180  0A12  084E               	movf	??___ftadd,w
  8181  0A13  07D3               	addwf	___ftadd@exp2,f
  8182  0A14                     l2335:
  8183  0A14  0854               	movf	___ftadd@exp1,w
  8184  0A15  0653               	xorwf	___ftadd@exp2,w
  8185  0A16  1D03               	skipz
  8186  0A17  2A19               	goto	u2991
  8187  0A18  2A1A               	goto	u2990
  8188  0A19                     u2991:
  8189  0A19  2A08               	goto	l2333
  8190  0A1A                     u2990:
  8191  0A1A                     l667:
  8192  0A1A  1FD2               	btfss	___ftadd@sign,7
  8193  0A1B  2A1D               	goto	u3001
  8194  0A1C  2A1E               	goto	u3000
  8195  0A1D                     u3001:
  8196  0A1D  2A2E               	goto	l2339
  8197  0A1E                     u3000:
  8198  0A1E                     l2337:
  8199  0A1E  30FF               	movlw	255
  8200  0A1F  06C8               	xorwf	___ftadd@f1,f
  8201  0A20  30FF               	movlw	255
  8202  0A21  06C9               	xorwf	___ftadd@f1+1,f
  8203  0A22  30FF               	movlw	255
  8204  0A23  06CA               	xorwf	___ftadd@f1+2,f
  8205  0A24  3001               	movlw	1
  8206  0A25  07C8               	addwf	___ftadd@f1,f
  8207  0A26  3000               	movlw	0
  8208  0A27  1803               	skipnc
  8209  0A28  3001               	movlw	1
  8210  0A29  07C9               	addwf	___ftadd@f1+1,f
  8211  0A2A  3000               	movlw	0
  8212  0A2B  1803               	skipnc
  8213  0A2C  3001               	movlw	1
  8214  0A2D  07CA               	addwf	___ftadd@f1+2,f
  8215  0A2E                     l2339:
  8216  0A2E  1F52               	btfss	___ftadd@sign,6
  8217  0A2F  2A31               	goto	u3011
  8218  0A30  2A32               	goto	u3010
  8219  0A31                     u3011:
  8220  0A31  2A42               	goto	l2343
  8221  0A32                     u3010:
  8222  0A32                     l2341:
  8223  0A32  30FF               	movlw	255
  8224  0A33  06CB               	xorwf	___ftadd@f2,f
  8225  0A34  30FF               	movlw	255
  8226  0A35  06CC               	xorwf	___ftadd@f2+1,f
  8227  0A36  30FF               	movlw	255
  8228  0A37  06CD               	xorwf	___ftadd@f2+2,f
  8229  0A38  3001               	movlw	1
  8230  0A39  07CB               	addwf	___ftadd@f2,f
  8231  0A3A  3000               	movlw	0
  8232  0A3B  1803               	skipnc
  8233  0A3C  3001               	movlw	1
  8234  0A3D  07CC               	addwf	___ftadd@f2+1,f
  8235  0A3E  3000               	movlw	0
  8236  0A3F  1803               	skipnc
  8237  0A40  3001               	movlw	1
  8238  0A41  07CD               	addwf	___ftadd@f2+2,f
  8239  0A42                     l2343:
  8240  0A42  01D2               	clrf	___ftadd@sign
  8241  0A43                     l2345:
  8242  0A43  0848               	movf	___ftadd@f1,w
  8243  0A44  07CB               	addwf	___ftadd@f2,f
  8244  0A45  0849               	movf	___ftadd@f1+1,w
  8245  0A46  1103               	clrz
  8246  0A47  1803               	skipnc
  8247  0A48  0A49               	incf	___ftadd@f1+1,w
  8248  0A49  1903               	skipnz
  8249  0A4A  2A4C               	goto	u3021
  8250  0A4B  07CC               	addwf	___ftadd@f2+1,f
  8251  0A4C                     u3021:
  8252  0A4C  084A               	movf	___ftadd@f1+2,w
  8253  0A4D  1103               	clrz
  8254  0A4E  1803               	skipnc
  8255  0A4F  0A4A               	incf	___ftadd@f1+2,w
  8256  0A50  1903               	skipnz
  8257  0A51  2A53               	goto	u3022
  8258  0A52  07CD               	addwf	___ftadd@f2+2,f
  8259  0A53                     u3022:
  8260  0A53                     l2347:
  8261  0A53  1FCD               	btfss	___ftadd@f2+2,7
  8262  0A54  2A56               	goto	u3031
  8263  0A55  2A57               	goto	u3030
  8264  0A56                     u3031:
  8265  0A56  2A69               	goto	l2353
  8266  0A57                     u3030:
  8267  0A57                     l2349:
  8268  0A57  30FF               	movlw	255
  8269  0A58  06CB               	xorwf	___ftadd@f2,f
  8270  0A59  30FF               	movlw	255
  8271  0A5A  06CC               	xorwf	___ftadd@f2+1,f
  8272  0A5B  30FF               	movlw	255
  8273  0A5C  06CD               	xorwf	___ftadd@f2+2,f
  8274  0A5D  3001               	movlw	1
  8275  0A5E  07CB               	addwf	___ftadd@f2,f
  8276  0A5F  3000               	movlw	0
  8277  0A60  1803               	skipnc
  8278  0A61  3001               	movlw	1
  8279  0A62  07CC               	addwf	___ftadd@f2+1,f
  8280  0A63  3000               	movlw	0
  8281  0A64  1803               	skipnc
  8282  0A65  3001               	movlw	1
  8283  0A66  07CD               	addwf	___ftadd@f2+2,f
  8284  0A67                     l2351:
  8285  0A67  01D2               	clrf	___ftadd@sign
  8286  0A68  0AD2               	incf	___ftadd@sign,f
  8287  0A69                     l2353:
  8288  0A69  084B               	movf	___ftadd@f2,w
  8289  0A6A  00F0               	movwf	___ftpack@arg
  8290  0A6B  084C               	movf	___ftadd@f2+1,w
  8291  0A6C  00F1               	movwf	___ftpack@arg+1
  8292  0A6D  084D               	movf	___ftadd@f2+2,w
  8293  0A6E  00F2               	movwf	___ftpack@arg+2
  8294  0A6F  0854               	movf	___ftadd@exp1,w
  8295  0A70  00CE               	movwf	??___ftadd
  8296  0A71  084E               	movf	??___ftadd,w
  8297  0A72  00F3               	movwf	___ftpack@exp
  8298  0A73  0852               	movf	___ftadd@sign,w
  8299  0A74  00CF               	movwf	??___ftadd+1
  8300  0A75  084F               	movf	??___ftadd+1,w
  8301  0A76  00F4               	movwf	___ftpack@sign
  8302  0A77  160A  118A  225F  120A  158A  	fcall	___ftpack
  8303  0A7C  0870               	movf	?___ftpack,w
  8304  0A7D  1283               	bcf	3,5	;RP0=0, select bank0
  8305  0A7E  1303               	bcf	3,6	;RP1=0, select bank0
  8306  0A7F  00C8               	movwf	?___ftadd
  8307  0A80  0871               	movf	?___ftpack+1,w
  8308  0A81  00C9               	movwf	?___ftadd+1
  8309  0A82  0872               	movf	?___ftpack+2,w
  8310  0A83  00CA               	movwf	?___ftadd+2
  8311  0A84                     l653:
  8312  0A84  0008               	return
  8313  0A85                     __end_of___ftadd:
  8314                           
  8315                           	psect	text35
  8316  125F                     __ptext35:	
  8317 ;; *************** function ___ftpack *****************
  8318 ;; Defined at:
  8319 ;;		line 62 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\float.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;  arg             3    0[COMMON] unsigned um
  8322 ;;  exp             1    3[COMMON] unsigned char 
  8323 ;;  sign            1    4[COMMON] unsigned char 
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;		None
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  3    0[COMMON] float 
  8328 ;; Registers used:
  8329 ;;		wreg, status,2, status,0
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8335 ;;      Params:         5       0       0       0       0
  8336 ;;      Locals:         0       0       0       0       0
  8337 ;;      Temps:          3       0       0       0       0
  8338 ;;      Totals:         8       0       0       0       0
  8339 ;;Total ram usage:        8 bytes
  8340 ;; Hardware stack levels used:    1
  8341 ;; This function calls:
  8342 ;;		Nothing
  8343 ;; This function is called by:
  8344 ;;		___ftadd
  8345 ;;		___ftdiv
  8346 ;;		___ftmul
  8347 ;;		___lltoft
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           
  8352                           ;psect for function ___ftpack
  8353  125F                     ___ftpack:
  8354  125F                     l2131:	
  8355                           ;incstack = 0
  8356                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8357                           
  8358  125F  0873               	movf	___ftpack@exp,w
  8359  1260  1903               	btfsc	3,2
  8360  1261  2A63               	goto	u2461
  8361  1262  2A64               	goto	u2460
  8362  1263                     u2461:
  8363  1263  2A6B               	goto	l2135
  8364  1264                     u2460:
  8365  1264                     l2133:
  8366  1264  0872               	movf	___ftpack@arg+2,w
  8367  1265  0471               	iorwf	___ftpack@arg+1,w
  8368  1266  0470               	iorwf	___ftpack@arg,w
  8369  1267  1D03               	skipz
  8370  1268  2A6A               	goto	u2471
  8371  1269  2A6B               	goto	u2470
  8372  126A                     u2471:
  8373  126A  2A7E               	goto	l2141
  8374  126B                     u2470:
  8375  126B                     l2135:
  8376  126B  3000               	movlw	0
  8377  126C  00F0               	movwf	?___ftpack
  8378  126D  3000               	movlw	0
  8379  126E  00F1               	movwf	?___ftpack+1
  8380  126F  3000               	movlw	0
  8381  1270  00F2               	movwf	?___ftpack+2
  8382  1271  2ADA               	goto	l632
  8383  1272                     l2139:
  8384  1272  3001               	movlw	1
  8385  1273  00F5               	movwf	??___ftpack
  8386  1274  0875               	movf	??___ftpack,w
  8387  1275  07F3               	addwf	___ftpack@exp,f
  8388  1276  3001               	movlw	1
  8389  1277                     u2485:
  8390  1277  1003               	clrc
  8391  1278  0CF2               	rrf	___ftpack@arg+2,f
  8392  1279  0CF1               	rrf	___ftpack@arg+1,f
  8393  127A  0CF0               	rrf	___ftpack@arg,f
  8394  127B  3EFF               	addlw	-1
  8395  127C  1D03               	skipz
  8396  127D  2A77               	goto	u2485
  8397  127E                     l2141:
  8398  127E  30FE               	movlw	254
  8399  127F  0572               	andwf	___ftpack@arg+2,w
  8400  1280  1D03               	btfss	3,2
  8401  1281  2A83               	goto	u2491
  8402  1282  2A84               	goto	u2490
  8403  1283                     u2491:
  8404  1283  2A72               	goto	l2139
  8405  1284                     u2490:
  8406  1284  2A9B               	goto	l636
  8407  1285                     l2143:
  8408  1285  3001               	movlw	1
  8409  1286  00F5               	movwf	??___ftpack
  8410  1287  0875               	movf	??___ftpack,w
  8411  1288  07F3               	addwf	___ftpack@exp,f
  8412  1289                     l2145:
  8413  1289  3001               	movlw	1
  8414  128A  07F0               	addwf	___ftpack@arg,f
  8415  128B  3000               	movlw	0
  8416  128C  1803               	skipnc
  8417  128D  3001               	movlw	1
  8418  128E  07F1               	addwf	___ftpack@arg+1,f
  8419  128F  3000               	movlw	0
  8420  1290  1803               	skipnc
  8421  1291  3001               	movlw	1
  8422  1292  07F2               	addwf	___ftpack@arg+2,f
  8423  1293                     l2147:
  8424  1293  3001               	movlw	1
  8425  1294                     u2505:
  8426  1294  1003               	clrc
  8427  1295  0CF2               	rrf	___ftpack@arg+2,f
  8428  1296  0CF1               	rrf	___ftpack@arg+1,f
  8429  1297  0CF0               	rrf	___ftpack@arg,f
  8430  1298  3EFF               	addlw	-1
  8431  1299  1D03               	skipz
  8432  129A  2A94               	goto	u2505
  8433  129B                     l636:
  8434  129B  30FF               	movlw	255
  8435  129C  0572               	andwf	___ftpack@arg+2,w
  8436  129D  1D03               	btfss	3,2
  8437  129E  2AA0               	goto	u2511
  8438  129F  2AA1               	goto	u2510
  8439  12A0                     u2511:
  8440  12A0  2A85               	goto	l2143
  8441  12A1                     u2510:
  8442  12A1  2AAC               	goto	l2151
  8443  12A2                     l2149:
  8444  12A2  3001               	movlw	1
  8445  12A3  02F3               	subwf	___ftpack@exp,f
  8446  12A4  3001               	movlw	1
  8447  12A5                     u2525:
  8448  12A5  1003               	clrc
  8449  12A6  0DF0               	rlf	___ftpack@arg,f
  8450  12A7  0DF1               	rlf	___ftpack@arg+1,f
  8451  12A8  0DF2               	rlf	___ftpack@arg+2,f
  8452  12A9  3EFF               	addlw	-1
  8453  12AA  1D03               	skipz
  8454  12AB  2AA5               	goto	u2525
  8455  12AC                     l2151:
  8456  12AC  1BF1               	btfsc	___ftpack@arg+1,7
  8457  12AD  2AAF               	goto	u2531
  8458  12AE  2AB0               	goto	u2530
  8459  12AF                     u2531:
  8460  12AF  2AB6               	goto	l643
  8461  12B0                     u2530:
  8462  12B0                     l2153:
  8463  12B0  3002               	movlw	2
  8464  12B1  0273               	subwf	___ftpack@exp,w
  8465  12B2  1803               	skipnc
  8466  12B3  2AB5               	goto	u2541
  8467  12B4  2AB6               	goto	u2540
  8468  12B5                     u2541:
  8469  12B5  2AA2               	goto	l2149
  8470  12B6                     u2540:
  8471  12B6                     l643:
  8472  12B6  1873               	btfsc	___ftpack@exp,0
  8473  12B7  2AB9               	goto	u2551
  8474  12B8  2ABA               	goto	u2550
  8475  12B9                     u2551:
  8476  12B9  2AC0               	goto	l644
  8477  12BA                     u2550:
  8478  12BA                     l2155:
  8479  12BA  30FF               	movlw	255
  8480  12BB  05F0               	andwf	___ftpack@arg,f
  8481  12BC  307F               	movlw	127
  8482  12BD  05F1               	andwf	___ftpack@arg+1,f
  8483  12BE  30FF               	movlw	255
  8484  12BF  05F2               	andwf	___ftpack@arg+2,f
  8485  12C0                     l644:
  8486  12C0  1003               	clrc
  8487  12C1  0CF3               	rrf	___ftpack@exp,f
  8488  12C2                     l2157:
  8489  12C2  0873               	movf	___ftpack@exp,w
  8490  12C3  00F5               	movwf	??___ftpack
  8491  12C4  01F6               	clrf	??___ftpack+1
  8492  12C5  01F7               	clrf	??___ftpack+2
  8493  12C6  3010               	movlw	16
  8494  12C7                     u2565:
  8495  12C7  1003               	clrc
  8496  12C8  0DF5               	rlf	??___ftpack,f
  8497  12C9  0DF6               	rlf	??___ftpack+1,f
  8498  12CA  0DF7               	rlf	??___ftpack+2,f
  8499  12CB                     u2560:
  8500  12CB  3EFF               	addlw	-1
  8501  12CC  1D03               	skipz
  8502  12CD  2AC7               	goto	u2565
  8503  12CE  0875               	movf	??___ftpack,w
  8504  12CF  04F0               	iorwf	___ftpack@arg,f
  8505  12D0  0876               	movf	??___ftpack+1,w
  8506  12D1  04F1               	iorwf	___ftpack@arg+1,f
  8507  12D2  0877               	movf	??___ftpack+2,w
  8508  12D3  04F2               	iorwf	___ftpack@arg+2,f
  8509  12D4                     l2159:
  8510  12D4  0874               	movf	___ftpack@sign,w
  8511  12D5  1903               	btfsc	3,2
  8512  12D6  2AD8               	goto	u2571
  8513  12D7  2AD9               	goto	u2570
  8514  12D8                     u2571:
  8515  12D8  2ADA               	goto	l645
  8516  12D9                     u2570:
  8517  12D9                     l2161:
  8518  12D9  17F2               	bsf	___ftpack@arg+2,7
  8519  12DA                     l645:
  8520  12DA                     l632:
  8521  12DA  0008               	return
  8522  12DB                     __end_of___ftpack:
  8523                           
  8524                           	psect	text36
  8525  1EF8                     __ptext36:	
  8526 ;; *************** function _I2C_Master_Init *****************
  8527 ;; Defined at:
  8528 ;;		line 16 in file "I2C.c"
  8529 ;; Parameters:    Size  Location     Type
  8530 ;;  c               4    0[BANK0 ] const unsigned long 
  8531 ;; Auto vars:     Size  Location     Type
  8532 ;;		None
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  1    wreg      void 
  8535 ;; Registers used:
  8536 ;;		wreg, status,2, status,0, pclath, cstack
  8537 ;; Tracked objects:
  8538 ;;		On entry : 0/0
  8539 ;;		On exit  : 0/0
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8542 ;;      Params:         0       4       0       0       0
  8543 ;;      Locals:         0       0       0       0       0
  8544 ;;      Temps:          0       4       0       0       0
  8545 ;;      Totals:         0       8       0       0       0
  8546 ;;Total ram usage:        8 bytes
  8547 ;; Hardware stack levels used:    1
  8548 ;; Hardware stack levels required when called:    1
  8549 ;; This function calls:
  8550 ;;		___lldiv
  8551 ;; This function is called by:
  8552 ;;		_main
  8553 ;;		_aht_begin
  8554 ;; This function uses a non-reentrant model
  8555 ;;
  8556                           
  8557                           
  8558                           ;psect for function _I2C_Master_Init
  8559  1EF8                     _I2C_Master_Init:
  8560  1EF8                     l2923:	
  8561                           ;incstack = 0
  8562                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  8563                           
  8564                           
  8565                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  8566  1EF8  3028               	movlw	40
  8567  1EF9  1283               	bcf	3,5	;RP0=0, select bank0
  8568  1EFA  1303               	bcf	3,6	;RP1=0, select bank0
  8569  1EFB  0094               	movwf	20	;volatile
  8570  1EFC                     l2925:
  8571                           
  8572                           ;I2C.c: 19:     SSPCON2 = 0;
  8573  1EFC  1683               	bsf	3,5	;RP0=1, select bank1
  8574  1EFD  1303               	bcf	3,6	;RP1=0, select bank1
  8575  1EFE  0191               	clrf	17	;volatile
  8576  1EFF                     l2927:
  8577                           
  8578                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  8579  1EFF  1283               	bcf	3,5	;RP0=0, select bank0
  8580  1F00  1303               	bcf	3,6	;RP1=0, select bank0
  8581  1F01  0820               	movf	I2C_Master_Init@c,w
  8582  1F02  00A4               	movwf	??_I2C_Master_Init
  8583  1F03  0821               	movf	I2C_Master_Init@c+1,w
  8584  1F04  00A5               	movwf	??_I2C_Master_Init+1
  8585  1F05  0822               	movf	I2C_Master_Init@c+2,w
  8586  1F06  00A6               	movwf	??_I2C_Master_Init+2
  8587  1F07  0823               	movf	I2C_Master_Init@c+3,w
  8588  1F08  00A7               	movwf	??_I2C_Master_Init+3
  8589  1F09  3002               	movlw	2
  8590  1F0A                     u4325:
  8591  1F0A  1003               	clrc
  8592  1F0B  0DA4               	rlf	??_I2C_Master_Init,f
  8593  1F0C  0DA5               	rlf	??_I2C_Master_Init+1,f
  8594  1F0D  0DA6               	rlf	??_I2C_Master_Init+2,f
  8595  1F0E  0DA7               	rlf	??_I2C_Master_Init+3,f
  8596  1F0F                     u4320:
  8597  1F0F  3EFF               	addlw	-1
  8598  1F10  1D03               	skipz
  8599  1F11  2F0A               	goto	u4325
  8600  1F12  0827               	movf	??_I2C_Master_Init+3,w
  8601  1F13  00F3               	movwf	___lldiv@divisor+3
  8602  1F14  0826               	movf	??_I2C_Master_Init+2,w
  8603  1F15  00F2               	movwf	___lldiv@divisor+2
  8604  1F16  0825               	movf	??_I2C_Master_Init+1,w
  8605  1F17  00F1               	movwf	___lldiv@divisor+1
  8606  1F18  0824               	movf	??_I2C_Master_Init,w
  8607  1F19  00F0               	movwf	___lldiv@divisor
  8608  1F1A  3000               	movlw	0
  8609  1F1B  00F7               	movwf	___lldiv@dividend+3
  8610  1F1C  303D               	movlw	61
  8611  1F1D  00F6               	movwf	___lldiv@dividend+2
  8612  1F1E  3009               	movlw	9
  8613  1F1F  00F5               	movwf	___lldiv@dividend+1
  8614  1F20  3000               	movlw	0
  8615  1F21  00F4               	movwf	___lldiv@dividend
  8616  1F22  160A  118A  2190  160A  158A  	fcall	___lldiv
  8617  1F27  0870               	movf	?___lldiv,w
  8618  1F28  3EFF               	addlw	255
  8619  1F29  1683               	bsf	3,5	;RP0=1, select bank1
  8620  1F2A  1303               	bcf	3,6	;RP1=0, select bank1
  8621  1F2B  0093               	movwf	19	;volatile
  8622  1F2C                     l2929:
  8623                           
  8624                           ;I2C.c: 21:     SSPSTAT = 0;
  8625  1F2C  0194               	clrf	20	;volatile
  8626  1F2D                     l2931:
  8627                           
  8628                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  8629  1F2D  1587               	bsf	7,3	;volatile
  8630  1F2E                     l2933:
  8631                           
  8632                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  8633  1F2E  1607               	bsf	7,4	;volatile
  8634  1F2F                     l93:
  8635  1F2F  0008               	return
  8636  1F30                     __end_of_I2C_Master_Init:
  8637                           
  8638                           	psect	text37
  8639  1190                     __ptext37:	
  8640 ;; *************** function ___lldiv *****************
  8641 ;; Defined at:
  8642 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\__lldiv.c"
  8643 ;; Parameters:    Size  Location     Type
  8644 ;;  divisor         4    0[COMMON] unsigned long 
  8645 ;;  dividend        4    4[COMMON] unsigned long 
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;  quotient        4    9[COMMON] unsigned long 
  8648 ;;  counter         1   13[COMMON] unsigned char 
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  4    0[COMMON] unsigned long 
  8651 ;; Registers used:
  8652 ;;		wreg, status,2, status,0
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8658 ;;      Params:         8       0       0       0       0
  8659 ;;      Locals:         5       0       0       0       0
  8660 ;;      Temps:          1       0       0       0       0
  8661 ;;      Totals:        14       0       0       0       0
  8662 ;;Total ram usage:       14 bytes
  8663 ;; Hardware stack levels used:    1
  8664 ;; This function calls:
  8665 ;;		Nothing
  8666 ;; This function is called by:
  8667 ;;		_I2C_Master_Init
  8668 ;;		_sprintf
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           
  8672                           
  8673                           ;psect for function ___lldiv
  8674  1190                     ___lldiv:
  8675  1190                     l2677:	
  8676                           ;incstack = 0
  8677                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8678                           
  8679  1190  3000               	movlw	0
  8680  1191  00FC               	movwf	___lldiv@quotient+3
  8681  1192  3000               	movlw	0
  8682  1193  00FB               	movwf	___lldiv@quotient+2
  8683  1194  3000               	movlw	0
  8684  1195  00FA               	movwf	___lldiv@quotient+1
  8685  1196  3000               	movlw	0
  8686  1197  00F9               	movwf	___lldiv@quotient
  8687  1198  0873               	movf	___lldiv@divisor+3,w
  8688  1199  0472               	iorwf	___lldiv@divisor+2,w
  8689  119A  0471               	iorwf	___lldiv@divisor+1,w
  8690  119B  0470               	iorwf	___lldiv@divisor,w
  8691  119C  1903               	skipnz
  8692  119D  299F               	goto	u3781
  8693  119E  29A0               	goto	u3780
  8694  119F                     u3781:
  8695  119F  29ED               	goto	l2697
  8696  11A0                     u3780:
  8697  11A0                     l2679:
  8698  11A0  01FD               	clrf	___lldiv@counter
  8699  11A1  0AFD               	incf	___lldiv@counter,f
  8700  11A2  29B0               	goto	l2683
  8701  11A3                     l2681:
  8702  11A3  3001               	movlw	1
  8703  11A4  00F8               	movwf	??___lldiv
  8704  11A5                     u3795:
  8705  11A5  1003               	clrc
  8706  11A6  0DF0               	rlf	___lldiv@divisor,f
  8707  11A7  0DF1               	rlf	___lldiv@divisor+1,f
  8708  11A8  0DF2               	rlf	___lldiv@divisor+2,f
  8709  11A9  0DF3               	rlf	___lldiv@divisor+3,f
  8710  11AA  0BF8               	decfsz	??___lldiv,f
  8711  11AB  29A5               	goto	u3795
  8712  11AC  3001               	movlw	1
  8713  11AD  00F8               	movwf	??___lldiv
  8714  11AE  0878               	movf	??___lldiv,w
  8715  11AF  07FD               	addwf	___lldiv@counter,f
  8716  11B0                     l2683:
  8717  11B0  1FF3               	btfss	___lldiv@divisor+3,7
  8718  11B1  29B3               	goto	u3801
  8719  11B2  29B4               	goto	u3800
  8720  11B3                     u3801:
  8721  11B3  29A3               	goto	l2681
  8722  11B4                     u3800:
  8723  11B4                     l2685:
  8724  11B4  3001               	movlw	1
  8725  11B5  00F8               	movwf	??___lldiv
  8726  11B6                     u3815:
  8727  11B6  1003               	clrc
  8728  11B7  0DF9               	rlf	___lldiv@quotient,f
  8729  11B8  0DFA               	rlf	___lldiv@quotient+1,f
  8730  11B9  0DFB               	rlf	___lldiv@quotient+2,f
  8731  11BA  0DFC               	rlf	___lldiv@quotient+3,f
  8732  11BB  0BF8               	decfsz	??___lldiv,f
  8733  11BC  29B6               	goto	u3815
  8734  11BD                     l2687:
  8735  11BD  0873               	movf	___lldiv@divisor+3,w
  8736  11BE  0277               	subwf	___lldiv@dividend+3,w
  8737  11BF  1D03               	skipz
  8738  11C0  29CB               	goto	u3825
  8739  11C1  0872               	movf	___lldiv@divisor+2,w
  8740  11C2  0276               	subwf	___lldiv@dividend+2,w
  8741  11C3  1D03               	skipz
  8742  11C4  29CB               	goto	u3825
  8743  11C5  0871               	movf	___lldiv@divisor+1,w
  8744  11C6  0275               	subwf	___lldiv@dividend+1,w
  8745  11C7  1D03               	skipz
  8746  11C8  29CB               	goto	u3825
  8747  11C9  0870               	movf	___lldiv@divisor,w
  8748  11CA  0274               	subwf	___lldiv@dividend,w
  8749  11CB                     u3825:
  8750  11CB  1C03               	skipc
  8751  11CC  29CE               	goto	u3821
  8752  11CD  29CF               	goto	u3820
  8753  11CE                     u3821:
  8754  11CE  29DE               	goto	l2693
  8755  11CF                     u3820:
  8756  11CF                     l2689:
  8757  11CF  0870               	movf	___lldiv@divisor,w
  8758  11D0  02F4               	subwf	___lldiv@dividend,f
  8759  11D1  0871               	movf	___lldiv@divisor+1,w
  8760  11D2  1C03               	skipc
  8761  11D3  0F71               	incfsz	___lldiv@divisor+1,w
  8762  11D4  02F5               	subwf	___lldiv@dividend+1,f
  8763  11D5  0872               	movf	___lldiv@divisor+2,w
  8764  11D6  1C03               	skipc
  8765  11D7  0F72               	incfsz	___lldiv@divisor+2,w
  8766  11D8  02F6               	subwf	___lldiv@dividend+2,f
  8767  11D9  0873               	movf	___lldiv@divisor+3,w
  8768  11DA  1C03               	skipc
  8769  11DB  0F73               	incfsz	___lldiv@divisor+3,w
  8770  11DC  02F7               	subwf	___lldiv@dividend+3,f
  8771  11DD                     l2691:
  8772  11DD  1479               	bsf	___lldiv@quotient,0
  8773  11DE                     l2693:
  8774  11DE  3001               	movlw	1
  8775  11DF                     u3835:
  8776  11DF  1003               	clrc
  8777  11E0  0CF3               	rrf	___lldiv@divisor+3,f
  8778  11E1  0CF2               	rrf	___lldiv@divisor+2,f
  8779  11E2  0CF1               	rrf	___lldiv@divisor+1,f
  8780  11E3  0CF0               	rrf	___lldiv@divisor,f
  8781  11E4  3EFF               	addlw	-1
  8782  11E5  1D03               	skipz
  8783  11E6  29DF               	goto	u3835
  8784  11E7                     l2695:
  8785  11E7  3001               	movlw	1
  8786  11E8  02FD               	subwf	___lldiv@counter,f
  8787  11E9  1D03               	btfss	3,2
  8788  11EA  29EC               	goto	u3841
  8789  11EB  29ED               	goto	u3840
  8790  11EC                     u3841:
  8791  11EC  29B4               	goto	l2685
  8792  11ED                     u3840:
  8793  11ED                     l2697:
  8794  11ED  087C               	movf	___lldiv@quotient+3,w
  8795  11EE  00F3               	movwf	?___lldiv+3
  8796  11EF  087B               	movf	___lldiv@quotient+2,w
  8797  11F0  00F2               	movwf	?___lldiv+2
  8798  11F1  087A               	movf	___lldiv@quotient+1,w
  8799  11F2  00F1               	movwf	?___lldiv+1
  8800  11F3  0879               	movf	___lldiv@quotient,w
  8801  11F4  00F0               	movwf	?___lldiv
  8802  11F5                     l443:
  8803  11F5  0008               	return
  8804  11F6                     __end_of___lldiv:
  8805  007E                     btemp	set	126	;btemp
  8806  007E                     wtemp0	set	126
  8807                           
  8808                           	psect	config
  8809                           
  8810                           ;Config register CONFIG1 @ 0x2007
  8811                           ;	Oscillator Selection bits
  8812                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8813                           ;	Watchdog Timer Enable bit
  8814                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8815                           ;	Power-up Timer Enable bit
  8816                           ;	PWRTE = OFF, PWRT disabled
  8817                           ;	RE3/MCLR pin function select bit
  8818                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8819                           ;	Code Protection bit
  8820                           ;	CP = OFF, Program memory code protection is disabled
  8821                           ;	Data Code Protection bit
  8822                           ;	CPD = OFF, Data memory code protection is disabled
  8823                           ;	Brown Out Reset Selection bits
  8824                           ;	BOREN = OFF, BOR disabled
  8825                           ;	Internal External Switchover bit
  8826                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8827                           ;	Fail-Safe Clock Monitor Enabled bit
  8828                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8829                           ;	Low Voltage Programming Enable bit
  8830                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8831                           ;	In-Circuit Debugger Mode bit
  8832                           ;	DEBUG = 0x1, unprogrammed default
  8833  2007                     	org	8199
  8834  2007  20D4               	dw	8404
  8835                           
  8836                           ;Config register CONFIG2 @ 0x2008
  8837                           ;	Brown-out Reset Selection bit
  8838                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8839                           ;	Flash Program Memory Self Write Enable bits
  8840                           ;	WRT = OFF, Write protection off
  8841  2008                     	org	8200
  8842  2008  3FFF               	dw	16383
  8843                           
  8844                           	psect	text6_split_1
  8845  0290                     u4480:
  8846  0290                     l3045:
  8847  0290  1683               	bsf	3,5	;RP0=1, select bank1
  8848  0291  1303               	bcf	3,6	;RP1=0, select bank1
  8849  0292  0835               	movf	(sprintf@fval+2)^(0+128),w
  8850  0293  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  8851  0294  0433               	iorwf	sprintf@fval^(0+128),w
  8852  0295  1903               	skipnz
  8853  0296  2A98               	goto	u4491
  8854  0297  2A99               	goto	u4490
  8855  0298                     u4491:
  8856  0298  2B29               	goto	l3065
  8857  0299                     u4490:
  8858  0299                     l3047:
  8859  0299  0833               	movf	sprintf@fval^(0+128),w
  8860  029A  1283               	bcf	3,5	;RP0=0, select bank0
  8861  029B  1303               	bcf	3,6	;RP1=0, select bank0
  8862  029C  00C1               	movwf	___fttol@f1
  8863  029D  1683               	bsf	3,5	;RP0=1, select bank1
  8864  029E  1303               	bcf	3,6	;RP1=0, select bank1
  8865  029F  0834               	movf	(sprintf@fval+1)^(0+128),w
  8866  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  8867  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  8868  02A2  00C2               	movwf	___fttol@f1+1
  8869  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  8870  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  8871  02A5  0835               	movf	(sprintf@fval+2)^(0+128),w
  8872  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  8873  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  8874  02A8  00C3               	movwf	___fttol@f1+2
  8875  02A9  160A  118A  22DB  120A  118A  	fcall	___fttol
  8876  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  8877  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  8878  02B0  0844               	movf	?___fttol+3,w
  8879  02B1  0443               	iorwf	?___fttol+2,w
  8880  02B2  0442               	iorwf	?___fttol+1,w
  8881  02B3  0441               	iorwf	?___fttol,w
  8882  02B4  1D03               	skipz
  8883  02B5  2AB7               	goto	u4501
  8884  02B6  2AB8               	goto	u4500
  8885  02B7                     u4501:
  8886  02B7  2B29               	goto	l3065
  8887  02B8                     u4500:
  8888  02B8                     l3049:
  8889  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  8890  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  8891  02BA  0831               	movf	(sprintf@eexp+1)^(0+128),w
  8892  02BB  3A80               	xorlw	128
  8893  02BC  00FF               	movwf	btemp+1
  8894  02BD  3080               	movlw	128
  8895  02BE  027F               	subwf	btemp+1,w
  8896  02BF  1D03               	skipz
  8897  02C0  2AC3               	goto	u4515
  8898  02C1  3002               	movlw	2
  8899  02C2  0230               	subwf	sprintf@eexp^(0+128),w
  8900  02C3                     u4515:
  8901  02C3  1C03               	skipc
  8902  02C4  2AC6               	goto	u4511
  8903  02C5  2AC7               	goto	u4510
  8904  02C6                     u4511:
  8905  02C6  2B29               	goto	l3065
  8906  02C7                     u4510:
  8907  02C7                     l3051:
  8908                           
  8909                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1146:      if(tmpval.integ < 4.2
      +                          94967296){
  8910  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  8911  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  8912  02C9  082C               	movf	sprintf@tmpval^(0+128),w
  8913  02CA  00F0               	movwf	___ftge@ff1
  8914  02CB  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  8915  02CC  00F1               	movwf	___ftge@ff1+1
  8916  02CD  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  8917  02CE  00F2               	movwf	___ftge@ff1+2
  8918  02CF  3070               	movlw	112
  8919  02D0  00F3               	movwf	___ftge@ff2
  8920  02D1  3089               	movlw	137
  8921  02D2  00F4               	movwf	___ftge@ff2+1
  8922  02D3  3040               	movlw	64
  8923  02D4  00F5               	movwf	___ftge@ff2+2
  8924  02D5  160A  158A  2730  120A  118A  	fcall	___ftge
  8925  02DA  1803               	btfsc	3,0
  8926  02DB  2ADD               	goto	u4521
  8927  02DC  2ADE               	goto	u4520
  8928  02DD                     u4521:
  8929  02DD  2AE7               	goto	l3055
  8930  02DE                     u4520:
  8931  02DE                     l3053:
  8932                           
  8933                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1147:       eexp -= (sizeof dpow
      +                          ers/sizeof dpowers[0])-1;
  8934  02DE  30F7               	movlw	247
  8935  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  8936  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  8937  02E1  07B0               	addwf	sprintf@eexp^(0+128),f
  8938  02E2  1803               	skipnc
  8939  02E3  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  8940  02E4  30FF               	movlw	255
  8941  02E5  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  8942                           
  8943                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1148:      }else{
  8944  02E6  2AEF               	goto	l3057
  8945  02E7                     l3055:
  8946                           
  8947                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1149:       eexp -= (sizeof dpow
      +                          ers/sizeof dpowers[0])-2;
  8948  02E7  30F8               	movlw	248
  8949  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  8950  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  8951  02EA  07B0               	addwf	sprintf@eexp^(0+128),f
  8952  02EB  1803               	skipnc
  8953  02EC  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  8954  02ED  30FF               	movlw	255
  8955  02EE  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  8956  02EF                     l3057:
  8957                           
  8958                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1151:      tmpval.integ = scale(
      +                          eexp);
  8959  02EF  0830               	movf	sprintf@eexp^(0+128),w
  8960  02F0  120A  158A  2285  120A  118A  	fcall	_scale
  8961  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  8962  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  8963  02F7  0838               	movf	?_scale,w
  8964  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  8965  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  8966  02FA  00AC               	movwf	sprintf@tmpval^(0+128)
  8967  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  8968  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  8969  02FD  0839               	movf	?_scale+1,w
  8970  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  8971  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  8972  0300  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  8973  0301  1283               	bcf	3,5	;RP0=0, select bank0
  8974  0302  1303               	bcf	3,6	;RP1=0, select bank0
  8975  0303  083A               	movf	?_scale+2,w
  8976  0304  1683               	bsf	3,5	;RP0=1, select bank1
  8977  0305  1303               	bcf	3,6	;RP1=0, select bank1
  8978  0306  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  8979  0307                     l3061:	
  8980                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1152:      val = ((sizeof(double
      +                          )== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  8981                           
  8982  0307  0833               	movf	sprintf@fval^(0+128),w
  8983  0308  00F0               	movwf	__tdiv_to_l_@f1
  8984  0309  0834               	movf	(sprintf@fval+1)^(0+128),w
  8985  030A  00F1               	movwf	__tdiv_to_l_@f1+1
  8986  030B  0835               	movf	(sprintf@fval+2)^(0+128),w
  8987  030C  00F2               	movwf	__tdiv_to_l_@f1+2
  8988  030D  082C               	movf	sprintf@tmpval^(0+128),w
  8989  030E  00F3               	movwf	__tdiv_to_l_@f2
  8990  030F  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  8991  0310  00F4               	movwf	__tdiv_to_l_@f2+1
  8992  0311  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  8993  0312  00F5               	movwf	__tdiv_to_l_@f2+2
  8994  0313  160A  118A  24B0  120A  118A  	fcall	__tdiv_to_l_
  8995  0318  0873               	movf	?__tdiv_to_l_+3,w
  8996  0319  1683               	bsf	3,5	;RP0=1, select bank1
  8997  031A  1303               	bcf	3,6	;RP1=0, select bank1
  8998  031B  00A7               	movwf	(sprintf@val+3)^(0+128)
  8999  031C  0872               	movf	?__tdiv_to_l_+2,w
  9000  031D  00A6               	movwf	(sprintf@val+2)^(0+128)
  9001  031E  0871               	movf	?__tdiv_to_l_+1,w
  9002  031F  00A5               	movwf	(sprintf@val+1)^(0+128)
  9003  0320  0870               	movf	?__tdiv_to_l_,w
  9004  0321  00A4               	movwf	sprintf@val^(0+128)
  9005  0322                     l3063:
  9006                           
  9007                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1155:      fval = 0.0;
  9008  0322  3000               	movlw	0
  9009  0323  00B3               	movwf	sprintf@fval^(0+128)
  9010  0324  3000               	movlw	0
  9011  0325  00B4               	movwf	(sprintf@fval+1)^(0+128)
  9012  0326  3000               	movlw	0
  9013  0327  00B5               	movwf	(sprintf@fval+2)^(0+128)
  9014                           
  9015                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1156:     } else {
  9016  0328  2B98               	goto	l3069
  9017  0329                     l3065:
  9018                           
  9019                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1157:      val = (unsigned long)
      +                          fval;
  9020  0329  1683               	bsf	3,5	;RP0=1, select bank1
  9021  032A  1303               	bcf	3,6	;RP1=0, select bank1
  9022  032B  0833               	movf	sprintf@fval^(0+128),w
  9023  032C  1283               	bcf	3,5	;RP0=0, select bank0
  9024  032D  1303               	bcf	3,6	;RP1=0, select bank0
  9025  032E  00C1               	movwf	___fttol@f1
  9026  032F  1683               	bsf	3,5	;RP0=1, select bank1
  9027  0330  1303               	bcf	3,6	;RP1=0, select bank1
  9028  0331  0834               	movf	(sprintf@fval+1)^(0+128),w
  9029  0332  1283               	bcf	3,5	;RP0=0, select bank0
  9030  0333  1303               	bcf	3,6	;RP1=0, select bank0
  9031  0334  00C2               	movwf	___fttol@f1+1
  9032  0335  1683               	bsf	3,5	;RP0=1, select bank1
  9033  0336  1303               	bcf	3,6	;RP1=0, select bank1
  9034  0337  0835               	movf	(sprintf@fval+2)^(0+128),w
  9035  0338  1283               	bcf	3,5	;RP0=0, select bank0
  9036  0339  1303               	bcf	3,6	;RP1=0, select bank0
  9037  033A  00C3               	movwf	___fttol@f1+2
  9038  033B  160A  118A  22DB  120A  118A  	fcall	___fttol
  9039  0340  1283               	bcf	3,5	;RP0=0, select bank0
  9040  0341  1303               	bcf	3,6	;RP1=0, select bank0
  9041  0342  0844               	movf	?___fttol+3,w
  9042  0343  1683               	bsf	3,5	;RP0=1, select bank1
  9043  0344  1303               	bcf	3,6	;RP1=0, select bank1
  9044  0345  00A7               	movwf	(sprintf@val+3)^(0+128)
  9045  0346  1283               	bcf	3,5	;RP0=0, select bank0
  9046  0347  1303               	bcf	3,6	;RP1=0, select bank0
  9047  0348  0843               	movf	?___fttol+2,w
  9048  0349  1683               	bsf	3,5	;RP0=1, select bank1
  9049  034A  1303               	bcf	3,6	;RP1=0, select bank1
  9050  034B  00A6               	movwf	(sprintf@val+2)^(0+128)
  9051  034C  1283               	bcf	3,5	;RP0=0, select bank0
  9052  034D  1303               	bcf	3,6	;RP1=0, select bank0
  9053  034E  0842               	movf	?___fttol+1,w
  9054  034F  1683               	bsf	3,5	;RP0=1, select bank1
  9055  0350  1303               	bcf	3,6	;RP1=0, select bank1
  9056  0351  00A5               	movwf	(sprintf@val+1)^(0+128)
  9057  0352  1283               	bcf	3,5	;RP0=0, select bank0
  9058  0353  1303               	bcf	3,6	;RP1=0, select bank0
  9059  0354  0841               	movf	?___fttol,w
  9060  0355  1683               	bsf	3,5	;RP0=1, select bank1
  9061  0356  1303               	bcf	3,6	;RP1=0, select bank1
  9062  0357  00A4               	movwf	sprintf@val^(0+128)
  9063                           
  9064                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1158:      fval -= (double)val;
  9065  0358  0827               	movf	(sprintf@val+3)^(0+128),w
  9066  0359  00FD               	movwf	___lltoft@c+3
  9067  035A  0826               	movf	(sprintf@val+2)^(0+128),w
  9068  035B  00FC               	movwf	___lltoft@c+2
  9069  035C  0825               	movf	(sprintf@val+1)^(0+128),w
  9070  035D  00FB               	movwf	___lltoft@c+1
  9071  035E  0824               	movf	sprintf@val^(0+128),w
  9072  035F  00FA               	movwf	___lltoft@c
  9073  0360  160A  158A  26C7  120A  118A  	fcall	___lltoft
  9074  0365  087A               	movf	?___lltoft,w
  9075  0366  1283               	bcf	3,5	;RP0=0, select bank0
  9076  0367  1303               	bcf	3,6	;RP1=0, select bank0
  9077  0368  00D5               	movwf	___ftsub@f2
  9078  0369  087B               	movf	?___lltoft+1,w
  9079  036A  00D6               	movwf	___ftsub@f2+1
  9080  036B  087C               	movf	?___lltoft+2,w
  9081  036C  00D7               	movwf	___ftsub@f2+2
  9082  036D  1683               	bsf	3,5	;RP0=1, select bank1
  9083  036E  1303               	bcf	3,6	;RP1=0, select bank1
  9084  036F  0833               	movf	sprintf@fval^(0+128),w
  9085  0370  1283               	bcf	3,5	;RP0=0, select bank0
  9086  0371  1303               	bcf	3,6	;RP1=0, select bank0
  9087  0372  00D8               	movwf	___ftsub@f1
  9088  0373  1683               	bsf	3,5	;RP0=1, select bank1
  9089  0374  1303               	bcf	3,6	;RP1=0, select bank1
  9090  0375  0834               	movf	(sprintf@fval+1)^(0+128),w
  9091  0376  1283               	bcf	3,5	;RP0=0, select bank0
  9092  0377  1303               	bcf	3,6	;RP1=0, select bank0
  9093  0378  00D9               	movwf	___ftsub@f1+1
  9094  0379  1683               	bsf	3,5	;RP0=1, select bank1
  9095  037A  1303               	bcf	3,6	;RP1=0, select bank1
  9096  037B  0835               	movf	(sprintf@fval+2)^(0+128),w
  9097  037C  1283               	bcf	3,5	;RP0=0, select bank0
  9098  037D  1303               	bcf	3,6	;RP1=0, select bank0
  9099  037E  00DA               	movwf	___ftsub@f1+2
  9100  037F  160A  158A  262A  120A  118A  	fcall	___ftsub
  9101  0384  1283               	bcf	3,5	;RP0=0, select bank0
  9102  0385  1303               	bcf	3,6	;RP1=0, select bank0
  9103  0386  0855               	movf	?___ftsub,w
  9104  0387  1683               	bsf	3,5	;RP0=1, select bank1
  9105  0388  1303               	bcf	3,6	;RP1=0, select bank1
  9106  0389  00B3               	movwf	sprintf@fval^(0+128)
  9107  038A  1283               	bcf	3,5	;RP0=0, select bank0
  9108  038B  1303               	bcf	3,6	;RP1=0, select bank0
  9109  038C  0856               	movf	?___ftsub+1,w
  9110  038D  1683               	bsf	3,5	;RP0=1, select bank1
  9111  038E  1303               	bcf	3,6	;RP1=0, select bank1
  9112  038F  00B4               	movwf	(sprintf@fval+1)^(0+128)
  9113  0390  1283               	bcf	3,5	;RP0=0, select bank0
  9114  0391  1303               	bcf	3,6	;RP1=0, select bank0
  9115  0392  0857               	movf	?___ftsub+2,w
  9116  0393  1683               	bsf	3,5	;RP0=1, select bank1
  9117  0394  1303               	bcf	3,6	;RP1=0, select bank1
  9118  0395  00B5               	movwf	(sprintf@fval+2)^(0+128)
  9119  0396                     l3067:
  9120                           
  9121                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1159:      eexp = 0;
  9122  0396  01B0               	clrf	sprintf@eexp^(0+128)
  9123  0397  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  9124  0398                     l3069:
  9125                           
  9126                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1162:     for(c = 1 ; c != (size
      +                          of dpowers/sizeof dpowers[0]) ; c++)
  9127  0398  01B8               	clrf	sprintf@c^(0+128)
  9128  0399  0AB8               	incf	sprintf@c^(0+128),f
  9129  039A                     l3075:
  9130                           
  9131                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1163:      if(val < dpowers[c])
  9132  039A  0838               	movf	sprintf@c^(0+128),w
  9133  039B  1283               	bcf	3,5	;RP0=0, select bank0
  9134  039C  1303               	bcf	3,6	;RP1=0, select bank0
  9135  039D  00DF               	movwf	??_sprintf
  9136  039E  3001               	movlw	1
  9137  039F                     u4535:
  9138  039F  1003               	clrc
  9139  03A0  0DDF               	rlf	??_sprintf,f
  9140  03A1  3EFF               	addlw	-1
  9141  03A2  1D03               	skipz
  9142  03A3  2B9F               	goto	u4535
  9143  03A4  1003               	clrc
  9144  03A5  0D5F               	rlf	??_sprintf,w
  9145  03A6  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9146  03A7  0084               	movwf	4
  9147  03A8  160A  118A  2000  120A  118A  	fcall	stringdir
  9148  03AD  00E0               	movwf	??_sprintf+1
  9149  03AE  160A  118A  2000  120A  118A  	fcall	stringdir
  9150  03B3  00E1               	movwf	??_sprintf+2
  9151  03B4  160A  118A  2000  120A  118A  	fcall	stringdir
  9152  03B9  00E2               	movwf	??_sprintf+3
  9153  03BA  160A  118A  2000  120A  118A  	fcall	stringdir
  9154  03BF  00E3               	movwf	??_sprintf+4
  9155  03C0  0863               	movf	??_sprintf+4,w
  9156  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  9157  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  9158  03C3  0227               	subwf	(sprintf@val+3)^(0+128),w
  9159  03C4  1D03               	skipz
  9160  03C5  2BDC               	goto	u4545
  9161  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  9162  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  9163  03C8  0862               	movf	??_sprintf+3,w
  9164  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  9165  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  9166  03CB  0226               	subwf	(sprintf@val+2)^(0+128),w
  9167  03CC  1D03               	skipz
  9168  03CD  2BDC               	goto	u4545
  9169  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  9170  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  9171  03D0  0861               	movf	??_sprintf+2,w
  9172  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  9173  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  9174  03D3  0225               	subwf	(sprintf@val+1)^(0+128),w
  9175  03D4  1D03               	skipz
  9176  03D5  2BDC               	goto	u4545
  9177  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  9178  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  9179  03D8  0860               	movf	??_sprintf+1,w
  9180  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  9181  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  9182  03DB  0224               	subwf	sprintf@val^(0+128),w
  9183  03DC                     u4545:
  9184  03DC  1803               	skipnc
  9185  03DD  2BDF               	goto	u4541
  9186  03DE  2BE0               	goto	u4540
  9187  03DF                     u4541:
  9188  03DF  2BE1               	goto	l3079
  9189  03E0                     u4540:
  9190  03E0  2BEF               	goto	l3081
  9191  03E1                     l3079:
  9192  03E1  3001               	movlw	1
  9193  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  9194  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  9195  03E4  00DF               	movwf	??_sprintf
  9196  03E5  085F               	movf	??_sprintf,w
  9197  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  9198  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  9199  03E8  07B8               	addwf	sprintf@c^(0+128),f
  9200  03E9  300A               	movlw	10
  9201  03EA  0638               	xorwf	sprintf@c^(0+128),w
  9202  03EB  1D03               	btfss	3,2
  9203  03EC  2BEE               	goto	u4551
  9204  03ED  2BEF               	goto	u4550
  9205  03EE                     u4551:
  9206  03EE  2B9A               	goto	l3075
  9207  03EF                     u4550:
  9208  03EF                     l3081:
  9209                           
  9210                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1168:     width -= prec + c + ee
      +                          xp;
  9211  03EF  0838               	movf	sprintf@c^(0+128),w
  9212  03F0  0736               	addwf	sprintf@prec^(0+128),w
  9213  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  9214  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  9215  03F3  00DF               	movwf	??_sprintf
  9216  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  9217  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  9218  03F6  0837               	movf	(sprintf@prec+1)^(0+128),w
  9219  03F7  1803               	skipnc
  9220  03F8  0A37               	incf	(sprintf@prec+1)^(0+128),w
  9221  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  9222  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  9223  03FB  00E0               	movwf	??_sprintf+1
  9224  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  9225  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  9226  03FE  0830               	movf	sprintf@eexp^(0+128),w
  9227  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  9228  0400  1303               	bcf	3,6	;RP1=0, select bank0
  9229  0401  075F               	addwf	??_sprintf,w
  9230  0402  00E1               	movwf	??_sprintf+2
  9231  0403  1683               	bsf	3,5	;RP0=1, select bank1
  9232  0404  1303               	bcf	3,6	;RP1=0, select bank1
  9233  0405  0831               	movf	(sprintf@eexp+1)^(0+128),w
  9234  0406  1803               	skipnc
  9235  0407  0A31               	incf	(sprintf@eexp+1)^(0+128),w
  9236  0408  1283               	bcf	3,5	;RP0=0, select bank0
  9237  0409  1303               	bcf	3,6	;RP1=0, select bank0
  9238  040A  0760               	addwf	??_sprintf+1,w
  9239  040B  00E2               	movwf	??_sprintf+3
  9240  040C  0861               	movf	??_sprintf+2,w
  9241  040D  1683               	bsf	3,5	;RP0=1, select bank1
  9242  040E  1303               	bcf	3,6	;RP1=0, select bank1
  9243  040F  02AA               	subwf	sprintf@width^(0+128),f
  9244  0410  1283               	bcf	3,5	;RP0=0, select bank0
  9245  0411  1303               	bcf	3,6	;RP1=0, select bank0
  9246  0412  0862               	movf	??_sprintf+3,w
  9247  0413  1683               	bsf	3,5	;RP0=1, select bank1
  9248  0414  1303               	bcf	3,6	;RP1=0, select bank1
  9249  0415  1C03               	skipc
  9250  0416  03AB               	decf	(sprintf@width+1)^(0+128),f
  9251  0417  02AB               	subwf	(sprintf@width+1)^(0+128),f
  9252                           
  9253                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1169:     if(
  9254  0418  0836               	movf	sprintf@prec^(0+128),w
  9255  0419  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9256  041A  1903               	btfsc	3,2
  9257  041B  2C1D               	goto	u4561
  9258  041C  2C1E               	goto	u4560
  9259  041D                     u4561:
  9260  041D  2C24               	goto	l3085
  9261  041E                     u4560:
  9262  041E                     l3083:
  9263                           
  9264                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1174:      width--;
  9265  041E  30FF               	movlw	255
  9266  041F  07AA               	addwf	sprintf@width^(0+128),f
  9267  0420  1803               	skipnc
  9268  0421  0AAB               	incf	(sprintf@width+1)^(0+128),f
  9269  0422  30FF               	movlw	255
  9270  0423  07AB               	addwf	(sprintf@width+1)^(0+128),f
  9271  0424                     l3085:
  9272                           
  9273                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1175:     if(flag & 0x03)
  9274  0424  3003               	movlw	3
  9275  0425  0528               	andwf	sprintf@flag^(0+128),w
  9276  0426  1283               	bcf	3,5	;RP0=0, select bank0
  9277  0427  1303               	bcf	3,6	;RP1=0, select bank0
  9278  0428  00DF               	movwf	??_sprintf
  9279  0429  3000               	movlw	0
  9280  042A  1683               	bsf	3,5	;RP0=1, select bank1
  9281  042B  1303               	bcf	3,6	;RP1=0, select bank1
  9282  042C  0529               	andwf	(sprintf@flag+1)^(0+128),w
  9283  042D  1283               	bcf	3,5	;RP0=0, select bank0
  9284  042E  1303               	bcf	3,6	;RP1=0, select bank0
  9285  042F  00E0               	movwf	??_sprintf+1
  9286  0430  085F               	movf	??_sprintf,w
  9287  0431  0460               	iorwf	??_sprintf+1,w
  9288  0432  1903               	btfsc	3,2
  9289  0433  2C35               	goto	u4571
  9290  0434  2C36               	goto	u4570
  9291  0435                     u4571:
  9292  0435  2C53               	goto	l3095
  9293  0436                     u4570:
  9294  0436                     l3087:
  9295                           
  9296                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1176:      width--;
  9297  0436  30FF               	movlw	255
  9298  0437  1683               	bsf	3,5	;RP0=1, select bank1
  9299  0438  1303               	bcf	3,6	;RP1=0, select bank1
  9300  0439  07AA               	addwf	sprintf@width^(0+128),f
  9301  043A  1803               	skipnc
  9302  043B  0AAB               	incf	(sprintf@width+1)^(0+128),f
  9303  043C  30FF               	movlw	255
  9304  043D  07AB               	addwf	(sprintf@width+1)^(0+128),f
  9305  043E  2C53               	goto	l3095
  9306  043F                     l3089:
  9307                           
  9308                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1207:       ((*sp++ = (' ')));
  9309  043F  3020               	movlw	32
  9310  0440  1283               	bcf	3,5	;RP0=0, select bank0
  9311  0441  1303               	bcf	3,6	;RP1=0, select bank0
  9312  0442  00DF               	movwf	??_sprintf
  9313  0443  1683               	bsf	3,5	;RP0=1, select bank1
  9314  0444  1303               	bcf	3,6	;RP1=0, select bank1
  9315  0445  0832               	movf	sprintf@sp^(0+128),w
  9316  0446  0084               	movwf	4
  9317  0447  1283               	bcf	3,5	;RP0=0, select bank0
  9318  0448  1303               	bcf	3,6	;RP1=0, select bank0
  9319  0449  085F               	movf	??_sprintf,w
  9320  044A  1383               	bcf	3,7	;select IRP bank0
  9321  044B  0080               	movwf	0
  9322  044C                     l3091:
  9323  044C  3001               	movlw	1
  9324  044D  00DF               	movwf	??_sprintf
  9325  044E  085F               	movf	??_sprintf,w
  9326  044F  1683               	bsf	3,5	;RP0=1, select bank1
  9327  0450  1303               	bcf	3,6	;RP1=0, select bank1
  9328  0451  07B2               	addwf	sprintf@sp^(0+128),f
  9329  0452  2C36               	goto	l3087
  9330  0453                     l3095:
  9331                           
  9332                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1206:      while(width > 0) {
  9333  0453  1683               	bsf	3,5	;RP0=1, select bank1
  9334  0454  1303               	bcf	3,6	;RP1=0, select bank1
  9335  0455  082B               	movf	(sprintf@width+1)^(0+128),w
  9336  0456  3A80               	xorlw	128
  9337  0457  00FF               	movwf	btemp+1
  9338  0458  3080               	movlw	128
  9339  0459  027F               	subwf	btemp+1,w
  9340  045A  1D03               	skipz
  9341  045B  2C5E               	goto	u4585
  9342  045C  3001               	movlw	1
  9343  045D  022A               	subwf	sprintf@width^(0+128),w
  9344  045E                     u4585:
  9345  045E  1803               	skipnc
  9346  045F  2C61               	goto	u4581
  9347  0460  2C62               	goto	u4580
  9348  0461                     u4581:
  9349  0461  2C3F               	goto	l3089
  9350  0462                     u4580:
  9351  0462                     l3097:
  9352                           
  9353                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x03)
  9354  0462  3003               	movlw	3
  9355  0463  1683               	bsf	3,5	;RP0=1, select bank1
  9356  0464  1303               	bcf	3,6	;RP1=0, select bank1
  9357  0465  0528               	andwf	sprintf@flag^(0+128),w
  9358  0466  1283               	bcf	3,5	;RP0=0, select bank0
  9359  0467  1303               	bcf	3,6	;RP1=0, select bank0
  9360  0468  00DF               	movwf	??_sprintf
  9361  0469  3000               	movlw	0
  9362  046A  1683               	bsf	3,5	;RP0=1, select bank1
  9363  046B  1303               	bcf	3,6	;RP1=0, select bank1
  9364  046C  0529               	andwf	(sprintf@flag+1)^(0+128),w
  9365  046D  1283               	bcf	3,5	;RP0=0, select bank0
  9366  046E  1303               	bcf	3,6	;RP1=0, select bank0
  9367  046F  00E0               	movwf	??_sprintf+1
  9368  0470  085F               	movf	??_sprintf,w
  9369  0471  0460               	iorwf	??_sprintf+1,w
  9370  0472  1903               	btfsc	3,2
  9371  0473  2C75               	goto	u4591
  9372  0474  2C76               	goto	u4590
  9373  0475                     u4591:
  9374  0475  2CFA               	goto	l373
  9375  0476                     u4590:
  9376  0476                     l3099:
  9377                           
  9378                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1216:      ((*sp++ = ('-')));
  9379  0476  302D               	movlw	45
  9380  0477  00DF               	movwf	??_sprintf
  9381  0478  1683               	bsf	3,5	;RP0=1, select bank1
  9382  0479  1303               	bcf	3,6	;RP1=0, select bank1
  9383  047A  0832               	movf	sprintf@sp^(0+128),w
  9384  047B  0084               	movwf	4
  9385  047C  1283               	bcf	3,5	;RP0=0, select bank0
  9386  047D  1303               	bcf	3,6	;RP1=0, select bank0
  9387  047E  085F               	movf	??_sprintf,w
  9388  047F  1383               	bcf	3,7	;select IRP bank0
  9389  0480  0080               	movwf	0
  9390  0481                     l3101:
  9391  0481  3001               	movlw	1
  9392  0482  00DF               	movwf	??_sprintf
  9393  0483  085F               	movf	??_sprintf,w
  9394  0484  1683               	bsf	3,5	;RP0=1, select bank1
  9395  0485  1303               	bcf	3,6	;RP1=0, select bank1
  9396  0486  07B2               	addwf	sprintf@sp^(0+128),f
  9397  0487  2CFA               	goto	l373
  9398  0488                     l3103:
  9399                           
  9400                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1226:     {;D:\MPLAB XC8 compile
      +                          r\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = val/dpowers[c];
  9401  0488  0838               	movf	sprintf@c^(0+128),w
  9402  0489  1283               	bcf	3,5	;RP0=0, select bank0
  9403  048A  1303               	bcf	3,6	;RP1=0, select bank0
  9404  048B  00DF               	movwf	??_sprintf
  9405  048C  3001               	movlw	1
  9406  048D                     u4605:
  9407  048D  1003               	clrc
  9408  048E  0DDF               	rlf	??_sprintf,f
  9409  048F  3EFF               	addlw	-1
  9410  0490  1D03               	skipz
  9411  0491  2C8D               	goto	u4605
  9412  0492  1003               	clrc
  9413  0493  0D5F               	rlf	??_sprintf,w
  9414  0494  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9415  0495  0084               	movwf	4
  9416  0496  160A  118A  2000  120A  118A  	fcall	stringdir
  9417  049B  00F0               	movwf	___lldiv@divisor
  9418  049C  160A  118A  2000  120A  118A  	fcall	stringdir
  9419  04A1  00F1               	movwf	___lldiv@divisor+1
  9420  04A2  160A  118A  2000  120A  118A  	fcall	stringdir
  9421  04A7  00F2               	movwf	___lldiv@divisor+2
  9422  04A8  160A  118A  2000  120A  118A  	fcall	stringdir
  9423  04AD  00F3               	movwf	___lldiv@divisor+3
  9424  04AE  1683               	bsf	3,5	;RP0=1, select bank1
  9425  04AF  1303               	bcf	3,6	;RP1=0, select bank1
  9426  04B0  0827               	movf	(sprintf@val+3)^(0+128),w
  9427  04B1  00F7               	movwf	___lldiv@dividend+3
  9428  04B2  0826               	movf	(sprintf@val+2)^(0+128),w
  9429  04B3  00F6               	movwf	___lldiv@dividend+2
  9430  04B4  0825               	movf	(sprintf@val+1)^(0+128),w
  9431  04B5  00F5               	movwf	___lldiv@dividend+1
  9432  04B6  0824               	movf	sprintf@val^(0+128),w
  9433  04B7  00F4               	movwf	___lldiv@dividend
  9434  04B8  160A  118A  2190  120A  118A  	fcall	___lldiv
  9435  04BD  0873               	movf	?___lldiv+3,w
  9436  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  9437  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  9438  04C0  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  9439  04C1  0872               	movf	?___lldiv+2,w
  9440  04C2  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  9441  04C3  0871               	movf	?___lldiv+1,w
  9442  04C4  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  9443  04C5  0870               	movf	?___lldiv,w
  9444  04C6  00AC               	movwf	sprintf@tmpval^(0+128)
  9445  04C7                     l3105:
  9446                           
  9447                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1228:      tmpval.vd %= 10;
  9448  04C7  3000               	movlw	0
  9449  04C8  00F3               	movwf	___llmod@divisor+3
  9450  04C9  3000               	movlw	0
  9451  04CA  00F2               	movwf	___llmod@divisor+2
  9452  04CB  3000               	movlw	0
  9453  04CC  00F1               	movwf	___llmod@divisor+1
  9454  04CD  300A               	movlw	10
  9455  04CE  00F0               	movwf	___llmod@divisor
  9456  04CF  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  9457  04D0  00F7               	movwf	___llmod@dividend+3
  9458  04D1  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  9459  04D2  00F6               	movwf	___llmod@dividend+2
  9460  04D3  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  9461  04D4  00F5               	movwf	___llmod@dividend+1
  9462  04D5  082C               	movf	sprintf@tmpval^(0+128),w
  9463  04D6  00F4               	movwf	___llmod@dividend
  9464  04D7  160A  158A  27AC  120A  118A  	fcall	___llmod
  9465  04DC  0873               	movf	?___llmod+3,w
  9466  04DD  1683               	bsf	3,5	;RP0=1, select bank1
  9467  04DE  1303               	bcf	3,6	;RP1=0, select bank1
  9468  04DF  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  9469  04E0  0872               	movf	?___llmod+2,w
  9470  04E1  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  9471  04E2  0871               	movf	?___llmod+1,w
  9472  04E3  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  9473  04E4  0870               	movf	?___llmod,w
  9474  04E5  00AC               	movwf	sprintf@tmpval^(0+128)
  9475  04E6                     l3107:
  9476                           
  9477                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1229:      ((*sp++ = ('0' + tmpv
      +                          al.vd)));
  9478  04E6  082C               	movf	sprintf@tmpval^(0+128),w
  9479  04E7  3E30               	addlw	48
  9480  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  9481  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  9482  04EA  00DF               	movwf	??_sprintf
  9483  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  9484  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  9485  04ED  0832               	movf	sprintf@sp^(0+128),w
  9486  04EE  0084               	movwf	4
  9487  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  9488  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  9489  04F1  085F               	movf	??_sprintf,w
  9490  04F2  1383               	bcf	3,7	;select IRP bank0
  9491  04F3  0080               	movwf	0
  9492  04F4  3001               	movlw	1
  9493  04F5  00DF               	movwf	??_sprintf
  9494  04F6  085F               	movf	??_sprintf,w
  9495  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  9496  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  9497  04F9  07B2               	addwf	sprintf@sp^(0+128),f
  9498  04FA                     l373:	
  9499                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1230:     };D:\MPLAB XC8 compile
      +                          r\pic\sources\c90\common\doprnt.c: 1232:    }
  9500                           
  9501                           
  9502                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1222:    while(c--) {
  9503  04FA  3001               	movlw	1
  9504  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  9505  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  9506  04FD  02B8               	subwf	sprintf@c^(0+128),f
  9507  04FE  0A38               	incf	sprintf@c^(0+128),w
  9508  04FF  1D03               	btfss	3,2
  9509  0500  2D02               	goto	u4611
  9510  0501  2D03               	goto	u4610
  9511  0502                     u4611:
  9512  0502  2C88               	goto	l3103
  9513  0503                     u4610:
  9514  0503  2D1D               	goto	l3115
  9515  0504                     l3109:
  9516                           
  9517                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++ = ('0')));
  9518  0504  3030               	movlw	48
  9519  0505  1283               	bcf	3,5	;RP0=0, select bank0
  9520  0506  1303               	bcf	3,6	;RP1=0, select bank0
  9521  0507  00DF               	movwf	??_sprintf
  9522  0508  1683               	bsf	3,5	;RP0=1, select bank1
  9523  0509  1303               	bcf	3,6	;RP1=0, select bank1
  9524  050A  0832               	movf	sprintf@sp^(0+128),w
  9525  050B  0084               	movwf	4
  9526  050C  1283               	bcf	3,5	;RP0=0, select bank0
  9527  050D  1303               	bcf	3,6	;RP1=0, select bank0
  9528  050E  085F               	movf	??_sprintf,w
  9529  050F  1383               	bcf	3,7	;select IRP bank0
  9530  0510  0080               	movwf	0
  9531  0511                     l3111:
  9532  0511  3001               	movlw	1
  9533  0512  00DF               	movwf	??_sprintf
  9534  0513  085F               	movf	??_sprintf,w
  9535  0514  1683               	bsf	3,5	;RP0=1, select bank1
  9536  0515  1303               	bcf	3,6	;RP1=0, select bank1
  9537  0516  07B2               	addwf	sprintf@sp^(0+128),f
  9538  0517                     l3113:
  9539                           
  9540                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9541  0517  30FF               	movlw	255
  9542  0518  07B0               	addwf	sprintf@eexp^(0+128),f
  9543  0519  1803               	skipnc
  9544  051A  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  9545  051B  30FF               	movlw	255
  9546  051C  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  9547  051D                     l3115:
  9548                           
  9549                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1233:    while(eexp > 0) {
  9550  051D  0831               	movf	(sprintf@eexp+1)^(0+128),w
  9551  051E  3A80               	xorlw	128
  9552  051F  00FF               	movwf	btemp+1
  9553  0520  3080               	movlw	128
  9554  0521  027F               	subwf	btemp+1,w
  9555  0522  1D03               	skipz
  9556  0523  2D26               	goto	u4625
  9557  0524  3001               	movlw	1
  9558  0525  0230               	subwf	sprintf@eexp^(0+128),w
  9559  0526                     u4625:
  9560  0526  1803               	skipnc
  9561  0527  2D29               	goto	u4621
  9562  0528  2D2A               	goto	u4620
  9563  0529                     u4621:
  9564  0529  2D04               	goto	l3109
  9565  052A                     u4620:
  9566  052A                     l3117:
  9567                           
  9568                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1237:    if(prec > (int)((sizeof
      +                           dpowers/sizeof dpowers[0])-2))
  9569  052A  1683               	bsf	3,5	;RP0=1, select bank1
  9570  052B  1303               	bcf	3,6	;RP1=0, select bank1
  9571  052C  0837               	movf	(sprintf@prec+1)^(0+128),w
  9572  052D  3A80               	xorlw	128
  9573  052E  00FF               	movwf	btemp+1
  9574  052F  3080               	movlw	128
  9575  0530  027F               	subwf	btemp+1,w
  9576  0531  1D03               	skipz
  9577  0532  2D35               	goto	u4635
  9578  0533  3009               	movlw	9
  9579  0534  0236               	subwf	sprintf@prec^(0+128),w
  9580  0535                     u4635:
  9581  0535  1C03               	skipc
  9582  0536  2D38               	goto	u4631
  9583  0537  2D39               	goto	u4630
  9584  0538                     u4631:
  9585  0538  2D42               	goto	l3121
  9586  0539                     u4630:
  9587  0539                     l3119:
  9588                           
  9589                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1238:     c = (sizeof dpowers/si
      +                          zeof dpowers[0])-2;
  9590  0539  3008               	movlw	8
  9591  053A  1283               	bcf	3,5	;RP0=0, select bank0
  9592  053B  1303               	bcf	3,6	;RP1=0, select bank0
  9593  053C  00DF               	movwf	??_sprintf
  9594  053D  085F               	movf	??_sprintf,w
  9595  053E  1683               	bsf	3,5	;RP0=1, select bank1
  9596  053F  1303               	bcf	3,6	;RP1=0, select bank1
  9597  0540  00B8               	movwf	sprintf@c^(0+128)
  9598  0541  2D4C               	goto	l380
  9599  0542                     l3121:
  9600                           
  9601                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1240:     c = (char)prec;
  9602  0542  1683               	bsf	3,5	;RP0=1, select bank1
  9603  0543  1303               	bcf	3,6	;RP1=0, select bank1
  9604  0544  0836               	movf	sprintf@prec^(0+128),w
  9605  0545  1283               	bcf	3,5	;RP0=0, select bank0
  9606  0546  1303               	bcf	3,6	;RP1=0, select bank0
  9607  0547  00DF               	movwf	??_sprintf
  9608  0548  085F               	movf	??_sprintf,w
  9609  0549  1683               	bsf	3,5	;RP0=1, select bank1
  9610  054A  1303               	bcf	3,6	;RP1=0, select bank1
  9611  054B  00B8               	movwf	sprintf@c^(0+128)
  9612  054C                     l380:
  9613                           
  9614                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1241:    prec -= (int)c;
  9615  054C  0838               	movf	sprintf@c^(0+128),w
  9616  054D  1283               	bcf	3,5	;RP0=0, select bank0
  9617  054E  1303               	bcf	3,6	;RP1=0, select bank0
  9618  054F  00DF               	movwf	??_sprintf
  9619  0550  01E0               	clrf	??_sprintf+1
  9620  0551  085F               	movf	??_sprintf,w
  9621  0552  1683               	bsf	3,5	;RP0=1, select bank1
  9622  0553  1303               	bcf	3,6	;RP1=0, select bank1
  9623  0554  02B6               	subwf	sprintf@prec^(0+128),f
  9624  0555  1283               	bcf	3,5	;RP0=0, select bank0
  9625  0556  1303               	bcf	3,6	;RP1=0, select bank0
  9626  0557  0860               	movf	??_sprintf+1,w
  9627  0558  1683               	bsf	3,5	;RP0=1, select bank1
  9628  0559  1303               	bcf	3,6	;RP1=0, select bank1
  9629  055A  1C03               	skipc
  9630  055B  03B7               	decf	(sprintf@prec+1)^(0+128),f
  9631  055C  02B7               	subwf	(sprintf@prec+1)^(0+128),f
  9632  055D                     l3123:
  9633                           
  9634                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9635  055D  0838               	movf	sprintf@c^(0+128),w
  9636  055E  1903               	btfsc	3,2
  9637  055F  2D61               	goto	u4641
  9638  0560  2D62               	goto	u4640
  9639  0561                     u4641:
  9640  0561  2D75               	goto	l3129
  9641  0562                     u4640:
  9642  0562                     l3125:
  9643                           
  9644                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++ = ('.')));
  9645  0562  302E               	movlw	46
  9646  0563  1283               	bcf	3,5	;RP0=0, select bank0
  9647  0564  1303               	bcf	3,6	;RP1=0, select bank0
  9648  0565  00DF               	movwf	??_sprintf
  9649  0566  1683               	bsf	3,5	;RP0=1, select bank1
  9650  0567  1303               	bcf	3,6	;RP1=0, select bank1
  9651  0568  0832               	movf	sprintf@sp^(0+128),w
  9652  0569  0084               	movwf	4
  9653  056A  1283               	bcf	3,5	;RP0=0, select bank0
  9654  056B  1303               	bcf	3,6	;RP1=0, select bank0
  9655  056C  085F               	movf	??_sprintf,w
  9656  056D  1383               	bcf	3,7	;select IRP bank0
  9657  056E  0080               	movwf	0
  9658  056F                     l3127:
  9659  056F  3001               	movlw	1
  9660  0570  00DF               	movwf	??_sprintf
  9661  0571  085F               	movf	??_sprintf,w
  9662  0572  1683               	bsf	3,5	;RP0=1, select bank1
  9663  0573  1303               	bcf	3,6	;RP1=0, select bank1
  9664  0574  07B2               	addwf	sprintf@sp^(0+128),f
  9665  0575                     l3129:
  9666                           
  9667                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(f
      +                          val * scale((signed char)c));
  9668  0575  0838               	movf	sprintf@c^(0+128),w
  9669  0576  120A  158A  2285  120A  118A  	fcall	_scale
  9670  057B  1283               	bcf	3,5	;RP0=0, select bank0
  9671  057C  1303               	bcf	3,6	;RP1=0, select bank0
  9672  057D  0838               	movf	?_scale,w
  9673  057E  1683               	bsf	3,5	;RP0=1, select bank1
  9674  057F  1303               	bcf	3,6	;RP1=0, select bank1
  9675  0580  00A0               	movwf	_sprintf$1070^(0+128)
  9676  0581  1283               	bcf	3,5	;RP0=0, select bank0
  9677  0582  1303               	bcf	3,6	;RP1=0, select bank0
  9678  0583  0839               	movf	?_scale+1,w
  9679  0584  1683               	bsf	3,5	;RP0=1, select bank1
  9680  0585  1303               	bcf	3,6	;RP1=0, select bank1
  9681  0586  00A1               	movwf	(_sprintf$1070+1)^(0+128)
  9682  0587  1283               	bcf	3,5	;RP0=0, select bank0
  9683  0588  1303               	bcf	3,6	;RP1=0, select bank0
  9684  0589  083A               	movf	?_scale+2,w
  9685  058A  1683               	bsf	3,5	;RP0=1, select bank1
  9686  058B  1303               	bcf	3,6	;RP1=0, select bank1
  9687  058C  00A2               	movwf	(_sprintf$1070+2)^(0+128)
  9688  058D                     l3131:
  9689                           
  9690                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(f
      +                          val * scale((signed char)c));
  9691  058D  0820               	movf	_sprintf$1070^(0+128),w
  9692  058E  1283               	bcf	3,5	;RP0=0, select bank0
  9693  058F  1303               	bcf	3,6	;RP1=0, select bank0
  9694  0590  00AB               	movwf	___ftmul@f2
  9695  0591  1683               	bsf	3,5	;RP0=1, select bank1
  9696  0592  1303               	bcf	3,6	;RP1=0, select bank1
  9697  0593  0821               	movf	(_sprintf$1070+1)^(0+128),w
  9698  0594  1283               	bcf	3,5	;RP0=0, select bank0
  9699  0595  1303               	bcf	3,6	;RP1=0, select bank0
  9700  0596  00AC               	movwf	___ftmul@f2+1
  9701  0597  1683               	bsf	3,5	;RP0=1, select bank1
  9702  0598  1303               	bcf	3,6	;RP1=0, select bank1
  9703  0599  0822               	movf	(_sprintf$1070+2)^(0+128),w
  9704  059A  1283               	bcf	3,5	;RP0=0, select bank0
  9705  059B  1303               	bcf	3,6	;RP1=0, select bank0
  9706  059C  00AD               	movwf	___ftmul@f2+2
  9707  059D  1683               	bsf	3,5	;RP0=1, select bank1
  9708  059E  1303               	bcf	3,6	;RP1=0, select bank1
  9709  059F  0833               	movf	sprintf@fval^(0+128),w
  9710  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  9711  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  9712  05A2  00A8               	movwf	___ftmul@f1
  9713  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  9714  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  9715  05A5  0834               	movf	(sprintf@fval+1)^(0+128),w
  9716  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  9717  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  9718  05A8  00A9               	movwf	___ftmul@f1+1
  9719  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  9720  05AA  1303               	bcf	3,6	;RP1=0, select bank1
  9721  05AB  0835               	movf	(sprintf@fval+2)^(0+128),w
  9722  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  9723  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  9724  05AE  00AA               	movwf	___ftmul@f1+2
  9725  05AF  120A  118A  200A  120A  118A  	fcall	___ftmul
  9726  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  9727  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  9728  05B6  0828               	movf	?___ftmul,w
  9729  05B7  00C1               	movwf	___fttol@f1
  9730  05B8  0829               	movf	?___ftmul+1,w
  9731  05B9  00C2               	movwf	___fttol@f1+1
  9732  05BA  082A               	movf	?___ftmul+2,w
  9733  05BB  00C3               	movwf	___fttol@f1+2
  9734  05BC  160A  118A  22DB  120A  118A  	fcall	___fttol
  9735  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  9736  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  9737  05C3  0844               	movf	?___fttol+3,w
  9738  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  9739  05C5  1303               	bcf	3,6	;RP1=0, select bank1
  9740  05C6  00A7               	movwf	(sprintf@val+3)^(0+128)
  9741  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  9742  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  9743  05C9  0843               	movf	?___fttol+2,w
  9744  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  9745  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  9746  05CC  00A6               	movwf	(sprintf@val+2)^(0+128)
  9747  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  9748  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  9749  05CF  0842               	movf	?___fttol+1,w
  9750  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  9751  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  9752  05D2  00A5               	movwf	(sprintf@val+1)^(0+128)
  9753  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  9754  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  9755  05D5  0841               	movf	?___fttol,w
  9756  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  9757  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  9758  05D8  00A4               	movwf	sprintf@val^(0+128)
  9759                           
  9760                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
  9761  05D9  2E8B               	goto	l3141
  9762  05DA                     l3133:
  9763                           
  9764                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1255:     tmpval.vd = val/dpower
      +                          s[c];
  9765  05DA  0838               	movf	sprintf@c^(0+128),w
  9766  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  9767  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  9768  05DD  00DF               	movwf	??_sprintf
  9769  05DE  3001               	movlw	1
  9770  05DF                     u4655:
  9771  05DF  1003               	clrc
  9772  05E0  0DDF               	rlf	??_sprintf,f
  9773  05E1  3EFF               	addlw	-1
  9774  05E2  1D03               	skipz
  9775  05E3  2DDF               	goto	u4655
  9776  05E4  1003               	clrc
  9777  05E5  0D5F               	rlf	??_sprintf,w
  9778  05E6  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9779  05E7  0084               	movwf	4
  9780  05E8  160A  118A  2000  120A  118A  	fcall	stringdir
  9781  05ED  00F0               	movwf	___lldiv@divisor
  9782  05EE  160A  118A  2000  120A  118A  	fcall	stringdir
  9783  05F3  00F1               	movwf	___lldiv@divisor+1
  9784  05F4  160A  118A  2000  120A  118A  	fcall	stringdir
  9785  05F9  00F2               	movwf	___lldiv@divisor+2
  9786  05FA  160A  118A  2000  120A  118A  	fcall	stringdir
  9787  05FF  00F3               	movwf	___lldiv@divisor+3
  9788  0600  1683               	bsf	3,5	;RP0=1, select bank1
  9789  0601  1303               	bcf	3,6	;RP1=0, select bank1
  9790  0602  0827               	movf	(sprintf@val+3)^(0+128),w
  9791  0603  00F7               	movwf	___lldiv@dividend+3
  9792  0604  0826               	movf	(sprintf@val+2)^(0+128),w
  9793  0605  00F6               	movwf	___lldiv@dividend+2
  9794  0606  0825               	movf	(sprintf@val+1)^(0+128),w
  9795  0607  00F5               	movwf	___lldiv@dividend+1
  9796  0608  0824               	movf	sprintf@val^(0+128),w
  9797  0609  00F4               	movwf	___lldiv@dividend
  9798  060A  160A  118A  2190  120A  118A  	fcall	___lldiv
  9799  060F  0873               	movf	?___lldiv+3,w
  9800  0610  1683               	bsf	3,5	;RP0=1, select bank1
  9801  0611  1303               	bcf	3,6	;RP1=0, select bank1
  9802  0612  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  9803  0613  0872               	movf	?___lldiv+2,w
  9804  0614  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  9805  0615  0871               	movf	?___lldiv+1,w
  9806  0616  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  9807  0617  0870               	movf	?___lldiv,w
  9808  0618  00AC               	movwf	sprintf@tmpval^(0+128)
  9809  0619                     l3135:
  9810                           
  9811                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1256:     tmpval.vd %= 10;
  9812  0619  3000               	movlw	0
  9813  061A  00F3               	movwf	___llmod@divisor+3
  9814  061B  3000               	movlw	0
  9815  061C  00F2               	movwf	___llmod@divisor+2
  9816  061D  3000               	movlw	0
  9817  061E  00F1               	movwf	___llmod@divisor+1
  9818  061F  300A               	movlw	10
  9819  0620  00F0               	movwf	___llmod@divisor
  9820  0621  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  9821  0622  00F7               	movwf	___llmod@dividend+3
  9822  0623  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  9823  0624  00F6               	movwf	___llmod@dividend+2
  9824  0625  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  9825  0626  00F5               	movwf	___llmod@dividend+1
  9826  0627  082C               	movf	sprintf@tmpval^(0+128),w
  9827  0628  00F4               	movwf	___llmod@dividend
  9828  0629  160A  158A  27AC  120A  118A  	fcall	___llmod
  9829  062E  0873               	movf	?___llmod+3,w
  9830  062F  1683               	bsf	3,5	;RP0=1, select bank1
  9831  0630  1303               	bcf	3,6	;RP1=0, select bank1
  9832  0631  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  9833  0632  0872               	movf	?___llmod+2,w
  9834  0633  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  9835  0634  0871               	movf	?___llmod+1,w
  9836  0635  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  9837  0636  0870               	movf	?___llmod,w
  9838  0637  00AC               	movwf	sprintf@tmpval^(0+128)
  9839  0638                     l3137:
  9840                           
  9841                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++ = ('0' + tmpva
      +                          l.vd)));
  9842  0638  082C               	movf	sprintf@tmpval^(0+128),w
  9843  0639  3E30               	addlw	48
  9844  063A  1283               	bcf	3,5	;RP0=0, select bank0
  9845  063B  1303               	bcf	3,6	;RP1=0, select bank0
  9846  063C  00DF               	movwf	??_sprintf
  9847  063D  1683               	bsf	3,5	;RP0=1, select bank1
  9848  063E  1303               	bcf	3,6	;RP1=0, select bank1
  9849  063F  0832               	movf	sprintf@sp^(0+128),w
  9850  0640  0084               	movwf	4
  9851  0641  1283               	bcf	3,5	;RP0=0, select bank0
  9852  0642  1303               	bcf	3,6	;RP1=0, select bank0
  9853  0643  085F               	movf	??_sprintf,w
  9854  0644  1383               	bcf	3,7	;select IRP bank0
  9855  0645  0080               	movwf	0
  9856  0646  3001               	movlw	1
  9857  0647  00DF               	movwf	??_sprintf
  9858  0648  085F               	movf	??_sprintf,w
  9859  0649  1683               	bsf	3,5	;RP0=1, select bank1
  9860  064A  1303               	bcf	3,6	;RP1=0, select bank1
  9861  064B  07B2               	addwf	sprintf@sp^(0+128),f
  9862  064C                     l3139:
  9863                           
  9864                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1258:     val %= dpowers[c];
  9865  064C  0838               	movf	sprintf@c^(0+128),w
  9866  064D  1283               	bcf	3,5	;RP0=0, select bank0
  9867  064E  1303               	bcf	3,6	;RP1=0, select bank0
  9868  064F  00DF               	movwf	??_sprintf
  9869  0650  3001               	movlw	1
  9870  0651                     u4665:
  9871  0651  1003               	clrc
  9872  0652  0DDF               	rlf	??_sprintf,f
  9873  0653  3EFF               	addlw	-1
  9874  0654  1D03               	skipz
  9875  0655  2E51               	goto	u4665
  9876  0656  1003               	clrc
  9877  0657  0D5F               	rlf	??_sprintf,w
  9878  0658  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9879  0659  0084               	movwf	4
  9880  065A  160A  118A  2000  120A  118A  	fcall	stringdir
  9881  065F  00F0               	movwf	___llmod@divisor
  9882  0660  160A  118A  2000  120A  118A  	fcall	stringdir
  9883  0665  00F1               	movwf	___llmod@divisor+1
  9884  0666  160A  118A  2000  120A  118A  	fcall	stringdir
  9885  066B  00F2               	movwf	___llmod@divisor+2
  9886  066C  160A  118A  2000  120A  118A  	fcall	stringdir
  9887  0671  00F3               	movwf	___llmod@divisor+3
  9888  0672  1683               	bsf	3,5	;RP0=1, select bank1
  9889  0673  1303               	bcf	3,6	;RP1=0, select bank1
  9890  0674  0827               	movf	(sprintf@val+3)^(0+128),w
  9891  0675  00F7               	movwf	___llmod@dividend+3
  9892  0676  0826               	movf	(sprintf@val+2)^(0+128),w
  9893  0677  00F6               	movwf	___llmod@dividend+2
  9894  0678  0825               	movf	(sprintf@val+1)^(0+128),w
  9895  0679  00F5               	movwf	___llmod@dividend+1
  9896  067A  0824               	movf	sprintf@val^(0+128),w
  9897  067B  00F4               	movwf	___llmod@dividend
  9898  067C  160A  158A  27AC  120A  118A  	fcall	___llmod
  9899  0681  0873               	movf	?___llmod+3,w
  9900  0682  1683               	bsf	3,5	;RP0=1, select bank1
  9901  0683  1303               	bcf	3,6	;RP1=0, select bank1
  9902  0684  00A7               	movwf	(sprintf@val+3)^(0+128)
  9903  0685  0872               	movf	?___llmod+2,w
  9904  0686  00A6               	movwf	(sprintf@val+2)^(0+128)
  9905  0687  0871               	movf	?___llmod+1,w
  9906  0688  00A5               	movwf	(sprintf@val+1)^(0+128)
  9907  0689  0870               	movf	?___llmod,w
  9908  068A  00A4               	movwf	sprintf@val^(0+128)
  9909  068B                     l3141:
  9910                           
  9911                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
  9912  068B  3001               	movlw	1
  9913  068C  02B8               	subwf	sprintf@c^(0+128),f
  9914  068D  0A38               	incf	sprintf@c^(0+128),w
  9915  068E  1D03               	btfss	3,2
  9916  068F  2E91               	goto	u4671
  9917  0690  2E92               	goto	u4670
  9918  0691                     u4671:
  9919  0691  2DDA               	goto	l3133
  9920  0692                     u4670:
  9921  0692  2EAC               	goto	l3149
  9922  0693                     l3143:
  9923                           
  9924                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++ = ('0')));
  9925  0693  3030               	movlw	48
  9926  0694  1283               	bcf	3,5	;RP0=0, select bank0
  9927  0695  1303               	bcf	3,6	;RP1=0, select bank0
  9928  0696  00DF               	movwf	??_sprintf
  9929  0697  1683               	bsf	3,5	;RP0=1, select bank1
  9930  0698  1303               	bcf	3,6	;RP1=0, select bank1
  9931  0699  0832               	movf	sprintf@sp^(0+128),w
  9932  069A  0084               	movwf	4
  9933  069B  1283               	bcf	3,5	;RP0=0, select bank0
  9934  069C  1303               	bcf	3,6	;RP1=0, select bank0
  9935  069D  085F               	movf	??_sprintf,w
  9936  069E  1383               	bcf	3,7	;select IRP bank0
  9937  069F  0080               	movwf	0
  9938  06A0                     l3145:
  9939  06A0  3001               	movlw	1
  9940  06A1  00DF               	movwf	??_sprintf
  9941  06A2  085F               	movf	??_sprintf,w
  9942  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  9943  06A4  1303               	bcf	3,6	;RP1=0, select bank1
  9944  06A5  07B2               	addwf	sprintf@sp^(0+128),f
  9945  06A6                     l3147:
  9946                           
  9947                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  9948  06A6  30FF               	movlw	255
  9949  06A7  07B6               	addwf	sprintf@prec^(0+128),f
  9950  06A8  1803               	skipnc
  9951  06A9  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  9952  06AA  30FF               	movlw	255
  9953  06AB  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  9954  06AC                     l3149:
  9955                           
  9956                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1261:    while(prec) {
  9957  06AC  0836               	movf	sprintf@prec^(0+128),w
  9958  06AD  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9959  06AE  1D03               	btfss	3,2
  9960  06AF  2EB1               	goto	u4681
  9961  06B0  2EB2               	goto	u4680
  9962  06B1                     u4681:
  9963  06B1  2E93               	goto	l3143
  9964  06B2                     u4680:
  9965  06B2  2FB6               	goto	l3197
  9966  06B3                     l3151:
  9967                           
  9968                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && val == 0
      +                          )
  9969  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  9970  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  9971  06B5  0836               	movf	sprintf@prec^(0+128),w
  9972  06B6  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9973  06B7  1D03               	btfss	3,2
  9974  06B8  2EBA               	goto	u4691
  9975  06B9  2EBB               	goto	u4690
  9976  06BA                     u4691:
  9977  06BA  2EC9               	goto	l388
  9978  06BB                     u4690:
  9979  06BB                     l3153:
  9980  06BB  0827               	movf	(sprintf@val+3)^(0+128),w
  9981  06BC  0426               	iorwf	(sprintf@val+2)^(0+128),w
  9982  06BD  0425               	iorwf	(sprintf@val+1)^(0+128),w
  9983  06BE  0424               	iorwf	sprintf@val^(0+128),w
  9984  06BF  1D03               	skipz
  9985  06C0  2EC2               	goto	u4701
  9986  06C1  2EC3               	goto	u4700
  9987  06C2                     u4701:
  9988  06C2  2EC9               	goto	l388
  9989  06C3                     u4700:
  9990  06C3                     l3155:
  9991                           
  9992                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  9993  06C3  3001               	movlw	1
  9994  06C4  07B6               	addwf	sprintf@prec^(0+128),f
  9995  06C5  1803               	skipnc
  9996  06C6  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  9997  06C7  3000               	movlw	0
  9998  06C8  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  9999  06C9                     l388:
 10000                           
 10001                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
 10002  06C9  0837               	movf	(sprintf@prec+1)^(0+128),w
 10003  06CA  3A80               	xorlw	128
 10004  06CB  3C80               	sublw	128
 10005  06CC  1D03               	skipz
 10006  06CD  2ED0               	goto	u4715
 10007  06CE  0836               	movf	sprintf@prec^(0+128),w
 10008  06CF  0238               	subwf	sprintf@c^(0+128),w
 10009  06D0                     u4715:
 10010  06D0  1803               	skipnc
 10011  06D1  2ED3               	goto	u4711
 10012  06D2  2ED4               	goto	u4710
 10013  06D3                     u4711:
 10014  06D3  2EDF               	goto	l3159
 10015  06D4                     u4710:
 10016  06D4                     l3157:
 10017                           
 10018                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1366:    c = (char)prec;
 10019  06D4  1683               	bsf	3,5	;RP0=1, select bank1
 10020  06D5  1303               	bcf	3,6	;RP1=0, select bank1
 10021  06D6  0836               	movf	sprintf@prec^(0+128),w
 10022  06D7  1283               	bcf	3,5	;RP0=0, select bank0
 10023  06D8  1303               	bcf	3,6	;RP1=0, select bank0
 10024  06D9  00DF               	movwf	??_sprintf
 10025  06DA  085F               	movf	??_sprintf,w
 10026  06DB  1683               	bsf	3,5	;RP0=1, select bank1
 10027  06DC  1303               	bcf	3,6	;RP1=0, select bank1
 10028  06DD  00B8               	movwf	sprintf@c^(0+128)
 10029  06DE  2F03               	goto	l3163
 10030  06DF                     l3159:
 10031  06DF  1683               	bsf	3,5	;RP0=1, select bank1
 10032  06E0  1303               	bcf	3,6	;RP1=0, select bank1
 10033  06E1  0837               	movf	(sprintf@prec+1)^(0+128),w
 10034  06E2  3A80               	xorlw	128
 10035  06E3  1283               	bcf	3,5	;RP0=0, select bank0
 10036  06E4  1303               	bcf	3,6	;RP1=0, select bank0
 10037  06E5  00DF               	movwf	??_sprintf
 10038  06E6  3080               	movlw	128
 10039  06E7  025F               	subwf	??_sprintf,w
 10040  06E8  1D03               	skipz
 10041  06E9  2EEE               	goto	u4725
 10042  06EA  1683               	bsf	3,5	;RP0=1, select bank1
 10043  06EB  1303               	bcf	3,6	;RP1=0, select bank1
 10044  06EC  0838               	movf	sprintf@c^(0+128),w
 10045  06ED  0236               	subwf	sprintf@prec^(0+128),w
 10046  06EE                     u4725:
 10047  06EE  1803               	skipnc
 10048  06EF  2EF1               	goto	u4721
 10049  06F0  2EF2               	goto	u4720
 10050  06F1                     u4721:
 10051  06F1  2F03               	goto	l3163
 10052  06F2                     u4720:
 10053  06F2                     l3161:
 10054                           
 10055                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
 10056  06F2  1683               	bsf	3,5	;RP0=1, select bank1
 10057  06F3  1303               	bcf	3,6	;RP1=0, select bank1
 10058  06F4  0838               	movf	sprintf@c^(0+128),w
 10059  06F5  1283               	bcf	3,5	;RP0=0, select bank0
 10060  06F6  1303               	bcf	3,6	;RP1=0, select bank0
 10061  06F7  00DF               	movwf	??_sprintf
 10062  06F8  01E0               	clrf	??_sprintf+1
 10063  06F9  085F               	movf	??_sprintf,w
 10064  06FA  1683               	bsf	3,5	;RP0=1, select bank1
 10065  06FB  1303               	bcf	3,6	;RP1=0, select bank1
 10066  06FC  00B6               	movwf	sprintf@prec^(0+128)
 10067  06FD  1283               	bcf	3,5	;RP0=0, select bank0
 10068  06FE  1303               	bcf	3,6	;RP1=0, select bank0
 10069  06FF  0860               	movf	??_sprintf+1,w
 10070  0700  1683               	bsf	3,5	;RP0=1, select bank1
 10071  0701  1303               	bcf	3,6	;RP1=0, select bank1
 10072  0702  00B7               	movwf	(sprintf@prec+1)^(0+128)
 10073  0703                     l3163:
 10074                           
 10075                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0x03)
 10076  0703  1683               	bsf	3,5	;RP0=1, select bank1
 10077  0704  1303               	bcf	3,6	;RP1=0, select bank1
 10078  0705  082A               	movf	sprintf@width^(0+128),w
 10079  0706  042B               	iorwf	(sprintf@width+1)^(0+128),w
 10080  0707  1903               	btfsc	3,2
 10081  0708  2F0A               	goto	u4731
 10082  0709  2F0B               	goto	u4730
 10083  070A                     u4731:
 10084  070A  2F25               	goto	l3169
 10085  070B                     u4730:
 10086  070B                     l3165:
 10087  070B  3003               	movlw	3
 10088  070C  0528               	andwf	sprintf@flag^(0+128),w
 10089  070D  1283               	bcf	3,5	;RP0=0, select bank0
 10090  070E  1303               	bcf	3,6	;RP1=0, select bank0
 10091  070F  00DF               	movwf	??_sprintf
 10092  0710  3000               	movlw	0
 10093  0711  1683               	bsf	3,5	;RP0=1, select bank1
 10094  0712  1303               	bcf	3,6	;RP1=0, select bank1
 10095  0713  0529               	andwf	(sprintf@flag+1)^(0+128),w
 10096  0714  1283               	bcf	3,5	;RP0=0, select bank0
 10097  0715  1303               	bcf	3,6	;RP1=0, select bank0
 10098  0716  00E0               	movwf	??_sprintf+1
 10099  0717  085F               	movf	??_sprintf,w
 10100  0718  0460               	iorwf	??_sprintf+1,w
 10101  0719  1903               	btfsc	3,2
 10102  071A  2F1C               	goto	u4741
 10103  071B  2F1D               	goto	u4740
 10104  071C                     u4741:
 10105  071C  2F25               	goto	l3169
 10106  071D                     u4740:
 10107  071D                     l3167:
 10108                           
 10109                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10110  071D  30FF               	movlw	255
 10111  071E  1683               	bsf	3,5	;RP0=1, select bank1
 10112  071F  1303               	bcf	3,6	;RP1=0, select bank1
 10113  0720  07AA               	addwf	sprintf@width^(0+128),f
 10114  0721  1803               	skipnc
 10115  0722  0AAB               	incf	(sprintf@width+1)^(0+128),f
 10116  0723  30FF               	movlw	255
 10117  0724  07AB               	addwf	(sprintf@width+1)^(0+128),f
 10118  0725                     l3169:
 10119                           
 10120                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1374:   if(flag & 0x4000) {
 10121  0725  1683               	bsf	3,5	;RP0=1, select bank1
 10122  0726  1303               	bcf	3,6	;RP1=0, select bank1
 10123  0727  1F29               	btfss	(sprintf@flag+1)^(0+128),6
 10124  0728  2F2A               	goto	u4751
 10125  0729  2F2B               	goto	u4750
 10126  072A                     u4751:
 10127  072A  2F4E               	goto	l3177
 10128  072B                     u4750:
 10129  072B                     l3171:
 10130                           
 10131                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1375:    if(width > prec)
 10132  072B  0837               	movf	(sprintf@prec+1)^(0+128),w
 10133  072C  3A80               	xorlw	128
 10134  072D  1283               	bcf	3,5	;RP0=0, select bank0
 10135  072E  1303               	bcf	3,6	;RP1=0, select bank0
 10136  072F  00DF               	movwf	??_sprintf
 10137  0730  1683               	bsf	3,5	;RP0=1, select bank1
 10138  0731  1303               	bcf	3,6	;RP1=0, select bank1
 10139  0732  082B               	movf	(sprintf@width+1)^(0+128),w
 10140  0733  3A80               	xorlw	128
 10141  0734  1283               	bcf	3,5	;RP0=0, select bank0
 10142  0735  1303               	bcf	3,6	;RP1=0, select bank0
 10143  0736  025F               	subwf	??_sprintf,w
 10144  0737  1D03               	skipz
 10145  0738  2F3D               	goto	u4765
 10146  0739  1683               	bsf	3,5	;RP0=1, select bank1
 10147  073A  1303               	bcf	3,6	;RP1=0, select bank1
 10148  073B  082A               	movf	sprintf@width^(0+128),w
 10149  073C  0236               	subwf	sprintf@prec^(0+128),w
 10150  073D                     u4765:
 10151  073D  1803               	skipnc
 10152  073E  2F40               	goto	u4761
 10153  073F  2F41               	goto	u4760
 10154  0740                     u4761:
 10155  0740  2F4A               	goto	l3175
 10156  0741                     u4760:
 10157  0741                     l3173:
 10158                           
 10159                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1376:     width -= prec;
 10160  0741  1683               	bsf	3,5	;RP0=1, select bank1
 10161  0742  1303               	bcf	3,6	;RP1=0, select bank1
 10162  0743  0836               	movf	sprintf@prec^(0+128),w
 10163  0744  02AA               	subwf	sprintf@width^(0+128),f
 10164  0745  0837               	movf	(sprintf@prec+1)^(0+128),w
 10165  0746  1C03               	skipc
 10166  0747  03AB               	decf	(sprintf@width+1)^(0+128),f
 10167  0748  02AB               	subwf	(sprintf@width+1)^(0+128),f
 10168  0749  2F4E               	goto	l3177
 10169  074A                     l3175:
 10170                           
 10171                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1378:     width = 0;
 10172  074A  1683               	bsf	3,5	;RP0=1, select bank1
 10173  074B  1303               	bcf	3,6	;RP1=0, select bank1
 10174  074C  01AA               	clrf	sprintf@width^(0+128)
 10175  074D  01AB               	clrf	(sprintf@width+1)^(0+128)
 10176  074E                     l3177:
 10177                           
 10178                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
 10179  074E  082B               	movf	(sprintf@width+1)^(0+128),w
 10180  074F  3A80               	xorlw	128
 10181  0750  3C80               	sublw	128
 10182  0751  1D03               	skipz
 10183  0752  2F55               	goto	u4775
 10184  0753  082A               	movf	sprintf@width^(0+128),w
 10185  0754  0238               	subwf	sprintf@c^(0+128),w
 10186  0755                     u4775:
 10187  0755  1803               	skipnc
 10188  0756  2F58               	goto	u4771
 10189  0757  2F59               	goto	u4770
 10190  0758                     u4771:
 10191  0758  2F6D               	goto	l3181
 10192  0759                     u4770:
 10193  0759                     l3179:
 10194                           
 10195                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
 10196  0759  1683               	bsf	3,5	;RP0=1, select bank1
 10197  075A  1303               	bcf	3,6	;RP1=0, select bank1
 10198  075B  0838               	movf	sprintf@c^(0+128),w
 10199  075C  1283               	bcf	3,5	;RP0=0, select bank0
 10200  075D  1303               	bcf	3,6	;RP1=0, select bank0
 10201  075E  00DF               	movwf	??_sprintf
 10202  075F  01E0               	clrf	??_sprintf+1
 10203  0760  085F               	movf	??_sprintf,w
 10204  0761  1683               	bsf	3,5	;RP0=1, select bank1
 10205  0762  1303               	bcf	3,6	;RP1=0, select bank1
 10206  0763  02AA               	subwf	sprintf@width^(0+128),f
 10207  0764  1283               	bcf	3,5	;RP0=0, select bank0
 10208  0765  1303               	bcf	3,6	;RP1=0, select bank0
 10209  0766  0860               	movf	??_sprintf+1,w
 10210  0767  1683               	bsf	3,5	;RP0=1, select bank1
 10211  0768  1303               	bcf	3,6	;RP1=0, select bank1
 10212  0769  1C03               	skipc
 10213  076A  03AB               	decf	(sprintf@width+1)^(0+128),f
 10214  076B  02AB               	subwf	(sprintf@width+1)^(0+128),f
 10215  076C  2F71               	goto	l3183
 10216  076D                     l3181:
 10217                           
 10218                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
 10219  076D  1683               	bsf	3,5	;RP0=1, select bank1
 10220  076E  1303               	bcf	3,6	;RP1=0, select bank1
 10221  076F  01AA               	clrf	sprintf@width^(0+128)
 10222  0770  01AB               	clrf	(sprintf@width+1)^(0+128)
 10223  0771                     l3183:
 10224                           
 10225                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1448:   {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 1450:    if(width
 10226  0771  082A               	movf	sprintf@width^(0+128),w
 10227  0772  042B               	iorwf	(sprintf@width+1)^(0+128),w
 10228  0773  1903               	btfsc	3,2
 10229  0774  2F76               	goto	u4781
 10230  0775  2F77               	goto	u4780
 10231  0776                     u4781:
 10232  0776  2F96               	goto	l3191
 10233  0777                     u4780:
 10234  0777                     l3185:
 10235                           
 10236                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')));
 10237  0777  3020               	movlw	32
 10238  0778  1283               	bcf	3,5	;RP0=0, select bank0
 10239  0779  1303               	bcf	3,6	;RP1=0, select bank0
 10240  077A  00DF               	movwf	??_sprintf
 10241  077B  1683               	bsf	3,5	;RP0=1, select bank1
 10242  077C  1303               	bcf	3,6	;RP1=0, select bank1
 10243  077D  0832               	movf	sprintf@sp^(0+128),w
 10244  077E  0084               	movwf	4
 10245  077F  1283               	bcf	3,5	;RP0=0, select bank0
 10246  0780  1303               	bcf	3,6	;RP1=0, select bank0
 10247  0781  085F               	movf	??_sprintf,w
 10248  0782  1383               	bcf	3,7	;select IRP bank0
 10249  0783  0080               	movwf	0
 10250  0784                     l3187:
 10251  0784  3001               	movlw	1
 10252  0785  00DF               	movwf	??_sprintf
 10253  0786  085F               	movf	??_sprintf,w
 10254  0787  1683               	bsf	3,5	;RP0=1, select bank1
 10255  0788  1303               	bcf	3,6	;RP1=0, select bank1
 10256  0789  07B2               	addwf	sprintf@sp^(0+128),f
 10257  078A                     l3189:
 10258  078A  30FF               	movlw	255
 10259  078B  07AA               	addwf	sprintf@width^(0+128),f
 10260  078C  1803               	skipnc
 10261  078D  0AAB               	incf	(sprintf@width+1)^(0+128),f
 10262  078E  30FF               	movlw	255
 10263  078F  07AB               	addwf	(sprintf@width+1)^(0+128),f
 10264  0790  082A               	movf	sprintf@width^(0+128),w
 10265  0791  042B               	iorwf	(sprintf@width+1)^(0+128),w
 10266  0792  1D03               	btfss	3,2
 10267  0793  2F95               	goto	u4791
 10268  0794  2F96               	goto	u4790
 10269  0795                     u4791:
 10270  0795  2F77               	goto	l3185
 10271  0796                     u4790:
 10272  0796                     l3191:
 10273                           
 10274                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 10275  0796  3003               	movlw	3
 10276  0797  0528               	andwf	sprintf@flag^(0+128),w
 10277  0798  1283               	bcf	3,5	;RP0=0, select bank0
 10278  0799  1303               	bcf	3,6	;RP1=0, select bank0
 10279  079A  00DF               	movwf	??_sprintf
 10280  079B  3000               	movlw	0
 10281  079C  1683               	bsf	3,5	;RP0=1, select bank1
 10282  079D  1303               	bcf	3,6	;RP1=0, select bank1
 10283  079E  0529               	andwf	(sprintf@flag+1)^(0+128),w
 10284  079F  1283               	bcf	3,5	;RP0=0, select bank0
 10285  07A0  1303               	bcf	3,6	;RP1=0, select bank0
 10286  07A1  00E0               	movwf	??_sprintf+1
 10287  07A2  085F               	movf	??_sprintf,w
 10288  07A3  0460               	iorwf	??_sprintf+1,w
 10289  07A4  1903               	btfsc	3,2
 10290  07A5  2FA7               	goto	u4801
 10291  07A6  2FA8               	goto	u4800
 10292  07A7                     u4801:
 10293  07A7  2FB6               	goto	l3197
 10294  07A8                     u4800:
 10295  07A8                     l3193:
 10296                           
 10297                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
 10298  07A8  302D               	movlw	45
 10299  07A9  00DF               	movwf	??_sprintf
 10300  07AA  1683               	bsf	3,5	;RP0=1, select bank1
 10301  07AB  1303               	bcf	3,6	;RP1=0, select bank1
 10302  07AC  0832               	movf	sprintf@sp^(0+128),w
 10303  07AD  0084               	movwf	4
 10304  07AE  1283               	bcf	3,5	;RP0=0, select bank0
 10305  07AF  1303               	bcf	3,6	;RP1=0, select bank0
 10306  07B0  085F               	movf	??_sprintf,w
 10307  07B1  1383               	bcf	3,7	;select IRP bank0
 10308  07B2  0080               	movwf	0
 10309  07B3  120A  158A  2D51   	goto	l2955
 10310  07B6                     l3197:
 10311                           
 10312                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
 10313  07B6  3001               	movlw	1
 10314  07B7  1283               	bcf	3,5	;RP0=0, select bank0
 10315  07B8  07DB               	addwf	sprintf@f,f
 10316  07B9  30FF               	movlw	-1
 10317  07BA  075B               	addwf	sprintf@f,w
 10318  07BB  0084               	movwf	4
 10319  07BC  160A  118A  2000  120A  118A  	fcall	stringdir
 10320  07C1  00DF               	movwf	??_sprintf
 10321  07C2  085F               	movf	??_sprintf,w
 10322  07C3  1683               	bsf	3,5	;RP0=1, select bank1
 10323  07C4  1303               	bcf	3,6	;RP1=0, select bank1
 10324  07C5  00B8               	movwf	sprintf@c^(0+128)
 10325  07C6  0838               	movf	sprintf@c^(0+128),w
 10326  07C7  1D03               	btfss	3,2
 10327  07C8  2FCA               	goto	u4811
 10328  07C9  2FCD               	goto	u4810
 10329  07CA                     u4811:
 10330  07CA  120A  158A  2D3E   	goto	l2951
 10331  07CD                     u4810:
 10332  07CD                     l3199:
 10333                           
 10334                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10335  07CD  1683               	bsf	3,5	;RP0=1, select bank1
 10336  07CE  1303               	bcf	3,6	;RP1=0, select bank1
 10337  07CF  0832               	movf	sprintf@sp^(0+128),w
 10338  07D0  0084               	movwf	4
 10339  07D1  1383               	bcf	3,7	;select IRP bank0
 10340  07D2  0180               	clrf	0
 10341  07D3                     l403:
 10342  07D3  0008               	return
 10343  07D4                     __end_of_sprintf:

Data Sizes:
    Strings     27
    Constant    118
    Data        17
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     71      80
    BANK1            80     25      60
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> datos(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    uartTX_Write_Str@string	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _uartTX_Write_Str->_uartTX_Write
    _uartRC_init->___aldiv
    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___bmul->___lwdiv
    ___ftsub->___lltoft
    _aht_GetTemperature->___lltoft
    _aht_readSensor->_I2C_Master_Read
    ___lltoft->_aht_readSensor
    ___ftmul->___lwdiv
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _uartRC_init->___aldiv
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    _aht_GetTemperature->___ftadd
    ___lltoft->_aht_readSensor
    ___ftmul->___bmul
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    ___ftadd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   47387
                                             69 BANK0      2     2      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                   _I2C_Master_Write
                 _aht_GetTemperature
                           _configIO
                            _sprintf
                        _uartRC_Read
                        _uartRC_init
                       _uartTX_Write
                   _uartTX_Write_Str
 ---------------------------------------------------------------------------------
 (1) _uartTX_Write_Str                                     3     3      0     139
                                              2 COMMON     3     3      0
                       _uartTX_Write
 ---------------------------------------------------------------------------------
 (2) _uartTX_Write                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _uartRC_init                                         16    14      2     721
                                              9 COMMON     2     2      0
                                              6 BANK0     14    12      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _uartRC_Read                                          3     3      0       1
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             40    36      4   33175
                                             59 BANK0     10     6      4
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    6946
                                             24 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     932
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1042
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    5731
                                             24 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     477
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     480
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                              4 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1382
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             33 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3278
                                             53 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     560
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _aht_GetTemperature                                   6     3      3   12487
                                             53 BANK0      6     3      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lltoft
                     _aht_readSensor
 ---------------------------------------------------------------------------------
 (2) _aht_readSensor                                      45    41      4     776
                                              6 COMMON     4     0      4
                                              0 BANK0     41    41      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     234
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     204
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2175
                                             10 COMMON     4     0      4
                                             41 BANK0      2     2      0
                           ___ftpack
                     _aht_readSensor (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3969
                                              8 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2439
                                             24 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3105
                                             40 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1947
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     608
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _aht_GetTemperature
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___lltoft
       ___ftpack
       _aht_readSensor (ARG)
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _aht_readSensor
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _configIO
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
         _aht_readSensor (ARG)
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
       _aht_readSensor (ARG)
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
   _uartRC_Read
   _uartRC_init
     ___aldiv
   _uartTX_Write
   _uartTX_Write_Str
     _uartTX_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     19      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     47      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9A      12        0.0%
ABS                  0      0      9A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 22:44:16 2021

                          pc 0002               ___bmul@product 0026                           l56 14AC  
                         l49 1E16                           l93 1F2F                           l96 1DC6  
                         l99 1DD2                 ___awdiv@sign 0021                           fsr 0004  
        ___wmul@multiplicand 0072                 ___ftadd@exp1 0054                 ___ftadd@exp2 0053  
               ___ftadd@sign 0052                          l102 1DB1                          l111 1DBB  
                        l114 1EBE                          l115 1EC1                          l211 1E98  
                        l116 1EC6                          l108 109F                          l205 1E03  
                        l320 0D2F                          l313 028F                          l403 07D3  
                        l173 17FF                          l165 118F                          l342 0E22  
                        l407 1E5B                          l409 1E73                          l433 0822  
                        l443 11F5                          l603 1132                          l380 054C  
                        l196 16F6                          l613 094E                          l373 04FA  
                        l710 1F67                          l703 155F                          l199 080B  
                        l632 12DA                          l624 0941                          l616 08FE  
                        l617 0911                          l643 12B6                          l644 12C0  
                        l636 129B                          l716 00EE                          l388 06C9  
                        l645 12DA                          l653 0A84                          l733 1E4E  
                        l590 125E                          l478 137B                          l727 1DC5  
                        l656 099A                          l744 1349                          l488 1403  
                        l657 09A4                          l737 1366                          l658 09A9  
                        l667 0A1A                          l684 162E                          l692 156C  
                        l693 14DE                          l696 152F                          l849 1FAB  
                        l786 1EF7                          l778 1FFF                          l859 10D9  
                        l869 1DF1                          _GIE 005F                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0076                 ___ftdiv@cntr 0042  
               ___ftdiv@sign 0047                         l2201 0821                         l3001 0E64  
                       l2131 125F                         l2211 1202                         l3011 0EA5  
                       l3003 0E6F                         l2141 127E                         l2133 1264  
                       l2301 0990                         l2221 1213                         l2213 1204  
                       l2205 11F6                         l3101 0481                         l3021 0EF6  
                       l3013 0EA9                         l3005 0E77                         l2151 12AC  
                       l2143 1285                         l2135 126B                         l2311 09AA  
                       l2303 099B                         l2127 1DC6                         l2231 122B  
                       l2223 1219                         l2215 1208                         l2207 11F9  
                       l3111 0511                         l3103 0488                         l3031 0F65  
                       l3023 0F09                         l3015 0EB0                         l3007 0E8C  
                       l2161 12D9                         l2153 12B0                         l2145 1289  
                       l2321 09D6                         l2313 09B0                         l2305 099F  
                       l2401 00CD                         l2129 1DCC                         l2233 123C  
                       l2225 121C                         l2241 1250                         l2217 120D  
                       l2209 11FD                         l3121 0542                         l3113 0517  
                       l3105 04C7                         l3041 0FB1                         l3033 0F7A  
                       l3025 0F0D                         l3017 0EDD                         l3009 0EA1  
                       l2155 12BA                         l2147 1293                         l2139 1272  
                       l2331 09FF                         l2323 09E2                         l2315 09BD  
                       l2307 09A3                         l2403 00D3                         l2163 1DA9  
                       l2171 1097                         l2411 1F70                         l2243 1255  
                       l2235 1242                         l2227 1223                         l2219 1211  
                       l2251 10DB                         l3131 058D                         l3123 055D  
                       l3115 051D                         l3107 04E6                         l3051 02C7  
                       l3043 0FEA                         l3035 0F83                         l3027 0F13  
                       l3019 0EE3                         l3211 1404                         l2157 12C2  
                       l2149 12A2                         l2341 0A32                         l2333 0A08  
                       l2317 09C7                         l2325 09E9                         l2309 09A8  
                       l2181 1EAF                         l2165 1DAE                         l2173 109C  
                       l2421 1F93                         l2413 1F73                         l2245 125A  
                       l2237 1243                         l2229 1227                         l2261 10EF  
                       l2253 10DF                         l3133 05DA                         l3141 068B  
                       l3125 0562                         l3117 052A                         l3109 0504  
                       l3061 0307                         l3053 02DE                         l3045 0290  
                       l3037 0F9A                         l3029 0F2C                         l3221 1431  
                       l3213 1409                         l2159 12D4                         l2351 0A67  
                       l2343 0A42                         l2335 0A14                         l2327 09EF  
                       l2319 09CD                         l2183 1EB4                         l2175 1E99  
                       l2167 1DB2                         l2191 080F                         l2423 1F99  
                       l2415 1F7A                         l2407 1F68                         l2503 025C  
                       l2239 124A                         l2271 1107                         l2263 10F5  
                       l2255 10E4                         l2511 0A8E                         l3143 0693  
                       l3135 0619                         l3127 056F                         l3119 0539  
                       l3063 0322                         l3055 02E7                         l3047 0299  
                       l3039 0FA2                         l3151 06B3                         l3231 1466  
                       l3223 143B                         l3215 1414                         l2353 0A69  
                       l2345 0A43                         l2337 0A1E                         l2329 09F9  
                       l2185 1EBA                         l2177 1E9E                         l2169 1DB7  
                       l2193 0810                         l2425 1F9A                         l2417 1F7E  
                       l2409 1F6A                         l2441 10B4                         l2433 10A0  
                       l2281 1129                         l2273 1111                         l2265 10F8  
                       l2257 10E6                         l2249 10DA                         l2521 0B54  
                       l2513 0A95                         l3161 06F2                         l3153 06BB  
                       l3145 06A0                         l3137 0638                         l3129 0575  
                       l3081 03EF                         l3057 02EF                         l3049 02B8  
                       l3065 0329                         l3209 0800                         l3241 148F  
                       l3233 146C                         l3225 1448                         l3217 1423  
                       l2347 0A53                         l2339 0A2E                         l2291 0974  
                       l2371 0069                         l2363 0024                         l2187 1EC2  
                       l2179 1EA6                         l2611 0823                         l2195 0814  
                       l2427 1FA1                         l2419 1F82                         l2443 10B8  
                       l2435 10A6                         l2451 10D5                         l2283 112E  
                       l2275 1117                         l2267 10FF                         l2259 10EA  
                       l2531 0BE6                         l2507 0A88                         l3171 072B  
                       l3163 0703                         l3155 06C3                         l3147 06A6  
                       l3139 064C                         l3091 044C                         l3083 041E  
                       l3075 039A                         l3067 0396                         l3251 14A3  
                       l3243 1491                         l3235 1472                         l3227 144E  
                       l3219 1428                         l2349 0A57                         l2293 097E  
                       l2381 007B                         l2373 006A                         l2365 0035  
                       l2357 000A                         l2461 16F7                         l2613 083D  
                       l2605 1554                         l2197 0818                         l2429 1FA7  
                       l2445 10C2                         l2437 10A9                         l2277 111E  
                       l2269 1103                         l2525 0BBE                         l2509 0A8C  
                       l3181 076D                         l3173 0741                         l3165 070B  
                       l3157 06D4                         l3149 06AC                         l3085 0424  
                       l3069 0398                         l2701 1367                         l3253 14AA  
                       l3245 1498                         l3237 147C                         l3229 1460  
                       l2287 094F                         l2391 00A5                         l2383 007F  
                       l2375 006B                         l2359 001D                         l2471 174D  
                       l2463 1711                         l2631 08A2                         l2623 085F  
                       l2607 1564                         l2199 081A                         l2447 10C8  
                       l2439 10B0                         l2551 1DE8                         l2279 1124  
                       l2543 0D0F                         l2519 0B4D                         l3191 0796  
                       l3183 0771                         l3175 074A                         l3167 071D  
                       l3159 06DF                         l3087 0436                         l3095 0453  
                       l3079 03E1                         l2711 138E                         l2703 136A  
                       l2455 1DF3                         l3247 149A                         l3239 1489  
                       l2297 0985                         l2289 096E                         l2393 00A9  
                       l2385 008F                         l2377 0071                         l2369 003C  
                       l2481 17F7                         l2473 1751                         l2465 171B  
                       l2641 090B                         l2633 08A6                         l2625 0893  
                       l2617 0846                         l2561 14C3                         l2449 10CF  
                       l2553 1DEE                         l2537 0C9E                         l2529 0BDF  
                       l3193 07A8                         l3185 0777                         l3177 074E  
                       l3169 0725                         l3097 0462                         l3089 043F  
                       l3329 0E3E                         l2721 13B2                         l2713 1396  
                       l2705 136E                         l2457 1DF8                         l3249 14A1  
                       l2299 098A                         l2395 00AD                         l2387 0097  
                       l2379 0077                         l2475 1760                         l2467 1720  
                       l2803 1DBC                         l2811 1E2A                         l2643 0915  
                       l2651 092F                         l2635 08AF                         l2627 089B  
                       l2571 14DF                         l2555 1DF0                         l2547 1DE1  
                       l2539 0CA5                         l3187 0784                         l3179 0759  
                       l3099 0476                         l2731 13E5                         l2723 13BB  
                       l2715 139E                         l2707 137F                         l2459 1DFD  
                       l2741 156D                         l2397 00BD                         l2389 009F  
                       l2477 1766                         l2469 1724                         l2805 1DC3  
                       l2813 1E33                         l2821 12EE                         l2637 08DB  
                       l2629 089D                         l2581 1508                         l2573 14E5  
                       l2565 14CC                         l2485 00F2                         l2549 1DE2  
                       l3189 078A                         l3197 07B6                         l2725 13CD  
                       l2717 13A1                         l2733 13EB                         l2709 138A  
                       l2901 162F                         l2743 1580                         l2399 00C5  
                       l2479 17B4                         l2807 1DC5                         l2815 1E35  
                       l2831 1310                         l2671 1E69                         l2663 1E4F  
                       l2639 08FD                         l2591 1533                         l2583 1516  
                       l2575 14F4                         l2559 14B0                         l2487 00F8  
                       l2495 01CF                         l3199 07CD                         l2735 13F0  
                       l2727 13DB                         l2719 13AE                         l2911 16EA  
                       l2903 1680                         l2681 11A3                         l2761 15CE  
                       l2753 159F                         l2833 1317                         l2825 12F7  
                       l2673 1E6F                         l2665 1E51                         l2657 0936  
                       l2649 091D                         l2585 1520                         l2577 14F6  
                       l2497 01D5                         l2489 01B5                         l2737 13FB  
                       l2729 13DC                         l2913 16EE                         l2905 1689  
                       l2691 11DD                         l2683 11B0                         l2931 1F2D  
                       l2923 1EF8                         l2771 15FA                         l2763 15D2  
                       l2755 15A5                         l2747 1587                         l2851 133E  
                       l2843 1325                         l2835 1319                         l2827 1309  
                       l2819 12DB                         l2667 1E55                         l2659 0946  
                       l2587 1521                         l2579 14FF                         l2499 0242  
                       l2915 16EF                         l2907 16DE                         l2693 11DE  
                       l2685 11B4                         l2677 1190                         l2933 1F2E  
                       l2925 1EFC                         l2773 1604                         l2765 15D9  
                       l2757 15AA                         l2749 1598                         l2853 134E  
                       l2837 131D                         l2845 1337                         l2829 130A  
                       l2861 1FAC                         l2669 1E62                         l2597 153B  
                       l2589 1529                         l2917 16F2                         l2909 16E1  
                       l2941 1E75                         l2695 11E7                         l2687 11BD  
                       l2679 11A0                         l2927 1EFF                         l2775 1605  
                       l2767 15E4                         l2759 15BC                         l2935 1133  
                       l2791 1F52                         l2783 1F30                         l2855 1353  
                       l2871 1FDA                         l2863 1FB4                         l2599 154D  
                       l2951 0D3E                         l2919 16F3                         l2943 1E78  
                       l2689 11CF                         l2697 11ED                         l2929 1F2C  
                       l2777 160D                         l2769 15EC                         l2881 1EC7  
                       l2937 1150                         l2793 1F54                         l2785 1F34  
                       l2857 135E                         l2873 1FE8                         l2865 1FB7  
                       l2961 0D6E                         l2953 0D44                         l2945 1E85  
                       l2779 1613                         l2883 1ECE                         l2891 1E04  
                       l2795 1F56                         l2787 1F41                         l2875 1FF1  
                       l2867 1FC4                         l2963 0D72                         l2971 0DB8  
                       l2955 0D51                         l2947 1E8B                         l2885 1EDB  
                       l2893 1E0E                         l2797 1F64                         l2789 1F45  
                       l2869 1FC8                         l2877 1FF7                         l2981 0DE9  
                       l2973 0DC6                         l2965 0D87                         l2957 0D58  
                       l2949 0D33                         l2887 1EE1                         l2895 1E0F  
                       l2799 1F66                         l2983 0E04                         l2975 0DC9  
                       l2967 0DA2                         l2959 0D5C                         l2897 1E12  
                       l2993 0E26                         l2985 0E0A                         l2977 0DCF  
                       l2969 0DA8                         l2899 1E15                         l2995 0E46  
                       l2979 0DD4                         l2987 0E1C                         l2997 0E5A  
                       l2989 0E20                         l2999 0E60                         STR_1 108B  
                       STR_2 107C                         u3000 0A1E                         u3001 0A1D  
                       u3010 0A32                         u3011 0A31                         u3021 0A4C  
                       u3030 0A57                         u3022 0A53                         u3031 0A56  
                       u4000 15FA                         u3120 00A5                         u3040 001D  
                       u3200 1F82                         u4001 15F9                         u3121 00A4  
                       u3105 0090                         u3041 001C                         u3201 1F81  
                       u3130 00AD                         u3050 0035                         u3131 00AC  
                       u3115 0098                         u3051 0034                         u4020 1613  
                       u3060 004C                         u4100 131D                         u3220 1F93  
                       u3300 10D5                         u4021 1612                         u4005 15F6  
                       u3141 00B6                         u4101 131C                         u3221 1F92  
                       u3301 10D4                         u2510 12A1                         u3142 00BD  
                       u3070 005E                         u4030 1F34                         u4110 1324  
                       u3310 1E03                         u2511 12A0                         u4015 1606  
                       u4031 1F33                         u4111 1323                         u3215 1F83  
                       u3311 1E02                         u3080 007F                         u2440 1DCC  
                       u4040 1F45                         u4200 1FC8                         u2600 0821  
                       u3240 1FA7                         u3400 00F8                         u2505 1294  
                       u3081 007E                         u3065 0048                         u2441 1DCB  
                       u4041 1F44                         u4201 1FC7                         u2601 0820  
                       u3241 1FA6                         u3225 1F8F                         u3401 00F7  
                       u2530 12B0                         u3170 00D3                         u2450 1DD2  
                       u3330 1760                         u4050 1F64                         u4130 1336  
                       u4210 1FDA                         u3250 10A6                         u3410 01D5  
                       u2610 11FD                         u2531 12AF                         u3171 00D2  
                       u3155 00BE                         u3091 0088                         u3075 005A  
                       u2451 1DD1                         u3331 175F                         u4051 1F63  
                       u4131 1335                         u4211 1FD9                         u3235 1F9B  
                       u3251 10A5                         u3411 01D4                         u2611 11FC  
                       u2540 12B6                         u2460 1264                         u3092 008F  
                       u3340 1766                         u4060 1DC3                         u4140 133D  
                       u3500 14DD                         u3180 1F70                         u2700 1255  
                       u2620 1208                         u3420 0A8C                         u2541 12B5  
                       u2525 12A5                         u2461 1263                         u3165 00C6  
                       u3341 1765                         u3325 1738                         u4061 1DC2  
                       u4141 133C                         u4125 1326                         u3501 14DC  
                       u3181 1F6F                         u2701 1254                         u2621 1207  
                       u3421 0A8B                         u4301 16C0                         u2550 12BA  
                       u2470 126B                         u3350 177E                         u4070 1E33  
                       u4230 1FF7                         u3270 10B8                         u2630 1219  
                       u2710 10DF                         u3430 0A95                         u4310 16EA  
                       u4302 16C1                         u2551 12B9                         u2471 126A  
                       u4055 1F60                         u4071 1E32                         u4231 1FF6  
                       u4215 1FD6                         u3271 10B7                         u2631 1218  
                       u2711 10DE                         u3431 0A94                         u4311 16E9  
                       u4303 16C6                         u4320 1F0F                         u2560 12CB  
                       u2800 096E                         u3360 178F                         u4160 134E  
                       u4080 12EE                         u3520 1516                         u3280 10C2  
                       u2720 10EA                         u3440 0B54                         u4400 0E60  
                       u4304 16C7                         u2801 096D                         u4161 134D  
                       u4081 12ED                         u4225 1FE9                         u3521 1515  
                       u3281 10C1                         u3265 10AA                         u2721 10E9  
                       u3441 0B53                         u4401 0E5F                         u4305 16CC  
                       u2570 12D9                         u2490 1284                         u2810 0974  
                       u4250 1EE1                         u3370 17A8                         u4170 1353  
                       u4090 1302                         u3610 1564                         u2650 122B  
                       u2730 10F5                         u3450 0BE6                         u4410 0E8C  
                       u4306 16CD                         u4330 1E98                         u2571 12D8  
                       u2491 1283                         u2811 0973                         u4251 1EE0  
                       u3355 1779                         u4171 1352                         u4155 1340  
                       u3611 1563                         u3515 1501                         u3195 1F74  
                       u2651 122A                         u2731 10F4                         u3451 0BE5  
                       u4411 0E8B                         u4331 1E97                         u2900 09CD  
                       u2820 097E                         u2580 1EBA                         u3380 17C4  
                       u4180 1FB4                         u3700 092E                         u3620 083D  
                       u3540 152F                         u3460 0CA5                         u4500 02B8  
                       u4420 0EB0                         u4340 0D44                         u4325 1F0A  
                       u2565 12C7                         u2485 1277                         u2901 09CC  
                       u2821 097D                         u4245 1ECF                         u2581 1EB9  
                       u3365 178A                         u4181 1FB3                         u3701 092D  
                       u3621 083C                         u3605 1556                         u3541 152E  
                       u3525 1512                         u3285 10BE                         u2645 121D  
                       u3461 0CA4                         u4501 02B7                         u4421 0EAF  
                       u4341 0D43                         u2910 09D5                         u2830 098A  
                       u3390 17E0                         u3710 0935                         u3630 085E  
                       u3550 1533                         u2590 0814                         u3470 1DE8  
                       u2670 123C                         u2750 1107                         u4510 02C7  
                       u4430 0EC6                         u4350 0D6E                         u2911 09D4  
                       u2831 0989                         u3375 17A3                         u4095 12FE  
                       u3711 0934                         u3631 085D                         u3551 1532  
                       u3535 1522                         u2591 0813                         u3295 10C9  
                       u3471 1DE7                         u2671 123B                         u2751 1106  
                       u4511 02C6                         u4351 0D6D                         u3800 11B4  
                       u2840 0990                         u3560 153A                         u3480 1DEE  
                       u2760 1111                         u4520 02DE                         u4440 0F0D  
                       u4360 0DB8                         u3801 11B3                         u2841 098F  
                       u3385 17BF                         u3561 1539                         u3481 1DED  
                       u2665 122C                         u2761 1110                         u2745 10F9  
                       u4521 02DD                         u4441 0F0C                         u4361 0DB7  
                       u4281 1662                         u4265 1637                         u2930 09E8  
                       u2850 099A                         u3730 0946                         u3650 08DB  
                       u3490 14C3                         u2690 1250                         u4610 0503  
                       u4450 0F7A                         u4370 0DC6                         u4290 1689  
                       u4282 1663                         u2931 09E7                         u2851 0999  
                       u3395 17DB                         u4195 1FB9                         u3731 0945  
                       u3651 08DA                         u3491 14C2                         u2691 124F  
                       u2675 1238                         u4611 0502                         u4515 02C3  
                       u4451 0F79                         u4435 0EC1                         u4371 0DC5  
                       u4291 1688                         u4283 1668                         u4275 1648  
                       _PEIE 005E                         u3820 11CF                         u2940 09EF  
                       u2860 09A3                         u3740 1E55                         u3660 0911  
                       u3580 154C                         u2780 1124                         u4700 06C3  
                       u4620 052A                         u4540 03E0                         u4460 0F9A  
                       u4380 0E1B                         u4284 1669                         u3821 11CE  
                       u2941 09EE                         u2925 09D7                         u2861 09A2  
                       u3741 1E54                         u3725 0938                         u3661 0910  
                       u3645 08A8                         u3581 154B                         u2685 1244  
                       u2781 1123                         u2765 110D                         u4701 06C2  
                       u4621 0529                         u4605 048D                         u4541 03DF  
                       u4461 0F99                         u4381 0E1A                         u4285 166E  
                       u2870 09A8                         u3670 0915                         u3590 1553  
                       u2790 1129                         u4710 06D4                         u4630 0539  
                       u4550 03EF                         u4470 0FB1                         u4390 0E5A  
                       u3910 13CD                         u4286 166F                         u3815 11B6  
                       u2871 09A7                         u3671 0914                         u3655 08D7  
                       u3591 1552                         u3575 153C                         u2791 1128  
                       u2775 1118                         u4711 06D3                         u4631 0538  
                       u4551 03EE                         u4535 039F                         u4471 0FB0  
                       u4391 0E57                         u3911 13CC                         u3840 11ED  
                       u2960 09FF                         u2880 09BD                         u3680 091C  
                       u4800 07A8                         u4720 06F2                         u4640 0562  
                       u4560 041E                         u4480 0290                         u3841 11EC  
                       u3825 11CB                         u2961 09FE                         u2881 09BC  
                       u3681 091B                         u4801 07A7                         u4721 06F1  
                       u4641 0561                         u4625 0526                         u4561 041D  
                       u4545 03DC                         u4481 0FFA                         u3905 13B4  
                       u2970 0A07                         u3770 1E6F                         u4810 07CD  
                       u4730 070B                         u4570 0436                         u4490 0299  
                       u3930 13EB                         u3850 136E                         u3835 11DF  
                       u2971 0A06                         u2955 09F0                         u3771 1E6E  
                       u3755 1E5C                         u4811 07CA                         u4731 070A  
                       u4715 06D0                         u4635 0535                         u4571 0435  
                       u4491 0298                         u4475 0FAD                         u3931 13EA  
                       u3915 13C9                         u3851 136D                         u3780 11A0  
                       u4740 071D                         u4580 0462                         u3940 13F0  
                       u3860 137F                         u4820 148F                         u3781 119F  
                       u3765 1E63                         u4741 071C                         u4725 06EE  
                       u4581 0461                         u4485 0FF5                         u3941 13EF  
                       u3925 13DD                         u3861 137E                         u4821 148E  
                       u2990 0A1A                         u3950 1580                         u4750 072B  
                       u4670 0692                         u4590 0476                         u3870 139E  
                       u4830 1498                         u2991 0A19                         u2895 09BE  
                       u3951 157F                         u3695 091E                         u4751 072A  
                       u4671 0691                         u4655 05DF                         u4591 0475  
                       u3871 139D                         u4831 1497                         u3960 1598  
                       u4760 0741                         u4680 06B2                         u4840 14A1  
                       u2985 0A09                         u3961 1597                         u4761 0740  
                       u4681 06B1                         u4665 0651                         u4585 045E  
                       u4841 14A0                         u3970 15B5                         u4770 0759  
                       u4690 06BB                         u3890 13B2                         u4850 14AA  
                       u3795 11A5                         u4771 0758                         u4691 06BA  
                       u4907 0804                         u3891 13B1                         u4851 14A9  
                       u3980 15C7                         u4780 0777                         u4917 1717  
                       u4781 0776                         u4765 073D                         u3885 13A3  
                       u4790 0796                         u3975 15B1                         u4791 0795  
                       u4775 0755                         u3985 15C3                         u3995 15E5  
                       u4877 1437                         u4887 1478                         u4897 1DFA  
__size_of_aht_GetTemperature 005D      __size_of_aht_readSensor 0109                         _caso 006A  
                       _main 1404                 ___ftpack@arg 0070                 ___ftpack@exp 0073  
                       btemp 007E                         start 0000         aht_readSensor@result 0044  
               _sprintf$1070 00A0              aht_readSensor@i 0048     __end_of_uartTX_Write_Str 1E99  
          ___bmul@multiplier 0027                 ___ftmul@cntr 0036                 ___ftmul@sign 0037  
               ___fttol@exp1 004E                 ___fttol@lval 004A                   _GetTempCmd 00B9  
           ?_I2C_Master_Init 0020             ?_I2C_Master_Read 0070             ?_I2C_Master_Wait 0070  
           ?_I2C_Master_Stop 0070              __end_of___aldiv 1404                        ?_main 0070  
            __end_of___awdiv 125F              __end_of___ftadd 0A85              __end_of___awmod 1133  
            __end_of___ftdiv 162F              __end_of___ftneg 1DC6                        _ANSEL 0188  
            __end_of___lldiv 11F6              __end_of___ftmul 00EF              ___awdiv@divisor 0077  
            __end_of___llmod 2000              __end_of___ftsub 1E4F              __end_of___fttol 1367  
            __end_of___lwdiv 1FAC              __end_of___lwmod 10DA              ___awdiv@counter 0020  
                      _RCREG 001A                        _SPBRG 0099                        _PORTD 0008  
                      _TRISD 0088                        _SSPIE 0463                        _SSPIF 0063  
                      _TXREG 0019                 ___lltoft@exp 004A                        _datos 00BB  
            __end_of_dpowers 107C                        _scale 0A85              __end_of_isdigit 1DF2  
              ___ftpack@sign 0074              _GetRHumidityCmd 00D8                        pclath 000A  
                      status 0003                        wtemp0 007E              __end_of_sprintf 07D4  
    aht_GetTemperature@value 0058              __initialization 07D4                 __end_of_main 14B0  
                     ??_main 0065                ___fttol@sign1 0049                _AHT10_address 006E  
       __size_of__tdiv_to_l_ 00BD            ?_I2C_Master_Start 0070            ?_I2C_Master_Write 0070  
         ??_I2C_Master_Start 0070           ??_I2C_Master_Write 0072             ___llmod@dividend 0074  
                     ?_scale 0038             ___awdiv@dividend 0079             __end_of___ftpack 12DB  
                     _ANSELH 0189             __end_of___lltoft 1EF8                 ?_uartRC_Read 0070  
                     _SSPADD 0093                       _TRISC3 043B                       _TRISC4 043C  
               ?_uartRC_init 0026                       _SSPCON 0014                       _SSPBUF 0013  
           __end_of__powers_ 102D             __end_of_configIO 1E17                       ___bmul 080C  
                     ___ftge 1F30                    ??___aldiv 0078                       ___wmul 1E4F  
                  ??___awdiv 007B                    ??___ftadd 004E                    ??___awmod 0074  
                  ??___ftdiv 003E                    ??___ftneg 0073                    ??___lldiv 0078  
                  ??___ftmul 002E                    ??___llmod 0078                    ??___ftsub 007E  
                  ??___fttol 0045                    ??___lwdiv 007A                    ??___lwmod 0074  
                     _fround 00EF             ___awdiv@quotient 0022              ___awmod@divisor 0070  
            ___awmod@counter 0075        ___ftmul@f3_as_product 0033                    ??_isdigit 0070  
                  ??_sprintf 005F               _aht_readSensor 16F7      __end_of__initialization 07FC  
                 ___ftadd@f1 0048                   ___ftadd@f2 004B                   ___ftge@ff1 0070  
                 ___ftge@ff2 0073                   ___ftdiv@f1 003B                   ___ftdiv@f2 0038  
                 ___ftdiv@f3 0043                   ___ftneg@f1 0070          ___bmul@multiplicand 0024  
                 ___ftmul@f1 0028                   ___ftmul@f2 002B                   ___ftsub@f1 0058  
                 ___ftsub@f2 0055                   ___fttol@f1 0041               __pcstackCOMMON 0070  
               __pidataBANK0 0006                 __pidataBANK1 1DD3                   ___lltoft@c 007A  
              __end_of_scale 0D30                   __div_to_l_ 0823       __end_of_aht_readSensor 1800  
            __div_to_l_@exp1 0025              __div_to_l_@cntr 0024                      ??_scale 003B  
            __div_to_l_@quot 0020                 sprintf@width 00AA                   __pbssBANK0 0067  
                 __pbssBANK1 00B9                __div_to_l_@f1 0070                __div_to_l_@f2 0073  
                 __pmaintext 1404            ?_uartTX_Write_Str 0070                      ?___bmul 0024  
                    ?___ftge 0070                      ?___wmul 0070           ??_uartTX_Write_Str 0072  
                    ?_fround 0038                    ?___ftpack 0070                    ?___lltoft 007A  
            ?_aht_readSensor 0076   __end_of_aht_GetTemperature 1190                      _SSPCON2 0091  
                  ?_configIO 0070                      _SSPSTAT 0094                   __stringtab 1000  
            _eSensorResetCmd 006F         __size_of_uartRC_Read 000C            __end_of__npowers_ 1054  
              ?_uartTX_Write 0070         __size_of_uartRC_init 00C8                   _scale$1069 003D  
                    ___aldiv 1367              __size_of___bmul 0017              __size_of___ftge 0038  
                    ___awdiv 11F6                      ___ftadd 094F                      ___awmod 10DA  
                    ___ftdiv 156D                      ___ftneg 1DBC                      ___lldiv 1190  
            __size_of___wmul 0025                      ___ftmul 000A                      ___llmod 1FAC  
                    ___ftsub 1E2A                      ___fttol 12DB                      ___lwdiv 1F68  
                    ___lwmod 10A0                   ??___ftpack 0075              __size_of_fround 01A1  
                 ??___lltoft 0049                      __ptext1 1E74                      __ptext2 1DF2  
                    __ptext3 162F                      __ptext4 1367                      __ptext5 0800  
                    __ptext6 0D30                      __ptext7 0A85                      __ptext8 10DA  
                    __ptext9 11F6                  ?__div_to_l_ 0070                      _dpowers 1054  
                    _isdigit 1DE0             ___awmod@dividend 0072             ___aldiv@dividend 0074  
   __size_of_I2C_Master_Init 0038     __size_of_I2C_Master_Read 002E     __size_of_I2C_Master_Wait 000D  
   __size_of_I2C_Master_Stop 0009                   ??_configIO 0070                      _sprintf 0D30  
                    clrloop0 1DA2         end_of_initialization 07FC               ??_uartTX_Write 0070  
  __size_of_I2C_Master_Start 0009    __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0070  
            ___lldiv@counter 007D            _eSensorMeasureCmd 00CF                    _RCSTAbits 0018  
           ___aldiv@quotient 0022             I2C_Master_Init@c 0020             I2C_Master_Read@a 0070  
                    psplit$0 150036               __tdiv_to_l_@f1 0070               __tdiv_to_l_@f2 0073  
        _eSensorCalibrateCmd 00D5                ??__tdiv_to_l_ 0076                    _PORTDbits 0008  
                  _TRISCbits 0087           aht_readSensor@temp 002C                  ___ftdiv@exp 0046  
                  _TXSTAbits 0098          __size_of__div_to_l_ 012C                  ___ftmul@exp 0032  
             __end_of___bmul 0823               __end_of___ftge 1F68               __end_of___wmul 1E74  
   aht_readSensor@GetDataCmd 0076               __end_of_fround 0290            _AHT10Address_High 00DA  
        start_initialization 07D4          __end_of__tdiv_to_l_ 156D            pnum$text6_split_1 0036  
          ??_I2C_Master_Init 0024            ??_I2C_Master_Read 0072            ??_I2C_Master_Wait 0070  
          ??_I2C_Master_Stop 0070              ___llmod@divisor 0070              ___llmod@counter 0079  
                   ??___bmul 0025                     ??___ftge 0076                     ??___wmul 0074  
                 init_fetch0 1E17                  __pdataBANK0 006C                  __pdataBANK1 00CF  
                   ??_fround 003B                sprintf@tmpval 00AC                   fround@prec 0047  
           ??_aht_readSensor 0020            __size_of___ftpack 007C            __size_of___lltoft 0031  
       __end_of_uartTX_Write 1E04                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0    __size_of_uartTX_Write_Str 0025            uartTX_Write_Str@n 0072  
          __size_of_configIO 0013                  sprintf@flag 00A8                  sprintf@eexp 00B0  
                sprintf@fval 00B3                  sprintf@prec 00B6             _I2C_Master_Start 1DA9  
           _I2C_Master_Write 1DB2             ___lwdiv@dividend 0078           _aht_GetTemperature 1133  
                   ?___aldiv 0070                     ?___awdiv 0077                     ?___ftadd 0048  
                   ?___awmod 0070                     ?___ftdiv 0038                     ?___ftneg 0070  
                   ?___lldiv 0070                     ?___ftmul 0028                     ?___llmod 0070  
                   ?___ftsub 0055                    __npowers_ 102D                     ?___fttol 0041  
                   ?___lwdiv 0076                     ?___lwmod 0070          ?_aht_GetTemperature 0055  
                  __pstrings 1000                  __tdiv_to_l_ 14B0                 ??__div_to_l_ 0076  
                   ?_isdigit 0070             ___lwdiv@quotient 007B                     ?_sprintf 005B  
             __size_of_scale 02AB         ??_aht_GetTemperature 007E                ??_uartRC_Read 0070  
            ___aldiv@divisor 0070                ??_uartRC_init 0028              ___aldiv@counter 0020  
             ___wmul@product 0074                    clear_ram0 1DA1                     _PIE1bits 008C  
                   _PIR1bits 000C           __end_of__div_to_l_ 094F       uartTX_Write_Str@string 0074  
                __stringbase 1005            ___wmul@multiplier 0070             _eSensorNormalCmd 00D2  
        uartRC_init@baudrate 0026          I2C_Master_Read@temp 0074             _AHT10Address_Low 006C  
        __end_of_uartRC_Read 080C          __end_of_uartRC_init 16F7             __size_of___aldiv 009D  
           __size_of___awdiv 0069             __size_of___ftadd 0136             __size_of___awmod 0059  
           __size_of___ftdiv 00C2             __size_of___ftneg 000A             __size_of___lldiv 0066  
           __size_of___ftmul 00E5             __size_of___llmod 0054             __size_of___ftsub 0025  
           __size_of___fttol 008C             __size_of___lwdiv 0044             __size_of___lwmod 003A  
      __size_of_uartTX_Write 0012                     ___ftpack 125F             uartTX_Write@dato 0071  
                _fround$1067 0044                  _fround$1068 0041           __end_of__stringtab 1006  
               uartRC_init@n 0079                     ___lltoft 1EC7                  _isdigit$863 0070  
                 sprintf@val 00A4              _I2C_Master_Init 1EF8              _I2C_Master_Read 1E99  
            _I2C_Master_Wait 1DC6              _I2C_Master_Stop 1097             __size_of_isdigit 0012  
           _uartTX_Write_Str 1E74              ___lwdiv@divisor 0076              ___lwdiv@counter 007D  
                   __ptext10 1DE0                     __ptext11 00EF                     __ptext20 1E2A  
                   __ptext12 10A0                     __ptext21 1DBC                     __ptext13 1F68  
                   __ptext30 1DC6                     __ptext22 1F30                     __ptext14 080C  
                   __ptext31 1EC7                     __ptext23 1E04                     __ptext15 14B0  
                   __ptext32 000A                     __ptext24 1133                     __ptext16 0823  
                   __ptext33 156D                     __ptext25 16F7                     __ptext17 1E4F  
                   __ptext34 094F                     __ptext26 1DB2                     __ptext18 1FAC  
                   __ptext35 125F                     __ptext27 1097                     __ptext19 12DB  
                   __ptext36 1EF8                     __ptext28 1DA9                     __ptext37 1190  
                   __ptext29 1E99                     __powers_ 1006                     _configIO 1E04  
           __size_of_sprintf FAA4                __size_of_main 00AC                    pnum$text6 0015  
               _uartTX_Write 1DF2                     _tempera1 0067     __end_of_I2C_Master_Start 1DB2  
   __end_of_I2C_Master_Write 1DBC                   _INTCONbits 000B                     init_ram0 1E1B  
                   isdigit@c 0071                     scale@scl 0040                    sprintf@ap 00A3  
           __tdiv_to_l_@exp1 0025             __tdiv_to_l_@cntr 0024                    sprintf@sp 00B2  
           __tdiv_to_l_@quot 0020                  _uartRC_Read 0800             ___lwmod@dividend 0072  
           ___lldiv@dividend 0074                  _uartRC_init 162F                    stringcode 1000  
    __end_of_I2C_Master_Init 1F30      __end_of_I2C_Master_Read 1EC7      __end_of_I2C_Master_Wait 1DD3  
    __end_of_I2C_Master_Stop 10A0                 ?__tdiv_to_l_ 0070                     sprintf@c 00B8  
                   sprintf@f 005B             ___lldiv@quotient 0079            I2C_Master_Write@d 0070  
            ___lwmod@divisor 0070              ___lwmod@counter 0075                     stringdir 1000  
                   stringtab 1000                 ___aldiv@sign 0021                  _SSPCON2bits 0091  
