

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 05 23:30:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  0000                     	;# 
   374  0001                     	;# 
   375  0002                     	;# 
   376  0003                     	;# 
   377  0004                     	;# 
   378  0005                     	;# 
   379  0006                     	;# 
   380  0007                     	;# 
   381  0008                     	;# 
   382  0009                     	;# 
   383  000A                     	;# 
   384  000B                     	;# 
   385  000C                     	;# 
   386  000D                     	;# 
   387  000E                     	;# 
   388  000E                     	;# 
   389  000F                     	;# 
   390  0010                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0013                     	;# 
   394  0014                     	;# 
   395  0015                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001D                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  0081                     	;# 
   409  0085                     	;# 
   410  0086                     	;# 
   411  0087                     	;# 
   412  0088                     	;# 
   413  0089                     	;# 
   414  008C                     	;# 
   415  008D                     	;# 
   416  008E                     	;# 
   417  008F                     	;# 
   418  0090                     	;# 
   419  0091                     	;# 
   420  0092                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0094                     	;# 
   425  0095                     	;# 
   426  0096                     	;# 
   427  0097                     	;# 
   428  0098                     	;# 
   429  0099                     	;# 
   430  009A                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  009F                     	;# 
   436  0105                     	;# 
   437  0107                     	;# 
   438  0108                     	;# 
   439  0109                     	;# 
   440  010C                     	;# 
   441  010C                     	;# 
   442  010D                     	;# 
   443  010E                     	;# 
   444  010F                     	;# 
   445  0185                     	;# 
   446  0187                     	;# 
   447  0188                     	;# 
   448  0189                     	;# 
   449  018C                     	;# 
   450  018D                     	;# 
   451                           
   452                           	psect	idataCOMMON
   453  0241                     __pidataCOMMON:
   454                           
   455                           ;initializer for _AHT10_address
   456  0241  3438               	retlw	56
   457                           
   458                           	psect	idataBANK0
   459  020D                     __pidataBANK0:
   460                           
   461                           ;initializer for _eSensorMeasureCmd
   462  020D  34AC               	retlw	172
   463  020E  3433               	retlw	51
   464  020F  3400               	retlw	0
   465                           
   466                           ;initializer for _eSensorNormalCmd
   467  0210  34A8               	retlw	168
   468  0211  3400               	retlw	0
   469  0212  3400               	retlw	0
   470                           
   471                           ;initializer for _eSensorCalibrateCmd
   472  0213  34E1               	retlw	225
   473  0214  3408               	retlw	8
   474  0215  3400               	retlw	0
   475                           
   476                           ;initializer for _GetRHumidityCmd
   477  0216  3401               	retlw	1
   478  0217  3400               	retlw	0
   479                           
   480                           ;initializer for _AHT10Address_High
   481  0218  3439               	retlw	57
   482  0219  3400               	retlw	0
   483                           
   484                           ;initializer for _AHT10Address_Low
   485  021A  3438               	retlw	56
   486  021B  3400               	retlw	0
   487                           
   488                           ;initializer for _eSensorResetCmd
   489  021C  34BA               	retlw	186
   490  001A                     _RCREG	set	26
   491  0019                     _TXREG	set	25
   492  0013                     _SSPBUF	set	19
   493  0014                     _SSPCON	set	20
   494  000C                     _PIR1bits	set	12
   495  000B                     _INTCONbits	set	11
   496  0006                     _PORTB	set	6
   497  00C4                     _CREN	set	196
   498  00C7                     _SPEN	set	199
   499  0063                     _SSPIF	set	99
   500  005E                     _PEIE	set	94
   501  005F                     _GIE	set	95
   502  0065                     _RCIF	set	101
   503  0099                     _SPBRG	set	153
   504  0091                     _SSPCON2bits	set	145
   505  0087                     _TRISCbits	set	135
   506  0094                     _SSPSTAT	set	148
   507  0093                     _SSPADD	set	147
   508  0091                     _SSPCON2	set	145
   509  008C                     _PIE1bits	set	140
   510  0086                     _TRISB	set	134
   511  04C1                     _TRMT	set	1217
   512  04C5                     _TXEN	set	1221
   513  043E                     _TRISC6	set	1086
   514  043F                     _TRISC7	set	1087
   515  04C4                     _SYNC	set	1220
   516  04C2                     _BRGH	set	1218
   517  0463                     _SSPIE	set	1123
   518  043C                     _TRISC4	set	1084
   519  043B                     _TRISC3	set	1083
   520  0189                     _ANSELH	set	393
   521  0188                     _ANSEL	set	392
   522                           
   523                           	psect	strings
   524  0229                     __pstrings:
   525  0229                     stringtab:
   526  0229                     __stringtab:
   527  0229                     stringcode:	
   528                           ;	String table - string pointers are 1 byte each
   529                           
   530  0229                     stringdir:
   531  0229  3002               	movlw	high stringdir
   532  022A  008A               	movwf	10
   533  022B  0804               	movf	4,w
   534  022C  0A84               	incf	4,f
   535  022D  0782               	addwf	2,f
   536  022E                     __stringbase:
   537  022E  3400               	retlw	0
   538  022F                     __end_of__stringtab:
   539  022F                     STR_1:
   540  022F  3461               	retlw	97	;'a'
   541  0230  3400               	retlw	0
   542                           
   543                           	psect	cinit
   544  000F                     start_initialization:	
   545                           ; #config settings
   546                           
   547  000F                     __initialization:
   548                           
   549                           ; Initialize objects allocated to BANK0
   550  000F  1383               	bcf	3,7	;select IRP bank0
   551  0010  306B               	movlw	low (__pdataBANK0+16)
   552  0011  00FD               	movwf	btemp+-1
   553  0012  3002               	movlw	high __pidataBANK0
   554  0013  00FE               	movwf	btemp
   555  0014  300D               	movlw	low __pidataBANK0
   556  0015  00FF               	movwf	btemp+1
   557  0016  305B               	movlw	low __pdataBANK0
   558  0017  0084               	movwf	4
   559  0018  120A  118A  21EB  120A  118A  	fcall	init_ram0
   560                           
   561                           ; Initialize objects allocated to COMMON
   562  001D  120A  118A  2241  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   563  0022  00FA               	movwf	__pdataCOMMON& (0+127)
   564                           
   565                           ; Clear objects allocated to BANK0
   566  0023  303E               	movlw	low __pbssBANK0
   567  0024  0084               	movwf	4
   568  0025  305B               	movlw	low (__pbssBANK0+29)
   569  0026  120A  118A  2231  120A  118A  	fcall	clear_ram0
   570                           
   571                           ; Clear objects allocated to COMMON
   572  002B  01F8               	clrf	__pbssCOMMON& (0+127)
   573  002C  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   574  002D                     end_of_initialization:	
   575                           ;End of C runtime variable initialization code
   576                           
   577  002D                     __end_of__initialization:
   578  002D  0183               	clrf	3
   579  002E  120A  118A  29AA   	ljmp	_main	;jump to C main() function
   580                           
   581                           	psect	bssCOMMON
   582  0078                     __pbssCOMMON:
   583  0078                     _temperatura:
   584  0078                     	ds	1
   585  0079                     _LecturaUSART:
   586  0079                     	ds	1
   587                           
   588                           	psect	dataCOMMON
   589  007A                     __pdataCOMMON:
   590  007A                     _AHT10_address:
   591  007A                     	ds	1
   592                           
   593                           	psect	bssBANK0
   594  003E                     __pbssBANK0:
   595  003E                     _datos:
   596  003E                     	ds	20
   597  0052                     _humeda1:
   598  0052                     	ds	3
   599  0055                     _tempera1:
   600  0055                     	ds	3
   601  0058                     _GetTempCmd:
   602  0058                     	ds	2
   603  005A                     _humedad:
   604  005A                     	ds	1
   605                           
   606                           	psect	dataBANK0
   607  005B                     __pdataBANK0:
   608  005B                     _eSensorMeasureCmd:
   609  005B                     	ds	3
   610  005E                     _eSensorNormalCmd:
   611  005E                     	ds	3
   612  0061                     _eSensorCalibrateCmd:
   613  0061                     	ds	3
   614  0064                     _GetRHumidityCmd:
   615  0064                     	ds	2
   616  0066                     _AHT10Address_High:
   617  0066                     	ds	2
   618  0068                     _AHT10Address_Low:
   619  0068                     	ds	2
   620  006A                     _eSensorResetCmd:
   621  006A                     	ds	1
   622                           
   623                           	psect	inittext
   624  01E7                     init_fetch0:	
   625                           ;	Called with low address in FSR and high address in W
   626                           
   627  01E7  087E               	movf	btemp,w
   628  01E8  008A               	movwf	10
   629  01E9  087F               	movf	btemp+1,w
   630  01EA  0082               	movwf	2
   631  01EB                     init_ram0:	
   632                           ;Called with:
   633                           ;	high address of idata address in btemp 
   634                           ;	low address of idata address in btemp+1 
   635                           ;	low address of data in FSR
   636                           ;	high address + 1 of data in btemp-1
   637                           
   638  01EB  120A  118A  21E7  120A  118A  	fcall	init_fetch0
   639  01F0  0080               	movwf	0
   640  01F1  0A84               	incf	4,f
   641  01F2  0804               	movf	4,w
   642  01F3  067D               	xorwf	btemp+-1,w
   643  01F4  1903               	btfsc	3,2
   644  01F5  3400               	retlw	0
   645  01F6  0AFF               	incf	btemp+1,f
   646  01F7  1903               	btfsc	3,2
   647  01F8  0AFE               	incf	btemp,f
   648  01F9  29EB               	goto	init_ram0
   649                           
   650                           	psect	clrtext
   651  0231                     clear_ram0:	
   652                           ;	Called with FSR containing the base address, and
   653                           ;	W with the last address+1
   654                           
   655  0231  0064               	clrwdt	;clear the watchdog before getting into this loop
   656  0232                     clrloop0:
   657  0232  0180               	clrf	0	;clear RAM location pointed to by FSR
   658  0233  0A84               	incf	4,f	;increment pointer
   659  0234  0604               	xorwf	4,w	;XOR with final address
   660  0235  1903               	btfsc	3,2	;have we reached the end yet?
   661  0236  3400               	retlw	0	;all done for this memory range, return
   662  0237  0604               	xorwf	4,w	;XOR again to restore value
   663  0238  2A32               	goto	clrloop0	;do the next byte
   664                           
   665                           	psect	cstackCOMMON
   666  0070                     __pcstackCOMMON:
   667  0070                     ?_Read_USART:
   668  0070                     ??_Read_USART:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_Write_USART:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_configIO:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_ISR:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ??_ISR:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_main:	
   684                           ; 1 bytes @ 0x0
   685                           
   686                           
   687                           ; 1 bytes @ 0x0
   688  0070                     	ds	3
   689  0073                     ??_Write_USART:
   690  0073                     ??_configIO:	
   691                           ; 1 bytes @ 0x3
   692                           
   693  0073                     ??___aldiv:	
   694                           ; 1 bytes @ 0x3
   695                           
   696  0073                     Write_USART@a:	
   697                           ; 1 bytes @ 0x3
   698                           
   699                           
   700                           ; 1 bytes @ 0x3
   701  0073                     	ds	1
   702  0074                     USART_Init@x:
   703                           
   704                           ; 2 bytes @ 0x4
   705  0074                     	ds	2
   706  0076                     ??_main:
   707                           
   708                           ; 1 bytes @ 0x6
   709  0076                     	ds	2
   710                           
   711                           	psect	cstackBANK0
   712  0020                     __pcstackBANK0:
   713  0020                     ?___aldiv:
   714  0020                     ___aldiv@divisor:	
   715                           ; 4 bytes @ 0x0
   716                           
   717                           
   718                           ; 4 bytes @ 0x0
   719  0020                     	ds	4
   720  0024                     ___aldiv@dividend:
   721                           
   722                           ; 4 bytes @ 0x4
   723  0024                     	ds	4
   724  0028                     ___aldiv@counter:
   725                           
   726                           ; 1 bytes @ 0x8
   727  0028                     	ds	1
   728  0029                     ___aldiv@sign:
   729                           
   730                           ; 1 bytes @ 0x9
   731  0029                     	ds	1
   732  002A                     ___aldiv@quotient:
   733                           
   734                           ; 4 bytes @ 0xA
   735  002A                     	ds	4
   736  002E                     ?_USART_Init:
   737  002E                     USART_Init@baudrate:	
   738                           ; 1 bytes @ 0xE
   739                           
   740                           
   741                           ; 4 bytes @ 0xE
   742  002E                     	ds	4
   743  0032                     ??_USART_Init:
   744                           
   745                           ; 1 bytes @ 0x12
   746  0032                     	ds	12
   747                           
   748                           	psect	maintext
   749  01AA                     __pmaintext:	
   750 ;;
   751 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   752 ;;
   753 ;; *************** function _main *****************
   754 ;; Defined at:
   755 ;;		line 64 in file "pic16f.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, status,2, status,0, pclath, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : B00/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   769 ;;      Params:         0       0       0       0       0
   770 ;;      Locals:         0       0       0       0       0
   771 ;;      Temps:          2       0       0       0       0
   772 ;;      Totals:         2       0       0       0       0
   773 ;;Total ram usage:        2 bytes
   774 ;; Hardware stack levels required when called:    4
   775 ;; This function calls:
   776 ;;		_USART_Init
   777 ;;		_Write_USART
   778 ;;		_configIO
   779 ;; This function is called by:
   780 ;;		Startup code after reset
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           
   785                           ;psect for function _main
   786  01AA                     _main:
   787  01AA                     l1476:	
   788                           ;incstack = 0
   789                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   790                           
   791                           
   792                           ;pic16f.c: 65:     configIO();
   793  01AA  120A  118A  21FA  120A  118A  	fcall	_configIO
   794  01AF                     l1478:
   795                           
   796                           ;pic16f.c: 66:     USART_Init(9600);
   797  01AF  3000               	movlw	0
   798  01B0  1283               	bcf	3,5	;RP0=0, select bank0
   799  01B1  1303               	bcf	3,6	;RP1=0, select bank0
   800  01B2  00B1               	movwf	USART_Init@baudrate+3
   801  01B3  3000               	movlw	0
   802  01B4  00B0               	movwf	USART_Init@baudrate+2
   803  01B5  3025               	movlw	37
   804  01B6  00AF               	movwf	USART_Init@baudrate+1
   805  01B7  3080               	movlw	128
   806  01B8  00AE               	movwf	USART_Init@baudrate
   807  01B9  120A  118A  2031  120A  118A  	fcall	_USART_Init
   808  01BE                     l1480:
   809                           
   810                           ;pic16f.c: 74:         Write_USART("a");
   811  01BE  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   812  01BF  120A  118A  221D  120A  118A  	fcall	_Write_USART
   813  01C4                     l1482:
   814                           
   815                           ;pic16f.c: 85:         _delay((unsigned long)((1000)*(400000/4000.0)));
   816  01C4  3082               	movlw	130
   817  01C5  00F7               	movwf	??_main+1
   818  01C6  30DD               	movlw	221
   819  01C7  00F6               	movwf	??_main
   820  01C8                     u1527:
   821  01C8  0BF6               	decfsz	??_main,f
   822  01C9  29C8               	goto	u1527
   823  01CA  0BF7               	decfsz	??_main+1,f
   824  01CB  29C8               	goto	u1527
   825  01CC  29CD               	nop2
   826  01CD  29BE               	goto	l1480
   827  01CE  120A  118A  280C   	ljmp	start
   828  01D1                     __end_of_main:
   829                           
   830                           	psect	text1
   831  01FA                     __ptext1:	
   832 ;; *************** function _configIO *****************
   833 ;; Defined at:
   834 ;;		line 45 in file "pic16f.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		status,2
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   848 ;;      Params:         0       0       0       0       0
   849 ;;      Locals:         0       0       0       0       0
   850 ;;      Temps:          0       0       0       0       0
   851 ;;      Totals:         0       0       0       0       0
   852 ;;Total ram usage:        0 bytes
   853 ;; Hardware stack levels used:    1
   854 ;; Hardware stack levels required when called:    2
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_main
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           
   863                           ;psect for function _configIO
   864  01FA                     _configIO:
   865  01FA                     l794:	
   866                           ;incstack = 0
   867                           ; Regs used in _configIO: [status,2]
   868                           
   869                           
   870                           ;pic16f.c: 46:     TRISB=0;
   871  01FA  1683               	bsf	3,5	;RP0=1, select bank1
   872  01FB  1303               	bcf	3,6	;RP1=0, select bank1
   873  01FC  0186               	clrf	6	;volatile
   874                           
   875                           ;pic16f.c: 47:     ANSEL=0;
   876  01FD  1683               	bsf	3,5	;RP0=1, select bank3
   877  01FE  1703               	bsf	3,6	;RP1=1, select bank3
   878  01FF  0188               	clrf	8	;volatile
   879                           
   880                           ;pic16f.c: 48:     ANSELH=0;
   881  0200  0189               	clrf	9	;volatile
   882                           
   883                           ;pic16f.c: 49:     PORTB=0;
   884  0201  1283               	bcf	3,5	;RP0=0, select bank0
   885  0202  1303               	bcf	3,6	;RP1=0, select bank0
   886  0203  0186               	clrf	6	;volatile
   887  0204                     l796:
   888                           
   889                           ;pic16f.c: 51:     INTCONbits.PEIE=1;
   890  0204  170B               	bsf	11,6	;volatile
   891  0205                     l798:
   892                           
   893                           ;pic16f.c: 52:     PIE1bits.RCIE=1;
   894  0205  1683               	bsf	3,5	;RP0=1, select bank1
   895  0206  1303               	bcf	3,6	;RP1=0, select bank1
   896  0207  168C               	bsf	12,5	;volatile
   897  0208                     l800:
   898                           
   899                           ;pic16f.c: 53:     PIR1bits.RCIF=0;
   900  0208  1283               	bcf	3,5	;RP0=0, select bank0
   901  0209  1303               	bcf	3,6	;RP1=0, select bank0
   902  020A  128C               	bcf	12,5	;volatile
   903  020B                     l802:
   904                           
   905                           ;pic16f.c: 54:     INTCONbits.GIE=1;
   906  020B  178B               	bsf	11,7	;volatile
   907  020C                     l43:
   908  020C  0008               	return
   909  020D                     __end_of_configIO:
   910                           
   911                           	psect	text2
   912  021D                     __ptext2:	
   913 ;; *************** function _Write_USART *****************
   914 ;; Defined at:
   915 ;;		line 30 in file "USART.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  a               1    wreg     unsigned char 
   918 ;; Auto vars:     Size  Location     Type
   919 ;;  a               1    3[COMMON] unsigned char 
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   929 ;;      Params:         0       0       0       0       0
   930 ;;      Locals:         1       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0
   932 ;;      Totals:         1       0       0       0       0
   933 ;;Total ram usage:        1 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; Hardware stack levels required when called:    2
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		_main
   940 ;;		_Write_USART_String
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           
   945                           ;psect for function _Write_USART
   946  021D                     _Write_USART:
   947                           
   948                           ;incstack = 0
   949                           ; Regs used in _Write_USART: [wreg]
   950                           ;Write_USART@a stored from wreg
   951  021D  00F3               	movwf	Write_USART@a
   952  021E                     l836:
   953  021E                     l144:	
   954                           ;USART.c: 31:     while(!TRMT);
   955                           
   956  021E  1683               	bsf	3,5	;RP0=1, select bank1
   957  021F  1303               	bcf	3,6	;RP1=0, select bank1
   958  0220  1C98               	btfss	24,1	;volatile
   959  0221  2A23               	goto	u221
   960  0222  2A24               	goto	u220
   961  0223                     u221:
   962  0223  2A1E               	goto	l144
   963  0224                     u220:
   964  0224                     l838:
   965                           
   966                           ;USART.c: 32:     TXREG=a;
   967  0224  0873               	movf	Write_USART@a,w
   968  0225  1283               	bcf	3,5	;RP0=0, select bank0
   969  0226  1303               	bcf	3,6	;RP1=0, select bank0
   970  0227  0099               	movwf	25	;volatile
   971  0228                     l147:
   972  0228  0008               	return
   973  0229                     __end_of_Write_USART:
   974                           
   975                           	psect	text3
   976  0031                     __ptext3:	
   977 ;; *************** function _USART_Init *****************
   978 ;; Defined at:
   979 ;;		line 9 in file "USART.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  baudrate        4   14[BANK0 ] const long 
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  x               2    4[COMMON] unsigned int 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      unsigned char 
   986 ;; Registers used:
   987 ;;		wreg, status,2, status,0, pclath, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   993 ;;      Params:         0       4       0       0       0
   994 ;;      Locals:         2       0       0       0       0
   995 ;;      Temps:          0      12       0       0       0
   996 ;;      Totals:         2      16       0       0       0
   997 ;;Total ram usage:       18 bytes
   998 ;; Hardware stack levels used:    1
   999 ;; Hardware stack levels required when called:    3
  1000 ;; This function calls:
  1001 ;;		___aldiv
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _USART_Init
  1009  0031                     _USART_Init:
  1010  0031                     l1450:	
  1011                           ;incstack = 0
  1012                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  1013                           
  1014                           
  1015                           ;USART.c: 10:   unsigned int x;;USART.c: 11:   x = (400000 - baudrate*64)/(baudrate*64);
  1016  0031  1283               	bcf	3,5	;RP0=0, select bank0
  1017  0032  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0033  082E               	movf	USART_Init@baudrate,w
  1019  0034  00B2               	movwf	??_USART_Init
  1020  0035  082F               	movf	USART_Init@baudrate+1,w
  1021  0036  00B3               	movwf	??_USART_Init+1
  1022  0037  0830               	movf	USART_Init@baudrate+2,w
  1023  0038  00B4               	movwf	??_USART_Init+2
  1024  0039  0831               	movf	USART_Init@baudrate+3,w
  1025  003A  00B5               	movwf	??_USART_Init+3
  1026  003B  3006               	movlw	6
  1027  003C                     u1445:
  1028  003C  1003               	clrc
  1029  003D  0DB2               	rlf	??_USART_Init,f
  1030  003E  0DB3               	rlf	??_USART_Init+1,f
  1031  003F  0DB4               	rlf	??_USART_Init+2,f
  1032  0040  0DB5               	rlf	??_USART_Init+3,f
  1033  0041                     u1440:
  1034  0041  3EFF               	addlw	-1
  1035  0042  1D03               	skipz
  1036  0043  283C               	goto	u1445
  1037  0044  0835               	movf	??_USART_Init+3,w
  1038  0045  00A3               	movwf	___aldiv@divisor+3
  1039  0046  0834               	movf	??_USART_Init+2,w
  1040  0047  00A2               	movwf	___aldiv@divisor+2
  1041  0048  0833               	movf	??_USART_Init+1,w
  1042  0049  00A1               	movwf	___aldiv@divisor+1
  1043  004A  0832               	movf	??_USART_Init,w
  1044  004B  00A0               	movwf	___aldiv@divisor
  1045  004C  082E               	movf	USART_Init@baudrate,w
  1046  004D  00B6               	movwf	??_USART_Init+4
  1047  004E  082F               	movf	USART_Init@baudrate+1,w
  1048  004F  00B7               	movwf	??_USART_Init+5
  1049  0050  0830               	movf	USART_Init@baudrate+2,w
  1050  0051  00B8               	movwf	??_USART_Init+6
  1051  0052  0831               	movf	USART_Init@baudrate+3,w
  1052  0053  00B9               	movwf	??_USART_Init+7
  1053  0054  3006               	movlw	6
  1054  0055                     u1455:
  1055  0055  1003               	clrc
  1056  0056  0DB6               	rlf	??_USART_Init+4,f
  1057  0057  0DB7               	rlf	??_USART_Init+5,f
  1058  0058  0DB8               	rlf	??_USART_Init+6,f
  1059  0059  0DB9               	rlf	??_USART_Init+7,f
  1060  005A                     u1450:
  1061  005A  3EFF               	addlw	-1
  1062  005B  1D03               	skipz
  1063  005C  2855               	goto	u1455
  1064  005D  3080               	movlw	128
  1065  005E  00BA               	movwf	??_USART_Init+8
  1066  005F  301A               	movlw	26
  1067  0060  00BB               	movwf	??_USART_Init+9
  1068  0061  3006               	movlw	6
  1069  0062  00BC               	movwf	??_USART_Init+10
  1070  0063  3000               	movlw	0
  1071  0064  00BD               	movwf	??_USART_Init+11
  1072  0065  0836               	movf	??_USART_Init+4,w
  1073  0066  02BA               	subwf	??_USART_Init+8,f
  1074  0067  0837               	movf	??_USART_Init+5,w
  1075  0068  1C03               	skipc
  1076  0069  0F37               	incfsz	??_USART_Init+5,w
  1077  006A  286C               	goto	u1461
  1078  006B  286D               	goto	u1462
  1079  006C                     u1461:
  1080  006C  02BB               	subwf	??_USART_Init+9,f
  1081  006D                     u1462:
  1082  006D  0838               	movf	??_USART_Init+6,w
  1083  006E  1C03               	skipc
  1084  006F  0F38               	incfsz	??_USART_Init+6,w
  1085  0070  2872               	goto	u1463
  1086  0071  2873               	goto	u1464
  1087  0072                     u1463:
  1088  0072  02BC               	subwf	??_USART_Init+10,f
  1089  0073                     u1464:
  1090  0073  0839               	movf	??_USART_Init+7,w
  1091  0074  1C03               	skipc
  1092  0075  0F39               	incfsz	??_USART_Init+7,w
  1093  0076  2878               	goto	u1465
  1094  0077  2879               	goto	u1466
  1095  0078                     u1465:
  1096  0078  02BD               	subwf	??_USART_Init+11,f
  1097  0079                     u1466:
  1098  0079  083D               	movf	??_USART_Init+11,w
  1099  007A  00A7               	movwf	___aldiv@dividend+3
  1100  007B  083C               	movf	??_USART_Init+10,w
  1101  007C  00A6               	movwf	___aldiv@dividend+2
  1102  007D  083B               	movf	??_USART_Init+9,w
  1103  007E  00A5               	movwf	___aldiv@dividend+1
  1104  007F  083A               	movf	??_USART_Init+8,w
  1105  0080  00A4               	movwf	___aldiv@dividend
  1106  0081  120A  118A  210D  120A  118A  	fcall	___aldiv
  1107  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0088  0821               	movf	?___aldiv+1,w
  1110  0089  00F5               	movwf	USART_Init@x+1
  1111  008A  0820               	movf	?___aldiv,w
  1112  008B  00F4               	movwf	USART_Init@x
  1113  008C                     l1452:
  1114                           
  1115                           ;USART.c: 12:   if(x>255)
  1116  008C  3001               	movlw	1
  1117  008D  0275               	subwf	USART_Init@x+1,w
  1118  008E  3000               	movlw	0
  1119  008F  1903               	skipnz
  1120  0090  0274               	subwf	USART_Init@x,w
  1121  0091  1C03               	skipc
  1122  0092  2894               	goto	u1471
  1123  0093  2895               	goto	u1470
  1124  0094                     u1471:
  1125  0094  28F1               	goto	l1458
  1126  0095                     u1470:
  1127  0095                     l1454:
  1128                           
  1129                           ;USART.c: 13:   {;USART.c: 14:     x = (400000 - baudrate*16)/(baudrate*16);
  1130  0095  082E               	movf	USART_Init@baudrate,w
  1131  0096  00B2               	movwf	??_USART_Init
  1132  0097  082F               	movf	USART_Init@baudrate+1,w
  1133  0098  00B3               	movwf	??_USART_Init+1
  1134  0099  0830               	movf	USART_Init@baudrate+2,w
  1135  009A  00B4               	movwf	??_USART_Init+2
  1136  009B  0831               	movf	USART_Init@baudrate+3,w
  1137  009C  00B5               	movwf	??_USART_Init+3
  1138  009D  3004               	movlw	4
  1139  009E                     u1485:
  1140  009E  1003               	clrc
  1141  009F  0DB2               	rlf	??_USART_Init,f
  1142  00A0  0DB3               	rlf	??_USART_Init+1,f
  1143  00A1  0DB4               	rlf	??_USART_Init+2,f
  1144  00A2  0DB5               	rlf	??_USART_Init+3,f
  1145  00A3                     u1480:
  1146  00A3  3EFF               	addlw	-1
  1147  00A4  1D03               	skipz
  1148  00A5  289E               	goto	u1485
  1149  00A6  0835               	movf	??_USART_Init+3,w
  1150  00A7  00A3               	movwf	___aldiv@divisor+3
  1151  00A8  0834               	movf	??_USART_Init+2,w
  1152  00A9  00A2               	movwf	___aldiv@divisor+2
  1153  00AA  0833               	movf	??_USART_Init+1,w
  1154  00AB  00A1               	movwf	___aldiv@divisor+1
  1155  00AC  0832               	movf	??_USART_Init,w
  1156  00AD  00A0               	movwf	___aldiv@divisor
  1157  00AE  082E               	movf	USART_Init@baudrate,w
  1158  00AF  00B6               	movwf	??_USART_Init+4
  1159  00B0  082F               	movf	USART_Init@baudrate+1,w
  1160  00B1  00B7               	movwf	??_USART_Init+5
  1161  00B2  0830               	movf	USART_Init@baudrate+2,w
  1162  00B3  00B8               	movwf	??_USART_Init+6
  1163  00B4  0831               	movf	USART_Init@baudrate+3,w
  1164  00B5  00B9               	movwf	??_USART_Init+7
  1165  00B6  3004               	movlw	4
  1166  00B7                     u1495:
  1167  00B7  1003               	clrc
  1168  00B8  0DB6               	rlf	??_USART_Init+4,f
  1169  00B9  0DB7               	rlf	??_USART_Init+5,f
  1170  00BA  0DB8               	rlf	??_USART_Init+6,f
  1171  00BB  0DB9               	rlf	??_USART_Init+7,f
  1172  00BC                     u1490:
  1173  00BC  3EFF               	addlw	-1
  1174  00BD  1D03               	skipz
  1175  00BE  28B7               	goto	u1495
  1176  00BF  3080               	movlw	128
  1177  00C0  00BA               	movwf	??_USART_Init+8
  1178  00C1  301A               	movlw	26
  1179  00C2  00BB               	movwf	??_USART_Init+9
  1180  00C3  3006               	movlw	6
  1181  00C4  00BC               	movwf	??_USART_Init+10
  1182  00C5  3000               	movlw	0
  1183  00C6  00BD               	movwf	??_USART_Init+11
  1184  00C7  0836               	movf	??_USART_Init+4,w
  1185  00C8  02BA               	subwf	??_USART_Init+8,f
  1186  00C9  0837               	movf	??_USART_Init+5,w
  1187  00CA  1C03               	skipc
  1188  00CB  0F37               	incfsz	??_USART_Init+5,w
  1189  00CC  28CE               	goto	u1501
  1190  00CD  28CF               	goto	u1502
  1191  00CE                     u1501:
  1192  00CE  02BB               	subwf	??_USART_Init+9,f
  1193  00CF                     u1502:
  1194  00CF  0838               	movf	??_USART_Init+6,w
  1195  00D0  1C03               	skipc
  1196  00D1  0F38               	incfsz	??_USART_Init+6,w
  1197  00D2  28D4               	goto	u1503
  1198  00D3  28D5               	goto	u1504
  1199  00D4                     u1503:
  1200  00D4  02BC               	subwf	??_USART_Init+10,f
  1201  00D5                     u1504:
  1202  00D5  0839               	movf	??_USART_Init+7,w
  1203  00D6  1C03               	skipc
  1204  00D7  0F39               	incfsz	??_USART_Init+7,w
  1205  00D8  28DA               	goto	u1505
  1206  00D9  28DB               	goto	u1506
  1207  00DA                     u1505:
  1208  00DA  02BD               	subwf	??_USART_Init+11,f
  1209  00DB                     u1506:
  1210  00DB  083D               	movf	??_USART_Init+11,w
  1211  00DC  00A7               	movwf	___aldiv@dividend+3
  1212  00DD  083C               	movf	??_USART_Init+10,w
  1213  00DE  00A6               	movwf	___aldiv@dividend+2
  1214  00DF  083B               	movf	??_USART_Init+9,w
  1215  00E0  00A5               	movwf	___aldiv@dividend+1
  1216  00E1  083A               	movf	??_USART_Init+8,w
  1217  00E2  00A4               	movwf	___aldiv@dividend
  1218  00E3  120A  118A  210D  120A  118A  	fcall	___aldiv
  1219  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1220  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1221  00EA  0821               	movf	?___aldiv+1,w
  1222  00EB  00F5               	movwf	USART_Init@x+1
  1223  00EC  0820               	movf	?___aldiv,w
  1224  00ED  00F4               	movwf	USART_Init@x
  1225  00EE                     l1456:
  1226                           
  1227                           ;USART.c: 15:     BRGH = 1;
  1228  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  1229  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  1230  00F0  1518               	bsf	24,2	;volatile
  1231  00F1                     l1458:
  1232                           
  1233                           ;USART.c: 17:   if(x<256)
  1234  00F1  3001               	movlw	1
  1235  00F2  0275               	subwf	USART_Init@x+1,w
  1236  00F3  3000               	movlw	0
  1237  00F4  1903               	skipnz
  1238  00F5  0274               	subwf	USART_Init@x,w
  1239  00F6  1803               	skipnc
  1240  00F7  28F9               	goto	u1511
  1241  00F8  28FA               	goto	u1510
  1242  00F9                     u1511:
  1243  00F9  290C               	goto	l141
  1244  00FA                     u1510:
  1245  00FA                     l1460:
  1246                           
  1247                           ;USART.c: 18:   {;USART.c: 19:     SPBRG = x;
  1248  00FA  0874               	movf	USART_Init@x,w
  1249  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  1250  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  1251  00FD  0099               	movwf	25	;volatile
  1252  00FE                     l1462:
  1253                           
  1254                           ;USART.c: 20:     SYNC = 0;
  1255  00FE  1218               	bcf	24,4	;volatile
  1256  00FF                     l1464:
  1257                           
  1258                           ;USART.c: 21:     SPEN = 1;
  1259  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0101  1798               	bsf	24,7	;volatile
  1262  0102                     l1466:
  1263                           
  1264                           ;USART.c: 22:     TRISC7 = 1;
  1265  0102  1683               	bsf	3,5	;RP0=1, select bank1
  1266  0103  1303               	bcf	3,6	;RP1=0, select bank1
  1267  0104  1787               	bsf	7,7	;volatile
  1268  0105                     l1468:
  1269                           
  1270                           ;USART.c: 23:     TRISC6 = 0;
  1271  0105  1307               	bcf	7,6	;volatile
  1272  0106                     l1470:
  1273                           
  1274                           ;USART.c: 24:     CREN = 1;
  1275  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0108  1618               	bsf	24,4	;volatile
  1278  0109                     l1472:
  1279                           
  1280                           ;USART.c: 25:     TXEN = 1;
  1281  0109  1683               	bsf	3,5	;RP0=1, select bank1
  1282  010A  1303               	bcf	3,6	;RP1=0, select bank1
  1283  010B  1698               	bsf	24,5	;volatile
  1284  010C                     l141:
  1285  010C  0008               	return
  1286  010D                     __end_of_USART_Init:
  1287                           
  1288                           	psect	text4
  1289  010D                     __ptext4:	
  1290 ;; *************** function ___aldiv *****************
  1291 ;; Defined at:
  1292 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\aldiv.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  divisor         4    0[BANK0 ] long 
  1295 ;;  dividend        4    4[BANK0 ] long 
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  quotient        4   10[BANK0 ] long 
  1298 ;;  sign            1    9[BANK0 ] unsigned char 
  1299 ;;  counter         1    8[BANK0 ] unsigned char 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  4    0[BANK0 ] long 
  1302 ;; Registers used:
  1303 ;;		wreg, status,2, status,0
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1309 ;;      Params:         0       8       0       0       0
  1310 ;;      Locals:         0       6       0       0       0
  1311 ;;      Temps:          1       0       0       0       0
  1312 ;;      Totals:         1      14       0       0       0
  1313 ;;Total ram usage:       15 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    2
  1316 ;; This function calls:
  1317 ;;		Nothing
  1318 ;; This function is called by:
  1319 ;;		_USART_Init
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           
  1324                           ;psect for function ___aldiv
  1325  010D                     ___aldiv:
  1326  010D                     l1410:	
  1327                           ;incstack = 0
  1328                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1329                           
  1330  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1331  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1332  010F  01A9               	clrf	___aldiv@sign
  1333  0110                     l1412:
  1334  0110  1FA3               	btfss	___aldiv@divisor+3,7
  1335  0111  2913               	goto	u1341
  1336  0112  2914               	goto	u1340
  1337  0113                     u1341:
  1338  0113  2921               	goto	l376
  1339  0114                     u1340:
  1340  0114                     l1414:
  1341  0114  09A0               	comf	___aldiv@divisor,f
  1342  0115  09A1               	comf	___aldiv@divisor+1,f
  1343  0116  09A2               	comf	___aldiv@divisor+2,f
  1344  0117  09A3               	comf	___aldiv@divisor+3,f
  1345  0118  0AA0               	incf	___aldiv@divisor,f
  1346  0119  1903               	skipnz
  1347  011A  0AA1               	incf	___aldiv@divisor+1,f
  1348  011B  1903               	skipnz
  1349  011C  0AA2               	incf	___aldiv@divisor+2,f
  1350  011D  1903               	skipnz
  1351  011E  0AA3               	incf	___aldiv@divisor+3,f
  1352  011F  01A9               	clrf	___aldiv@sign
  1353  0120  0AA9               	incf	___aldiv@sign,f
  1354  0121                     l376:
  1355  0121  1FA7               	btfss	___aldiv@dividend+3,7
  1356  0122  2924               	goto	u1351
  1357  0123  2925               	goto	u1350
  1358  0124                     u1351:
  1359  0124  2934               	goto	l1420
  1360  0125                     u1350:
  1361  0125                     l1416:
  1362  0125  09A4               	comf	___aldiv@dividend,f
  1363  0126  09A5               	comf	___aldiv@dividend+1,f
  1364  0127  09A6               	comf	___aldiv@dividend+2,f
  1365  0128  09A7               	comf	___aldiv@dividend+3,f
  1366  0129  0AA4               	incf	___aldiv@dividend,f
  1367  012A  1903               	skipnz
  1368  012B  0AA5               	incf	___aldiv@dividend+1,f
  1369  012C  1903               	skipnz
  1370  012D  0AA6               	incf	___aldiv@dividend+2,f
  1371  012E  1903               	skipnz
  1372  012F  0AA7               	incf	___aldiv@dividend+3,f
  1373  0130                     l1418:
  1374  0130  3001               	movlw	1
  1375  0131  00F3               	movwf	??___aldiv
  1376  0132  0873               	movf	??___aldiv,w
  1377  0133  06A9               	xorwf	___aldiv@sign,f
  1378  0134                     l1420:
  1379  0134  3000               	movlw	0
  1380  0135  00AD               	movwf	___aldiv@quotient+3
  1381  0136  3000               	movlw	0
  1382  0137  00AC               	movwf	___aldiv@quotient+2
  1383  0138  3000               	movlw	0
  1384  0139  00AB               	movwf	___aldiv@quotient+1
  1385  013A  3000               	movlw	0
  1386  013B  00AA               	movwf	___aldiv@quotient
  1387  013C                     l1422:
  1388  013C  0823               	movf	___aldiv@divisor+3,w
  1389  013D  0422               	iorwf	___aldiv@divisor+2,w
  1390  013E  0421               	iorwf	___aldiv@divisor+1,w
  1391  013F  0420               	iorwf	___aldiv@divisor,w
  1392  0140  1903               	skipnz
  1393  0141  2943               	goto	u1361
  1394  0142  2944               	goto	u1360
  1395  0143                     u1361:
  1396  0143  2991               	goto	l1442
  1397  0144                     u1360:
  1398  0144                     l1424:
  1399  0144  01A8               	clrf	___aldiv@counter
  1400  0145  0AA8               	incf	___aldiv@counter,f
  1401  0146  2954               	goto	l1428
  1402  0147                     l1426:
  1403  0147  3001               	movlw	1
  1404  0148  00F3               	movwf	??___aldiv
  1405  0149                     u1375:
  1406  0149  1003               	clrc
  1407  014A  0DA0               	rlf	___aldiv@divisor,f
  1408  014B  0DA1               	rlf	___aldiv@divisor+1,f
  1409  014C  0DA2               	rlf	___aldiv@divisor+2,f
  1410  014D  0DA3               	rlf	___aldiv@divisor+3,f
  1411  014E  0BF3               	decfsz	??___aldiv,f
  1412  014F  2949               	goto	u1375
  1413  0150  3001               	movlw	1
  1414  0151  00F3               	movwf	??___aldiv
  1415  0152  0873               	movf	??___aldiv,w
  1416  0153  07A8               	addwf	___aldiv@counter,f
  1417  0154                     l1428:
  1418  0154  1FA3               	btfss	___aldiv@divisor+3,7
  1419  0155  2957               	goto	u1381
  1420  0156  2958               	goto	u1380
  1421  0157                     u1381:
  1422  0157  2947               	goto	l1426
  1423  0158                     u1380:
  1424  0158                     l1430:
  1425  0158  3001               	movlw	1
  1426  0159  00F3               	movwf	??___aldiv
  1427  015A                     u1395:
  1428  015A  1003               	clrc
  1429  015B  0DAA               	rlf	___aldiv@quotient,f
  1430  015C  0DAB               	rlf	___aldiv@quotient+1,f
  1431  015D  0DAC               	rlf	___aldiv@quotient+2,f
  1432  015E  0DAD               	rlf	___aldiv@quotient+3,f
  1433  015F  0BF3               	decfsz	??___aldiv,f
  1434  0160  295A               	goto	u1395
  1435  0161                     l1432:
  1436  0161  0823               	movf	___aldiv@divisor+3,w
  1437  0162  0227               	subwf	___aldiv@dividend+3,w
  1438  0163  1D03               	skipz
  1439  0164  296F               	goto	u1405
  1440  0165  0822               	movf	___aldiv@divisor+2,w
  1441  0166  0226               	subwf	___aldiv@dividend+2,w
  1442  0167  1D03               	skipz
  1443  0168  296F               	goto	u1405
  1444  0169  0821               	movf	___aldiv@divisor+1,w
  1445  016A  0225               	subwf	___aldiv@dividend+1,w
  1446  016B  1D03               	skipz
  1447  016C  296F               	goto	u1405
  1448  016D  0820               	movf	___aldiv@divisor,w
  1449  016E  0224               	subwf	___aldiv@dividend,w
  1450  016F                     u1405:
  1451  016F  1C03               	skipc
  1452  0170  2972               	goto	u1401
  1453  0171  2973               	goto	u1400
  1454  0172                     u1401:
  1455  0172  2982               	goto	l1438
  1456  0173                     u1400:
  1457  0173                     l1434:
  1458  0173  0820               	movf	___aldiv@divisor,w
  1459  0174  02A4               	subwf	___aldiv@dividend,f
  1460  0175  0821               	movf	___aldiv@divisor+1,w
  1461  0176  1C03               	skipc
  1462  0177  0F21               	incfsz	___aldiv@divisor+1,w
  1463  0178  02A5               	subwf	___aldiv@dividend+1,f
  1464  0179  0822               	movf	___aldiv@divisor+2,w
  1465  017A  1C03               	skipc
  1466  017B  0F22               	incfsz	___aldiv@divisor+2,w
  1467  017C  02A6               	subwf	___aldiv@dividend+2,f
  1468  017D  0823               	movf	___aldiv@divisor+3,w
  1469  017E  1C03               	skipc
  1470  017F  0F23               	incfsz	___aldiv@divisor+3,w
  1471  0180  02A7               	subwf	___aldiv@dividend+3,f
  1472  0181                     l1436:
  1473  0181  142A               	bsf	___aldiv@quotient,0
  1474  0182                     l1438:
  1475  0182  3001               	movlw	1
  1476  0183                     u1415:
  1477  0183  1003               	clrc
  1478  0184  0CA3               	rrf	___aldiv@divisor+3,f
  1479  0185  0CA2               	rrf	___aldiv@divisor+2,f
  1480  0186  0CA1               	rrf	___aldiv@divisor+1,f
  1481  0187  0CA0               	rrf	___aldiv@divisor,f
  1482  0188  3EFF               	addlw	-1
  1483  0189  1D03               	skipz
  1484  018A  2983               	goto	u1415
  1485  018B                     l1440:
  1486  018B  3001               	movlw	1
  1487  018C  02A8               	subwf	___aldiv@counter,f
  1488  018D  1D03               	btfss	3,2
  1489  018E  2990               	goto	u1421
  1490  018F  2991               	goto	u1420
  1491  0190                     u1421:
  1492  0190  2958               	goto	l1430
  1493  0191                     u1420:
  1494  0191                     l1442:
  1495  0191  0829               	movf	___aldiv@sign,w
  1496  0192  1903               	btfsc	3,2
  1497  0193  2995               	goto	u1431
  1498  0194  2996               	goto	u1430
  1499  0195                     u1431:
  1500  0195  29A1               	goto	l1446
  1501  0196                     u1430:
  1502  0196                     l1444:
  1503  0196  09AA               	comf	___aldiv@quotient,f
  1504  0197  09AB               	comf	___aldiv@quotient+1,f
  1505  0198  09AC               	comf	___aldiv@quotient+2,f
  1506  0199  09AD               	comf	___aldiv@quotient+3,f
  1507  019A  0AAA               	incf	___aldiv@quotient,f
  1508  019B  1903               	skipnz
  1509  019C  0AAB               	incf	___aldiv@quotient+1,f
  1510  019D  1903               	skipnz
  1511  019E  0AAC               	incf	___aldiv@quotient+2,f
  1512  019F  1903               	skipnz
  1513  01A0  0AAD               	incf	___aldiv@quotient+3,f
  1514  01A1                     l1446:
  1515  01A1  082D               	movf	___aldiv@quotient+3,w
  1516  01A2  00A3               	movwf	?___aldiv+3
  1517  01A3  082C               	movf	___aldiv@quotient+2,w
  1518  01A4  00A2               	movwf	?___aldiv+2
  1519  01A5  082B               	movf	___aldiv@quotient+1,w
  1520  01A6  00A1               	movwf	?___aldiv+1
  1521  01A7  082A               	movf	___aldiv@quotient,w
  1522  01A8  00A0               	movwf	?___aldiv
  1523  01A9                     l386:
  1524  01A9  0008               	return
  1525  01AA                     __end_of___aldiv:
  1526                           
  1527                           	psect	text5
  1528  01D1                     __ptext5:	
  1529 ;; *************** function _ISR *****************
  1530 ;; Defined at:
  1531 ;;		line 57 in file "pic16f.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, pclath, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1545 ;;      Params:         0       0       0       0       0
  1546 ;;      Locals:         0       0       0       0       0
  1547 ;;      Temps:          3       0       0       0       0
  1548 ;;      Totals:         3       0       0       0       0
  1549 ;;Total ram usage:        3 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    1
  1552 ;; This function calls:
  1553 ;;		_Read_USART
  1554 ;; This function is called by:
  1555 ;;		Interrupt level 1
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           
  1560                           ;psect for function _ISR
  1561  01D1                     _ISR:
  1562  01D1                     i1l880:
  1563                           
  1564                           ;pic16f.c: 58:     if (RCIF==1){
  1565  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1566  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1567  01D3  1E8C               	btfss	12,5	;volatile
  1568  01D4  29D6               	goto	u25_21
  1569  01D5  29D7               	goto	u25_20
  1570  01D6                     u25_21:
  1571  01D6  29E0               	goto	i1l49
  1572  01D7                     u25_20:
  1573  01D7                     i1l882:
  1574                           
  1575                           ;pic16f.c: 59:         RCIF=0;
  1576  01D7  128C               	bcf	12,5	;volatile
  1577  01D8                     i1l884:
  1578                           
  1579                           ;pic16f.c: 60:         LecturaUSART=Read_USART();
  1580  01D8  120A  118A  2239  120A  118A  	fcall	_Read_USART
  1581  01DD  00F0               	movwf	??_ISR
  1582  01DE  0870               	movf	??_ISR,w
  1583  01DF  00F9               	movwf	_LecturaUSART
  1584  01E0                     i1l49:
  1585  01E0  0872               	movf	??_ISR+2,w
  1586  01E1  008A               	movwf	10
  1587  01E2  0E71               	swapf	??_ISR+1,w
  1588  01E3  0083               	movwf	3
  1589  01E4  0EFE               	swapf	btemp,f
  1590  01E5  0E7E               	swapf	btemp,w
  1591  01E6  0009               	retfie
  1592  01E7                     __end_of_ISR:
  1593                           
  1594                           	psect	intentry
  1595  0004                     __pintentry:	
  1596                           ;incstack = 0
  1597                           ; Regs used in _ISR: [wreg+pclath+cstack]
  1598                           
  1599  0004                     interrupt_function:
  1600  007E                     saved_w	set	btemp
  1601  0004  00FE               	movwf	btemp
  1602  0005  0E03               	swapf	3,w
  1603  0006  00F1               	movwf	??_ISR+1
  1604  0007  080A               	movf	10,w
  1605  0008  00F2               	movwf	??_ISR+2
  1606  0009  120A  118A  29D1   	ljmp	_ISR
  1607                           
  1608                           	psect	text6
  1609  0239                     __ptext6:	
  1610 ;; *************** function _Read_USART *****************
  1611 ;; Defined at:
  1612 ;;		line 40 in file "USART.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;		None
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      unsigned char 
  1619 ;; Registers used:
  1620 ;;		wreg
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1626 ;;      Params:         0       0       0       0       0
  1627 ;;      Locals:         0       0       0       0       0
  1628 ;;      Temps:          0       0       0       0       0
  1629 ;;      Totals:         0       0       0       0       0
  1630 ;;Total ram usage:        0 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_ISR
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           
  1640                           ;psect for function _Read_USART
  1641  0239                     _Read_USART:
  1642  0239                     i1l804:	
  1643                           ;incstack = 0
  1644                           ; Regs used in _Read_USART: [wreg]
  1645                           
  1646  0239                     i1l156:	
  1647                           ;USART.c: 41:   while(!RCIF);
  1648                           
  1649  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1650  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1651  023B  1E8C               	btfss	12,5	;volatile
  1652  023C  2A3E               	goto	u13_21
  1653  023D  2A3F               	goto	u13_20
  1654  023E                     u13_21:
  1655  023E  2A39               	goto	i1l156
  1656  023F                     u13_20:
  1657  023F                     i1l806:
  1658                           
  1659                           ;USART.c: 42:   return RCREG;
  1660  023F  081A               	movf	26,w	;volatile
  1661  0240                     i1l159:
  1662  0240  0008               	return
  1663  0241                     __end_of_Read_USART:
  1664  007E                     btemp	set	126	;btemp
  1665  007E                     wtemp0	set	126
  1666                           
  1667                           	psect	config
  1668                           
  1669                           ;Config register CONFIG1 @ 0x2007
  1670                           ;	Oscillator Selection bits
  1671                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1672                           ;	Watchdog Timer Enable bit
  1673                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1674                           ;	Power-up Timer Enable bit
  1675                           ;	PWRTE = OFF, PWRT disabled
  1676                           ;	RE3/MCLR pin function select bit
  1677                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1678                           ;	Code Protection bit
  1679                           ;	CP = OFF, Program memory code protection is disabled
  1680                           ;	Data Code Protection bit
  1681                           ;	CPD = OFF, Data memory code protection is disabled
  1682                           ;	Brown Out Reset Selection bits
  1683                           ;	BOREN = OFF, BOR disabled
  1684                           ;	Internal External Switchover bit
  1685                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1686                           ;	Fail-Safe Clock Monitor Enabled bit
  1687                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1688                           ;	Low Voltage Programming Enable bit
  1689                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1690                           ;	In-Circuit Debugger Mode bit
  1691                           ;	DEBUG = 0x1, unprogrammed default
  1692  2007                     	org	8199
  1693  2007  20D4               	dw	8404
  1694                           
  1695                           ;Config register CONFIG2 @ 0x2008
  1696                           ;	Brown-out Reset Selection bit
  1697                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1698                           ;	Flash Program Memory Self Write Enable bits
  1699                           ;	WRT = OFF, Write protection off
  1700  2008                     	org	8200
  1701  2008  3FFF               	dw	16383

Data Sizes:
    Strings     2
    Constant    0
    Data        17
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     30      75
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1008
                                              6 COMMON     2     2      0
                         _USART_Init
                        _Write_USART
                           _configIO
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART                                          1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          18    14      4     993
                                              4 COMMON     2     2      0
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     705
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (4) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Init
     ___aldiv
   _Write_USART
   _configIO

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      4B       5       93.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      56      12        0.0%
ABS                  0      0      56       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 05 23:30:38 2021

                      pc 0002                       l43 020C                       fsr 0004  
   __size_of_Write_USART 000C                      l141 010C                      l144 021E  
                    l147 0228                      l376 0121                      l800 0208  
                    l386 01A9                      l802 020B                      l836 021E  
                    l838 0224                      l794 01FA                      l796 0204  
                    l798 0205                      _GIE 005F                      u220 0224  
                    u221 0223                      _ISR 01D1                      indf 0000  
                   ?_ISR 0070                     l1410 010D                     l1420 0134  
                   l1412 0110                     l1430 0158                     l1422 013C  
                   l1414 0114                     l1440 018B                     l1432 0161  
                   l1424 0144                     l1416 0125                     l1434 0173  
                   l1426 0147                     l1442 0191                     l1418 0130  
                   l1450 0031                     l1444 0196                     l1436 0181  
                   l1428 0154                     l1460 00FA                     l1452 008C  
                   l1446 01A1                     l1438 0182                     l1470 0106  
                   l1462 00FE                     l1454 0095                     l1472 0109  
                   l1464 00FF                     l1456 00EE                     l1480 01BE  
                   l1466 0102                     l1458 00F1                     l1482 01C4  
                   l1468 0105                     l1476 01AA                     l1478 01AF  
                   STR_1 022F                     _BRGH 04C2                     _CREN 00C4  
                   u1400 0173                     u1401 0172                     u1420 0191  
                   u1340 0114                     u1421 0190                     u1405 016F  
                   u1341 0113                     u1501 00CE                     u1430 0196  
                   u1350 0125                     u1510 00FA                     u1502 00CF  
                   u1431 0195                     u1415 0183                     u1351 0124  
                   u1511 00F9                     u1503 00D4                     u1360 0144  
                   u1504 00D5                     u1440 0041                     u1361 0143  
                   u1505 00DA                     u1506 00DB                     u1450 005A  
                   u1380 0158                     u1381 0157                     u1461 006C  
                   u1445 003C                     u1470 0095                     u1462 006D  
                   u1375 0149                     u1471 0094                     u1463 0072  
                   u1455 0055                     u1527 01C8                     u1480 00A3  
                   u1464 0073                     u1465 0078                     u1490 00BC  
                   u1466 0079                     u1395 015A                     u1485 009E  
                   u1495 00B7                     _PEIE 005E                     _RCIF 0065  
                   i1l49 01E0                     _SPEN 00C7                     _TRMT 04C1  
                   _TXEN 04C5                     _SYNC 04C4                     _main 01AA  
                   btemp 007E                     start 000C                    ??_ISR 0070  
             _GetTempCmd 0058          __end_of___aldiv 01AA                    ?_main 0070  
                  _ANSEL 0188                    i1l156 0239                    i1l159 0240  
                  i1l804 0239                    i1l806 023F                    i1l880 01D1  
                  i1l882 01D7                    i1l884 01D8                    _RCREG 001A  
                  u13_20 023F                    u13_21 023E                    u25_20 01D7  
                  u25_21 01D6                    _SPBRG 0099                    _PORTB 0006  
                  _TRISB 0086                    _SSPIE 0463                    _SSPIF 0063  
                  _TXREG 0019                    _datos 003E          _GetRHumidityCmd 0064  
                  pclath 000A                    status 0003                    wtemp0 007E  
            ?_USART_Init 002E          __initialization 000F               _Read_USART 0239  
           __end_of_main 01D1                   ??_main 0076            _AHT10_address 007A  
                 _ANSELH 0189                   _SSPADD 0093                   _TRISC3 043B  
                 _TRISC4 043C                   _TRISC6 043E                   _TRISC7 043F  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of_configIO 020D  
              ??___aldiv 0073             __pdataCOMMON 007A                   saved_w 007E  
    __size_of_USART_Init 00DC  __end_of__initialization 002D              ?_Read_USART 0070  
         __pcstackCOMMON 0070             __pidataBANK0 020D             Write_USART@a 0073  
             __pbssBANK0 003E               __pmaintext 01AA            ??_Write_USART 0073  
             __pintentry 0004      __size_of_Read_USART 0008                  _SSPCON2 0091  
              ?_configIO 0070                  _SSPSTAT 0094               __stringtab 0229  
        _eSensorResetCmd 006A             ??_USART_Init 0032                  ___aldiv 010D  
                __ptext1 01FA                  __ptext2 021D                  __ptext3 0031  
                __ptext4 010D                  __ptext5 01D1                  __ptext6 0239  
           __size_of_ISR 0016      __end_of_Write_USART 0229                  _humeda1 0052  
                _humedad 005A         ___aldiv@dividend 0024       __end_of_USART_Init 010D  
             ??_configIO 0073                  clrloop0 0232     end_of_initialization 002D  
      _eSensorMeasureCmd 005B         ___aldiv@quotient 002A      _eSensorCalibrateCmd 0061  
              _TRISCbits 0087             _LecturaUSART 0079             ??_Read_USART 0070  
            _Write_USART 021D            __pidataCOMMON 0241              USART_Init@x 0074  
      _AHT10Address_High 0066      start_initialization 000F              __end_of_ISR 01E7  
     __end_of_Read_USART 0241               init_fetch0 01E7              __pdataBANK0 005B  
            __pbssCOMMON 0078                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_configIO 0013                 ?___aldiv 0020                __pstrings 0229  
        ___aldiv@divisor 0020        interrupt_function 0004          ___aldiv@counter 0028  
              clear_ram0 0231                 _PIE1bits 008C                 _PIR1bits 000C  
            __stringbase 022E       USART_Init@baudrate 002E         _eSensorNormalCmd 005E  
       _AHT10Address_Low 0068             ?_Write_USART 0070         __size_of___aldiv 009D  
     __end_of__stringtab 022F                 _configIO 01FA            __size_of_main 0027  
               _tempera1 0055               _INTCONbits 000B                 init_ram0 01EB  
               intlevel1 0000                stringcode 0229              _temperatura 0078  
               stringdir 0229                 stringtab 0229             ___aldiv@sign 0029  
            _SSPCON2bits 0091               _USART_Init 0031  
