

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 12:15:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  0088                     	;# 
   409  0089                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0094                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009A                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  009F                     	;# 
   432  0105                     	;# 
   433  0107                     	;# 
   434  0108                     	;# 
   435  0109                     	;# 
   436  010C                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  010F                     	;# 
   441  0185                     	;# 
   442  0187                     	;# 
   443  0188                     	;# 
   444  0189                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447                           
   448                           	psect	idataBANK0
   449  0564                     __pidataBANK0:
   450                           
   451                           ;initializer for _eSensorMeasureCmd
   452  0564  34AC               	retlw	172
   453  0565  3433               	retlw	51
   454  0566  3400               	retlw	0
   455                           
   456                           ;initializer for _eSensorNormalCmd
   457  0567  34A8               	retlw	168
   458  0568  3400               	retlw	0
   459  0569  3400               	retlw	0
   460                           
   461                           ;initializer for _eSensorCalibrateCmd
   462  056A  34E1               	retlw	225
   463  056B  3408               	retlw	8
   464  056C  3400               	retlw	0
   465                           
   466                           ;initializer for _GetRHumidityCmd
   467  056D  3401               	retlw	1
   468  056E  3400               	retlw	0
   469                           
   470                           ;initializer for _AHT10Address_High
   471  056F  3439               	retlw	57
   472  0570  3400               	retlw	0
   473                           
   474                           ;initializer for _AHT10Address_Low
   475  0571  3438               	retlw	56
   476  0572  3400               	retlw	0
   477                           
   478                           ;initializer for _AHT10_address
   479  0573  3438               	retlw	56
   480                           
   481                           ;initializer for _eSensorResetCmd
   482  0574  34BA               	retlw	186
   483  0019                     _TXREG	set	25
   484  001A                     _RCREG	set	26
   485  0018                     _RCSTAbits	set	24
   486  0013                     _SSPBUF	set	19
   487  0014                     _SSPCON	set	20
   488  0008                     _PORTDbits	set	8
   489  000C                     _PIR1bits	set	12
   490  000B                     _INTCONbits	set	11
   491  0008                     _PORTD	set	8
   492  0063                     _SSPIF	set	99
   493  005E                     _PEIE	set	94
   494  005F                     _GIE	set	95
   495  0099                     _SPBRG	set	153
   496  0098                     _TXSTAbits	set	152
   497  0091                     _SSPCON2bits	set	145
   498  0087                     _TRISCbits	set	135
   499  0094                     _SSPSTAT	set	148
   500  0093                     _SSPADD	set	147
   501  0091                     _SSPCON2	set	145
   502  008C                     _PIE1bits	set	140
   503  0088                     _TRISD	set	136
   504  0463                     _SSPIE	set	1123
   505  043C                     _TRISC4	set	1084
   506  043B                     _TRISC3	set	1083
   507  0189                     _ANSELH	set	393
   508  0188                     _ANSEL	set	392
   509                           
   510                           	psect	strings
   511  0003                     __pstrings:
   512  0003                     stringtab:
   513  0003                     __stringtab:
   514  0003                     stringcode:	
   515                           ;	String table - string pointers are 1 byte each
   516                           
   517  0003                     stringdir:
   518  0003  3000               	movlw	high stringdir
   519  0004  008A               	movwf	10
   520  0005  0804               	movf	4,w
   521  0006  0A84               	incf	4,f
   522  0007  0782               	addwf	2,f
   523  0008                     __stringbase:
   524  0008  3400               	retlw	0
   525  0009                     __end_of__stringtab:
   526  0009                     STR_1:
   527  0009  3461               	retlw	97	;'a'
   528  000A  3400               	retlw	0
   529                           
   530                           	psect	cinit
   531  07E6                     start_initialization:	
   532                           ; #config settings
   533                           
   534  07E6                     __initialization:
   535                           
   536                           ; Initialize objects allocated to BANK0
   537  07E6  1383               	bcf	3,7	;select IRP bank0
   538  07E7  3066               	movlw	low (__pdataBANK0+17)
   539  07E8  00FD               	movwf	btemp+-1
   540  07E9  3005               	movlw	high __pidataBANK0
   541  07EA  00FE               	movwf	btemp
   542  07EB  3064               	movlw	low __pidataBANK0
   543  07EC  00FF               	movwf	btemp+1
   544  07ED  3055               	movlw	low __pdataBANK0
   545  07EE  0084               	movwf	4
   546  07EF  120A  118A  259E  120A  118A  	fcall	init_ram0
   547                           
   548                           ; Clear objects allocated to BANK0
   549  07F4  3020               	movlw	low __pbssBANK0
   550  07F5  0084               	movwf	4
   551  07F6  303F               	movlw	low (__pbssBANK0+31)
   552  07F7  120A  118A  255C  120A  118A  	fcall	clear_ram0
   553  07FC                     end_of_initialization:	
   554                           ;End of C runtime variable initialization code
   555                           
   556  07FC                     __end_of__initialization:
   557  07FC  0183               	clrf	3
   558  07FD  120A  118A  2DAD   	ljmp	_main	;jump to C main() function
   559                           
   560                           	psect	bssBANK0
   561  0020                     __pbssBANK0:
   562  0020                     _datos:
   563  0020                     	ds	20
   564  0034                     _humeda1:
   565  0034                     	ds	3
   566  0037                     _tempera1:
   567  0037                     	ds	3
   568  003A                     _GetTempCmd:
   569  003A                     	ds	2
   570  003C                     _humedad:
   571  003C                     	ds	1
   572  003D                     _temperatura:
   573  003D                     	ds	1
   574  003E                     _LecturaUSART:
   575  003E                     	ds	1
   576                           
   577                           	psect	dataBANK0
   578  0055                     __pdataBANK0:
   579  0055                     _eSensorMeasureCmd:
   580  0055                     	ds	3
   581  0058                     _eSensorNormalCmd:
   582  0058                     	ds	3
   583  005B                     _eSensorCalibrateCmd:
   584  005B                     	ds	3
   585  005E                     _GetRHumidityCmd:
   586  005E                     	ds	2
   587  0060                     _AHT10Address_High:
   588  0060                     	ds	2
   589  0062                     _AHT10Address_Low:
   590  0062                     	ds	2
   591  0064                     _AHT10_address:
   592  0064                     	ds	1
   593  0065                     _eSensorResetCmd:
   594  0065                     	ds	1
   595                           
   596                           	psect	inittext
   597  059A                     init_fetch0:	
   598                           ;	Called with low address in FSR and high address in W
   599                           
   600  059A  087E               	movf	btemp,w
   601  059B  008A               	movwf	10
   602  059C  087F               	movf	btemp+1,w
   603  059D  0082               	movwf	2
   604  059E                     init_ram0:	
   605                           ;Called with:
   606                           ;	high address of idata address in btemp 
   607                           ;	low address of idata address in btemp+1 
   608                           ;	low address of data in FSR
   609                           ;	high address + 1 of data in btemp-1
   610                           
   611  059E  120A  118A  259A  120A  118A  	fcall	init_fetch0
   612  05A3  0080               	movwf	0
   613  05A4  0A84               	incf	4,f
   614  05A5  0804               	movf	4,w
   615  05A6  067D               	xorwf	btemp+-1,w
   616  05A7  1903               	btfsc	3,2
   617  05A8  3400               	retlw	0
   618  05A9  0AFF               	incf	btemp+1,f
   619  05AA  1903               	btfsc	3,2
   620  05AB  0AFE               	incf	btemp,f
   621  05AC  2D9E               	goto	init_ram0
   622                           
   623                           	psect	clrtext
   624  055C                     clear_ram0:	
   625                           ;	Called with FSR containing the base address, and
   626                           ;	W with the last address+1
   627                           
   628  055C  0064               	clrwdt	;clear the watchdog before getting into this loop
   629  055D                     clrloop0:
   630  055D  0180               	clrf	0	;clear RAM location pointed to by FSR
   631  055E  0A84               	incf	4,f	;increment pointer
   632  055F  0604               	xorwf	4,w	;XOR with final address
   633  0560  1903               	btfsc	3,2	;have we reached the end yet?
   634  0561  3400               	retlw	0	;all done for this memory range, return
   635  0562  0604               	xorwf	4,w	;XOR again to restore value
   636  0563  2D5D               	goto	clrloop0	;do the next byte
   637                           
   638                           	psect	cstackCOMMON
   639  0070                     __pcstackCOMMON:
   640  0070                     ?_uartTX_Write:
   641  0070                     ??_uartTX_Write:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_configIO:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ??_configIO:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_main:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?___lldiv:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?___aldiv:	
   657                           ; 4 bytes @ 0x0
   658                           
   659  0070                     ___lldiv@divisor:	
   660                           ; 4 bytes @ 0x0
   661                           
   662  0070                     ___aldiv@divisor:	
   663                           ; 4 bytes @ 0x0
   664                           
   665                           
   666                           ; 4 bytes @ 0x0
   667  0070                     	ds	1
   668  0071                     uartTX_Write@dato:
   669                           
   670                           ; 1 bytes @ 0x1
   671  0071                     	ds	3
   672  0074                     ___lldiv@dividend:
   673  0074                     ___aldiv@dividend:	
   674                           ; 4 bytes @ 0x4
   675                           
   676                           
   677                           ; 4 bytes @ 0x4
   678  0074                     	ds	4
   679  0078                     ??___lldiv:
   680  0078                     ??___aldiv:	
   681                           ; 1 bytes @ 0x8
   682                           
   683                           
   684                           ; 1 bytes @ 0x8
   685  0078                     	ds	1
   686  0079                     uartRC_init@n:
   687  0079                     ___lldiv@quotient:	
   688                           ; 2 bytes @ 0x9
   689                           
   690                           
   691                           ; 4 bytes @ 0x9
   692  0079                     	ds	4
   693  007D                     ___lldiv@counter:
   694                           
   695                           ; 1 bytes @ 0xD
   696  007D                     	ds	1
   697                           
   698                           	psect	cstackBANK0
   699  003F                     __pcstackBANK0:
   700  003F                     ?_I2C_Master_Init:
   701  003F                     ___aldiv@counter:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  003F                     I2C_Master_Init@c:	
   705                           ; 1 bytes @ 0x0
   706                           
   707                           
   708                           ; 4 bytes @ 0x0
   709  003F                     	ds	1
   710  0040                     ___aldiv@sign:
   711                           
   712                           ; 1 bytes @ 0x1
   713  0040                     	ds	1
   714  0041                     ___aldiv@quotient:
   715                           
   716                           ; 4 bytes @ 0x2
   717  0041                     	ds	2
   718  0043                     ??_I2C_Master_Init:
   719                           
   720                           ; 1 bytes @ 0x4
   721  0043                     	ds	2
   722  0045                     ?_uartRC_init:
   723  0045                     uartRC_init@baudrate:	
   724                           ; 1 bytes @ 0x6
   725                           
   726                           
   727                           ; 2 bytes @ 0x6
   728  0045                     	ds	2
   729  0047                     ??_uartRC_init:
   730                           
   731                           ; 1 bytes @ 0x8
   732  0047                     	ds	12
   733  0053                     ??_main:
   734                           
   735                           ; 1 bytes @ 0x14
   736  0053                     	ds	2
   737                           
   738                           	psect	maintext
   739  05AD                     __pmaintext:	
   740 ;;
   741 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   742 ;;
   743 ;; *************** function _main *****************
   744 ;; Defined at:
   745 ;;		line 64 in file "pic16f.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;		None
   748 ;; Auto vars:     Size  Location     Type
   749 ;;		None
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : B00/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   759 ;;      Params:         0       0       0       0       0
   760 ;;      Locals:         0       0       0       0       0
   761 ;;      Temps:          0       2       0       0       0
   762 ;;      Totals:         0       2       0       0       0
   763 ;;Total ram usage:        2 bytes
   764 ;; Hardware stack levels required when called:    2
   765 ;; This function calls:
   766 ;;		_I2C_Master_Init
   767 ;;		_configIO
   768 ;;		_uartRC_init
   769 ;;		_uartTX_Write
   770 ;; This function is called by:
   771 ;;		Startup code after reset
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           
   776                           ;psect for function _main
   777  05AD                     _main:
   778  05AD                     l1215:	
   779                           ;incstack = 0
   780                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   781                           
   782                           
   783                           ;pic16f.c: 65:     configIO();
   784  05AD  120A  118A  2587  120A  118A  	fcall	_configIO
   785  05B2                     l1217:
   786                           
   787                           ;pic16f.c: 66:     uartRC_init(9600);
   788  05B2  3080               	movlw	128
   789  05B3  1283               	bcf	3,5	;RP0=0, select bank0
   790  05B4  1303               	bcf	3,6	;RP1=0, select bank0
   791  05B5  00C5               	movwf	uartRC_init@baudrate
   792  05B6  3025               	movlw	37
   793  05B7  00C6               	movwf	uartRC_init@baudrate+1
   794  05B8  120A  118A  271E  120A  118A  	fcall	_uartRC_init
   795  05BD                     l1219:
   796                           
   797                           ;pic16f.c: 67:     I2C_Master_Init(100000);
   798  05BD  3000               	movlw	0
   799  05BE  1283               	bcf	3,5	;RP0=0, select bank0
   800  05BF  1303               	bcf	3,6	;RP1=0, select bank0
   801  05C0  00C2               	movwf	I2C_Master_Init@c+3
   802  05C1  3001               	movlw	1
   803  05C2  00C1               	movwf	I2C_Master_Init@c+2
   804  05C3  3086               	movlw	134
   805  05C4  00C0               	movwf	I2C_Master_Init@c+1
   806  05C5  30A0               	movlw	160
   807  05C6  00BF               	movwf	I2C_Master_Init@c
   808  05C7  120A  118A  25E3  120A  118A  	fcall	_I2C_Master_Init
   809  05CC                     l1221:
   810                           
   811                           ;pic16f.c: 70:         PORTDbits.RD0=1;
   812  05CC  1283               	bcf	3,5	;RP0=0, select bank0
   813  05CD  1303               	bcf	3,6	;RP1=0, select bank0
   814  05CE  1408               	bsf	8,0	;volatile
   815  05CF                     l1223:
   816                           
   817                           ;pic16f.c: 76:         uartTX_Write("a");
   818  05CF  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   819  05D0  120A  118A  2575  120A  118A  	fcall	_uartTX_Write
   820  05D5                     l1225:
   821                           
   822                           ;pic16f.c: 85:         _delay((unsigned long)((10)*(4000000/4000.0)));
   823  05D5  300D               	movlw	13
   824  05D6  1283               	bcf	3,5	;RP0=0, select bank0
   825  05D7  1303               	bcf	3,6	;RP1=0, select bank0
   826  05D8  00D4               	movwf	??_main+1
   827  05D9  30FB               	movlw	251
   828  05DA  00D3               	movwf	??_main
   829  05DB                     u1357:
   830  05DB  0BD3               	decfsz	??_main,f
   831  05DC  2DDB               	goto	u1357
   832  05DD  0BD4               	decfsz	??_main+1,f
   833  05DE  2DDB               	goto	u1357
   834  05DF  2DCC               	goto	l1221
   835  05E0  120A  118A  2800   	ljmp	start
   836  05E3                     __end_of_main:
   837                           
   838                           	psect	text1
   839  0575                     __ptext1:	
   840 ;; *************** function _uartTX_Write *****************
   841 ;; Defined at:
   842 ;;		line 36 in file "USART.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  dato            1    wreg     unsigned char 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  dato            1    1[COMMON] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   856 ;;      Params:         0       0       0       0       0
   857 ;;      Locals:         1       0       0       0       0
   858 ;;      Temps:          1       0       0       0       0
   859 ;;      Totals:         2       0       0       0       0
   860 ;;Total ram usage:        2 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_main
   866 ;;		_uartTX_Write_Str
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           
   871                           ;psect for function _uartTX_Write
   872  0575                     _uartTX_Write:
   873                           
   874                           ;incstack = 0
   875                           ; Regs used in _uartTX_Write: [wreg]
   876                           ;uartTX_Write@dato stored from wreg
   877  0575  00F1               	movwf	uartTX_Write@dato
   878  0576                     l841:
   879                           
   880                           ;USART.c: 37:         TXREG = dato;
   881  0576  0871               	movf	uartTX_Write@dato,w
   882  0577  1283               	bcf	3,5	;RP0=0, select bank0
   883  0578  1303               	bcf	3,6	;RP1=0, select bank0
   884  0579  0099               	movwf	25	;volatile
   885                           
   886                           ;USART.c: 38:         while(TXSTAbits.TRMT == 0){
   887  057A  2D80               	goto	l845
   888  057B                     l843:
   889                           
   890                           ;USART.c: 39:             _delay((unsigned long)((500)*(4000000/4000000.0)));
   891  057B  30A6               	movlw	166
   892  057C  00F0               	movwf	??_uartTX_Write
   893  057D                     u1367:
   894  057D  0BF0               	decfsz	??_uartTX_Write,f
   895  057E  2D7D               	goto	u1367
   896  057F  0000               	nop
   897  0580                     l845:
   898                           
   899                           ;USART.c: 38:         while(TXSTAbits.TRMT == 0){
   900  0580  1683               	bsf	3,5	;RP0=1, select bank1
   901  0581  1303               	bcf	3,6	;RP1=0, select bank1
   902  0582  1C98               	btfss	24,1	;volatile
   903  0583  2D85               	goto	u271
   904  0584  2D86               	goto	u270
   905  0585                     u271:
   906  0585  2D7B               	goto	l843
   907  0586                     u270:
   908  0586                     l192:
   909  0586  0008               	return
   910  0587                     __end_of_uartTX_Write:
   911                           
   912                           	psect	text2
   913  071E                     __ptext2:	
   914 ;; *************** function _uartRC_init *****************
   915 ;; Defined at:
   916 ;;		line 13 in file "USART.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  baudrate        2    6[BANK0 ] unsigned int 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  n               2    9[COMMON] unsigned int 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      unsigned char 
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         0       2       0       0       0
   931 ;;      Locals:         2       0       0       0       0
   932 ;;      Temps:          0      12       0       0       0
   933 ;;      Totals:         2      14       0       0       0
   934 ;;Total ram usage:       16 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    1
   937 ;; This function calls:
   938 ;;		___aldiv
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           
   945                           ;psect for function _uartRC_init
   946  071E                     _uartRC_init:
   947  071E                     l1051:	
   948                           ;incstack = 0
   949                           ; Regs used in _uartRC_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   950                           
   951                           
   952                           ;USART.c: 14:     uint16_t n;;USART.c: 15:     n = (4000000 - baudrate*64)/(baudrate*64)
      +                          ;
   953  071E  1283               	bcf	3,5	;RP0=0, select bank0
   954  071F  1303               	bcf	3,6	;RP1=0, select bank0
   955  0720  0846               	movf	uartRC_init@baudrate+1,w
   956  0721  00C8               	movwf	??_uartRC_init+1
   957  0722  0845               	movf	uartRC_init@baudrate,w
   958  0723  00C7               	movwf	??_uartRC_init
   959  0724  3006               	movlw	6
   960  0725  00FF               	movwf	btemp+1
   961  0726                     u585:
   962  0726  1003               	clrc
   963  0727  0DC7               	rlf	??_uartRC_init,f
   964  0728  0DC8               	rlf	??_uartRC_init+1,f
   965  0729  0BFF               	decfsz	btemp+1,f
   966  072A  2F26               	goto	u585
   967  072B  0847               	movf	??_uartRC_init,w
   968  072C  00F0               	movwf	___aldiv@divisor
   969  072D  0848               	movf	??_uartRC_init+1,w
   970  072E  00F1               	movwf	___aldiv@divisor+1
   971  072F  01F2               	clrf	___aldiv@divisor+2
   972  0730  01F3               	clrf	___aldiv@divisor+3
   973  0731  0846               	movf	uartRC_init@baudrate+1,w
   974  0732  00CA               	movwf	??_uartRC_init+3
   975  0733  0845               	movf	uartRC_init@baudrate,w
   976  0734  00C9               	movwf	??_uartRC_init+2
   977  0735  3006               	movlw	6
   978  0736  00FF               	movwf	btemp+1
   979  0737                     u595:
   980  0737  1003               	clrc
   981  0738  0DC9               	rlf	??_uartRC_init+2,f
   982  0739  0DCA               	rlf	??_uartRC_init+3,f
   983  073A  0BFF               	decfsz	btemp+1,f
   984  073B  2F37               	goto	u595
   985  073C  0849               	movf	??_uartRC_init+2,w
   986  073D  00CB               	movwf	??_uartRC_init+4
   987  073E  084A               	movf	??_uartRC_init+3,w
   988  073F  00CC               	movwf	??_uartRC_init+5
   989  0740  01CD               	clrf	??_uartRC_init+6
   990  0741  01CE               	clrf	??_uartRC_init+7
   991  0742  3000               	movlw	0
   992  0743  00CF               	movwf	??_uartRC_init+8
   993  0744  3009               	movlw	9
   994  0745  00D0               	movwf	??_uartRC_init+9
   995  0746  303D               	movlw	61
   996  0747  00D1               	movwf	??_uartRC_init+10
   997  0748  3000               	movlw	0
   998  0749  00D2               	movwf	??_uartRC_init+11
   999  074A  084B               	movf	??_uartRC_init+4,w
  1000  074B  02CF               	subwf	??_uartRC_init+8,f
  1001  074C  084C               	movf	??_uartRC_init+5,w
  1002  074D  1C03               	skipc
  1003  074E  0F4C               	incfsz	??_uartRC_init+5,w
  1004  074F  2F51               	goto	u601
  1005  0750  2F52               	goto	u602
  1006  0751                     u601:
  1007  0751  02D0               	subwf	??_uartRC_init+9,f
  1008  0752                     u602:
  1009  0752  084D               	movf	??_uartRC_init+6,w
  1010  0753  1C03               	skipc
  1011  0754  0F4D               	incfsz	??_uartRC_init+6,w
  1012  0755  2F57               	goto	u603
  1013  0756  2F58               	goto	u604
  1014  0757                     u603:
  1015  0757  02D1               	subwf	??_uartRC_init+10,f
  1016  0758                     u604:
  1017  0758  084E               	movf	??_uartRC_init+7,w
  1018  0759  1C03               	skipc
  1019  075A  0F4E               	incfsz	??_uartRC_init+7,w
  1020  075B  2F5D               	goto	u605
  1021  075C  2F5E               	goto	u606
  1022  075D                     u605:
  1023  075D  02D2               	subwf	??_uartRC_init+11,f
  1024  075E                     u606:
  1025  075E  0852               	movf	??_uartRC_init+11,w
  1026  075F  00F7               	movwf	___aldiv@dividend+3
  1027  0760  0851               	movf	??_uartRC_init+10,w
  1028  0761  00F6               	movwf	___aldiv@dividend+2
  1029  0762  0850               	movf	??_uartRC_init+9,w
  1030  0763  00F5               	movwf	___aldiv@dividend+1
  1031  0764  084F               	movf	??_uartRC_init+8,w
  1032  0765  00F4               	movwf	___aldiv@dividend
  1033  0766  120A  118A  2681  120A  118A  	fcall	___aldiv
  1034  076B  0871               	movf	?___aldiv+1,w
  1035  076C  00FA               	movwf	uartRC_init@n+1
  1036  076D  0870               	movf	?___aldiv,w
  1037  076E  00F9               	movwf	uartRC_init@n
  1038  076F                     l1053:
  1039                           
  1040                           ;USART.c: 16:     if (n > 255){
  1041  076F  3001               	movlw	1
  1042  0770  027A               	subwf	uartRC_init@n+1,w
  1043  0771  3000               	movlw	0
  1044  0772  1903               	skipnz
  1045  0773  0279               	subwf	uartRC_init@n,w
  1046  0774  1C03               	skipc
  1047  0775  2F77               	goto	u611
  1048  0776  2F78               	goto	u610
  1049  0777                     u611:
  1050  0777  2FD0               	goto	l1059
  1051  0778                     u610:
  1052  0778                     l1055:
  1053                           
  1054                           ;USART.c: 17:         n = (4000000 - baudrate*16)/(baudrate*16);
  1055  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1056  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1057  077A  0846               	movf	uartRC_init@baudrate+1,w
  1058  077B  00C8               	movwf	??_uartRC_init+1
  1059  077C  0845               	movf	uartRC_init@baudrate,w
  1060  077D  00C7               	movwf	??_uartRC_init
  1061  077E  0EC7               	swapf	??_uartRC_init,f
  1062  077F  0EC8               	swapf	??_uartRC_init+1,f
  1063  0780  30F0               	movlw	240
  1064  0781  05C8               	andwf	??_uartRC_init+1,f
  1065  0782  0847               	movf	??_uartRC_init,w
  1066  0783  390F               	andlw	15
  1067  0784  04C8               	iorwf	??_uartRC_init+1,f
  1068  0785  30F0               	movlw	240
  1069  0786  05C7               	andwf	??_uartRC_init,f
  1070  0787  0847               	movf	??_uartRC_init,w
  1071  0788  00F0               	movwf	___aldiv@divisor
  1072  0789  0848               	movf	??_uartRC_init+1,w
  1073  078A  00F1               	movwf	___aldiv@divisor+1
  1074  078B  01F2               	clrf	___aldiv@divisor+2
  1075  078C  01F3               	clrf	___aldiv@divisor+3
  1076  078D  0846               	movf	uartRC_init@baudrate+1,w
  1077  078E  00CA               	movwf	??_uartRC_init+3
  1078  078F  0845               	movf	uartRC_init@baudrate,w
  1079  0790  00C9               	movwf	??_uartRC_init+2
  1080  0791  0EC9               	swapf	??_uartRC_init+2,f
  1081  0792  0ECA               	swapf	??_uartRC_init+3,f
  1082  0793  30F0               	movlw	240
  1083  0794  05CA               	andwf	??_uartRC_init+3,f
  1084  0795  0849               	movf	??_uartRC_init+2,w
  1085  0796  390F               	andlw	15
  1086  0797  04CA               	iorwf	??_uartRC_init+3,f
  1087  0798  30F0               	movlw	240
  1088  0799  05C9               	andwf	??_uartRC_init+2,f
  1089  079A  0849               	movf	??_uartRC_init+2,w
  1090  079B  00CB               	movwf	??_uartRC_init+4
  1091  079C  084A               	movf	??_uartRC_init+3,w
  1092  079D  00CC               	movwf	??_uartRC_init+5
  1093  079E  01CD               	clrf	??_uartRC_init+6
  1094  079F  01CE               	clrf	??_uartRC_init+7
  1095  07A0  3000               	movlw	0
  1096  07A1  00CF               	movwf	??_uartRC_init+8
  1097  07A2  3009               	movlw	9
  1098  07A3  00D0               	movwf	??_uartRC_init+9
  1099  07A4  303D               	movlw	61
  1100  07A5  00D1               	movwf	??_uartRC_init+10
  1101  07A6  3000               	movlw	0
  1102  07A7  00D2               	movwf	??_uartRC_init+11
  1103  07A8  084B               	movf	??_uartRC_init+4,w
  1104  07A9  02CF               	subwf	??_uartRC_init+8,f
  1105  07AA  084C               	movf	??_uartRC_init+5,w
  1106  07AB  1C03               	skipc
  1107  07AC  0F4C               	incfsz	??_uartRC_init+5,w
  1108  07AD  2FAF               	goto	u621
  1109  07AE  2FB0               	goto	u622
  1110  07AF                     u621:
  1111  07AF  02D0               	subwf	??_uartRC_init+9,f
  1112  07B0                     u622:
  1113  07B0  084D               	movf	??_uartRC_init+6,w
  1114  07B1  1C03               	skipc
  1115  07B2  0F4D               	incfsz	??_uartRC_init+6,w
  1116  07B3  2FB5               	goto	u623
  1117  07B4  2FB6               	goto	u624
  1118  07B5                     u623:
  1119  07B5  02D1               	subwf	??_uartRC_init+10,f
  1120  07B6                     u624:
  1121  07B6  084E               	movf	??_uartRC_init+7,w
  1122  07B7  1C03               	skipc
  1123  07B8  0F4E               	incfsz	??_uartRC_init+7,w
  1124  07B9  2FBB               	goto	u625
  1125  07BA  2FBC               	goto	u626
  1126  07BB                     u625:
  1127  07BB  02D2               	subwf	??_uartRC_init+11,f
  1128  07BC                     u626:
  1129  07BC  0852               	movf	??_uartRC_init+11,w
  1130  07BD  00F7               	movwf	___aldiv@dividend+3
  1131  07BE  0851               	movf	??_uartRC_init+10,w
  1132  07BF  00F6               	movwf	___aldiv@dividend+2
  1133  07C0  0850               	movf	??_uartRC_init+9,w
  1134  07C1  00F5               	movwf	___aldiv@dividend+1
  1135  07C2  084F               	movf	??_uartRC_init+8,w
  1136  07C3  00F4               	movwf	___aldiv@dividend
  1137  07C4  120A  118A  2681  120A  118A  	fcall	___aldiv
  1138  07C9  0871               	movf	?___aldiv+1,w
  1139  07CA  00FA               	movwf	uartRC_init@n+1
  1140  07CB  0870               	movf	?___aldiv,w
  1141  07CC  00F9               	movwf	uartRC_init@n
  1142  07CD                     l1057:
  1143                           
  1144                           ;USART.c: 18:         TXSTAbits.BRGH = 1;
  1145  07CD  1683               	bsf	3,5	;RP0=1, select bank1
  1146  07CE  1303               	bcf	3,6	;RP1=0, select bank1
  1147  07CF  1518               	bsf	24,2	;volatile
  1148  07D0                     l1059:
  1149                           
  1150                           ;USART.c: 20:     if (n < 256){
  1151  07D0  3001               	movlw	1
  1152  07D1  027A               	subwf	uartRC_init@n+1,w
  1153  07D2  3000               	movlw	0
  1154  07D3  1903               	skipnz
  1155  07D4  0279               	subwf	uartRC_init@n,w
  1156  07D5  1803               	skipnc
  1157  07D6  2FD8               	goto	u631
  1158  07D7  2FD9               	goto	u630
  1159  07D8                     u631:
  1160  07D8  2FE5               	goto	l183
  1161  07D9                     u630:
  1162  07D9                     l1061:
  1163                           
  1164                           ;USART.c: 21:         SPBRG = n;
  1165  07D9  0879               	movf	uartRC_init@n,w
  1166  07DA  1683               	bsf	3,5	;RP0=1, select bank1
  1167  07DB  1303               	bcf	3,6	;RP1=0, select bank1
  1168  07DC  0099               	movwf	25	;volatile
  1169  07DD                     l1063:
  1170                           
  1171                           ;USART.c: 22:         TXSTAbits.SYNC = 0;
  1172  07DD  1218               	bcf	24,4	;volatile
  1173  07DE                     l1065:
  1174                           
  1175                           ;USART.c: 23:         RCSTAbits.SPEN = 1;
  1176  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1177  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1178  07E0  1798               	bsf	24,7	;volatile
  1179  07E1                     l1067:
  1180                           
  1181                           ;USART.c: 24:         RCSTAbits.CREN = 1;
  1182  07E1  1618               	bsf	24,4	;volatile
  1183  07E2                     l1069:
  1184                           
  1185                           ;USART.c: 25:         TXSTAbits.TXEN = 1;
  1186  07E2  1683               	bsf	3,5	;RP0=1, select bank1
  1187  07E3  1303               	bcf	3,6	;RP1=0, select bank1
  1188  07E4  1698               	bsf	24,5	;volatile
  1189  07E5                     l183:
  1190  07E5  0008               	return
  1191  07E6                     __end_of_uartRC_init:
  1192                           
  1193                           	psect	text3
  1194  0681                     __ptext3:	
  1195 ;; *************** function ___aldiv *****************
  1196 ;; Defined at:
  1197 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\aldiv.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  divisor         4    0[COMMON] long 
  1200 ;;  dividend        4    4[COMMON] long 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  quotient        4    2[BANK0 ] long 
  1203 ;;  sign            1    1[BANK0 ] unsigned char 
  1204 ;;  counter         1    0[BANK0 ] unsigned char 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  4    0[COMMON] long 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, status,0
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1214 ;;      Params:         8       0       0       0       0
  1215 ;;      Locals:         0       6       0       0       0
  1216 ;;      Temps:          1       0       0       0       0
  1217 ;;      Totals:         9       6       0       0       0
  1218 ;;Total ram usage:       15 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; This function calls:
  1221 ;;		Nothing
  1222 ;; This function is called by:
  1223 ;;		_uartRC_init
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           
  1228                           ;psect for function ___aldiv
  1229  0681                     ___aldiv:
  1230  0681                     l1011:	
  1231                           ;incstack = 0
  1232                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1233                           
  1234  0681  1283               	bcf	3,5	;RP0=0, select bank0
  1235  0682  1303               	bcf	3,6	;RP1=0, select bank0
  1236  0683  01C0               	clrf	___aldiv@sign
  1237  0684                     l1013:
  1238  0684  1FF3               	btfss	___aldiv@divisor+3,7
  1239  0685  2E87               	goto	u481
  1240  0686  2E88               	goto	u480
  1241  0687                     u481:
  1242  0687  2E95               	goto	l355
  1243  0688                     u480:
  1244  0688                     l1015:
  1245  0688  09F0               	comf	___aldiv@divisor,f
  1246  0689  09F1               	comf	___aldiv@divisor+1,f
  1247  068A  09F2               	comf	___aldiv@divisor+2,f
  1248  068B  09F3               	comf	___aldiv@divisor+3,f
  1249  068C  0AF0               	incf	___aldiv@divisor,f
  1250  068D  1903               	skipnz
  1251  068E  0AF1               	incf	___aldiv@divisor+1,f
  1252  068F  1903               	skipnz
  1253  0690  0AF2               	incf	___aldiv@divisor+2,f
  1254  0691  1903               	skipnz
  1255  0692  0AF3               	incf	___aldiv@divisor+3,f
  1256  0693  01C0               	clrf	___aldiv@sign
  1257  0694  0AC0               	incf	___aldiv@sign,f
  1258  0695                     l355:
  1259  0695  1FF7               	btfss	___aldiv@dividend+3,7
  1260  0696  2E98               	goto	u491
  1261  0697  2E99               	goto	u490
  1262  0698                     u491:
  1263  0698  2EA8               	goto	l1021
  1264  0699                     u490:
  1265  0699                     l1017:
  1266  0699  09F4               	comf	___aldiv@dividend,f
  1267  069A  09F5               	comf	___aldiv@dividend+1,f
  1268  069B  09F6               	comf	___aldiv@dividend+2,f
  1269  069C  09F7               	comf	___aldiv@dividend+3,f
  1270  069D  0AF4               	incf	___aldiv@dividend,f
  1271  069E  1903               	skipnz
  1272  069F  0AF5               	incf	___aldiv@dividend+1,f
  1273  06A0  1903               	skipnz
  1274  06A1  0AF6               	incf	___aldiv@dividend+2,f
  1275  06A2  1903               	skipnz
  1276  06A3  0AF7               	incf	___aldiv@dividend+3,f
  1277  06A4                     l1019:
  1278  06A4  3001               	movlw	1
  1279  06A5  00F8               	movwf	??___aldiv
  1280  06A6  0878               	movf	??___aldiv,w
  1281  06A7  06C0               	xorwf	___aldiv@sign,f
  1282  06A8                     l1021:
  1283  06A8  3000               	movlw	0
  1284  06A9  00C4               	movwf	___aldiv@quotient+3
  1285  06AA  3000               	movlw	0
  1286  06AB  00C3               	movwf	___aldiv@quotient+2
  1287  06AC  3000               	movlw	0
  1288  06AD  00C2               	movwf	___aldiv@quotient+1
  1289  06AE  3000               	movlw	0
  1290  06AF  00C1               	movwf	___aldiv@quotient
  1291  06B0                     l1023:
  1292  06B0  0873               	movf	___aldiv@divisor+3,w
  1293  06B1  0472               	iorwf	___aldiv@divisor+2,w
  1294  06B2  0471               	iorwf	___aldiv@divisor+1,w
  1295  06B3  0470               	iorwf	___aldiv@divisor,w
  1296  06B4  1903               	skipnz
  1297  06B5  2EB7               	goto	u501
  1298  06B6  2EB8               	goto	u500
  1299  06B7                     u501:
  1300  06B7  2F05               	goto	l1043
  1301  06B8                     u500:
  1302  06B8                     l1025:
  1303  06B8  01BF               	clrf	___aldiv@counter
  1304  06B9  0ABF               	incf	___aldiv@counter,f
  1305  06BA  2EC8               	goto	l1029
  1306  06BB                     l1027:
  1307  06BB  3001               	movlw	1
  1308  06BC  00F8               	movwf	??___aldiv
  1309  06BD                     u515:
  1310  06BD  1003               	clrc
  1311  06BE  0DF0               	rlf	___aldiv@divisor,f
  1312  06BF  0DF1               	rlf	___aldiv@divisor+1,f
  1313  06C0  0DF2               	rlf	___aldiv@divisor+2,f
  1314  06C1  0DF3               	rlf	___aldiv@divisor+3,f
  1315  06C2  0BF8               	decfsz	??___aldiv,f
  1316  06C3  2EBD               	goto	u515
  1317  06C4  3001               	movlw	1
  1318  06C5  00F8               	movwf	??___aldiv
  1319  06C6  0878               	movf	??___aldiv,w
  1320  06C7  07BF               	addwf	___aldiv@counter,f
  1321  06C8                     l1029:
  1322  06C8  1FF3               	btfss	___aldiv@divisor+3,7
  1323  06C9  2ECB               	goto	u521
  1324  06CA  2ECC               	goto	u520
  1325  06CB                     u521:
  1326  06CB  2EBB               	goto	l1027
  1327  06CC                     u520:
  1328  06CC                     l1031:
  1329  06CC  3001               	movlw	1
  1330  06CD  00F8               	movwf	??___aldiv
  1331  06CE                     u535:
  1332  06CE  1003               	clrc
  1333  06CF  0DC1               	rlf	___aldiv@quotient,f
  1334  06D0  0DC2               	rlf	___aldiv@quotient+1,f
  1335  06D1  0DC3               	rlf	___aldiv@quotient+2,f
  1336  06D2  0DC4               	rlf	___aldiv@quotient+3,f
  1337  06D3  0BF8               	decfsz	??___aldiv,f
  1338  06D4  2ECE               	goto	u535
  1339  06D5                     l1033:
  1340  06D5  0873               	movf	___aldiv@divisor+3,w
  1341  06D6  0277               	subwf	___aldiv@dividend+3,w
  1342  06D7  1D03               	skipz
  1343  06D8  2EE3               	goto	u545
  1344  06D9  0872               	movf	___aldiv@divisor+2,w
  1345  06DA  0276               	subwf	___aldiv@dividend+2,w
  1346  06DB  1D03               	skipz
  1347  06DC  2EE3               	goto	u545
  1348  06DD  0871               	movf	___aldiv@divisor+1,w
  1349  06DE  0275               	subwf	___aldiv@dividend+1,w
  1350  06DF  1D03               	skipz
  1351  06E0  2EE3               	goto	u545
  1352  06E1  0870               	movf	___aldiv@divisor,w
  1353  06E2  0274               	subwf	___aldiv@dividend,w
  1354  06E3                     u545:
  1355  06E3  1C03               	skipc
  1356  06E4  2EE6               	goto	u541
  1357  06E5  2EE7               	goto	u540
  1358  06E6                     u541:
  1359  06E6  2EF6               	goto	l1039
  1360  06E7                     u540:
  1361  06E7                     l1035:
  1362  06E7  0870               	movf	___aldiv@divisor,w
  1363  06E8  02F4               	subwf	___aldiv@dividend,f
  1364  06E9  0871               	movf	___aldiv@divisor+1,w
  1365  06EA  1C03               	skipc
  1366  06EB  0F71               	incfsz	___aldiv@divisor+1,w
  1367  06EC  02F5               	subwf	___aldiv@dividend+1,f
  1368  06ED  0872               	movf	___aldiv@divisor+2,w
  1369  06EE  1C03               	skipc
  1370  06EF  0F72               	incfsz	___aldiv@divisor+2,w
  1371  06F0  02F6               	subwf	___aldiv@dividend+2,f
  1372  06F1  0873               	movf	___aldiv@divisor+3,w
  1373  06F2  1C03               	skipc
  1374  06F3  0F73               	incfsz	___aldiv@divisor+3,w
  1375  06F4  02F7               	subwf	___aldiv@dividend+3,f
  1376  06F5                     l1037:
  1377  06F5  1441               	bsf	___aldiv@quotient,0
  1378  06F6                     l1039:
  1379  06F6  3001               	movlw	1
  1380  06F7                     u555:
  1381  06F7  1003               	clrc
  1382  06F8  0CF3               	rrf	___aldiv@divisor+3,f
  1383  06F9  0CF2               	rrf	___aldiv@divisor+2,f
  1384  06FA  0CF1               	rrf	___aldiv@divisor+1,f
  1385  06FB  0CF0               	rrf	___aldiv@divisor,f
  1386  06FC  3EFF               	addlw	-1
  1387  06FD  1D03               	skipz
  1388  06FE  2EF7               	goto	u555
  1389  06FF                     l1041:
  1390  06FF  3001               	movlw	1
  1391  0700  02BF               	subwf	___aldiv@counter,f
  1392  0701  1D03               	btfss	3,2
  1393  0702  2F04               	goto	u561
  1394  0703  2F05               	goto	u560
  1395  0704                     u561:
  1396  0704  2ECC               	goto	l1031
  1397  0705                     u560:
  1398  0705                     l1043:
  1399  0705  0840               	movf	___aldiv@sign,w
  1400  0706  1903               	btfsc	3,2
  1401  0707  2F09               	goto	u571
  1402  0708  2F0A               	goto	u570
  1403  0709                     u571:
  1404  0709  2F15               	goto	l1047
  1405  070A                     u570:
  1406  070A                     l1045:
  1407  070A  09C1               	comf	___aldiv@quotient,f
  1408  070B  09C2               	comf	___aldiv@quotient+1,f
  1409  070C  09C3               	comf	___aldiv@quotient+2,f
  1410  070D  09C4               	comf	___aldiv@quotient+3,f
  1411  070E  0AC1               	incf	___aldiv@quotient,f
  1412  070F  1903               	skipnz
  1413  0710  0AC2               	incf	___aldiv@quotient+1,f
  1414  0711  1903               	skipnz
  1415  0712  0AC3               	incf	___aldiv@quotient+2,f
  1416  0713  1903               	skipnz
  1417  0714  0AC4               	incf	___aldiv@quotient+3,f
  1418  0715                     l1047:
  1419  0715  0844               	movf	___aldiv@quotient+3,w
  1420  0716  00F3               	movwf	?___aldiv+3
  1421  0717  0843               	movf	___aldiv@quotient+2,w
  1422  0718  00F2               	movwf	?___aldiv+2
  1423  0719  0842               	movf	___aldiv@quotient+1,w
  1424  071A  00F1               	movwf	?___aldiv+1
  1425  071B  0841               	movf	___aldiv@quotient,w
  1426  071C  00F0               	movwf	?___aldiv
  1427  071D                     l365:
  1428  071D  0008               	return
  1429  071E                     __end_of___aldiv:
  1430                           
  1431                           	psect	text4
  1432  0587                     __ptext4:	
  1433 ;; *************** function _configIO *****************
  1434 ;; Defined at:
  1435 ;;		line 45 in file "pic16f.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;		None
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		status,2
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1449 ;;      Params:         0       0       0       0       0
  1450 ;;      Locals:         0       0       0       0       0
  1451 ;;      Temps:          0       0       0       0       0
  1452 ;;      Totals:         0       0       0       0       0
  1453 ;;Total ram usage:        0 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           
  1463                           ;psect for function _configIO
  1464  0587                     _configIO:
  1465  0587                     l797:	
  1466                           ;incstack = 0
  1467                           ; Regs used in _configIO: [status,2]
  1468                           
  1469                           
  1470                           ;pic16f.c: 46:     TRISD=0;
  1471  0587  1683               	bsf	3,5	;RP0=1, select bank1
  1472  0588  1303               	bcf	3,6	;RP1=0, select bank1
  1473  0589  0188               	clrf	8	;volatile
  1474                           
  1475                           ;pic16f.c: 47:     ANSEL=0;
  1476  058A  1683               	bsf	3,5	;RP0=1, select bank3
  1477  058B  1703               	bsf	3,6	;RP1=1, select bank3
  1478  058C  0188               	clrf	8	;volatile
  1479                           
  1480                           ;pic16f.c: 48:     ANSELH=0;
  1481  058D  0189               	clrf	9	;volatile
  1482                           
  1483                           ;pic16f.c: 49:     PORTD=0;
  1484  058E  1283               	bcf	3,5	;RP0=0, select bank0
  1485  058F  1303               	bcf	3,6	;RP1=0, select bank0
  1486  0590  0188               	clrf	8	;volatile
  1487  0591                     l799:
  1488                           
  1489                           ;pic16f.c: 51:     INTCONbits.PEIE=1;
  1490  0591  170B               	bsf	11,6	;volatile
  1491  0592                     l801:
  1492                           
  1493                           ;pic16f.c: 52:     PIE1bits.RCIE=1;
  1494  0592  1683               	bsf	3,5	;RP0=1, select bank1
  1495  0593  1303               	bcf	3,6	;RP1=0, select bank1
  1496  0594  168C               	bsf	12,5	;volatile
  1497  0595                     l803:
  1498                           
  1499                           ;pic16f.c: 53:     PIR1bits.RCIF=0;
  1500  0595  1283               	bcf	3,5	;RP0=0, select bank0
  1501  0596  1303               	bcf	3,6	;RP1=0, select bank0
  1502  0597  128C               	bcf	12,5	;volatile
  1503  0598                     l805:
  1504                           
  1505                           ;pic16f.c: 54:     INTCONbits.GIE=1;
  1506  0598  178B               	bsf	11,7	;volatile
  1507  0599                     l43:
  1508  0599  0008               	return
  1509  059A                     __end_of_configIO:
  1510                           
  1511                           	psect	text5
  1512  05E3                     __ptext5:	
  1513 ;; *************** function _I2C_Master_Init *****************
  1514 ;; Defined at:
  1515 ;;		line 16 in file "I2C.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  c               4    0[BANK0 ] const unsigned long 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;		None
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      void 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0, pclath, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1529 ;;      Params:         0       4       0       0       0
  1530 ;;      Locals:         0       0       0       0       0
  1531 ;;      Temps:          0       4       0       0       0
  1532 ;;      Totals:         0       8       0       0       0
  1533 ;;Total ram usage:        8 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    1
  1536 ;; This function calls:
  1537 ;;		___lldiv
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;;		_aht_begin
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function _I2C_Master_Init
  1546  05E3                     _I2C_Master_Init:
  1547  05E3                     l1073:	
  1548                           ;incstack = 0
  1549                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1550                           
  1551                           
  1552                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1553  05E3  3028               	movlw	40
  1554  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  1555  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  1556  05E6  0094               	movwf	20	;volatile
  1557  05E7                     l1075:
  1558                           
  1559                           ;I2C.c: 19:     SSPCON2 = 0;
  1560  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  1561  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  1562  05E9  0191               	clrf	17	;volatile
  1563  05EA                     l1077:
  1564                           
  1565                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  1566  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  1567  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  1568  05EC  083F               	movf	I2C_Master_Init@c,w
  1569  05ED  00C3               	movwf	??_I2C_Master_Init
  1570  05EE  0840               	movf	I2C_Master_Init@c+1,w
  1571  05EF  00C4               	movwf	??_I2C_Master_Init+1
  1572  05F0  0841               	movf	I2C_Master_Init@c+2,w
  1573  05F1  00C5               	movwf	??_I2C_Master_Init+2
  1574  05F2  0842               	movf	I2C_Master_Init@c+3,w
  1575  05F3  00C6               	movwf	??_I2C_Master_Init+3
  1576  05F4  3002               	movlw	2
  1577  05F5                     u645:
  1578  05F5  1003               	clrc
  1579  05F6  0DC3               	rlf	??_I2C_Master_Init,f
  1580  05F7  0DC4               	rlf	??_I2C_Master_Init+1,f
  1581  05F8  0DC5               	rlf	??_I2C_Master_Init+2,f
  1582  05F9  0DC6               	rlf	??_I2C_Master_Init+3,f
  1583  05FA                     u640:
  1584  05FA  3EFF               	addlw	-1
  1585  05FB  1D03               	skipz
  1586  05FC  2DF5               	goto	u645
  1587  05FD  0846               	movf	??_I2C_Master_Init+3,w
  1588  05FE  00F3               	movwf	___lldiv@divisor+3
  1589  05FF  0845               	movf	??_I2C_Master_Init+2,w
  1590  0600  00F2               	movwf	___lldiv@divisor+2
  1591  0601  0844               	movf	??_I2C_Master_Init+1,w
  1592  0602  00F1               	movwf	___lldiv@divisor+1
  1593  0603  0843               	movf	??_I2C_Master_Init,w
  1594  0604  00F0               	movwf	___lldiv@divisor
  1595  0605  3000               	movlw	0
  1596  0606  00F7               	movwf	___lldiv@dividend+3
  1597  0607  303D               	movlw	61
  1598  0608  00F6               	movwf	___lldiv@dividend+2
  1599  0609  3009               	movlw	9
  1600  060A  00F5               	movwf	___lldiv@dividend+1
  1601  060B  3000               	movlw	0
  1602  060C  00F4               	movwf	___lldiv@dividend
  1603  060D  120A  118A  261B  120A  118A  	fcall	___lldiv
  1604  0612  0870               	movf	?___lldiv,w
  1605  0613  3EFF               	addlw	255
  1606  0614  1683               	bsf	3,5	;RP0=1, select bank1
  1607  0615  1303               	bcf	3,6	;RP1=0, select bank1
  1608  0616  0093               	movwf	19	;volatile
  1609  0617                     l1079:
  1610                           
  1611                           ;I2C.c: 21:     SSPSTAT = 0;
  1612  0617  0194               	clrf	20	;volatile
  1613  0618                     l1081:
  1614                           
  1615                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1616  0618  1587               	bsf	7,3	;volatile
  1617  0619                     l1083:
  1618                           
  1619                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1620  0619  1607               	bsf	7,4	;volatile
  1621  061A                     l80:
  1622  061A  0008               	return
  1623  061B                     __end_of_I2C_Master_Init:
  1624                           
  1625                           	psect	text6
  1626  061B                     __ptext6:	
  1627 ;; *************** function ___lldiv *****************
  1628 ;; Defined at:
  1629 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\__lldiv.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  divisor         4    0[COMMON] unsigned long 
  1632 ;;  dividend        4    4[COMMON] unsigned long 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  quotient        4    9[COMMON] unsigned long 
  1635 ;;  counter         1   13[COMMON] unsigned char 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  4    0[COMMON] unsigned long 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1645 ;;      Params:         8       0       0       0       0
  1646 ;;      Locals:         5       0       0       0       0
  1647 ;;      Temps:          1       0       0       0       0
  1648 ;;      Totals:        14       0       0       0       0
  1649 ;;Total ram usage:       14 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_I2C_Master_Init
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           
  1659                           ;psect for function ___lldiv
  1660  061B                     ___lldiv:
  1661  061B                     l987:	
  1662                           ;incstack = 0
  1663                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1664                           
  1665  061B  3000               	movlw	0
  1666  061C  00FC               	movwf	___lldiv@quotient+3
  1667  061D  3000               	movlw	0
  1668  061E  00FB               	movwf	___lldiv@quotient+2
  1669  061F  3000               	movlw	0
  1670  0620  00FA               	movwf	___lldiv@quotient+1
  1671  0621  3000               	movlw	0
  1672  0622  00F9               	movwf	___lldiv@quotient
  1673  0623  0873               	movf	___lldiv@divisor+3,w
  1674  0624  0472               	iorwf	___lldiv@divisor+2,w
  1675  0625  0471               	iorwf	___lldiv@divisor+1,w
  1676  0626  0470               	iorwf	___lldiv@divisor,w
  1677  0627  1903               	skipnz
  1678  0628  2E2A               	goto	u411
  1679  0629  2E2B               	goto	u410
  1680  062A                     u411:
  1681  062A  2E78               	goto	l1007
  1682  062B                     u410:
  1683  062B                     l989:
  1684  062B  01FD               	clrf	___lldiv@counter
  1685  062C  0AFD               	incf	___lldiv@counter,f
  1686  062D  2E3B               	goto	l993
  1687  062E                     l991:
  1688  062E  3001               	movlw	1
  1689  062F  00F8               	movwf	??___lldiv
  1690  0630                     u425:
  1691  0630  1003               	clrc
  1692  0631  0DF0               	rlf	___lldiv@divisor,f
  1693  0632  0DF1               	rlf	___lldiv@divisor+1,f
  1694  0633  0DF2               	rlf	___lldiv@divisor+2,f
  1695  0634  0DF3               	rlf	___lldiv@divisor+3,f
  1696  0635  0BF8               	decfsz	??___lldiv,f
  1697  0636  2E30               	goto	u425
  1698  0637  3001               	movlw	1
  1699  0638  00F8               	movwf	??___lldiv
  1700  0639  0878               	movf	??___lldiv,w
  1701  063A  07FD               	addwf	___lldiv@counter,f
  1702  063B                     l993:
  1703  063B  1FF3               	btfss	___lldiv@divisor+3,7
  1704  063C  2E3E               	goto	u431
  1705  063D  2E3F               	goto	u430
  1706  063E                     u431:
  1707  063E  2E2E               	goto	l991
  1708  063F                     u430:
  1709  063F                     l995:
  1710  063F  3001               	movlw	1
  1711  0640  00F8               	movwf	??___lldiv
  1712  0641                     u445:
  1713  0641  1003               	clrc
  1714  0642  0DF9               	rlf	___lldiv@quotient,f
  1715  0643  0DFA               	rlf	___lldiv@quotient+1,f
  1716  0644  0DFB               	rlf	___lldiv@quotient+2,f
  1717  0645  0DFC               	rlf	___lldiv@quotient+3,f
  1718  0646  0BF8               	decfsz	??___lldiv,f
  1719  0647  2E41               	goto	u445
  1720  0648                     l997:
  1721  0648  0873               	movf	___lldiv@divisor+3,w
  1722  0649  0277               	subwf	___lldiv@dividend+3,w
  1723  064A  1D03               	skipz
  1724  064B  2E56               	goto	u455
  1725  064C  0872               	movf	___lldiv@divisor+2,w
  1726  064D  0276               	subwf	___lldiv@dividend+2,w
  1727  064E  1D03               	skipz
  1728  064F  2E56               	goto	u455
  1729  0650  0871               	movf	___lldiv@divisor+1,w
  1730  0651  0275               	subwf	___lldiv@dividend+1,w
  1731  0652  1D03               	skipz
  1732  0653  2E56               	goto	u455
  1733  0654  0870               	movf	___lldiv@divisor,w
  1734  0655  0274               	subwf	___lldiv@dividend,w
  1735  0656                     u455:
  1736  0656  1C03               	skipc
  1737  0657  2E59               	goto	u451
  1738  0658  2E5A               	goto	u450
  1739  0659                     u451:
  1740  0659  2E69               	goto	l1003
  1741  065A                     u450:
  1742  065A                     l999:
  1743  065A  0870               	movf	___lldiv@divisor,w
  1744  065B  02F4               	subwf	___lldiv@dividend,f
  1745  065C  0871               	movf	___lldiv@divisor+1,w
  1746  065D  1C03               	skipc
  1747  065E  0F71               	incfsz	___lldiv@divisor+1,w
  1748  065F  02F5               	subwf	___lldiv@dividend+1,f
  1749  0660  0872               	movf	___lldiv@divisor+2,w
  1750  0661  1C03               	skipc
  1751  0662  0F72               	incfsz	___lldiv@divisor+2,w
  1752  0663  02F6               	subwf	___lldiv@dividend+2,f
  1753  0664  0873               	movf	___lldiv@divisor+3,w
  1754  0665  1C03               	skipc
  1755  0666  0F73               	incfsz	___lldiv@divisor+3,w
  1756  0667  02F7               	subwf	___lldiv@dividend+3,f
  1757  0668                     l1001:
  1758  0668  1479               	bsf	___lldiv@quotient,0
  1759  0669                     l1003:
  1760  0669  3001               	movlw	1
  1761  066A                     u465:
  1762  066A  1003               	clrc
  1763  066B  0CF3               	rrf	___lldiv@divisor+3,f
  1764  066C  0CF2               	rrf	___lldiv@divisor+2,f
  1765  066D  0CF1               	rrf	___lldiv@divisor+1,f
  1766  066E  0CF0               	rrf	___lldiv@divisor,f
  1767  066F  3EFF               	addlw	-1
  1768  0670  1D03               	skipz
  1769  0671  2E6A               	goto	u465
  1770  0672                     l1005:
  1771  0672  3001               	movlw	1
  1772  0673  02FD               	subwf	___lldiv@counter,f
  1773  0674  1D03               	btfss	3,2
  1774  0675  2E77               	goto	u471
  1775  0676  2E78               	goto	u470
  1776  0677                     u471:
  1777  0677  2E3F               	goto	l995
  1778  0678                     u470:
  1779  0678                     l1007:
  1780  0678  087C               	movf	___lldiv@quotient+3,w
  1781  0679  00F3               	movwf	?___lldiv+3
  1782  067A  087B               	movf	___lldiv@quotient+2,w
  1783  067B  00F2               	movwf	?___lldiv+2
  1784  067C  087A               	movf	___lldiv@quotient+1,w
  1785  067D  00F1               	movwf	?___lldiv+1
  1786  067E  0879               	movf	___lldiv@quotient,w
  1787  067F  00F0               	movwf	?___lldiv
  1788  0680                     l320:
  1789  0680  0008               	return
  1790  0681                     __end_of___lldiv:
  1791  007E                     btemp	set	126	;btemp
  1792  007E                     wtemp0	set	126
  1793                           
  1794                           	psect	config
  1795                           
  1796                           ;Config register CONFIG1 @ 0x2007
  1797                           ;	Oscillator Selection bits
  1798                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1799                           ;	Watchdog Timer Enable bit
  1800                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1801                           ;	Power-up Timer Enable bit
  1802                           ;	PWRTE = OFF, PWRT disabled
  1803                           ;	RE3/MCLR pin function select bit
  1804                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1805                           ;	Code Protection bit
  1806                           ;	CP = OFF, Program memory code protection is disabled
  1807                           ;	Data Code Protection bit
  1808                           ;	CPD = OFF, Data memory code protection is disabled
  1809                           ;	Brown Out Reset Selection bits
  1810                           ;	BOREN = OFF, BOR disabled
  1811                           ;	Internal External Switchover bit
  1812                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1813                           ;	Fail-Safe Clock Monitor Enabled bit
  1814                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1815                           ;	Low Voltage Programming Enable bit
  1816                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1817                           ;	In-Circuit Debugger Mode bit
  1818                           ;	DEBUG = 0x1, unprogrammed default
  1819  2007                     	org	8199
  1820  2007  20D4               	dw	8404
  1821                           
  1822                           ;Config register CONFIG2 @ 0x2008
  1823                           ;	Brown-out Reset Selection bit
  1824                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1825                           ;	Flash Program Memory Self Write Enable bits
  1826                           ;	WRT = OFF, Write protection off
  1827  2008                     	org	8200
  1828  2008  3FFF               	dw	16383

Data Sizes:
    Strings     2
    Constant    0
    Data        17
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      70
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _uartRC_init->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_uartRC_init
    _uartRC_init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1132
                                             20 BANK0      2     2      0
                    _I2C_Master_Init
                           _configIO
                        _uartRC_init
                       _uartTX_Write
 ---------------------------------------------------------------------------------
 (1) _uartTX_Write                                         2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _uartRC_init                                         16    14      2     721
                                              9 COMMON     2     2      0
                                              6 BANK0     14    12      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     396
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _configIO
   _uartRC_init
     ___aldiv
   _uartTX_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      54      12        0.0%
ABS                  0      0      54       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 12:15:42 2021

                       pc 0002                        l43 0599                        l80 061A  
                      fsr 0004                       l320 0680                       l183 07E5  
                     l192 0586                       l355 0695                       l365 071D  
                     l801 0592                       l803 0595                       l805 0598  
                     l841 0576                       l843 057B                       l845 0580  
                     l797 0587                       l991 062E                       l799 0591  
                     l993 063B                       l995 063F                       l987 061B  
                     _GIE 005F                       l997 0648                       l989 062B  
                     l999 065A                       u410 062B                       u411 062A  
                     u500 06B8                       u501 06B7                       u430 063F  
                     u270 0586                       u431 063E                       u271 0585  
                     u520 06CC                       u425 0630                       u521 06CB  
                     u601 0751                       u450 065A                       u610 0778  
                     u602 0752                       u451 0659                       u515 06BD  
                     u611 0777                       u603 0757                       u540 06E7  
                     u604 0758                       u445 0641                       u541 06E6  
                     u621 07AF                       u605 075D                       u470 0678  
                     u630 07D9                       u622 07B0                       u606 075E  
                     u471 0677                       u455 0656                       u535 06CE  
                     u631 07D8                       u623 07B5                       u640 05FA  
                     u560 0705                       u480 0688                       u624 07B6  
                     u465 066A                       u561 0704                       u545 06E3  
                     u481 0687                       u625 07BB                       u570 070A  
                     u490 0699                       u626 07BC                       u571 0709  
                     u555 06F7                       u491 0698                       u645 05F5  
                     u585 0726                       u595 0737                       indf 0000  
                    l1001 0668                      l1003 0669                      l1011 0681  
                    l1005 0672                      l1021 06A8                      l1013 0684  
                    l1007 0678                      l1031 06CC                      l1023 06B0  
                    l1015 0688                      l1041 06FF                      l1033 06D5  
                    l1025 06B8                      l1017 0699                      l1035 06E7  
                    l1027 06BB                      l1043 0705                      l1019 06A4  
                    l1051 071E                      l1045 070A                      l1037 06F5  
                    l1029 06C8                      l1061 07D9                      l1053 076F  
                    l1221 05CC                      l1047 0715                      l1039 06F6  
                    l1063 07DD                      l1055 0778                      l1223 05CF  
                    l1215 05AD                      l1081 0618                      l1073 05E3  
                    l1065 07DE                      l1057 07CD                      l1225 05D5  
                    l1217 05B2                      l1083 0619                      l1075 05E7  
                    l1067 07E1                      l1059 07D0                      l1219 05BD  
                    l1077 05EA                      l1069 07E2                      l1079 0617  
                    STR_1 0009                      u1357 05DB                      u1367 057D  
                    _PEIE 005E                      _main 05AD                      btemp 007E  
                    start 0000                _GetTempCmd 003A          ?_I2C_Master_Init 003F  
         __end_of___aldiv 071E                     ?_main 0070                     _ANSEL 0188  
         __end_of___lldiv 0681                     _RCREG 001A                     _SPBRG 0099  
                   _PORTD 0008                     _TRISD 0088                     _SSPIE 0463  
                   _SSPIF 0063                     _TXREG 0019                     _datos 0020  
         _GetRHumidityCmd 005E                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 07E6              __end_of_main 05E3  
                  ??_main 0053             _AHT10_address 0064                    _ANSELH 0189  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
            ?_uartRC_init 0045                    _SSPCON 0014                    _SSPBUF 0013  
        __end_of_configIO 059A                 ??___aldiv 0078                 ??___lldiv 0078  
 __end_of__initialization 07FC            __pcstackCOMMON 0070              __pidataBANK0 0564  
              __pbssBANK0 0020                __pmaintext 05AD                   _SSPCON2 0091  
               ?_configIO 0070                   _SSPSTAT 0094                __stringtab 0003  
         _eSensorResetCmd 0065             ?_uartTX_Write 0070      __size_of_uartRC_init 00C8  
                 ___aldiv 0681                   ___lldiv 061B                   __ptext1 0575  
                 __ptext2 071E                   __ptext3 0681                   __ptext4 0587  
                 __ptext5 05E3                   __ptext6 061B                   _humeda1 0034  
                 _humedad 003C          ___aldiv@dividend 0074  __size_of_I2C_Master_Init 0038  
              ??_configIO 0070                   clrloop0 055D      end_of_initialization 07FC  
          ??_uartTX_Write 0070           ___lldiv@divisor 0070           ___lldiv@counter 007D  
       _eSensorMeasureCmd 0055                 _RCSTAbits 0018          ___aldiv@quotient 0041  
        I2C_Master_Init@c 003F       _eSensorCalibrateCmd 005B                 _PORTDbits 0008  
               _TRISCbits 0087              _LecturaUSART 003E                 _TXSTAbits 0098  
       _AHT10Address_High 0060       start_initialization 07E6         ??_I2C_Master_Init 0043  
              init_fetch0 059A               __pdataBANK0 0055      __end_of_uartTX_Write 0587  
               ___latbits 0002             __pcstackBANK0 003F         __size_of_configIO 0013  
                ?___aldiv 0070                  ?___lldiv 0070                 __pstrings 0003  
         ___aldiv@divisor 0070             ??_uartRC_init 0047           ___aldiv@counter 003F  
               clear_ram0 055C                  _PIE1bits 008C                  _PIR1bits 000C  
             __stringbase 0008          _eSensorNormalCmd 0058       uartRC_init@baudrate 0045  
        _AHT10Address_Low 0062       __end_of_uartRC_init 07E6          __size_of___aldiv 009D  
        __size_of___lldiv 0066     __size_of_uartTX_Write 0012          uartTX_Write@dato 0071  
      __end_of__stringtab 0009              uartRC_init@n 0079           _I2C_Master_Init 05E3  
                _configIO 0587             __size_of_main 0036              _uartTX_Write 0575  
                _tempera1 0037                _INTCONbits 000B                  init_ram0 059E  
        ___lldiv@dividend 0074               _uartRC_init 071E                 stringcode 0003  
 __end_of_I2C_Master_Init 061B               _temperatura 003D          ___lldiv@quotient 0079  
                stringdir 0003                  stringtab 0003              ___aldiv@sign 0040  
             _SSPCON2bits 0091  
