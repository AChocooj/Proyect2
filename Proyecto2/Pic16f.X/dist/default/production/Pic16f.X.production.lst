

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 00:05:18 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    62                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    63                           	dabs	1,0x7E,2
    64  0000                     
    65                           ; Version 2.20
    66                           ; Generated 12/02/2020 GMT
    67                           ; 
    68                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F887 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0008                     	;# 
   108  0009                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000D                     	;# 
   113  000E                     	;# 
   114  000E                     	;# 
   115  000F                     	;# 
   116  0010                     	;# 
   117  0011                     	;# 
   118  0012                     	;# 
   119  0013                     	;# 
   120  0014                     	;# 
   121  0015                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  001A                     	;# 
   128  001B                     	;# 
   129  001B                     	;# 
   130  001C                     	;# 
   131  001D                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  0081                     	;# 
   135  0085                     	;# 
   136  0086                     	;# 
   137  0087                     	;# 
   138  0088                     	;# 
   139  0089                     	;# 
   140  008C                     	;# 
   141  008D                     	;# 
   142  008E                     	;# 
   143  008F                     	;# 
   144  0090                     	;# 
   145  0091                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0093                     	;# 
   149  0093                     	;# 
   150  0094                     	;# 
   151  0095                     	;# 
   152  0096                     	;# 
   153  0097                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009A                     	;# 
   157  009B                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  0105                     	;# 
   163  0107                     	;# 
   164  0108                     	;# 
   165  0109                     	;# 
   166  010C                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  0185                     	;# 
   172  0187                     	;# 
   173  0188                     	;# 
   174  0189                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  0007                     	;# 
   185  0008                     	;# 
   186  0009                     	;# 
   187  000A                     	;# 
   188  000B                     	;# 
   189  000C                     	;# 
   190  000D                     	;# 
   191  000E                     	;# 
   192  000E                     	;# 
   193  000F                     	;# 
   194  0010                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0013                     	;# 
   198  0014                     	;# 
   199  0015                     	;# 
   200  0015                     	;# 
   201  0016                     	;# 
   202  0017                     	;# 
   203  0018                     	;# 
   204  0019                     	;# 
   205  001A                     	;# 
   206  001B                     	;# 
   207  001B                     	;# 
   208  001C                     	;# 
   209  001D                     	;# 
   210  001E                     	;# 
   211  001F                     	;# 
   212  0081                     	;# 
   213  0085                     	;# 
   214  0086                     	;# 
   215  0087                     	;# 
   216  0088                     	;# 
   217  0089                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  008F                     	;# 
   222  0090                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0093                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0095                     	;# 
   230  0096                     	;# 
   231  0097                     	;# 
   232  0098                     	;# 
   233  0099                     	;# 
   234  009A                     	;# 
   235  009B                     	;# 
   236  009C                     	;# 
   237  009D                     	;# 
   238  009E                     	;# 
   239  009F                     	;# 
   240  0105                     	;# 
   241  0107                     	;# 
   242  0108                     	;# 
   243  0109                     	;# 
   244  010C                     	;# 
   245  010C                     	;# 
   246  010D                     	;# 
   247  010E                     	;# 
   248  010F                     	;# 
   249  0185                     	;# 
   250  0187                     	;# 
   251  0188                     	;# 
   252  0189                     	;# 
   253  018C                     	;# 
   254  018D                     	;# 
   255  0000                     	;# 
   256  0001                     	;# 
   257  0002                     	;# 
   258  0003                     	;# 
   259  0004                     	;# 
   260  0005                     	;# 
   261  0006                     	;# 
   262  0007                     	;# 
   263  0008                     	;# 
   264  0009                     	;# 
   265  000A                     	;# 
   266  000B                     	;# 
   267  000C                     	;# 
   268  000D                     	;# 
   269  000E                     	;# 
   270  000E                     	;# 
   271  000F                     	;# 
   272  0010                     	;# 
   273  0011                     	;# 
   274  0012                     	;# 
   275  0013                     	;# 
   276  0014                     	;# 
   277  0015                     	;# 
   278  0015                     	;# 
   279  0016                     	;# 
   280  0017                     	;# 
   281  0018                     	;# 
   282  0019                     	;# 
   283  001A                     	;# 
   284  001B                     	;# 
   285  001B                     	;# 
   286  001C                     	;# 
   287  001D                     	;# 
   288  001E                     	;# 
   289  001F                     	;# 
   290  0081                     	;# 
   291  0085                     	;# 
   292  0086                     	;# 
   293  0087                     	;# 
   294  0088                     	;# 
   295  0089                     	;# 
   296  008C                     	;# 
   297  008D                     	;# 
   298  008E                     	;# 
   299  008F                     	;# 
   300  0090                     	;# 
   301  0091                     	;# 
   302  0092                     	;# 
   303  0093                     	;# 
   304  0093                     	;# 
   305  0093                     	;# 
   306  0094                     	;# 
   307  0095                     	;# 
   308  0096                     	;# 
   309  0097                     	;# 
   310  0098                     	;# 
   311  0099                     	;# 
   312  009A                     	;# 
   313  009B                     	;# 
   314  009C                     	;# 
   315  009D                     	;# 
   316  009E                     	;# 
   317  009F                     	;# 
   318  0105                     	;# 
   319  0107                     	;# 
   320  0108                     	;# 
   321  0109                     	;# 
   322  010C                     	;# 
   323  010C                     	;# 
   324  010D                     	;# 
   325  010E                     	;# 
   326  010F                     	;# 
   327  0185                     	;# 
   328  0187                     	;# 
   329  0188                     	;# 
   330  0189                     	;# 
   331  018C                     	;# 
   332  018D                     	;# 
   333  0000                     	;# 
   334  0001                     	;# 
   335  0002                     	;# 
   336  0003                     	;# 
   337  0004                     	;# 
   338  0005                     	;# 
   339  0006                     	;# 
   340  0007                     	;# 
   341  0008                     	;# 
   342  0009                     	;# 
   343  000A                     	;# 
   344  000B                     	;# 
   345  000C                     	;# 
   346  000D                     	;# 
   347  000E                     	;# 
   348  000E                     	;# 
   349  000F                     	;# 
   350  0010                     	;# 
   351  0011                     	;# 
   352  0012                     	;# 
   353  0013                     	;# 
   354  0014                     	;# 
   355  0015                     	;# 
   356  0015                     	;# 
   357  0016                     	;# 
   358  0017                     	;# 
   359  0018                     	;# 
   360  0019                     	;# 
   361  001A                     	;# 
   362  001B                     	;# 
   363  001B                     	;# 
   364  001C                     	;# 
   365  001D                     	;# 
   366  001E                     	;# 
   367  001F                     	;# 
   368  0081                     	;# 
   369  0085                     	;# 
   370  0086                     	;# 
   371  0087                     	;# 
   372  0088                     	;# 
   373  0089                     	;# 
   374  008C                     	;# 
   375  008D                     	;# 
   376  008E                     	;# 
   377  008F                     	;# 
   378  0090                     	;# 
   379  0091                     	;# 
   380  0092                     	;# 
   381  0093                     	;# 
   382  0093                     	;# 
   383  0093                     	;# 
   384  0094                     	;# 
   385  0095                     	;# 
   386  0096                     	;# 
   387  0097                     	;# 
   388  0098                     	;# 
   389  0099                     	;# 
   390  009A                     	;# 
   391  009B                     	;# 
   392  009C                     	;# 
   393  009D                     	;# 
   394  009E                     	;# 
   395  009F                     	;# 
   396  0105                     	;# 
   397  0107                     	;# 
   398  0108                     	;# 
   399  0109                     	;# 
   400  010C                     	;# 
   401  010C                     	;# 
   402  010D                     	;# 
   403  010E                     	;# 
   404  010F                     	;# 
   405  0185                     	;# 
   406  0187                     	;# 
   407  0188                     	;# 
   408  0189                     	;# 
   409  018C                     	;# 
   410  018D                     	;# 
   411  0000                     	;# 
   412  0001                     	;# 
   413  0002                     	;# 
   414  0003                     	;# 
   415  0004                     	;# 
   416  0005                     	;# 
   417  0006                     	;# 
   418  0007                     	;# 
   419  0008                     	;# 
   420  0009                     	;# 
   421  000A                     	;# 
   422  000B                     	;# 
   423  000C                     	;# 
   424  000D                     	;# 
   425  000E                     	;# 
   426  000E                     	;# 
   427  000F                     	;# 
   428  0010                     	;# 
   429  0011                     	;# 
   430  0012                     	;# 
   431  0013                     	;# 
   432  0014                     	;# 
   433  0015                     	;# 
   434  0015                     	;# 
   435  0016                     	;# 
   436  0017                     	;# 
   437  0018                     	;# 
   438  0019                     	;# 
   439  001A                     	;# 
   440  001B                     	;# 
   441  001B                     	;# 
   442  001C                     	;# 
   443  001D                     	;# 
   444  001E                     	;# 
   445  001F                     	;# 
   446  0081                     	;# 
   447  0085                     	;# 
   448  0086                     	;# 
   449  0087                     	;# 
   450  0088                     	;# 
   451  0089                     	;# 
   452  008C                     	;# 
   453  008D                     	;# 
   454  008E                     	;# 
   455  008F                     	;# 
   456  0090                     	;# 
   457  0091                     	;# 
   458  0092                     	;# 
   459  0093                     	;# 
   460  0093                     	;# 
   461  0093                     	;# 
   462  0094                     	;# 
   463  0095                     	;# 
   464  0096                     	;# 
   465  0097                     	;# 
   466  0098                     	;# 
   467  0099                     	;# 
   468  009A                     	;# 
   469  009B                     	;# 
   470  009C                     	;# 
   471  009D                     	;# 
   472  009E                     	;# 
   473  009F                     	;# 
   474  0105                     	;# 
   475  0107                     	;# 
   476  0108                     	;# 
   477  0109                     	;# 
   478  010C                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010E                     	;# 
   482  010F                     	;# 
   483  0185                     	;# 
   484  0187                     	;# 
   485  0188                     	;# 
   486  0189                     	;# 
   487  018C                     	;# 
   488  018D                     	;# 
   489                           
   490                           	psect	idataCOMMON
   491  07FE                     __pidataCOMMON:
   492                           
   493                           ;initializer for _AHT10_address
   494  07FE  3438               	retlw	56
   495                           
   496                           	psect	idataBANK0
   497  07FF                     __pidataBANK0:
   498                           
   499                           ;initializer for _eSensorResetCmd
   500  07FF  34BA               	retlw	186
   501                           
   502                           	psect	idataBANK1
   503  0801                     __pidataBANK1:
   504                           
   505                           ;initializer for _eSensorMeasureCmd
   506  0801  34AC               	retlw	172
   507  0802  3433               	retlw	51
   508  0803  3400               	retlw	0
   509                           
   510                           ;initializer for _eSensorNormalCmd
   511  0804  34A8               	retlw	168
   512  0805  3400               	retlw	0
   513  0806  3400               	retlw	0
   514                           
   515                           ;initializer for _eSensorCalibrateCmd
   516  0807  34E1               	retlw	225
   517  0808  3408               	retlw	8
   518  0809  3400               	retlw	0
   519                           
   520                           ;initializer for _GetRHumidityCmd
   521  080A  3401               	retlw	1
   522  080B  3400               	retlw	0
   523                           
   524                           ;initializer for _AHT10Address_High
   525  080C  3439               	retlw	57
   526  080D  3400               	retlw	0
   527                           
   528                           ;initializer for _AHT10Address_Low
   529  080E  3438               	retlw	56
   530  080F  3400               	retlw	0
   531                           
   532                           	psect	strings
   533  1000                     __pstrings:
   534  1000                     stringtab:
   535  1000                     __stringtab:
   536  1000                     stringcode:	
   537                           ;	String table - string pointers are 1 byte each
   538                           
   539  1000                     stringdir:
   540  1000  3010               	movlw	high stringdir
   541  1001  008A               	movwf	10
   542  1002  0804               	movf	4,w
   543  1003  0A84               	incf	4,f
   544  1004  0782               	addwf	2,f
   545  1005                     __stringbase:
   546  1005  3400               	retlw	0
   547  1006                     __end_of__stringtab:
   548  1006                     __powers_:
   549  1006  3400               	retlw	0
   550  1007  3480               	retlw	128
   551  1008  343F               	retlw	63
   552  1009  3400               	retlw	0
   553  100A  3420               	retlw	32
   554  100B  3441               	retlw	65
   555  100C  3400               	retlw	0
   556  100D  34C8               	retlw	200
   557  100E  3442               	retlw	66
   558  100F  3400               	retlw	0
   559  1010  347A               	retlw	122
   560  1011  3444               	retlw	68
   561  1012  3440               	retlw	64
   562  1013  341C               	retlw	28
   563  1014  3446               	retlw	70
   564  1015  3450               	retlw	80
   565  1016  34C3               	retlw	195
   566  1017  3447               	retlw	71
   567  1018  3424               	retlw	36
   568  1019  3474               	retlw	116
   569  101A  3449               	retlw	73
   570  101B  3497               	retlw	151
   571  101C  3418               	retlw	24
   572  101D  344B               	retlw	75
   573  101E  34BC               	retlw	188
   574  101F  34BE               	retlw	190
   575  1020  344C               	retlw	76
   576  1021  346B               	retlw	107
   577  1022  346E               	retlw	110
   578  1023  344E               	retlw	78
   579  1024  3403               	retlw	3
   580  1025  3415               	retlw	21
   581  1026  3450               	retlw	80
   582  1027  3479               	retlw	121
   583  1028  34AD               	retlw	173
   584  1029  3460               	retlw	96
   585  102A  34F3               	retlw	243
   586  102B  3449               	retlw	73
   587  102C  3471               	retlw	113
   588  102D                     __end_of__powers_:
   589  102D                     __npowers_:
   590  102D  3400               	retlw	0
   591  102E  3480               	retlw	128
   592  102F  343F               	retlw	63
   593  1030  34CD               	retlw	205
   594  1031  34CC               	retlw	204
   595  1032  343D               	retlw	61
   596  1033  34D7               	retlw	215
   597  1034  3423               	retlw	35
   598  1035  343C               	retlw	60
   599  1036  3412               	retlw	18
   600  1037  3483               	retlw	131
   601  1038  343A               	retlw	58
   602  1039  34B7               	retlw	183
   603  103A  34D1               	retlw	209
   604  103B  3438               	retlw	56
   605  103C  34C6               	retlw	198
   606  103D  3427               	retlw	39
   607  103E  3437               	retlw	55
   608  103F  3438               	retlw	56
   609  1040  3486               	retlw	134
   610  1041  3435               	retlw	53
   611  1042  34C0               	retlw	192
   612  1043  34D6               	retlw	214
   613  1044  3433               	retlw	51
   614  1045  34CC               	retlw	204
   615  1046  342B               	retlw	43
   616  1047  3432               	retlw	50
   617  1048  3470               	retlw	112
   618  1049  3489               	retlw	137
   619  104A  3430               	retlw	48
   620  104B  34E7               	retlw	231
   621  104C  34DB               	retlw	219
   622  104D  342E               	retlw	46
   623  104E  34E5               	retlw	229
   624  104F  343C               	retlw	60
   625  1050  341E               	retlw	30
   626  1051  3442               	retlw	66
   627  1052  34A2               	retlw	162
   628  1053  340D               	retlw	13
   629  1054                     __end_of__npowers_:
   630  1054                     _dpowers:
   631  1054  3401               	retlw	1
   632  1055  3400               	retlw	0
   633  1056  3400               	retlw	0
   634  1057  3400               	retlw	0
   635  1058  340A               	retlw	10
   636  1059  3400               	retlw	0
   637  105A  3400               	retlw	0
   638  105B  3400               	retlw	0
   639  105C  3464               	retlw	100
   640  105D  3400               	retlw	0
   641  105E  3400               	retlw	0
   642  105F  3400               	retlw	0
   643  1060  34E8               	retlw	232
   644  1061  3403               	retlw	3
   645  1062  3400               	retlw	0
   646  1063  3400               	retlw	0
   647  1064  3410               	retlw	16
   648  1065  3427               	retlw	39
   649  1066  3400               	retlw	0
   650  1067  3400               	retlw	0
   651  1068  34A0               	retlw	160
   652  1069  3486               	retlw	134
   653  106A  3401               	retlw	1
   654  106B  3400               	retlw	0
   655  106C  3440               	retlw	64
   656  106D  3442               	retlw	66
   657  106E  340F               	retlw	15
   658  106F  3400               	retlw	0
   659  1070  3480               	retlw	128
   660  1071  3496               	retlw	150
   661  1072  3498               	retlw	152
   662  1073  3400               	retlw	0
   663  1074  3400               	retlw	0
   664  1075  34E1               	retlw	225
   665  1076  34F5               	retlw	245
   666  1077  3405               	retlw	5
   667  1078  3400               	retlw	0
   668  1079  34CA               	retlw	202
   669  107A  349A               	retlw	154
   670  107B  343B               	retlw	59
   671  107C                     __end_of_dpowers:
   672  001A                     _RCREG	set	26
   673  0019                     _TXREG	set	25
   674  0013                     _SSPBUF	set	19
   675  0014                     _SSPCON	set	20
   676  000C                     _PIR1bits	set	12
   677  000B                     _INTCONbits	set	11
   678  0006                     _PORTB	set	6
   679  00C4                     _CREN	set	196
   680  00C7                     _SPEN	set	199
   681  0063                     _SSPIF	set	99
   682  005E                     _PEIE	set	94
   683  005F                     _GIE	set	95
   684  0065                     _RCIF	set	101
   685  0099                     _SPBRG	set	153
   686  0091                     _SSPCON2bits	set	145
   687  0087                     _TRISCbits	set	135
   688  0094                     _SSPSTAT	set	148
   689  0093                     _SSPADD	set	147
   690  0091                     _SSPCON2	set	145
   691  008C                     _PIE1bits	set	140
   692  0086                     _TRISB	set	134
   693  04C1                     _TRMT	set	1217
   694  04C5                     _TXEN	set	1221
   695  043E                     _TRISC6	set	1086
   696  043F                     _TRISC7	set	1087
   697  04C4                     _SYNC	set	1220
   698  04C2                     _BRGH	set	1218
   699  0463                     _SSPIE	set	1123
   700  043C                     _TRISC4	set	1084
   701  043B                     _TRISC3	set	1083
   702  0189                     _ANSELH	set	393
   703  0188                     _ANSEL	set	392
   704  107C                     STR_3:
   705  107C  3425               	retlw	37	;'%'
   706  107D  3432               	retlw	50	;'2'
   707  107E  342E               	retlw	46	;'.'
   708  107F  3431               	retlw	49	;'1'
   709  1080  3466               	retlw	102	;'f'
   710  1081  3420               	retlw	32	;' '
   711  1082  3420               	retlw	32	;' '
   712  1083  3420               	retlw	32	;' '
   713  1084  3425               	retlw	37	;'%'
   714  1085  3432               	retlw	50	;'2'
   715  1086  342E               	retlw	46	;'.'
   716  1087  3431               	retlw	49	;'1'
   717  1088  3466               	retlw	102	;'f'
   718  1089  3420               	retlw	32	;' '
   719  108A  3400               	retlw	0
   720  108B                     STR_2:
   721  108B  3454               	retlw	84	;'T'
   722  108C  3431               	retlw	49	;'1'
   723  108D  3420               	retlw	32	;' '
   724  108E  3420               	retlw	32	;' '
   725  108F  3420               	retlw	32	;' '
   726  1090  3448               	retlw	72	;'H'
   727  1091  3431               	retlw	49	;'1'
   728  1092  3420               	retlw	32	;' '
   729  1093  3420               	retlw	32	;' '
   730  1094  3420               	retlw	32	;' '
   731  1095  340A               	retlw	10
   732  1096  3400               	retlw	0
   733  1097                     STR_1:
   734  1097  3461               	retlw	97	;'a'
   735  1098  3400               	retlw	0
   736                           
   737                           	psect	cinit
   738  000F                     start_initialization:	
   739                           ; #config settings
   740                           
   741  000F                     __initialization:
   742                           
   743                           ; Initialize objects allocated to BANK1
   744  000F  1383               	bcf	3,7	;select IRP bank0
   745  0010  30EA               	movlw	low (__pdataBANK1+15)
   746  0011  00FD               	movwf	btemp+-1
   747  0012  3008               	movlw	high __pidataBANK1
   748  0013  00FE               	movwf	btemp
   749  0014  3001               	movlw	low __pidataBANK1
   750  0015  00FF               	movwf	btemp+1
   751  0016  30DB               	movlw	low __pdataBANK1
   752  0017  0084               	movwf	4
   753  0018  160A  158A  2541  120A  118A  	fcall	init_ram0
   754                           
   755                           ; Initialize objects allocated to BANK0
   756  001D  120A  118A  27FF  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   757  0022  00EC               	movwf	__pdataBANK0& (0+127)
   758                           
   759                           ; Initialize objects allocated to COMMON
   760  0023  120A  118A  27FE  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   761  0028  00FA               	movwf	__pdataCOMMON& (0+127)
   762                           
   763                           ; Clear objects allocated to BANK1
   764  0029  30BF               	movlw	low __pbssBANK1
   765  002A  0084               	movwf	4
   766  002B  30DB               	movlw	low (__pbssBANK1+28)
   767  002C  160A  158A  24D1  120A  118A  	fcall	clear_ram0
   768                           
   769                           ; Clear objects allocated to BANK0
   770  0031  01EB               	clrf	__pbssBANK0& (0+127)
   771                           
   772                           ; Clear objects allocated to COMMON
   773  0032  01F8               	clrf	__pbssCOMMON& (0+127)
   774  0033  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   775  0034                     end_of_initialization:	
   776                           ;End of C runtime variable initialization code
   777                           
   778  0034                     __end_of__initialization:
   779  0034  0183               	clrf	3
   780  0035  160A  118A  2BCE   	ljmp	_main	;jump to C main() function
   781                           
   782                           	psect	bssCOMMON
   783  0078                     __pbssCOMMON:
   784  0078                     _temperatura:
   785  0078                     	ds	1
   786  0079                     _LecturaUSART:
   787  0079                     	ds	1
   788                           
   789                           	psect	dataCOMMON
   790  007A                     __pdataCOMMON:
   791  007A                     _AHT10_address:
   792  007A                     	ds	1
   793                           
   794                           	psect	bssBANK0
   795  006B                     __pbssBANK0:
   796  006B                     _humedad:
   797  006B                     	ds	1
   798                           
   799                           	psect	dataBANK0
   800  006C                     __pdataBANK0:
   801  006C                     _eSensorResetCmd:
   802  006C                     	ds	1
   803                           
   804                           	psect	bssBANK1
   805  00BF                     __pbssBANK1:
   806  00BF                     _humeda1:
   807  00BF                     	ds	3
   808  00C2                     _tempera1:
   809  00C2                     	ds	3
   810  00C5                     _GetTempCmd:
   811  00C5                     	ds	2
   812  00C7                     _datos:
   813  00C7                     	ds	20
   814                           
   815                           	psect	dataBANK1
   816  00DB                     __pdataBANK1:
   817  00DB                     _eSensorMeasureCmd:
   818  00DB                     	ds	3
   819  00DE                     _eSensorNormalCmd:
   820  00DE                     	ds	3
   821  00E1                     _eSensorCalibrateCmd:
   822  00E1                     	ds	3
   823  00E4                     _GetRHumidityCmd:
   824  00E4                     	ds	2
   825  00E6                     _AHT10Address_High:
   826  00E6                     	ds	2
   827  00E8                     _AHT10Address_Low:
   828  00E8                     	ds	2
   829                           
   830                           	psect	inittext
   831  1D3D                     init_fetch0:	
   832                           ;	Called with low address in FSR and high address in W
   833                           
   834  1D3D  087E               	movf	btemp,w
   835  1D3E  008A               	movwf	10
   836  1D3F  087F               	movf	btemp+1,w
   837  1D40  0082               	movwf	2
   838  1D41                     init_ram0:	
   839                           ;Called with:
   840                           ;	high address of idata address in btemp 
   841                           ;	low address of idata address in btemp+1 
   842                           ;	low address of data in FSR
   843                           ;	high address + 1 of data in btemp-1
   844                           
   845  1D41  160A  158A  253D  160A  158A  	fcall	init_fetch0
   846  1D46  0080               	movwf	0
   847  1D47  0A84               	incf	4,f
   848  1D48  0804               	movf	4,w
   849  1D49  067D               	xorwf	btemp+-1,w
   850  1D4A  1903               	btfsc	3,2
   851  1D4B  3400               	retlw	0
   852  1D4C  0AFF               	incf	btemp+1,f
   853  1D4D  1903               	btfsc	3,2
   854  1D4E  0AFE               	incf	btemp,f
   855  1D4F  2D41               	goto	init_ram0
   856                           
   857                           	psect	clrtext
   858  1CD1                     clear_ram0:	
   859                           ;	Called with FSR containing the base address, and
   860                           ;	W with the last address+1
   861                           
   862  1CD1  0064               	clrwdt	;clear the watchdog before getting into this loop
   863  1CD2                     clrloop0:
   864  1CD2  0180               	clrf	0	;clear RAM location pointed to by FSR
   865  1CD3  0A84               	incf	4,f	;increment pointer
   866  1CD4  0604               	xorwf	4,w	;XOR with final address
   867  1CD5  1903               	btfsc	3,2	;have we reached the end yet?
   868  1CD6  3400               	retlw	0	;all done for this memory range, return
   869  1CD7  0604               	xorwf	4,w	;XOR again to restore value
   870  1CD8  2CD2               	goto	clrloop0	;do the next byte
   871                           
   872                           	psect	cstackBANK1
   873  00A0                     __pcstackBANK1:
   874  00A0                     ??_sprintf:
   875                           
   876                           ; 1 bytes @ 0x0
   877  00A0                     	ds	6
   878  00A6                     _sprintf$961:
   879                           
   880                           ; 3 bytes @ 0x6
   881  00A6                     	ds	3
   882  00A9                     sprintf@ap:
   883                           
   884                           ; 1 bytes @ 0x9
   885  00A9                     	ds	1
   886  00AA                     sprintf@val:
   887                           
   888                           ; 4 bytes @ 0xA
   889  00AA                     	ds	4
   890  00AE                     sprintf@flag:
   891                           
   892                           ; 2 bytes @ 0xE
   893  00AE                     	ds	2
   894  00B0                     sprintf@width:
   895                           
   896                           ; 2 bytes @ 0x10
   897  00B0                     	ds	2
   898  00B2                     sprintf@tmpval:
   899                           
   900                           ; 4 bytes @ 0x12
   901  00B2                     	ds	4
   902  00B6                     sprintf@eexp:
   903                           
   904                           ; 2 bytes @ 0x16
   905  00B6                     	ds	2
   906  00B8                     sprintf@sp:
   907                           
   908                           ; 1 bytes @ 0x18
   909  00B8                     	ds	1
   910  00B9                     sprintf@fval:
   911                           
   912                           ; 3 bytes @ 0x19
   913  00B9                     	ds	3
   914  00BC                     sprintf@prec:
   915                           
   916                           ; 2 bytes @ 0x1C
   917  00BC                     	ds	2
   918  00BE                     sprintf@c:
   919                           
   920                           ; 1 bytes @ 0x1E
   921  00BE                     	ds	1
   922                           
   923                           	psect	cstackCOMMON
   924  0070                     __pcstackCOMMON:
   925  0070                     ?_isdigit:
   926  0070                     ?_Read_USART:	
   927                           ; 1 bit 
   928                           
   929  0070                     ??_Read_USART:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ?_Write_USART:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ?_Write_USART_String:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0070                     ?_configIO:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0070                     ?_ISR:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0070                     ??_ISR:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0070                     ?_main:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0070                     ?_I2C_Master_Wait:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0070                     ?_I2C_Master_Start:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0070                     ?_I2C_Master_Stop:	
   957                           ; 1 bytes @ 0x0
   958                           
   959                           
   960                           ; 1 bytes @ 0x0
   961  0070                     	ds	3
   962  0073                     ??_Write_USART:
   963  0073                     ??_isdigit:	
   964                           ; 1 bytes @ 0x3
   965                           
   966  0073                     ??__tdiv_to_l_:	
   967                           ; 1 bytes @ 0x3
   968                           
   969  0073                     ??_configIO:	
   970                           ; 1 bytes @ 0x3
   971                           
   972  0073                     ??_I2C_Master_Wait:	
   973                           ; 1 bytes @ 0x3
   974                           
   975  0073                     ??_I2C_Master_Start:	
   976                           ; 1 bytes @ 0x3
   977                           
   978  0073                     ??_I2C_Master_Stop:	
   979                           ; 1 bytes @ 0x3
   980                           
   981  0073                     ?_I2C_Master_Write:	
   982                           ; 1 bytes @ 0x3
   983                           
   984  0073                     ??___lldiv:	
   985                           ; 1 bytes @ 0x3
   986                           
   987  0073                     ??___aldiv:	
   988                           ; 1 bytes @ 0x3
   989                           
   990  0073                     ??___ftge:	
   991                           ; 1 bytes @ 0x3
   992                           
   993  0073                     ??___llmod:	
   994                           ; 1 bytes @ 0x3
   995                           
   996  0073                     ?_I2C_Master_Read:	
   997                           ; 1 bytes @ 0x3
   998                           
   999  0073                     ?___wmul:	
  1000                           ; 2 bytes @ 0x3
  1001                           
  1002  0073                     ?___awmod:	
  1003                           ; 2 bytes @ 0x3
  1004                           
  1005  0073                     ?___lwmod:	
  1006                           ; 2 bytes @ 0x3
  1007                           
  1008  0073                     ?___ftpack:	
  1009                           ; 2 bytes @ 0x3
  1010                           
  1011  0073                     ?___ftneg:	
  1012                           ; 3 bytes @ 0x3
  1013                           
  1014  0073                     Write_USART@a:	
  1015                           ; 3 bytes @ 0x3
  1016                           
  1017  0073                     _isdigit$750:	
  1018                           ; 1 bytes @ 0x3
  1019                           
  1020  0073                     I2C_Master_Write@d:	
  1021                           ; 1 bytes @ 0x3
  1022                           
  1023  0073                     I2C_Master_Read@a:	
  1024                           ; 2 bytes @ 0x3
  1025                           
  1026  0073                     ___wmul@multiplier:	
  1027                           ; 2 bytes @ 0x3
  1028                           
  1029  0073                     ___awmod@divisor:	
  1030                           ; 2 bytes @ 0x3
  1031                           
  1032  0073                     ___lwmod@divisor:	
  1033                           ; 2 bytes @ 0x3
  1034                           
  1035  0073                     ___ftpack@arg:	
  1036                           ; 2 bytes @ 0x3
  1037                           
  1038  0073                     ___ftneg@f1:	
  1039                           ; 3 bytes @ 0x3
  1040                           
  1041                           
  1042                           ; 3 bytes @ 0x3
  1043  0073                     	ds	1
  1044  0074                     ??_I2C_Master_Init:
  1045  0074                     ??_Write_USART_String:	
  1046                           ; 1 bytes @ 0x4
  1047                           
  1048  0074                     ___llmod@counter:	
  1049                           ; 1 bytes @ 0x4
  1050                           
  1051  0074                     isdigit@c:	
  1052                           ; 1 bytes @ 0x4
  1053                           
  1054  0074                     USART_Init@x:	
  1055                           ; 1 bytes @ 0x4
  1056                           
  1057                           
  1058                           ; 2 bytes @ 0x4
  1059  0074                     	ds	1
  1060  0075                     ??_I2C_Master_Write:
  1061  0075                     ??_I2C_Master_Read:	
  1062                           ; 1 bytes @ 0x5
  1063                           
  1064  0075                     Write_USART_String@a:	
  1065                           ; 1 bytes @ 0x5
  1066                           
  1067  0075                     ___wmul@multiplicand:	
  1068                           ; 1 bytes @ 0x5
  1069                           
  1070  0075                     ___awmod@dividend:	
  1071                           ; 2 bytes @ 0x5
  1072                           
  1073  0075                     ___lwmod@dividend:	
  1074                           ; 2 bytes @ 0x5
  1075                           
  1076                           
  1077                           ; 2 bytes @ 0x5
  1078  0075                     	ds	1
  1079  0076                     ??___ftneg:
  1080  0076                     Write_USART_String@i:	
  1081                           ; 1 bytes @ 0x6
  1082                           
  1083  0076                     ___ftpack@exp:	
  1084                           ; 1 bytes @ 0x6
  1085                           
  1086                           
  1087                           ; 1 bytes @ 0x6
  1088  0076                     	ds	1
  1089  0077                     ??___wmul:
  1090  0077                     ??___awmod:	
  1091                           ; 1 bytes @ 0x7
  1092                           
  1093  0077                     ??___lwmod:	
  1094                           ; 1 bytes @ 0x7
  1095                           
  1096  0077                     ___ftpack@sign:	
  1097                           ; 1 bytes @ 0x7
  1098                           
  1099                           
  1100                           ; 1 bytes @ 0x7
  1101  0077                     	ds	1
  1102  0078                     ??_aht_GetHumidity:
  1103  0078                     ??_aht_GetTemperature:	
  1104                           ; 1 bytes @ 0x8
  1105                           
  1106  0078                     ??___ftsub:	
  1107                           ; 1 bytes @ 0x8
  1108                           
  1109                           
  1110                           	psect	cstackBANK0
  1111  0020                     __pcstackBANK0:	
  1112                           ; 1 bytes @ 0x8
  1113                           
  1114  0020                     ?___ftge:
  1115  0020                     ??___ftpack:	
  1116                           ; 1 bit 
  1117                           
  1118  0020                     ?__tdiv_to_l_:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0020                     ?__div_to_l_:	
  1122                           ; 4 bytes @ 0x0
  1123                           
  1124  0020                     ?___lldiv:	
  1125                           ; 4 bytes @ 0x0
  1126                           
  1127  0020                     ?___aldiv:	
  1128                           ; 4 bytes @ 0x0
  1129                           
  1130  0020                     ?___llmod:	
  1131                           ; 4 bytes @ 0x0
  1132                           
  1133  0020                     ___awmod@counter:	
  1134                           ; 4 bytes @ 0x0
  1135                           
  1136  0020                     ___lwmod@counter:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0020                     I2C_Master_Read@temp:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0020                     ___wmul@product:	
  1143                           ; 2 bytes @ 0x0
  1144                           
  1145  0020                     __div_to_l_@f1:	
  1146                           ; 2 bytes @ 0x0
  1147                           
  1148  0020                     __tdiv_to_l_@f1:	
  1149                           ; 3 bytes @ 0x0
  1150                           
  1151  0020                     ___ftge@ff1:	
  1152                           ; 3 bytes @ 0x0
  1153                           
  1154  0020                     ___lldiv@divisor:	
  1155                           ; 3 bytes @ 0x0
  1156                           
  1157  0020                     ___aldiv@divisor:	
  1158                           ; 4 bytes @ 0x0
  1159                           
  1160  0020                     ___llmod@divisor:	
  1161                           ; 4 bytes @ 0x0
  1162                           
  1163                           
  1164                           ; 4 bytes @ 0x0
  1165  0020                     	ds	1
  1166  0021                     ?___lwdiv:
  1167  0021                     ___awmod@sign:	
  1168                           ; 2 bytes @ 0x1
  1169                           
  1170  0021                     ___lwdiv@divisor:	
  1171                           ; 1 bytes @ 0x1
  1172                           
  1173                           
  1174                           ; 2 bytes @ 0x1
  1175  0021                     	ds	1
  1176  0022                     ?___awdiv:
  1177  0022                     ?_aht_readSensor:	
  1178                           ; 2 bytes @ 0x2
  1179                           
  1180  0022                     aht_readSensor@GetDataCmd:	
  1181                           ; 4 bytes @ 0x2
  1182                           
  1183  0022                     ___awdiv@divisor:	
  1184                           ; 2 bytes @ 0x2
  1185                           
  1186                           
  1187                           ; 2 bytes @ 0x2
  1188  0022                     	ds	1
  1189  0023                     ___lwdiv@dividend:
  1190  0023                     __div_to_l_@f2:	
  1191                           ; 2 bytes @ 0x3
  1192                           
  1193  0023                     __tdiv_to_l_@f2:	
  1194                           ; 3 bytes @ 0x3
  1195                           
  1196  0023                     ___ftge@ff2:	
  1197                           ; 3 bytes @ 0x3
  1198                           
  1199                           
  1200                           ; 3 bytes @ 0x3
  1201  0023                     	ds	1
  1202  0024                     ___awdiv@dividend:
  1203  0024                     ___lldiv@dividend:	
  1204                           ; 2 bytes @ 0x4
  1205                           
  1206  0024                     ___aldiv@dividend:	
  1207                           ; 4 bytes @ 0x4
  1208                           
  1209  0024                     ___llmod@dividend:	
  1210                           ; 4 bytes @ 0x4
  1211                           
  1212                           
  1213                           ; 4 bytes @ 0x4
  1214  0024                     	ds	1
  1215  0025                     ??___lwdiv:
  1216                           
  1217                           ; 1 bytes @ 0x5
  1218  0025                     	ds	1
  1219  0026                     ??_aht_readSensor:
  1220  0026                     ??__div_to_l_:	
  1221                           ; 1 bytes @ 0x6
  1222                           
  1223  0026                     ??___awdiv:	
  1224                           ; 1 bytes @ 0x6
  1225                           
  1226  0026                     ___lwdiv@counter:	
  1227                           ; 1 bytes @ 0x6
  1228                           
  1229  0026                     __tdiv_to_l_@quot:	
  1230                           ; 1 bytes @ 0x6
  1231                           
  1232                           
  1233                           ; 4 bytes @ 0x6
  1234  0026                     	ds	1
  1235  0027                     ___awdiv@counter:
  1236  0027                     ___lwdiv@quotient:	
  1237                           ; 1 bytes @ 0x7
  1238                           
  1239                           
  1240                           ; 2 bytes @ 0x7
  1241  0027                     	ds	1
  1242  0028                     ___aldiv@counter:
  1243  0028                     ___awdiv@sign:	
  1244                           ; 1 bytes @ 0x8
  1245                           
  1246  0028                     ___lldiv@quotient:	
  1247                           ; 1 bytes @ 0x8
  1248                           
  1249                           
  1250                           ; 4 bytes @ 0x8
  1251  0028                     	ds	1
  1252  0029                     ___aldiv@sign:
  1253  0029                     ___awdiv@quotient:	
  1254                           ; 1 bytes @ 0x9
  1255                           
  1256                           
  1257                           ; 2 bytes @ 0x9
  1258  0029                     	ds	1
  1259  002A                     __tdiv_to_l_@cntr:
  1260  002A                     ___aldiv@quotient:	
  1261                           ; 1 bytes @ 0xA
  1262                           
  1263                           
  1264                           ; 4 bytes @ 0xA
  1265  002A                     	ds	1
  1266  002B                     ?___bmul:
  1267  002B                     ___bmul@multiplicand:	
  1268                           ; 1 bytes @ 0xB
  1269                           
  1270  002B                     __tdiv_to_l_@exp1:	
  1271                           ; 1 bytes @ 0xB
  1272                           
  1273                           
  1274                           ; 1 bytes @ 0xB
  1275  002B                     	ds	1
  1276  002C                     ??___bmul:
  1277  002C                     ___lldiv@counter:	
  1278                           ; 1 bytes @ 0xC
  1279                           
  1280                           
  1281                           ; 1 bytes @ 0xC
  1282  002C                     	ds	1
  1283  002D                     ?_I2C_Master_Init:
  1284  002D                     ___bmul@product:	
  1285                           ; 1 bytes @ 0xD
  1286                           
  1287  002D                     I2C_Master_Init@c:	
  1288                           ; 1 bytes @ 0xD
  1289                           
  1290                           
  1291                           ; 4 bytes @ 0xD
  1292  002D                     	ds	1
  1293  002E                     ?_USART_Init:
  1294  002E                     ___bmul@multiplier:	
  1295                           ; 1 bytes @ 0xE
  1296                           
  1297  002E                     USART_Init@baudrate:	
  1298                           ; 1 bytes @ 0xE
  1299                           
  1300  002E                     __div_to_l_@quot:	
  1301                           ; 4 bytes @ 0xE
  1302                           
  1303                           
  1304                           ; 4 bytes @ 0xE
  1305  002E                     	ds	1
  1306  002F                     ?___ftmul:
  1307  002F                     ___ftmul@f1:	
  1308                           ; 3 bytes @ 0xF
  1309                           
  1310                           
  1311                           ; 3 bytes @ 0xF
  1312  002F                     	ds	3
  1313  0032                     ??_USART_Init:
  1314  0032                     __div_to_l_@cntr:	
  1315                           ; 1 bytes @ 0x12
  1316                           
  1317  0032                     ___ftmul@f2:	
  1318                           ; 1 bytes @ 0x12
  1319                           
  1320  0032                     aht_readSensor@temp:	
  1321                           ; 3 bytes @ 0x12
  1322                           
  1323                           
  1324                           ; 24 bytes @ 0x12
  1325  0032                     	ds	1
  1326  0033                     __div_to_l_@exp1:
  1327                           
  1328                           ; 1 bytes @ 0x13
  1329  0033                     	ds	2
  1330  0035                     ??___ftmul:
  1331                           
  1332                           ; 1 bytes @ 0x15
  1333  0035                     	ds	4
  1334  0039                     ___ftmul@exp:
  1335                           
  1336                           ; 1 bytes @ 0x19
  1337  0039                     	ds	1
  1338  003A                     ___ftmul@f3_as_product:
  1339                           
  1340                           ; 3 bytes @ 0x1A
  1341  003A                     	ds	3
  1342  003D                     ___ftmul@cntr:
  1343                           
  1344                           ; 1 bytes @ 0x1D
  1345  003D                     	ds	1
  1346  003E                     ___ftmul@sign:
  1347                           
  1348                           ; 1 bytes @ 0x1E
  1349  003E                     	ds	1
  1350  003F                     ?_fround:
  1351  003F                     ?_scale:	
  1352                           ; 3 bytes @ 0x1F
  1353                           
  1354  003F                     ?___ftdiv:	
  1355                           ; 3 bytes @ 0x1F
  1356                           
  1357  003F                     ___ftdiv@f2:	
  1358                           ; 3 bytes @ 0x1F
  1359                           
  1360                           
  1361                           ; 3 bytes @ 0x1F
  1362  003F                     	ds	3
  1363  0042                     ??_fround:
  1364  0042                     ??_scale:	
  1365                           ; 1 bytes @ 0x22
  1366                           
  1367  0042                     ___ftdiv@f1:	
  1368                           ; 1 bytes @ 0x22
  1369                           
  1370                           
  1371                           ; 3 bytes @ 0x22
  1372  0042                     	ds	2
  1373  0044                     _scale$960:
  1374                           
  1375                           ; 3 bytes @ 0x24
  1376  0044                     	ds	1
  1377  0045                     ??___ftdiv:
  1378                           
  1379                           ; 1 bytes @ 0x25
  1380  0045                     	ds	2
  1381  0047                     scale@scl:
  1382                           
  1383                           ; 1 bytes @ 0x27
  1384  0047                     	ds	1
  1385  0048                     ?___fttol:
  1386  0048                     ___fttol@f1:	
  1387                           ; 4 bytes @ 0x28
  1388                           
  1389  0048                     _fround$959:	
  1390                           ; 3 bytes @ 0x28
  1391                           
  1392                           
  1393                           ; 3 bytes @ 0x28
  1394  0048                     	ds	1
  1395  0049                     ___ftdiv@cntr:
  1396                           
  1397                           ; 1 bytes @ 0x29
  1398  0049                     	ds	1
  1399  004A                     ___ftdiv@f3:
  1400  004A                     aht_readSensor@result:	
  1401                           ; 3 bytes @ 0x2A
  1402                           
  1403                           
  1404                           ; 4 bytes @ 0x2A
  1405  004A                     	ds	1
  1406  004B                     _fround$958:
  1407                           
  1408                           ; 3 bytes @ 0x2B
  1409  004B                     	ds	1
  1410  004C                     ??___fttol:
  1411                           
  1412                           ; 1 bytes @ 0x2C
  1413  004C                     	ds	1
  1414  004D                     ___ftdiv@exp:
  1415                           
  1416                           ; 1 bytes @ 0x2D
  1417  004D                     	ds	1
  1418  004E                     aht_readSensor@i:
  1419  004E                     fround@prec:	
  1420                           ; 1 bytes @ 0x2E
  1421                           
  1422  004E                     ___ftdiv@sign:	
  1423                           ; 1 bytes @ 0x2E
  1424                           
  1425                           
  1426                           ; 1 bytes @ 0x2E
  1427  004E                     	ds	1
  1428  004F                     ?___ftadd:
  1429  004F                     ?___lltoft:	
  1430                           ; 3 bytes @ 0x2F
  1431                           
  1432  004F                     ___ftadd@f1:	
  1433                           ; 3 bytes @ 0x2F
  1434                           
  1435  004F                     ___lltoft@c:	
  1436                           ; 3 bytes @ 0x2F
  1437                           
  1438                           
  1439                           ; 4 bytes @ 0x2F
  1440  004F                     	ds	1
  1441  0050                     ___fttol@sign1:
  1442                           
  1443                           ; 1 bytes @ 0x30
  1444  0050                     	ds	1
  1445  0051                     ___fttol@lval:
  1446                           
  1447                           ; 4 bytes @ 0x31
  1448  0051                     	ds	1
  1449  0052                     ___ftadd@f2:
  1450                           
  1451                           ; 3 bytes @ 0x32
  1452  0052                     	ds	1
  1453  0053                     ??___lltoft:
  1454                           
  1455                           ; 1 bytes @ 0x33
  1456  0053                     	ds	1
  1457  0054                     ___lltoft@exp:
  1458                           
  1459                           ; 1 bytes @ 0x34
  1460  0054                     	ds	1
  1461  0055                     ??___ftadd:
  1462  0055                     ?_aht_GetHumidity:	
  1463                           ; 1 bytes @ 0x35
  1464                           
  1465  0055                     ___fttol@exp1:	
  1466                           ; 3 bytes @ 0x35
  1467                           
  1468                           
  1469                           ; 1 bytes @ 0x35
  1470  0055                     	ds	3
  1471  0058                     aht_GetHumidity@value:
  1472                           
  1473                           ; 3 bytes @ 0x38
  1474  0058                     	ds	1
  1475  0059                     ___ftadd@sign:
  1476                           
  1477                           ; 1 bytes @ 0x39
  1478  0059                     	ds	1
  1479  005A                     ___ftadd@exp2:
  1480                           
  1481                           ; 1 bytes @ 0x3A
  1482  005A                     	ds	1
  1483  005B                     ___ftadd@exp1:
  1484                           
  1485                           ; 1 bytes @ 0x3B
  1486  005B                     	ds	1
  1487  005C                     ?_aht_GetTemperature:
  1488  005C                     ?___ftsub:	
  1489                           ; 3 bytes @ 0x3C
  1490                           
  1491  005C                     ___ftsub@f2:	
  1492                           ; 3 bytes @ 0x3C
  1493                           
  1494                           
  1495                           ; 3 bytes @ 0x3C
  1496  005C                     	ds	3
  1497  005F                     aht_GetTemperature@value:
  1498  005F                     ___ftsub@f1:	
  1499                           ; 3 bytes @ 0x3F
  1500                           
  1501                           
  1502                           ; 3 bytes @ 0x3F
  1503  005F                     	ds	3
  1504  0062                     ?_sprintf:
  1505  0062                     sprintf@f:	
  1506                           ; 2 bytes @ 0x42
  1507                           
  1508                           
  1509                           ; 1 bytes @ 0x42
  1510  0062                     	ds	7
  1511  0069                     ??_main:
  1512                           
  1513                           ; 1 bytes @ 0x49
  1514  0069                     	ds	2
  1515                           
  1516                           	psect	maintext
  1517  13CE                     __pmaintext:	
  1518 ;;
  1519 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1520 ;;
  1521 ;; *************** function _main *****************
  1522 ;; Defined at:
  1523 ;;		line 64 in file "pic16f.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : B00/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1537 ;;      Params:         0       0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0
  1539 ;;      Temps:          0       2       0       0       0
  1540 ;;      Totals:         0       2       0       0       0
  1541 ;;Total ram usage:        2 bytes
  1542 ;; Hardware stack levels required when called:    6
  1543 ;; This function calls:
  1544 ;;		_I2C_Master_Init
  1545 ;;		_USART_Init
  1546 ;;		_Write_USART
  1547 ;;		_Write_USART_String
  1548 ;;		_aht_GetHumidity
  1549 ;;		_aht_GetTemperature
  1550 ;;		_configIO
  1551 ;;		_sprintf
  1552 ;; This function is called by:
  1553 ;;		Startup code after reset
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           
  1558                           ;psect for function _main
  1559  13CE                     _main:
  1560  13CE                     l4325:	
  1561                           ;incstack = 0
  1562                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1563                           
  1564                           
  1565                           ;pic16f.c: 65:     configIO();
  1566  13CE  160A  158A  252A  160A  118A  	fcall	_configIO
  1567  13D3                     l4327:
  1568                           
  1569                           ;pic16f.c: 66:     USART_Init(115200);
  1570  13D3  3000               	movlw	0
  1571  13D4  1283               	bcf	3,5	;RP0=0, select bank0
  1572  13D5  1303               	bcf	3,6	;RP1=0, select bank0
  1573  13D6  00B1               	movwf	USART_Init@baudrate+3
  1574  13D7  3001               	movlw	1
  1575  13D8  00B0               	movwf	USART_Init@baudrate+2
  1576  13D9  30C2               	movlw	194
  1577  13DA  00AF               	movwf	USART_Init@baudrate+1
  1578  13DB  3000               	movlw	0
  1579  13DC  00AE               	movwf	USART_Init@baudrate
  1580  13DD  160A  118A  2538  160A  118A  	fcall	_USART_Init
  1581  13E2                     l4329:
  1582                           
  1583                           ;pic16f.c: 67:     I2C_Master_Init(100000);
  1584  13E2  3000               	movlw	0
  1585  13E3  1283               	bcf	3,5	;RP0=0, select bank0
  1586  13E4  1303               	bcf	3,6	;RP1=0, select bank0
  1587  13E5  00B0               	movwf	I2C_Master_Init@c+3
  1588  13E6  3001               	movlw	1
  1589  13E7  00AF               	movwf	I2C_Master_Init@c+2
  1590  13E8  3086               	movlw	134
  1591  13E9  00AE               	movwf	I2C_Master_Init@c+1
  1592  13EA  30A0               	movlw	160
  1593  13EB  00AD               	movwf	I2C_Master_Init@c
  1594  13EC  160A  158A  2652  160A  118A  	fcall	_I2C_Master_Init
  1595  13F1                     l4331:
  1596                           
  1597                           ;pic16f.c: 74:         Write_USART("a");
  1598  13F1  3092               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1599  13F2  160A  158A  24FF  160A  118A  	fcall	_Write_USART
  1600  13F7                     l4333:
  1601                           
  1602                           ;pic16f.c: 75:         tempera1 = aht_GetHumidity();
  1603  13F7  160A  158A  27A3  160A  118A  	fcall	_aht_GetHumidity
  1604  13FC  1283               	bcf	3,5	;RP0=0, select bank0
  1605  13FD  1303               	bcf	3,6	;RP1=0, select bank0
  1606  13FE  0855               	movf	?_aht_GetHumidity,w
  1607  13FF  1683               	bsf	3,5	;RP0=1, select bank1
  1608  1400  1303               	bcf	3,6	;RP1=0, select bank1
  1609  1401  00C2               	movwf	_tempera1^(0+128)
  1610  1402  1283               	bcf	3,5	;RP0=0, select bank0
  1611  1403  1303               	bcf	3,6	;RP1=0, select bank0
  1612  1404  0856               	movf	?_aht_GetHumidity+1,w
  1613  1405  1683               	bsf	3,5	;RP0=1, select bank1
  1614  1406  1303               	bcf	3,6	;RP1=0, select bank1
  1615  1407  00C3               	movwf	(_tempera1+1)^(0+128)
  1616  1408  1283               	bcf	3,5	;RP0=0, select bank0
  1617  1409  1303               	bcf	3,6	;RP1=0, select bank0
  1618  140A  0857               	movf	?_aht_GetHumidity+2,w
  1619  140B  1683               	bsf	3,5	;RP0=1, select bank1
  1620  140C  1303               	bcf	3,6	;RP1=0, select bank1
  1621  140D  00C4               	movwf	(_tempera1+2)^(0+128)
  1622  140E                     l4335:
  1623                           
  1624                           ;pic16f.c: 76:         humeda1 = aht_GetTemperature();
  1625  140E  160A  118A  20F1  160A  118A  	fcall	_aht_GetTemperature
  1626  1413  1283               	bcf	3,5	;RP0=0, select bank0
  1627  1414  1303               	bcf	3,6	;RP1=0, select bank0
  1628  1415  085C               	movf	?_aht_GetTemperature,w
  1629  1416  1683               	bsf	3,5	;RP0=1, select bank1
  1630  1417  1303               	bcf	3,6	;RP1=0, select bank1
  1631  1418  00BF               	movwf	_humeda1^(0+128)
  1632  1419  1283               	bcf	3,5	;RP0=0, select bank0
  1633  141A  1303               	bcf	3,6	;RP1=0, select bank0
  1634  141B  085D               	movf	?_aht_GetTemperature+1,w
  1635  141C  1683               	bsf	3,5	;RP0=1, select bank1
  1636  141D  1303               	bcf	3,6	;RP1=0, select bank1
  1637  141E  00C0               	movwf	(_humeda1+1)^(0+128)
  1638  141F  1283               	bcf	3,5	;RP0=0, select bank0
  1639  1420  1303               	bcf	3,6	;RP1=0, select bank0
  1640  1421  085E               	movf	?_aht_GetTemperature+2,w
  1641  1422  1683               	bsf	3,5	;RP0=1, select bank1
  1642  1423  1303               	bcf	3,6	;RP1=0, select bank1
  1643  1424  00C1               	movwf	(_humeda1+2)^(0+128)
  1644  1425                     l4337:
  1645                           
  1646                           ;pic16f.c: 80:         Write_USART_String("T1   H1   \n");
  1647  1425  3086               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1648  1426  160A  158A  257D  160A  118A  	fcall	_Write_USART_String
  1649  142B                     l4339:
  1650                           
  1651                           ;pic16f.c: 81:         sprintf(datos, "%2.1f   %2.1f ", tempera1,humeda1);
  1652  142B  3077               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1653  142C  1283               	bcf	3,5	;RP0=0, select bank0
  1654  142D  1303               	bcf	3,6	;RP1=0, select bank0
  1655  142E  00E9               	movwf	??_main
  1656  142F  0869               	movf	??_main,w
  1657  1430  00E2               	movwf	sprintf@f
  1658  1431  1683               	bsf	3,5	;RP0=1, select bank1
  1659  1432  1303               	bcf	3,6	;RP1=0, select bank1
  1660  1433  0842               	movf	_tempera1^(0+128),w
  1661  1434  1283               	bcf	3,5	;RP0=0, select bank0
  1662  1435  1303               	bcf	3,6	;RP1=0, select bank0
  1663  1436  00E3               	movwf	?_sprintf+1
  1664  1437  1683               	bsf	3,5	;RP0=1, select bank1
  1665  1438  1303               	bcf	3,6	;RP1=0, select bank1
  1666  1439  0843               	movf	(_tempera1+1)^(0+128),w
  1667  143A  1283               	bcf	3,5	;RP0=0, select bank0
  1668  143B  1303               	bcf	3,6	;RP1=0, select bank0
  1669  143C  00E4               	movwf	?_sprintf+2
  1670  143D  1683               	bsf	3,5	;RP0=1, select bank1
  1671  143E  1303               	bcf	3,6	;RP1=0, select bank1
  1672  143F  0844               	movf	(_tempera1+2)^(0+128),w
  1673  1440  1283               	bcf	3,5	;RP0=0, select bank0
  1674  1441  1303               	bcf	3,6	;RP1=0, select bank0
  1675  1442  00E5               	movwf	?_sprintf+3
  1676  1443  1683               	bsf	3,5	;RP0=1, select bank1
  1677  1444  1303               	bcf	3,6	;RP1=0, select bank1
  1678  1445  083F               	movf	_humeda1^(0+128),w
  1679  1446  1283               	bcf	3,5	;RP0=0, select bank0
  1680  1447  1303               	bcf	3,6	;RP1=0, select bank0
  1681  1448  00E6               	movwf	?_sprintf+4
  1682  1449  1683               	bsf	3,5	;RP0=1, select bank1
  1683  144A  1303               	bcf	3,6	;RP1=0, select bank1
  1684  144B  0840               	movf	(_humeda1+1)^(0+128),w
  1685  144C  1283               	bcf	3,5	;RP0=0, select bank0
  1686  144D  1303               	bcf	3,6	;RP1=0, select bank0
  1687  144E  00E7               	movwf	?_sprintf+5
  1688  144F  1683               	bsf	3,5	;RP0=1, select bank1
  1689  1450  1303               	bcf	3,6	;RP1=0, select bank1
  1690  1451  0841               	movf	(_humeda1+2)^(0+128),w
  1691  1452  1283               	bcf	3,5	;RP0=0, select bank0
  1692  1453  1303               	bcf	3,6	;RP1=0, select bank0
  1693  1454  00E8               	movwf	?_sprintf+6
  1694  1455  30C7               	movlw	(low (_datos| 0))& (0+255)
  1695  1456  120A  158A  252E  160A  118A  	fcall	_sprintf
  1696  145B                     l4341:
  1697                           
  1698                           ;pic16f.c: 82:         Write_USART(datos);
  1699  145B  30C7               	movlw	(low _datos)& (0+255)
  1700  145C  160A  158A  24FF  160A  118A  	fcall	_Write_USART
  1701  1461                     l4343:
  1702                           
  1703                           ;pic16f.c: 83:         Write_USART(13);
  1704  1461  300D               	movlw	13
  1705  1462  160A  158A  24FF  160A  118A  	fcall	_Write_USART
  1706  1467                     l4345:
  1707                           
  1708                           ;pic16f.c: 84:        Write_USART(10);
  1709  1467  300A               	movlw	10
  1710  1468  160A  158A  24FF  160A  118A  	fcall	_Write_USART
  1711  146D                     l4347:
  1712                           
  1713                           ;pic16f.c: 85:         _delay((unsigned long)((1000)*(400000/4000.0)));
  1714  146D  3082               	movlw	130
  1715  146E  1283               	bcf	3,5	;RP0=0, select bank0
  1716  146F  1303               	bcf	3,6	;RP1=0, select bank0
  1717  1470  00EA               	movwf	??_main+1
  1718  1471  30DD               	movlw	221
  1719  1472  00E9               	movwf	??_main
  1720  1473                     u7097:
  1721  1473  0BE9               	decfsz	??_main,f
  1722  1474  2C73               	goto	u7097
  1723  1475  0BEA               	decfsz	??_main+1,f
  1724  1476  2C73               	goto	u7097
  1725  1477  2BF1               	goto	l4331
  1726  1478  120A  118A  280C   	ljmp	start
  1727  147B                     __end_of_main:
  1728                           
  1729                           	psect	text1
  1730  0D2E                     __ptext1:	
  1731 ;; *************** function _sprintf *****************
  1732 ;; Defined at:
  1733 ;;		line 505 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  sp              1    wreg     PTR unsigned char 
  1736 ;;		 -> datos(20), 
  1737 ;;  f               1   66[BANK0 ] PTR const unsigned char 
  1738 ;;		 -> STR_3(15), 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  sp              1   24[BANK1 ] PTR unsigned char 
  1741 ;;		 -> datos(20), 
  1742 ;;  tmpval          4   18[BANK1 ] struct .
  1743 ;;  val             4   10[BANK1 ] unsigned long 
  1744 ;;  fval            3   25[BANK1 ] unsigned long 
  1745 ;;  prec            2   28[BANK1 ] int 
  1746 ;;  eexp            2   22[BANK1 ] int 
  1747 ;;  width           2   16[BANK1 ] int 
  1748 ;;  flag            2   14[BANK1 ] unsigned short 
  1749 ;;  cp              2    0        PTR const unsigned char 
  1750 ;;  len             2    0        unsigned int 
  1751 ;;  c               1   30[BANK1 ] unsigned char 
  1752 ;;  ap              1    9[BANK1 ] PTR void [1]
  1753 ;;		 -> ?_sprintf(2), 
  1754 ;;  d               1    0        unsigned char 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  2   66[BANK0 ] int 
  1757 ;; Registers used:
  1758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1764 ;;      Params:         0       7       0       0       0
  1765 ;;      Locals:         0       0      25       0       0
  1766 ;;      Temps:          0       0       6       0       0
  1767 ;;      Totals:         0       7      31       0       0
  1768 ;;Total ram usage:       38 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    5
  1771 ;; This function calls:
  1772 ;;		___awdiv
  1773 ;;		___ftadd
  1774 ;;		___ftge
  1775 ;;		___ftmul
  1776 ;;		___ftneg
  1777 ;;		___ftsub
  1778 ;;		___fttol
  1779 ;;		___lldiv
  1780 ;;		___llmod
  1781 ;;		___lltoft
  1782 ;;		___wmul
  1783 ;;		__div_to_l_
  1784 ;;		__tdiv_to_l_
  1785 ;;		_fround
  1786 ;;		_isdigit
  1787 ;;		_scale
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           
  1794                           ;psect for function _sprintf
  1795  0D2E                     _sprintf:
  1796                           
  1797                           ;incstack = 0
  1798                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1799                           ;sprintf@sp stored from wreg
  1800  0D2E  1683               	bsf	3,5	;RP0=1, select bank1
  1801  0D2F  1303               	bcf	3,6	;RP1=0, select bank1
  1802  0D30  00B8               	movwf	sprintf@sp^(0+128)
  1803  0D31                     l4065:
  1804                           
  1805                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const ch
      +                          ar * f, ...);D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 506: {;D:\MPLAB XC8 
      +                          compiler\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\MPLAB XC8 compiler\pic\so
      +                          urces\c90\common\doprnt.c: 512:  char c;;D:\MPLAB XC8 compiler\pic\sources\c90\common\do
      +                          prnt.c: 514:  int width;;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 517:  in
      +                          t prec;;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 525:  unsigned short flag
      +                          ;
  1806  0D31  3063               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1807  0D32  00A0               	movwf	??_sprintf^(0+128)
  1808  0D33  0820               	movf	??_sprintf^(0+128),w
  1809  0D34  00A9               	movwf	sprintf@ap^(0+128)
  1810  0D35                     L1:
  1811                           
  1812                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1813  0D35  120A  118A  2D76   	goto	l4313
  1814  0D38                     l4067:
  1815                           
  1816                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1817  0D38  3025               	movlw	37
  1818  0D39  063E               	xorwf	sprintf@c^(0+128),w
  1819  0D3A  1903               	btfsc	3,2
  1820  0D3B  2D3D               	goto	u6611
  1821  0D3C  2D3E               	goto	u6610
  1822  0D3D                     u6611:
  1823  0D3D  2D4A               	goto	l4073
  1824  0D3E                     u6610:
  1825  0D3E                     l4069:
  1826                           
  1827                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 557:   {;D:\MPLAB XC8 compiler\p
      +                          ic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1828  0D3E  083E               	movf	sprintf@c^(0+128),w
  1829  0D3F  00A0               	movwf	??_sprintf^(0+128)
  1830  0D40  0838               	movf	sprintf@sp^(0+128),w
  1831  0D41  0084               	movwf	4
  1832  0D42  0820               	movf	??_sprintf^(0+128),w
  1833  0D43  1383               	bcf	3,7	;select IRP bank0
  1834  0D44  0080               	movwf	0
  1835  0D45                     l4071:
  1836  0D45  3001               	movlw	1
  1837  0D46  00A0               	movwf	??_sprintf^(0+128)
  1838  0D47  0820               	movf	??_sprintf^(0+128),w
  1839  0D48  07B8               	addwf	sprintf@sp^(0+128),f
  1840                           
  1841                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 559:    continue;
  1842  0D49  2D35               	goto	L1
  1843  0D4A                     l4073:
  1844                           
  1845                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1846  0D4A  01B0               	clrf	sprintf@width^(0+128)
  1847  0D4B  01B1               	clrf	(sprintf@width+1)^(0+128)
  1848                           
  1849                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1850  0D4C  01AE               	clrf	sprintf@flag^(0+128)
  1851  0D4D  01AF               	clrf	(sprintf@flag+1)^(0+128)
  1852  0D4E                     l4075:
  1853                           
  1854                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 614:   if(isdigit((unsigned)*f))
      +                           {
  1855  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  1856  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  1857  0D50  0862               	movf	sprintf@f,w
  1858  0D51  0084               	movwf	4
  1859  0D52  160A  118A  2000  120A  158A  	fcall	stringdir
  1860  0D57  160A  158A  2518  120A  158A  	fcall	_isdigit
  1861  0D5C  1C03               	btfss	3,0
  1862  0D5D  2D5F               	goto	u6621
  1863  0D5E  2D60               	goto	u6620
  1864  0D5F                     u6621:
  1865  0D5F  2DA6               	goto	l4087
  1866  0D60                     u6620:
  1867  0D60                     l4077:
  1868                           
  1869                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 615:    width = 0;
  1870  0D60  1683               	bsf	3,5	;RP0=1, select bank1
  1871  0D61  1303               	bcf	3,6	;RP1=0, select bank1
  1872  0D62  01B0               	clrf	sprintf@width^(0+128)
  1873  0D63  01B1               	clrf	(sprintf@width+1)^(0+128)
  1874  0D64                     l4079:
  1875                           
  1876                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 617:     width *= 10;
  1877  0D64  300A               	movlw	10
  1878  0D65  00F3               	movwf	___wmul@multiplier
  1879  0D66  3000               	movlw	0
  1880  0D67  00F4               	movwf	___wmul@multiplier+1
  1881  0D68  1683               	bsf	3,5	;RP0=1, select bank1
  1882  0D69  1303               	bcf	3,6	;RP1=0, select bank1
  1883  0D6A  0831               	movf	(sprintf@width+1)^(0+128),w
  1884  0D6B  00F6               	movwf	___wmul@multiplicand+1
  1885  0D6C  0830               	movf	sprintf@width^(0+128),w
  1886  0D6D  00F5               	movwf	___wmul@multiplicand
  1887  0D6E  160A  158A  25C4  120A  158A  	fcall	___wmul
  1888  0D73  0874               	movf	?___wmul+1,w
  1889  0D74  1683               	bsf	3,5	;RP0=1, select bank1
  1890  0D75  1303               	bcf	3,6	;RP1=0, select bank1
  1891  0D76  00B1               	movwf	(sprintf@width+1)^(0+128)
  1892  0D77  0873               	movf	?___wmul,w
  1893  0D78  00B0               	movwf	sprintf@width^(0+128)
  1894  0D79                     l4081:
  1895                           
  1896                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 618:        width += *f++ - '0';
  1897  0D79  1283               	bcf	3,5	;RP0=0, select bank0
  1898  0D7A  1303               	bcf	3,6	;RP1=0, select bank0
  1899  0D7B  0862               	movf	sprintf@f,w
  1900  0D7C  0084               	movwf	4
  1901  0D7D  160A  118A  2000  120A  158A  	fcall	stringdir
  1902  0D82  3ED0               	addlw	208
  1903  0D83  1683               	bsf	3,5	;RP0=1, select bank1
  1904  0D84  1303               	bcf	3,6	;RP1=0, select bank1
  1905  0D85  00A0               	movwf	??_sprintf^(0+128)
  1906  0D86  30FF               	movlw	255
  1907  0D87  1803               	skipnc
  1908  0D88  3000               	movlw	0
  1909  0D89  00A1               	movwf	(??_sprintf^(0+128)+1)
  1910  0D8A  0820               	movf	??_sprintf^(0+128),w
  1911  0D8B  07B0               	addwf	sprintf@width^(0+128),f
  1912  0D8C  1803               	skipnc
  1913  0D8D  0AB1               	incf	(sprintf@width+1)^(0+128),f
  1914  0D8E  0821               	movf	(??_sprintf+1)^(0+128),w
  1915  0D8F  07B1               	addwf	(sprintf@width+1)^(0+128),f
  1916  0D90                     l4083:
  1917  0D90  3001               	movlw	1
  1918  0D91  00A0               	movwf	??_sprintf^(0+128)
  1919  0D92  0820               	movf	??_sprintf^(0+128),w
  1920  0D93  1283               	bcf	3,5	;RP0=0, select bank0
  1921  0D94  1303               	bcf	3,6	;RP1=0, select bank0
  1922  0D95  07E2               	addwf	sprintf@f,f
  1923  0D96                     l4085:
  1924                           
  1925                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 619:    } while(isdigit((unsigne
      +                          d)*f));
  1926  0D96  0862               	movf	sprintf@f,w
  1927  0D97  0084               	movwf	4
  1928  0D98  160A  118A  2000  120A  158A  	fcall	stringdir
  1929  0D9D  160A  158A  2518  120A  158A  	fcall	_isdigit
  1930  0DA2  1803               	btfsc	3,0
  1931  0DA3  2DA5               	goto	u6631
  1932  0DA4  2DA6               	goto	u6630
  1933  0DA5                     u6631:
  1934  0DA5  2D64               	goto	l4079
  1935  0DA6                     u6630:
  1936  0DA6                     l4087:
  1937                           
  1938                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
  1939  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  1940  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  1941  0DA8  0862               	movf	sprintf@f,w
  1942  0DA9  0084               	movwf	4
  1943  0DAA  160A  118A  2000  120A  158A  	fcall	stringdir
  1944  0DAF  3A2E               	xorlw	46
  1945  0DB0  1D03               	skipz
  1946  0DB1  2DB3               	goto	u6641
  1947  0DB2  2DB4               	goto	u6640
  1948  0DB3                     u6641:
  1949  0DB3  2E06               	goto	l4103
  1950  0DB4                     u6640:
  1951  0DB4                     l4089:
  1952                           
  1953                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 629:    flag |= 0x4000;
  1954  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  1955  0DB5  1303               	bcf	3,6	;RP1=0, select bank1
  1956  0DB6  172F               	bsf	(sprintf@flag^(0+128)+1),6
  1957  0DB7                     l4091:
  1958                           
  1959                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 630:    f++;
  1960  0DB7  3001               	movlw	1
  1961  0DB8  00A0               	movwf	??_sprintf^(0+128)
  1962  0DB9  0820               	movf	??_sprintf^(0+128),w
  1963  0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0DBB  1303               	bcf	3,6	;RP1=0, select bank0
  1965  0DBC  07E2               	addwf	sprintf@f,f
  1966  0DBD                     l4093:
  1967                           
  1968                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 644:    {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1969  0DBD  1683               	bsf	3,5	;RP0=1, select bank1
  1970  0DBE  1303               	bcf	3,6	;RP1=0, select bank1
  1971  0DBF  01BC               	clrf	sprintf@prec^(0+128)
  1972  0DC0  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1973                           
  1974                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned
      +                          )*f)) {
  1975  0DC1  2DF4               	goto	l4101
  1976  0DC2                     l4095:
  1977                           
  1978                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  1979  0DC2  300A               	movlw	10
  1980  0DC3  00F3               	movwf	___wmul@multiplier
  1981  0DC4  3000               	movlw	0
  1982  0DC5  00F4               	movwf	___wmul@multiplier+1
  1983  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  1984  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  1985  0DC8  083D               	movf	(sprintf@prec+1)^(0+128),w
  1986  0DC9  00F6               	movwf	___wmul@multiplicand+1
  1987  0DCA  083C               	movf	sprintf@prec^(0+128),w
  1988  0DCB  00F5               	movwf	___wmul@multiplicand
  1989  0DCC  160A  158A  25C4  120A  158A  	fcall	___wmul
  1990  0DD1  0874               	movf	?___wmul+1,w
  1991  0DD2  1683               	bsf	3,5	;RP0=1, select bank1
  1992  0DD3  1303               	bcf	3,6	;RP1=0, select bank1
  1993  0DD4  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1994  0DD5  0873               	movf	?___wmul,w
  1995  0DD6  00BC               	movwf	sprintf@prec^(0+128)
  1996  0DD7                     l4097:
  1997                           
  1998                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0';
  1999  0DD7  1283               	bcf	3,5	;RP0=0, select bank0
  2000  0DD8  1303               	bcf	3,6	;RP1=0, select bank0
  2001  0DD9  0862               	movf	sprintf@f,w
  2002  0DDA  0084               	movwf	4
  2003  0DDB  160A  118A  2000  120A  158A  	fcall	stringdir
  2004  0DE0  3ED0               	addlw	208
  2005  0DE1  1683               	bsf	3,5	;RP0=1, select bank1
  2006  0DE2  1303               	bcf	3,6	;RP1=0, select bank1
  2007  0DE3  00A0               	movwf	??_sprintf^(0+128)
  2008  0DE4  30FF               	movlw	255
  2009  0DE5  1803               	skipnc
  2010  0DE6  3000               	movlw	0
  2011  0DE7  00A1               	movwf	(??_sprintf^(0+128)+1)
  2012  0DE8  0820               	movf	??_sprintf^(0+128),w
  2013  0DE9  07BC               	addwf	sprintf@prec^(0+128),f
  2014  0DEA  1803               	skipnc
  2015  0DEB  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2016  0DEC  0821               	movf	(??_sprintf+1)^(0+128),w
  2017  0DED  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2018  0DEE                     l4099:
  2019  0DEE  3001               	movlw	1
  2020  0DEF  00A0               	movwf	??_sprintf^(0+128)
  2021  0DF0  0820               	movf	??_sprintf^(0+128),w
  2022  0DF1  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0DF2  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0DF3  07E2               	addwf	sprintf@f,f
  2025  0DF4                     l4101:
  2026                           
  2027                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned
      +                          )*f)) {
  2028  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0DF5  0862               	movf	sprintf@f,w
  2030  0DF6  0084               	movwf	4
  2031  0DF7  160A  118A  2000  120A  158A  	fcall	stringdir
  2032  0DFC  160A  158A  2518  120A  158A  	fcall	_isdigit
  2033  0E01  1803               	btfsc	3,0
  2034  0E02  2E04               	goto	u6651
  2035  0E03  2E05               	goto	u6650
  2036  0E04                     u6651:
  2037  0E04  2DC2               	goto	l4095
  2038  0E05                     u6650:
  2039  0E05  2E0E               	goto	l4109
  2040  0E06                     l4103:
  2041                           
  2042                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2043  0E06  1683               	bsf	3,5	;RP0=1, select bank1
  2044  0E07  1303               	bcf	3,6	;RP1=0, select bank1
  2045  0E08  01BC               	clrf	sprintf@prec^(0+128)
  2046  0E09  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2047  0E0A                     l4105:
  2048                           
  2049                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 654:    flag |= 0x1000;
  2050  0E0A  162F               	bsf	(sprintf@flag^(0+128)+1),4
  2051  0E0B  2E0E               	goto	l4109
  2052  0E0C                     l360:	
  2053                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2054                           
  2055                           
  2056                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 689:    flag |= 0x400;
  2057  0E0C  152F               	bsf	(sprintf@flag^(0+128)+1),2
  2058                           
  2059                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 690:    break;
  2060  0E0D  2E2C               	goto	l4111
  2061  0E0E                     l4109:
  2062  0E0E  3001               	movlw	1
  2063  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0E10  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0E11  07E2               	addwf	sprintf@f,f
  2066  0E12  30FF               	movlw	-1
  2067  0E13  0762               	addwf	sprintf@f,w
  2068  0E14  0084               	movwf	4
  2069  0E15  160A  118A  2000  120A  158A  	fcall	stringdir
  2070  0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  2071  0E1B  1303               	bcf	3,6	;RP1=0, select bank1
  2072  0E1C  00BE               	movwf	sprintf@c^(0+128)
  2073  0E1D  00A0               	movwf	??_sprintf^(0+128)
  2074  0E1E  01A1               	clrf	(??_sprintf^(0+128)+1)
  2075                           
  2076                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2077                           ; Switch size 1, requested type "simple"
  2078                           ; Number of cases is 1, Range of values is 0 to 0
  2079                           ; switch strategies available:
  2080                           ; Name         Instructions Cycles
  2081                           ; simple_byte            4     3 (average)
  2082                           ; direct_byte           11     8 (fixed)
  2083                           ; jumptable            260     6 (fixed)
  2084                           ;	Chosen strategy is simple_byte
  2085  0E1F  0821               	movf	(??_sprintf+1)^(0+128),w
  2086  0E20  3A00               	xorlw	0	; case 0
  2087  0E21  1903               	skipnz
  2088  0E22  2E24               	goto	l4413
  2089  0E23  2D35               	goto	L1
  2090  0E24                     l4413:
  2091                           
  2092                           ; Switch size 1, requested type "simple"
  2093                           ; Number of cases is 2, Range of values is 0 to 102
  2094                           ; switch strategies available:
  2095                           ; Name         Instructions Cycles
  2096                           ; simple_byte            7     4 (average)
  2097                           ; jumptable            260     6 (fixed)
  2098                           ;	Chosen strategy is simple_byte
  2099  0E24  0820               	movf	??_sprintf^(0+128),w
  2100  0E25  3A00               	xorlw	0	; case 0
  2101  0E26  1903               	skipnz
  2102  0E27  2FFD               	goto	L3
  2103  0E28  3A66               	xorlw	102	; case 102
  2104  0E29  1903               	skipnz
  2105  0E2A  2E0C               	goto	l360
  2106  0E2B  2D35               	goto	L1
  2107  0E2C                     l4111:
  2108                           
  2109                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 851:   if(flag & (0x700)) {
  2110  0E2C  3000               	movlw	0
  2111  0E2D  052E               	andwf	sprintf@flag^(0+128),w
  2112  0E2E  00A0               	movwf	??_sprintf^(0+128)
  2113  0E2F  3007               	movlw	7
  2114  0E30  052F               	andwf	(sprintf@flag+1)^(0+128),w
  2115  0E31  00A1               	movwf	(??_sprintf+1)^(0+128)
  2116  0E32  0820               	movf	??_sprintf^(0+128),w
  2117  0E33  0421               	iorwf	(??_sprintf^(0+128)+1),w
  2118  0E34  1903               	btfsc	3,2
  2119  0E35  2E37               	goto	u6661
  2120  0E36  2E3A               	goto	u6660
  2121  0E37                     u6661:
  2122  0E37  120A  118A  2CB1   	goto	l4267
  2123  0E3A                     u6660:
  2124  0E3A                     l4113:
  2125                           
  2126                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 853:    if(flag & 0x1000)
  2127  0E3A  1E2F               	btfss	(sprintf@flag+1)^(0+128),4
  2128  0E3B  2E3D               	goto	u6671
  2129  0E3C  2E3E               	goto	u6670
  2130  0E3D                     u6671:
  2131  0E3D  2E42               	goto	l4117
  2132  0E3E                     u6670:
  2133  0E3E                     l4115:
  2134                           
  2135                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 855:     prec = 6;
  2136  0E3E  3006               	movlw	6
  2137  0E3F  00BC               	movwf	sprintf@prec^(0+128)
  2138  0E40  3000               	movlw	0
  2139  0E41  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2140  0E42                     l4117:
  2141                           
  2142                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 856:    fval = (*(double *)__va_
      +                          arg((*(double **)ap), (double)0));
  2143  0E42  0829               	movf	sprintf@ap^(0+128),w
  2144  0E43  0084               	movwf	4
  2145  0E44  1383               	bcf	3,7	;select IRP bank0
  2146  0E45  0800               	movf	0,w
  2147  0E46  00B9               	movwf	sprintf@fval^(0+128)
  2148  0E47  0A84               	incf	4,f
  2149  0E48  0800               	movf	0,w
  2150  0E49  00BA               	movwf	(sprintf@fval+1)^(0+128)
  2151  0E4A  0A84               	incf	4,f
  2152  0E4B  0800               	movf	0,w
  2153  0E4C  00BB               	movwf	(sprintf@fval+2)^(0+128)
  2154  0E4D                     l4119:
  2155  0E4D  3003               	movlw	3
  2156  0E4E  00A0               	movwf	??_sprintf^(0+128)
  2157  0E4F  0820               	movf	??_sprintf^(0+128),w
  2158  0E50  07A9               	addwf	sprintf@ap^(0+128),f
  2159  0E51                     l4121:
  2160                           
  2161                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 857:    if(fval < 0.0) {
  2162  0E51  0839               	movf	sprintf@fval^(0+128),w
  2163  0E52  1283               	bcf	3,5	;RP0=0, select bank0
  2164  0E53  1303               	bcf	3,6	;RP1=0, select bank0
  2165  0E54  00A0               	movwf	___ftge@ff1
  2166  0E55  1683               	bsf	3,5	;RP0=1, select bank1
  2167  0E56  1303               	bcf	3,6	;RP1=0, select bank1
  2168  0E57  083A               	movf	(sprintf@fval+1)^(0+128),w
  2169  0E58  1283               	bcf	3,5	;RP0=0, select bank0
  2170  0E59  1303               	bcf	3,6	;RP1=0, select bank0
  2171  0E5A  00A1               	movwf	___ftge@ff1+1
  2172  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  2173  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  2174  0E5D  083B               	movf	(sprintf@fval+2)^(0+128),w
  2175  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  2176  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  2177  0E60  00A2               	movwf	___ftge@ff1+2
  2178  0E61  3000               	movlw	0
  2179  0E62  00A3               	movwf	___ftge@ff2
  2180  0E63  3000               	movlw	0
  2181  0E64  00A4               	movwf	___ftge@ff2+1
  2182  0E65  3000               	movlw	0
  2183  0E66  00A5               	movwf	___ftge@ff2+2
  2184  0E67  160A  158A  268C  120A  158A  	fcall	___ftge
  2185  0E6C  1803               	btfsc	3,0
  2186  0E6D  2E6F               	goto	u6681
  2187  0E6E  2E70               	goto	u6680
  2188  0E6F                     u6681:
  2189  0E6F  2E89               	goto	l4127
  2190  0E70                     u6680:
  2191  0E70                     l4123:
  2192                           
  2193                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 858:     fval = -fval;
  2194  0E70  1683               	bsf	3,5	;RP0=1, select bank1
  2195  0E71  1303               	bcf	3,6	;RP1=0, select bank1
  2196  0E72  0839               	movf	sprintf@fval^(0+128),w
  2197  0E73  00F3               	movwf	___ftneg@f1
  2198  0E74  083A               	movf	(sprintf@fval+1)^(0+128),w
  2199  0E75  00F4               	movwf	___ftneg@f1+1
  2200  0E76  083B               	movf	(sprintf@fval+2)^(0+128),w
  2201  0E77  00F5               	movwf	___ftneg@f1+2
  2202  0E78  160A  158A  24F5  120A  158A  	fcall	___ftneg
  2203  0E7D  0873               	movf	?___ftneg,w
  2204  0E7E  1683               	bsf	3,5	;RP0=1, select bank1
  2205  0E7F  1303               	bcf	3,6	;RP1=0, select bank1
  2206  0E80  00B9               	movwf	sprintf@fval^(0+128)
  2207  0E81  0874               	movf	?___ftneg+1,w
  2208  0E82  00BA               	movwf	(sprintf@fval+1)^(0+128)
  2209  0E83  0875               	movf	?___ftneg+2,w
  2210  0E84  00BB               	movwf	(sprintf@fval+2)^(0+128)
  2211  0E85                     l4125:
  2212                           
  2213                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 859:     flag |= 0x03;
  2214  0E85  3003               	movlw	3
  2215  0E86  04AE               	iorwf	sprintf@flag^(0+128),f
  2216  0E87  3000               	movlw	0
  2217  0E88  04AF               	iorwf	(sprintf@flag+1)^(0+128),f
  2218  0E89                     l4127:
  2219                           
  2220                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2221  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  2222  0E8A  1303               	bcf	3,6	;RP1=0, select bank1
  2223  0E8B  01B6               	clrf	sprintf@eexp^(0+128)
  2224  0E8C  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  2225  0E8D                     l4129:
  2226                           
  2227                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 862:    if( fval!=0) {
  2228  0E8D  083B               	movf	(sprintf@fval+2)^(0+128),w
  2229  0E8E  043A               	iorwf	(sprintf@fval+1)^(0+128),w
  2230  0E8F  0439               	iorwf	sprintf@fval^(0+128),w
  2231  0E90  1903               	skipnz
  2232  0E91  2E93               	goto	u6691
  2233  0E92  2E94               	goto	u6690
  2234  0E93                     u6691:
  2235  0E93  2FA2               	goto	l4155
  2236  0E94                     u6690:
  2237  0E94                     l4131:
  2238                           
  2239                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 863:     (void)(*(&eexp) = ((*(u
      +                          nsigned long *)&fval >> 15) & 255) - 126);
  2240  0E94  30B9               	movlw	low (sprintf@fval| 0)
  2241  0E95  0084               	movwf	4
  2242  0E96  1383               	bcf	3,7	;select IRP bank1
  2243  0E97  0800               	movf	0,w
  2244  0E98  00A0               	movwf	??_sprintf^(0+128)
  2245  0E99  0A84               	incf	4,f
  2246  0E9A  0800               	movf	0,w
  2247  0E9B  00A1               	movwf	(??_sprintf^(0+128)+1)
  2248  0E9C  0A84               	incf	4,f
  2249  0E9D  0800               	movf	0,w
  2250  0E9E  00A2               	movwf	(??_sprintf^(0+128)+2)
  2251  0E9F  0A84               	incf	4,f
  2252  0EA0  0800               	movf	0,w
  2253  0EA1  00A3               	movwf	(??_sprintf^(0+128)+3)
  2254  0EA2  300F               	movlw	15
  2255  0EA3                     u6705:
  2256  0EA3  1003               	clrc
  2257  0EA4  0CA3               	rrf	(??_sprintf^(0+128)+3),f
  2258  0EA5  0CA2               	rrf	(??_sprintf^(0+128)+2),f
  2259  0EA6  0CA1               	rrf	(??_sprintf^(0+128)+1),f
  2260  0EA7  0CA0               	rrf	??_sprintf^(0+128),f
  2261  0EA8                     u6700:
  2262  0EA8  3EFF               	addlw	-1
  2263  0EA9  1D03               	skipz
  2264  0EAA  2EA3               	goto	u6705
  2265  0EAB  30FF               	movlw	255
  2266  0EAC  0520               	andwf	??_sprintf^(0+128),w
  2267  0EAD  00A4               	movwf	(??_sprintf+4)^(0+128)
  2268  0EAE  3000               	movlw	0
  2269  0EAF  0521               	andwf	(??_sprintf+1)^(0+128),w
  2270  0EB0  00A5               	movwf	(??_sprintf+5)^(0+128)
  2271  0EB1  0824               	movf	(??_sprintf+4)^(0+128),w
  2272  0EB2  3E82               	addlw	130
  2273  0EB3  00B6               	movwf	sprintf@eexp^(0+128)
  2274  0EB4  0825               	movf	(??_sprintf+5)^(0+128),w
  2275  0EB5  1803               	skipnc
  2276  0EB6  3E01               	addlw	1
  2277  0EB7  3EFF               	addlw	255
  2278  0EB8  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2279  0EB9                     l4133:
  2280                           
  2281                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2282  0EB9  30FF               	movlw	255
  2283  0EBA  07B6               	addwf	sprintf@eexp^(0+128),f
  2284  0EBB  1803               	skipnc
  2285  0EBC  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2286  0EBD  30FF               	movlw	255
  2287  0EBE  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2288  0EBF                     l4135:
  2289                           
  2290                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 865:     eexp *= 3;
  2291  0EBF  3003               	movlw	3
  2292  0EC0  00F3               	movwf	___wmul@multiplier
  2293  0EC1  3000               	movlw	0
  2294  0EC2  00F4               	movwf	___wmul@multiplier+1
  2295  0EC3  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2296  0EC4  00F6               	movwf	___wmul@multiplicand+1
  2297  0EC5  0836               	movf	sprintf@eexp^(0+128),w
  2298  0EC6  00F5               	movwf	___wmul@multiplicand
  2299  0EC7  160A  158A  25C4  120A  158A  	fcall	___wmul
  2300  0ECC  0874               	movf	?___wmul+1,w
  2301  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  2302  0ECE  1303               	bcf	3,6	;RP1=0, select bank1
  2303  0ECF  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2304  0ED0  0873               	movf	?___wmul,w
  2305  0ED1  00B6               	movwf	sprintf@eexp^(0+128)
  2306  0ED2                     l4137:
  2307                           
  2308                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 866:     eexp /= 10;
  2309  0ED2  300A               	movlw	10
  2310  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  2311  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  2312  0ED5  00A2               	movwf	___awdiv@divisor
  2313  0ED6  3000               	movlw	0
  2314  0ED7  00A3               	movwf	___awdiv@divisor+1
  2315  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  2316  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  2317  0EDA  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2318  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0EDD  00A5               	movwf	___awdiv@dividend+1
  2321  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  2322  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  2323  0EE0  0836               	movf	sprintf@eexp^(0+128),w
  2324  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  2325  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  2326  0EE3  00A4               	movwf	___awdiv@dividend
  2327  0EE4  160A  118A  21BA  120A  158A  	fcall	___awdiv
  2328  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  2330  0EEB  0823               	movf	?___awdiv+1,w
  2331  0EEC  1683               	bsf	3,5	;RP0=1, select bank1
  2332  0EED  1303               	bcf	3,6	;RP1=0, select bank1
  2333  0EEE  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2334  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  2335  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  2336  0EF1  0822               	movf	?___awdiv,w
  2337  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  2338  0EF3  1303               	bcf	3,6	;RP1=0, select bank1
  2339  0EF4  00B6               	movwf	sprintf@eexp^(0+128)
  2340  0EF5                     l4139:
  2341                           
  2342                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 867:     if(eexp < 0)
  2343  0EF5  1FB7               	btfss	(sprintf@eexp+1)^(0+128),7
  2344  0EF6  2EF8               	goto	u6711
  2345  0EF7  2EF9               	goto	u6710
  2346  0EF8                     u6711:
  2347  0EF8  2EFF               	goto	l4143
  2348  0EF9                     u6710:
  2349  0EF9                     l4141:
  2350                           
  2351                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2352  0EF9  30FF               	movlw	255
  2353  0EFA  07B6               	addwf	sprintf@eexp^(0+128),f
  2354  0EFB  1803               	skipnc
  2355  0EFC  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2356  0EFD  30FF               	movlw	255
  2357  0EFE  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2358  0EFF                     l4143:
  2359                           
  2360                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 872:     tmpval.integ = scale(-e
      +                          exp);
  2361  0EFF  0336               	decf	sprintf@eexp^(0+128),w
  2362  0F00  3AFF               	xorlw	255
  2363  0F01  120A  158A  2273  120A  158A  	fcall	_scale
  2364  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  2365  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  2366  0F08  083F               	movf	?_scale,w
  2367  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  2368  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  2369  0F0B  00B2               	movwf	sprintf@tmpval^(0+128)
  2370  0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  2371  0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  2372  0F0E  0840               	movf	?_scale+1,w
  2373  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  2374  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  2375  0F11  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  2376  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  2377  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  2378  0F14  0841               	movf	?_scale+2,w
  2379  0F15  1683               	bsf	3,5	;RP0=1, select bank1
  2380  0F16  1303               	bcf	3,6	;RP1=0, select bank1
  2381  0F17  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  2382  0F18                     l4145:
  2383                           
  2384                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 873:     tmpval.integ *= fval;
  2385  0F18  0839               	movf	sprintf@fval^(0+128),w
  2386  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2387  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2388  0F1B  00AF               	movwf	___ftmul@f1
  2389  0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  2390  0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  2391  0F1E  083A               	movf	(sprintf@fval+1)^(0+128),w
  2392  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  2393  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  2394  0F21  00B0               	movwf	___ftmul@f1+1
  2395  0F22  1683               	bsf	3,5	;RP0=1, select bank1
  2396  0F23  1303               	bcf	3,6	;RP1=0, select bank1
  2397  0F24  083B               	movf	(sprintf@fval+2)^(0+128),w
  2398  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  2399  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  2400  0F27  00B1               	movwf	___ftmul@f1+2
  2401  0F28  1683               	bsf	3,5	;RP0=1, select bank1
  2402  0F29  1303               	bcf	3,6	;RP1=0, select bank1
  2403  0F2A  0832               	movf	sprintf@tmpval^(0+128),w
  2404  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  2405  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  2406  0F2D  00B2               	movwf	___ftmul@f2
  2407  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
  2408  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
  2409  0F30  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  2410  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  2412  0F33  00B3               	movwf	___ftmul@f2+1
  2413  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  2414  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  2415  0F36  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  2416  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  2417  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  2418  0F39  00B4               	movwf	___ftmul@f2+2
  2419  0F3A  160A  118A  2614  120A  158A  	fcall	___ftmul
  2420  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2421  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  2422  0F41  082F               	movf	?___ftmul,w
  2423  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  2424  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  2425  0F44  00B2               	movwf	sprintf@tmpval^(0+128)
  2426  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  2427  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  2428  0F47  0830               	movf	?___ftmul+1,w
  2429  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  2430  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  2431  0F4A  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  2432  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2433  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2434  0F4D  0831               	movf	?___ftmul+2,w
  2435  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  2436  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  2437  0F50  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  2438  0F51                     l4147:
  2439                           
  2440                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 874:     if(tmpval.integ < 1.0)
  2441  0F51  0832               	movf	sprintf@tmpval^(0+128),w
  2442  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0F54  00A0               	movwf	___ftge@ff1
  2445  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  2446  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  2447  0F57  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  2448  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  2449  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  2450  0F5A  00A1               	movwf	___ftge@ff1+1
  2451  0F5B  1683               	bsf	3,5	;RP0=1, select bank1
  2452  0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  2453  0F5D  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  2454  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  2455  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  2456  0F60  00A2               	movwf	___ftge@ff1+2
  2457  0F61  3000               	movlw	0
  2458  0F62  00A3               	movwf	___ftge@ff2
  2459  0F63  3080               	movlw	128
  2460  0F64  00A4               	movwf	___ftge@ff2+1
  2461  0F65  303F               	movlw	63
  2462  0F66  00A5               	movwf	___ftge@ff2+2
  2463  0F67  160A  158A  268C  120A  158A  	fcall	___ftge
  2464  0F6C  1803               	btfsc	3,0
  2465  0F6D  2F6F               	goto	u6721
  2466  0F6E  2F70               	goto	u6720
  2467  0F6F                     u6721:
  2468  0F6F  2F79               	goto	l4151
  2469  0F70                     u6720:
  2470  0F70                     l4149:
  2471                           
  2472                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2473  0F70  30FF               	movlw	255
  2474  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  2475  0F72  1303               	bcf	3,6	;RP1=0, select bank1
  2476  0F73  07B6               	addwf	sprintf@eexp^(0+128),f
  2477  0F74  1803               	skipnc
  2478  0F75  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2479  0F76  30FF               	movlw	255
  2480  0F77  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2481  0F78  2FA2               	goto	l4155
  2482  0F79                     l4151:
  2483  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  2484  0F7A  1303               	bcf	3,6	;RP1=0, select bank1
  2485  0F7B  0832               	movf	sprintf@tmpval^(0+128),w
  2486  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  2487  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  2488  0F7E  00A0               	movwf	___ftge@ff1
  2489  0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  2490  0F80  1303               	bcf	3,6	;RP1=0, select bank1
  2491  0F81  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  2492  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  2493  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  2494  0F84  00A1               	movwf	___ftge@ff1+1
  2495  0F85  1683               	bsf	3,5	;RP0=1, select bank1
  2496  0F86  1303               	bcf	3,6	;RP1=0, select bank1
  2497  0F87  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  2498  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  2500  0F8A  00A2               	movwf	___ftge@ff1+2
  2501  0F8B  3000               	movlw	0
  2502  0F8C  00A3               	movwf	___ftge@ff2
  2503  0F8D  3020               	movlw	32
  2504  0F8E  00A4               	movwf	___ftge@ff2+1
  2505  0F8F  3041               	movlw	65
  2506  0F90  00A5               	movwf	___ftge@ff2+2
  2507  0F91  160A  158A  268C  120A  158A  	fcall	___ftge
  2508  0F96  1C03               	btfss	3,0
  2509  0F97  2F99               	goto	u6731
  2510  0F98  2F9A               	goto	u6730
  2511  0F99                     u6731:
  2512  0F99  2FA2               	goto	l4155
  2513  0F9A                     u6730:
  2514  0F9A                     l4153:
  2515                           
  2516                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2517  0F9A  3001               	movlw	1
  2518  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  2519  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  2520  0F9D  07B6               	addwf	sprintf@eexp^(0+128),f
  2521  0F9E  1803               	skipnc
  2522  0F9F  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2523  0FA0  3000               	movlw	0
  2524  0FA1  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2525  0FA2                     l4155:
  2526                           
  2527                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1138:      if(prec <= 12)
  2528  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  2529  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  2530  0FA4  083D               	movf	(sprintf@prec+1)^(0+128),w
  2531  0FA5  3A80               	xorlw	128
  2532  0FA6  00FF               	movwf	btemp+1
  2533  0FA7  3080               	movlw	128
  2534  0FA8  027F               	subwf	btemp+1,w
  2535  0FA9  1D03               	skipz
  2536  0FAA  2FAD               	goto	u6745
  2537  0FAB  300D               	movlw	13
  2538  0FAC  023C               	subwf	sprintf@prec^(0+128),w
  2539  0FAD                     u6745:
  2540  0FAD  1803               	skipnc
  2541  0FAE  2FB0               	goto	u6741
  2542  0FAF  2FB1               	goto	u6740
  2543  0FB0                     u6741:
  2544  0FB0  2FEA               	goto	l4159
  2545  0FB1                     u6740:
  2546  0FB1                     l4157:
  2547                           
  2548                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1139:       fval += fround((unsi
      +                          gned int)prec);
  2549  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  2550  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  2551  0FB3  083C               	movf	sprintf@prec^(0+128),w
  2552  0FB4  120A  118A  2593  120A  158A  	fcall	_fround
  2553  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  2554  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  2555  0FBB  083F               	movf	?_fround,w
  2556  0FBC  00CF               	movwf	___ftadd@f1
  2557  0FBD  0840               	movf	?_fround+1,w
  2558  0FBE  00D0               	movwf	___ftadd@f1+1
  2559  0FBF  0841               	movf	?_fround+2,w
  2560  0FC0  00D1               	movwf	___ftadd@f1+2
  2561  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  2562  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  2563  0FC3  0839               	movf	sprintf@fval^(0+128),w
  2564  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2565  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2566  0FC6  00D2               	movwf	___ftadd@f2
  2567  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  2568  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  2569  0FC9  083A               	movf	(sprintf@fval+1)^(0+128),w
  2570  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2571  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2572  0FCC  00D3               	movwf	___ftadd@f2+1
  2573  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  2574  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  2575  0FCF  083B               	movf	(sprintf@fval+2)^(0+128),w
  2576  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2577  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  2578  0FD2  00D4               	movwf	___ftadd@f2+2
  2579  0FD3  120A  158A  213D  120A  158A  	fcall	___ftadd
  2580  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2581  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2582  0FDA  084F               	movf	?___ftadd,w
  2583  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  2584  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  2585  0FDD  00B9               	movwf	sprintf@fval^(0+128)
  2586  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  2587  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  2588  0FE0  0850               	movf	?___ftadd+1,w
  2589  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  2590  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  2591  0FE3  00BA               	movwf	(sprintf@fval+1)^(0+128)
  2592  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2593  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2594  0FE6  0851               	movf	?___ftadd+2,w
  2595  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  2596  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  2597  0FE9  00BB               	movwf	(sprintf@fval+2)^(0+128)
  2598  0FEA                     l4159:
  2599                           
  2600                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1142:     if((eexp > 9)||(fval !
      +                          = 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2601  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  2602  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  2603  0FEC  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2604  0FED  3A80               	xorlw	128
  2605  0FEE  00FF               	movwf	btemp+1
  2606  0FEF  3080               	movlw	128
  2607  0FF0  027F               	subwf	btemp+1,w
  2608  0FF1  1D03               	skipz
  2609  0FF2  2FF5               	goto	u6755
  2610  0FF3  300A               	movlw	10
  2611  0FF4  0236               	subwf	sprintf@eexp^(0+128),w
  2612  0FF5                     u6755:
  2613  0FF5  1803               	skipnc
  2614  0FF6  2FFA               	goto	u6751
  2615  0FF7  120A  118A  2838   	goto	u6750
  2616  0FFA                     u6751:
  2617  0FFA  120A  118A  286F   	goto	l4167
  2618  0FFD                     L3:
  2619  0FFD                     L2:
  2620  0FFD  120A  118A  2D8E   	ljmp	l4315
  2621                           
  2622                           	psect	text2
  2623  0A73                     __ptext2:	
  2624 ;; *************** function _scale *****************
  2625 ;; Defined at:
  2626 ;;		line 433 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  scl             1    wreg     char 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  scl             1   39[BANK0 ] char 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  3   31[BANK0 ] char 
  2633 ;; Registers used:
  2634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2640 ;;      Params:         0       3       0       0       0
  2641 ;;      Locals:         0       4       0       0       0
  2642 ;;      Temps:          0       2       0       0       0
  2643 ;;      Totals:         0       9       0       0       0
  2644 ;;Total ram usage:        9 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    4
  2647 ;; This function calls:
  2648 ;;		___awdiv
  2649 ;;		___awmod
  2650 ;;		___bmul
  2651 ;;		___ftmul
  2652 ;; This function is called by:
  2653 ;;		_sprintf
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           
  2658                           ;psect for function _scale
  2659  0A73                     _scale:
  2660                           
  2661                           ;incstack = 0
  2662                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2663                           ;scale@scl stored from wreg
  2664  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  2665  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  2666  0A75  00C7               	movwf	scale@scl
  2667  0A76                     l3687:
  2668                           
  2669                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 433: scale(signed char scl);D:\M
      +                          PLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 434: {;D:\MPLAB XC8 compiler\pic\sour
      +                          ces\c90\common\doprnt.c: 436:  if(scl < 0) {
  2670  0A76  1FC7               	btfss	scale@scl,7
  2671  0A77  2A79               	goto	u5801
  2672  0A78  2A7A               	goto	u5800
  2673  0A79                     u5801:
  2674  0A79  2BD5               	goto	l3709
  2675  0A7A                     u5800:
  2676  0A7A                     l3689:
  2677                           
  2678                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 437:   scl = -scl;
  2679  0A7A  09C7               	comf	scale@scl,f
  2680  0A7B  0AC7               	incf	scale@scl,f
  2681  0A7C                     l3691:
  2682                           
  2683                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 438:   if(scl>=110)
  2684  0A7C  0847               	movf	scale@scl,w
  2685  0A7D  3A80               	xorlw	128
  2686  0A7E  3E12               	addlw	-238
  2687  0A7F  1C03               	skipc
  2688  0A80  2A82               	goto	u5811
  2689  0A81  2A83               	goto	u5810
  2690  0A82                     u5811:
  2691  0A82  2B41               	goto	l3699
  2692  0A83                     u5810:
  2693  0A83                     l3693:
  2694                           
  2695                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsign
      +                          ed char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigned
      +                           char)(scl%10)];
  2696  0A83  3003               	movlw	3
  2697  0A84  00C2               	movwf	??_scale
  2698  0A85  0842               	movf	??_scale,w
  2699  0A86  00AB               	movwf	___bmul@multiplicand
  2700  0A87  0847               	movf	scale@scl,w
  2701  0A88  00F5               	movwf	___awmod@dividend
  2702  0A89  01F6               	clrf	___awmod@dividend+1
  2703  0A8A  1BF5               	btfsc	___awmod@dividend,7
  2704  0A8B  03F6               	decf	___awmod@dividend+1,f
  2705  0A8C  3064               	movlw	100
  2706  0A8D  00F3               	movwf	___awmod@divisor
  2707  0A8E  3000               	movlw	0
  2708  0A8F  00F4               	movwf	___awmod@divisor+1
  2709  0A90  160A  158A  2748  120A  158A  	fcall	___awmod
  2710  0A95  0874               	movf	?___awmod+1,w
  2711  0A96  1283               	bcf	3,5	;RP0=0, select bank0
  2712  0A97  1303               	bcf	3,6	;RP1=0, select bank0
  2713  0A98  00A5               	movwf	___awdiv@dividend+1
  2714  0A99  0873               	movf	?___awmod,w
  2715  0A9A  00A4               	movwf	___awdiv@dividend
  2716  0A9B  300A               	movlw	10
  2717  0A9C  00A2               	movwf	___awdiv@divisor
  2718  0A9D  3000               	movlw	0
  2719  0A9E  00A3               	movwf	___awdiv@divisor+1
  2720  0A9F  160A  118A  21BA  120A  158A  	fcall	___awdiv
  2721  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0AA6  0822               	movf	?___awdiv,w
  2724  0AA7  160A  158A  2566  120A  158A  	fcall	___bmul
  2725  0AAC  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2726  0AAD  0084               	movwf	4
  2727  0AAE  160A  118A  2000  120A  158A  	fcall	stringdir
  2728  0AB3  1283               	bcf	3,5	;RP0=0, select bank0
  2729  0AB4  1303               	bcf	3,6	;RP1=0, select bank0
  2730  0AB5  00AF               	movwf	___ftmul@f1
  2731  0AB6  160A  118A  2000  120A  158A  	fcall	stringdir
  2732  0ABB  00B0               	movwf	___ftmul@f1+1
  2733  0ABC  160A  118A  2000  120A  158A  	fcall	stringdir
  2734  0AC1  00B1               	movwf	___ftmul@f1+2
  2735  0AC2  3003               	movlw	3
  2736  0AC3  00C3               	movwf	??_scale+1
  2737  0AC4  0843               	movf	??_scale+1,w
  2738  0AC5  00AB               	movwf	___bmul@multiplicand
  2739  0AC6  0847               	movf	scale@scl,w
  2740  0AC7  00A4               	movwf	___awdiv@dividend
  2741  0AC8  01A5               	clrf	___awdiv@dividend+1
  2742  0AC9  1BA4               	btfsc	___awdiv@dividend,7
  2743  0ACA  03A5               	decf	___awdiv@dividend+1,f
  2744  0ACB  3064               	movlw	100
  2745  0ACC  00A2               	movwf	___awdiv@divisor
  2746  0ACD  3000               	movlw	0
  2747  0ACE  00A3               	movwf	___awdiv@divisor+1
  2748  0ACF  160A  118A  21BA  120A  158A  	fcall	___awdiv
  2749  0AD4  1283               	bcf	3,5	;RP0=0, select bank0
  2750  0AD5  1303               	bcf	3,6	;RP1=0, select bank0
  2751  0AD6  0822               	movf	?___awdiv,w
  2752  0AD7  160A  158A  2566  120A  158A  	fcall	___bmul
  2753  0ADC  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  2754  0ADD  0084               	movwf	4
  2755  0ADE  160A  118A  2000  120A  158A  	fcall	stringdir
  2756  0AE3  1283               	bcf	3,5	;RP0=0, select bank0
  2757  0AE4  1303               	bcf	3,6	;RP1=0, select bank0
  2758  0AE5  00B2               	movwf	___ftmul@f2
  2759  0AE6  160A  118A  2000  120A  158A  	fcall	stringdir
  2760  0AEB  00B3               	movwf	___ftmul@f2+1
  2761  0AEC  160A  118A  2000  120A  158A  	fcall	stringdir
  2762  0AF1  00B4               	movwf	___ftmul@f2+2
  2763  0AF2  160A  118A  2614  120A  158A  	fcall	___ftmul
  2764  0AF7  1283               	bcf	3,5	;RP0=0, select bank0
  2765  0AF8  1303               	bcf	3,6	;RP1=0, select bank0
  2766  0AF9  082F               	movf	?___ftmul,w
  2767  0AFA  00C4               	movwf	_scale$960
  2768  0AFB  0830               	movf	?___ftmul+1,w
  2769  0AFC  00C5               	movwf	_scale$960+1
  2770  0AFD  0831               	movf	?___ftmul+2,w
  2771  0AFE  00C6               	movwf	_scale$960+2
  2772                           
  2773                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 439:    return _npowers_[(unsign
      +                          ed char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npowers_[(unsigned
      +                           char)(scl%10)];
  2774  0AFF  3003               	movlw	3
  2775  0B00  00C2               	movwf	??_scale
  2776  0B01  0842               	movf	??_scale,w
  2777  0B02  00AB               	movwf	___bmul@multiplicand
  2778  0B03  0847               	movf	scale@scl,w
  2779  0B04  00F5               	movwf	___awmod@dividend
  2780  0B05  01F6               	clrf	___awmod@dividend+1
  2781  0B06  1BF5               	btfsc	___awmod@dividend,7
  2782  0B07  03F6               	decf	___awmod@dividend+1,f
  2783  0B08  300A               	movlw	10
  2784  0B09  00F3               	movwf	___awmod@divisor
  2785  0B0A  3000               	movlw	0
  2786  0B0B  00F4               	movwf	___awmod@divisor+1
  2787  0B0C  160A  158A  2748  120A  158A  	fcall	___awmod
  2788  0B11  0873               	movf	?___awmod,w
  2789  0B12  160A  158A  2566  120A  158A  	fcall	___bmul
  2790  0B17  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2791  0B18  0084               	movwf	4
  2792  0B19  160A  118A  2000  120A  158A  	fcall	stringdir
  2793  0B1E  1283               	bcf	3,5	;RP0=0, select bank0
  2794  0B1F  1303               	bcf	3,6	;RP1=0, select bank0
  2795  0B20  00AF               	movwf	___ftmul@f1
  2796  0B21  160A  118A  2000  120A  158A  	fcall	stringdir
  2797  0B26  00B0               	movwf	___ftmul@f1+1
  2798  0B27  160A  118A  2000  120A  158A  	fcall	stringdir
  2799  0B2C  00B1               	movwf	___ftmul@f1+2
  2800  0B2D  0844               	movf	_scale$960,w
  2801  0B2E  00B2               	movwf	___ftmul@f2
  2802  0B2F  0845               	movf	_scale$960+1,w
  2803  0B30  00B3               	movwf	___ftmul@f2+1
  2804  0B31  0846               	movf	_scale$960+2,w
  2805  0B32  00B4               	movwf	___ftmul@f2+2
  2806  0B33  160A  118A  2614  120A  158A  	fcall	___ftmul
  2807  0B38  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0B39  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0B3A  082F               	movf	?___ftmul,w
  2810  0B3B  00BF               	movwf	?_scale
  2811  0B3C  0830               	movf	?___ftmul+1,w
  2812  0B3D  00C0               	movwf	?_scale+1
  2813  0B3E  0831               	movf	?___ftmul+2,w
  2814  0B3F  00C1               	movwf	?_scale+2
  2815  0B40  2D2D               	goto	l338
  2816  0B41                     l3699:
  2817  0B41  0847               	movf	scale@scl,w
  2818  0B42  3A80               	xorlw	128
  2819  0B43  3E75               	addlw	-139
  2820  0B44  1C03               	skipc
  2821  0B45  2B47               	goto	u5821
  2822  0B46  2B48               	goto	u5820
  2823  0B47                     u5821:
  2824  0B47  2BB4               	goto	l3705
  2825  0B48                     u5820:
  2826  0B48                     l3701:
  2827                           
  2828                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 441:    return _npowers_[(unsign
      +                          ed char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2829  0B48  3003               	movlw	3
  2830  0B49  00C2               	movwf	??_scale
  2831  0B4A  0842               	movf	??_scale,w
  2832  0B4B  00AB               	movwf	___bmul@multiplicand
  2833  0B4C  0847               	movf	scale@scl,w
  2834  0B4D  00F5               	movwf	___awmod@dividend
  2835  0B4E  01F6               	clrf	___awmod@dividend+1
  2836  0B4F  1BF5               	btfsc	___awmod@dividend,7
  2837  0B50  03F6               	decf	___awmod@dividend+1,f
  2838  0B51  300A               	movlw	10
  2839  0B52  00F3               	movwf	___awmod@divisor
  2840  0B53  3000               	movlw	0
  2841  0B54  00F4               	movwf	___awmod@divisor+1
  2842  0B55  160A  158A  2748  120A  158A  	fcall	___awmod
  2843  0B5A  0873               	movf	?___awmod,w
  2844  0B5B  160A  158A  2566  120A  158A  	fcall	___bmul
  2845  0B60  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2846  0B61  0084               	movwf	4
  2847  0B62  160A  118A  2000  120A  158A  	fcall	stringdir
  2848  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  2849  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  2850  0B69  00AF               	movwf	___ftmul@f1
  2851  0B6A  160A  118A  2000  120A  158A  	fcall	stringdir
  2852  0B6F  00B0               	movwf	___ftmul@f1+1
  2853  0B70  160A  118A  2000  120A  158A  	fcall	stringdir
  2854  0B75  00B1               	movwf	___ftmul@f1+2
  2855  0B76  3003               	movlw	3
  2856  0B77  00C3               	movwf	??_scale+1
  2857  0B78  0843               	movf	??_scale+1,w
  2858  0B79  00AB               	movwf	___bmul@multiplicand
  2859  0B7A  0847               	movf	scale@scl,w
  2860  0B7B  00A4               	movwf	___awdiv@dividend
  2861  0B7C  01A5               	clrf	___awdiv@dividend+1
  2862  0B7D  1BA4               	btfsc	___awdiv@dividend,7
  2863  0B7E  03A5               	decf	___awdiv@dividend+1,f
  2864  0B7F  300A               	movlw	10
  2865  0B80  00A2               	movwf	___awdiv@divisor
  2866  0B81  3000               	movlw	0
  2867  0B82  00A3               	movwf	___awdiv@divisor+1
  2868  0B83  160A  118A  21BA  120A  158A  	fcall	___awdiv
  2869  0B88  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0B89  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0B8A  0822               	movf	?___awdiv,w
  2872  0B8B  160A  158A  2566  120A  158A  	fcall	___bmul
  2873  0B90  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2874  0B91  0084               	movwf	4
  2875  0B92  160A  118A  2000  120A  158A  	fcall	stringdir
  2876  0B97  1283               	bcf	3,5	;RP0=0, select bank0
  2877  0B98  1303               	bcf	3,6	;RP1=0, select bank0
  2878  0B99  00B2               	movwf	___ftmul@f2
  2879  0B9A  160A  118A  2000  120A  158A  	fcall	stringdir
  2880  0B9F  00B3               	movwf	___ftmul@f2+1
  2881  0BA0  160A  118A  2000  120A  158A  	fcall	stringdir
  2882  0BA5  00B4               	movwf	___ftmul@f2+2
  2883  0BA6  160A  118A  2614  120A  158A  	fcall	___ftmul
  2884  0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  2885  0BAC  1303               	bcf	3,6	;RP1=0, select bank0
  2886  0BAD  082F               	movf	?___ftmul,w
  2887  0BAE  00BF               	movwf	?_scale
  2888  0BAF  0830               	movf	?___ftmul+1,w
  2889  0BB0  00C0               	movwf	?_scale+1
  2890  0BB1  0831               	movf	?___ftmul+2,w
  2891  0BB2  00C1               	movwf	?_scale+2
  2892  0BB3  2D2D               	goto	l338
  2893  0BB4                     l3705:
  2894                           
  2895                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 442:   return _npowers_[(unsigne
      +                          d char)scl];
  2896  0BB4  3003               	movlw	3
  2897  0BB5  00C2               	movwf	??_scale
  2898  0BB6  0842               	movf	??_scale,w
  2899  0BB7  00AB               	movwf	___bmul@multiplicand
  2900  0BB8  0847               	movf	scale@scl,w
  2901  0BB9  160A  158A  2566  120A  158A  	fcall	___bmul
  2902  0BBE  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2903  0BBF  0084               	movwf	4
  2904  0BC0  160A  118A  2000  120A  158A  	fcall	stringdir
  2905  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0BC6  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0BC7  00BF               	movwf	?_scale
  2908  0BC8  160A  118A  2000  120A  158A  	fcall	stringdir
  2909  0BCD  00C0               	movwf	?_scale+1
  2910  0BCE  160A  118A  2000  120A  158A  	fcall	stringdir
  2911  0BD3  00C1               	movwf	?_scale+2
  2912  0BD4  2D2D               	goto	l338
  2913  0BD5                     l3709:
  2914                           
  2915                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110)
  2916  0BD5  0847               	movf	scale@scl,w
  2917  0BD6  3A80               	xorlw	128
  2918  0BD7  3E12               	addlw	-238
  2919  0BD8  1C03               	skipc
  2920  0BD9  2BDB               	goto	u5831
  2921  0BDA  2BDC               	goto	u5830
  2922  0BDB                     u5831:
  2923  0BDB  2C9A               	goto	l3717
  2924  0BDC                     u5830:
  2925  0BDC                     l3711:
  2926                           
  2927                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigned
      +                           char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned cha
      +                          r)(scl%10)];
  2928  0BDC  3003               	movlw	3
  2929  0BDD  00C2               	movwf	??_scale
  2930  0BDE  0842               	movf	??_scale,w
  2931  0BDF  00AB               	movwf	___bmul@multiplicand
  2932  0BE0  0847               	movf	scale@scl,w
  2933  0BE1  00F5               	movwf	___awmod@dividend
  2934  0BE2  01F6               	clrf	___awmod@dividend+1
  2935  0BE3  1BF5               	btfsc	___awmod@dividend,7
  2936  0BE4  03F6               	decf	___awmod@dividend+1,f
  2937  0BE5  3064               	movlw	100
  2938  0BE6  00F3               	movwf	___awmod@divisor
  2939  0BE7  3000               	movlw	0
  2940  0BE8  00F4               	movwf	___awmod@divisor+1
  2941  0BE9  160A  158A  2748  120A  158A  	fcall	___awmod
  2942  0BEE  0874               	movf	?___awmod+1,w
  2943  0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  2945  0BF1  00A5               	movwf	___awdiv@dividend+1
  2946  0BF2  0873               	movf	?___awmod,w
  2947  0BF3  00A4               	movwf	___awdiv@dividend
  2948  0BF4  300A               	movlw	10
  2949  0BF5  00A2               	movwf	___awdiv@divisor
  2950  0BF6  3000               	movlw	0
  2951  0BF7  00A3               	movwf	___awdiv@divisor+1
  2952  0BF8  160A  118A  21BA  120A  158A  	fcall	___awdiv
  2953  0BFD  1283               	bcf	3,5	;RP0=0, select bank0
  2954  0BFE  1303               	bcf	3,6	;RP1=0, select bank0
  2955  0BFF  0822               	movf	?___awdiv,w
  2956  0C00  160A  158A  2566  120A  158A  	fcall	___bmul
  2957  0C05  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  2958  0C06  0084               	movwf	4
  2959  0C07  160A  118A  2000  120A  158A  	fcall	stringdir
  2960  0C0C  1283               	bcf	3,5	;RP0=0, select bank0
  2961  0C0D  1303               	bcf	3,6	;RP1=0, select bank0
  2962  0C0E  00AF               	movwf	___ftmul@f1
  2963  0C0F  160A  118A  2000  120A  158A  	fcall	stringdir
  2964  0C14  00B0               	movwf	___ftmul@f1+1
  2965  0C15  160A  118A  2000  120A  158A  	fcall	stringdir
  2966  0C1A  00B1               	movwf	___ftmul@f1+2
  2967  0C1B  3003               	movlw	3
  2968  0C1C  00C3               	movwf	??_scale+1
  2969  0C1D  0843               	movf	??_scale+1,w
  2970  0C1E  00AB               	movwf	___bmul@multiplicand
  2971  0C1F  0847               	movf	scale@scl,w
  2972  0C20  00A4               	movwf	___awdiv@dividend
  2973  0C21  01A5               	clrf	___awdiv@dividend+1
  2974  0C22  1BA4               	btfsc	___awdiv@dividend,7
  2975  0C23  03A5               	decf	___awdiv@dividend+1,f
  2976  0C24  3064               	movlw	100
  2977  0C25  00A2               	movwf	___awdiv@divisor
  2978  0C26  3000               	movlw	0
  2979  0C27  00A3               	movwf	___awdiv@divisor+1
  2980  0C28  160A  118A  21BA  120A  158A  	fcall	___awdiv
  2981  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  2982  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  2983  0C2F  0822               	movf	?___awdiv,w
  2984  0C30  160A  158A  2566  120A  158A  	fcall	___bmul
  2985  0C35  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  2986  0C36  0084               	movwf	4
  2987  0C37  160A  118A  2000  120A  158A  	fcall	stringdir
  2988  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  2989  0C3D  1303               	bcf	3,6	;RP1=0, select bank0
  2990  0C3E  00B2               	movwf	___ftmul@f2
  2991  0C3F  160A  118A  2000  120A  158A  	fcall	stringdir
  2992  0C44  00B3               	movwf	___ftmul@f2+1
  2993  0C45  160A  118A  2000  120A  158A  	fcall	stringdir
  2994  0C4A  00B4               	movwf	___ftmul@f2+2
  2995  0C4B  160A  118A  2614  120A  158A  	fcall	___ftmul
  2996  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  2997  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  2998  0C52  082F               	movf	?___ftmul,w
  2999  0C53  00C4               	movwf	_scale$960
  3000  0C54  0830               	movf	?___ftmul+1,w
  3001  0C55  00C5               	movwf	_scale$960+1
  3002  0C56  0831               	movf	?___ftmul+2,w
  3003  0C57  00C6               	movwf	_scale$960+2
  3004                           
  3005                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 445:   return _powers_[(unsigned
      +                           char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(unsigned cha
      +                          r)(scl%10)];
  3006  0C58  3003               	movlw	3
  3007  0C59  00C2               	movwf	??_scale
  3008  0C5A  0842               	movf	??_scale,w
  3009  0C5B  00AB               	movwf	___bmul@multiplicand
  3010  0C5C  0847               	movf	scale@scl,w
  3011  0C5D  00F5               	movwf	___awmod@dividend
  3012  0C5E  01F6               	clrf	___awmod@dividend+1
  3013  0C5F  1BF5               	btfsc	___awmod@dividend,7
  3014  0C60  03F6               	decf	___awmod@dividend+1,f
  3015  0C61  300A               	movlw	10
  3016  0C62  00F3               	movwf	___awmod@divisor
  3017  0C63  3000               	movlw	0
  3018  0C64  00F4               	movwf	___awmod@divisor+1
  3019  0C65  160A  158A  2748  120A  158A  	fcall	___awmod
  3020  0C6A  0873               	movf	?___awmod,w
  3021  0C6B  160A  158A  2566  120A  158A  	fcall	___bmul
  3022  0C70  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3023  0C71  0084               	movwf	4
  3024  0C72  160A  118A  2000  120A  158A  	fcall	stringdir
  3025  0C77  1283               	bcf	3,5	;RP0=0, select bank0
  3026  0C78  1303               	bcf	3,6	;RP1=0, select bank0
  3027  0C79  00AF               	movwf	___ftmul@f1
  3028  0C7A  160A  118A  2000  120A  158A  	fcall	stringdir
  3029  0C7F  00B0               	movwf	___ftmul@f1+1
  3030  0C80  160A  118A  2000  120A  158A  	fcall	stringdir
  3031  0C85  00B1               	movwf	___ftmul@f1+2
  3032  0C86  0844               	movf	_scale$960,w
  3033  0C87  00B2               	movwf	___ftmul@f2
  3034  0C88  0845               	movf	_scale$960+1,w
  3035  0C89  00B3               	movwf	___ftmul@f2+1
  3036  0C8A  0846               	movf	_scale$960+2,w
  3037  0C8B  00B4               	movwf	___ftmul@f2+2
  3038  0C8C  160A  118A  2614  120A  158A  	fcall	___ftmul
  3039  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  3040  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  3041  0C93  082F               	movf	?___ftmul,w
  3042  0C94  00BF               	movwf	?_scale
  3043  0C95  0830               	movf	?___ftmul+1,w
  3044  0C96  00C0               	movwf	?_scale+1
  3045  0C97  0831               	movf	?___ftmul+2,w
  3046  0C98  00C1               	movwf	?_scale+2
  3047  0C99  2D2D               	goto	l338
  3048  0C9A                     l3717:
  3049  0C9A  0847               	movf	scale@scl,w
  3050  0C9B  3A80               	xorlw	128
  3051  0C9C  3E75               	addlw	-139
  3052  0C9D  1C03               	skipc
  3053  0C9E  2CA0               	goto	u5841
  3054  0C9F  2CA1               	goto	u5840
  3055  0CA0                     u5841:
  3056  0CA0  2D0D               	goto	l3723
  3057  0CA1                     u5840:
  3058  0CA1                     l3719:
  3059                           
  3060                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 447:   return _powers_[(unsigned
      +                           char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3061  0CA1  3003               	movlw	3
  3062  0CA2  00C2               	movwf	??_scale
  3063  0CA3  0842               	movf	??_scale,w
  3064  0CA4  00AB               	movwf	___bmul@multiplicand
  3065  0CA5  0847               	movf	scale@scl,w
  3066  0CA6  00F5               	movwf	___awmod@dividend
  3067  0CA7  01F6               	clrf	___awmod@dividend+1
  3068  0CA8  1BF5               	btfsc	___awmod@dividend,7
  3069  0CA9  03F6               	decf	___awmod@dividend+1,f
  3070  0CAA  300A               	movlw	10
  3071  0CAB  00F3               	movwf	___awmod@divisor
  3072  0CAC  3000               	movlw	0
  3073  0CAD  00F4               	movwf	___awmod@divisor+1
  3074  0CAE  160A  158A  2748  120A  158A  	fcall	___awmod
  3075  0CB3  0873               	movf	?___awmod,w
  3076  0CB4  160A  158A  2566  120A  158A  	fcall	___bmul
  3077  0CB9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3078  0CBA  0084               	movwf	4
  3079  0CBB  160A  118A  2000  120A  158A  	fcall	stringdir
  3080  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3081  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3082  0CC2  00AF               	movwf	___ftmul@f1
  3083  0CC3  160A  118A  2000  120A  158A  	fcall	stringdir
  3084  0CC8  00B0               	movwf	___ftmul@f1+1
  3085  0CC9  160A  118A  2000  120A  158A  	fcall	stringdir
  3086  0CCE  00B1               	movwf	___ftmul@f1+2
  3087  0CCF  3003               	movlw	3
  3088  0CD0  00C3               	movwf	??_scale+1
  3089  0CD1  0843               	movf	??_scale+1,w
  3090  0CD2  00AB               	movwf	___bmul@multiplicand
  3091  0CD3  0847               	movf	scale@scl,w
  3092  0CD4  00A4               	movwf	___awdiv@dividend
  3093  0CD5  01A5               	clrf	___awdiv@dividend+1
  3094  0CD6  1BA4               	btfsc	___awdiv@dividend,7
  3095  0CD7  03A5               	decf	___awdiv@dividend+1,f
  3096  0CD8  300A               	movlw	10
  3097  0CD9  00A2               	movwf	___awdiv@divisor
  3098  0CDA  3000               	movlw	0
  3099  0CDB  00A3               	movwf	___awdiv@divisor+1
  3100  0CDC  160A  118A  21BA  120A  158A  	fcall	___awdiv
  3101  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0CE3  0822               	movf	?___awdiv,w
  3104  0CE4  160A  158A  2566  120A  158A  	fcall	___bmul
  3105  0CE9  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3106  0CEA  0084               	movwf	4
  3107  0CEB  160A  118A  2000  120A  158A  	fcall	stringdir
  3108  0CF0  1283               	bcf	3,5	;RP0=0, select bank0
  3109  0CF1  1303               	bcf	3,6	;RP1=0, select bank0
  3110  0CF2  00B2               	movwf	___ftmul@f2
  3111  0CF3  160A  118A  2000  120A  158A  	fcall	stringdir
  3112  0CF8  00B3               	movwf	___ftmul@f2+1
  3113  0CF9  160A  118A  2000  120A  158A  	fcall	stringdir
  3114  0CFE  00B4               	movwf	___ftmul@f2+2
  3115  0CFF  160A  118A  2614  120A  158A  	fcall	___ftmul
  3116  0D04  1283               	bcf	3,5	;RP0=0, select bank0
  3117  0D05  1303               	bcf	3,6	;RP1=0, select bank0
  3118  0D06  082F               	movf	?___ftmul,w
  3119  0D07  00BF               	movwf	?_scale
  3120  0D08  0830               	movf	?___ftmul+1,w
  3121  0D09  00C0               	movwf	?_scale+1
  3122  0D0A  0831               	movf	?___ftmul+2,w
  3123  0D0B  00C1               	movwf	?_scale+2
  3124  0D0C  2D2D               	goto	l338
  3125  0D0D                     l3723:
  3126                           
  3127                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 448:  return _powers_[(unsigned 
      +                          char)scl];
  3128  0D0D  3003               	movlw	3
  3129  0D0E  00C2               	movwf	??_scale
  3130  0D0F  0842               	movf	??_scale,w
  3131  0D10  00AB               	movwf	___bmul@multiplicand
  3132  0D11  0847               	movf	scale@scl,w
  3133  0D12  160A  158A  2566  120A  158A  	fcall	___bmul
  3134  0D17  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3135  0D18  0084               	movwf	4
  3136  0D19  160A  118A  2000  120A  158A  	fcall	stringdir
  3137  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  3138  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  3139  0D20  00BF               	movwf	?_scale
  3140  0D21  160A  118A  2000  120A  158A  	fcall	stringdir
  3141  0D26  00C0               	movwf	?_scale+1
  3142  0D27  160A  118A  2000  120A  158A  	fcall	stringdir
  3143  0D2C  00C1               	movwf	?_scale+2
  3144  0D2D                     l338:
  3145  0D2D  0008               	return
  3146  0D2E                     __end_of_scale:
  3147                           
  3148                           	psect	text3
  3149  1F48                     __ptext3:	
  3150 ;; *************** function ___awmod *****************
  3151 ;; Defined at:
  3152 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\awmod.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  divisor         2    3[COMMON] int 
  3155 ;;  dividend        2    5[COMMON] int 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;  sign            1    1[BANK0 ] unsigned char 
  3158 ;;  counter         1    0[BANK0 ] unsigned char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  2    3[COMMON] int 
  3161 ;; Registers used:
  3162 ;;		wreg, status,2, status,0
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3168 ;;      Params:         4       0       0       0       0
  3169 ;;      Locals:         0       2       0       0       0
  3170 ;;      Temps:          1       0       0       0       0
  3171 ;;      Totals:         5       2       0       0       0
  3172 ;;Total ram usage:        7 bytes
  3173 ;; Hardware stack levels used:    1
  3174 ;; Hardware stack levels required when called:    2
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_scale
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           
  3183                           ;psect for function ___awmod
  3184  1F48                     ___awmod:
  3185  1F48                     l3435:	
  3186                           ;incstack = 0
  3187                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3188                           
  3189  1F48  1283               	bcf	3,5	;RP0=0, select bank0
  3190  1F49  1303               	bcf	3,6	;RP1=0, select bank0
  3191  1F4A  01A1               	clrf	___awmod@sign
  3192  1F4B                     l3437:
  3193  1F4B  1FF6               	btfss	___awmod@dividend+1,7
  3194  1F4C  2F4E               	goto	u5101
  3195  1F4D  2F4F               	goto	u5100
  3196  1F4E                     u5101:
  3197  1F4E  2F56               	goto	l3443
  3198  1F4F                     u5100:
  3199  1F4F                     l3439:
  3200  1F4F  09F5               	comf	___awmod@dividend,f
  3201  1F50  09F6               	comf	___awmod@dividend+1,f
  3202  1F51  0AF5               	incf	___awmod@dividend,f
  3203  1F52  1903               	skipnz
  3204  1F53  0AF6               	incf	___awmod@dividend+1,f
  3205  1F54                     l3441:
  3206  1F54  01A1               	clrf	___awmod@sign
  3207  1F55  0AA1               	incf	___awmod@sign,f
  3208  1F56                     l3443:
  3209  1F56  1FF4               	btfss	___awmod@divisor+1,7
  3210  1F57  2F59               	goto	u5111
  3211  1F58  2F5A               	goto	u5110
  3212  1F59                     u5111:
  3213  1F59  2F5F               	goto	l3447
  3214  1F5A                     u5110:
  3215  1F5A                     l3445:
  3216  1F5A  09F3               	comf	___awmod@divisor,f
  3217  1F5B  09F4               	comf	___awmod@divisor+1,f
  3218  1F5C  0AF3               	incf	___awmod@divisor,f
  3219  1F5D  1903               	skipnz
  3220  1F5E  0AF4               	incf	___awmod@divisor+1,f
  3221  1F5F                     l3447:
  3222  1F5F  0873               	movf	___awmod@divisor,w
  3223  1F60  0474               	iorwf	___awmod@divisor+1,w
  3224  1F61  1903               	btfsc	3,2
  3225  1F62  2F64               	goto	u5121
  3226  1F63  2F65               	goto	u5120
  3227  1F64                     u5121:
  3228  1F64  2F94               	goto	l3465
  3229  1F65                     u5120:
  3230  1F65                     l3449:
  3231  1F65  01A0               	clrf	___awmod@counter
  3232  1F66  0AA0               	incf	___awmod@counter,f
  3233  1F67  2F73               	goto	l3455
  3234  1F68                     l3451:
  3235  1F68  3001               	movlw	1
  3236  1F69                     u5135:
  3237  1F69  1003               	clrc
  3238  1F6A  0DF3               	rlf	___awmod@divisor,f
  3239  1F6B  0DF4               	rlf	___awmod@divisor+1,f
  3240  1F6C  3EFF               	addlw	-1
  3241  1F6D  1D03               	skipz
  3242  1F6E  2F69               	goto	u5135
  3243  1F6F                     l3453:
  3244  1F6F  3001               	movlw	1
  3245  1F70  00F7               	movwf	??___awmod
  3246  1F71  0877               	movf	??___awmod,w
  3247  1F72  07A0               	addwf	___awmod@counter,f
  3248  1F73                     l3455:
  3249  1F73  1FF4               	btfss	___awmod@divisor+1,7
  3250  1F74  2F76               	goto	u5141
  3251  1F75  2F77               	goto	u5140
  3252  1F76                     u5141:
  3253  1F76  2F68               	goto	l3451
  3254  1F77                     u5140:
  3255  1F77                     l3457:
  3256  1F77  0874               	movf	___awmod@divisor+1,w
  3257  1F78  0276               	subwf	___awmod@dividend+1,w
  3258  1F79  1D03               	skipz
  3259  1F7A  2F7D               	goto	u5155
  3260  1F7B  0873               	movf	___awmod@divisor,w
  3261  1F7C  0275               	subwf	___awmod@dividend,w
  3262  1F7D                     u5155:
  3263  1F7D  1C03               	skipc
  3264  1F7E  2F80               	goto	u5151
  3265  1F7F  2F81               	goto	u5150
  3266  1F80                     u5151:
  3267  1F80  2F87               	goto	l3461
  3268  1F81                     u5150:
  3269  1F81                     l3459:
  3270  1F81  0873               	movf	___awmod@divisor,w
  3271  1F82  02F5               	subwf	___awmod@dividend,f
  3272  1F83  0874               	movf	___awmod@divisor+1,w
  3273  1F84  1C03               	skipc
  3274  1F85  03F6               	decf	___awmod@dividend+1,f
  3275  1F86  02F6               	subwf	___awmod@dividend+1,f
  3276  1F87                     l3461:
  3277  1F87  3001               	movlw	1
  3278  1F88                     u5165:
  3279  1F88  1003               	clrc
  3280  1F89  0CF4               	rrf	___awmod@divisor+1,f
  3281  1F8A  0CF3               	rrf	___awmod@divisor,f
  3282  1F8B  3EFF               	addlw	-1
  3283  1F8C  1D03               	skipz
  3284  1F8D  2F88               	goto	u5165
  3285  1F8E                     l3463:
  3286  1F8E  3001               	movlw	1
  3287  1F8F  02A0               	subwf	___awmod@counter,f
  3288  1F90  1D03               	btfss	3,2
  3289  1F91  2F93               	goto	u5171
  3290  1F92  2F94               	goto	u5170
  3291  1F93                     u5171:
  3292  1F93  2F77               	goto	l3457
  3293  1F94                     u5170:
  3294  1F94                     l3465:
  3295  1F94  0821               	movf	___awmod@sign,w
  3296  1F95  1903               	btfsc	3,2
  3297  1F96  2F98               	goto	u5181
  3298  1F97  2F99               	goto	u5180
  3299  1F98                     u5181:
  3300  1F98  2F9E               	goto	l3469
  3301  1F99                     u5180:
  3302  1F99                     l3467:
  3303  1F99  09F5               	comf	___awmod@dividend,f
  3304  1F9A  09F6               	comf	___awmod@dividend+1,f
  3305  1F9B  0AF5               	incf	___awmod@dividend,f
  3306  1F9C  1903               	skipnz
  3307  1F9D  0AF6               	incf	___awmod@dividend+1,f
  3308  1F9E                     l3469:
  3309  1F9E  0876               	movf	___awmod@dividend+1,w
  3310  1F9F  00F4               	movwf	?___awmod+1
  3311  1FA0  0875               	movf	___awmod@dividend,w
  3312  1FA1  00F3               	movwf	?___awmod
  3313  1FA2                     l621:
  3314  1FA2  0008               	return
  3315  1FA3                     __end_of___awmod:
  3316                           
  3317                           	psect	text4
  3318  11BA                     __ptext4:	
  3319 ;; *************** function ___awdiv *****************
  3320 ;; Defined at:
  3321 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\awdiv.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  divisor         2    2[BANK0 ] int 
  3324 ;;  dividend        2    4[BANK0 ] int 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  quotient        2    9[BANK0 ] int 
  3327 ;;  sign            1    8[BANK0 ] unsigned char 
  3328 ;;  counter         1    7[BANK0 ] unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  2    2[BANK0 ] int 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3338 ;;      Params:         0       4       0       0       0
  3339 ;;      Locals:         0       4       0       0       0
  3340 ;;      Temps:          0       1       0       0       0
  3341 ;;      Totals:         0       9       0       0       0
  3342 ;;Total ram usage:        9 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    2
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_scale
  3349 ;;		_sprintf
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           
  3354                           ;psect for function ___awdiv
  3355  11BA                     ___awdiv:
  3356  11BA                     l3391:	
  3357                           ;incstack = 0
  3358                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3359                           
  3360  11BA  1283               	bcf	3,5	;RP0=0, select bank0
  3361  11BB  1303               	bcf	3,6	;RP1=0, select bank0
  3362  11BC  01A8               	clrf	___awdiv@sign
  3363  11BD                     l3393:
  3364  11BD  1FA3               	btfss	___awdiv@divisor+1,7
  3365  11BE  29C0               	goto	u5001
  3366  11BF  29C1               	goto	u5000
  3367  11C0                     u5001:
  3368  11C0  29C8               	goto	l3399
  3369  11C1                     u5000:
  3370  11C1                     l3395:
  3371  11C1  09A2               	comf	___awdiv@divisor,f
  3372  11C2  09A3               	comf	___awdiv@divisor+1,f
  3373  11C3  0AA2               	incf	___awdiv@divisor,f
  3374  11C4  1903               	skipnz
  3375  11C5  0AA3               	incf	___awdiv@divisor+1,f
  3376  11C6                     l3397:
  3377  11C6  01A8               	clrf	___awdiv@sign
  3378  11C7  0AA8               	incf	___awdiv@sign,f
  3379  11C8                     l3399:
  3380  11C8  1FA5               	btfss	___awdiv@dividend+1,7
  3381  11C9  29CB               	goto	u5011
  3382  11CA  29CC               	goto	u5010
  3383  11CB                     u5011:
  3384  11CB  29D5               	goto	l3405
  3385  11CC                     u5010:
  3386  11CC                     l3401:
  3387  11CC  09A4               	comf	___awdiv@dividend,f
  3388  11CD  09A5               	comf	___awdiv@dividend+1,f
  3389  11CE  0AA4               	incf	___awdiv@dividend,f
  3390  11CF  1903               	skipnz
  3391  11D0  0AA5               	incf	___awdiv@dividend+1,f
  3392  11D1                     l3403:
  3393  11D1  3001               	movlw	1
  3394  11D2  00A6               	movwf	??___awdiv
  3395  11D3  0826               	movf	??___awdiv,w
  3396  11D4  06A8               	xorwf	___awdiv@sign,f
  3397  11D5                     l3405:
  3398  11D5  01A9               	clrf	___awdiv@quotient
  3399  11D6  01AA               	clrf	___awdiv@quotient+1
  3400  11D7                     l3407:
  3401  11D7  0822               	movf	___awdiv@divisor,w
  3402  11D8  0423               	iorwf	___awdiv@divisor+1,w
  3403  11D9  1903               	btfsc	3,2
  3404  11DA  29DC               	goto	u5021
  3405  11DB  29DD               	goto	u5020
  3406  11DC                     u5021:
  3407  11DC  2A14               	goto	l3427
  3408  11DD                     u5020:
  3409  11DD                     l3409:
  3410  11DD  01A7               	clrf	___awdiv@counter
  3411  11DE  0AA7               	incf	___awdiv@counter,f
  3412  11DF  29EB               	goto	l3415
  3413  11E0                     l3411:
  3414  11E0  3001               	movlw	1
  3415  11E1                     u5035:
  3416  11E1  1003               	clrc
  3417  11E2  0DA2               	rlf	___awdiv@divisor,f
  3418  11E3  0DA3               	rlf	___awdiv@divisor+1,f
  3419  11E4  3EFF               	addlw	-1
  3420  11E5  1D03               	skipz
  3421  11E6  29E1               	goto	u5035
  3422  11E7                     l3413:
  3423  11E7  3001               	movlw	1
  3424  11E8  00A6               	movwf	??___awdiv
  3425  11E9  0826               	movf	??___awdiv,w
  3426  11EA  07A7               	addwf	___awdiv@counter,f
  3427  11EB                     l3415:
  3428  11EB  1FA3               	btfss	___awdiv@divisor+1,7
  3429  11EC  29EE               	goto	u5041
  3430  11ED  29EF               	goto	u5040
  3431  11EE                     u5041:
  3432  11EE  29E0               	goto	l3411
  3433  11EF                     u5040:
  3434  11EF                     l3417:
  3435  11EF  3001               	movlw	1
  3436  11F0                     u5055:
  3437  11F0  1003               	clrc
  3438  11F1  0DA9               	rlf	___awdiv@quotient,f
  3439  11F2  0DAA               	rlf	___awdiv@quotient+1,f
  3440  11F3  3EFF               	addlw	-1
  3441  11F4  1D03               	skipz
  3442  11F5  29F0               	goto	u5055
  3443  11F6  0823               	movf	___awdiv@divisor+1,w
  3444  11F7  0225               	subwf	___awdiv@dividend+1,w
  3445  11F8  1D03               	skipz
  3446  11F9  29FC               	goto	u5065
  3447  11FA  0822               	movf	___awdiv@divisor,w
  3448  11FB  0224               	subwf	___awdiv@dividend,w
  3449  11FC                     u5065:
  3450  11FC  1C03               	skipc
  3451  11FD  29FF               	goto	u5061
  3452  11FE  2A00               	goto	u5060
  3453  11FF                     u5061:
  3454  11FF  2A07               	goto	l3423
  3455  1200                     u5060:
  3456  1200                     l3419:
  3457  1200  0822               	movf	___awdiv@divisor,w
  3458  1201  02A4               	subwf	___awdiv@dividend,f
  3459  1202  0823               	movf	___awdiv@divisor+1,w
  3460  1203  1C03               	skipc
  3461  1204  03A5               	decf	___awdiv@dividend+1,f
  3462  1205  02A5               	subwf	___awdiv@dividend+1,f
  3463  1206                     l3421:
  3464  1206  1429               	bsf	___awdiv@quotient,0
  3465  1207                     l3423:
  3466  1207  3001               	movlw	1
  3467  1208                     u5075:
  3468  1208  1003               	clrc
  3469  1209  0CA3               	rrf	___awdiv@divisor+1,f
  3470  120A  0CA2               	rrf	___awdiv@divisor,f
  3471  120B  3EFF               	addlw	-1
  3472  120C  1D03               	skipz
  3473  120D  2A08               	goto	u5075
  3474  120E                     l3425:
  3475  120E  3001               	movlw	1
  3476  120F  02A7               	subwf	___awdiv@counter,f
  3477  1210  1D03               	btfss	3,2
  3478  1211  2A13               	goto	u5081
  3479  1212  2A14               	goto	u5080
  3480  1213                     u5081:
  3481  1213  29EF               	goto	l3417
  3482  1214                     u5080:
  3483  1214                     l3427:
  3484  1214  0828               	movf	___awdiv@sign,w
  3485  1215  1903               	btfsc	3,2
  3486  1216  2A18               	goto	u5091
  3487  1217  2A19               	goto	u5090
  3488  1218                     u5091:
  3489  1218  2A1E               	goto	l3431
  3490  1219                     u5090:
  3491  1219                     l3429:
  3492  1219  09A9               	comf	___awdiv@quotient,f
  3493  121A  09AA               	comf	___awdiv@quotient+1,f
  3494  121B  0AA9               	incf	___awdiv@quotient,f
  3495  121C  1903               	skipnz
  3496  121D  0AAA               	incf	___awdiv@quotient+1,f
  3497  121E                     l3431:
  3498  121E  082A               	movf	___awdiv@quotient+1,w
  3499  121F  00A3               	movwf	?___awdiv+1
  3500  1220  0829               	movf	___awdiv@quotient,w
  3501  1221  00A2               	movwf	?___awdiv
  3502  1222                     l608:
  3503  1222  0008               	return
  3504  1223                     __end_of___awdiv:
  3505                           
  3506                           	psect	text5
  3507  1D18                     __ptext5:	
  3508 ;; *************** function _isdigit *****************
  3509 ;; Defined at:
  3510 ;;		line 8 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\isdigit.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  c               1    wreg     unsigned char 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  c               1    4[COMMON] unsigned char 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;		None               void
  3517 ;; Registers used:
  3518 ;;		wreg, status,2, status,0
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3524 ;;      Params:         0       0       0       0       0
  3525 ;;      Locals:         2       0       0       0       0
  3526 ;;      Temps:          0       0       0       0       0
  3527 ;;      Totals:         2       0       0       0       0
  3528 ;;Total ram usage:        2 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; Hardware stack levels required when called:    2
  3531 ;; This function calls:
  3532 ;;		Nothing
  3533 ;; This function is called by:
  3534 ;;		_sprintf
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           
  3539                           ;psect for function _isdigit
  3540  1D18                     _isdigit:
  3541                           
  3542                           ;incstack = 0
  3543                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3544                           ;isdigit@c stored from wreg
  3545  1D18  00F4               	movwf	isdigit@c
  3546  1D19                     l2557:
  3547  1D19  01F3               	clrf	_isdigit$750
  3548  1D1A                     l2559:
  3549  1D1A  303A               	movlw	58
  3550  1D1B  0274               	subwf	isdigit@c,w
  3551  1D1C  1803               	skipnc
  3552  1D1D  2D1F               	goto	u3471
  3553  1D1E  2D20               	goto	u3470
  3554  1D1F                     u3471:
  3555  1D1F  2D28               	goto	l2565
  3556  1D20                     u3470:
  3557  1D20                     l2561:
  3558  1D20  3030               	movlw	48
  3559  1D21  0274               	subwf	isdigit@c,w
  3560  1D22  1C03               	skipc
  3561  1D23  2D25               	goto	u3481
  3562  1D24  2D26               	goto	u3480
  3563  1D25                     u3481:
  3564  1D25  2D28               	goto	l2565
  3565  1D26                     u3480:
  3566  1D26                     l2563:
  3567  1D26  01F3               	clrf	_isdigit$750
  3568  1D27  0AF3               	incf	_isdigit$750,f
  3569  1D28                     l2565:
  3570  1D28  0C73               	rrf	_isdigit$750,w
  3571  1D29                     l887:
  3572  1D29  0008               	return
  3573  1D2A                     __end_of_isdigit:
  3574                           
  3575                           	psect	text6
  3576  0593                     __ptext6:	
  3577 ;; *************** function _fround *****************
  3578 ;; Defined at:
  3579 ;;		line 417 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  prec            1    wreg     unsigned char 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  prec            1   46[BANK0 ] unsigned char 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  3   31[BANK0 ] unsigned char 
  3586 ;; Registers used:
  3587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3593 ;;      Params:         0       3       0       0       0
  3594 ;;      Locals:         0       7       0       0       0
  3595 ;;      Temps:          0       6       0       0       0
  3596 ;;      Totals:         0      16       0       0       0
  3597 ;;Total ram usage:       16 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    4
  3600 ;; This function calls:
  3601 ;;		___bmul
  3602 ;;		___ftmul
  3603 ;;		___lwdiv
  3604 ;;		___lwmod
  3605 ;; This function is called by:
  3606 ;;		_sprintf
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           
  3611                           ;psect for function _fround
  3612  0593                     _fround:
  3613                           
  3614                           ;incstack = 0
  3615                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3616                           ;fround@prec stored from wreg
  3617  0593  1283               	bcf	3,5	;RP0=0, select bank0
  3618  0594  1303               	bcf	3,6	;RP1=0, select bank0
  3619  0595  00CE               	movwf	fround@prec
  3620  0596                     l3665:
  3621                           
  3622                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 417: fround(unsigned char prec);
      +                          D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 418: {;D:\MPLAB XC8 compiler\pic\
      +                          sources\c90\common\doprnt.c: 421:  if(prec>=110)
  3623  0596  306E               	movlw	110
  3624  0597  024E               	subwf	fround@prec,w
  3625  0598  1C03               	skipc
  3626  0599  2D9B               	goto	u5781
  3627  059A  2D9C               	goto	u5780
  3628  059B                     u5781:
  3629  059B  2E79               	goto	l3675
  3630  059C                     u5780:
  3631  059C                     l3667:
  3632                           
  3633                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3634  059C  3003               	movlw	3
  3635  059D  00C2               	movwf	??_fround
  3636  059E  0842               	movf	??_fround,w
  3637  059F  00AB               	movwf	___bmul@multiplicand
  3638  05A0  084E               	movf	fround@prec,w
  3639  05A1  00C3               	movwf	??_fround+1
  3640  05A2  01C4               	clrf	??_fround+2
  3641  05A3  0843               	movf	??_fround+1,w
  3642  05A4  00F5               	movwf	___lwmod@dividend
  3643  05A5  0844               	movf	??_fround+2,w
  3644  05A6  00F6               	movwf	___lwmod@dividend+1
  3645  05A7  3064               	movlw	100
  3646  05A8  00F3               	movwf	___lwmod@divisor
  3647  05A9  3000               	movlw	0
  3648  05AA  00F4               	movwf	___lwmod@divisor+1
  3649  05AB  160A  158A  26C6  120A  118A  	fcall	___lwmod
  3650  05B0  0874               	movf	?___lwmod+1,w
  3651  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  3652  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  3653  05B3  00A4               	movwf	___lwdiv@dividend+1
  3654  05B4  0873               	movf	?___lwmod,w
  3655  05B5  00A3               	movwf	___lwdiv@dividend
  3656  05B6  300A               	movlw	10
  3657  05B7  00A1               	movwf	___lwdiv@divisor
  3658  05B8  3000               	movlw	0
  3659  05B9  00A2               	movwf	___lwdiv@divisor+1
  3660  05BA  160A  158A  2702  120A  118A  	fcall	___lwdiv
  3661  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  3662  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  3663  05C1  0821               	movf	?___lwdiv,w
  3664  05C2  160A  158A  2566  120A  118A  	fcall	___bmul
  3665  05C7  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3666  05C8  0084               	movwf	4
  3667  05C9  160A  118A  2000  120A  118A  	fcall	stringdir
  3668  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3669  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3670  05D0  00AF               	movwf	___ftmul@f1
  3671  05D1  160A  118A  2000  120A  118A  	fcall	stringdir
  3672  05D6  00B0               	movwf	___ftmul@f1+1
  3673  05D7  160A  118A  2000  120A  118A  	fcall	stringdir
  3674  05DC  00B1               	movwf	___ftmul@f1+2
  3675  05DD  3003               	movlw	3
  3676  05DE  00C5               	movwf	??_fround+3
  3677  05DF  0845               	movf	??_fround+3,w
  3678  05E0  00AB               	movwf	___bmul@multiplicand
  3679  05E1  084E               	movf	fround@prec,w
  3680  05E2  00C6               	movwf	??_fround+4
  3681  05E3  01C7               	clrf	??_fround+5
  3682  05E4  0846               	movf	??_fround+4,w
  3683  05E5  00A3               	movwf	___lwdiv@dividend
  3684  05E6  0847               	movf	??_fround+5,w
  3685  05E7  00A4               	movwf	___lwdiv@dividend+1
  3686  05E8  3064               	movlw	100
  3687  05E9  00A1               	movwf	___lwdiv@divisor
  3688  05EA  3000               	movlw	0
  3689  05EB  00A2               	movwf	___lwdiv@divisor+1
  3690  05EC  160A  158A  2702  120A  118A  	fcall	___lwdiv
  3691  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  3692  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  3693  05F3  0821               	movf	?___lwdiv,w
  3694  05F4  160A  158A  2566  120A  118A  	fcall	___bmul
  3695  05F9  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3696  05FA  0084               	movwf	4
  3697  05FB  160A  118A  2000  120A  118A  	fcall	stringdir
  3698  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3699  0601  1303               	bcf	3,6	;RP1=0, select bank0
  3700  0602  00B2               	movwf	___ftmul@f2
  3701  0603  160A  118A  2000  120A  118A  	fcall	stringdir
  3702  0608  00B3               	movwf	___ftmul@f2+1
  3703  0609  160A  118A  2000  120A  118A  	fcall	stringdir
  3704  060E  00B4               	movwf	___ftmul@f2+2
  3705  060F  160A  118A  2614  120A  118A  	fcall	___ftmul
  3706  0614  1283               	bcf	3,5	;RP0=0, select bank0
  3707  0615  1303               	bcf	3,6	;RP1=0, select bank0
  3708  0616  082F               	movf	?___ftmul,w
  3709  0617  00CB               	movwf	_fround$958
  3710  0618  0830               	movf	?___ftmul+1,w
  3711  0619  00CC               	movwf	_fround$958+1
  3712  061A  0831               	movf	?___ftmul+2,w
  3713  061B  00CD               	movwf	_fround$958+2
  3714                           
  3715                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3716  061C  3003               	movlw	3
  3717  061D  00C2               	movwf	??_fround
  3718  061E  0842               	movf	??_fround,w
  3719  061F  00AB               	movwf	___bmul@multiplicand
  3720  0620  084E               	movf	fround@prec,w
  3721  0621  00C3               	movwf	??_fround+1
  3722  0622  01C4               	clrf	??_fround+2
  3723  0623  0843               	movf	??_fround+1,w
  3724  0624  00F5               	movwf	___lwmod@dividend
  3725  0625  0844               	movf	??_fround+2,w
  3726  0626  00F6               	movwf	___lwmod@dividend+1
  3727  0627  300A               	movlw	10
  3728  0628  00F3               	movwf	___lwmod@divisor
  3729  0629  3000               	movlw	0
  3730  062A  00F4               	movwf	___lwmod@divisor+1
  3731  062B  160A  158A  26C6  120A  118A  	fcall	___lwmod
  3732  0630  0873               	movf	?___lwmod,w
  3733  0631  160A  158A  2566  120A  118A  	fcall	___bmul
  3734  0636  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3735  0637  0084               	movwf	4
  3736  0638  160A  118A  2000  120A  118A  	fcall	stringdir
  3737  063D  1283               	bcf	3,5	;RP0=0, select bank0
  3738  063E  1303               	bcf	3,6	;RP1=0, select bank0
  3739  063F  00AF               	movwf	___ftmul@f1
  3740  0640  160A  118A  2000  120A  118A  	fcall	stringdir
  3741  0645  00B0               	movwf	___ftmul@f1+1
  3742  0646  160A  118A  2000  120A  118A  	fcall	stringdir
  3743  064B  00B1               	movwf	___ftmul@f1+2
  3744  064C  084B               	movf	_fround$958,w
  3745  064D  00B2               	movwf	___ftmul@f2
  3746  064E  084C               	movf	_fround$958+1,w
  3747  064F  00B3               	movwf	___ftmul@f2+1
  3748  0650  084D               	movf	_fround$958+2,w
  3749  0651  00B4               	movwf	___ftmul@f2+2
  3750  0652  160A  118A  2614  120A  118A  	fcall	___ftmul
  3751  0657  1283               	bcf	3,5	;RP0=0, select bank0
  3752  0658  1303               	bcf	3,6	;RP1=0, select bank0
  3753  0659  082F               	movf	?___ftmul,w
  3754  065A  00C8               	movwf	_fround$959
  3755  065B  0830               	movf	?___ftmul+1,w
  3756  065C  00C9               	movwf	_fround$959+1
  3757  065D  0831               	movf	?___ftmul+2,w
  3758  065E  00CA               	movwf	_fround$959+2
  3759  065F                     l3669:
  3760                           
  3761                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * _npowers_[pr
      +                          ec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3762  065F  3000               	movlw	0
  3763  0660  00AF               	movwf	___ftmul@f1
  3764  0661  3000               	movlw	0
  3765  0662  00B0               	movwf	___ftmul@f1+1
  3766  0663  303F               	movlw	63
  3767  0664  00B1               	movwf	___ftmul@f1+2
  3768  0665  0848               	movf	_fround$959,w
  3769  0666  00B2               	movwf	___ftmul@f2
  3770  0667  0849               	movf	_fround$959+1,w
  3771  0668  00B3               	movwf	___ftmul@f2+1
  3772  0669  084A               	movf	_fround$959+2,w
  3773  066A  00B4               	movwf	___ftmul@f2+2
  3774  066B  160A  118A  2614  120A  118A  	fcall	___ftmul
  3775  0670  1283               	bcf	3,5	;RP0=0, select bank0
  3776  0671  1303               	bcf	3,6	;RP1=0, select bank0
  3777  0672  082F               	movf	?___ftmul,w
  3778  0673  00BF               	movwf	?_fround
  3779  0674  0830               	movf	?___ftmul+1,w
  3780  0675  00C0               	movwf	?_fround+1
  3781  0676  0831               	movf	?___ftmul+2,w
  3782  0677  00C1               	movwf	?_fround+2
  3783  0678  2F3B               	goto	l331
  3784  0679                     l3675:
  3785  0679  300B               	movlw	11
  3786  067A  024E               	subwf	fround@prec,w
  3787  067B  1C03               	skipc
  3788  067C  2E7E               	goto	u5791
  3789  067D  2E7F               	goto	u5790
  3790  067E                     u5791:
  3791  067E  2F08               	goto	l3683
  3792  067F                     u5790:
  3793  067F                     l3677:
  3794                           
  3795                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[pr
      +                          ec/10U+9U] * _npowers_[prec%10U];
  3796  067F  3003               	movlw	3
  3797  0680  00C2               	movwf	??_fround
  3798  0681  0842               	movf	??_fround,w
  3799  0682  00AB               	movwf	___bmul@multiplicand
  3800  0683  084E               	movf	fround@prec,w
  3801  0684  00C3               	movwf	??_fround+1
  3802  0685  01C4               	clrf	??_fround+2
  3803  0686  0843               	movf	??_fround+1,w
  3804  0687  00F5               	movwf	___lwmod@dividend
  3805  0688  0844               	movf	??_fround+2,w
  3806  0689  00F6               	movwf	___lwmod@dividend+1
  3807  068A  300A               	movlw	10
  3808  068B  00F3               	movwf	___lwmod@divisor
  3809  068C  3000               	movlw	0
  3810  068D  00F4               	movwf	___lwmod@divisor+1
  3811  068E  160A  158A  26C6  120A  118A  	fcall	___lwmod
  3812  0693  0873               	movf	?___lwmod,w
  3813  0694  160A  158A  2566  120A  118A  	fcall	___bmul
  3814  0699  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3815  069A  0084               	movwf	4
  3816  069B  160A  118A  2000  120A  118A  	fcall	stringdir
  3817  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  3818  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  3819  06A2  00AF               	movwf	___ftmul@f1
  3820  06A3  160A  118A  2000  120A  118A  	fcall	stringdir
  3821  06A8  00B0               	movwf	___ftmul@f1+1
  3822  06A9  160A  118A  2000  120A  118A  	fcall	stringdir
  3823  06AE  00B1               	movwf	___ftmul@f1+2
  3824  06AF  3003               	movlw	3
  3825  06B0  00C5               	movwf	??_fround+3
  3826  06B1  0845               	movf	??_fround+3,w
  3827  06B2  00AB               	movwf	___bmul@multiplicand
  3828  06B3  084E               	movf	fround@prec,w
  3829  06B4  00C6               	movwf	??_fround+4
  3830  06B5  01C7               	clrf	??_fround+5
  3831  06B6  0846               	movf	??_fround+4,w
  3832  06B7  00A3               	movwf	___lwdiv@dividend
  3833  06B8  0847               	movf	??_fround+5,w
  3834  06B9  00A4               	movwf	___lwdiv@dividend+1
  3835  06BA  300A               	movlw	10
  3836  06BB  00A1               	movwf	___lwdiv@divisor
  3837  06BC  3000               	movlw	0
  3838  06BD  00A2               	movwf	___lwdiv@divisor+1
  3839  06BE  160A  158A  2702  120A  118A  	fcall	___lwdiv
  3840  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  3841  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  3842  06C5  0821               	movf	?___lwdiv,w
  3843  06C6  160A  158A  2566  120A  118A  	fcall	___bmul
  3844  06CB  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3845  06CC  0084               	movwf	4
  3846  06CD  160A  118A  2000  120A  118A  	fcall	stringdir
  3847  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  3848  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  3849  06D4  00B2               	movwf	___ftmul@f2
  3850  06D5  160A  118A  2000  120A  118A  	fcall	stringdir
  3851  06DA  00B3               	movwf	___ftmul@f2+1
  3852  06DB  160A  118A  2000  120A  118A  	fcall	stringdir
  3853  06E0  00B4               	movwf	___ftmul@f2+2
  3854  06E1  160A  118A  2614  120A  118A  	fcall	___ftmul
  3855  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  3856  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  3857  06E8  082F               	movf	?___ftmul,w
  3858  06E9  00CB               	movwf	_fround$958
  3859  06EA  0830               	movf	?___ftmul+1,w
  3860  06EB  00CC               	movwf	_fround$958+1
  3861  06EC  0831               	movf	?___ftmul+2,w
  3862  06ED  00CD               	movwf	_fround$958+2
  3863  06EE                     l3679:
  3864                           
  3865                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * _npowers_[pr
      +                          ec/10U+9U] * _npowers_[prec%10U];
  3866  06EE  3000               	movlw	0
  3867  06EF  00AF               	movwf	___ftmul@f1
  3868  06F0  3000               	movlw	0
  3869  06F1  00B0               	movwf	___ftmul@f1+1
  3870  06F2  303F               	movlw	63
  3871  06F3  00B1               	movwf	___ftmul@f1+2
  3872  06F4  084B               	movf	_fround$958,w
  3873  06F5  00B2               	movwf	___ftmul@f2
  3874  06F6  084C               	movf	_fround$958+1,w
  3875  06F7  00B3               	movwf	___ftmul@f2+1
  3876  06F8  084D               	movf	_fround$958+2,w
  3877  06F9  00B4               	movwf	___ftmul@f2+2
  3878  06FA  160A  118A  2614  120A  118A  	fcall	___ftmul
  3879  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  3880  0700  1303               	bcf	3,6	;RP1=0, select bank0
  3881  0701  082F               	movf	?___ftmul,w
  3882  0702  00BF               	movwf	?_fround
  3883  0703  0830               	movf	?___ftmul+1,w
  3884  0704  00C0               	movwf	?_fround+1
  3885  0705  0831               	movf	?___ftmul+2,w
  3886  0706  00C1               	movwf	?_fround+2
  3887  0707  2F3B               	goto	l331
  3888  0708                     l3683:
  3889                           
  3890                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 425:  return 0.5 * _npowers_[pre
      +                          c];
  3891  0708  3000               	movlw	0
  3892  0709  00AF               	movwf	___ftmul@f1
  3893  070A  3000               	movlw	0
  3894  070B  00B0               	movwf	___ftmul@f1+1
  3895  070C  303F               	movlw	63
  3896  070D  00B1               	movwf	___ftmul@f1+2
  3897  070E  3003               	movlw	3
  3898  070F  00C2               	movwf	??_fround
  3899  0710  0842               	movf	??_fround,w
  3900  0711  00AB               	movwf	___bmul@multiplicand
  3901  0712  084E               	movf	fround@prec,w
  3902  0713  160A  158A  2566  120A  118A  	fcall	___bmul
  3903  0718  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3904  0719  0084               	movwf	4
  3905  071A  160A  118A  2000  120A  118A  	fcall	stringdir
  3906  071F  1283               	bcf	3,5	;RP0=0, select bank0
  3907  0720  1303               	bcf	3,6	;RP1=0, select bank0
  3908  0721  00B2               	movwf	___ftmul@f2
  3909  0722  160A  118A  2000  120A  118A  	fcall	stringdir
  3910  0727  00B3               	movwf	___ftmul@f2+1
  3911  0728  160A  118A  2000  120A  118A  	fcall	stringdir
  3912  072D  00B4               	movwf	___ftmul@f2+2
  3913  072E  160A  118A  2614  120A  118A  	fcall	___ftmul
  3914  0733  1283               	bcf	3,5	;RP0=0, select bank0
  3915  0734  1303               	bcf	3,6	;RP1=0, select bank0
  3916  0735  082F               	movf	?___ftmul,w
  3917  0736  00BF               	movwf	?_fround
  3918  0737  0830               	movf	?___ftmul+1,w
  3919  0738  00C0               	movwf	?_fround+1
  3920  0739  0831               	movf	?___ftmul+2,w
  3921  073A  00C1               	movwf	?_fround+2
  3922  073B                     l331:
  3923  073B  0008               	return
  3924  073C                     __end_of_fround:
  3925                           
  3926                           	psect	text7
  3927  1EC6                     __ptext7:	
  3928 ;; *************** function ___lwmod *****************
  3929 ;; Defined at:
  3930 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lwmod.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  divisor         2    3[COMMON] unsigned int 
  3933 ;;  dividend        2    5[COMMON] unsigned int 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  counter         1    0[BANK0 ] unsigned char 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  2    3[COMMON] unsigned int 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3945 ;;      Params:         4       0       0       0       0
  3946 ;;      Locals:         0       1       0       0       0
  3947 ;;      Temps:          1       0       0       0       0
  3948 ;;      Totals:         5       1       0       0       0
  3949 ;;Total ram usage:        6 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    2
  3952 ;; This function calls:
  3953 ;;		Nothing
  3954 ;; This function is called by:
  3955 ;;		_fround
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           
  3960                           ;psect for function ___lwmod
  3961  1EC6                     ___lwmod:
  3962  1EC6                     l3619:	
  3963                           ;incstack = 0
  3964                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3965                           
  3966  1EC6  0873               	movf	___lwmod@divisor,w
  3967  1EC7  0474               	iorwf	___lwmod@divisor+1,w
  3968  1EC8  1903               	btfsc	3,2
  3969  1EC9  2ECB               	goto	u5641
  3970  1ECA  2ECC               	goto	u5640
  3971  1ECB                     u5641:
  3972  1ECB  2EFD               	goto	l3637
  3973  1ECC                     u5640:
  3974  1ECC                     l3621:
  3975  1ECC  1283               	bcf	3,5	;RP0=0, select bank0
  3976  1ECD  1303               	bcf	3,6	;RP1=0, select bank0
  3977  1ECE  01A0               	clrf	___lwmod@counter
  3978  1ECF  0AA0               	incf	___lwmod@counter,f
  3979  1ED0  2EDC               	goto	l3627
  3980  1ED1                     l3623:
  3981  1ED1  3001               	movlw	1
  3982  1ED2                     u5655:
  3983  1ED2  1003               	clrc
  3984  1ED3  0DF3               	rlf	___lwmod@divisor,f
  3985  1ED4  0DF4               	rlf	___lwmod@divisor+1,f
  3986  1ED5  3EFF               	addlw	-1
  3987  1ED6  1D03               	skipz
  3988  1ED7  2ED2               	goto	u5655
  3989  1ED8                     l3625:
  3990  1ED8  3001               	movlw	1
  3991  1ED9  00F7               	movwf	??___lwmod
  3992  1EDA  0877               	movf	??___lwmod,w
  3993  1EDB  07A0               	addwf	___lwmod@counter,f
  3994  1EDC                     l3627:
  3995  1EDC  1FF4               	btfss	___lwmod@divisor+1,7
  3996  1EDD  2EDF               	goto	u5661
  3997  1EDE  2EE0               	goto	u5660
  3998  1EDF                     u5661:
  3999  1EDF  2ED1               	goto	l3623
  4000  1EE0                     u5660:
  4001  1EE0                     l3629:
  4002  1EE0  0874               	movf	___lwmod@divisor+1,w
  4003  1EE1  0276               	subwf	___lwmod@dividend+1,w
  4004  1EE2  1D03               	skipz
  4005  1EE3  2EE6               	goto	u5675
  4006  1EE4  0873               	movf	___lwmod@divisor,w
  4007  1EE5  0275               	subwf	___lwmod@dividend,w
  4008  1EE6                     u5675:
  4009  1EE6  1C03               	skipc
  4010  1EE7  2EE9               	goto	u5671
  4011  1EE8  2EEA               	goto	u5670
  4012  1EE9                     u5671:
  4013  1EE9  2EF0               	goto	l3633
  4014  1EEA                     u5670:
  4015  1EEA                     l3631:
  4016  1EEA  0873               	movf	___lwmod@divisor,w
  4017  1EEB  02F5               	subwf	___lwmod@dividend,f
  4018  1EEC  0874               	movf	___lwmod@divisor+1,w
  4019  1EED  1C03               	skipc
  4020  1EEE  03F6               	decf	___lwmod@dividend+1,f
  4021  1EEF  02F6               	subwf	___lwmod@dividend+1,f
  4022  1EF0                     l3633:
  4023  1EF0  3001               	movlw	1
  4024  1EF1                     u5685:
  4025  1EF1  1003               	clrc
  4026  1EF2  0CF4               	rrf	___lwmod@divisor+1,f
  4027  1EF3  0CF3               	rrf	___lwmod@divisor,f
  4028  1EF4  3EFF               	addlw	-1
  4029  1EF5  1D03               	skipz
  4030  1EF6  2EF1               	goto	u5685
  4031  1EF7                     l3635:
  4032  1EF7  3001               	movlw	1
  4033  1EF8  02A0               	subwf	___lwmod@counter,f
  4034  1EF9  1D03               	btfss	3,2
  4035  1EFA  2EFC               	goto	u5691
  4036  1EFB  2EFD               	goto	u5690
  4037  1EFC                     u5691:
  4038  1EFC  2EE0               	goto	l3629
  4039  1EFD                     u5690:
  4040  1EFD                     l3637:
  4041  1EFD  0876               	movf	___lwmod@dividend+1,w
  4042  1EFE  00F4               	movwf	?___lwmod+1
  4043  1EFF  0875               	movf	___lwmod@dividend,w
  4044  1F00  00F3               	movwf	?___lwmod
  4045  1F01                     l877:
  4046  1F01  0008               	return
  4047  1F02                     __end_of___lwmod:
  4048                           
  4049                           	psect	text8
  4050  1F02                     __ptext8:	
  4051 ;; *************** function ___lwdiv *****************
  4052 ;; Defined at:
  4053 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lwdiv.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  divisor         2    1[BANK0 ] unsigned int 
  4056 ;;  dividend        2    3[BANK0 ] unsigned int 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  quotient        2    7[BANK0 ] unsigned int 
  4059 ;;  counter         1    6[BANK0 ] unsigned char 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  2    1[BANK0 ] unsigned int 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4069 ;;      Params:         0       4       0       0       0
  4070 ;;      Locals:         0       3       0       0       0
  4071 ;;      Temps:          0       1       0       0       0
  4072 ;;      Totals:         0       8       0       0       0
  4073 ;;Total ram usage:        8 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    2
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_fround
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           
  4084                           ;psect for function ___lwdiv
  4085  1F02                     ___lwdiv:
  4086  1F02                     l3593:	
  4087                           ;incstack = 0
  4088                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4089                           
  4090  1F02  1283               	bcf	3,5	;RP0=0, select bank0
  4091  1F03  1303               	bcf	3,6	;RP1=0, select bank0
  4092  1F04  01A7               	clrf	___lwdiv@quotient
  4093  1F05  01A8               	clrf	___lwdiv@quotient+1
  4094  1F06                     l3595:
  4095  1F06  0821               	movf	___lwdiv@divisor,w
  4096  1F07  0422               	iorwf	___lwdiv@divisor+1,w
  4097  1F08  1903               	btfsc	3,2
  4098  1F09  2F0B               	goto	u5571
  4099  1F0A  2F0C               	goto	u5570
  4100  1F0B                     u5571:
  4101  1F0B  2F43               	goto	l3615
  4102  1F0C                     u5570:
  4103  1F0C                     l3597:
  4104  1F0C  01A6               	clrf	___lwdiv@counter
  4105  1F0D  0AA6               	incf	___lwdiv@counter,f
  4106  1F0E  2F1A               	goto	l3603
  4107  1F0F                     l3599:
  4108  1F0F  3001               	movlw	1
  4109  1F10                     u5585:
  4110  1F10  1003               	clrc
  4111  1F11  0DA1               	rlf	___lwdiv@divisor,f
  4112  1F12  0DA2               	rlf	___lwdiv@divisor+1,f
  4113  1F13  3EFF               	addlw	-1
  4114  1F14  1D03               	skipz
  4115  1F15  2F10               	goto	u5585
  4116  1F16                     l3601:
  4117  1F16  3001               	movlw	1
  4118  1F17  00A5               	movwf	??___lwdiv
  4119  1F18  0825               	movf	??___lwdiv,w
  4120  1F19  07A6               	addwf	___lwdiv@counter,f
  4121  1F1A                     l3603:
  4122  1F1A  1FA2               	btfss	___lwdiv@divisor+1,7
  4123  1F1B  2F1D               	goto	u5591
  4124  1F1C  2F1E               	goto	u5590
  4125  1F1D                     u5591:
  4126  1F1D  2F0F               	goto	l3599
  4127  1F1E                     u5590:
  4128  1F1E                     l3605:
  4129  1F1E  3001               	movlw	1
  4130  1F1F                     u5605:
  4131  1F1F  1003               	clrc
  4132  1F20  0DA7               	rlf	___lwdiv@quotient,f
  4133  1F21  0DA8               	rlf	___lwdiv@quotient+1,f
  4134  1F22  3EFF               	addlw	-1
  4135  1F23  1D03               	skipz
  4136  1F24  2F1F               	goto	u5605
  4137  1F25  0822               	movf	___lwdiv@divisor+1,w
  4138  1F26  0224               	subwf	___lwdiv@dividend+1,w
  4139  1F27  1D03               	skipz
  4140  1F28  2F2B               	goto	u5615
  4141  1F29  0821               	movf	___lwdiv@divisor,w
  4142  1F2A  0223               	subwf	___lwdiv@dividend,w
  4143  1F2B                     u5615:
  4144  1F2B  1C03               	skipc
  4145  1F2C  2F2E               	goto	u5611
  4146  1F2D  2F2F               	goto	u5610
  4147  1F2E                     u5611:
  4148  1F2E  2F36               	goto	l3611
  4149  1F2F                     u5610:
  4150  1F2F                     l3607:
  4151  1F2F  0821               	movf	___lwdiv@divisor,w
  4152  1F30  02A3               	subwf	___lwdiv@dividend,f
  4153  1F31  0822               	movf	___lwdiv@divisor+1,w
  4154  1F32  1C03               	skipc
  4155  1F33  03A4               	decf	___lwdiv@dividend+1,f
  4156  1F34  02A4               	subwf	___lwdiv@dividend+1,f
  4157  1F35                     l3609:
  4158  1F35  1427               	bsf	___lwdiv@quotient,0
  4159  1F36                     l3611:
  4160  1F36  3001               	movlw	1
  4161  1F37                     u5625:
  4162  1F37  1003               	clrc
  4163  1F38  0CA2               	rrf	___lwdiv@divisor+1,f
  4164  1F39  0CA1               	rrf	___lwdiv@divisor,f
  4165  1F3A  3EFF               	addlw	-1
  4166  1F3B  1D03               	skipz
  4167  1F3C  2F37               	goto	u5625
  4168  1F3D                     l3613:
  4169  1F3D  3001               	movlw	1
  4170  1F3E  02A6               	subwf	___lwdiv@counter,f
  4171  1F3F  1D03               	btfss	3,2
  4172  1F40  2F42               	goto	u5631
  4173  1F41  2F43               	goto	u5630
  4174  1F42                     u5631:
  4175  1F42  2F1E               	goto	l3605
  4176  1F43                     u5630:
  4177  1F43                     l3615:
  4178  1F43  0828               	movf	___lwdiv@quotient+1,w
  4179  1F44  00A2               	movwf	?___lwdiv+1
  4180  1F45  0827               	movf	___lwdiv@quotient,w
  4181  1F46  00A1               	movwf	?___lwdiv
  4182  1F47                     l867:
  4183  1F47  0008               	return
  4184  1F48                     __end_of___lwdiv:
  4185                           
  4186                           	psect	text9
  4187  1D66                     __ptext9:	
  4188 ;; *************** function ___bmul *****************
  4189 ;; Defined at:
  4190 ;;		line 4 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\Umul8.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  multiplier      1    wreg     unsigned char 
  4193 ;;  multiplicand    1   11[BANK0 ] unsigned char 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  multiplier      1   14[BANK0 ] unsigned char 
  4196 ;;  product         1   13[BANK0 ] unsigned char 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  1    wreg      unsigned char 
  4199 ;; Registers used:
  4200 ;;		wreg, status,2, status,0
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4206 ;;      Params:         0       1       0       0       0
  4207 ;;      Locals:         0       2       0       0       0
  4208 ;;      Temps:          0       1       0       0       0
  4209 ;;      Totals:         0       4       0       0       0
  4210 ;;Total ram usage:        4 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; Hardware stack levels required when called:    2
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_fround
  4217 ;;		_scale
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           
  4222                           ;psect for function ___bmul
  4223  1D66                     ___bmul:
  4224                           
  4225                           ;incstack = 0
  4226                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4227                           ;___bmul@multiplier stored from wreg
  4228  1D66  1283               	bcf	3,5	;RP0=0, select bank0
  4229  1D67  1303               	bcf	3,6	;RP1=0, select bank0
  4230  1D68  00AE               	movwf	___bmul@multiplier
  4231  1D69                     l2203:
  4232  1D69  01AD               	clrf	___bmul@product
  4233  1D6A                     l2205:
  4234  1D6A  1C2E               	btfss	___bmul@multiplier,0
  4235  1D6B  2D6D               	goto	u2591
  4236  1D6C  2D6E               	goto	u2590
  4237  1D6D                     u2591:
  4238  1D6D  2D72               	goto	l2209
  4239  1D6E                     u2590:
  4240  1D6E                     l2207:
  4241  1D6E  082B               	movf	___bmul@multiplicand,w
  4242  1D6F  00AC               	movwf	??___bmul
  4243  1D70  082C               	movf	??___bmul,w
  4244  1D71  07AD               	addwf	___bmul@product,f
  4245  1D72                     l2209:
  4246  1D72  1003               	clrc
  4247  1D73  0DAB               	rlf	___bmul@multiplicand,f
  4248  1D74                     l2211:
  4249  1D74  1003               	clrc
  4250  1D75  0CAE               	rrf	___bmul@multiplier,f
  4251  1D76  082E               	movf	___bmul@multiplier,w
  4252  1D77  1D03               	btfss	3,2
  4253  1D78  2D7A               	goto	u2601
  4254  1D79  2D7B               	goto	u2600
  4255  1D7A                     u2601:
  4256  1D7A  2D6A               	goto	l2205
  4257  1D7B                     u2600:
  4258  1D7B                     l2213:
  4259  1D7B  082D               	movf	___bmul@product,w
  4260  1D7C                     l451:
  4261  1D7C  0008               	return
  4262  1D7D                     __end_of___bmul:
  4263                           
  4264                           	psect	text10
  4265  147B                     __ptext10:	
  4266 ;; *************** function __tdiv_to_l_ *****************
  4267 ;; Defined at:
  4268 ;;		line 60 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftdivl.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  f1              3    0[BANK0 ] float 
  4271 ;;  f2              3    3[BANK0 ] float 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  quot            4    6[BANK0 ] unsigned long 
  4274 ;;  exp1            1   11[BANK0 ] unsigned char 
  4275 ;;  cntr            1   10[BANK0 ] unsigned char 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  4    0[BANK0 ] unsigned long 
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4285 ;;      Params:         0       6       0       0       0
  4286 ;;      Locals:         0       6       0       0       0
  4287 ;;      Temps:          4       0       0       0       0
  4288 ;;      Totals:         4      12       0       0       0
  4289 ;;Total ram usage:       16 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    2
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_sprintf
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           
  4300                           ;psect for function __tdiv_to_l_
  4301  147B                     __tdiv_to_l_:
  4302  147B                     l3727:	
  4303                           ;incstack = 0
  4304                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4305                           
  4306  147B  1283               	bcf	3,5	;RP0=0, select bank0
  4307  147C  1303               	bcf	3,6	;RP1=0, select bank0
  4308  147D  0820               	movf	__tdiv_to_l_@f1,w
  4309  147E  00F3               	movwf	??__tdiv_to_l_
  4310  147F  0821               	movf	__tdiv_to_l_@f1+1,w
  4311  1480  00F4               	movwf	??__tdiv_to_l_+1
  4312  1481  0822               	movf	__tdiv_to_l_@f1+2,w
  4313  1482  00F5               	movwf	??__tdiv_to_l_+2
  4314  1483  1003               	clrc
  4315  1484  0D74               	rlf	??__tdiv_to_l_+1,w
  4316  1485  0D75               	rlf	??__tdiv_to_l_+2,w
  4317  1486  00F6               	movwf	??__tdiv_to_l_+3
  4318  1487  0876               	movf	??__tdiv_to_l_+3,w
  4319  1488  00AB               	movwf	__tdiv_to_l_@exp1
  4320  1489  082B               	movf	__tdiv_to_l_@exp1,w
  4321  148A  1D03               	btfss	3,2
  4322  148B  2C8D               	goto	u5851
  4323  148C  2C8E               	goto	u5850
  4324  148D                     u5851:
  4325  148D  2C97               	goto	l3733
  4326  148E                     u5850:
  4327  148E                     l3729:
  4328  148E  3000               	movlw	0
  4329  148F  00A3               	movwf	?__tdiv_to_l_+3
  4330  1490  3000               	movlw	0
  4331  1491  00A2               	movwf	?__tdiv_to_l_+2
  4332  1492  3000               	movlw	0
  4333  1493  00A1               	movwf	?__tdiv_to_l_+1
  4334  1494  3000               	movlw	0
  4335  1495  00A0               	movwf	?__tdiv_to_l_
  4336  1496  2D37               	goto	l710
  4337  1497                     l3733:
  4338  1497  0823               	movf	__tdiv_to_l_@f2,w
  4339  1498  00F3               	movwf	??__tdiv_to_l_
  4340  1499  0824               	movf	__tdiv_to_l_@f2+1,w
  4341  149A  00F4               	movwf	??__tdiv_to_l_+1
  4342  149B  0825               	movf	__tdiv_to_l_@f2+2,w
  4343  149C  00F5               	movwf	??__tdiv_to_l_+2
  4344  149D  1003               	clrc
  4345  149E  0D74               	rlf	??__tdiv_to_l_+1,w
  4346  149F  0D75               	rlf	??__tdiv_to_l_+2,w
  4347  14A0  00F6               	movwf	??__tdiv_to_l_+3
  4348  14A1  0876               	movf	??__tdiv_to_l_+3,w
  4349  14A2  00AA               	movwf	__tdiv_to_l_@cntr
  4350  14A3  082A               	movf	__tdiv_to_l_@cntr,w
  4351  14A4  1D03               	btfss	3,2
  4352  14A5  2CA7               	goto	u5861
  4353  14A6  2CA8               	goto	u5860
  4354  14A7                     u5861:
  4355  14A7  2CA9               	goto	l711
  4356  14A8                     u5860:
  4357  14A8  2C8E               	goto	l3729
  4358  14A9                     l711:
  4359  14A9  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4360  14AA                     l3739:
  4361  14AA  30FF               	movlw	255
  4362  14AB  05A0               	andwf	__tdiv_to_l_@f1,f
  4363  14AC  30FF               	movlw	255
  4364  14AD  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4365  14AE  3000               	movlw	0
  4366  14AF  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4367  14B0                     l3741:
  4368  14B0  17A4               	bsf	__tdiv_to_l_@f2+1,7
  4369  14B1  30FF               	movlw	255
  4370  14B2  05A3               	andwf	__tdiv_to_l_@f2,f
  4371  14B3  30FF               	movlw	255
  4372  14B4  05A4               	andwf	__tdiv_to_l_@f2+1,f
  4373  14B5  3000               	movlw	0
  4374  14B6  05A5               	andwf	__tdiv_to_l_@f2+2,f
  4375  14B7  3000               	movlw	0
  4376  14B8  00A9               	movwf	__tdiv_to_l_@quot+3
  4377  14B9  3000               	movlw	0
  4378  14BA  00A8               	movwf	__tdiv_to_l_@quot+2
  4379  14BB  3000               	movlw	0
  4380  14BC  00A7               	movwf	__tdiv_to_l_@quot+1
  4381  14BD  3000               	movlw	0
  4382  14BE  00A6               	movwf	__tdiv_to_l_@quot
  4383  14BF                     l3743:
  4384  14BF  307F               	movlw	127
  4385  14C0  02AB               	subwf	__tdiv_to_l_@exp1,f
  4386  14C1                     l3745:
  4387  14C1  3098               	movlw	152
  4388  14C2  072A               	addwf	__tdiv_to_l_@cntr,w
  4389  14C3  00F3               	movwf	??__tdiv_to_l_
  4390  14C4  0873               	movf	??__tdiv_to_l_,w
  4391  14C5  02AB               	subwf	__tdiv_to_l_@exp1,f
  4392  14C6  3018               	movlw	24
  4393  14C7  00F3               	movwf	??__tdiv_to_l_
  4394  14C8  0873               	movf	??__tdiv_to_l_,w
  4395  14C9  00AA               	movwf	__tdiv_to_l_@cntr
  4396  14CA                     l3747:
  4397  14CA  3001               	movlw	1
  4398  14CB  00F3               	movwf	??__tdiv_to_l_
  4399  14CC                     u5875:
  4400  14CC  1003               	clrc
  4401  14CD  0DA6               	rlf	__tdiv_to_l_@quot,f
  4402  14CE  0DA7               	rlf	__tdiv_to_l_@quot+1,f
  4403  14CF  0DA8               	rlf	__tdiv_to_l_@quot+2,f
  4404  14D0  0DA9               	rlf	__tdiv_to_l_@quot+3,f
  4405  14D1  0BF3               	decfsz	??__tdiv_to_l_,f
  4406  14D2  2CCC               	goto	u5875
  4407  14D3                     l3749:
  4408  14D3  0825               	movf	__tdiv_to_l_@f2+2,w
  4409  14D4  0222               	subwf	__tdiv_to_l_@f1+2,w
  4410  14D5  1D03               	skipz
  4411  14D6  2CDD               	goto	u5885
  4412  14D7  0824               	movf	__tdiv_to_l_@f2+1,w
  4413  14D8  0221               	subwf	__tdiv_to_l_@f1+1,w
  4414  14D9  1D03               	skipz
  4415  14DA  2CDD               	goto	u5885
  4416  14DB  0823               	movf	__tdiv_to_l_@f2,w
  4417  14DC  0220               	subwf	__tdiv_to_l_@f1,w
  4418  14DD                     u5885:
  4419  14DD  1C03               	skipc
  4420  14DE  2CE0               	goto	u5881
  4421  14DF  2CE1               	goto	u5880
  4422  14E0                     u5881:
  4423  14E0  2CEC               	goto	l3755
  4424  14E1                     u5880:
  4425  14E1                     l3751:
  4426  14E1  0823               	movf	__tdiv_to_l_@f2,w
  4427  14E2  02A0               	subwf	__tdiv_to_l_@f1,f
  4428  14E3  0824               	movf	__tdiv_to_l_@f2+1,w
  4429  14E4  1C03               	skipc
  4430  14E5  0F24               	incfsz	__tdiv_to_l_@f2+1,w
  4431  14E6  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4432  14E7  0825               	movf	__tdiv_to_l_@f2+2,w
  4433  14E8  1C03               	skipc
  4434  14E9  0A25               	incf	__tdiv_to_l_@f2+2,w
  4435  14EA  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4436  14EB                     l3753:
  4437  14EB  1426               	bsf	__tdiv_to_l_@quot,0
  4438  14EC                     l3755:
  4439  14EC  3001               	movlw	1
  4440  14ED                     u5895:
  4441  14ED  1003               	clrc
  4442  14EE  0DA0               	rlf	__tdiv_to_l_@f1,f
  4443  14EF  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4444  14F0  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4445  14F1  3EFF               	addlw	-1
  4446  14F2  1D03               	skipz
  4447  14F3  2CED               	goto	u5895
  4448  14F4                     l3757:
  4449  14F4  3001               	movlw	1
  4450  14F5  02AA               	subwf	__tdiv_to_l_@cntr,f
  4451  14F6  1D03               	btfss	3,2
  4452  14F7  2CF9               	goto	u5901
  4453  14F8  2CFA               	goto	u5900
  4454  14F9                     u5901:
  4455  14F9  2CCA               	goto	l3747
  4456  14FA                     u5900:
  4457  14FA                     l714:
  4458  14FA  1FAB               	btfss	__tdiv_to_l_@exp1,7
  4459  14FB  2CFD               	goto	u5911
  4460  14FC  2CFE               	goto	u5910
  4461  14FD                     u5911:
  4462  14FD  2D18               	goto	l3767
  4463  14FE                     u5910:
  4464  14FE                     l3759:
  4465  14FE  082B               	movf	__tdiv_to_l_@exp1,w
  4466  14FF  3A80               	xorlw	128
  4467  1500  3E97               	addlw	151
  4468  1501  1803               	skipnc
  4469  1502  2D04               	goto	u5921
  4470  1503  2D05               	goto	u5920
  4471  1504                     u5921:
  4472  1504  2D06               	goto	l3765
  4473  1505                     u5920:
  4474  1505  2C8E               	goto	l3729
  4475  1506                     l3765:
  4476  1506  3001               	movlw	1
  4477  1507                     u5935:
  4478  1507  1003               	clrc
  4479  1508  0CA9               	rrf	__tdiv_to_l_@quot+3,f
  4480  1509  0CA8               	rrf	__tdiv_to_l_@quot+2,f
  4481  150A  0CA7               	rrf	__tdiv_to_l_@quot+1,f
  4482  150B  0CA6               	rrf	__tdiv_to_l_@quot,f
  4483  150C  3EFF               	addlw	-1
  4484  150D  1D03               	skipz
  4485  150E  2D07               	goto	u5935
  4486  150F  3001               	movlw	1
  4487  1510  00F3               	movwf	??__tdiv_to_l_
  4488  1511  0873               	movf	??__tdiv_to_l_,w
  4489  1512  07AB               	addwf	__tdiv_to_l_@exp1,f
  4490  1513  1D03               	btfss	3,2
  4491  1514  2D16               	goto	u5941
  4492  1515  2D17               	goto	u5940
  4493  1516                     u5941:
  4494  1516  2D06               	goto	l3765
  4495  1517                     u5940:
  4496  1517  2D2F               	goto	l3775
  4497  1518                     l3767:
  4498  1518  3018               	movlw	24
  4499  1519  022B               	subwf	__tdiv_to_l_@exp1,w
  4500  151A  1C03               	skipc
  4501  151B  2D1D               	goto	u5951
  4502  151C  2D1E               	goto	u5950
  4503  151D                     u5951:
  4504  151D  2D2A               	goto	l721
  4505  151E                     u5950:
  4506  151E  2C8E               	goto	l3729
  4507  151F                     l3773:
  4508  151F  3001               	movlw	1
  4509  1520  00F3               	movwf	??__tdiv_to_l_
  4510  1521                     u5965:
  4511  1521  1003               	clrc
  4512  1522  0DA6               	rlf	__tdiv_to_l_@quot,f
  4513  1523  0DA7               	rlf	__tdiv_to_l_@quot+1,f
  4514  1524  0DA8               	rlf	__tdiv_to_l_@quot+2,f
  4515  1525  0DA9               	rlf	__tdiv_to_l_@quot+3,f
  4516  1526  0BF3               	decfsz	??__tdiv_to_l_,f
  4517  1527  2D21               	goto	u5965
  4518  1528  3001               	movlw	1
  4519  1529  02AB               	subwf	__tdiv_to_l_@exp1,f
  4520  152A                     l721:
  4521  152A  082B               	movf	__tdiv_to_l_@exp1,w
  4522  152B  1D03               	btfss	3,2
  4523  152C  2D2E               	goto	u5971
  4524  152D  2D2F               	goto	u5970
  4525  152E                     u5971:
  4526  152E  2D1F               	goto	l3773
  4527  152F                     u5970:
  4528  152F                     l3775:
  4529  152F  0829               	movf	__tdiv_to_l_@quot+3,w
  4530  1530  00A3               	movwf	?__tdiv_to_l_+3
  4531  1531  0828               	movf	__tdiv_to_l_@quot+2,w
  4532  1532  00A2               	movwf	?__tdiv_to_l_+2
  4533  1533  0827               	movf	__tdiv_to_l_@quot+1,w
  4534  1534  00A1               	movwf	?__tdiv_to_l_+1
  4535  1535  0826               	movf	__tdiv_to_l_@quot,w
  4536  1536  00A0               	movwf	?__tdiv_to_l_
  4537  1537                     l710:
  4538  1537  0008               	return
  4539  1538                     __end_of__tdiv_to_l_:
  4540                           
  4541                           	psect	text11
  4542  0810                     __ptext11:	
  4543 ;; *************** function __div_to_l_ *****************
  4544 ;; Defined at:
  4545 ;;		line 60 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\fldivl.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  f1              3    0[BANK0 ] unsigned long 
  4548 ;;  f2              3    3[BANK0 ] unsigned long 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  quot            4   14[BANK0 ] unsigned long 
  4551 ;;  exp1            1   19[BANK0 ] unsigned char 
  4552 ;;  cntr            1   18[BANK0 ] unsigned char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  4    0[BANK0 ] unsigned long 
  4555 ;; Registers used:
  4556 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4562 ;;      Params:         0       6       0       0       0
  4563 ;;      Locals:         0       6       0       0       0
  4564 ;;      Temps:          0       8       0       0       0
  4565 ;;      Totals:         0      20       0       0       0
  4566 ;;Total ram usage:       20 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    2
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_sprintf
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           
  4577                           ;psect for function __div_to_l_
  4578  0810                     __div_to_l_:
  4579  0810                     l3779:	
  4580                           ;incstack = 0
  4581                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  4582                           
  4583  0810  3020               	movlw	low (__div_to_l_@f1| 0)
  4584  0811  0084               	movwf	4
  4585  0812  1383               	bcf	3,7	;select IRP bank0
  4586  0813  0800               	movf	0,w
  4587  0814  1283               	bcf	3,5	;RP0=0, select bank0
  4588  0815  1303               	bcf	3,6	;RP1=0, select bank0
  4589  0816  00A6               	movwf	??__div_to_l_
  4590  0817  0A84               	incf	4,f
  4591  0818  0800               	movf	0,w
  4592  0819  00A7               	movwf	??__div_to_l_+1
  4593  081A  0A84               	incf	4,f
  4594  081B  0800               	movf	0,w
  4595  081C  00A8               	movwf	??__div_to_l_+2
  4596  081D  0A84               	incf	4,f
  4597  081E  0800               	movf	0,w
  4598  081F  00A9               	movwf	??__div_to_l_+3
  4599  0820  1003               	clrc
  4600  0821  0D28               	rlf	??__div_to_l_+2,w
  4601  0822  0D29               	rlf	??__div_to_l_+3,w
  4602  0823  00AA               	movwf	??__div_to_l_+4
  4603  0824  082A               	movf	??__div_to_l_+4,w
  4604  0825  00B3               	movwf	__div_to_l_@exp1
  4605  0826  0833               	movf	__div_to_l_@exp1,w
  4606  0827  1D03               	btfss	3,2
  4607  0828  282A               	goto	u5981
  4608  0829  282B               	goto	u5980
  4609  082A                     u5981:
  4610  082A  2834               	goto	l3785
  4611  082B                     u5980:
  4612  082B                     l3781:
  4613  082B  3000               	movlw	0
  4614  082C  00A3               	movwf	?__div_to_l_+3
  4615  082D  3000               	movlw	0
  4616  082E  00A2               	movwf	?__div_to_l_+2
  4617  082F  3000               	movlw	0
  4618  0830  00A1               	movwf	?__div_to_l_+1
  4619  0831  3000               	movlw	0
  4620  0832  00A0               	movwf	?__div_to_l_
  4621  0833  293C               	goto	l631
  4622  0834                     l3785:
  4623  0834  3023               	movlw	low (__div_to_l_@f2| 0)
  4624  0835  0084               	movwf	4
  4625  0836  0800               	movf	0,w
  4626  0837  00A6               	movwf	??__div_to_l_
  4627  0838  0A84               	incf	4,f
  4628  0839  0800               	movf	0,w
  4629  083A  00A7               	movwf	??__div_to_l_+1
  4630  083B  0A84               	incf	4,f
  4631  083C  0800               	movf	0,w
  4632  083D  00A8               	movwf	??__div_to_l_+2
  4633  083E  0A84               	incf	4,f
  4634  083F  0800               	movf	0,w
  4635  0840  00A9               	movwf	??__div_to_l_+3
  4636  0841  1003               	clrc
  4637  0842  0D28               	rlf	??__div_to_l_+2,w
  4638  0843  0D29               	rlf	??__div_to_l_+3,w
  4639  0844  00AA               	movwf	??__div_to_l_+4
  4640  0845  082A               	movf	??__div_to_l_+4,w
  4641  0846  00B2               	movwf	__div_to_l_@cntr
  4642  0847  0832               	movf	__div_to_l_@cntr,w
  4643  0848  1D03               	btfss	3,2
  4644  0849  284B               	goto	u5991
  4645  084A  284C               	goto	u5990
  4646  084B                     u5991:
  4647  084B  284D               	goto	l3791
  4648  084C                     u5990:
  4649  084C  282B               	goto	l3781
  4650  084D                     l3791:
  4651  084D  3020               	movlw	low (__div_to_l_@f1| 0)
  4652  084E  0084               	movwf	4
  4653  084F  3000               	movlw	0
  4654  0850  0480               	iorwf	0,f
  4655  0851  0A84               	incf	4,f
  4656  0852  3000               	movlw	0
  4657  0853  0480               	iorwf	0,f
  4658  0854  0A84               	incf	4,f
  4659  0855  3080               	movlw	128
  4660  0856  0480               	iorwf	0,f
  4661  0857  0A84               	incf	4,f
  4662  0858  3000               	movlw	0
  4663  0859  0480               	iorwf	0,f
  4664  085A  3020               	movlw	low (__div_to_l_@f1| 0)
  4665  085B  0084               	movwf	4
  4666  085C  30FF               	movlw	255
  4667  085D  0580               	andwf	0,f
  4668  085E  0A84               	incf	4,f
  4669  085F  30FF               	movlw	255
  4670  0860  0580               	andwf	0,f
  4671  0861  0A84               	incf	4,f
  4672  0862  30FF               	movlw	255
  4673  0863  0580               	andwf	0,f
  4674  0864  0A84               	incf	4,f
  4675  0865  3000               	movlw	0
  4676  0866  0580               	andwf	0,f
  4677  0867  3023               	movlw	low (__div_to_l_@f2| 0)
  4678  0868  0084               	movwf	4
  4679  0869  3000               	movlw	0
  4680  086A  0480               	iorwf	0,f
  4681  086B  0A84               	incf	4,f
  4682  086C  3000               	movlw	0
  4683  086D  0480               	iorwf	0,f
  4684  086E  0A84               	incf	4,f
  4685  086F  3080               	movlw	128
  4686  0870  0480               	iorwf	0,f
  4687  0871  0A84               	incf	4,f
  4688  0872  3000               	movlw	0
  4689  0873  0480               	iorwf	0,f
  4690  0874  3023               	movlw	low (__div_to_l_@f2| 0)
  4691  0875  0084               	movwf	4
  4692  0876  30FF               	movlw	255
  4693  0877  0580               	andwf	0,f
  4694  0878  0A84               	incf	4,f
  4695  0879  30FF               	movlw	255
  4696  087A  0580               	andwf	0,f
  4697  087B  0A84               	incf	4,f
  4698  087C  30FF               	movlw	255
  4699  087D  0580               	andwf	0,f
  4700  087E  0A84               	incf	4,f
  4701  087F  3000               	movlw	0
  4702  0880  0580               	andwf	0,f
  4703  0881                     l3793:
  4704  0881  3000               	movlw	0
  4705  0882  00B1               	movwf	__div_to_l_@quot+3
  4706  0883  3000               	movlw	0
  4707  0884  00B0               	movwf	__div_to_l_@quot+2
  4708  0885  3000               	movlw	0
  4709  0886  00AF               	movwf	__div_to_l_@quot+1
  4710  0887  3000               	movlw	0
  4711  0888  00AE               	movwf	__div_to_l_@quot
  4712  0889                     l3795:
  4713  0889  307F               	movlw	127
  4714  088A  02B3               	subwf	__div_to_l_@exp1,f
  4715  088B                     l3797:
  4716  088B  30A0               	movlw	160
  4717  088C  0732               	addwf	__div_to_l_@cntr,w
  4718  088D  00A6               	movwf	??__div_to_l_
  4719  088E  0826               	movf	??__div_to_l_,w
  4720  088F  02B3               	subwf	__div_to_l_@exp1,f
  4721  0890                     l3799:
  4722  0890  3020               	movlw	32
  4723  0891  00A6               	movwf	??__div_to_l_
  4724  0892  0826               	movf	??__div_to_l_,w
  4725  0893  00B2               	movwf	__div_to_l_@cntr
  4726  0894                     l3801:
  4727  0894  3001               	movlw	1
  4728  0895  00A6               	movwf	??__div_to_l_
  4729  0896                     u6005:
  4730  0896  1003               	clrc
  4731  0897  0DAE               	rlf	__div_to_l_@quot,f
  4732  0898  0DAF               	rlf	__div_to_l_@quot+1,f
  4733  0899  0DB0               	rlf	__div_to_l_@quot+2,f
  4734  089A  0DB1               	rlf	__div_to_l_@quot+3,f
  4735  089B  0BA6               	decfsz	??__div_to_l_,f
  4736  089C  2896               	goto	u6005
  4737  089D                     l3803:
  4738  089D  3023               	movlw	low (__div_to_l_@f2| 0)
  4739  089E  0084               	movwf	4
  4740  089F  0800               	movf	0,w
  4741  08A0  00A6               	movwf	??__div_to_l_
  4742  08A1  0A84               	incf	4,f
  4743  08A2  0800               	movf	0,w
  4744  08A3  00A7               	movwf	??__div_to_l_+1
  4745  08A4  0A84               	incf	4,f
  4746  08A5  0800               	movf	0,w
  4747  08A6  00A8               	movwf	??__div_to_l_+2
  4748  08A7  0A84               	incf	4,f
  4749  08A8  0800               	movf	0,w
  4750  08A9  00A9               	movwf	??__div_to_l_+3
  4751  08AA  3020               	movlw	low (__div_to_l_@f1| 0)
  4752  08AB  0084               	movwf	4
  4753  08AC  0800               	movf	0,w
  4754  08AD  00AA               	movwf	??__div_to_l_+4
  4755  08AE  0A84               	incf	4,f
  4756  08AF  0800               	movf	0,w
  4757  08B0  00AB               	movwf	??__div_to_l_+5
  4758  08B1  0A84               	incf	4,f
  4759  08B2  0800               	movf	0,w
  4760  08B3  00AC               	movwf	??__div_to_l_+6
  4761  08B4  0A84               	incf	4,f
  4762  08B5  0800               	movf	0,w
  4763  08B6  00AD               	movwf	??__div_to_l_+7
  4764  08B7  0829               	movf	??__div_to_l_+3,w
  4765  08B8  022D               	subwf	??__div_to_l_+7,w
  4766  08B9  1D03               	skipz
  4767  08BA  28C5               	goto	u6015
  4768  08BB  0828               	movf	??__div_to_l_+2,w
  4769  08BC  022C               	subwf	??__div_to_l_+6,w
  4770  08BD  1D03               	skipz
  4771  08BE  28C5               	goto	u6015
  4772  08BF  0827               	movf	??__div_to_l_+1,w
  4773  08C0  022B               	subwf	??__div_to_l_+5,w
  4774  08C1  1D03               	skipz
  4775  08C2  28C5               	goto	u6015
  4776  08C3  0826               	movf	??__div_to_l_,w
  4777  08C4  022A               	subwf	??__div_to_l_+4,w
  4778  08C5                     u6015:
  4779  08C5  1C03               	skipc
  4780  08C6  28C8               	goto	u6011
  4781  08C7  28C9               	goto	u6010
  4782  08C8                     u6011:
  4783  08C8  28EC               	goto	l634
  4784  08C9                     u6010:
  4785  08C9                     l3805:
  4786  08C9  3023               	movlw	low (__div_to_l_@f2| 0)
  4787  08CA  0084               	movwf	4
  4788  08CB  0800               	movf	0,w
  4789  08CC  00A6               	movwf	??__div_to_l_
  4790  08CD  0A84               	incf	4,f
  4791  08CE  0800               	movf	0,w
  4792  08CF  00A7               	movwf	??__div_to_l_+1
  4793  08D0  0A84               	incf	4,f
  4794  08D1  0800               	movf	0,w
  4795  08D2  00A8               	movwf	??__div_to_l_+2
  4796  08D3  0A84               	incf	4,f
  4797  08D4  0800               	movf	0,w
  4798  08D5  00A9               	movwf	??__div_to_l_+3
  4799  08D6  3020               	movlw	low (__div_to_l_@f1| 0)
  4800  08D7  0084               	movwf	4
  4801  08D8  0826               	movf	??__div_to_l_,w
  4802  08D9  0280               	subwf	0,f
  4803  08DA  0A84               	incf	4,f
  4804  08DB  0827               	movf	??__div_to_l_+1,w
  4805  08DC  1C03               	skipc
  4806  08DD  0F27               	incfsz	??__div_to_l_+1,w
  4807  08DE  0280               	subwf	0,f
  4808  08DF  0A84               	incf	4,f
  4809  08E0  0828               	movf	??__div_to_l_+2,w
  4810  08E1  1C03               	skipc
  4811  08E2  0F28               	incfsz	??__div_to_l_+2,w
  4812  08E3  0280               	subwf	0,f
  4813  08E4  0A84               	incf	4,f
  4814  08E5  0829               	movf	??__div_to_l_+3,w
  4815  08E6  1C03               	skipc
  4816  08E7  0A29               	incf	??__div_to_l_+3,w
  4817  08E8  0280               	subwf	0,f
  4818  08E9  3003               	movlw	3
  4819  08EA  0284               	subwf	4,f
  4820  08EB                     l3807:
  4821  08EB  142E               	bsf	__div_to_l_@quot,0
  4822  08EC                     l634:
  4823  08EC  3020               	movlw	low (__div_to_l_@f1| 0)
  4824  08ED  0084               	movwf	4
  4825  08EE  1003               	clrc
  4826  08EF  0D80               	rlf	0,f
  4827  08F0  0A84               	incf	4,f
  4828  08F1  0D80               	rlf	0,f
  4829  08F2  0A84               	incf	4,f
  4830  08F3  0D80               	rlf	0,f
  4831  08F4  0A84               	incf	4,f
  4832  08F5  0D80               	rlf	0,f
  4833  08F6  0384               	decf	4,f
  4834  08F7  0384               	decf	4,f
  4835  08F8  0384               	decf	4,f
  4836  08F9                     l3809:
  4837  08F9  3001               	movlw	1
  4838  08FA  02B2               	subwf	__div_to_l_@cntr,f
  4839  08FB  1D03               	btfss	3,2
  4840  08FC  28FE               	goto	u6021
  4841  08FD  28FF               	goto	u6020
  4842  08FE                     u6021:
  4843  08FE  2894               	goto	l3801
  4844  08FF                     u6020:
  4845  08FF                     l635:
  4846  08FF  1FB3               	btfss	__div_to_l_@exp1,7
  4847  0900  2902               	goto	u6031
  4848  0901  2903               	goto	u6030
  4849  0902                     u6031:
  4850  0902  291D               	goto	l3819
  4851  0903                     u6030:
  4852  0903                     l3811:
  4853  0903  0833               	movf	__div_to_l_@exp1,w
  4854  0904  3A80               	xorlw	128
  4855  0905  3E9F               	addlw	159
  4856  0906  1803               	skipnc
  4857  0907  2909               	goto	u6041
  4858  0908  290A               	goto	u6040
  4859  0909                     u6041:
  4860  0909  290B               	goto	l3817
  4861  090A                     u6040:
  4862  090A  282B               	goto	l3781
  4863  090B                     l3817:
  4864  090B  3001               	movlw	1
  4865  090C                     u6055:
  4866  090C  1003               	clrc
  4867  090D  0CB1               	rrf	__div_to_l_@quot+3,f
  4868  090E  0CB0               	rrf	__div_to_l_@quot+2,f
  4869  090F  0CAF               	rrf	__div_to_l_@quot+1,f
  4870  0910  0CAE               	rrf	__div_to_l_@quot,f
  4871  0911  3EFF               	addlw	-1
  4872  0912  1D03               	skipz
  4873  0913  290C               	goto	u6055
  4874  0914  3001               	movlw	1
  4875  0915  00A6               	movwf	??__div_to_l_
  4876  0916  0826               	movf	??__div_to_l_,w
  4877  0917  07B3               	addwf	__div_to_l_@exp1,f
  4878  0918  1D03               	btfss	3,2
  4879  0919  291B               	goto	u6061
  4880  091A  291C               	goto	u6060
  4881  091B                     u6061:
  4882  091B  290B               	goto	l3817
  4883  091C                     u6060:
  4884  091C  2934               	goto	l3827
  4885  091D                     l3819:
  4886  091D  3020               	movlw	32
  4887  091E  0233               	subwf	__div_to_l_@exp1,w
  4888  091F  1C03               	skipc
  4889  0920  2922               	goto	u6071
  4890  0921  2923               	goto	u6070
  4891  0922                     u6071:
  4892  0922  292F               	goto	l642
  4893  0923                     u6070:
  4894  0923  282B               	goto	l3781
  4895  0924                     l3825:
  4896  0924  3001               	movlw	1
  4897  0925  00A6               	movwf	??__div_to_l_
  4898  0926                     u6085:
  4899  0926  1003               	clrc
  4900  0927  0DAE               	rlf	__div_to_l_@quot,f
  4901  0928  0DAF               	rlf	__div_to_l_@quot+1,f
  4902  0929  0DB0               	rlf	__div_to_l_@quot+2,f
  4903  092A  0DB1               	rlf	__div_to_l_@quot+3,f
  4904  092B  0BA6               	decfsz	??__div_to_l_,f
  4905  092C  2926               	goto	u6085
  4906  092D  3001               	movlw	1
  4907  092E  02B3               	subwf	__div_to_l_@exp1,f
  4908  092F                     l642:
  4909  092F  0833               	movf	__div_to_l_@exp1,w
  4910  0930  1D03               	btfss	3,2
  4911  0931  2933               	goto	u6091
  4912  0932  2934               	goto	u6090
  4913  0933                     u6091:
  4914  0933  2924               	goto	l3825
  4915  0934                     u6090:
  4916  0934                     l3827:
  4917  0934  0831               	movf	__div_to_l_@quot+3,w
  4918  0935  00A3               	movwf	?__div_to_l_+3
  4919  0936  0830               	movf	__div_to_l_@quot+2,w
  4920  0937  00A2               	movwf	?__div_to_l_+2
  4921  0938  082F               	movf	__div_to_l_@quot+1,w
  4922  0939  00A1               	movwf	?__div_to_l_+1
  4923  093A  082E               	movf	__div_to_l_@quot,w
  4924  093B  00A0               	movwf	?__div_to_l_
  4925  093C                     l631:
  4926  093C  0008               	return
  4927  093D                     __end_of__div_to_l_:
  4928                           
  4929                           	psect	text12
  4930  1DC4                     __ptext12:	
  4931 ;; *************** function ___wmul *****************
  4932 ;; Defined at:
  4933 ;;		line 15 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\Umul16.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  multiplier      2    3[COMMON] unsigned int 
  4936 ;;  multiplicand    2    5[COMMON] unsigned int 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  product         2    0[BANK0 ] unsigned int 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  2    3[COMMON] unsigned int 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, status,0
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4948 ;;      Params:         4       0       0       0       0
  4949 ;;      Locals:         0       2       0       0       0
  4950 ;;      Temps:          0       0       0       0       0
  4951 ;;      Totals:         4       2       0       0       0
  4952 ;;Total ram usage:        6 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:    2
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_sprintf
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           
  4963                           ;psect for function ___wmul
  4964  1DC4                     ___wmul:
  4965  1DC4                     l3831:	
  4966                           ;incstack = 0
  4967                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4968                           
  4969  1DC4  1283               	bcf	3,5	;RP0=0, select bank0
  4970  1DC5  1303               	bcf	3,6	;RP1=0, select bank0
  4971  1DC6  01A0               	clrf	___wmul@product
  4972  1DC7  01A1               	clrf	___wmul@product+1
  4973  1DC8                     l3833:
  4974  1DC8  1C73               	btfss	___wmul@multiplier,0
  4975  1DC9  2DCB               	goto	u6101
  4976  1DCA  2DCC               	goto	u6100
  4977  1DCB                     u6101:
  4978  1DCB  2DD4               	goto	l425
  4979  1DCC                     u6100:
  4980  1DCC                     l3835:
  4981  1DCC  0875               	movf	___wmul@multiplicand,w
  4982  1DCD  1283               	bcf	3,5	;RP0=0, select bank0
  4983  1DCE  1303               	bcf	3,6	;RP1=0, select bank0
  4984  1DCF  07A0               	addwf	___wmul@product,f
  4985  1DD0  1803               	skipnc
  4986  1DD1  0AA1               	incf	___wmul@product+1,f
  4987  1DD2  0876               	movf	___wmul@multiplicand+1,w
  4988  1DD3  07A1               	addwf	___wmul@product+1,f
  4989  1DD4                     l425:
  4990  1DD4  3001               	movlw	1
  4991  1DD5                     u6115:
  4992  1DD5  1003               	clrc
  4993  1DD6  0DF5               	rlf	___wmul@multiplicand,f
  4994  1DD7  0DF6               	rlf	___wmul@multiplicand+1,f
  4995  1DD8  3EFF               	addlw	-1
  4996  1DD9  1D03               	skipz
  4997  1DDA  2DD5               	goto	u6115
  4998  1DDB                     l3837:
  4999  1DDB  3001               	movlw	1
  5000  1DDC                     u6125:
  5001  1DDC  1003               	clrc
  5002  1DDD  0CF4               	rrf	___wmul@multiplier+1,f
  5003  1DDE  0CF3               	rrf	___wmul@multiplier,f
  5004  1DDF  3EFF               	addlw	-1
  5005  1DE0  1D03               	skipz
  5006  1DE1  2DDC               	goto	u6125
  5007  1DE2                     l3839:
  5008  1DE2  0873               	movf	___wmul@multiplier,w
  5009  1DE3  0474               	iorwf	___wmul@multiplier+1,w
  5010  1DE4  1D03               	btfss	3,2
  5011  1DE5  2DE7               	goto	u6131
  5012  1DE6  2DE8               	goto	u6130
  5013  1DE7                     u6131:
  5014  1DE7  2DC8               	goto	l3833
  5015  1DE8                     u6130:
  5016  1DE8                     l3841:
  5017  1DE8  1283               	bcf	3,5	;RP0=0, select bank0
  5018  1DE9  1303               	bcf	3,6	;RP1=0, select bank0
  5019  1DEA  0821               	movf	___wmul@product+1,w
  5020  1DEB  00F4               	movwf	?___wmul+1
  5021  1DEC  0820               	movf	___wmul@product,w
  5022  1DED  00F3               	movwf	?___wmul
  5023  1DEE                     l427:
  5024  1DEE  0008               	return
  5025  1DEF                     __end_of___wmul:
  5026                           
  5027                           	psect	text13
  5028  109B                     __ptext13:	
  5029 ;; *************** function ___llmod *****************
  5030 ;; Defined at:
  5031 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\llmod.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;  divisor         4    0[BANK0 ] unsigned long 
  5034 ;;  dividend        4    4[BANK0 ] unsigned long 
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;  counter         1    4[COMMON] unsigned char 
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  4    0[BANK0 ] unsigned long 
  5039 ;; Registers used:
  5040 ;;		wreg, status,2, status,0
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5046 ;;      Params:         0       8       0       0       0
  5047 ;;      Locals:         1       0       0       0       0
  5048 ;;      Temps:          1       0       0       0       0
  5049 ;;      Totals:         2       8       0       0       0
  5050 ;;Total ram usage:       10 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    2
  5053 ;; This function calls:
  5054 ;;		Nothing
  5055 ;; This function is called by:
  5056 ;;		_sprintf
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           
  5061                           ;psect for function ___llmod
  5062  109B                     ___llmod:
  5063  109B                     l3979:	
  5064                           ;incstack = 0
  5065                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5066                           
  5067  109B  1283               	bcf	3,5	;RP0=0, select bank0
  5068  109C  1303               	bcf	3,6	;RP1=0, select bank0
  5069  109D  0823               	movf	___llmod@divisor+3,w
  5070  109E  0422               	iorwf	___llmod@divisor+2,w
  5071  109F  0421               	iorwf	___llmod@divisor+1,w
  5072  10A0  0420               	iorwf	___llmod@divisor,w
  5073  10A1  1903               	skipnz
  5074  10A2  28A4               	goto	u6431
  5075  10A3  28A5               	goto	u6430
  5076  10A4                     u6431:
  5077  10A4  28E8               	goto	l3995
  5078  10A5                     u6430:
  5079  10A5                     l3981:
  5080  10A5  01F4               	clrf	___llmod@counter
  5081  10A6  0AF4               	incf	___llmod@counter,f
  5082  10A7  28B5               	goto	l3985
  5083  10A8                     l3983:
  5084  10A8  3001               	movlw	1
  5085  10A9  00F3               	movwf	??___llmod
  5086  10AA                     u6445:
  5087  10AA  1003               	clrc
  5088  10AB  0DA0               	rlf	___llmod@divisor,f
  5089  10AC  0DA1               	rlf	___llmod@divisor+1,f
  5090  10AD  0DA2               	rlf	___llmod@divisor+2,f
  5091  10AE  0DA3               	rlf	___llmod@divisor+3,f
  5092  10AF  0BF3               	decfsz	??___llmod,f
  5093  10B0  28AA               	goto	u6445
  5094  10B1  3001               	movlw	1
  5095  10B2  00F3               	movwf	??___llmod
  5096  10B3  0873               	movf	??___llmod,w
  5097  10B4  07F4               	addwf	___llmod@counter,f
  5098  10B5                     l3985:
  5099  10B5  1FA3               	btfss	___llmod@divisor+3,7
  5100  10B6  28B8               	goto	u6451
  5101  10B7  28B9               	goto	u6450
  5102  10B8                     u6451:
  5103  10B8  28A8               	goto	l3983
  5104  10B9                     u6450:
  5105  10B9                     l3987:
  5106  10B9  0823               	movf	___llmod@divisor+3,w
  5107  10BA  0227               	subwf	___llmod@dividend+3,w
  5108  10BB  1D03               	skipz
  5109  10BC  28C7               	goto	u6465
  5110  10BD  0822               	movf	___llmod@divisor+2,w
  5111  10BE  0226               	subwf	___llmod@dividend+2,w
  5112  10BF  1D03               	skipz
  5113  10C0  28C7               	goto	u6465
  5114  10C1  0821               	movf	___llmod@divisor+1,w
  5115  10C2  0225               	subwf	___llmod@dividend+1,w
  5116  10C3  1D03               	skipz
  5117  10C4  28C7               	goto	u6465
  5118  10C5  0820               	movf	___llmod@divisor,w
  5119  10C6  0224               	subwf	___llmod@dividend,w
  5120  10C7                     u6465:
  5121  10C7  1C03               	skipc
  5122  10C8  28CA               	goto	u6461
  5123  10C9  28CB               	goto	u6460
  5124  10CA                     u6461:
  5125  10CA  28D9               	goto	l3991
  5126  10CB                     u6460:
  5127  10CB                     l3989:
  5128  10CB  0820               	movf	___llmod@divisor,w
  5129  10CC  02A4               	subwf	___llmod@dividend,f
  5130  10CD  0821               	movf	___llmod@divisor+1,w
  5131  10CE  1C03               	skipc
  5132  10CF  0F21               	incfsz	___llmod@divisor+1,w
  5133  10D0  02A5               	subwf	___llmod@dividend+1,f
  5134  10D1  0822               	movf	___llmod@divisor+2,w
  5135  10D2  1C03               	skipc
  5136  10D3  0F22               	incfsz	___llmod@divisor+2,w
  5137  10D4  02A6               	subwf	___llmod@dividend+2,f
  5138  10D5  0823               	movf	___llmod@divisor+3,w
  5139  10D6  1C03               	skipc
  5140  10D7  0F23               	incfsz	___llmod@divisor+3,w
  5141  10D8  02A7               	subwf	___llmod@dividend+3,f
  5142  10D9                     l3991:
  5143  10D9  3001               	movlw	1
  5144  10DA                     u6475:
  5145  10DA  1003               	clrc
  5146  10DB  0CA3               	rrf	___llmod@divisor+3,f
  5147  10DC  0CA2               	rrf	___llmod@divisor+2,f
  5148  10DD  0CA1               	rrf	___llmod@divisor+1,f
  5149  10DE  0CA0               	rrf	___llmod@divisor,f
  5150  10DF  3EFF               	addlw	-1
  5151  10E0  1D03               	skipz
  5152  10E1  28DA               	goto	u6475
  5153  10E2                     l3993:
  5154  10E2  3001               	movlw	1
  5155  10E3  02F4               	subwf	___llmod@counter,f
  5156  10E4  1D03               	btfss	3,2
  5157  10E5  28E7               	goto	u6481
  5158  10E6  28E8               	goto	u6480
  5159  10E7                     u6481:
  5160  10E7  28B9               	goto	l3987
  5161  10E8                     u6480:
  5162  10E8                     l3995:
  5163  10E8  0827               	movf	___llmod@dividend+3,w
  5164  10E9  00A3               	movwf	?___llmod+3
  5165  10EA  0826               	movf	___llmod@dividend+2,w
  5166  10EB  00A2               	movwf	?___llmod+2
  5167  10EC  0825               	movf	___llmod@dividend+1,w
  5168  10ED  00A1               	movwf	?___llmod+1
  5169  10EE  0824               	movf	___llmod@dividend,w
  5170  10EF  00A0               	movwf	?___llmod
  5171  10F0                     l796:
  5172  10F0  0008               	return
  5173  10F1                     __end_of___llmod:
  5174                           
  5175                           	psect	text14
  5176  12A5                     __ptext14:	
  5177 ;; *************** function ___fttol *****************
  5178 ;; Defined at:
  5179 ;;		line 44 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\fttol.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  f1              3   40[BANK0 ] float 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;  lval            4   49[BANK0 ] unsigned long 
  5184 ;;  exp1            1   53[BANK0 ] unsigned char 
  5185 ;;  sign1           1   48[BANK0 ] unsigned char 
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  4   40[BANK0 ] long 
  5188 ;; Registers used:
  5189 ;;		wreg, status,2, status,0
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5195 ;;      Params:         0       4       0       0       0
  5196 ;;      Locals:         0       6       0       0       0
  5197 ;;      Temps:          0       4       0       0       0
  5198 ;;      Totals:         0      14       0       0       0
  5199 ;;Total ram usage:       14 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    2
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_sprintf
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           
  5210                           ;psect for function ___fttol
  5211  12A5                     ___fttol:
  5212  12A5                     l2829:	
  5213                           ;incstack = 0
  5214                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5215                           
  5216  12A5  1283               	bcf	3,5	;RP0=0, select bank0
  5217  12A6  1303               	bcf	3,6	;RP1=0, select bank0
  5218  12A7  0848               	movf	___fttol@f1,w
  5219  12A8  00CC               	movwf	??___fttol
  5220  12A9  0849               	movf	___fttol@f1+1,w
  5221  12AA  00CD               	movwf	??___fttol+1
  5222  12AB  084A               	movf	___fttol@f1+2,w
  5223  12AC  00CE               	movwf	??___fttol+2
  5224  12AD  1003               	clrc
  5225  12AE  0D4D               	rlf	??___fttol+1,w
  5226  12AF  0D4E               	rlf	??___fttol+2,w
  5227  12B0  00CF               	movwf	??___fttol+3
  5228  12B1  084F               	movf	??___fttol+3,w
  5229  12B2  00D5               	movwf	___fttol@exp1
  5230  12B3  0855               	movf	___fttol@exp1,w
  5231  12B4  1D03               	btfss	3,2
  5232  12B5  2AB7               	goto	u4081
  5233  12B6  2AB8               	goto	u4080
  5234  12B7                     u4081:
  5235  12B7  2AC1               	goto	l2835
  5236  12B8                     u4080:
  5237  12B8                     l2831:
  5238  12B8  3000               	movlw	0
  5239  12B9  00CB               	movwf	?___fttol+3
  5240  12BA  3000               	movlw	0
  5241  12BB  00CA               	movwf	?___fttol+2
  5242  12BC  3000               	movlw	0
  5243  12BD  00C9               	movwf	?___fttol+1
  5244  12BE  3000               	movlw	0
  5245  12BF  00C8               	movwf	?___fttol
  5246  12C0  2B30               	goto	l755
  5247  12C1                     l2835:
  5248  12C1  0848               	movf	___fttol@f1,w
  5249  12C2  00CC               	movwf	??___fttol
  5250  12C3  0849               	movf	___fttol@f1+1,w
  5251  12C4  00CD               	movwf	??___fttol+1
  5252  12C5  084A               	movf	___fttol@f1+2,w
  5253  12C6  00CE               	movwf	??___fttol+2
  5254  12C7  3017               	movlw	23
  5255  12C8                     u4095:
  5256  12C8  1003               	clrc
  5257  12C9  0CCE               	rrf	??___fttol+2,f
  5258  12CA  0CCD               	rrf	??___fttol+1,f
  5259  12CB  0CCC               	rrf	??___fttol,f
  5260  12CC                     u4090:
  5261  12CC  3EFF               	addlw	-1
  5262  12CD  1D03               	skipz
  5263  12CE  2AC8               	goto	u4095
  5264  12CF  084C               	movf	??___fttol,w
  5265  12D0  00CF               	movwf	??___fttol+3
  5266  12D1  084F               	movf	??___fttol+3,w
  5267  12D2  00D0               	movwf	___fttol@sign1
  5268  12D3                     l2837:
  5269  12D3  17C9               	bsf	___fttol@f1+1,7
  5270  12D4                     l2839:
  5271  12D4  30FF               	movlw	255
  5272  12D5  05C8               	andwf	___fttol@f1,f
  5273  12D6  30FF               	movlw	255
  5274  12D7  05C9               	andwf	___fttol@f1+1,f
  5275  12D8  3000               	movlw	0
  5276  12D9  05CA               	andwf	___fttol@f1+2,f
  5277  12DA                     l2841:
  5278  12DA  0848               	movf	___fttol@f1,w
  5279  12DB  00D1               	movwf	___fttol@lval
  5280  12DC  0849               	movf	___fttol@f1+1,w
  5281  12DD  00D2               	movwf	___fttol@lval+1
  5282  12DE  084A               	movf	___fttol@f1+2,w
  5283  12DF  00D3               	movwf	___fttol@lval+2
  5284  12E0  01D4               	clrf	___fttol@lval+3
  5285  12E1                     l2843:
  5286  12E1  308E               	movlw	142
  5287  12E2  02D5               	subwf	___fttol@exp1,f
  5288  12E3                     l2845:
  5289  12E3  1FD5               	btfss	___fttol@exp1,7
  5290  12E4  2AE6               	goto	u4101
  5291  12E5  2AE7               	goto	u4100
  5292  12E6                     u4101:
  5293  12E6  2B01               	goto	l2855
  5294  12E7                     u4100:
  5295  12E7                     l2847:
  5296  12E7  0855               	movf	___fttol@exp1,w
  5297  12E8  3A80               	xorlw	128
  5298  12E9  3E8F               	addlw	143
  5299  12EA  1803               	skipnc
  5300  12EB  2AED               	goto	u4111
  5301  12EC  2AEE               	goto	u4110
  5302  12ED                     u4111:
  5303  12ED  2AEF               	goto	l2853
  5304  12EE                     u4110:
  5305  12EE  2AB8               	goto	l2831
  5306  12EF                     l2853:
  5307  12EF  3001               	movlw	1
  5308  12F0                     u4125:
  5309  12F0  1003               	clrc
  5310  12F1  0CD4               	rrf	___fttol@lval+3,f
  5311  12F2  0CD3               	rrf	___fttol@lval+2,f
  5312  12F3  0CD2               	rrf	___fttol@lval+1,f
  5313  12F4  0CD1               	rrf	___fttol@lval,f
  5314  12F5  3EFF               	addlw	-1
  5315  12F6  1D03               	skipz
  5316  12F7  2AF0               	goto	u4125
  5317  12F8  3001               	movlw	1
  5318  12F9  00CC               	movwf	??___fttol
  5319  12FA  084C               	movf	??___fttol,w
  5320  12FB  07D5               	addwf	___fttol@exp1,f
  5321  12FC  1D03               	btfss	3,2
  5322  12FD  2AFF               	goto	u4131
  5323  12FE  2B00               	goto	u4130
  5324  12FF                     u4131:
  5325  12FF  2AEF               	goto	l2853
  5326  1300                     u4130:
  5327  1300  2B18               	goto	l2863
  5328  1301                     l2855:
  5329  1301  3018               	movlw	24
  5330  1302  0255               	subwf	___fttol@exp1,w
  5331  1303  1C03               	skipc
  5332  1304  2B06               	goto	u4141
  5333  1305  2B07               	goto	u4140
  5334  1306                     u4141:
  5335  1306  2B13               	goto	l762
  5336  1307                     u4140:
  5337  1307  2AB8               	goto	l2831
  5338  1308                     l2861:
  5339  1308  3001               	movlw	1
  5340  1309  00CC               	movwf	??___fttol
  5341  130A                     u4155:
  5342  130A  1003               	clrc
  5343  130B  0DD1               	rlf	___fttol@lval,f
  5344  130C  0DD2               	rlf	___fttol@lval+1,f
  5345  130D  0DD3               	rlf	___fttol@lval+2,f
  5346  130E  0DD4               	rlf	___fttol@lval+3,f
  5347  130F  0BCC               	decfsz	??___fttol,f
  5348  1310  2B0A               	goto	u4155
  5349  1311  3001               	movlw	1
  5350  1312  02D5               	subwf	___fttol@exp1,f
  5351  1313                     l762:
  5352  1313  0855               	movf	___fttol@exp1,w
  5353  1314  1D03               	btfss	3,2
  5354  1315  2B17               	goto	u4161
  5355  1316  2B18               	goto	u4160
  5356  1317                     u4161:
  5357  1317  2B08               	goto	l2861
  5358  1318                     u4160:
  5359  1318                     l2863:
  5360  1318  0850               	movf	___fttol@sign1,w
  5361  1319  1903               	btfsc	3,2
  5362  131A  2B1C               	goto	u4171
  5363  131B  2B1D               	goto	u4170
  5364  131C                     u4171:
  5365  131C  2B28               	goto	l2867
  5366  131D                     u4170:
  5367  131D                     l2865:
  5368  131D  09D1               	comf	___fttol@lval,f
  5369  131E  09D2               	comf	___fttol@lval+1,f
  5370  131F  09D3               	comf	___fttol@lval+2,f
  5371  1320  09D4               	comf	___fttol@lval+3,f
  5372  1321  0AD1               	incf	___fttol@lval,f
  5373  1322  1903               	skipnz
  5374  1323  0AD2               	incf	___fttol@lval+1,f
  5375  1324  1903               	skipnz
  5376  1325  0AD3               	incf	___fttol@lval+2,f
  5377  1326  1903               	skipnz
  5378  1327  0AD4               	incf	___fttol@lval+3,f
  5379  1328                     l2867:
  5380  1328  0854               	movf	___fttol@lval+3,w
  5381  1329  00CB               	movwf	?___fttol+3
  5382  132A  0853               	movf	___fttol@lval+2,w
  5383  132B  00CA               	movwf	?___fttol+2
  5384  132C  0852               	movf	___fttol@lval+1,w
  5385  132D  00C9               	movwf	?___fttol+1
  5386  132E  0851               	movf	___fttol@lval,w
  5387  132F  00C8               	movwf	?___fttol
  5388  1330                     l755:
  5389  1330  0008               	return
  5390  1331                     __end_of___fttol:
  5391                           
  5392                           	psect	text15
  5393  1D9F                     __ptext15:	
  5394 ;; *************** function ___ftsub *****************
  5395 ;; Defined at:
  5396 ;;		line 17 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftsub.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;  f2              3   60[BANK0 ] float 
  5399 ;;  f1              3   63[BANK0 ] float 
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;		None
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  3   60[BANK0 ] float 
  5404 ;; Registers used:
  5405 ;;		wreg, status,2, status,0, pclath, cstack
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5411 ;;      Params:         0       6       0       0       0
  5412 ;;      Locals:         0       0       0       0       0
  5413 ;;      Temps:          0       0       0       0       0
  5414 ;;      Totals:         0       6       0       0       0
  5415 ;;Total ram usage:        6 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; Hardware stack levels required when called:    4
  5418 ;; This function calls:
  5419 ;;		___ftadd
  5420 ;; This function is called by:
  5421 ;;		_sprintf
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           
  5426                           ;psect for function ___ftsub
  5427  1D9F                     ___ftsub:
  5428  1D9F                     l3971:	
  5429                           ;incstack = 0
  5430                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5431                           
  5432  1D9F  1283               	bcf	3,5	;RP0=0, select bank0
  5433  1DA0  1303               	bcf	3,6	;RP1=0, select bank0
  5434  1DA1  085E               	movf	___ftsub@f2+2,w
  5435  1DA2  045D               	iorwf	___ftsub@f2+1,w
  5436  1DA3  045C               	iorwf	___ftsub@f2,w
  5437  1DA4  1903               	skipnz
  5438  1DA5  2DA7               	goto	u6421
  5439  1DA6  2DA8               	goto	u6420
  5440  1DA7                     u6421:
  5441  1DA7  2DAA               	goto	l3975
  5442  1DA8                     u6420:
  5443  1DA8                     l3973:
  5444  1DA8  3080               	movlw	128
  5445  1DA9  06DE               	xorwf	___ftsub@f2+2,f
  5446  1DAA                     l3975:
  5447  1DAA  085F               	movf	___ftsub@f1,w
  5448  1DAB  00CF               	movwf	___ftadd@f1
  5449  1DAC  0860               	movf	___ftsub@f1+1,w
  5450  1DAD  00D0               	movwf	___ftadd@f1+1
  5451  1DAE  0861               	movf	___ftsub@f1+2,w
  5452  1DAF  00D1               	movwf	___ftadd@f1+2
  5453  1DB0  085C               	movf	___ftsub@f2,w
  5454  1DB1  00D2               	movwf	___ftadd@f2
  5455  1DB2  085D               	movf	___ftsub@f2+1,w
  5456  1DB3  00D3               	movwf	___ftadd@f2+1
  5457  1DB4  085E               	movf	___ftsub@f2+2,w
  5458  1DB5  00D4               	movwf	___ftadd@f2+2
  5459  1DB6  120A  158A  213D  160A  158A  	fcall	___ftadd
  5460  1DBB  1283               	bcf	3,5	;RP0=0, select bank0
  5461  1DBC  1303               	bcf	3,6	;RP1=0, select bank0
  5462  1DBD  084F               	movf	?___ftadd,w
  5463  1DBE  00DC               	movwf	?___ftsub
  5464  1DBF  0850               	movf	?___ftadd+1,w
  5465  1DC0  00DD               	movwf	?___ftsub+1
  5466  1DC1  0851               	movf	?___ftadd+2,w
  5467  1DC2  00DE               	movwf	?___ftsub+2
  5468  1DC3                     l751:
  5469  1DC3  0008               	return
  5470  1DC4                     __end_of___ftsub:
  5471                           
  5472                           	psect	text16
  5473  1CF5                     __ptext16:	
  5474 ;; *************** function ___ftneg *****************
  5475 ;; Defined at:
  5476 ;;		line 15 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftneg.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  f1              3    3[COMMON] float 
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;		None
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  3    3[COMMON] float 
  5483 ;; Registers used:
  5484 ;;		wreg
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5490 ;;      Params:         3       0       0       0       0
  5491 ;;      Locals:         0       0       0       0       0
  5492 ;;      Temps:          0       0       0       0       0
  5493 ;;      Totals:         3       0       0       0       0
  5494 ;;Total ram usage:        3 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; Hardware stack levels required when called:    2
  5497 ;; This function calls:
  5498 ;;		Nothing
  5499 ;; This function is called by:
  5500 ;;		_sprintf
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           
  5505                           ;psect for function ___ftneg
  5506  1CF5                     ___ftneg:
  5507  1CF5                     l2813:	
  5508                           ;incstack = 0
  5509                           ; Regs used in ___ftneg: [wreg]
  5510                           
  5511  1CF5  0875               	movf	___ftneg@f1+2,w
  5512  1CF6  0474               	iorwf	___ftneg@f1+1,w
  5513  1CF7  0473               	iorwf	___ftneg@f1,w
  5514  1CF8  1903               	skipnz
  5515  1CF9  2CFB               	goto	u4061
  5516  1CFA  2CFC               	goto	u4060
  5517  1CFB                     u4061:
  5518  1CFB  2CFE               	goto	l2817
  5519  1CFC                     u4060:
  5520  1CFC                     l2815:
  5521  1CFC  3080               	movlw	128
  5522  1CFD  06F5               	xorwf	___ftneg@f1+2,f
  5523  1CFE                     l2817:
  5524  1CFE                     l745:
  5525  1CFE  0008               	return
  5526  1CFF                     __end_of___ftneg:
  5527                           
  5528                           	psect	text17
  5529  1E8C                     __ptext17:	
  5530 ;; *************** function ___ftge *****************
  5531 ;; Defined at:
  5532 ;;		line 4 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftge.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;  ff1             3    0[BANK0 ] float 
  5535 ;;  ff2             3    3[BANK0 ] float 
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;		None
  5538 ;; Return value:  Size  Location     Type
  5539 ;;		None               void
  5540 ;; Registers used:
  5541 ;;		wreg, status,2, status,0
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5547 ;;      Params:         0       6       0       0       0
  5548 ;;      Locals:         0       0       0       0       0
  5549 ;;      Temps:          0       0       0       0       0
  5550 ;;      Totals:         0       6       0       0       0
  5551 ;;Total ram usage:        6 bytes
  5552 ;; Hardware stack levels used:    1
  5553 ;; Hardware stack levels required when called:    2
  5554 ;; This function calls:
  5555 ;;		Nothing
  5556 ;; This function is called by:
  5557 ;;		_sprintf
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           
  5562                           ;psect for function ___ftge
  5563  1E8C                     ___ftge:
  5564  1E8C                     l3951:	
  5565                           ;incstack = 0
  5566                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5567                           
  5568  1E8C  1283               	bcf	3,5	;RP0=0, select bank0
  5569  1E8D  1303               	bcf	3,6	;RP1=0, select bank0
  5570  1E8E  1FA2               	btfss	___ftge@ff1+2,7
  5571  1E8F  2E91               	goto	u6391
  5572  1E90  2E92               	goto	u6390
  5573  1E91                     u6391:
  5574  1E91  2E9F               	goto	l3955
  5575  1E92                     u6390:
  5576  1E92                     l3953:
  5577  1E92  0820               	movf	___ftge@ff1,w
  5578  1E93  3C00               	sublw	0
  5579  1E94  00A0               	movwf	___ftge@ff1
  5580  1E95  0821               	movf	___ftge@ff1+1,w
  5581  1E96  1C03               	skipc
  5582  1E97  0F21               	incfsz	___ftge@ff1+1,w
  5583  1E98  3C00               	sublw	0
  5584  1E99  00A1               	movwf	___ftge@ff1+1
  5585  1E9A  0822               	movf	___ftge@ff1+2,w
  5586  1E9B  1C03               	skipc
  5587  1E9C  0F22               	incfsz	___ftge@ff1+2,w
  5588  1E9D  3C80               	sublw	128
  5589  1E9E  00A2               	movwf	___ftge@ff1+2
  5590  1E9F                     l3955:
  5591  1E9F  1FA5               	btfss	___ftge@ff2+2,7
  5592  1EA0  2EA2               	goto	u6401
  5593  1EA1  2EA3               	goto	u6400
  5594  1EA2                     u6401:
  5595  1EA2  2EB0               	goto	l3959
  5596  1EA3                     u6400:
  5597  1EA3                     l3957:
  5598  1EA3  0823               	movf	___ftge@ff2,w
  5599  1EA4  3C00               	sublw	0
  5600  1EA5  00A3               	movwf	___ftge@ff2
  5601  1EA6  0824               	movf	___ftge@ff2+1,w
  5602  1EA7  1C03               	skipc
  5603  1EA8  0F24               	incfsz	___ftge@ff2+1,w
  5604  1EA9  3C00               	sublw	0
  5605  1EAA  00A4               	movwf	___ftge@ff2+1
  5606  1EAB  0825               	movf	___ftge@ff2+2,w
  5607  1EAC  1C03               	skipc
  5608  1EAD  0F25               	incfsz	___ftge@ff2+2,w
  5609  1EAE  3C80               	sublw	128
  5610  1EAF  00A5               	movwf	___ftge@ff2+2
  5611  1EB0                     l3959:
  5612  1EB0  3080               	movlw	128
  5613  1EB1  06A2               	xorwf	___ftge@ff1+2,f
  5614  1EB2                     l3961:
  5615  1EB2  3080               	movlw	128
  5616  1EB3  06A5               	xorwf	___ftge@ff2+2,f
  5617  1EB4                     l3963:
  5618  1EB4  0825               	movf	___ftge@ff2+2,w
  5619  1EB5  0222               	subwf	___ftge@ff1+2,w
  5620  1EB6  1D03               	skipz
  5621  1EB7  2EBE               	goto	u6415
  5622  1EB8  0824               	movf	___ftge@ff2+1,w
  5623  1EB9  0221               	subwf	___ftge@ff1+1,w
  5624  1EBA  1D03               	skipz
  5625  1EBB  2EBE               	goto	u6415
  5626  1EBC  0823               	movf	___ftge@ff2,w
  5627  1EBD  0220               	subwf	___ftge@ff1,w
  5628  1EBE                     u6415:
  5629  1EBE  1803               	skipnc
  5630  1EBF  2EC1               	goto	u6411
  5631  1EC0  2EC2               	goto	u6410
  5632  1EC1                     u6411:
  5633  1EC1  2EC4               	goto	l3967
  5634  1EC2                     u6410:
  5635  1EC2                     l3965:
  5636  1EC2  1003               	clrc
  5637  1EC3  2EC5               	goto	l728
  5638  1EC4                     l3967:
  5639  1EC4  1403               	setc
  5640  1EC5                     l728:
  5641  1EC5  0008               	return
  5642  1EC6                     __end_of___ftge:
  5643                           
  5644                           	psect	text18
  5645  1D2A                     __ptext18:	
  5646 ;; *************** function _configIO *****************
  5647 ;; Defined at:
  5648 ;;		line 45 in file "pic16f.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;		None
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;		None
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  1    wreg      void 
  5655 ;; Registers used:
  5656 ;;		status,2
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5662 ;;      Params:         0       0       0       0       0
  5663 ;;      Locals:         0       0       0       0       0
  5664 ;;      Temps:          0       0       0       0       0
  5665 ;;      Totals:         0       0       0       0       0
  5666 ;;Total ram usage:        0 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    2
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_main
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           
  5677                           ;psect for function _configIO
  5678  1D2A                     _configIO:
  5679  1D2A                     l2901:	
  5680                           ;incstack = 0
  5681                           ; Regs used in _configIO: [status,2]
  5682                           
  5683                           
  5684                           ;pic16f.c: 46:     TRISB=0;
  5685  1D2A  1683               	bsf	3,5	;RP0=1, select bank1
  5686  1D2B  1303               	bcf	3,6	;RP1=0, select bank1
  5687  1D2C  0186               	clrf	6	;volatile
  5688                           
  5689                           ;pic16f.c: 47:     ANSEL=0;
  5690  1D2D  1683               	bsf	3,5	;RP0=1, select bank3
  5691  1D2E  1703               	bsf	3,6	;RP1=1, select bank3
  5692  1D2F  0188               	clrf	8	;volatile
  5693                           
  5694                           ;pic16f.c: 48:     ANSELH=0;
  5695  1D30  0189               	clrf	9	;volatile
  5696                           
  5697                           ;pic16f.c: 49:     PORTB=0;
  5698  1D31  1283               	bcf	3,5	;RP0=0, select bank0
  5699  1D32  1303               	bcf	3,6	;RP1=0, select bank0
  5700  1D33  0186               	clrf	6	;volatile
  5701  1D34                     l2903:
  5702                           
  5703                           ;pic16f.c: 51:     INTCONbits.PEIE=1;
  5704  1D34  170B               	bsf	11,6	;volatile
  5705  1D35                     l2905:
  5706                           
  5707                           ;pic16f.c: 52:     PIE1bits.RCIE=1;
  5708  1D35  1683               	bsf	3,5	;RP0=1, select bank1
  5709  1D36  1303               	bcf	3,6	;RP1=0, select bank1
  5710  1D37  168C               	bsf	12,5	;volatile
  5711  1D38                     l2907:
  5712                           
  5713                           ;pic16f.c: 53:     PIR1bits.RCIF=0;
  5714  1D38  1283               	bcf	3,5	;RP0=0, select bank0
  5715  1D39  1303               	bcf	3,6	;RP1=0, select bank0
  5716  1D3A  128C               	bcf	12,5	;volatile
  5717  1D3B                     l2909:
  5718                           
  5719                           ;pic16f.c: 54:     INTCONbits.GIE=1;
  5720  1D3B  178B               	bsf	11,7	;volatile
  5721  1D3C                     l53:
  5722  1D3C  0008               	return
  5723  1D3D                     __end_of_configIO:
  5724                           
  5725                           	psect	text19
  5726  10F1                     __ptext19:	
  5727 ;; *************** function _aht_GetTemperature *****************
  5728 ;; Defined at:
  5729 ;;		line 62 in file "aht10.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;		None
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;  value           3   63[BANK0 ] float 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  3   60[BANK0 ] float 
  5736 ;; Registers used:
  5737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5743 ;;      Params:         0       3       0       0       0
  5744 ;;      Locals:         0       3       0       0       0
  5745 ;;      Temps:          0       0       0       0       0
  5746 ;;      Totals:         0       6       0       0       0
  5747 ;;Total ram usage:        6 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:    5
  5750 ;; This function calls:
  5751 ;;		___ftadd
  5752 ;;		___ftdiv
  5753 ;;		___ftmul
  5754 ;;		___lltoft
  5755 ;;		_aht_readSensor
  5756 ;; This function is called by:
  5757 ;;		_main
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           
  5762                           ;psect for function _aht_GetTemperature
  5763  10F1                     _aht_GetTemperature:
  5764  10F1                     l4059:	
  5765                           ;incstack = 0
  5766                           ; Regs used in _aht_GetTemperature: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5767                           
  5768                           
  5769                           ;aht10.c: 64:     float value = aht_readSensor(GetTempCmd);
  5770  10F1  3000               	movlw	0
  5771  10F2  1283               	bcf	3,5	;RP0=0, select bank0
  5772  10F3  1303               	bcf	3,6	;RP1=0, select bank0
  5773  10F4  00A2               	movwf	aht_readSensor@GetDataCmd
  5774  10F5  00A3               	movwf	aht_readSensor@GetDataCmd+1
  5775  10F6  160A  118A  26F9  160A  118A  	fcall	_aht_readSensor
  5776  10FB  1283               	bcf	3,5	;RP0=0, select bank0
  5777  10FC  1303               	bcf	3,6	;RP1=0, select bank0
  5778  10FD  0825               	movf	?_aht_readSensor+3,w
  5779  10FE  00D2               	movwf	___lltoft@c+3
  5780  10FF  0824               	movf	?_aht_readSensor+2,w
  5781  1100  00D1               	movwf	___lltoft@c+2
  5782  1101  0823               	movf	?_aht_readSensor+1,w
  5783  1102  00D0               	movwf	___lltoft@c+1
  5784  1103  0822               	movf	?_aht_readSensor,w
  5785  1104  00CF               	movwf	___lltoft@c
  5786  1105  160A  158A  261F  160A  118A  	fcall	___lltoft
  5787  110A  1283               	bcf	3,5	;RP0=0, select bank0
  5788  110B  1303               	bcf	3,6	;RP1=0, select bank0
  5789  110C  084F               	movf	?___lltoft,w
  5790  110D  00DF               	movwf	aht_GetTemperature@value
  5791  110E  0850               	movf	?___lltoft+1,w
  5792  110F  00E0               	movwf	aht_GetTemperature@value+1
  5793  1110  0851               	movf	?___lltoft+2,w
  5794  1111  00E1               	movwf	aht_GetTemperature@value+2
  5795  1112                     l4061:
  5796                           
  5797                           ;aht10.c: 65:     return ((200 * value) / 1048576) - 50;
  5798  1112  3000               	movlw	0
  5799  1113  00CF               	movwf	___ftadd@f1
  5800  1114  3048               	movlw	72
  5801  1115  00D0               	movwf	___ftadd@f1+1
  5802  1116  30C2               	movlw	194
  5803  1117  00D1               	movwf	___ftadd@f1+2
  5804  1118  3000               	movlw	0
  5805  1119  00BF               	movwf	___ftdiv@f2
  5806  111A  3080               	movlw	128
  5807  111B  00C0               	movwf	___ftdiv@f2+1
  5808  111C  3049               	movlw	73
  5809  111D  00C1               	movwf	___ftdiv@f2+2
  5810  111E  3000               	movlw	0
  5811  111F  00AF               	movwf	___ftmul@f1
  5812  1120  3048               	movlw	72
  5813  1121  00B0               	movwf	___ftmul@f1+1
  5814  1122  3043               	movlw	67
  5815  1123  00B1               	movwf	___ftmul@f1+2
  5816  1124  085F               	movf	aht_GetTemperature@value,w
  5817  1125  00B2               	movwf	___ftmul@f2
  5818  1126  0860               	movf	aht_GetTemperature@value+1,w
  5819  1127  00B3               	movwf	___ftmul@f2+1
  5820  1128  0861               	movf	aht_GetTemperature@value+2,w
  5821  1129  00B4               	movwf	___ftmul@f2+2
  5822  112A  160A  118A  2614  160A  118A  	fcall	___ftmul
  5823  112F  1283               	bcf	3,5	;RP0=0, select bank0
  5824  1130  1303               	bcf	3,6	;RP1=0, select bank0
  5825  1131  082F               	movf	?___ftmul,w
  5826  1132  00C2               	movwf	___ftdiv@f1
  5827  1133  0830               	movf	?___ftmul+1,w
  5828  1134  00C3               	movwf	___ftdiv@f1+1
  5829  1135  0831               	movf	?___ftmul+2,w
  5830  1136  00C4               	movwf	___ftdiv@f1+2
  5831  1137  120A  118A  273C  160A  118A  	fcall	___ftdiv
  5832  113C  1283               	bcf	3,5	;RP0=0, select bank0
  5833  113D  1303               	bcf	3,6	;RP1=0, select bank0
  5834  113E  083F               	movf	?___ftdiv,w
  5835  113F  00D2               	movwf	___ftadd@f2
  5836  1140  0840               	movf	?___ftdiv+1,w
  5837  1141  00D3               	movwf	___ftadd@f2+1
  5838  1142  0841               	movf	?___ftdiv+2,w
  5839  1143  00D4               	movwf	___ftadd@f2+2
  5840  1144  120A  158A  213D  160A  118A  	fcall	___ftadd
  5841  1149  1283               	bcf	3,5	;RP0=0, select bank0
  5842  114A  1303               	bcf	3,6	;RP1=0, select bank0
  5843  114B  084F               	movf	?___ftadd,w
  5844  114C  00DC               	movwf	?_aht_GetTemperature
  5845  114D  0850               	movf	?___ftadd+1,w
  5846  114E  00DD               	movwf	?_aht_GetTemperature+1
  5847  114F  0851               	movf	?___ftadd+2,w
  5848  1150  00DE               	movwf	?_aht_GetTemperature+2
  5849  1151                     l215:
  5850  1151  0008               	return
  5851  1152                     __end_of_aht_GetTemperature:
  5852                           
  5853                           	psect	text20
  5854  093D                     __ptext20:	
  5855 ;; *************** function ___ftadd *****************
  5856 ;; Defined at:
  5857 ;;		line 86 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftadd.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  f1              3   47[BANK0 ] float 
  5860 ;;  f2              3   50[BANK0 ] float 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  exp1            1   59[BANK0 ] unsigned char 
  5863 ;;  exp2            1   58[BANK0 ] unsigned char 
  5864 ;;  sign            1   57[BANK0 ] unsigned char 
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  3   47[BANK0 ] float 
  5867 ;; Registers used:
  5868 ;;		wreg, status,2, status,0, pclath, cstack
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5874 ;;      Params:         0       6       0       0       0
  5875 ;;      Locals:         0       3       0       0       0
  5876 ;;      Temps:          0       4       0       0       0
  5877 ;;      Totals:         0      13       0       0       0
  5878 ;;Total ram usage:       13 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; Hardware stack levels required when called:    3
  5881 ;; This function calls:
  5882 ;;		___ftpack
  5883 ;; This function is called by:
  5884 ;;		_aht_GetTemperature
  5885 ;;		_sprintf
  5886 ;;		___ftsub
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           
  5891                           ;psect for function ___ftadd
  5892  093D                     ___ftadd:
  5893  093D                     l3473:	
  5894                           ;incstack = 0
  5895                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5896                           
  5897  093D  1283               	bcf	3,5	;RP0=0, select bank0
  5898  093E  1303               	bcf	3,6	;RP1=0, select bank0
  5899  093F  084F               	movf	___ftadd@f1,w
  5900  0940  00D5               	movwf	??___ftadd
  5901  0941  0850               	movf	___ftadd@f1+1,w
  5902  0942  00D6               	movwf	??___ftadd+1
  5903  0943  0851               	movf	___ftadd@f1+2,w
  5904  0944  00D7               	movwf	??___ftadd+2
  5905  0945  1003               	clrc
  5906  0946  0D56               	rlf	??___ftadd+1,w
  5907  0947  0D57               	rlf	??___ftadd+2,w
  5908  0948  00D8               	movwf	??___ftadd+3
  5909  0949  0858               	movf	??___ftadd+3,w
  5910  094A  00DB               	movwf	___ftadd@exp1
  5911  094B  0852               	movf	___ftadd@f2,w
  5912  094C  00D5               	movwf	??___ftadd
  5913  094D  0853               	movf	___ftadd@f2+1,w
  5914  094E  00D6               	movwf	??___ftadd+1
  5915  094F  0854               	movf	___ftadd@f2+2,w
  5916  0950  00D7               	movwf	??___ftadd+2
  5917  0951  1003               	clrc
  5918  0952  0D56               	rlf	??___ftadd+1,w
  5919  0953  0D57               	rlf	??___ftadd+2,w
  5920  0954  00D8               	movwf	??___ftadd+3
  5921  0955  0858               	movf	??___ftadd+3,w
  5922  0956  00DA               	movwf	___ftadd@exp2
  5923  0957  085B               	movf	___ftadd@exp1,w
  5924  0958  1903               	btfsc	3,2
  5925  0959  295B               	goto	u5191
  5926  095A  295C               	goto	u5190
  5927  095B                     u5191:
  5928  095B  296C               	goto	l3479
  5929  095C                     u5190:
  5930  095C                     l3475:
  5931  095C  085A               	movf	___ftadd@exp2,w
  5932  095D  025B               	subwf	___ftadd@exp1,w
  5933  095E  1803               	skipnc
  5934  095F  2961               	goto	u5201
  5935  0960  2962               	goto	u5200
  5936  0961                     u5201:
  5937  0961  2973               	goto	l3483
  5938  0962                     u5200:
  5939  0962                     l3477:
  5940  0962  085A               	movf	___ftadd@exp2,w
  5941  0963  00D5               	movwf	??___ftadd
  5942  0964  085B               	movf	___ftadd@exp1,w
  5943  0965  02D5               	subwf	??___ftadd,f
  5944  0966  3019               	movlw	25
  5945  0967  0255               	subwf	??___ftadd,w
  5946  0968  1C03               	skipc
  5947  0969  296B               	goto	u5211
  5948  096A  296C               	goto	u5210
  5949  096B                     u5211:
  5950  096B  2973               	goto	l3483
  5951  096C                     u5210:
  5952  096C                     l3479:
  5953  096C  0852               	movf	___ftadd@f2,w
  5954  096D  00CF               	movwf	?___ftadd
  5955  096E  0853               	movf	___ftadd@f2+1,w
  5956  096F  00D0               	movwf	?___ftadd+1
  5957  0970  0854               	movf	___ftadd@f2+2,w
  5958  0971  00D1               	movwf	?___ftadd+2
  5959  0972  2A72               	goto	l671
  5960  0973                     l3483:
  5961  0973  085A               	movf	___ftadd@exp2,w
  5962  0974  1903               	btfsc	3,2
  5963  0975  2977               	goto	u5221
  5964  0976  2978               	goto	u5220
  5965  0977                     u5221:
  5966  0977  2988               	goto	l674
  5967  0978                     u5220:
  5968  0978                     l3485:
  5969  0978  085B               	movf	___ftadd@exp1,w
  5970  0979  025A               	subwf	___ftadd@exp2,w
  5971  097A  1803               	skipnc
  5972  097B  297D               	goto	u5231
  5973  097C  297E               	goto	u5230
  5974  097D                     u5231:
  5975  097D  2989               	goto	l3489
  5976  097E                     u5230:
  5977  097E                     l3487:
  5978  097E  085B               	movf	___ftadd@exp1,w
  5979  097F  00D5               	movwf	??___ftadd
  5980  0980  085A               	movf	___ftadd@exp2,w
  5981  0981  02D5               	subwf	??___ftadd,f
  5982  0982  3019               	movlw	25
  5983  0983  0255               	subwf	??___ftadd,w
  5984  0984  1C03               	skipc
  5985  0985  2987               	goto	u5241
  5986  0986  2988               	goto	u5240
  5987  0987                     u5241:
  5988  0987  2989               	goto	l3489
  5989  0988                     u5240:
  5990  0988                     l674:
  5991  0988  2A72               	goto	l671
  5992  0989                     l3489:
  5993  0989  3006               	movlw	6
  5994  098A  00D5               	movwf	??___ftadd
  5995  098B  0855               	movf	??___ftadd,w
  5996  098C  00D9               	movwf	___ftadd@sign
  5997  098D                     l3491:
  5998  098D  1FD1               	btfss	___ftadd@f1+2,7
  5999  098E  2990               	goto	u5251
  6000  098F  2991               	goto	u5250
  6001  0990                     u5251:
  6002  0990  2992               	goto	l675
  6003  0991                     u5250:
  6004  0991                     l3493:
  6005  0991  17D9               	bsf	___ftadd@sign,7
  6006  0992                     l675:
  6007  0992  1FD4               	btfss	___ftadd@f2+2,7
  6008  0993  2995               	goto	u5261
  6009  0994  2996               	goto	u5260
  6010  0995                     u5261:
  6011  0995  2997               	goto	l676
  6012  0996                     u5260:
  6013  0996                     l3495:
  6014  0996  1759               	bsf	___ftadd@sign,6
  6015  0997                     l676:
  6016  0997  17D0               	bsf	___ftadd@f1+1,7
  6017  0998                     l3497:
  6018  0998  30FF               	movlw	255
  6019  0999  05CF               	andwf	___ftadd@f1,f
  6020  099A  30FF               	movlw	255
  6021  099B  05D0               	andwf	___ftadd@f1+1,f
  6022  099C  3000               	movlw	0
  6023  099D  05D1               	andwf	___ftadd@f1+2,f
  6024  099E                     l3499:
  6025  099E  17D3               	bsf	___ftadd@f2+1,7
  6026  099F  30FF               	movlw	255
  6027  09A0  05D2               	andwf	___ftadd@f2,f
  6028  09A1  30FF               	movlw	255
  6029  09A2  05D3               	andwf	___ftadd@f2+1,f
  6030  09A3  3000               	movlw	0
  6031  09A4  05D4               	andwf	___ftadd@f2+2,f
  6032  09A5  085A               	movf	___ftadd@exp2,w
  6033  09A6  025B               	subwf	___ftadd@exp1,w
  6034  09A7  1803               	skipnc
  6035  09A8  29AA               	goto	u5271
  6036  09A9  29AB               	goto	u5270
  6037  09AA                     u5271:
  6038  09AA  29D7               	goto	l3511
  6039  09AB                     u5270:
  6040  09AB                     l3501:
  6041  09AB  3001               	movlw	1
  6042  09AC                     u5285:
  6043  09AC  1003               	clrc
  6044  09AD  0DD2               	rlf	___ftadd@f2,f
  6045  09AE  0DD3               	rlf	___ftadd@f2+1,f
  6046  09AF  0DD4               	rlf	___ftadd@f2+2,f
  6047  09B0  3EFF               	addlw	-1
  6048  09B1  1D03               	skipz
  6049  09B2  29AC               	goto	u5285
  6050  09B3  3001               	movlw	1
  6051  09B4  02DA               	subwf	___ftadd@exp2,f
  6052  09B5                     l3503:
  6053  09B5  085A               	movf	___ftadd@exp2,w
  6054  09B6  065B               	xorwf	___ftadd@exp1,w
  6055  09B7  1903               	skipnz
  6056  09B8  29BA               	goto	u5291
  6057  09B9  29BB               	goto	u5290
  6058  09BA                     u5291:
  6059  09BA  29D0               	goto	l3509
  6060  09BB                     u5290:
  6061  09BB                     l3505:
  6062  09BB  3001               	movlw	1
  6063  09BC  02D9               	subwf	___ftadd@sign,f
  6064  09BD  0859               	movf	___ftadd@sign,w
  6065  09BE  3907               	andlw	7
  6066  09BF  1D03               	btfss	3,2
  6067  09C0  29C2               	goto	u5301
  6068  09C1  29C3               	goto	u5300
  6069  09C2                     u5301:
  6070  09C2  29AB               	goto	l3501
  6071  09C3                     u5300:
  6072  09C3  29D0               	goto	l3509
  6073  09C4                     l3507:
  6074  09C4  3001               	movlw	1
  6075  09C5                     u5315:
  6076  09C5  1003               	clrc
  6077  09C6  0CD1               	rrf	___ftadd@f1+2,f
  6078  09C7  0CD0               	rrf	___ftadd@f1+1,f
  6079  09C8  0CCF               	rrf	___ftadd@f1,f
  6080  09C9  3EFF               	addlw	-1
  6081  09CA  1D03               	skipz
  6082  09CB  29C5               	goto	u5315
  6083  09CC  3001               	movlw	1
  6084  09CD  00D5               	movwf	??___ftadd
  6085  09CE  0855               	movf	??___ftadd,w
  6086  09CF  07DB               	addwf	___ftadd@exp1,f
  6087  09D0                     l3509:
  6088  09D0  085B               	movf	___ftadd@exp1,w
  6089  09D1  065A               	xorwf	___ftadd@exp2,w
  6090  09D2  1D03               	skipz
  6091  09D3  29D5               	goto	u5321
  6092  09D4  29D6               	goto	u5320
  6093  09D5                     u5321:
  6094  09D5  29C4               	goto	l3507
  6095  09D6                     u5320:
  6096  09D6  2A08               	goto	l685
  6097  09D7                     l3511:
  6098  09D7  085B               	movf	___ftadd@exp1,w
  6099  09D8  025A               	subwf	___ftadd@exp2,w
  6100  09D9  1803               	skipnc
  6101  09DA  29DC               	goto	u5331
  6102  09DB  29DD               	goto	u5330
  6103  09DC                     u5331:
  6104  09DC  2A08               	goto	l685
  6105  09DD                     u5330:
  6106  09DD                     l3513:
  6107  09DD  3001               	movlw	1
  6108  09DE                     u5345:
  6109  09DE  1003               	clrc
  6110  09DF  0DCF               	rlf	___ftadd@f1,f
  6111  09E0  0DD0               	rlf	___ftadd@f1+1,f
  6112  09E1  0DD1               	rlf	___ftadd@f1+2,f
  6113  09E2  3EFF               	addlw	-1
  6114  09E3  1D03               	skipz
  6115  09E4  29DE               	goto	u5345
  6116  09E5  3001               	movlw	1
  6117  09E6  02DB               	subwf	___ftadd@exp1,f
  6118  09E7                     l3515:
  6119  09E7  085A               	movf	___ftadd@exp2,w
  6120  09E8  065B               	xorwf	___ftadd@exp1,w
  6121  09E9  1903               	skipnz
  6122  09EA  29EC               	goto	u5351
  6123  09EB  29ED               	goto	u5350
  6124  09EC                     u5351:
  6125  09EC  2A02               	goto	l3521
  6126  09ED                     u5350:
  6127  09ED                     l3517:
  6128  09ED  3001               	movlw	1
  6129  09EE  02D9               	subwf	___ftadd@sign,f
  6130  09EF  0859               	movf	___ftadd@sign,w
  6131  09F0  3907               	andlw	7
  6132  09F1  1D03               	btfss	3,2
  6133  09F2  29F4               	goto	u5361
  6134  09F3  29F5               	goto	u5360
  6135  09F4                     u5361:
  6136  09F4  29DD               	goto	l3513
  6137  09F5                     u5360:
  6138  09F5  2A02               	goto	l3521
  6139  09F6                     l3519:
  6140  09F6  3001               	movlw	1
  6141  09F7                     u5375:
  6142  09F7  1003               	clrc
  6143  09F8  0CD4               	rrf	___ftadd@f2+2,f
  6144  09F9  0CD3               	rrf	___ftadd@f2+1,f
  6145  09FA  0CD2               	rrf	___ftadd@f2,f
  6146  09FB  3EFF               	addlw	-1
  6147  09FC  1D03               	skipz
  6148  09FD  29F7               	goto	u5375
  6149  09FE  3001               	movlw	1
  6150  09FF  00D5               	movwf	??___ftadd
  6151  0A00  0855               	movf	??___ftadd,w
  6152  0A01  07DA               	addwf	___ftadd@exp2,f
  6153  0A02                     l3521:
  6154  0A02  085B               	movf	___ftadd@exp1,w
  6155  0A03  065A               	xorwf	___ftadd@exp2,w
  6156  0A04  1D03               	skipz
  6157  0A05  2A07               	goto	u5381
  6158  0A06  2A08               	goto	u5380
  6159  0A07                     u5381:
  6160  0A07  29F6               	goto	l3519
  6161  0A08                     u5380:
  6162  0A08                     l685:
  6163  0A08  1FD9               	btfss	___ftadd@sign,7
  6164  0A09  2A0B               	goto	u5391
  6165  0A0A  2A0C               	goto	u5390
  6166  0A0B                     u5391:
  6167  0A0B  2A1C               	goto	l3525
  6168  0A0C                     u5390:
  6169  0A0C                     l3523:
  6170  0A0C  30FF               	movlw	255
  6171  0A0D  06CF               	xorwf	___ftadd@f1,f
  6172  0A0E  30FF               	movlw	255
  6173  0A0F  06D0               	xorwf	___ftadd@f1+1,f
  6174  0A10  30FF               	movlw	255
  6175  0A11  06D1               	xorwf	___ftadd@f1+2,f
  6176  0A12  3001               	movlw	1
  6177  0A13  07CF               	addwf	___ftadd@f1,f
  6178  0A14  3000               	movlw	0
  6179  0A15  1803               	skipnc
  6180  0A16  3001               	movlw	1
  6181  0A17  07D0               	addwf	___ftadd@f1+1,f
  6182  0A18  3000               	movlw	0
  6183  0A19  1803               	skipnc
  6184  0A1A  3001               	movlw	1
  6185  0A1B  07D1               	addwf	___ftadd@f1+2,f
  6186  0A1C                     l3525:
  6187  0A1C  1F59               	btfss	___ftadd@sign,6
  6188  0A1D  2A1F               	goto	u5401
  6189  0A1E  2A20               	goto	u5400
  6190  0A1F                     u5401:
  6191  0A1F  2A30               	goto	l3529
  6192  0A20                     u5400:
  6193  0A20                     l3527:
  6194  0A20  30FF               	movlw	255
  6195  0A21  06D2               	xorwf	___ftadd@f2,f
  6196  0A22  30FF               	movlw	255
  6197  0A23  06D3               	xorwf	___ftadd@f2+1,f
  6198  0A24  30FF               	movlw	255
  6199  0A25  06D4               	xorwf	___ftadd@f2+2,f
  6200  0A26  3001               	movlw	1
  6201  0A27  07D2               	addwf	___ftadd@f2,f
  6202  0A28  3000               	movlw	0
  6203  0A29  1803               	skipnc
  6204  0A2A  3001               	movlw	1
  6205  0A2B  07D3               	addwf	___ftadd@f2+1,f
  6206  0A2C  3000               	movlw	0
  6207  0A2D  1803               	skipnc
  6208  0A2E  3001               	movlw	1
  6209  0A2F  07D4               	addwf	___ftadd@f2+2,f
  6210  0A30                     l3529:
  6211  0A30  01D9               	clrf	___ftadd@sign
  6212  0A31                     l3531:
  6213  0A31  084F               	movf	___ftadd@f1,w
  6214  0A32  07D2               	addwf	___ftadd@f2,f
  6215  0A33  0850               	movf	___ftadd@f1+1,w
  6216  0A34  1103               	clrz
  6217  0A35  1803               	skipnc
  6218  0A36  0A50               	incf	___ftadd@f1+1,w
  6219  0A37  1903               	skipnz
  6220  0A38  2A3A               	goto	u5411
  6221  0A39  07D3               	addwf	___ftadd@f2+1,f
  6222  0A3A                     u5411:
  6223  0A3A  0851               	movf	___ftadd@f1+2,w
  6224  0A3B  1103               	clrz
  6225  0A3C  1803               	skipnc
  6226  0A3D  0A51               	incf	___ftadd@f1+2,w
  6227  0A3E  1903               	skipnz
  6228  0A3F  2A41               	goto	u5412
  6229  0A40  07D4               	addwf	___ftadd@f2+2,f
  6230  0A41                     u5412:
  6231  0A41                     l3533:
  6232  0A41  1FD4               	btfss	___ftadd@f2+2,7
  6233  0A42  2A44               	goto	u5421
  6234  0A43  2A45               	goto	u5420
  6235  0A44                     u5421:
  6236  0A44  2A57               	goto	l3539
  6237  0A45                     u5420:
  6238  0A45                     l3535:
  6239  0A45  30FF               	movlw	255
  6240  0A46  06D2               	xorwf	___ftadd@f2,f
  6241  0A47  30FF               	movlw	255
  6242  0A48  06D3               	xorwf	___ftadd@f2+1,f
  6243  0A49  30FF               	movlw	255
  6244  0A4A  06D4               	xorwf	___ftadd@f2+2,f
  6245  0A4B  3001               	movlw	1
  6246  0A4C  07D2               	addwf	___ftadd@f2,f
  6247  0A4D  3000               	movlw	0
  6248  0A4E  1803               	skipnc
  6249  0A4F  3001               	movlw	1
  6250  0A50  07D3               	addwf	___ftadd@f2+1,f
  6251  0A51  3000               	movlw	0
  6252  0A52  1803               	skipnc
  6253  0A53  3001               	movlw	1
  6254  0A54  07D4               	addwf	___ftadd@f2+2,f
  6255  0A55                     l3537:
  6256  0A55  01D9               	clrf	___ftadd@sign
  6257  0A56  0AD9               	incf	___ftadd@sign,f
  6258  0A57                     l3539:
  6259  0A57  0852               	movf	___ftadd@f2,w
  6260  0A58  00F3               	movwf	___ftpack@arg
  6261  0A59  0853               	movf	___ftadd@f2+1,w
  6262  0A5A  00F4               	movwf	___ftpack@arg+1
  6263  0A5B  0854               	movf	___ftadd@f2+2,w
  6264  0A5C  00F5               	movwf	___ftpack@arg+2
  6265  0A5D  085B               	movf	___ftadd@exp1,w
  6266  0A5E  00D5               	movwf	??___ftadd
  6267  0A5F  0855               	movf	??___ftadd,w
  6268  0A60  00F6               	movwf	___ftpack@exp
  6269  0A61  0859               	movf	___ftadd@sign,w
  6270  0A62  00D6               	movwf	??___ftadd+1
  6271  0A63  0856               	movf	??___ftadd+1,w
  6272  0A64  00F7               	movwf	___ftpack@sign
  6273  0A65  160A  118A  2223  120A  158A  	fcall	___ftpack
  6274  0A6A  0873               	movf	?___ftpack,w
  6275  0A6B  1283               	bcf	3,5	;RP0=0, select bank0
  6276  0A6C  1303               	bcf	3,6	;RP1=0, select bank0
  6277  0A6D  00CF               	movwf	?___ftadd
  6278  0A6E  0874               	movf	?___ftpack+1,w
  6279  0A6F  00D0               	movwf	?___ftadd+1
  6280  0A70  0875               	movf	?___ftpack+2,w
  6281  0A71  00D1               	movwf	?___ftadd+2
  6282  0A72                     l671:
  6283  0A72  0008               	return
  6284  0A73                     __end_of___ftadd:
  6285                           
  6286                           	psect	text21
  6287  1FA3                     __ptext21:	
  6288 ;; *************** function _aht_GetHumidity *****************
  6289 ;; Defined at:
  6290 ;;		line 47 in file "aht10.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  value           3   56[BANK0 ] float 
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  3   53[BANK0 ] float 
  6297 ;; Registers used:
  6298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6304 ;;      Params:         0       3       0       0       0
  6305 ;;      Locals:         0       3       0       0       0
  6306 ;;      Temps:          0       0       0       0       0
  6307 ;;      Totals:         0       6       0       0       0
  6308 ;;Total ram usage:        6 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:    5
  6311 ;; This function calls:
  6312 ;;		___ftdiv
  6313 ;;		___ftmul
  6314 ;;		___lltoft
  6315 ;;		_aht_readSensor
  6316 ;; This function is called by:
  6317 ;;		_main
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           
  6322                           ;psect for function _aht_GetHumidity
  6323  1FA3                     _aht_GetHumidity:
  6324  1FA3                     l4047:	
  6325                           ;incstack = 0
  6326                           ; Regs used in _aht_GetHumidity: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6327                           
  6328                           
  6329                           ;aht10.c: 49:     float value = aht_readSensor(GetRHumidityCmd);
  6330  1FA3  3001               	movlw	1
  6331  1FA4  1283               	bcf	3,5	;RP0=0, select bank0
  6332  1FA5  1303               	bcf	3,6	;RP1=0, select bank0
  6333  1FA6  00A2               	movwf	aht_readSensor@GetDataCmd
  6334  1FA7  3000               	movlw	0
  6335  1FA8  00A3               	movwf	aht_readSensor@GetDataCmd+1
  6336  1FA9  160A  118A  26F9  160A  158A  	fcall	_aht_readSensor
  6337  1FAE  1283               	bcf	3,5	;RP0=0, select bank0
  6338  1FAF  1303               	bcf	3,6	;RP1=0, select bank0
  6339  1FB0  0825               	movf	?_aht_readSensor+3,w
  6340  1FB1  00D2               	movwf	___lltoft@c+3
  6341  1FB2  0824               	movf	?_aht_readSensor+2,w
  6342  1FB3  00D1               	movwf	___lltoft@c+2
  6343  1FB4  0823               	movf	?_aht_readSensor+1,w
  6344  1FB5  00D0               	movwf	___lltoft@c+1
  6345  1FB6  0822               	movf	?_aht_readSensor,w
  6346  1FB7  00CF               	movwf	___lltoft@c
  6347  1FB8  160A  158A  261F  160A  158A  	fcall	___lltoft
  6348  1FBD  1283               	bcf	3,5	;RP0=0, select bank0
  6349  1FBE  1303               	bcf	3,6	;RP1=0, select bank0
  6350  1FBF  084F               	movf	?___lltoft,w
  6351  1FC0  00D8               	movwf	aht_GetHumidity@value
  6352  1FC1  0850               	movf	?___lltoft+1,w
  6353  1FC2  00D9               	movwf	aht_GetHumidity@value+1
  6354  1FC3  0851               	movf	?___lltoft+2,w
  6355  1FC4  00DA               	movwf	aht_GetHumidity@value+2
  6356  1FC5                     l4049:
  6357                           
  6358                           ;aht10.c: 50:     if (value == 0) {
  6359  1FC5  085A               	movf	aht_GetHumidity@value+2,w
  6360  1FC6  0459               	iorwf	aht_GetHumidity@value+1,w
  6361  1FC7  0458               	iorwf	aht_GetHumidity@value,w
  6362  1FC8  1D03               	skipz
  6363  1FC9  2FCB               	goto	u6601
  6364  1FCA  2FCC               	goto	u6600
  6365  1FCB                     u6601:
  6366  1FCB  2FD3               	goto	l4055
  6367  1FCC                     u6600:
  6368  1FCC                     l4051:
  6369                           
  6370                           ;aht10.c: 51:         return 0;
  6371  1FCC  3000               	movlw	0
  6372  1FCD  00D5               	movwf	?_aht_GetHumidity
  6373  1FCE  3000               	movlw	0
  6374  1FCF  00D6               	movwf	?_aht_GetHumidity+1
  6375  1FD0  3000               	movlw	0
  6376  1FD1  00D7               	movwf	?_aht_GetHumidity+2
  6377  1FD2  2FFF               	goto	l212
  6378  1FD3                     l4055:
  6379                           
  6380                           ;aht10.c: 53:     return value * 100 / 1048576;
  6381  1FD3  3000               	movlw	0
  6382  1FD4  00BF               	movwf	___ftdiv@f2
  6383  1FD5  3080               	movlw	128
  6384  1FD6  00C0               	movwf	___ftdiv@f2+1
  6385  1FD7  3049               	movlw	73
  6386  1FD8  00C1               	movwf	___ftdiv@f2+2
  6387  1FD9  3000               	movlw	0
  6388  1FDA  00AF               	movwf	___ftmul@f1
  6389  1FDB  30C8               	movlw	200
  6390  1FDC  00B0               	movwf	___ftmul@f1+1
  6391  1FDD  3042               	movlw	66
  6392  1FDE  00B1               	movwf	___ftmul@f1+2
  6393  1FDF  0858               	movf	aht_GetHumidity@value,w
  6394  1FE0  00B2               	movwf	___ftmul@f2
  6395  1FE1  0859               	movf	aht_GetHumidity@value+1,w
  6396  1FE2  00B3               	movwf	___ftmul@f2+1
  6397  1FE3  085A               	movf	aht_GetHumidity@value+2,w
  6398  1FE4  00B4               	movwf	___ftmul@f2+2
  6399  1FE5  160A  118A  2614  160A  158A  	fcall	___ftmul
  6400  1FEA  1283               	bcf	3,5	;RP0=0, select bank0
  6401  1FEB  1303               	bcf	3,6	;RP1=0, select bank0
  6402  1FEC  082F               	movf	?___ftmul,w
  6403  1FED  00C2               	movwf	___ftdiv@f1
  6404  1FEE  0830               	movf	?___ftmul+1,w
  6405  1FEF  00C3               	movwf	___ftdiv@f1+1
  6406  1FF0  0831               	movf	?___ftmul+2,w
  6407  1FF1  00C4               	movwf	___ftdiv@f1+2
  6408  1FF2  120A  118A  273C  160A  158A  	fcall	___ftdiv
  6409  1FF7  1283               	bcf	3,5	;RP0=0, select bank0
  6410  1FF8  1303               	bcf	3,6	;RP1=0, select bank0
  6411  1FF9  083F               	movf	?___ftdiv,w
  6412  1FFA  00D5               	movwf	?_aht_GetHumidity
  6413  1FFB  0840               	movf	?___ftdiv+1,w
  6414  1FFC  00D6               	movwf	?_aht_GetHumidity+1
  6415  1FFD  0841               	movf	?___ftdiv+2,w
  6416  1FFE  00D7               	movwf	?_aht_GetHumidity+2
  6417  1FFF                     l212:
  6418  1FFF  0008               	return
  6419  2000                     __end_of_aht_GetHumidity:
  6420                           
  6421                           	psect	text22
  6422  16F9                     __ptext22:	
  6423 ;; *************** function _aht_readSensor *****************
  6424 ;; Defined at:
  6425 ;;		line 72 in file "aht10.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;  GetDataCmd      2    2[BANK0 ] int 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  i               1   46[BANK0 ] unsigned char 
  6430 ;;  temp           24   18[BANK0 ] unsigned long [6]
  6431 ;;  result          4   42[BANK0 ] unsigned long 
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  4    2[BANK0 ] unsigned long 
  6434 ;; Registers used:
  6435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6441 ;;      Params:         0       4       0       0       0
  6442 ;;      Locals:         0      29       0       0       0
  6443 ;;      Temps:          0      12       0       0       0
  6444 ;;      Totals:         0      45       0       0       0
  6445 ;;Total ram usage:       45 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    4
  6448 ;; This function calls:
  6449 ;;		_I2C_Master_Read
  6450 ;;		_I2C_Master_Start
  6451 ;;		_I2C_Master_Stop
  6452 ;;		_I2C_Master_Write
  6453 ;; This function is called by:
  6454 ;;		_aht_GetHumidity
  6455 ;;		_aht_GetTemperature
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           
  6460                           ;psect for function _aht_readSensor
  6461  16F9                     _aht_readSensor:
  6462  16F9                     l3641:	
  6463                           ;incstack = 0
  6464                           ; Regs used in _aht_readSensor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6465                           
  6466                           
  6467                           ;aht10.c: 72: unsigned long aht_readSensor(int GetDataCmd);aht10.c: 73: {;aht10.c: 74:  
      +                             unsigned long result, temp[6];;aht10.c: 76:     I2C_Master_Start();
  6468  16F9  160A  158A  24D9  160A  118A  	fcall	_I2C_Master_Start
  6469                           
  6470                           ;aht10.c: 77:     I2C_Master_Write(eSensorMeasureCmd[2]);
  6471  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  6472  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  6473  1700  085D               	movf	(_eSensorMeasureCmd^(0+128)+2),w
  6474  1701  1283               	bcf	3,5	;RP0=0, select bank0
  6475  1702  1303               	bcf	3,6	;RP1=0, select bank0
  6476  1703  00A6               	movwf	??_aht_readSensor
  6477  1704  01A7               	clrf	??_aht_readSensor+1
  6478  1705  0826               	movf	??_aht_readSensor,w
  6479  1706  00F3               	movwf	I2C_Master_Write@d
  6480  1707  0827               	movf	??_aht_readSensor+1,w
  6481  1708  00F4               	movwf	I2C_Master_Write@d+1
  6482  1709  160A  158A  24EB  160A  118A  	fcall	_I2C_Master_Write
  6483                           
  6484                           ;aht10.c: 78:     I2C_Master_Stop();
  6485  170E  160A  158A  24E2  160A  118A  	fcall	_I2C_Master_Stop
  6486  1713                     l3643:
  6487                           
  6488                           ;aht10.c: 79:     _delay((unsigned long)((100)*(400000/4000.0)));
  6489  1713  300D               	movlw	13
  6490  1714  1283               	bcf	3,5	;RP0=0, select bank0
  6491  1715  1303               	bcf	3,6	;RP1=0, select bank0
  6492  1716  00A7               	movwf	??_aht_readSensor+1
  6493  1717  30FB               	movlw	251
  6494  1718  00A6               	movwf	??_aht_readSensor
  6495  1719                     u7107:
  6496  1719  0BA6               	decfsz	??_aht_readSensor,f
  6497  171A  2F19               	goto	u7107
  6498  171B  0BA7               	decfsz	??_aht_readSensor+1,f
  6499  171C  2F19               	goto	u7107
  6500  171D                     l3645:
  6501                           
  6502                           ;aht10.c: 81:     I2C_Master_Start();
  6503  171D  160A  158A  24D9  160A  118A  	fcall	_I2C_Master_Start
  6504  1722                     l3647:
  6505                           
  6506                           ;aht10.c: 83:     for(unsigned char i = 0; I2C_Master_Read(1) > 0; i++)
  6507  1722  1283               	bcf	3,5	;RP0=0, select bank0
  6508  1723  1303               	bcf	3,6	;RP1=0, select bank0
  6509  1724  01CE               	clrf	aht_readSensor@i
  6510  1725  2F53               	goto	l3653
  6511  1726                     l3649:
  6512                           
  6513                           ;aht10.c: 84:     {;aht10.c: 85:         temp[i] = I2C_Master_Read(1);
  6514  1726  3001               	movlw	1
  6515  1727  00F3               	movwf	I2C_Master_Read@a
  6516  1728  3000               	movlw	0
  6517  1729  00F4               	movwf	I2C_Master_Read@a+1
  6518  172A  160A  158A  25EF  160A  118A  	fcall	_I2C_Master_Read
  6519  172F  0873               	movf	?_I2C_Master_Read,w
  6520  1730  1283               	bcf	3,5	;RP0=0, select bank0
  6521  1731  1303               	bcf	3,6	;RP1=0, select bank0
  6522  1732  00A6               	movwf	??_aht_readSensor
  6523  1733  0874               	movf	?_I2C_Master_Read+1,w
  6524  1734  00A7               	movwf	??_aht_readSensor+1
  6525  1735  01A8               	clrf	??_aht_readSensor+2
  6526  1736  01A9               	clrf	??_aht_readSensor+3
  6527  1737  084E               	movf	aht_readSensor@i,w
  6528  1738  00AA               	movwf	??_aht_readSensor+4
  6529  1739  3001               	movlw	1
  6530  173A                     u5705:
  6531  173A  1003               	clrc
  6532  173B  0DAA               	rlf	??_aht_readSensor+4,f
  6533  173C  3EFF               	addlw	-1
  6534  173D  1D03               	skipz
  6535  173E  2F3A               	goto	u5705
  6536  173F  1003               	clrc
  6537  1740  0D2A               	rlf	??_aht_readSensor+4,w
  6538  1741  3E32               	addlw	(low (aht_readSensor@temp| 0))& (0+255)
  6539  1742  0084               	movwf	4
  6540  1743  0826               	movf	??_aht_readSensor,w
  6541  1744  1383               	bcf	3,7	;select IRP bank0
  6542  1745  0080               	movwf	0
  6543  1746  0A84               	incf	4,f
  6544  1747  0827               	movf	??_aht_readSensor+1,w
  6545  1748  0080               	movwf	0
  6546  1749  0A84               	incf	4,f
  6547  174A  0828               	movf	??_aht_readSensor+2,w
  6548  174B  0080               	movwf	0
  6549  174C  0A84               	incf	4,f
  6550  174D  0829               	movf	??_aht_readSensor+3,w
  6551  174E  0080               	movwf	0
  6552  174F                     l3651:
  6553                           
  6554                           ;aht10.c: 86:     }
  6555  174F  3001               	movlw	1
  6556  1750  00A6               	movwf	??_aht_readSensor
  6557  1751  0826               	movf	??_aht_readSensor,w
  6558  1752  07CE               	addwf	aht_readSensor@i,f
  6559  1753                     l3653:
  6560  1753  3001               	movlw	1
  6561  1754  00F3               	movwf	I2C_Master_Read@a
  6562  1755  3000               	movlw	0
  6563  1756  00F4               	movwf	I2C_Master_Read@a+1
  6564  1757  160A  158A  25EF  160A  118A  	fcall	_I2C_Master_Read
  6565  175C  0873               	movf	?_I2C_Master_Read,w
  6566  175D  0474               	iorwf	?_I2C_Master_Read+1,w
  6567  175E  1D03               	btfss	3,2
  6568  175F  2F61               	goto	u5711
  6569  1760  2F62               	goto	u5710
  6570  1761                     u5711:
  6571  1761  2F26               	goto	l3649
  6572  1762                     u5710:
  6573  1762                     l3655:
  6574                           
  6575                           ;aht10.c: 88:     if(GetDataCmd)
  6576  1762  1283               	bcf	3,5	;RP0=0, select bank0
  6577  1763  1303               	bcf	3,6	;RP1=0, select bank0
  6578  1764  0822               	movf	aht_readSensor@GetDataCmd,w
  6579  1765  0423               	iorwf	aht_readSensor@GetDataCmd+1,w
  6580  1766  1903               	btfsc	3,2
  6581  1767  2F69               	goto	u5721
  6582  1768  2F6A               	goto	u5720
  6583  1769                     u5721:
  6584  1769  2FB6               	goto	l3659
  6585  176A                     u5720:
  6586  176A                     l3657:
  6587                           
  6588                           ;aht10.c: 89:     {;aht10.c: 90:         result = ((temp[1] << 16) | (temp[2] << 8) | te
      +                          mp[3]) >> 4;
  6589  176A  083E               	movf	aht_readSensor@temp+12,w
  6590  176B  00A6               	movwf	??_aht_readSensor
  6591  176C  083F               	movf	aht_readSensor@temp+13,w
  6592  176D  00A7               	movwf	??_aht_readSensor+1
  6593  176E  0840               	movf	aht_readSensor@temp+14,w
  6594  176F  00A8               	movwf	??_aht_readSensor+2
  6595  1770  0841               	movf	aht_readSensor@temp+15,w
  6596  1771  00A9               	movwf	??_aht_readSensor+3
  6597  1772  083A               	movf	aht_readSensor@temp+8,w
  6598  1773  00AA               	movwf	??_aht_readSensor+4
  6599  1774  083B               	movf	aht_readSensor@temp+9,w
  6600  1775  00AB               	movwf	??_aht_readSensor+5
  6601  1776  083C               	movf	aht_readSensor@temp+10,w
  6602  1777  00AC               	movwf	??_aht_readSensor+6
  6603  1778  083D               	movf	aht_readSensor@temp+11,w
  6604  1779  00AD               	movwf	??_aht_readSensor+7
  6605  177A  3008               	movlw	8
  6606  177B                     u5735:
  6607  177B  1003               	clrc
  6608  177C  0DAA               	rlf	??_aht_readSensor+4,f
  6609  177D  0DAB               	rlf	??_aht_readSensor+5,f
  6610  177E  0DAC               	rlf	??_aht_readSensor+6,f
  6611  177F  0DAD               	rlf	??_aht_readSensor+7,f
  6612  1780                     u5730:
  6613  1780  3EFF               	addlw	-1
  6614  1781  1D03               	skipz
  6615  1782  2F7B               	goto	u5735
  6616  1783  0836               	movf	aht_readSensor@temp+4,w
  6617  1784  00AE               	movwf	??_aht_readSensor+8
  6618  1785  0837               	movf	aht_readSensor@temp+5,w
  6619  1786  00AF               	movwf	??_aht_readSensor+9
  6620  1787  0838               	movf	aht_readSensor@temp+6,w
  6621  1788  00B0               	movwf	??_aht_readSensor+10
  6622  1789  0839               	movf	aht_readSensor@temp+7,w
  6623  178A  00B1               	movwf	??_aht_readSensor+11
  6624  178B  3010               	movlw	16
  6625  178C                     u5745:
  6626  178C  1003               	clrc
  6627  178D  0DAE               	rlf	??_aht_readSensor+8,f
  6628  178E  0DAF               	rlf	??_aht_readSensor+9,f
  6629  178F  0DB0               	rlf	??_aht_readSensor+10,f
  6630  1790  0DB1               	rlf	??_aht_readSensor+11,f
  6631  1791                     u5740:
  6632  1791  3EFF               	addlw	-1
  6633  1792  1D03               	skipz
  6634  1793  2F8C               	goto	u5745
  6635  1794  082E               	movf	??_aht_readSensor+8,w
  6636  1795  04AA               	iorwf	??_aht_readSensor+4,f
  6637  1796  082F               	movf	??_aht_readSensor+9,w
  6638  1797  04AB               	iorwf	??_aht_readSensor+5,f
  6639  1798  0830               	movf	??_aht_readSensor+10,w
  6640  1799  04AC               	iorwf	??_aht_readSensor+6,f
  6641  179A  0831               	movf	??_aht_readSensor+11,w
  6642  179B  04AD               	iorwf	??_aht_readSensor+7,f
  6643  179C  082A               	movf	??_aht_readSensor+4,w
  6644  179D  04A6               	iorwf	??_aht_readSensor,f
  6645  179E  082B               	movf	??_aht_readSensor+5,w
  6646  179F  04A7               	iorwf	??_aht_readSensor+1,f
  6647  17A0  082C               	movf	??_aht_readSensor+6,w
  6648  17A1  04A8               	iorwf	??_aht_readSensor+2,f
  6649  17A2  082D               	movf	??_aht_readSensor+7,w
  6650  17A3  04A9               	iorwf	??_aht_readSensor+3,f
  6651  17A4  3004               	movlw	4
  6652  17A5                     u5755:
  6653  17A5  1003               	clrc
  6654  17A6  0CA9               	rrf	??_aht_readSensor+3,f
  6655  17A7  0CA8               	rrf	??_aht_readSensor+2,f
  6656  17A8  0CA7               	rrf	??_aht_readSensor+1,f
  6657  17A9  0CA6               	rrf	??_aht_readSensor,f
  6658  17AA                     u5750:
  6659  17AA  3EFF               	addlw	-1
  6660  17AB  1D03               	skipz
  6661  17AC  2FA5               	goto	u5755
  6662  17AD  0829               	movf	??_aht_readSensor+3,w
  6663  17AE  00CD               	movwf	aht_readSensor@result+3
  6664  17AF  0828               	movf	??_aht_readSensor+2,w
  6665  17B0  00CC               	movwf	aht_readSensor@result+2
  6666  17B1  0827               	movf	??_aht_readSensor+1,w
  6667  17B2  00CB               	movwf	aht_readSensor@result+1
  6668  17B3  0826               	movf	??_aht_readSensor,w
  6669  17B4  00CA               	movwf	aht_readSensor@result
  6670                           
  6671                           ;aht10.c: 91:     }
  6672  17B5  2FF7               	goto	l3661
  6673  17B6                     l3659:
  6674                           
  6675                           ;aht10.c: 93:     {;aht10.c: 94:         result = ((temp[3] & 0x0F) << 16) | (temp[4] <<
      +                           8) | temp[5];
  6676  17B6  0842               	movf	aht_readSensor@temp+16,w
  6677  17B7  00A6               	movwf	??_aht_readSensor
  6678  17B8  0843               	movf	aht_readSensor@temp+17,w
  6679  17B9  00A7               	movwf	??_aht_readSensor+1
  6680  17BA  0844               	movf	aht_readSensor@temp+18,w
  6681  17BB  00A8               	movwf	??_aht_readSensor+2
  6682  17BC  0845               	movf	aht_readSensor@temp+19,w
  6683  17BD  00A9               	movwf	??_aht_readSensor+3
  6684  17BE  3008               	movlw	8
  6685  17BF                     u5765:
  6686  17BF  1003               	clrc
  6687  17C0  0DA6               	rlf	??_aht_readSensor,f
  6688  17C1  0DA7               	rlf	??_aht_readSensor+1,f
  6689  17C2  0DA8               	rlf	??_aht_readSensor+2,f
  6690  17C3  0DA9               	rlf	??_aht_readSensor+3,f
  6691  17C4                     u5760:
  6692  17C4  3EFF               	addlw	-1
  6693  17C5  1D03               	skipz
  6694  17C6  2FBF               	goto	u5765
  6695  17C7  300C               	movlw	12
  6696  17C8  3E32               	addlw	(low (aht_readSensor@temp| 0))& (0+255)
  6697  17C9  0084               	movwf	4
  6698  17CA  300F               	movlw	15
  6699  17CB  1383               	bcf	3,7	;select IRP bank0
  6700  17CC  0500               	andwf	0,w
  6701  17CD  00AA               	movwf	??_aht_readSensor+4
  6702  17CE  0A84               	incf	4,f
  6703  17CF  3000               	movlw	0
  6704  17D0  0500               	andwf	0,w
  6705  17D1  00AB               	movwf	??_aht_readSensor+5
  6706  17D2  0A84               	incf	4,f
  6707  17D3  3000               	movlw	0
  6708  17D4  0500               	andwf	0,w
  6709  17D5  00AC               	movwf	??_aht_readSensor+6
  6710  17D6  0A84               	incf	4,f
  6711  17D7  3000               	movlw	0
  6712  17D8  0500               	andwf	0,w
  6713  17D9  00AD               	movwf	??_aht_readSensor+7
  6714  17DA  3010               	movlw	16
  6715  17DB                     u5775:
  6716  17DB  1003               	clrc
  6717  17DC  0DAA               	rlf	??_aht_readSensor+4,f
  6718  17DD  0DAB               	rlf	??_aht_readSensor+5,f
  6719  17DE  0DAC               	rlf	??_aht_readSensor+6,f
  6720  17DF  0DAD               	rlf	??_aht_readSensor+7,f
  6721  17E0                     u5770:
  6722  17E0  3EFF               	addlw	-1
  6723  17E1  1D03               	skipz
  6724  17E2  2FDB               	goto	u5775
  6725  17E3  082A               	movf	??_aht_readSensor+4,w
  6726  17E4  04A6               	iorwf	??_aht_readSensor,f
  6727  17E5  082B               	movf	??_aht_readSensor+5,w
  6728  17E6  04A7               	iorwf	??_aht_readSensor+1,f
  6729  17E7  082C               	movf	??_aht_readSensor+6,w
  6730  17E8  04A8               	iorwf	??_aht_readSensor+2,f
  6731  17E9  082D               	movf	??_aht_readSensor+7,w
  6732  17EA  04A9               	iorwf	??_aht_readSensor+3,f
  6733  17EB  0846               	movf	aht_readSensor@temp+20,w
  6734  17EC  0426               	iorwf	??_aht_readSensor,w
  6735  17ED  00CA               	movwf	aht_readSensor@result
  6736  17EE  0847               	movf	aht_readSensor@temp+21,w
  6737  17EF  0427               	iorwf	??_aht_readSensor+1,w
  6738  17F0  00CB               	movwf	aht_readSensor@result+1
  6739  17F1  0848               	movf	aht_readSensor@temp+22,w
  6740  17F2  0428               	iorwf	??_aht_readSensor+2,w
  6741  17F3  00CC               	movwf	aht_readSensor@result+2
  6742  17F4  0849               	movf	aht_readSensor@temp+23,w
  6743  17F5  0429               	iorwf	??_aht_readSensor+3,w
  6744  17F6  00CD               	movwf	aht_readSensor@result+3
  6745  17F7                     l3661:
  6746                           
  6747                           ;aht10.c: 97:     return result;
  6748  17F7  084D               	movf	aht_readSensor@result+3,w
  6749  17F8  00A5               	movwf	?_aht_readSensor+3
  6750  17F9  084C               	movf	aht_readSensor@result+2,w
  6751  17FA  00A4               	movwf	?_aht_readSensor+2
  6752  17FB  084B               	movf	aht_readSensor@result+1,w
  6753  17FC  00A3               	movwf	?_aht_readSensor+1
  6754  17FD  084A               	movf	aht_readSensor@result,w
  6755  17FE  00A2               	movwf	?_aht_readSensor
  6756  17FF                     l223:
  6757  17FF  0008               	return
  6758  1800                     __end_of_aht_readSensor:
  6759                           
  6760                           	psect	text23
  6761  1CEB                     __ptext23:	
  6762 ;; *************** function _I2C_Master_Write *****************
  6763 ;; Defined at:
  6764 ;;		line 65 in file "I2C.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;  d               2    3[COMMON] unsigned int 
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;		None
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  1    wreg      void 
  6771 ;; Registers used:
  6772 ;;		wreg, status,2, status,0, pclath, cstack
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6778 ;;      Params:         2       0       0       0       0
  6779 ;;      Locals:         0       0       0       0       0
  6780 ;;      Temps:          0       0       0       0       0
  6781 ;;      Totals:         2       0       0       0       0
  6782 ;;Total ram usage:        2 bytes
  6783 ;; Hardware stack levels used:    1
  6784 ;; Hardware stack levels required when called:    3
  6785 ;; This function calls:
  6786 ;;		_I2C_Master_Wait
  6787 ;; This function is called by:
  6788 ;;		_aht_readSensor
  6789 ;;		_aht_begin
  6790 ;;		_aht_Reset
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           
  6795                           ;psect for function _I2C_Master_Write
  6796  1CEB                     _I2C_Master_Write:
  6797  1CEB                     l3371:	
  6798                           ;incstack = 0
  6799                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  6800                           
  6801                           
  6802                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  6803  1CEB  160A  158A  250B  160A  158A  	fcall	_I2C_Master_Wait
  6804  1CF0                     l3373:
  6805                           
  6806                           ;I2C.c: 68:     SSPBUF = d;
  6807  1CF0  0873               	movf	I2C_Master_Write@d,w
  6808  1CF1  1283               	bcf	3,5	;RP0=0, select bank0
  6809  1CF2  1303               	bcf	3,6	;RP1=0, select bank0
  6810  1CF3  0093               	movwf	19	;volatile
  6811  1CF4                     l114:
  6812  1CF4  0008               	return
  6813  1CF5                     __end_of_I2C_Master_Write:
  6814                           
  6815                           	psect	text24
  6816  1CE2                     __ptext24:	
  6817 ;; *************** function _I2C_Master_Stop *****************
  6818 ;; Defined at:
  6819 ;;		line 55 in file "I2C.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;		None
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;		None
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  1    wreg      void 
  6826 ;; Registers used:
  6827 ;;		wreg, status,2, status,0, pclath, cstack
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6833 ;;      Params:         0       0       0       0       0
  6834 ;;      Locals:         0       0       0       0       0
  6835 ;;      Temps:          0       0       0       0       0
  6836 ;;      Totals:         0       0       0       0       0
  6837 ;;Total ram usage:        0 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; Hardware stack levels required when called:    3
  6840 ;; This function calls:
  6841 ;;		_I2C_Master_Wait
  6842 ;; This function is called by:
  6843 ;;		_aht_readSensor
  6844 ;;		_aht_begin
  6845 ;;		_aht_Reset
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           
  6850                           ;psect for function _I2C_Master_Stop
  6851  1CE2                     _I2C_Master_Stop:
  6852  1CE2                     l3367:	
  6853                           ;incstack = 0
  6854                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  6855                           
  6856                           
  6857                           ;I2C.c: 57:     I2C_Master_Wait();
  6858  1CE2  160A  158A  250B  160A  158A  	fcall	_I2C_Master_Wait
  6859  1CE7                     l3369:
  6860                           
  6861                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  6862  1CE7  1683               	bsf	3,5	;RP0=1, select bank1
  6863  1CE8  1303               	bcf	3,6	;RP1=0, select bank1
  6864  1CE9  1511               	bsf	17,2	;volatile
  6865  1CEA                     l111:
  6866  1CEA  0008               	return
  6867  1CEB                     __end_of_I2C_Master_Stop:
  6868                           
  6869                           	psect	text25
  6870  1CD9                     __ptext25:	
  6871 ;; *************** function _I2C_Master_Start *****************
  6872 ;; Defined at:
  6873 ;;		line 39 in file "I2C.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;		None
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;		None
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  1    wreg      void 
  6880 ;; Registers used:
  6881 ;;		wreg, status,2, status,0, pclath, cstack
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6887 ;;      Params:         0       0       0       0       0
  6888 ;;      Locals:         0       0       0       0       0
  6889 ;;      Temps:          0       0       0       0       0
  6890 ;;      Totals:         0       0       0       0       0
  6891 ;;Total ram usage:        0 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; Hardware stack levels required when called:    3
  6894 ;; This function calls:
  6895 ;;		_I2C_Master_Wait
  6896 ;; This function is called by:
  6897 ;;		_aht_readSensor
  6898 ;;		_aht_begin
  6899 ;;		_aht_readStatus
  6900 ;;		_aht_Reset
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           
  6905                           ;psect for function _I2C_Master_Start
  6906  1CD9                     _I2C_Master_Start:
  6907  1CD9                     l3363:	
  6908                           ;incstack = 0
  6909                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  6910                           
  6911                           
  6912                           ;I2C.c: 41:     I2C_Master_Wait();
  6913  1CD9  160A  158A  250B  160A  158A  	fcall	_I2C_Master_Wait
  6914  1CDE                     l3365:
  6915                           
  6916                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  6917  1CDE  1683               	bsf	3,5	;RP0=1, select bank1
  6918  1CDF  1303               	bcf	3,6	;RP1=0, select bank1
  6919  1CE0  1411               	bsf	17,0	;volatile
  6920  1CE1                     l105:
  6921  1CE1  0008               	return
  6922  1CE2                     __end_of_I2C_Master_Start:
  6923                           
  6924                           	psect	text26
  6925  1DEF                     __ptext26:	
  6926 ;; *************** function _I2C_Master_Read *****************
  6927 ;; Defined at:
  6928 ;;		line 74 in file "I2C.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;  a               2    3[COMMON] unsigned short 
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;  temp            2    0[BANK0 ] unsigned short 
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  2    3[COMMON] unsigned short 
  6935 ;; Registers used:
  6936 ;;		wreg, status,2, status,0, pclath, cstack
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6942 ;;      Params:         2       0       0       0       0
  6943 ;;      Locals:         0       2       0       0       0
  6944 ;;      Temps:          2       0       0       0       0
  6945 ;;      Totals:         4       2       0       0       0
  6946 ;;Total ram usage:        6 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; Hardware stack levels required when called:    3
  6949 ;; This function calls:
  6950 ;;		_I2C_Master_Wait
  6951 ;; This function is called by:
  6952 ;;		_aht_readSensor
  6953 ;;		_aht_readStatus
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           
  6958                           ;psect for function _I2C_Master_Read
  6959  1DEF                     _I2C_Master_Read:
  6960  1DEF                     l3375:	
  6961                           ;incstack = 0
  6962                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  6963                           
  6964                           
  6965                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  6966  1DEF  160A  158A  250B  160A  158A  	fcall	_I2C_Master_Wait
  6967  1DF4                     l3377:
  6968                           
  6969                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  6970  1DF4  1683               	bsf	3,5	;RP0=1, select bank1
  6971  1DF5  1303               	bcf	3,6	;RP1=0, select bank1
  6972  1DF6  1591               	bsf	17,3	;volatile
  6973                           
  6974                           ;I2C.c: 79:     I2C_Master_Wait();
  6975  1DF7  160A  158A  250B  160A  158A  	fcall	_I2C_Master_Wait
  6976  1DFC                     l3379:
  6977                           
  6978                           ;I2C.c: 80:     temp = SSPBUF;
  6979  1DFC  1283               	bcf	3,5	;RP0=0, select bank0
  6980  1DFD  1303               	bcf	3,6	;RP1=0, select bank0
  6981  1DFE  0813               	movf	19,w	;volatile
  6982  1DFF  00F5               	movwf	??_I2C_Master_Read
  6983  1E00  01F6               	clrf	??_I2C_Master_Read+1
  6984  1E01  0875               	movf	??_I2C_Master_Read,w
  6985  1E02  00A0               	movwf	I2C_Master_Read@temp
  6986  1E03  0876               	movf	??_I2C_Master_Read+1,w
  6987  1E04  00A1               	movwf	I2C_Master_Read@temp+1
  6988  1E05                     l3381:
  6989                           
  6990                           ;I2C.c: 81:     I2C_Master_Wait();
  6991  1E05  160A  158A  250B  160A  158A  	fcall	_I2C_Master_Wait
  6992  1E0A                     l3383:
  6993                           
  6994                           ;I2C.c: 82:     if(a == 1){
  6995  1E0A  0373               	decf	I2C_Master_Read@a,w
  6996  1E0B  0474               	iorwf	I2C_Master_Read@a+1,w
  6997  1E0C  1D03               	btfss	3,2
  6998  1E0D  2E0F               	goto	u4991
  6999  1E0E  2E10               	goto	u4990
  7000  1E0F                     u4991:
  7001  1E0F  2E14               	goto	l117
  7002  1E10                     u4990:
  7003  1E10                     l3385:
  7004                           
  7005                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  7006  1E10  1683               	bsf	3,5	;RP0=1, select bank1
  7007  1E11  1303               	bcf	3,6	;RP1=0, select bank1
  7008  1E12  1291               	bcf	17,5	;volatile
  7009                           
  7010                           ;I2C.c: 84:     }else{
  7011  1E13  2E17               	goto	l118
  7012  1E14                     l117:
  7013                           
  7014                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  7015  1E14  1683               	bsf	3,5	;RP0=1, select bank1
  7016  1E15  1303               	bcf	3,6	;RP1=0, select bank1
  7017  1E16  1691               	bsf	17,5	;volatile
  7018  1E17                     l118:	
  7019                           ;I2C.c: 86:     }
  7020                           
  7021                           
  7022                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  7023  1E17  1611               	bsf	17,4	;volatile
  7024  1E18                     l3387:
  7025                           
  7026                           ;I2C.c: 88:     return temp;
  7027  1E18  1283               	bcf	3,5	;RP0=0, select bank0
  7028  1E19  1303               	bcf	3,6	;RP1=0, select bank0
  7029  1E1A  0821               	movf	I2C_Master_Read@temp+1,w
  7030  1E1B  00F4               	movwf	?_I2C_Master_Read+1
  7031  1E1C  0820               	movf	I2C_Master_Read@temp,w
  7032  1E1D  00F3               	movwf	?_I2C_Master_Read
  7033  1E1E                     l119:
  7034  1E1E  0008               	return
  7035  1E1F                     __end_of_I2C_Master_Read:
  7036                           
  7037                           	psect	text27
  7038  1D0B                     __ptext27:	
  7039 ;; *************** function _I2C_Master_Wait *****************
  7040 ;; Defined at:
  7041 ;;		line 32 in file "I2C.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;		None
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;		None
  7046 ;; Return value:  Size  Location     Type
  7047 ;;                  1    wreg      void 
  7048 ;; Registers used:
  7049 ;;		wreg, status,2
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7055 ;;      Params:         0       0       0       0       0
  7056 ;;      Locals:         0       0       0       0       0
  7057 ;;      Temps:          0       0       0       0       0
  7058 ;;      Totals:         0       0       0       0       0
  7059 ;;Total ram usage:        0 bytes
  7060 ;; Hardware stack levels used:    1
  7061 ;; Hardware stack levels required when called:    2
  7062 ;; This function calls:
  7063 ;;		Nothing
  7064 ;; This function is called by:
  7065 ;;		_I2C_Master_Start
  7066 ;;		_I2C_Master_Stop
  7067 ;;		_I2C_Master_Write
  7068 ;;		_I2C_Master_Read
  7069 ;;		_I2C_Master_RepeatedStart
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           
  7074                           ;psect for function _I2C_Master_Wait
  7075  1D0B                     _I2C_Master_Wait:
  7076  1D0B                     l3327:	
  7077                           ;incstack = 0
  7078                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  7079                           
  7080  1D0B                     l99:	
  7081                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  7082                           
  7083  1D0B  1683               	bsf	3,5	;RP0=1, select bank1
  7084  1D0C  1303               	bcf	3,6	;RP1=0, select bank1
  7085  1D0D  1914               	btfsc	20,2	;volatile
  7086  1D0E  2D10               	goto	u4851
  7087  1D0F  2D11               	goto	u4850
  7088  1D10                     u4851:
  7089  1D10  2D0B               	goto	l99
  7090  1D11                     u4850:
  7091  1D11                     l3329:
  7092  1D11  0811               	movf	17,w	;volatile
  7093  1D12  391F               	andlw	31
  7094  1D13  1D03               	btfss	3,2
  7095  1D14  2D16               	goto	u4861
  7096  1D15  2D17               	goto	u4860
  7097  1D16                     u4861:
  7098  1D16  2D0B               	goto	l99
  7099  1D17                     u4860:
  7100  1D17                     l102:
  7101  1D17  0008               	return
  7102  1D18                     __end_of_I2C_Master_Wait:
  7103                           
  7104                           	psect	text28
  7105  1E1F                     __ptext28:	
  7106 ;; *************** function ___lltoft *****************
  7107 ;; Defined at:
  7108 ;;		line 35 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\lltoft.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;  c               4   47[BANK0 ] unsigned long 
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;  exp             1   52[BANK0 ] unsigned char 
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  3   47[BANK0 ] float 
  7115 ;; Registers used:
  7116 ;;		wreg, status,2, status,0, pclath, cstack
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7122 ;;      Params:         0       4       0       0       0
  7123 ;;      Locals:         0       1       0       0       0
  7124 ;;      Temps:          0       1       0       0       0
  7125 ;;      Totals:         0       6       0       0       0
  7126 ;;Total ram usage:        6 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; Hardware stack levels required when called:    3
  7129 ;; This function calls:
  7130 ;;		___ftpack
  7131 ;; This function is called by:
  7132 ;;		_aht_GetHumidity
  7133 ;;		_aht_GetTemperature
  7134 ;;		_sprintf
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           
  7139                           ;psect for function ___lltoft
  7140  1E1F                     ___lltoft:
  7141  1E1F                     l3999:	
  7142                           ;incstack = 0
  7143                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  7144                           
  7145  1E1F  308E               	movlw	142
  7146  1E20  1283               	bcf	3,5	;RP0=0, select bank0
  7147  1E21  1303               	bcf	3,6	;RP1=0, select bank0
  7148  1E22  00D3               	movwf	??___lltoft
  7149  1E23  0853               	movf	??___lltoft,w
  7150  1E24  00D4               	movwf	___lltoft@exp
  7151  1E25  2E33               	goto	l4003
  7152  1E26                     l4001:
  7153  1E26  3001               	movlw	1
  7154  1E27                     u6495:
  7155  1E27  1003               	clrc
  7156  1E28  0CD2               	rrf	___lltoft@c+3,f
  7157  1E29  0CD1               	rrf	___lltoft@c+2,f
  7158  1E2A  0CD0               	rrf	___lltoft@c+1,f
  7159  1E2B  0CCF               	rrf	___lltoft@c,f
  7160  1E2C  3EFF               	addlw	-1
  7161  1E2D  1D03               	skipz
  7162  1E2E  2E27               	goto	u6495
  7163  1E2F  3001               	movlw	1
  7164  1E30  00D3               	movwf	??___lltoft
  7165  1E31  0853               	movf	??___lltoft,w
  7166  1E32  07D4               	addwf	___lltoft@exp,f
  7167  1E33                     l4003:
  7168  1E33  30FF               	movlw	255
  7169  1E34  0552               	andwf	___lltoft@c+3,w
  7170  1E35  1D03               	btfss	3,2
  7171  1E36  2E38               	goto	u6501
  7172  1E37  2E39               	goto	u6500
  7173  1E38                     u6501:
  7174  1E38  2E26               	goto	l4001
  7175  1E39                     u6500:
  7176  1E39                     l4005:
  7177  1E39  084F               	movf	___lltoft@c,w
  7178  1E3A  00F3               	movwf	___ftpack@arg
  7179  1E3B  0850               	movf	___lltoft@c+1,w
  7180  1E3C  00F4               	movwf	___ftpack@arg+1
  7181  1E3D  0851               	movf	___lltoft@c+2,w
  7182  1E3E  00F5               	movwf	___ftpack@arg+2
  7183  1E3F  0854               	movf	___lltoft@exp,w
  7184  1E40  00D3               	movwf	??___lltoft
  7185  1E41  0853               	movf	??___lltoft,w
  7186  1E42  00F6               	movwf	___ftpack@exp
  7187  1E43  01F7               	clrf	___ftpack@sign
  7188  1E44  160A  118A  2223  160A  158A  	fcall	___ftpack
  7189  1E49  0873               	movf	?___ftpack,w
  7190  1E4A  1283               	bcf	3,5	;RP0=0, select bank0
  7191  1E4B  1303               	bcf	3,6	;RP1=0, select bank0
  7192  1E4C  00CF               	movwf	?___lltoft
  7193  1E4D  0874               	movf	?___ftpack+1,w
  7194  1E4E  00D0               	movwf	?___lltoft+1
  7195  1E4F  0875               	movf	?___ftpack+2,w
  7196  1E50  00D1               	movwf	?___lltoft+2
  7197  1E51                     l804:
  7198  1E51  0008               	return
  7199  1E52                     __end_of___lltoft:
  7200                           
  7201                           	psect	text29
  7202  1614                     __ptext29:	
  7203 ;; *************** function ___ftmul *****************
  7204 ;; Defined at:
  7205 ;;		line 62 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftmul.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;  f1              3   15[BANK0 ] float 
  7208 ;;  f2              3   18[BANK0 ] float 
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;  f3_as_produc    3   26[BANK0 ] unsigned um
  7211 ;;  sign            1   30[BANK0 ] unsigned char 
  7212 ;;  cntr            1   29[BANK0 ] unsigned char 
  7213 ;;  exp             1   25[BANK0 ] unsigned char 
  7214 ;; Return value:  Size  Location     Type
  7215 ;;                  3   15[BANK0 ] float 
  7216 ;; Registers used:
  7217 ;;		wreg, status,2, status,0, pclath, cstack
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/0
  7220 ;;		On exit  : 0/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7223 ;;      Params:         0       6       0       0       0
  7224 ;;      Locals:         0       6       0       0       0
  7225 ;;      Temps:          0       4       0       0       0
  7226 ;;      Totals:         0      16       0       0       0
  7227 ;;Total ram usage:       16 bytes
  7228 ;; Hardware stack levels used:    1
  7229 ;; Hardware stack levels required when called:    3
  7230 ;; This function calls:
  7231 ;;		___ftpack
  7232 ;; This function is called by:
  7233 ;;		_aht_GetHumidity
  7234 ;;		_aht_GetTemperature
  7235 ;;		_fround
  7236 ;;		_scale
  7237 ;;		_sprintf
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           
  7241                           
  7242                           ;psect for function ___ftmul
  7243  1614                     ___ftmul:
  7244  1614                     l3543:	
  7245                           ;incstack = 0
  7246                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7247                           
  7248  1614  1283               	bcf	3,5	;RP0=0, select bank0
  7249  1615  1303               	bcf	3,6	;RP1=0, select bank0
  7250  1616  082F               	movf	___ftmul@f1,w
  7251  1617  00B5               	movwf	??___ftmul
  7252  1618  0830               	movf	___ftmul@f1+1,w
  7253  1619  00B6               	movwf	??___ftmul+1
  7254  161A  0831               	movf	___ftmul@f1+2,w
  7255  161B  00B7               	movwf	??___ftmul+2
  7256  161C  1003               	clrc
  7257  161D  0D36               	rlf	??___ftmul+1,w
  7258  161E  0D37               	rlf	??___ftmul+2,w
  7259  161F  00B8               	movwf	??___ftmul+3
  7260  1620  0838               	movf	??___ftmul+3,w
  7261  1621  00B9               	movwf	___ftmul@exp
  7262  1622  0839               	movf	___ftmul@exp,w
  7263  1623  1D03               	btfss	3,2
  7264  1624  2E26               	goto	u5431
  7265  1625  2E27               	goto	u5430
  7266  1626                     u5431:
  7267  1626  2E2E               	goto	l3549
  7268  1627                     u5430:
  7269  1627                     l3545:
  7270  1627  3000               	movlw	0
  7271  1628  00AF               	movwf	?___ftmul
  7272  1629  3000               	movlw	0
  7273  162A  00B0               	movwf	?___ftmul+1
  7274  162B  3000               	movlw	0
  7275  162C  00B1               	movwf	?___ftmul+2
  7276  162D  2EF8               	goto	l734
  7277  162E                     l3549:
  7278  162E  0832               	movf	___ftmul@f2,w
  7279  162F  00B5               	movwf	??___ftmul
  7280  1630  0833               	movf	___ftmul@f2+1,w
  7281  1631  00B6               	movwf	??___ftmul+1
  7282  1632  0834               	movf	___ftmul@f2+2,w
  7283  1633  00B7               	movwf	??___ftmul+2
  7284  1634  1003               	clrc
  7285  1635  0D36               	rlf	??___ftmul+1,w
  7286  1636  0D37               	rlf	??___ftmul+2,w
  7287  1637  00B8               	movwf	??___ftmul+3
  7288  1638  0838               	movf	??___ftmul+3,w
  7289  1639  00BE               	movwf	___ftmul@sign
  7290  163A  083E               	movf	___ftmul@sign,w
  7291  163B  1D03               	btfss	3,2
  7292  163C  2E3E               	goto	u5441
  7293  163D  2E3F               	goto	u5440
  7294  163E                     u5441:
  7295  163E  2E46               	goto	l3555
  7296  163F                     u5440:
  7297  163F                     l3551:
  7298  163F  3000               	movlw	0
  7299  1640  00AF               	movwf	?___ftmul
  7300  1641  3000               	movlw	0
  7301  1642  00B0               	movwf	?___ftmul+1
  7302  1643  3000               	movlw	0
  7303  1644  00B1               	movwf	?___ftmul+2
  7304  1645  2EF8               	goto	l734
  7305  1646                     l3555:
  7306  1646  083E               	movf	___ftmul@sign,w
  7307  1647  3E7B               	addlw	123
  7308  1648  00B5               	movwf	??___ftmul
  7309  1649  0835               	movf	??___ftmul,w
  7310  164A  07B9               	addwf	___ftmul@exp,f
  7311  164B  082F               	movf	___ftmul@f1,w
  7312  164C  00B5               	movwf	??___ftmul
  7313  164D  0830               	movf	___ftmul@f1+1,w
  7314  164E  00B6               	movwf	??___ftmul+1
  7315  164F  0831               	movf	___ftmul@f1+2,w
  7316  1650  00B7               	movwf	??___ftmul+2
  7317  1651  3010               	movlw	16
  7318  1652                     u5455:
  7319  1652  1003               	clrc
  7320  1653  0CB7               	rrf	??___ftmul+2,f
  7321  1654  0CB6               	rrf	??___ftmul+1,f
  7322  1655  0CB5               	rrf	??___ftmul,f
  7323  1656                     u5450:
  7324  1656  3EFF               	addlw	-1
  7325  1657  1D03               	skipz
  7326  1658  2E52               	goto	u5455
  7327  1659  0835               	movf	??___ftmul,w
  7328  165A  00B8               	movwf	??___ftmul+3
  7329  165B  0838               	movf	??___ftmul+3,w
  7330  165C  00BE               	movwf	___ftmul@sign
  7331  165D  0832               	movf	___ftmul@f2,w
  7332  165E  00B5               	movwf	??___ftmul
  7333  165F  0833               	movf	___ftmul@f2+1,w
  7334  1660  00B6               	movwf	??___ftmul+1
  7335  1661  0834               	movf	___ftmul@f2+2,w
  7336  1662  00B7               	movwf	??___ftmul+2
  7337  1663  3010               	movlw	16
  7338  1664                     u5465:
  7339  1664  1003               	clrc
  7340  1665  0CB7               	rrf	??___ftmul+2,f
  7341  1666  0CB6               	rrf	??___ftmul+1,f
  7342  1667  0CB5               	rrf	??___ftmul,f
  7343  1668                     u5460:
  7344  1668  3EFF               	addlw	-1
  7345  1669  1D03               	skipz
  7346  166A  2E64               	goto	u5465
  7347  166B  0835               	movf	??___ftmul,w
  7348  166C  00B8               	movwf	??___ftmul+3
  7349  166D  0838               	movf	??___ftmul+3,w
  7350  166E  06BE               	xorwf	___ftmul@sign,f
  7351  166F  3080               	movlw	128
  7352  1670  00B5               	movwf	??___ftmul
  7353  1671  0835               	movf	??___ftmul,w
  7354  1672  05BE               	andwf	___ftmul@sign,f
  7355  1673                     l3557:
  7356  1673  17B0               	bsf	___ftmul@f1+1,7
  7357  1674                     l3559:
  7358  1674  17B3               	bsf	___ftmul@f2+1,7
  7359  1675                     l3561:
  7360  1675  30FF               	movlw	255
  7361  1676  05B2               	andwf	___ftmul@f2,f
  7362  1677  30FF               	movlw	255
  7363  1678  05B3               	andwf	___ftmul@f2+1,f
  7364  1679  3000               	movlw	0
  7365  167A  05B4               	andwf	___ftmul@f2+2,f
  7366  167B                     l3563:
  7367  167B  3000               	movlw	0
  7368  167C  00BA               	movwf	___ftmul@f3_as_product
  7369  167D  3000               	movlw	0
  7370  167E  00BB               	movwf	___ftmul@f3_as_product+1
  7371  167F  3000               	movlw	0
  7372  1680  00BC               	movwf	___ftmul@f3_as_product+2
  7373  1681                     l3565:
  7374  1681  3007               	movlw	7
  7375  1682  00B5               	movwf	??___ftmul
  7376  1683  0835               	movf	??___ftmul,w
  7377  1684  00BD               	movwf	___ftmul@cntr
  7378  1685                     l3567:
  7379  1685  1C2F               	btfss	___ftmul@f1,0
  7380  1686  2E88               	goto	u5471
  7381  1687  2E89               	goto	u5470
  7382  1688                     u5471:
  7383  1688  2E99               	goto	l3571
  7384  1689                     u5470:
  7385  1689                     l3569:
  7386  1689  0832               	movf	___ftmul@f2,w
  7387  168A  07BA               	addwf	___ftmul@f3_as_product,f
  7388  168B  0833               	movf	___ftmul@f2+1,w
  7389  168C  1103               	clrz
  7390  168D  1803               	skipnc
  7391  168E  0A33               	incf	___ftmul@f2+1,w
  7392  168F  1903               	skipnz
  7393  1690  2E92               	goto	u5481
  7394  1691  07BB               	addwf	___ftmul@f3_as_product+1,f
  7395  1692                     u5481:
  7396  1692  0834               	movf	___ftmul@f2+2,w
  7397  1693  1103               	clrz
  7398  1694  1803               	skipnc
  7399  1695  0A34               	incf	___ftmul@f2+2,w
  7400  1696  1903               	skipnz
  7401  1697  2E99               	goto	u5482
  7402  1698  07BC               	addwf	___ftmul@f3_as_product+2,f
  7403  1699                     u5482:
  7404  1699                     l3571:
  7405  1699  3001               	movlw	1
  7406  169A                     u5495:
  7407  169A  1003               	clrc
  7408  169B  0CB1               	rrf	___ftmul@f1+2,f
  7409  169C  0CB0               	rrf	___ftmul@f1+1,f
  7410  169D  0CAF               	rrf	___ftmul@f1,f
  7411  169E  3EFF               	addlw	-1
  7412  169F  1D03               	skipz
  7413  16A0  2E9A               	goto	u5495
  7414  16A1                     l3573:
  7415  16A1  3001               	movlw	1
  7416  16A2                     u5505:
  7417  16A2  1003               	clrc
  7418  16A3  0DB2               	rlf	___ftmul@f2,f
  7419  16A4  0DB3               	rlf	___ftmul@f2+1,f
  7420  16A5  0DB4               	rlf	___ftmul@f2+2,f
  7421  16A6  3EFF               	addlw	-1
  7422  16A7  1D03               	skipz
  7423  16A8  2EA2               	goto	u5505
  7424  16A9                     l3575:
  7425  16A9  3001               	movlw	1
  7426  16AA  02BD               	subwf	___ftmul@cntr,f
  7427  16AB  1D03               	btfss	3,2
  7428  16AC  2EAE               	goto	u5511
  7429  16AD  2EAF               	goto	u5510
  7430  16AE                     u5511:
  7431  16AE  2E85               	goto	l3567
  7432  16AF                     u5510:
  7433  16AF                     l3577:
  7434  16AF  3009               	movlw	9
  7435  16B0  00B5               	movwf	??___ftmul
  7436  16B1  0835               	movf	??___ftmul,w
  7437  16B2  00BD               	movwf	___ftmul@cntr
  7438  16B3                     l3579:
  7439  16B3  1C2F               	btfss	___ftmul@f1,0
  7440  16B4  2EB6               	goto	u5521
  7441  16B5  2EB7               	goto	u5520
  7442  16B6                     u5521:
  7443  16B6  2EC7               	goto	l3583
  7444  16B7                     u5520:
  7445  16B7                     l3581:
  7446  16B7  0832               	movf	___ftmul@f2,w
  7447  16B8  07BA               	addwf	___ftmul@f3_as_product,f
  7448  16B9  0833               	movf	___ftmul@f2+1,w
  7449  16BA  1103               	clrz
  7450  16BB  1803               	skipnc
  7451  16BC  0A33               	incf	___ftmul@f2+1,w
  7452  16BD  1903               	skipnz
  7453  16BE  2EC0               	goto	u5531
  7454  16BF  07BB               	addwf	___ftmul@f3_as_product+1,f
  7455  16C0                     u5531:
  7456  16C0  0834               	movf	___ftmul@f2+2,w
  7457  16C1  1103               	clrz
  7458  16C2  1803               	skipnc
  7459  16C3  0A34               	incf	___ftmul@f2+2,w
  7460  16C4  1903               	skipnz
  7461  16C5  2EC7               	goto	u5532
  7462  16C6  07BC               	addwf	___ftmul@f3_as_product+2,f
  7463  16C7                     u5532:
  7464  16C7                     l3583:
  7465  16C7  3001               	movlw	1
  7466  16C8                     u5545:
  7467  16C8  1003               	clrc
  7468  16C9  0CB1               	rrf	___ftmul@f1+2,f
  7469  16CA  0CB0               	rrf	___ftmul@f1+1,f
  7470  16CB  0CAF               	rrf	___ftmul@f1,f
  7471  16CC  3EFF               	addlw	-1
  7472  16CD  1D03               	skipz
  7473  16CE  2EC8               	goto	u5545
  7474  16CF                     l3585:
  7475  16CF  3001               	movlw	1
  7476  16D0                     u5555:
  7477  16D0  1003               	clrc
  7478  16D1  0CBC               	rrf	___ftmul@f3_as_product+2,f
  7479  16D2  0CBB               	rrf	___ftmul@f3_as_product+1,f
  7480  16D3  0CBA               	rrf	___ftmul@f3_as_product,f
  7481  16D4  3EFF               	addlw	-1
  7482  16D5  1D03               	skipz
  7483  16D6  2ED0               	goto	u5555
  7484  16D7                     l3587:
  7485  16D7  3001               	movlw	1
  7486  16D8  02BD               	subwf	___ftmul@cntr,f
  7487  16D9  1D03               	btfss	3,2
  7488  16DA  2EDC               	goto	u5561
  7489  16DB  2EDD               	goto	u5560
  7490  16DC                     u5561:
  7491  16DC  2EB3               	goto	l3579
  7492  16DD                     u5560:
  7493  16DD                     l3589:
  7494  16DD  083A               	movf	___ftmul@f3_as_product,w
  7495  16DE  00F3               	movwf	___ftpack@arg
  7496  16DF  083B               	movf	___ftmul@f3_as_product+1,w
  7497  16E0  00F4               	movwf	___ftpack@arg+1
  7498  16E1  083C               	movf	___ftmul@f3_as_product+2,w
  7499  16E2  00F5               	movwf	___ftpack@arg+2
  7500  16E3  0839               	movf	___ftmul@exp,w
  7501  16E4  00B5               	movwf	??___ftmul
  7502  16E5  0835               	movf	??___ftmul,w
  7503  16E6  00F6               	movwf	___ftpack@exp
  7504  16E7  083E               	movf	___ftmul@sign,w
  7505  16E8  00B6               	movwf	??___ftmul+1
  7506  16E9  0836               	movf	??___ftmul+1,w
  7507  16EA  00F7               	movwf	___ftpack@sign
  7508  16EB  160A  118A  2223  160A  118A  	fcall	___ftpack
  7509  16F0  0873               	movf	?___ftpack,w
  7510  16F1  1283               	bcf	3,5	;RP0=0, select bank0
  7511  16F2  1303               	bcf	3,6	;RP1=0, select bank0
  7512  16F3  00AF               	movwf	?___ftmul
  7513  16F4  0874               	movf	?___ftpack+1,w
  7514  16F5  00B0               	movwf	?___ftmul+1
  7515  16F6  0875               	movf	?___ftpack+2,w
  7516  16F7  00B1               	movwf	?___ftmul+2
  7517  16F8                     l734:
  7518  16F8  0008               	return
  7519  16F9                     __end_of___ftmul:
  7520                           
  7521                           	psect	text30
  7522  073C                     __ptext30:	
  7523 ;; *************** function ___ftdiv *****************
  7524 ;; Defined at:
  7525 ;;		line 56 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\ftdiv.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;  f2              3   31[BANK0 ] float 
  7528 ;;  f1              3   34[BANK0 ] float 
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;  f3              3   42[BANK0 ] float 
  7531 ;;  sign            1   46[BANK0 ] unsigned char 
  7532 ;;  exp             1   45[BANK0 ] unsigned char 
  7533 ;;  cntr            1   41[BANK0 ] unsigned char 
  7534 ;; Return value:  Size  Location     Type
  7535 ;;                  3   31[BANK0 ] float 
  7536 ;; Registers used:
  7537 ;;		wreg, status,2, status,0, pclath, cstack
  7538 ;; Tracked objects:
  7539 ;;		On entry : 0/0
  7540 ;;		On exit  : 0/0
  7541 ;;		Unchanged: 0/0
  7542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7543 ;;      Params:         0       6       0       0       0
  7544 ;;      Locals:         0       6       0       0       0
  7545 ;;      Temps:          0       4       0       0       0
  7546 ;;      Totals:         0      16       0       0       0
  7547 ;;Total ram usage:       16 bytes
  7548 ;; Hardware stack levels used:    1
  7549 ;; Hardware stack levels required when called:    3
  7550 ;; This function calls:
  7551 ;;		___ftpack
  7552 ;; This function is called by:
  7553 ;;		_aht_GetHumidity
  7554 ;;		_aht_GetTemperature
  7555 ;; This function uses a non-reentrant model
  7556 ;;
  7557                           
  7558                           
  7559                           ;psect for function ___ftdiv
  7560  073C                     ___ftdiv:
  7561  073C                     l3909:	
  7562                           ;incstack = 0
  7563                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7564                           
  7565  073C  1283               	bcf	3,5	;RP0=0, select bank0
  7566  073D  1303               	bcf	3,6	;RP1=0, select bank0
  7567  073E  0842               	movf	___ftdiv@f1,w
  7568  073F  00C5               	movwf	??___ftdiv
  7569  0740  0843               	movf	___ftdiv@f1+1,w
  7570  0741  00C6               	movwf	??___ftdiv+1
  7571  0742  0844               	movf	___ftdiv@f1+2,w
  7572  0743  00C7               	movwf	??___ftdiv+2
  7573  0744  1003               	clrc
  7574  0745  0D46               	rlf	??___ftdiv+1,w
  7575  0746  0D47               	rlf	??___ftdiv+2,w
  7576  0747  00C8               	movwf	??___ftdiv+3
  7577  0748  0848               	movf	??___ftdiv+3,w
  7578  0749  00CD               	movwf	___ftdiv@exp
  7579  074A  084D               	movf	___ftdiv@exp,w
  7580  074B  1D03               	btfss	3,2
  7581  074C  2F4E               	goto	u6311
  7582  074D  2F4F               	goto	u6310
  7583  074E                     u6311:
  7584  074E  2F56               	goto	l3915
  7585  074F                     u6310:
  7586  074F                     l3911:
  7587  074F  3000               	movlw	0
  7588  0750  00BF               	movwf	?___ftdiv
  7589  0751  3000               	movlw	0
  7590  0752  00C0               	movwf	?___ftdiv+1
  7591  0753  3000               	movlw	0
  7592  0754  00C1               	movwf	?___ftdiv+2
  7593  0755  2FFD               	goto	l702
  7594  0756                     l3915:
  7595  0756  083F               	movf	___ftdiv@f2,w
  7596  0757  00C5               	movwf	??___ftdiv
  7597  0758  0840               	movf	___ftdiv@f2+1,w
  7598  0759  00C6               	movwf	??___ftdiv+1
  7599  075A  0841               	movf	___ftdiv@f2+2,w
  7600  075B  00C7               	movwf	??___ftdiv+2
  7601  075C  1003               	clrc
  7602  075D  0D46               	rlf	??___ftdiv+1,w
  7603  075E  0D47               	rlf	??___ftdiv+2,w
  7604  075F  00C8               	movwf	??___ftdiv+3
  7605  0760  0848               	movf	??___ftdiv+3,w
  7606  0761  00CE               	movwf	___ftdiv@sign
  7607  0762  084E               	movf	___ftdiv@sign,w
  7608  0763  1D03               	btfss	3,2
  7609  0764  2F66               	goto	u6321
  7610  0765  2F67               	goto	u6320
  7611  0766                     u6321:
  7612  0766  2F6E               	goto	l3921
  7613  0767                     u6320:
  7614  0767                     l3917:
  7615  0767  3000               	movlw	0
  7616  0768  00BF               	movwf	?___ftdiv
  7617  0769  3000               	movlw	0
  7618  076A  00C0               	movwf	?___ftdiv+1
  7619  076B  3000               	movlw	0
  7620  076C  00C1               	movwf	?___ftdiv+2
  7621  076D  2FFD               	goto	l702
  7622  076E                     l3921:
  7623  076E  3000               	movlw	0
  7624  076F  00CA               	movwf	___ftdiv@f3
  7625  0770  3000               	movlw	0
  7626  0771  00CB               	movwf	___ftdiv@f3+1
  7627  0772  3000               	movlw	0
  7628  0773  00CC               	movwf	___ftdiv@f3+2
  7629  0774                     l3923:
  7630  0774  3089               	movlw	137
  7631  0775  074E               	addwf	___ftdiv@sign,w
  7632  0776  00C5               	movwf	??___ftdiv
  7633  0777  0845               	movf	??___ftdiv,w
  7634  0778  02CD               	subwf	___ftdiv@exp,f
  7635  0779                     l3925:
  7636  0779  0842               	movf	___ftdiv@f1,w
  7637  077A  00C5               	movwf	??___ftdiv
  7638  077B  0843               	movf	___ftdiv@f1+1,w
  7639  077C  00C6               	movwf	??___ftdiv+1
  7640  077D  0844               	movf	___ftdiv@f1+2,w
  7641  077E  00C7               	movwf	??___ftdiv+2
  7642  077F  3010               	movlw	16
  7643  0780                     u6335:
  7644  0780  1003               	clrc
  7645  0781  0CC7               	rrf	??___ftdiv+2,f
  7646  0782  0CC6               	rrf	??___ftdiv+1,f
  7647  0783  0CC5               	rrf	??___ftdiv,f
  7648  0784                     u6330:
  7649  0784  3EFF               	addlw	-1
  7650  0785  1D03               	skipz
  7651  0786  2F80               	goto	u6335
  7652  0787  0845               	movf	??___ftdiv,w
  7653  0788  00C8               	movwf	??___ftdiv+3
  7654  0789  0848               	movf	??___ftdiv+3,w
  7655  078A  00CE               	movwf	___ftdiv@sign
  7656  078B                     l3927:
  7657  078B  083F               	movf	___ftdiv@f2,w
  7658  078C  00C5               	movwf	??___ftdiv
  7659  078D  0840               	movf	___ftdiv@f2+1,w
  7660  078E  00C6               	movwf	??___ftdiv+1
  7661  078F  0841               	movf	___ftdiv@f2+2,w
  7662  0790  00C7               	movwf	??___ftdiv+2
  7663  0791  3010               	movlw	16
  7664  0792                     u6345:
  7665  0792  1003               	clrc
  7666  0793  0CC7               	rrf	??___ftdiv+2,f
  7667  0794  0CC6               	rrf	??___ftdiv+1,f
  7668  0795  0CC5               	rrf	??___ftdiv,f
  7669  0796                     u6340:
  7670  0796  3EFF               	addlw	-1
  7671  0797  1D03               	skipz
  7672  0798  2F92               	goto	u6345
  7673  0799  0845               	movf	??___ftdiv,w
  7674  079A  00C8               	movwf	??___ftdiv+3
  7675  079B  0848               	movf	??___ftdiv+3,w
  7676  079C  06CE               	xorwf	___ftdiv@sign,f
  7677  079D                     l3929:
  7678  079D  3080               	movlw	128
  7679  079E  00C5               	movwf	??___ftdiv
  7680  079F  0845               	movf	??___ftdiv,w
  7681  07A0  05CE               	andwf	___ftdiv@sign,f
  7682  07A1                     l3931:
  7683  07A1  17C3               	bsf	___ftdiv@f1+1,7
  7684  07A2  30FF               	movlw	255
  7685  07A3  05C2               	andwf	___ftdiv@f1,f
  7686  07A4  30FF               	movlw	255
  7687  07A5  05C3               	andwf	___ftdiv@f1+1,f
  7688  07A6  3000               	movlw	0
  7689  07A7  05C4               	andwf	___ftdiv@f1+2,f
  7690  07A8                     l3933:
  7691  07A8  17C0               	bsf	___ftdiv@f2+1,7
  7692  07A9  30FF               	movlw	255
  7693  07AA  05BF               	andwf	___ftdiv@f2,f
  7694  07AB  30FF               	movlw	255
  7695  07AC  05C0               	andwf	___ftdiv@f2+1,f
  7696  07AD  3000               	movlw	0
  7697  07AE  05C1               	andwf	___ftdiv@f2+2,f
  7698  07AF  3018               	movlw	24
  7699  07B0  00C5               	movwf	??___ftdiv
  7700  07B1  0845               	movf	??___ftdiv,w
  7701  07B2  00C9               	movwf	___ftdiv@cntr
  7702  07B3                     l3935:
  7703  07B3  3001               	movlw	1
  7704  07B4                     u6355:
  7705  07B4  1003               	clrc
  7706  07B5  0DCA               	rlf	___ftdiv@f3,f
  7707  07B6  0DCB               	rlf	___ftdiv@f3+1,f
  7708  07B7  0DCC               	rlf	___ftdiv@f3+2,f
  7709  07B8  3EFF               	addlw	-1
  7710  07B9  1D03               	skipz
  7711  07BA  2FB4               	goto	u6355
  7712  07BB                     l3937:
  7713  07BB  0841               	movf	___ftdiv@f2+2,w
  7714  07BC  0244               	subwf	___ftdiv@f1+2,w
  7715  07BD  1D03               	skipz
  7716  07BE  2FC5               	goto	u6365
  7717  07BF  0840               	movf	___ftdiv@f2+1,w
  7718  07C0  0243               	subwf	___ftdiv@f1+1,w
  7719  07C1  1D03               	skipz
  7720  07C2  2FC5               	goto	u6365
  7721  07C3  083F               	movf	___ftdiv@f2,w
  7722  07C4  0242               	subwf	___ftdiv@f1,w
  7723  07C5                     u6365:
  7724  07C5  1C03               	skipc
  7725  07C6  2FC8               	goto	u6361
  7726  07C7  2FC9               	goto	u6360
  7727  07C8                     u6361:
  7728  07C8  2FD4               	goto	l3943
  7729  07C9                     u6360:
  7730  07C9                     l3939:
  7731  07C9  083F               	movf	___ftdiv@f2,w
  7732  07CA  02C2               	subwf	___ftdiv@f1,f
  7733  07CB  0840               	movf	___ftdiv@f2+1,w
  7734  07CC  1C03               	skipc
  7735  07CD  0F40               	incfsz	___ftdiv@f2+1,w
  7736  07CE  02C3               	subwf	___ftdiv@f1+1,f
  7737  07CF  0841               	movf	___ftdiv@f2+2,w
  7738  07D0  1C03               	skipc
  7739  07D1  0A41               	incf	___ftdiv@f2+2,w
  7740  07D2  02C4               	subwf	___ftdiv@f1+2,f
  7741  07D3                     l3941:
  7742  07D3  144A               	bsf	___ftdiv@f3,0
  7743  07D4                     l3943:
  7744  07D4  3001               	movlw	1
  7745  07D5                     u6375:
  7746  07D5  1003               	clrc
  7747  07D6  0DC2               	rlf	___ftdiv@f1,f
  7748  07D7  0DC3               	rlf	___ftdiv@f1+1,f
  7749  07D8  0DC4               	rlf	___ftdiv@f1+2,f
  7750  07D9  3EFF               	addlw	-1
  7751  07DA  1D03               	skipz
  7752  07DB  2FD5               	goto	u6375
  7753  07DC                     l3945:
  7754  07DC  3001               	movlw	1
  7755  07DD  02C9               	subwf	___ftdiv@cntr,f
  7756  07DE  1D03               	btfss	3,2
  7757  07DF  2FE1               	goto	u6381
  7758  07E0  2FE2               	goto	u6380
  7759  07E1                     u6381:
  7760  07E1  2FB3               	goto	l3935
  7761  07E2                     u6380:
  7762  07E2                     l3947:
  7763  07E2  084A               	movf	___ftdiv@f3,w
  7764  07E3  00F3               	movwf	___ftpack@arg
  7765  07E4  084B               	movf	___ftdiv@f3+1,w
  7766  07E5  00F4               	movwf	___ftpack@arg+1
  7767  07E6  084C               	movf	___ftdiv@f3+2,w
  7768  07E7  00F5               	movwf	___ftpack@arg+2
  7769  07E8  084D               	movf	___ftdiv@exp,w
  7770  07E9  00C5               	movwf	??___ftdiv
  7771  07EA  0845               	movf	??___ftdiv,w
  7772  07EB  00F6               	movwf	___ftpack@exp
  7773  07EC  084E               	movf	___ftdiv@sign,w
  7774  07ED  00C6               	movwf	??___ftdiv+1
  7775  07EE  0846               	movf	??___ftdiv+1,w
  7776  07EF  00F7               	movwf	___ftpack@sign
  7777  07F0  160A  118A  2223  120A  118A  	fcall	___ftpack
  7778  07F5  0873               	movf	?___ftpack,w
  7779  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  7780  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  7781  07F8  00BF               	movwf	?___ftdiv
  7782  07F9  0874               	movf	?___ftpack+1,w
  7783  07FA  00C0               	movwf	?___ftdiv+1
  7784  07FB  0875               	movf	?___ftpack+2,w
  7785  07FC  00C1               	movwf	?___ftdiv+2
  7786  07FD                     l702:
  7787  07FD  0008               	return
  7788  07FE                     __end_of___ftdiv:
  7789                           
  7790                           	psect	text31
  7791  1223                     __ptext31:	
  7792 ;; *************** function ___ftpack *****************
  7793 ;; Defined at:
  7794 ;;		line 62 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\float.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;  arg             3    3[COMMON] unsigned um
  7797 ;;  exp             1    6[COMMON] unsigned char 
  7798 ;;  sign            1    7[COMMON] unsigned char 
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;		None
  7801 ;; Return value:  Size  Location     Type
  7802 ;;                  3    3[COMMON] float 
  7803 ;; Registers used:
  7804 ;;		wreg, status,2, status,0
  7805 ;; Tracked objects:
  7806 ;;		On entry : 0/0
  7807 ;;		On exit  : 0/0
  7808 ;;		Unchanged: 0/0
  7809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7810 ;;      Params:         5       0       0       0       0
  7811 ;;      Locals:         0       0       0       0       0
  7812 ;;      Temps:          0       3       0       0       0
  7813 ;;      Totals:         5       3       0       0       0
  7814 ;;Total ram usage:        8 bytes
  7815 ;; Hardware stack levels used:    1
  7816 ;; Hardware stack levels required when called:    2
  7817 ;; This function calls:
  7818 ;;		Nothing
  7819 ;; This function is called by:
  7820 ;;		___ftadd
  7821 ;;		___ftdiv
  7822 ;;		___ftmul
  7823 ;;		___lltoft
  7824 ;; This function uses a non-reentrant model
  7825 ;;
  7826                           
  7827                           
  7828                           ;psect for function ___ftpack
  7829  1223                     ___ftpack:
  7830  1223                     l3331:	
  7831                           ;incstack = 0
  7832                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7833                           
  7834  1223  0876               	movf	___ftpack@exp,w
  7835  1224  1903               	btfsc	3,2
  7836  1225  2A27               	goto	u4871
  7837  1226  2A28               	goto	u4870
  7838  1227                     u4871:
  7839  1227  2A2F               	goto	l3335
  7840  1228                     u4870:
  7841  1228                     l3333:
  7842  1228  0875               	movf	___ftpack@arg+2,w
  7843  1229  0474               	iorwf	___ftpack@arg+1,w
  7844  122A  0473               	iorwf	___ftpack@arg,w
  7845  122B  1D03               	skipz
  7846  122C  2A2E               	goto	u4881
  7847  122D  2A2F               	goto	u4880
  7848  122E                     u4881:
  7849  122E  2A44               	goto	l3341
  7850  122F                     u4880:
  7851  122F                     l3335:
  7852  122F  3000               	movlw	0
  7853  1230  00F3               	movwf	?___ftpack
  7854  1231  3000               	movlw	0
  7855  1232  00F4               	movwf	?___ftpack+1
  7856  1233  3000               	movlw	0
  7857  1234  00F5               	movwf	?___ftpack+2
  7858  1235  2AA4               	goto	l650
  7859  1236                     l3339:
  7860  1236  3001               	movlw	1
  7861  1237  1283               	bcf	3,5	;RP0=0, select bank0
  7862  1238  1303               	bcf	3,6	;RP1=0, select bank0
  7863  1239  00A0               	movwf	??___ftpack
  7864  123A  0820               	movf	??___ftpack,w
  7865  123B  07F6               	addwf	___ftpack@exp,f
  7866  123C  3001               	movlw	1
  7867  123D                     u4895:
  7868  123D  1003               	clrc
  7869  123E  0CF5               	rrf	___ftpack@arg+2,f
  7870  123F  0CF4               	rrf	___ftpack@arg+1,f
  7871  1240  0CF3               	rrf	___ftpack@arg,f
  7872  1241  3EFF               	addlw	-1
  7873  1242  1D03               	skipz
  7874  1243  2A3D               	goto	u4895
  7875  1244                     l3341:
  7876  1244  30FE               	movlw	254
  7877  1245  0575               	andwf	___ftpack@arg+2,w
  7878  1246  1D03               	btfss	3,2
  7879  1247  2A49               	goto	u4901
  7880  1248  2A4A               	goto	u4900
  7881  1249                     u4901:
  7882  1249  2A36               	goto	l3339
  7883  124A                     u4900:
  7884  124A  2A63               	goto	l654
  7885  124B                     l3343:
  7886  124B  3001               	movlw	1
  7887  124C  1283               	bcf	3,5	;RP0=0, select bank0
  7888  124D  1303               	bcf	3,6	;RP1=0, select bank0
  7889  124E  00A0               	movwf	??___ftpack
  7890  124F  0820               	movf	??___ftpack,w
  7891  1250  07F6               	addwf	___ftpack@exp,f
  7892  1251                     l3345:
  7893  1251  3001               	movlw	1
  7894  1252  07F3               	addwf	___ftpack@arg,f
  7895  1253  3000               	movlw	0
  7896  1254  1803               	skipnc
  7897  1255  3001               	movlw	1
  7898  1256  07F4               	addwf	___ftpack@arg+1,f
  7899  1257  3000               	movlw	0
  7900  1258  1803               	skipnc
  7901  1259  3001               	movlw	1
  7902  125A  07F5               	addwf	___ftpack@arg+2,f
  7903  125B                     l3347:
  7904  125B  3001               	movlw	1
  7905  125C                     u4915:
  7906  125C  1003               	clrc
  7907  125D  0CF5               	rrf	___ftpack@arg+2,f
  7908  125E  0CF4               	rrf	___ftpack@arg+1,f
  7909  125F  0CF3               	rrf	___ftpack@arg,f
  7910  1260  3EFF               	addlw	-1
  7911  1261  1D03               	skipz
  7912  1262  2A5C               	goto	u4915
  7913  1263                     l654:
  7914  1263  30FF               	movlw	255
  7915  1264  0575               	andwf	___ftpack@arg+2,w
  7916  1265  1D03               	btfss	3,2
  7917  1266  2A68               	goto	u4921
  7918  1267  2A69               	goto	u4920
  7919  1268                     u4921:
  7920  1268  2A4B               	goto	l3343
  7921  1269                     u4920:
  7922  1269  2A74               	goto	l3351
  7923  126A                     l3349:
  7924  126A  3001               	movlw	1
  7925  126B  02F6               	subwf	___ftpack@exp,f
  7926  126C  3001               	movlw	1
  7927  126D                     u4935:
  7928  126D  1003               	clrc
  7929  126E  0DF3               	rlf	___ftpack@arg,f
  7930  126F  0DF4               	rlf	___ftpack@arg+1,f
  7931  1270  0DF5               	rlf	___ftpack@arg+2,f
  7932  1271  3EFF               	addlw	-1
  7933  1272  1D03               	skipz
  7934  1273  2A6D               	goto	u4935
  7935  1274                     l3351:
  7936  1274  1BF4               	btfsc	___ftpack@arg+1,7
  7937  1275  2A77               	goto	u4941
  7938  1276  2A78               	goto	u4940
  7939  1277                     u4941:
  7940  1277  2A7E               	goto	l661
  7941  1278                     u4940:
  7942  1278                     l3353:
  7943  1278  3002               	movlw	2
  7944  1279  0276               	subwf	___ftpack@exp,w
  7945  127A  1803               	skipnc
  7946  127B  2A7D               	goto	u4951
  7947  127C  2A7E               	goto	u4950
  7948  127D                     u4951:
  7949  127D  2A6A               	goto	l3349
  7950  127E                     u4950:
  7951  127E                     l661:
  7952  127E  1876               	btfsc	___ftpack@exp,0
  7953  127F  2A81               	goto	u4961
  7954  1280  2A82               	goto	u4960
  7955  1281                     u4961:
  7956  1281  2A88               	goto	l662
  7957  1282                     u4960:
  7958  1282                     l3355:
  7959  1282  30FF               	movlw	255
  7960  1283  05F3               	andwf	___ftpack@arg,f
  7961  1284  307F               	movlw	127
  7962  1285  05F4               	andwf	___ftpack@arg+1,f
  7963  1286  30FF               	movlw	255
  7964  1287  05F5               	andwf	___ftpack@arg+2,f
  7965  1288                     l662:
  7966  1288  1003               	clrc
  7967  1289  0CF6               	rrf	___ftpack@exp,f
  7968  128A                     l3357:
  7969  128A  0876               	movf	___ftpack@exp,w
  7970  128B  1283               	bcf	3,5	;RP0=0, select bank0
  7971  128C  1303               	bcf	3,6	;RP1=0, select bank0
  7972  128D  00A0               	movwf	??___ftpack
  7973  128E  01A1               	clrf	??___ftpack+1
  7974  128F  01A2               	clrf	??___ftpack+2
  7975  1290  3010               	movlw	16
  7976  1291                     u4975:
  7977  1291  1003               	clrc
  7978  1292  0DA0               	rlf	??___ftpack,f
  7979  1293  0DA1               	rlf	??___ftpack+1,f
  7980  1294  0DA2               	rlf	??___ftpack+2,f
  7981  1295                     u4970:
  7982  1295  3EFF               	addlw	-1
  7983  1296  1D03               	skipz
  7984  1297  2A91               	goto	u4975
  7985  1298  0820               	movf	??___ftpack,w
  7986  1299  04F3               	iorwf	___ftpack@arg,f
  7987  129A  0821               	movf	??___ftpack+1,w
  7988  129B  04F4               	iorwf	___ftpack@arg+1,f
  7989  129C  0822               	movf	??___ftpack+2,w
  7990  129D  04F5               	iorwf	___ftpack@arg+2,f
  7991  129E                     l3359:
  7992  129E  0877               	movf	___ftpack@sign,w
  7993  129F  1903               	btfsc	3,2
  7994  12A0  2AA2               	goto	u4981
  7995  12A1  2AA3               	goto	u4980
  7996  12A2                     u4981:
  7997  12A2  2AA4               	goto	l663
  7998  12A3                     u4980:
  7999  12A3                     l3361:
  8000  12A3  17F5               	bsf	___ftpack@arg+2,7
  8001  12A4                     l663:
  8002  12A4                     l650:
  8003  12A4  0008               	return
  8004  12A5                     __end_of___ftpack:
  8005                           
  8006                           	psect	text32
  8007  1D7D                     __ptext32:	
  8008 ;; *************** function _Write_USART_String *****************
  8009 ;; Defined at:
  8010 ;;		line 34 in file "USART.c"
  8011 ;; Parameters:    Size  Location     Type
  8012 ;;  a               1    wreg     PTR unsigned char 
  8013 ;;		 -> STR_2(12), 
  8014 ;; Auto vars:     Size  Location     Type
  8015 ;;  a               1    5[COMMON] PTR unsigned char 
  8016 ;;		 -> STR_2(12), 
  8017 ;;  i               1    6[COMMON] unsigned char 
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  1    wreg      void 
  8020 ;; Registers used:
  8021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8027 ;;      Params:         0       0       0       0       0
  8028 ;;      Locals:         2       0       0       0       0
  8029 ;;      Temps:          1       0       0       0       0
  8030 ;;      Totals:         3       0       0       0       0
  8031 ;;Total ram usage:        3 bytes
  8032 ;; Hardware stack levels used:    1
  8033 ;; Hardware stack levels required when called:    3
  8034 ;; This function calls:
  8035 ;;		_Write_USART
  8036 ;; This function is called by:
  8037 ;;		_main
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041                           
  8042                           ;psect for function _Write_USART_String
  8043  1D7D                     _Write_USART_String:
  8044                           
  8045                           ;incstack = 0
  8046                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8047                           ;Write_USART_String@a stored from wreg
  8048  1D7D  00F5               	movwf	Write_USART_String@a
  8049  1D7E                     l2967:
  8050                           
  8051                           ;USART.c: 35:     uint8_t i;;USART.c: 36:     for(i=0;a[i]!='\0';i++){
  8052  1D7E  01F6               	clrf	Write_USART_String@i
  8053  1D7F  2D91               	goto	l2973
  8054  1D80                     l2969:
  8055                           
  8056                           ;USART.c: 37:         Write_USART(a[i]);
  8057  1D80  0876               	movf	Write_USART_String@i,w
  8058  1D81  0775               	addwf	Write_USART_String@a,w
  8059  1D82  0084               	movwf	4
  8060  1D83  160A  118A  2000  160A  158A  	fcall	stringdir
  8061  1D88  160A  158A  24FF  160A  158A  	fcall	_Write_USART
  8062  1D8D                     l2971:
  8063                           
  8064                           ;USART.c: 38:     }
  8065  1D8D  3001               	movlw	1
  8066  1D8E  00F4               	movwf	??_Write_USART_String
  8067  1D8F  0874               	movf	??_Write_USART_String,w
  8068  1D90  07F6               	addwf	Write_USART_String@i,f
  8069  1D91                     l2973:
  8070  1D91  0876               	movf	Write_USART_String@i,w
  8071  1D92  0775               	addwf	Write_USART_String@a,w
  8072  1D93  0084               	movwf	4
  8073  1D94  160A  118A  2000  160A  158A  	fcall	stringdir
  8074  1D99  3A00               	xorlw	0
  8075  1D9A  1D03               	skipz
  8076  1D9B  2D9D               	goto	u4361
  8077  1D9C  2D9E               	goto	u4360
  8078  1D9D                     u4361:
  8079  1D9D  2D80               	goto	l2969
  8080  1D9E                     u4360:
  8081  1D9E                     l163:
  8082  1D9E  0008               	return
  8083  1D9F                     __end_of_Write_USART_String:
  8084                           
  8085                           	psect	text33
  8086  1CFF                     __ptext33:	
  8087 ;; *************** function _Write_USART *****************
  8088 ;; Defined at:
  8089 ;;		line 30 in file "USART.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;  a               1    wreg     unsigned char 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;  a               1    3[COMMON] unsigned char 
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  1    wreg      void 
  8096 ;; Registers used:
  8097 ;;		wreg
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8103 ;;      Params:         0       0       0       0       0
  8104 ;;      Locals:         1       0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0
  8106 ;;      Totals:         1       0       0       0       0
  8107 ;;Total ram usage:        1 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:    2
  8110 ;; This function calls:
  8111 ;;		Nothing
  8112 ;; This function is called by:
  8113 ;;		_main
  8114 ;;		_Write_USART_String
  8115 ;; This function uses a non-reentrant model
  8116 ;;
  8117                           
  8118                           
  8119                           ;psect for function _Write_USART
  8120  1CFF                     _Write_USART:
  8121                           
  8122                           ;incstack = 0
  8123                           ; Regs used in _Write_USART: [wreg]
  8124                           ;Write_USART@a stored from wreg
  8125  1CFF  00F3               	movwf	Write_USART@a
  8126  1D00                     l2467:
  8127  1D00                     l154:	
  8128                           ;USART.c: 31:     while(!TRMT);
  8129                           
  8130  1D00  1683               	bsf	3,5	;RP0=1, select bank1
  8131  1D01  1303               	bcf	3,6	;RP1=0, select bank1
  8132  1D02  1C98               	btfss	24,1	;volatile
  8133  1D03  2D05               	goto	u3311
  8134  1D04  2D06               	goto	u3310
  8135  1D05                     u3311:
  8136  1D05  2D00               	goto	l154
  8137  1D06                     u3310:
  8138  1D06                     l2469:
  8139                           
  8140                           ;USART.c: 32:     TXREG=a;
  8141  1D06  0873               	movf	Write_USART@a,w
  8142  1D07  1283               	bcf	3,5	;RP0=0, select bank0
  8143  1D08  1303               	bcf	3,6	;RP1=0, select bank0
  8144  1D09  0099               	movwf	25	;volatile
  8145  1D0A                     l157:
  8146  1D0A  0008               	return
  8147  1D0B                     __end_of_Write_USART:
  8148                           
  8149                           	psect	text34
  8150  1538                     __ptext34:	
  8151 ;; *************** function _USART_Init *****************
  8152 ;; Defined at:
  8153 ;;		line 9 in file "USART.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;  baudrate        4   14[BANK0 ] const long 
  8156 ;; Auto vars:     Size  Location     Type
  8157 ;;  x               2    4[COMMON] unsigned int 
  8158 ;; Return value:  Size  Location     Type
  8159 ;;                  1    wreg      unsigned char 
  8160 ;; Registers used:
  8161 ;;		wreg, status,2, status,0, pclath, cstack
  8162 ;; Tracked objects:
  8163 ;;		On entry : 0/0
  8164 ;;		On exit  : 0/0
  8165 ;;		Unchanged: 0/0
  8166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8167 ;;      Params:         0       4       0       0       0
  8168 ;;      Locals:         2       0       0       0       0
  8169 ;;      Temps:          0      12       0       0       0
  8170 ;;      Totals:         2      16       0       0       0
  8171 ;;Total ram usage:       18 bytes
  8172 ;; Hardware stack levels used:    1
  8173 ;; Hardware stack levels required when called:    3
  8174 ;; This function calls:
  8175 ;;		___aldiv
  8176 ;; This function is called by:
  8177 ;;		_main
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           
  8182                           ;psect for function _USART_Init
  8183  1538                     _USART_Init:
  8184  1538                     l4009:	
  8185                           ;incstack = 0
  8186                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  8187                           
  8188                           
  8189                           ;USART.c: 10:   unsigned int x;;USART.c: 11:   x = (400000 - baudrate*64)/(baudrate*64);
  8190  1538  1283               	bcf	3,5	;RP0=0, select bank0
  8191  1539  1303               	bcf	3,6	;RP1=0, select bank0
  8192  153A  082E               	movf	USART_Init@baudrate,w
  8193  153B  00B2               	movwf	??_USART_Init
  8194  153C  082F               	movf	USART_Init@baudrate+1,w
  8195  153D  00B3               	movwf	??_USART_Init+1
  8196  153E  0830               	movf	USART_Init@baudrate+2,w
  8197  153F  00B4               	movwf	??_USART_Init+2
  8198  1540  0831               	movf	USART_Init@baudrate+3,w
  8199  1541  00B5               	movwf	??_USART_Init+3
  8200  1542  3006               	movlw	6
  8201  1543                     u6515:
  8202  1543  1003               	clrc
  8203  1544  0DB2               	rlf	??_USART_Init,f
  8204  1545  0DB3               	rlf	??_USART_Init+1,f
  8205  1546  0DB4               	rlf	??_USART_Init+2,f
  8206  1547  0DB5               	rlf	??_USART_Init+3,f
  8207  1548                     u6510:
  8208  1548  3EFF               	addlw	-1
  8209  1549  1D03               	skipz
  8210  154A  2D43               	goto	u6515
  8211  154B  0835               	movf	??_USART_Init+3,w
  8212  154C  00A3               	movwf	___aldiv@divisor+3
  8213  154D  0834               	movf	??_USART_Init+2,w
  8214  154E  00A2               	movwf	___aldiv@divisor+2
  8215  154F  0833               	movf	??_USART_Init+1,w
  8216  1550  00A1               	movwf	___aldiv@divisor+1
  8217  1551  0832               	movf	??_USART_Init,w
  8218  1552  00A0               	movwf	___aldiv@divisor
  8219  1553  082E               	movf	USART_Init@baudrate,w
  8220  1554  00B6               	movwf	??_USART_Init+4
  8221  1555  082F               	movf	USART_Init@baudrate+1,w
  8222  1556  00B7               	movwf	??_USART_Init+5
  8223  1557  0830               	movf	USART_Init@baudrate+2,w
  8224  1558  00B8               	movwf	??_USART_Init+6
  8225  1559  0831               	movf	USART_Init@baudrate+3,w
  8226  155A  00B9               	movwf	??_USART_Init+7
  8227  155B  3006               	movlw	6
  8228  155C                     u6525:
  8229  155C  1003               	clrc
  8230  155D  0DB6               	rlf	??_USART_Init+4,f
  8231  155E  0DB7               	rlf	??_USART_Init+5,f
  8232  155F  0DB8               	rlf	??_USART_Init+6,f
  8233  1560  0DB9               	rlf	??_USART_Init+7,f
  8234  1561                     u6520:
  8235  1561  3EFF               	addlw	-1
  8236  1562  1D03               	skipz
  8237  1563  2D5C               	goto	u6525
  8238  1564  3080               	movlw	128
  8239  1565  00BA               	movwf	??_USART_Init+8
  8240  1566  301A               	movlw	26
  8241  1567  00BB               	movwf	??_USART_Init+9
  8242  1568  3006               	movlw	6
  8243  1569  00BC               	movwf	??_USART_Init+10
  8244  156A  3000               	movlw	0
  8245  156B  00BD               	movwf	??_USART_Init+11
  8246  156C  0836               	movf	??_USART_Init+4,w
  8247  156D  02BA               	subwf	??_USART_Init+8,f
  8248  156E  0837               	movf	??_USART_Init+5,w
  8249  156F  1C03               	skipc
  8250  1570  0F37               	incfsz	??_USART_Init+5,w
  8251  1571  2D73               	goto	u6531
  8252  1572  2D74               	goto	u6532
  8253  1573                     u6531:
  8254  1573  02BB               	subwf	??_USART_Init+9,f
  8255  1574                     u6532:
  8256  1574  0838               	movf	??_USART_Init+6,w
  8257  1575  1C03               	skipc
  8258  1576  0F38               	incfsz	??_USART_Init+6,w
  8259  1577  2D79               	goto	u6533
  8260  1578  2D7A               	goto	u6534
  8261  1579                     u6533:
  8262  1579  02BC               	subwf	??_USART_Init+10,f
  8263  157A                     u6534:
  8264  157A  0839               	movf	??_USART_Init+7,w
  8265  157B  1C03               	skipc
  8266  157C  0F39               	incfsz	??_USART_Init+7,w
  8267  157D  2D7F               	goto	u6535
  8268  157E  2D80               	goto	u6536
  8269  157F                     u6535:
  8270  157F  02BD               	subwf	??_USART_Init+11,f
  8271  1580                     u6536:
  8272  1580  083D               	movf	??_USART_Init+11,w
  8273  1581  00A7               	movwf	___aldiv@dividend+3
  8274  1582  083C               	movf	??_USART_Init+10,w
  8275  1583  00A6               	movwf	___aldiv@dividend+2
  8276  1584  083B               	movf	??_USART_Init+9,w
  8277  1585  00A5               	movwf	___aldiv@dividend+1
  8278  1586  083A               	movf	??_USART_Init+8,w
  8279  1587  00A4               	movwf	___aldiv@dividend
  8280  1588  160A  118A  2331  160A  118A  	fcall	___aldiv
  8281  158D  1283               	bcf	3,5	;RP0=0, select bank0
  8282  158E  1303               	bcf	3,6	;RP1=0, select bank0
  8283  158F  0821               	movf	?___aldiv+1,w
  8284  1590  00F5               	movwf	USART_Init@x+1
  8285  1591  0820               	movf	?___aldiv,w
  8286  1592  00F4               	movwf	USART_Init@x
  8287  1593                     l4011:
  8288                           
  8289                           ;USART.c: 12:   if(x>255)
  8290  1593  3001               	movlw	1
  8291  1594  0275               	subwf	USART_Init@x+1,w
  8292  1595  3000               	movlw	0
  8293  1596  1903               	skipnz
  8294  1597  0274               	subwf	USART_Init@x,w
  8295  1598  1C03               	skipc
  8296  1599  2D9B               	goto	u6541
  8297  159A  2D9C               	goto	u6540
  8298  159B                     u6541:
  8299  159B  2DF8               	goto	l4017
  8300  159C                     u6540:
  8301  159C                     l4013:
  8302                           
  8303                           ;USART.c: 13:   {;USART.c: 14:     x = (400000 - baudrate*16)/(baudrate*16);
  8304  159C  082E               	movf	USART_Init@baudrate,w
  8305  159D  00B2               	movwf	??_USART_Init
  8306  159E  082F               	movf	USART_Init@baudrate+1,w
  8307  159F  00B3               	movwf	??_USART_Init+1
  8308  15A0  0830               	movf	USART_Init@baudrate+2,w
  8309  15A1  00B4               	movwf	??_USART_Init+2
  8310  15A2  0831               	movf	USART_Init@baudrate+3,w
  8311  15A3  00B5               	movwf	??_USART_Init+3
  8312  15A4  3004               	movlw	4
  8313  15A5                     u6555:
  8314  15A5  1003               	clrc
  8315  15A6  0DB2               	rlf	??_USART_Init,f
  8316  15A7  0DB3               	rlf	??_USART_Init+1,f
  8317  15A8  0DB4               	rlf	??_USART_Init+2,f
  8318  15A9  0DB5               	rlf	??_USART_Init+3,f
  8319  15AA                     u6550:
  8320  15AA  3EFF               	addlw	-1
  8321  15AB  1D03               	skipz
  8322  15AC  2DA5               	goto	u6555
  8323  15AD  0835               	movf	??_USART_Init+3,w
  8324  15AE  00A3               	movwf	___aldiv@divisor+3
  8325  15AF  0834               	movf	??_USART_Init+2,w
  8326  15B0  00A2               	movwf	___aldiv@divisor+2
  8327  15B1  0833               	movf	??_USART_Init+1,w
  8328  15B2  00A1               	movwf	___aldiv@divisor+1
  8329  15B3  0832               	movf	??_USART_Init,w
  8330  15B4  00A0               	movwf	___aldiv@divisor
  8331  15B5  082E               	movf	USART_Init@baudrate,w
  8332  15B6  00B6               	movwf	??_USART_Init+4
  8333  15B7  082F               	movf	USART_Init@baudrate+1,w
  8334  15B8  00B7               	movwf	??_USART_Init+5
  8335  15B9  0830               	movf	USART_Init@baudrate+2,w
  8336  15BA  00B8               	movwf	??_USART_Init+6
  8337  15BB  0831               	movf	USART_Init@baudrate+3,w
  8338  15BC  00B9               	movwf	??_USART_Init+7
  8339  15BD  3004               	movlw	4
  8340  15BE                     u6565:
  8341  15BE  1003               	clrc
  8342  15BF  0DB6               	rlf	??_USART_Init+4,f
  8343  15C0  0DB7               	rlf	??_USART_Init+5,f
  8344  15C1  0DB8               	rlf	??_USART_Init+6,f
  8345  15C2  0DB9               	rlf	??_USART_Init+7,f
  8346  15C3                     u6560:
  8347  15C3  3EFF               	addlw	-1
  8348  15C4  1D03               	skipz
  8349  15C5  2DBE               	goto	u6565
  8350  15C6  3080               	movlw	128
  8351  15C7  00BA               	movwf	??_USART_Init+8
  8352  15C8  301A               	movlw	26
  8353  15C9  00BB               	movwf	??_USART_Init+9
  8354  15CA  3006               	movlw	6
  8355  15CB  00BC               	movwf	??_USART_Init+10
  8356  15CC  3000               	movlw	0
  8357  15CD  00BD               	movwf	??_USART_Init+11
  8358  15CE  0836               	movf	??_USART_Init+4,w
  8359  15CF  02BA               	subwf	??_USART_Init+8,f
  8360  15D0  0837               	movf	??_USART_Init+5,w
  8361  15D1  1C03               	skipc
  8362  15D2  0F37               	incfsz	??_USART_Init+5,w
  8363  15D3  2DD5               	goto	u6571
  8364  15D4  2DD6               	goto	u6572
  8365  15D5                     u6571:
  8366  15D5  02BB               	subwf	??_USART_Init+9,f
  8367  15D6                     u6572:
  8368  15D6  0838               	movf	??_USART_Init+6,w
  8369  15D7  1C03               	skipc
  8370  15D8  0F38               	incfsz	??_USART_Init+6,w
  8371  15D9  2DDB               	goto	u6573
  8372  15DA  2DDC               	goto	u6574
  8373  15DB                     u6573:
  8374  15DB  02BC               	subwf	??_USART_Init+10,f
  8375  15DC                     u6574:
  8376  15DC  0839               	movf	??_USART_Init+7,w
  8377  15DD  1C03               	skipc
  8378  15DE  0F39               	incfsz	??_USART_Init+7,w
  8379  15DF  2DE1               	goto	u6575
  8380  15E0  2DE2               	goto	u6576
  8381  15E1                     u6575:
  8382  15E1  02BD               	subwf	??_USART_Init+11,f
  8383  15E2                     u6576:
  8384  15E2  083D               	movf	??_USART_Init+11,w
  8385  15E3  00A7               	movwf	___aldiv@dividend+3
  8386  15E4  083C               	movf	??_USART_Init+10,w
  8387  15E5  00A6               	movwf	___aldiv@dividend+2
  8388  15E6  083B               	movf	??_USART_Init+9,w
  8389  15E7  00A5               	movwf	___aldiv@dividend+1
  8390  15E8  083A               	movf	??_USART_Init+8,w
  8391  15E9  00A4               	movwf	___aldiv@dividend
  8392  15EA  160A  118A  2331  160A  118A  	fcall	___aldiv
  8393  15EF  1283               	bcf	3,5	;RP0=0, select bank0
  8394  15F0  1303               	bcf	3,6	;RP1=0, select bank0
  8395  15F1  0821               	movf	?___aldiv+1,w
  8396  15F2  00F5               	movwf	USART_Init@x+1
  8397  15F3  0820               	movf	?___aldiv,w
  8398  15F4  00F4               	movwf	USART_Init@x
  8399  15F5                     l4015:
  8400                           
  8401                           ;USART.c: 15:     BRGH = 1;
  8402  15F5  1683               	bsf	3,5	;RP0=1, select bank1
  8403  15F6  1303               	bcf	3,6	;RP1=0, select bank1
  8404  15F7  1518               	bsf	24,2	;volatile
  8405  15F8                     l4017:
  8406                           
  8407                           ;USART.c: 17:   if(x<256)
  8408  15F8  3001               	movlw	1
  8409  15F9  0275               	subwf	USART_Init@x+1,w
  8410  15FA  3000               	movlw	0
  8411  15FB  1903               	skipnz
  8412  15FC  0274               	subwf	USART_Init@x,w
  8413  15FD  1803               	skipnc
  8414  15FE  2E00               	goto	u6581
  8415  15FF  2E01               	goto	u6580
  8416  1600                     u6581:
  8417  1600  2E13               	goto	l151
  8418  1601                     u6580:
  8419  1601                     l4019:
  8420                           
  8421                           ;USART.c: 18:   {;USART.c: 19:     SPBRG = x;
  8422  1601  0874               	movf	USART_Init@x,w
  8423  1602  1683               	bsf	3,5	;RP0=1, select bank1
  8424  1603  1303               	bcf	3,6	;RP1=0, select bank1
  8425  1604  0099               	movwf	25	;volatile
  8426  1605                     l4021:
  8427                           
  8428                           ;USART.c: 20:     SYNC = 0;
  8429  1605  1218               	bcf	24,4	;volatile
  8430  1606                     l4023:
  8431                           
  8432                           ;USART.c: 21:     SPEN = 1;
  8433  1606  1283               	bcf	3,5	;RP0=0, select bank0
  8434  1607  1303               	bcf	3,6	;RP1=0, select bank0
  8435  1608  1798               	bsf	24,7	;volatile
  8436  1609                     l4025:
  8437                           
  8438                           ;USART.c: 22:     TRISC7 = 1;
  8439  1609  1683               	bsf	3,5	;RP0=1, select bank1
  8440  160A  1303               	bcf	3,6	;RP1=0, select bank1
  8441  160B  1787               	bsf	7,7	;volatile
  8442  160C                     l4027:
  8443                           
  8444                           ;USART.c: 23:     TRISC6 = 0;
  8445  160C  1307               	bcf	7,6	;volatile
  8446  160D                     l4029:
  8447                           
  8448                           ;USART.c: 24:     CREN = 1;
  8449  160D  1283               	bcf	3,5	;RP0=0, select bank0
  8450  160E  1303               	bcf	3,6	;RP1=0, select bank0
  8451  160F  1618               	bsf	24,4	;volatile
  8452  1610                     l4031:
  8453                           
  8454                           ;USART.c: 25:     TXEN = 1;
  8455  1610  1683               	bsf	3,5	;RP0=1, select bank1
  8456  1611  1303               	bcf	3,6	;RP1=0, select bank1
  8457  1612  1698               	bsf	24,5	;volatile
  8458  1613                     l151:
  8459  1613  0008               	return
  8460  1614                     __end_of_USART_Init:
  8461                           
  8462                           	psect	text35
  8463  1331                     __ptext35:	
  8464 ;; *************** function ___aldiv *****************
  8465 ;; Defined at:
  8466 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\aldiv.c"
  8467 ;; Parameters:    Size  Location     Type
  8468 ;;  divisor         4    0[BANK0 ] long 
  8469 ;;  dividend        4    4[BANK0 ] long 
  8470 ;; Auto vars:     Size  Location     Type
  8471 ;;  quotient        4   10[BANK0 ] long 
  8472 ;;  sign            1    9[BANK0 ] unsigned char 
  8473 ;;  counter         1    8[BANK0 ] unsigned char 
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  4    0[BANK0 ] long 
  8476 ;; Registers used:
  8477 ;;		wreg, status,2, status,0
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/0
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8483 ;;      Params:         0       8       0       0       0
  8484 ;;      Locals:         0       6       0       0       0
  8485 ;;      Temps:          1       0       0       0       0
  8486 ;;      Totals:         1      14       0       0       0
  8487 ;;Total ram usage:       15 bytes
  8488 ;; Hardware stack levels used:    1
  8489 ;; Hardware stack levels required when called:    2
  8490 ;; This function calls:
  8491 ;;		Nothing
  8492 ;; This function is called by:
  8493 ;;		_USART_Init
  8494 ;; This function uses a non-reentrant model
  8495 ;;
  8496                           
  8497                           
  8498                           ;psect for function ___aldiv
  8499  1331                     ___aldiv:
  8500  1331                     l3869:	
  8501                           ;incstack = 0
  8502                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8503                           
  8504  1331  1283               	bcf	3,5	;RP0=0, select bank0
  8505  1332  1303               	bcf	3,6	;RP1=0, select bank0
  8506  1333  01A9               	clrf	___aldiv@sign
  8507  1334                     l3871:
  8508  1334  1FA3               	btfss	___aldiv@divisor+3,7
  8509  1335  2B37               	goto	u6211
  8510  1336  2B38               	goto	u6210
  8511  1337                     u6211:
  8512  1337  2B45               	goto	l496
  8513  1338                     u6210:
  8514  1338                     l3873:
  8515  1338  09A0               	comf	___aldiv@divisor,f
  8516  1339  09A1               	comf	___aldiv@divisor+1,f
  8517  133A  09A2               	comf	___aldiv@divisor+2,f
  8518  133B  09A3               	comf	___aldiv@divisor+3,f
  8519  133C  0AA0               	incf	___aldiv@divisor,f
  8520  133D  1903               	skipnz
  8521  133E  0AA1               	incf	___aldiv@divisor+1,f
  8522  133F  1903               	skipnz
  8523  1340  0AA2               	incf	___aldiv@divisor+2,f
  8524  1341  1903               	skipnz
  8525  1342  0AA3               	incf	___aldiv@divisor+3,f
  8526  1343  01A9               	clrf	___aldiv@sign
  8527  1344  0AA9               	incf	___aldiv@sign,f
  8528  1345                     l496:
  8529  1345  1FA7               	btfss	___aldiv@dividend+3,7
  8530  1346  2B48               	goto	u6221
  8531  1347  2B49               	goto	u6220
  8532  1348                     u6221:
  8533  1348  2B58               	goto	l3879
  8534  1349                     u6220:
  8535  1349                     l3875:
  8536  1349  09A4               	comf	___aldiv@dividend,f
  8537  134A  09A5               	comf	___aldiv@dividend+1,f
  8538  134B  09A6               	comf	___aldiv@dividend+2,f
  8539  134C  09A7               	comf	___aldiv@dividend+3,f
  8540  134D  0AA4               	incf	___aldiv@dividend,f
  8541  134E  1903               	skipnz
  8542  134F  0AA5               	incf	___aldiv@dividend+1,f
  8543  1350  1903               	skipnz
  8544  1351  0AA6               	incf	___aldiv@dividend+2,f
  8545  1352  1903               	skipnz
  8546  1353  0AA7               	incf	___aldiv@dividend+3,f
  8547  1354                     l3877:
  8548  1354  3001               	movlw	1
  8549  1355  00F3               	movwf	??___aldiv
  8550  1356  0873               	movf	??___aldiv,w
  8551  1357  06A9               	xorwf	___aldiv@sign,f
  8552  1358                     l3879:
  8553  1358  3000               	movlw	0
  8554  1359  00AD               	movwf	___aldiv@quotient+3
  8555  135A  3000               	movlw	0
  8556  135B  00AC               	movwf	___aldiv@quotient+2
  8557  135C  3000               	movlw	0
  8558  135D  00AB               	movwf	___aldiv@quotient+1
  8559  135E  3000               	movlw	0
  8560  135F  00AA               	movwf	___aldiv@quotient
  8561  1360                     l3881:
  8562  1360  0823               	movf	___aldiv@divisor+3,w
  8563  1361  0422               	iorwf	___aldiv@divisor+2,w
  8564  1362  0421               	iorwf	___aldiv@divisor+1,w
  8565  1363  0420               	iorwf	___aldiv@divisor,w
  8566  1364  1903               	skipnz
  8567  1365  2B67               	goto	u6231
  8568  1366  2B68               	goto	u6230
  8569  1367                     u6231:
  8570  1367  2BB5               	goto	l3901
  8571  1368                     u6230:
  8572  1368                     l3883:
  8573  1368  01A8               	clrf	___aldiv@counter
  8574  1369  0AA8               	incf	___aldiv@counter,f
  8575  136A  2B78               	goto	l3887
  8576  136B                     l3885:
  8577  136B  3001               	movlw	1
  8578  136C  00F3               	movwf	??___aldiv
  8579  136D                     u6245:
  8580  136D  1003               	clrc
  8581  136E  0DA0               	rlf	___aldiv@divisor,f
  8582  136F  0DA1               	rlf	___aldiv@divisor+1,f
  8583  1370  0DA2               	rlf	___aldiv@divisor+2,f
  8584  1371  0DA3               	rlf	___aldiv@divisor+3,f
  8585  1372  0BF3               	decfsz	??___aldiv,f
  8586  1373  2B6D               	goto	u6245
  8587  1374  3001               	movlw	1
  8588  1375  00F3               	movwf	??___aldiv
  8589  1376  0873               	movf	??___aldiv,w
  8590  1377  07A8               	addwf	___aldiv@counter,f
  8591  1378                     l3887:
  8592  1378  1FA3               	btfss	___aldiv@divisor+3,7
  8593  1379  2B7B               	goto	u6251
  8594  137A  2B7C               	goto	u6250
  8595  137B                     u6251:
  8596  137B  2B6B               	goto	l3885
  8597  137C                     u6250:
  8598  137C                     l3889:
  8599  137C  3001               	movlw	1
  8600  137D  00F3               	movwf	??___aldiv
  8601  137E                     u6265:
  8602  137E  1003               	clrc
  8603  137F  0DAA               	rlf	___aldiv@quotient,f
  8604  1380  0DAB               	rlf	___aldiv@quotient+1,f
  8605  1381  0DAC               	rlf	___aldiv@quotient+2,f
  8606  1382  0DAD               	rlf	___aldiv@quotient+3,f
  8607  1383  0BF3               	decfsz	??___aldiv,f
  8608  1384  2B7E               	goto	u6265
  8609  1385                     l3891:
  8610  1385  0823               	movf	___aldiv@divisor+3,w
  8611  1386  0227               	subwf	___aldiv@dividend+3,w
  8612  1387  1D03               	skipz
  8613  1388  2B93               	goto	u6275
  8614  1389  0822               	movf	___aldiv@divisor+2,w
  8615  138A  0226               	subwf	___aldiv@dividend+2,w
  8616  138B  1D03               	skipz
  8617  138C  2B93               	goto	u6275
  8618  138D  0821               	movf	___aldiv@divisor+1,w
  8619  138E  0225               	subwf	___aldiv@dividend+1,w
  8620  138F  1D03               	skipz
  8621  1390  2B93               	goto	u6275
  8622  1391  0820               	movf	___aldiv@divisor,w
  8623  1392  0224               	subwf	___aldiv@dividend,w
  8624  1393                     u6275:
  8625  1393  1C03               	skipc
  8626  1394  2B96               	goto	u6271
  8627  1395  2B97               	goto	u6270
  8628  1396                     u6271:
  8629  1396  2BA6               	goto	l3897
  8630  1397                     u6270:
  8631  1397                     l3893:
  8632  1397  0820               	movf	___aldiv@divisor,w
  8633  1398  02A4               	subwf	___aldiv@dividend,f
  8634  1399  0821               	movf	___aldiv@divisor+1,w
  8635  139A  1C03               	skipc
  8636  139B  0F21               	incfsz	___aldiv@divisor+1,w
  8637  139C  02A5               	subwf	___aldiv@dividend+1,f
  8638  139D  0822               	movf	___aldiv@divisor+2,w
  8639  139E  1C03               	skipc
  8640  139F  0F22               	incfsz	___aldiv@divisor+2,w
  8641  13A0  02A6               	subwf	___aldiv@dividend+2,f
  8642  13A1  0823               	movf	___aldiv@divisor+3,w
  8643  13A2  1C03               	skipc
  8644  13A3  0F23               	incfsz	___aldiv@divisor+3,w
  8645  13A4  02A7               	subwf	___aldiv@dividend+3,f
  8646  13A5                     l3895:
  8647  13A5  142A               	bsf	___aldiv@quotient,0
  8648  13A6                     l3897:
  8649  13A6  3001               	movlw	1
  8650  13A7                     u6285:
  8651  13A7  1003               	clrc
  8652  13A8  0CA3               	rrf	___aldiv@divisor+3,f
  8653  13A9  0CA2               	rrf	___aldiv@divisor+2,f
  8654  13AA  0CA1               	rrf	___aldiv@divisor+1,f
  8655  13AB  0CA0               	rrf	___aldiv@divisor,f
  8656  13AC  3EFF               	addlw	-1
  8657  13AD  1D03               	skipz
  8658  13AE  2BA7               	goto	u6285
  8659  13AF                     l3899:
  8660  13AF  3001               	movlw	1
  8661  13B0  02A8               	subwf	___aldiv@counter,f
  8662  13B1  1D03               	btfss	3,2
  8663  13B2  2BB4               	goto	u6291
  8664  13B3  2BB5               	goto	u6290
  8665  13B4                     u6291:
  8666  13B4  2B7C               	goto	l3889
  8667  13B5                     u6290:
  8668  13B5                     l3901:
  8669  13B5  0829               	movf	___aldiv@sign,w
  8670  13B6  1903               	btfsc	3,2
  8671  13B7  2BB9               	goto	u6301
  8672  13B8  2BBA               	goto	u6300
  8673  13B9                     u6301:
  8674  13B9  2BC5               	goto	l3905
  8675  13BA                     u6300:
  8676  13BA                     l3903:
  8677  13BA  09AA               	comf	___aldiv@quotient,f
  8678  13BB  09AB               	comf	___aldiv@quotient+1,f
  8679  13BC  09AC               	comf	___aldiv@quotient+2,f
  8680  13BD  09AD               	comf	___aldiv@quotient+3,f
  8681  13BE  0AAA               	incf	___aldiv@quotient,f
  8682  13BF  1903               	skipnz
  8683  13C0  0AAB               	incf	___aldiv@quotient+1,f
  8684  13C1  1903               	skipnz
  8685  13C2  0AAC               	incf	___aldiv@quotient+2,f
  8686  13C3  1903               	skipnz
  8687  13C4  0AAD               	incf	___aldiv@quotient+3,f
  8688  13C5                     l3905:
  8689  13C5  082D               	movf	___aldiv@quotient+3,w
  8690  13C6  00A3               	movwf	?___aldiv+3
  8691  13C7  082C               	movf	___aldiv@quotient+2,w
  8692  13C8  00A2               	movwf	?___aldiv+2
  8693  13C9  082B               	movf	___aldiv@quotient+1,w
  8694  13CA  00A1               	movwf	?___aldiv+1
  8695  13CB  082A               	movf	___aldiv@quotient,w
  8696  13CC  00A0               	movwf	?___aldiv
  8697  13CD                     l506:
  8698  13CD  0008               	return
  8699  13CE                     __end_of___aldiv:
  8700                           
  8701                           	psect	text36
  8702  1E52                     __ptext36:	
  8703 ;; *************** function _I2C_Master_Init *****************
  8704 ;; Defined at:
  8705 ;;		line 16 in file "I2C.c"
  8706 ;; Parameters:    Size  Location     Type
  8707 ;;  c               4   13[BANK0 ] const unsigned long 
  8708 ;; Auto vars:     Size  Location     Type
  8709 ;;		None
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  1    wreg      void 
  8712 ;; Registers used:
  8713 ;;		wreg, status,2, status,0, pclath, cstack
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8719 ;;      Params:         0       4       0       0       0
  8720 ;;      Locals:         0       0       0       0       0
  8721 ;;      Temps:          4       0       0       0       0
  8722 ;;      Totals:         4       4       0       0       0
  8723 ;;Total ram usage:        8 bytes
  8724 ;; Hardware stack levels used:    1
  8725 ;; Hardware stack levels required when called:    3
  8726 ;; This function calls:
  8727 ;;		___lldiv
  8728 ;; This function is called by:
  8729 ;;		_main
  8730 ;;		_aht_begin
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           
  8735                           ;psect for function _I2C_Master_Init
  8736  1E52                     _I2C_Master_Init:
  8737  1E52                     l4035:	
  8738                           ;incstack = 0
  8739                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  8740                           
  8741                           
  8742                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  8743  1E52  3028               	movlw	40
  8744  1E53  1283               	bcf	3,5	;RP0=0, select bank0
  8745  1E54  1303               	bcf	3,6	;RP1=0, select bank0
  8746  1E55  0094               	movwf	20	;volatile
  8747  1E56                     l4037:
  8748                           
  8749                           ;I2C.c: 19:     SSPCON2 = 0;
  8750  1E56  1683               	bsf	3,5	;RP0=1, select bank1
  8751  1E57  1303               	bcf	3,6	;RP1=0, select bank1
  8752  1E58  0191               	clrf	17	;volatile
  8753  1E59                     l4039:
  8754                           
  8755                           ;I2C.c: 20:     SSPADD = (400000/(4*c))-1;
  8756  1E59  1283               	bcf	3,5	;RP0=0, select bank0
  8757  1E5A  1303               	bcf	3,6	;RP1=0, select bank0
  8758  1E5B  082D               	movf	I2C_Master_Init@c,w
  8759  1E5C  00F4               	movwf	??_I2C_Master_Init
  8760  1E5D  082E               	movf	I2C_Master_Init@c+1,w
  8761  1E5E  00F5               	movwf	??_I2C_Master_Init+1
  8762  1E5F  082F               	movf	I2C_Master_Init@c+2,w
  8763  1E60  00F6               	movwf	??_I2C_Master_Init+2
  8764  1E61  0830               	movf	I2C_Master_Init@c+3,w
  8765  1E62  00F7               	movwf	??_I2C_Master_Init+3
  8766  1E63  3002               	movlw	2
  8767  1E64                     u6595:
  8768  1E64  1003               	clrc
  8769  1E65  0DF4               	rlf	??_I2C_Master_Init,f
  8770  1E66  0DF5               	rlf	??_I2C_Master_Init+1,f
  8771  1E67  0DF6               	rlf	??_I2C_Master_Init+2,f
  8772  1E68  0DF7               	rlf	??_I2C_Master_Init+3,f
  8773  1E69                     u6590:
  8774  1E69  3EFF               	addlw	-1
  8775  1E6A  1D03               	skipz
  8776  1E6B  2E64               	goto	u6595
  8777  1E6C  0877               	movf	??_I2C_Master_Init+3,w
  8778  1E6D  00A3               	movwf	___lldiv@divisor+3
  8779  1E6E  0876               	movf	??_I2C_Master_Init+2,w
  8780  1E6F  00A2               	movwf	___lldiv@divisor+2
  8781  1E70  0875               	movf	??_I2C_Master_Init+1,w
  8782  1E71  00A1               	movwf	___lldiv@divisor+1
  8783  1E72  0874               	movf	??_I2C_Master_Init,w
  8784  1E73  00A0               	movwf	___lldiv@divisor
  8785  1E74  3000               	movlw	0
  8786  1E75  00A7               	movwf	___lldiv@dividend+3
  8787  1E76  3006               	movlw	6
  8788  1E77  00A6               	movwf	___lldiv@dividend+2
  8789  1E78  301A               	movlw	26
  8790  1E79  00A5               	movwf	___lldiv@dividend+1
  8791  1E7A  3080               	movlw	128
  8792  1E7B  00A4               	movwf	___lldiv@dividend
  8793  1E7C  160A  118A  2152  160A  158A  	fcall	___lldiv
  8794  1E81  1283               	bcf	3,5	;RP0=0, select bank0
  8795  1E82  1303               	bcf	3,6	;RP1=0, select bank0
  8796  1E83  0820               	movf	?___lldiv,w
  8797  1E84  3EFF               	addlw	255
  8798  1E85  1683               	bsf	3,5	;RP0=1, select bank1
  8799  1E86  1303               	bcf	3,6	;RP1=0, select bank1
  8800  1E87  0093               	movwf	19	;volatile
  8801  1E88                     l4041:
  8802                           
  8803                           ;I2C.c: 21:     SSPSTAT = 0;
  8804  1E88  0194               	clrf	20	;volatile
  8805  1E89                     l4043:
  8806                           
  8807                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  8808  1E89  1587               	bsf	7,3	;volatile
  8809  1E8A                     l4045:
  8810                           
  8811                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  8812  1E8A  1607               	bsf	7,4	;volatile
  8813  1E8B                     l96:
  8814  1E8B  0008               	return
  8815  1E8C                     __end_of_I2C_Master_Init:
  8816                           
  8817                           	psect	text37
  8818  1152                     __ptext37:	
  8819 ;; *************** function ___lldiv *****************
  8820 ;; Defined at:
  8821 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\__lldiv.c"
  8822 ;; Parameters:    Size  Location     Type
  8823 ;;  divisor         4    0[BANK0 ] unsigned long 
  8824 ;;  dividend        4    4[BANK0 ] unsigned long 
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;  quotient        4    8[BANK0 ] unsigned long 
  8827 ;;  counter         1   12[BANK0 ] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  4    0[BANK0 ] unsigned long 
  8830 ;; Registers used:
  8831 ;;		wreg, status,2, status,0
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8837 ;;      Params:         0       8       0       0       0
  8838 ;;      Locals:         0       5       0       0       0
  8839 ;;      Temps:          1       0       0       0       0
  8840 ;;      Totals:         1      13       0       0       0
  8841 ;;Total ram usage:       14 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    2
  8844 ;; This function calls:
  8845 ;;		Nothing
  8846 ;; This function is called by:
  8847 ;;		_I2C_Master_Init
  8848 ;;		_sprintf
  8849 ;; This function uses a non-reentrant model
  8850 ;;
  8851                           
  8852                           
  8853                           ;psect for function ___lldiv
  8854  1152                     ___lldiv:
  8855  1152                     l3845:	
  8856                           ;incstack = 0
  8857                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8858                           
  8859  1152  3000               	movlw	0
  8860  1153  1283               	bcf	3,5	;RP0=0, select bank0
  8861  1154  1303               	bcf	3,6	;RP1=0, select bank0
  8862  1155  00AB               	movwf	___lldiv@quotient+3
  8863  1156  3000               	movlw	0
  8864  1157  00AA               	movwf	___lldiv@quotient+2
  8865  1158  3000               	movlw	0
  8866  1159  00A9               	movwf	___lldiv@quotient+1
  8867  115A  3000               	movlw	0
  8868  115B  00A8               	movwf	___lldiv@quotient
  8869  115C  0823               	movf	___lldiv@divisor+3,w
  8870  115D  0422               	iorwf	___lldiv@divisor+2,w
  8871  115E  0421               	iorwf	___lldiv@divisor+1,w
  8872  115F  0420               	iorwf	___lldiv@divisor,w
  8873  1160  1903               	skipnz
  8874  1161  2963               	goto	u6141
  8875  1162  2964               	goto	u6140
  8876  1163                     u6141:
  8877  1163  29B1               	goto	l3865
  8878  1164                     u6140:
  8879  1164                     l3847:
  8880  1164  01AC               	clrf	___lldiv@counter
  8881  1165  0AAC               	incf	___lldiv@counter,f
  8882  1166  2974               	goto	l3851
  8883  1167                     l3849:
  8884  1167  3001               	movlw	1
  8885  1168  00F3               	movwf	??___lldiv
  8886  1169                     u6155:
  8887  1169  1003               	clrc
  8888  116A  0DA0               	rlf	___lldiv@divisor,f
  8889  116B  0DA1               	rlf	___lldiv@divisor+1,f
  8890  116C  0DA2               	rlf	___lldiv@divisor+2,f
  8891  116D  0DA3               	rlf	___lldiv@divisor+3,f
  8892  116E  0BF3               	decfsz	??___lldiv,f
  8893  116F  2969               	goto	u6155
  8894  1170  3001               	movlw	1
  8895  1171  00F3               	movwf	??___lldiv
  8896  1172  0873               	movf	??___lldiv,w
  8897  1173  07AC               	addwf	___lldiv@counter,f
  8898  1174                     l3851:
  8899  1174  1FA3               	btfss	___lldiv@divisor+3,7
  8900  1175  2977               	goto	u6161
  8901  1176  2978               	goto	u6160
  8902  1177                     u6161:
  8903  1177  2967               	goto	l3849
  8904  1178                     u6160:
  8905  1178                     l3853:
  8906  1178  3001               	movlw	1
  8907  1179  00F3               	movwf	??___lldiv
  8908  117A                     u6175:
  8909  117A  1003               	clrc
  8910  117B  0DA8               	rlf	___lldiv@quotient,f
  8911  117C  0DA9               	rlf	___lldiv@quotient+1,f
  8912  117D  0DAA               	rlf	___lldiv@quotient+2,f
  8913  117E  0DAB               	rlf	___lldiv@quotient+3,f
  8914  117F  0BF3               	decfsz	??___lldiv,f
  8915  1180  297A               	goto	u6175
  8916  1181                     l3855:
  8917  1181  0823               	movf	___lldiv@divisor+3,w
  8918  1182  0227               	subwf	___lldiv@dividend+3,w
  8919  1183  1D03               	skipz
  8920  1184  298F               	goto	u6185
  8921  1185  0822               	movf	___lldiv@divisor+2,w
  8922  1186  0226               	subwf	___lldiv@dividend+2,w
  8923  1187  1D03               	skipz
  8924  1188  298F               	goto	u6185
  8925  1189  0821               	movf	___lldiv@divisor+1,w
  8926  118A  0225               	subwf	___lldiv@dividend+1,w
  8927  118B  1D03               	skipz
  8928  118C  298F               	goto	u6185
  8929  118D  0820               	movf	___lldiv@divisor,w
  8930  118E  0224               	subwf	___lldiv@dividend,w
  8931  118F                     u6185:
  8932  118F  1C03               	skipc
  8933  1190  2992               	goto	u6181
  8934  1191  2993               	goto	u6180
  8935  1192                     u6181:
  8936  1192  29A2               	goto	l3861
  8937  1193                     u6180:
  8938  1193                     l3857:
  8939  1193  0820               	movf	___lldiv@divisor,w
  8940  1194  02A4               	subwf	___lldiv@dividend,f
  8941  1195  0821               	movf	___lldiv@divisor+1,w
  8942  1196  1C03               	skipc
  8943  1197  0F21               	incfsz	___lldiv@divisor+1,w
  8944  1198  02A5               	subwf	___lldiv@dividend+1,f
  8945  1199  0822               	movf	___lldiv@divisor+2,w
  8946  119A  1C03               	skipc
  8947  119B  0F22               	incfsz	___lldiv@divisor+2,w
  8948  119C  02A6               	subwf	___lldiv@dividend+2,f
  8949  119D  0823               	movf	___lldiv@divisor+3,w
  8950  119E  1C03               	skipc
  8951  119F  0F23               	incfsz	___lldiv@divisor+3,w
  8952  11A0  02A7               	subwf	___lldiv@dividend+3,f
  8953  11A1                     l3859:
  8954  11A1  1428               	bsf	___lldiv@quotient,0
  8955  11A2                     l3861:
  8956  11A2  3001               	movlw	1
  8957  11A3                     u6195:
  8958  11A3  1003               	clrc
  8959  11A4  0CA3               	rrf	___lldiv@divisor+3,f
  8960  11A5  0CA2               	rrf	___lldiv@divisor+2,f
  8961  11A6  0CA1               	rrf	___lldiv@divisor+1,f
  8962  11A7  0CA0               	rrf	___lldiv@divisor,f
  8963  11A8  3EFF               	addlw	-1
  8964  11A9  1D03               	skipz
  8965  11AA  29A3               	goto	u6195
  8966  11AB                     l3863:
  8967  11AB  3001               	movlw	1
  8968  11AC  02AC               	subwf	___lldiv@counter,f
  8969  11AD  1D03               	btfss	3,2
  8970  11AE  29B0               	goto	u6201
  8971  11AF  29B1               	goto	u6200
  8972  11B0                     u6201:
  8973  11B0  2978               	goto	l3853
  8974  11B1                     u6200:
  8975  11B1                     l3865:
  8976  11B1  082B               	movf	___lldiv@quotient+3,w
  8977  11B2  00A3               	movwf	?___lldiv+3
  8978  11B3  082A               	movf	___lldiv@quotient+2,w
  8979  11B4  00A2               	movwf	?___lldiv+2
  8980  11B5  0829               	movf	___lldiv@quotient+1,w
  8981  11B6  00A1               	movwf	?___lldiv+1
  8982  11B7  0828               	movf	___lldiv@quotient,w
  8983  11B8  00A0               	movwf	?___lldiv
  8984  11B9                     l461:
  8985  11B9  0008               	return
  8986  11BA                     __end_of___lldiv:
  8987                           
  8988                           	psect	text38
  8989  1D50                     __ptext38:	
  8990 ;; *************** function _ISR *****************
  8991 ;; Defined at:
  8992 ;;		line 57 in file "pic16f.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;		None
  8995 ;; Auto vars:     Size  Location     Type
  8996 ;;		None
  8997 ;; Return value:  Size  Location     Type
  8998 ;;                  1    wreg      void 
  8999 ;; Registers used:
  9000 ;;		wreg, pclath, cstack
  9001 ;; Tracked objects:
  9002 ;;		On entry : 0/0
  9003 ;;		On exit  : 0/0
  9004 ;;		Unchanged: 0/0
  9005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9006 ;;      Params:         0       0       0       0       0
  9007 ;;      Locals:         0       0       0       0       0
  9008 ;;      Temps:          3       0       0       0       0
  9009 ;;      Totals:         3       0       0       0       0
  9010 ;;Total ram usage:        3 bytes
  9011 ;; Hardware stack levels used:    1
  9012 ;; Hardware stack levels required when called:    1
  9013 ;; This function calls:
  9014 ;;		_Read_USART
  9015 ;; This function is called by:
  9016 ;;		Interrupt level 1
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           
  9021                           ;psect for function _ISR
  9022  1D50                     _ISR:
  9023  1D50                     i1l2027:
  9024                           
  9025                           ;pic16f.c: 58:     if (RCIF==1){
  9026  1D50  1283               	bcf	3,5	;RP0=0, select bank0
  9027  1D51  1303               	bcf	3,6	;RP1=0, select bank0
  9028  1D52  1E8C               	btfss	12,5	;volatile
  9029  1D53  2D55               	goto	u243_21
  9030  1D54  2D56               	goto	u243_20
  9031  1D55                     u243_21:
  9032  1D55  2D5F               	goto	i1l59
  9033  1D56                     u243_20:
  9034  1D56                     i1l2029:
  9035                           
  9036                           ;pic16f.c: 59:         RCIF=0;
  9037  1D56  128C               	bcf	12,5	;volatile
  9038  1D57                     i1l2031:
  9039                           
  9040                           ;pic16f.c: 60:         LecturaUSART=Read_USART();
  9041  1D57  160A  158A  24C9  160A  158A  	fcall	_Read_USART
  9042  1D5C  00F0               	movwf	??_ISR
  9043  1D5D  0870               	movf	??_ISR,w
  9044  1D5E  00F9               	movwf	_LecturaUSART
  9045  1D5F                     i1l59:
  9046  1D5F  0872               	movf	??_ISR+2,w
  9047  1D60  008A               	movwf	10
  9048  1D61  0E71               	swapf	??_ISR+1,w
  9049  1D62  0083               	movwf	3
  9050  1D63  0EFE               	swapf	btemp,f
  9051  1D64  0E7E               	swapf	btemp,w
  9052  1D65  0009               	retfie
  9053  1D66                     __end_of_ISR:
  9054                           
  9055                           	psect	intentry
  9056  0004                     __pintentry:	
  9057                           ;incstack = 0
  9058                           ; Regs used in _ISR: [wreg+pclath+cstack]
  9059                           
  9060  0004                     interrupt_function:
  9061  007E                     saved_w	set	btemp
  9062  0004  00FE               	movwf	btemp
  9063  0005  0E03               	swapf	3,w
  9064  0006  00F1               	movwf	??_ISR+1
  9065  0007  080A               	movf	10,w
  9066  0008  00F2               	movwf	??_ISR+2
  9067  0009  160A  158A  2D50   	ljmp	_ISR
  9068                           
  9069                           	psect	text39
  9070  1CC9                     __ptext39:	
  9071 ;; *************** function _Read_USART *****************
  9072 ;; Defined at:
  9073 ;;		line 40 in file "USART.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;		None
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;		None
  9078 ;; Return value:  Size  Location     Type
  9079 ;;                  1    wreg      unsigned char 
  9080 ;; Registers used:
  9081 ;;		wreg
  9082 ;; Tracked objects:
  9083 ;;		On entry : 0/0
  9084 ;;		On exit  : 0/0
  9085 ;;		Unchanged: 0/0
  9086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9087 ;;      Params:         0       0       0       0       0
  9088 ;;      Locals:         0       0       0       0       0
  9089 ;;      Temps:          0       0       0       0       0
  9090 ;;      Totals:         0       0       0       0       0
  9091 ;;Total ram usage:        0 bytes
  9092 ;; Hardware stack levels used:    1
  9093 ;; This function calls:
  9094 ;;		Nothing
  9095 ;; This function is called by:
  9096 ;;		_ISR
  9097 ;; This function uses a non-reentrant model
  9098 ;;
  9099                           
  9100                           
  9101                           ;psect for function _Read_USART
  9102  1CC9                     _Read_USART:
  9103  1CC9                     i1l1697:	
  9104                           ;incstack = 0
  9105                           ; Regs used in _Read_USART: [wreg]
  9106                           
  9107  1CC9                     i1l166:	
  9108                           ;USART.c: 41:   while(!RCIF);
  9109                           
  9110  1CC9  1283               	bcf	3,5	;RP0=0, select bank0
  9111  1CCA  1303               	bcf	3,6	;RP1=0, select bank0
  9112  1CCB  1E8C               	btfss	12,5	;volatile
  9113  1CCC  2CCE               	goto	u183_21
  9114  1CCD  2CCF               	goto	u183_20
  9115  1CCE                     u183_21:
  9116  1CCE  2CC9               	goto	i1l166
  9117  1CCF                     u183_20:
  9118  1CCF                     i1l1699:
  9119                           
  9120                           ;USART.c: 42:   return RCREG;
  9121  1CCF  081A               	movf	26,w	;volatile
  9122  1CD0                     i1l169:
  9123  1CD0  0008               	return
  9124  1CD1                     __end_of_Read_USART:
  9125  007E                     btemp	set	126	;btemp
  9126  007E                     wtemp0	set	126
  9127                           
  9128                           	psect	config
  9129                           
  9130                           ;Config register CONFIG1 @ 0x2007
  9131                           ;	Oscillator Selection bits
  9132                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  9133                           ;	Watchdog Timer Enable bit
  9134                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9135                           ;	Power-up Timer Enable bit
  9136                           ;	PWRTE = OFF, PWRT disabled
  9137                           ;	RE3/MCLR pin function select bit
  9138                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9139                           ;	Code Protection bit
  9140                           ;	CP = OFF, Program memory code protection is disabled
  9141                           ;	Data Code Protection bit
  9142                           ;	CPD = OFF, Data memory code protection is disabled
  9143                           ;	Brown Out Reset Selection bits
  9144                           ;	BOREN = OFF, BOR disabled
  9145                           ;	Internal External Switchover bit
  9146                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9147                           ;	Fail-Safe Clock Monitor Enabled bit
  9148                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9149                           ;	Low Voltage Programming Enable bit
  9150                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9151                           ;	In-Circuit Debugger Mode bit
  9152                           ;	DEBUG = 0x1, unprogrammed default
  9153  2007                     	org	8199
  9154  2007  20D4               	dw	8404
  9155                           
  9156                           ;Config register CONFIG2 @ 0x2008
  9157                           ;	Brown-out Reset Selection bit
  9158                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9159                           ;	Flash Program Memory Self Write Enable bits
  9160                           ;	WRT = OFF, Write protection off
  9161  2008                     	org	8200
  9162  2008  3FFF               	dw	16383
  9163                           
  9164                           	psect	text1_split_1
  9165  0038                     u6750:
  9166  0038                     l4161:
  9167  0038  1683               	bsf	3,5	;RP0=1, select bank1
  9168  0039  1303               	bcf	3,6	;RP1=0, select bank1
  9169  003A  083B               	movf	(sprintf@fval+2)^(0+128),w
  9170  003B  043A               	iorwf	(sprintf@fval+1)^(0+128),w
  9171  003C  0439               	iorwf	sprintf@fval^(0+128),w
  9172  003D  1903               	skipnz
  9173  003E  2840               	goto	u6761
  9174  003F  2841               	goto	u6760
  9175  0040                     u6761:
  9176  0040  28FF               	goto	l4181
  9177  0041                     u6760:
  9178  0041                     l4163:
  9179  0041  0839               	movf	sprintf@fval^(0+128),w
  9180  0042  1283               	bcf	3,5	;RP0=0, select bank0
  9181  0043  1303               	bcf	3,6	;RP1=0, select bank0
  9182  0044  00C8               	movwf	___fttol@f1
  9183  0045  1683               	bsf	3,5	;RP0=1, select bank1
  9184  0046  1303               	bcf	3,6	;RP1=0, select bank1
  9185  0047  083A               	movf	(sprintf@fval+1)^(0+128),w
  9186  0048  1283               	bcf	3,5	;RP0=0, select bank0
  9187  0049  1303               	bcf	3,6	;RP1=0, select bank0
  9188  004A  00C9               	movwf	___fttol@f1+1
  9189  004B  1683               	bsf	3,5	;RP0=1, select bank1
  9190  004C  1303               	bcf	3,6	;RP1=0, select bank1
  9191  004D  083B               	movf	(sprintf@fval+2)^(0+128),w
  9192  004E  1283               	bcf	3,5	;RP0=0, select bank0
  9193  004F  1303               	bcf	3,6	;RP1=0, select bank0
  9194  0050  00CA               	movwf	___fttol@f1+2
  9195  0051  160A  118A  22A5  120A  118A  	fcall	___fttol
  9196  0056  1283               	bcf	3,5	;RP0=0, select bank0
  9197  0057  1303               	bcf	3,6	;RP1=0, select bank0
  9198  0058  084B               	movf	?___fttol+3,w
  9199  0059  044A               	iorwf	?___fttol+2,w
  9200  005A  0449               	iorwf	?___fttol+1,w
  9201  005B  0448               	iorwf	?___fttol,w
  9202  005C  1D03               	skipz
  9203  005D  285F               	goto	u6771
  9204  005E  2860               	goto	u6770
  9205  005F                     u6771:
  9206  005F  28FF               	goto	l4181
  9207  0060                     u6770:
  9208  0060                     l4165:
  9209  0060  1683               	bsf	3,5	;RP0=1, select bank1
  9210  0061  1303               	bcf	3,6	;RP1=0, select bank1
  9211  0062  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9212  0063  3A80               	xorlw	128
  9213  0064  00FF               	movwf	btemp+1
  9214  0065  3080               	movlw	128
  9215  0066  027F               	subwf	btemp+1,w
  9216  0067  1D03               	skipz
  9217  0068  286B               	goto	u6785
  9218  0069  3002               	movlw	2
  9219  006A  0236               	subwf	sprintf@eexp^(0+128),w
  9220  006B                     u6785:
  9221  006B  1C03               	skipc
  9222  006C  286E               	goto	u6781
  9223  006D  286F               	goto	u6780
  9224  006E                     u6781:
  9225  006E  28FF               	goto	l4181
  9226  006F                     u6780:
  9227  006F                     l4167:
  9228                           
  9229                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1146:      if(tmpval.integ < 4.2
      +                          94967296){
  9230  006F  1683               	bsf	3,5	;RP0=1, select bank1
  9231  0070  1303               	bcf	3,6	;RP1=0, select bank1
  9232  0071  0832               	movf	sprintf@tmpval^(0+128),w
  9233  0072  1283               	bcf	3,5	;RP0=0, select bank0
  9234  0073  1303               	bcf	3,6	;RP1=0, select bank0
  9235  0074  00A0               	movwf	___ftge@ff1
  9236  0075  1683               	bsf	3,5	;RP0=1, select bank1
  9237  0076  1303               	bcf	3,6	;RP1=0, select bank1
  9238  0077  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  9239  0078  1283               	bcf	3,5	;RP0=0, select bank0
  9240  0079  1303               	bcf	3,6	;RP1=0, select bank0
  9241  007A  00A1               	movwf	___ftge@ff1+1
  9242  007B  1683               	bsf	3,5	;RP0=1, select bank1
  9243  007C  1303               	bcf	3,6	;RP1=0, select bank1
  9244  007D  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  9245  007E  1283               	bcf	3,5	;RP0=0, select bank0
  9246  007F  1303               	bcf	3,6	;RP1=0, select bank0
  9247  0080  00A2               	movwf	___ftge@ff1+2
  9248  0081  3070               	movlw	112
  9249  0082  00A3               	movwf	___ftge@ff2
  9250  0083  3089               	movlw	137
  9251  0084  00A4               	movwf	___ftge@ff2+1
  9252  0085  3040               	movlw	64
  9253  0086  00A5               	movwf	___ftge@ff2+2
  9254  0087  160A  158A  268C  120A  118A  	fcall	___ftge
  9255  008C  1803               	btfsc	3,0
  9256  008D  288F               	goto	u6791
  9257  008E  2890               	goto	u6790
  9258  008F                     u6791:
  9259  008F  2899               	goto	l4171
  9260  0090                     u6790:
  9261  0090                     l4169:
  9262                           
  9263                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1147:       eexp -= (sizeof dpow
      +                          ers/sizeof dpowers[0])-1;
  9264  0090  30F7               	movlw	247
  9265  0091  1683               	bsf	3,5	;RP0=1, select bank1
  9266  0092  1303               	bcf	3,6	;RP1=0, select bank1
  9267  0093  07B6               	addwf	sprintf@eexp^(0+128),f
  9268  0094  1803               	skipnc
  9269  0095  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9270  0096  30FF               	movlw	255
  9271  0097  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9272                           
  9273                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9274  0098  28A1               	goto	l4173
  9275  0099                     l4171:
  9276                           
  9277                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1149:       eexp -= (sizeof dpow
      +                          ers/sizeof dpowers[0])-2;
  9278  0099  30F8               	movlw	248
  9279  009A  1683               	bsf	3,5	;RP0=1, select bank1
  9280  009B  1303               	bcf	3,6	;RP1=0, select bank1
  9281  009C  07B6               	addwf	sprintf@eexp^(0+128),f
  9282  009D  1803               	skipnc
  9283  009E  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9284  009F  30FF               	movlw	255
  9285  00A0  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9286  00A1                     l4173:
  9287                           
  9288                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1151:      tmpval.integ = scale(
      +                          eexp);
  9289  00A1  0836               	movf	sprintf@eexp^(0+128),w
  9290  00A2  120A  158A  2273  120A  118A  	fcall	_scale
  9291  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  9292  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  9293  00A9  083F               	movf	?_scale,w
  9294  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  9295  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  9296  00AC  00B2               	movwf	sprintf@tmpval^(0+128)
  9297  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  9298  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  9299  00AF  0840               	movf	?_scale+1,w
  9300  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  9301  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  9302  00B2  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  9303  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  9304  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  9305  00B5  0841               	movf	?_scale+2,w
  9306  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  9307  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  9308  00B8  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  9309  00B9                     l4177:	
  9310                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1152:      val = ((sizeof(double
      +                          )== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9311                           
  9312  00B9  0839               	movf	sprintf@fval^(0+128),w
  9313  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  9314  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  9315  00BC  00A0               	movwf	__tdiv_to_l_@f1
  9316  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  9317  00BE  1303               	bcf	3,6	;RP1=0, select bank1
  9318  00BF  083A               	movf	(sprintf@fval+1)^(0+128),w
  9319  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  9320  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  9321  00C2  00A1               	movwf	__tdiv_to_l_@f1+1
  9322  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  9323  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  9324  00C5  083B               	movf	(sprintf@fval+2)^(0+128),w
  9325  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  9326  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  9327  00C8  00A2               	movwf	__tdiv_to_l_@f1+2
  9328  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  9329  00CA  1303               	bcf	3,6	;RP1=0, select bank1
  9330  00CB  0832               	movf	sprintf@tmpval^(0+128),w
  9331  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  9332  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  9333  00CE  00A3               	movwf	__tdiv_to_l_@f2
  9334  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  9335  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  9336  00D1  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  9337  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  9338  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  9339  00D4  00A4               	movwf	__tdiv_to_l_@f2+1
  9340  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  9341  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  9342  00D7  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  9343  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  9344  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  9345  00DA  00A5               	movwf	__tdiv_to_l_@f2+2
  9346  00DB  160A  118A  247B  120A  118A  	fcall	__tdiv_to_l_
  9347  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  9348  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  9349  00E2  0823               	movf	?__tdiv_to_l_+3,w
  9350  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  9351  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  9352  00E5  00AD               	movwf	(sprintf@val+3)^(0+128)
  9353  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  9354  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  9355  00E8  0822               	movf	?__tdiv_to_l_+2,w
  9356  00E9  1683               	bsf	3,5	;RP0=1, select bank1
  9357  00EA  1303               	bcf	3,6	;RP1=0, select bank1
  9358  00EB  00AC               	movwf	(sprintf@val+2)^(0+128)
  9359  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  9360  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  9361  00EE  0821               	movf	?__tdiv_to_l_+1,w
  9362  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  9363  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  9364  00F1  00AB               	movwf	(sprintf@val+1)^(0+128)
  9365  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  9366  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  9367  00F4  0820               	movf	?__tdiv_to_l_,w
  9368  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  9369  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  9370  00F7  00AA               	movwf	sprintf@val^(0+128)
  9371  00F8                     l4179:
  9372                           
  9373                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1155:      fval = 0.0;
  9374  00F8  3000               	movlw	0
  9375  00F9  00B9               	movwf	sprintf@fval^(0+128)
  9376  00FA  3000               	movlw	0
  9377  00FB  00BA               	movwf	(sprintf@fval+1)^(0+128)
  9378  00FC  3000               	movlw	0
  9379  00FD  00BB               	movwf	(sprintf@fval+2)^(0+128)
  9380                           
  9381                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1156:     } else {
  9382  00FE  297C               	goto	l4185
  9383  00FF                     l4181:
  9384                           
  9385                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1157:      val = (unsigned long)
      +                          fval;
  9386  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  9387  0100  1303               	bcf	3,6	;RP1=0, select bank1
  9388  0101  0839               	movf	sprintf@fval^(0+128),w
  9389  0102  1283               	bcf	3,5	;RP0=0, select bank0
  9390  0103  1303               	bcf	3,6	;RP1=0, select bank0
  9391  0104  00C8               	movwf	___fttol@f1
  9392  0105  1683               	bsf	3,5	;RP0=1, select bank1
  9393  0106  1303               	bcf	3,6	;RP1=0, select bank1
  9394  0107  083A               	movf	(sprintf@fval+1)^(0+128),w
  9395  0108  1283               	bcf	3,5	;RP0=0, select bank0
  9396  0109  1303               	bcf	3,6	;RP1=0, select bank0
  9397  010A  00C9               	movwf	___fttol@f1+1
  9398  010B  1683               	bsf	3,5	;RP0=1, select bank1
  9399  010C  1303               	bcf	3,6	;RP1=0, select bank1
  9400  010D  083B               	movf	(sprintf@fval+2)^(0+128),w
  9401  010E  1283               	bcf	3,5	;RP0=0, select bank0
  9402  010F  1303               	bcf	3,6	;RP1=0, select bank0
  9403  0110  00CA               	movwf	___fttol@f1+2
  9404  0111  160A  118A  22A5  120A  118A  	fcall	___fttol
  9405  0116  1283               	bcf	3,5	;RP0=0, select bank0
  9406  0117  1303               	bcf	3,6	;RP1=0, select bank0
  9407  0118  084B               	movf	?___fttol+3,w
  9408  0119  1683               	bsf	3,5	;RP0=1, select bank1
  9409  011A  1303               	bcf	3,6	;RP1=0, select bank1
  9410  011B  00AD               	movwf	(sprintf@val+3)^(0+128)
  9411  011C  1283               	bcf	3,5	;RP0=0, select bank0
  9412  011D  1303               	bcf	3,6	;RP1=0, select bank0
  9413  011E  084A               	movf	?___fttol+2,w
  9414  011F  1683               	bsf	3,5	;RP0=1, select bank1
  9415  0120  1303               	bcf	3,6	;RP1=0, select bank1
  9416  0121  00AC               	movwf	(sprintf@val+2)^(0+128)
  9417  0122  1283               	bcf	3,5	;RP0=0, select bank0
  9418  0123  1303               	bcf	3,6	;RP1=0, select bank0
  9419  0124  0849               	movf	?___fttol+1,w
  9420  0125  1683               	bsf	3,5	;RP0=1, select bank1
  9421  0126  1303               	bcf	3,6	;RP1=0, select bank1
  9422  0127  00AB               	movwf	(sprintf@val+1)^(0+128)
  9423  0128  1283               	bcf	3,5	;RP0=0, select bank0
  9424  0129  1303               	bcf	3,6	;RP1=0, select bank0
  9425  012A  0848               	movf	?___fttol,w
  9426  012B  1683               	bsf	3,5	;RP0=1, select bank1
  9427  012C  1303               	bcf	3,6	;RP1=0, select bank1
  9428  012D  00AA               	movwf	sprintf@val^(0+128)
  9429                           
  9430                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1158:      fval -= (double)val;
  9431  012E  082D               	movf	(sprintf@val+3)^(0+128),w
  9432  012F  1283               	bcf	3,5	;RP0=0, select bank0
  9433  0130  1303               	bcf	3,6	;RP1=0, select bank0
  9434  0131  00D2               	movwf	___lltoft@c+3
  9435  0132  1683               	bsf	3,5	;RP0=1, select bank1
  9436  0133  1303               	bcf	3,6	;RP1=0, select bank1
  9437  0134  082C               	movf	(sprintf@val+2)^(0+128),w
  9438  0135  1283               	bcf	3,5	;RP0=0, select bank0
  9439  0136  1303               	bcf	3,6	;RP1=0, select bank0
  9440  0137  00D1               	movwf	___lltoft@c+2
  9441  0138  1683               	bsf	3,5	;RP0=1, select bank1
  9442  0139  1303               	bcf	3,6	;RP1=0, select bank1
  9443  013A  082B               	movf	(sprintf@val+1)^(0+128),w
  9444  013B  1283               	bcf	3,5	;RP0=0, select bank0
  9445  013C  1303               	bcf	3,6	;RP1=0, select bank0
  9446  013D  00D0               	movwf	___lltoft@c+1
  9447  013E  1683               	bsf	3,5	;RP0=1, select bank1
  9448  013F  1303               	bcf	3,6	;RP1=0, select bank1
  9449  0140  082A               	movf	sprintf@val^(0+128),w
  9450  0141  1283               	bcf	3,5	;RP0=0, select bank0
  9451  0142  1303               	bcf	3,6	;RP1=0, select bank0
  9452  0143  00CF               	movwf	___lltoft@c
  9453  0144  160A  158A  261F  120A  118A  	fcall	___lltoft
  9454  0149  1283               	bcf	3,5	;RP0=0, select bank0
  9455  014A  1303               	bcf	3,6	;RP1=0, select bank0
  9456  014B  084F               	movf	?___lltoft,w
  9457  014C  00DC               	movwf	___ftsub@f2
  9458  014D  0850               	movf	?___lltoft+1,w
  9459  014E  00DD               	movwf	___ftsub@f2+1
  9460  014F  0851               	movf	?___lltoft+2,w
  9461  0150  00DE               	movwf	___ftsub@f2+2
  9462  0151  1683               	bsf	3,5	;RP0=1, select bank1
  9463  0152  1303               	bcf	3,6	;RP1=0, select bank1
  9464  0153  0839               	movf	sprintf@fval^(0+128),w
  9465  0154  1283               	bcf	3,5	;RP0=0, select bank0
  9466  0155  1303               	bcf	3,6	;RP1=0, select bank0
  9467  0156  00DF               	movwf	___ftsub@f1
  9468  0157  1683               	bsf	3,5	;RP0=1, select bank1
  9469  0158  1303               	bcf	3,6	;RP1=0, select bank1
  9470  0159  083A               	movf	(sprintf@fval+1)^(0+128),w
  9471  015A  1283               	bcf	3,5	;RP0=0, select bank0
  9472  015B  1303               	bcf	3,6	;RP1=0, select bank0
  9473  015C  00E0               	movwf	___ftsub@f1+1
  9474  015D  1683               	bsf	3,5	;RP0=1, select bank1
  9475  015E  1303               	bcf	3,6	;RP1=0, select bank1
  9476  015F  083B               	movf	(sprintf@fval+2)^(0+128),w
  9477  0160  1283               	bcf	3,5	;RP0=0, select bank0
  9478  0161  1303               	bcf	3,6	;RP1=0, select bank0
  9479  0162  00E1               	movwf	___ftsub@f1+2
  9480  0163  160A  158A  259F  120A  118A  	fcall	___ftsub
  9481  0168  1283               	bcf	3,5	;RP0=0, select bank0
  9482  0169  1303               	bcf	3,6	;RP1=0, select bank0
  9483  016A  085C               	movf	?___ftsub,w
  9484  016B  1683               	bsf	3,5	;RP0=1, select bank1
  9485  016C  1303               	bcf	3,6	;RP1=0, select bank1
  9486  016D  00B9               	movwf	sprintf@fval^(0+128)
  9487  016E  1283               	bcf	3,5	;RP0=0, select bank0
  9488  016F  1303               	bcf	3,6	;RP1=0, select bank0
  9489  0170  085D               	movf	?___ftsub+1,w
  9490  0171  1683               	bsf	3,5	;RP0=1, select bank1
  9491  0172  1303               	bcf	3,6	;RP1=0, select bank1
  9492  0173  00BA               	movwf	(sprintf@fval+1)^(0+128)
  9493  0174  1283               	bcf	3,5	;RP0=0, select bank0
  9494  0175  1303               	bcf	3,6	;RP1=0, select bank0
  9495  0176  085E               	movf	?___ftsub+2,w
  9496  0177  1683               	bsf	3,5	;RP0=1, select bank1
  9497  0178  1303               	bcf	3,6	;RP1=0, select bank1
  9498  0179  00BB               	movwf	(sprintf@fval+2)^(0+128)
  9499  017A                     l4183:
  9500                           
  9501                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1159:      eexp = 0;
  9502  017A  01B6               	clrf	sprintf@eexp^(0+128)
  9503  017B  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  9504  017C                     l4185:
  9505                           
  9506                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1162:     for(c = 1 ; c != (size
      +                          of dpowers/sizeof dpowers[0]) ; c++)
  9507  017C  01BE               	clrf	sprintf@c^(0+128)
  9508  017D  0ABE               	incf	sprintf@c^(0+128),f
  9509  017E                     l4191:
  9510                           
  9511                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1163:      if(val < dpowers[c])
  9512  017E  083E               	movf	sprintf@c^(0+128),w
  9513  017F  00A0               	movwf	??_sprintf^(0+128)
  9514  0180  3001               	movlw	1
  9515  0181                     u6805:
  9516  0181  1003               	clrc
  9517  0182  0DA0               	rlf	??_sprintf^(0+128),f
  9518  0183  3EFF               	addlw	-1
  9519  0184  1D03               	skipz
  9520  0185  2981               	goto	u6805
  9521  0186  1003               	clrc
  9522  0187  0D20               	rlf	??_sprintf^(0+128),w
  9523  0188  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9524  0189  0084               	movwf	4
  9525  018A  160A  118A  2000  120A  118A  	fcall	stringdir
  9526  018F  00A1               	movwf	(??_sprintf+1)^(0+128)
  9527  0190  160A  118A  2000  120A  118A  	fcall	stringdir
  9528  0195  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  9529  0196  160A  118A  2000  120A  118A  	fcall	stringdir
  9530  019B  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
  9531  019C  160A  118A  2000  120A  118A  	fcall	stringdir
  9532  01A1  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
  9533  01A2  0824               	movf	(??_sprintf+4)^(0+128),w
  9534  01A3  022D               	subwf	(sprintf@val+3)^(0+128),w
  9535  01A4  1D03               	skipz
  9536  01A5  29B0               	goto	u6815
  9537  01A6  0823               	movf	(??_sprintf+3)^(0+128),w
  9538  01A7  022C               	subwf	(sprintf@val+2)^(0+128),w
  9539  01A8  1D03               	skipz
  9540  01A9  29B0               	goto	u6815
  9541  01AA  0822               	movf	(??_sprintf+2)^(0+128),w
  9542  01AB  022B               	subwf	(sprintf@val+1)^(0+128),w
  9543  01AC  1D03               	skipz
  9544  01AD  29B0               	goto	u6815
  9545  01AE  0821               	movf	(??_sprintf+1)^(0+128),w
  9546  01AF  022A               	subwf	sprintf@val^(0+128),w
  9547  01B0                     u6815:
  9548  01B0  1803               	skipnc
  9549  01B1  29B3               	goto	u6811
  9550  01B2  29B4               	goto	u6810
  9551  01B3                     u6811:
  9552  01B3  29B5               	goto	l4195
  9553  01B4                     u6810:
  9554  01B4  29BF               	goto	l4197
  9555  01B5                     l4195:
  9556  01B5  3001               	movlw	1
  9557  01B6  00A0               	movwf	??_sprintf^(0+128)
  9558  01B7  0820               	movf	??_sprintf^(0+128),w
  9559  01B8  07BE               	addwf	sprintf@c^(0+128),f
  9560  01B9  300A               	movlw	10
  9561  01BA  063E               	xorwf	sprintf@c^(0+128),w
  9562  01BB  1D03               	btfss	3,2
  9563  01BC  29BE               	goto	u6821
  9564  01BD  29BF               	goto	u6820
  9565  01BE                     u6821:
  9566  01BE  297E               	goto	l4191
  9567  01BF                     u6820:
  9568  01BF                     l4197:
  9569                           
  9570                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1168:     width -= prec + c + ee
      +                          xp;
  9571  01BF  083E               	movf	sprintf@c^(0+128),w
  9572  01C0  073C               	addwf	sprintf@prec^(0+128),w
  9573  01C1  00A0               	movwf	??_sprintf^(0+128)
  9574  01C2  083D               	movf	(sprintf@prec+1)^(0+128),w
  9575  01C3  1803               	skipnc
  9576  01C4  0A3D               	incf	(sprintf@prec+1)^(0+128),w
  9577  01C5  00A1               	movwf	(??_sprintf^(0+128)+1)
  9578  01C6  0836               	movf	sprintf@eexp^(0+128),w
  9579  01C7  0720               	addwf	??_sprintf^(0+128),w
  9580  01C8  00A2               	movwf	(??_sprintf+2)^(0+128)
  9581  01C9  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9582  01CA  1803               	skipnc
  9583  01CB  0A37               	incf	(sprintf@eexp+1)^(0+128),w
  9584  01CC  0721               	addwf	(??_sprintf+1)^(0+128),w
  9585  01CD  00A3               	movwf	(??_sprintf+3)^(0+128)
  9586  01CE  0822               	movf	(??_sprintf+2)^(0+128),w
  9587  01CF  02B0               	subwf	sprintf@width^(0+128),f
  9588  01D0  0823               	movf	(??_sprintf+3)^(0+128),w
  9589  01D1  1C03               	skipc
  9590  01D2  03B1               	decf	(sprintf@width+1)^(0+128),f
  9591  01D3  02B1               	subwf	(sprintf@width+1)^(0+128),f
  9592                           
  9593                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1169:     if(
  9594  01D4  083C               	movf	sprintf@prec^(0+128),w
  9595  01D5  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  9596  01D6  1903               	btfsc	3,2
  9597  01D7  29D9               	goto	u6831
  9598  01D8  29DA               	goto	u6830
  9599  01D9                     u6831:
  9600  01D9  29E0               	goto	l4201
  9601  01DA                     u6830:
  9602  01DA                     l4199:
  9603                           
  9604                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1174:      width--;
  9605  01DA  30FF               	movlw	255
  9606  01DB  07B0               	addwf	sprintf@width^(0+128),f
  9607  01DC  1803               	skipnc
  9608  01DD  0AB1               	incf	(sprintf@width+1)^(0+128),f
  9609  01DE  30FF               	movlw	255
  9610  01DF  07B1               	addwf	(sprintf@width+1)^(0+128),f
  9611  01E0                     l4201:
  9612                           
  9613                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1175:     if(flag & 0x03)
  9614  01E0  3003               	movlw	3
  9615  01E1  052E               	andwf	sprintf@flag^(0+128),w
  9616  01E2  00A0               	movwf	??_sprintf^(0+128)
  9617  01E3  3000               	movlw	0
  9618  01E4  052F               	andwf	(sprintf@flag+1)^(0+128),w
  9619  01E5  00A1               	movwf	(??_sprintf+1)^(0+128)
  9620  01E6  0820               	movf	??_sprintf^(0+128),w
  9621  01E7  0421               	iorwf	(??_sprintf^(0+128)+1),w
  9622  01E8  1903               	btfsc	3,2
  9623  01E9  29EB               	goto	u6841
  9624  01EA  29EC               	goto	u6840
  9625  01EB                     u6841:
  9626  01EB  2A01               	goto	l4211
  9627  01EC                     u6840:
  9628  01EC                     l4203:
  9629                           
  9630                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1176:      width--;
  9631  01EC  30FF               	movlw	255
  9632  01ED  07B0               	addwf	sprintf@width^(0+128),f
  9633  01EE  1803               	skipnc
  9634  01EF  0AB1               	incf	(sprintf@width+1)^(0+128),f
  9635  01F0  30FF               	movlw	255
  9636  01F1  07B1               	addwf	(sprintf@width+1)^(0+128),f
  9637  01F2  2A01               	goto	l4211
  9638  01F3                     l4205:
  9639                           
  9640                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1207:       ((*sp++ = (' ')));
  9641  01F3  3020               	movlw	32
  9642  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  9643  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  9644  01F6  00A0               	movwf	??_sprintf^(0+128)
  9645  01F7  0838               	movf	sprintf@sp^(0+128),w
  9646  01F8  0084               	movwf	4
  9647  01F9  0820               	movf	??_sprintf^(0+128),w
  9648  01FA  1383               	bcf	3,7	;select IRP bank0
  9649  01FB  0080               	movwf	0
  9650  01FC                     l4207:
  9651  01FC  3001               	movlw	1
  9652  01FD  00A0               	movwf	??_sprintf^(0+128)
  9653  01FE  0820               	movf	??_sprintf^(0+128),w
  9654  01FF  07B8               	addwf	sprintf@sp^(0+128),f
  9655  0200  29EC               	goto	l4203
  9656  0201                     l4211:
  9657                           
  9658                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1206:      while(width > 0) {
  9659  0201  0831               	movf	(sprintf@width+1)^(0+128),w
  9660  0202  3A80               	xorlw	128
  9661  0203  00FF               	movwf	btemp+1
  9662  0204  3080               	movlw	128
  9663  0205  027F               	subwf	btemp+1,w
  9664  0206  1D03               	skipz
  9665  0207  2A0A               	goto	u6855
  9666  0208  3001               	movlw	1
  9667  0209  0230               	subwf	sprintf@width^(0+128),w
  9668  020A                     u6855:
  9669  020A  1803               	skipnc
  9670  020B  2A0D               	goto	u6851
  9671  020C  2A0E               	goto	u6850
  9672  020D                     u6851:
  9673  020D  29F3               	goto	l4205
  9674  020E                     u6850:
  9675  020E                     l4213:
  9676                           
  9677                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x03)
  9678  020E  3003               	movlw	3
  9679  020F  1683               	bsf	3,5	;RP0=1, select bank1
  9680  0210  1303               	bcf	3,6	;RP1=0, select bank1
  9681  0211  052E               	andwf	sprintf@flag^(0+128),w
  9682  0212  00A0               	movwf	??_sprintf^(0+128)
  9683  0213  3000               	movlw	0
  9684  0214  052F               	andwf	(sprintf@flag+1)^(0+128),w
  9685  0215  00A1               	movwf	(??_sprintf+1)^(0+128)
  9686  0216  0820               	movf	??_sprintf^(0+128),w
  9687  0217  0421               	iorwf	(??_sprintf^(0+128)+1),w
  9688  0218  1903               	btfsc	3,2
  9689  0219  2A1B               	goto	u6861
  9690  021A  2A1C               	goto	u6860
  9691  021B                     u6861:
  9692  021B  2ACE               	goto	l391
  9693  021C                     u6860:
  9694  021C                     l4215:
  9695                           
  9696                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1216:      ((*sp++ = ('-')));
  9697  021C  302D               	movlw	45
  9698  021D  00A0               	movwf	??_sprintf^(0+128)
  9699  021E  0838               	movf	sprintf@sp^(0+128),w
  9700  021F  0084               	movwf	4
  9701  0220  0820               	movf	??_sprintf^(0+128),w
  9702  0221  1383               	bcf	3,7	;select IRP bank0
  9703  0222  0080               	movwf	0
  9704  0223                     l4217:
  9705  0223  3001               	movlw	1
  9706  0224  00A0               	movwf	??_sprintf^(0+128)
  9707  0225  0820               	movf	??_sprintf^(0+128),w
  9708  0226  07B8               	addwf	sprintf@sp^(0+128),f
  9709  0227  2ACE               	goto	l391
  9710  0228                     l4219:
  9711                           
  9712                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1226:     {;D:\MPLAB XC8 compile
      +                          r\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = val/dpowers[c];
  9713  0228  083E               	movf	sprintf@c^(0+128),w
  9714  0229  00A0               	movwf	??_sprintf^(0+128)
  9715  022A  3001               	movlw	1
  9716  022B                     u6875:
  9717  022B  1003               	clrc
  9718  022C  0DA0               	rlf	??_sprintf^(0+128),f
  9719  022D  3EFF               	addlw	-1
  9720  022E  1D03               	skipz
  9721  022F  2A2B               	goto	u6875
  9722  0230  1003               	clrc
  9723  0231  0D20               	rlf	??_sprintf^(0+128),w
  9724  0232  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9725  0233  0084               	movwf	4
  9726  0234  160A  118A  2000  120A  118A  	fcall	stringdir
  9727  0239  1283               	bcf	3,5	;RP0=0, select bank0
  9728  023A  1303               	bcf	3,6	;RP1=0, select bank0
  9729  023B  00A0               	movwf	___lldiv@divisor
  9730  023C  160A  118A  2000  120A  118A  	fcall	stringdir
  9731  0241  00A1               	movwf	___lldiv@divisor+1
  9732  0242  160A  118A  2000  120A  118A  	fcall	stringdir
  9733  0247  00A2               	movwf	___lldiv@divisor+2
  9734  0248  160A  118A  2000  120A  118A  	fcall	stringdir
  9735  024D  00A3               	movwf	___lldiv@divisor+3
  9736  024E  1683               	bsf	3,5	;RP0=1, select bank1
  9737  024F  1303               	bcf	3,6	;RP1=0, select bank1
  9738  0250  082D               	movf	(sprintf@val+3)^(0+128),w
  9739  0251  1283               	bcf	3,5	;RP0=0, select bank0
  9740  0252  1303               	bcf	3,6	;RP1=0, select bank0
  9741  0253  00A7               	movwf	___lldiv@dividend+3
  9742  0254  1683               	bsf	3,5	;RP0=1, select bank1
  9743  0255  1303               	bcf	3,6	;RP1=0, select bank1
  9744  0256  082C               	movf	(sprintf@val+2)^(0+128),w
  9745  0257  1283               	bcf	3,5	;RP0=0, select bank0
  9746  0258  1303               	bcf	3,6	;RP1=0, select bank0
  9747  0259  00A6               	movwf	___lldiv@dividend+2
  9748  025A  1683               	bsf	3,5	;RP0=1, select bank1
  9749  025B  1303               	bcf	3,6	;RP1=0, select bank1
  9750  025C  082B               	movf	(sprintf@val+1)^(0+128),w
  9751  025D  1283               	bcf	3,5	;RP0=0, select bank0
  9752  025E  1303               	bcf	3,6	;RP1=0, select bank0
  9753  025F  00A5               	movwf	___lldiv@dividend+1
  9754  0260  1683               	bsf	3,5	;RP0=1, select bank1
  9755  0261  1303               	bcf	3,6	;RP1=0, select bank1
  9756  0262  082A               	movf	sprintf@val^(0+128),w
  9757  0263  1283               	bcf	3,5	;RP0=0, select bank0
  9758  0264  1303               	bcf	3,6	;RP1=0, select bank0
  9759  0265  00A4               	movwf	___lldiv@dividend
  9760  0266  160A  118A  2152  120A  118A  	fcall	___lldiv
  9761  026B  1283               	bcf	3,5	;RP0=0, select bank0
  9762  026C  1303               	bcf	3,6	;RP1=0, select bank0
  9763  026D  0823               	movf	?___lldiv+3,w
  9764  026E  1683               	bsf	3,5	;RP0=1, select bank1
  9765  026F  1303               	bcf	3,6	;RP1=0, select bank1
  9766  0270  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  9767  0271  1283               	bcf	3,5	;RP0=0, select bank0
  9768  0272  1303               	bcf	3,6	;RP1=0, select bank0
  9769  0273  0822               	movf	?___lldiv+2,w
  9770  0274  1683               	bsf	3,5	;RP0=1, select bank1
  9771  0275  1303               	bcf	3,6	;RP1=0, select bank1
  9772  0276  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  9773  0277  1283               	bcf	3,5	;RP0=0, select bank0
  9774  0278  1303               	bcf	3,6	;RP1=0, select bank0
  9775  0279  0821               	movf	?___lldiv+1,w
  9776  027A  1683               	bsf	3,5	;RP0=1, select bank1
  9777  027B  1303               	bcf	3,6	;RP1=0, select bank1
  9778  027C  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  9779  027D  1283               	bcf	3,5	;RP0=0, select bank0
  9780  027E  1303               	bcf	3,6	;RP1=0, select bank0
  9781  027F  0820               	movf	?___lldiv,w
  9782  0280  1683               	bsf	3,5	;RP0=1, select bank1
  9783  0281  1303               	bcf	3,6	;RP1=0, select bank1
  9784  0282  00B2               	movwf	sprintf@tmpval^(0+128)
  9785  0283                     l4221:
  9786                           
  9787                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1228:      tmpval.vd %= 10;
  9788  0283  3000               	movlw	0
  9789  0284  1283               	bcf	3,5	;RP0=0, select bank0
  9790  0285  1303               	bcf	3,6	;RP1=0, select bank0
  9791  0286  00A3               	movwf	___llmod@divisor+3
  9792  0287  3000               	movlw	0
  9793  0288  00A2               	movwf	___llmod@divisor+2
  9794  0289  3000               	movlw	0
  9795  028A  00A1               	movwf	___llmod@divisor+1
  9796  028B  300A               	movlw	10
  9797  028C  00A0               	movwf	___llmod@divisor
  9798  028D  1683               	bsf	3,5	;RP0=1, select bank1
  9799  028E  1303               	bcf	3,6	;RP1=0, select bank1
  9800  028F  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  9801  0290  1283               	bcf	3,5	;RP0=0, select bank0
  9802  0291  1303               	bcf	3,6	;RP1=0, select bank0
  9803  0292  00A7               	movwf	___llmod@dividend+3
  9804  0293  1683               	bsf	3,5	;RP0=1, select bank1
  9805  0294  1303               	bcf	3,6	;RP1=0, select bank1
  9806  0295  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  9807  0296  1283               	bcf	3,5	;RP0=0, select bank0
  9808  0297  1303               	bcf	3,6	;RP1=0, select bank0
  9809  0298  00A6               	movwf	___llmod@dividend+2
  9810  0299  1683               	bsf	3,5	;RP0=1, select bank1
  9811  029A  1303               	bcf	3,6	;RP1=0, select bank1
  9812  029B  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  9813  029C  1283               	bcf	3,5	;RP0=0, select bank0
  9814  029D  1303               	bcf	3,6	;RP1=0, select bank0
  9815  029E  00A5               	movwf	___llmod@dividend+1
  9816  029F  1683               	bsf	3,5	;RP0=1, select bank1
  9817  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  9818  02A1  0832               	movf	sprintf@tmpval^(0+128),w
  9819  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  9820  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  9821  02A4  00A4               	movwf	___llmod@dividend
  9822  02A5  160A  118A  209B  120A  118A  	fcall	___llmod
  9823  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  9824  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  9825  02AC  0823               	movf	?___llmod+3,w
  9826  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  9827  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  9828  02AF  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  9829  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  9830  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  9831  02B2  0822               	movf	?___llmod+2,w
  9832  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  9833  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  9834  02B5  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  9835  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  9836  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  9837  02B8  0821               	movf	?___llmod+1,w
  9838  02B9  1683               	bsf	3,5	;RP0=1, select bank1
  9839  02BA  1303               	bcf	3,6	;RP1=0, select bank1
  9840  02BB  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  9841  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  9842  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  9843  02BE  0820               	movf	?___llmod,w
  9844  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  9845  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  9846  02C1  00B2               	movwf	sprintf@tmpval^(0+128)
  9847  02C2                     l4223:
  9848                           
  9849                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1229:      ((*sp++ = ('0' + tmpv
      +                          al.vd)));
  9850  02C2  0832               	movf	sprintf@tmpval^(0+128),w
  9851  02C3  3E30               	addlw	48
  9852  02C4  00A0               	movwf	??_sprintf^(0+128)
  9853  02C5  0838               	movf	sprintf@sp^(0+128),w
  9854  02C6  0084               	movwf	4
  9855  02C7  0820               	movf	??_sprintf^(0+128),w
  9856  02C8  1383               	bcf	3,7	;select IRP bank0
  9857  02C9  0080               	movwf	0
  9858  02CA  3001               	movlw	1
  9859  02CB  00A0               	movwf	??_sprintf^(0+128)
  9860  02CC  0820               	movf	??_sprintf^(0+128),w
  9861  02CD  07B8               	addwf	sprintf@sp^(0+128),f
  9862  02CE                     l391:	
  9863                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1230:     };D:\MPLAB XC8 compile
      +                          r\pic\sources\c90\common\doprnt.c: 1232:    }
  9864                           
  9865                           
  9866                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1222:    while(c--) {
  9867  02CE  3001               	movlw	1
  9868  02CF  02BE               	subwf	sprintf@c^(0+128),f
  9869  02D0  0A3E               	incf	sprintf@c^(0+128),w
  9870  02D1  1D03               	btfss	3,2
  9871  02D2  2AD4               	goto	u6881
  9872  02D3  2AD5               	goto	u6880
  9873  02D4                     u6881:
  9874  02D4  2A28               	goto	l4219
  9875  02D5                     u6880:
  9876  02D5  2AE9               	goto	l4231
  9877  02D6                     l4225:
  9878                           
  9879                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++ = ('0')));
  9880  02D6  3030               	movlw	48
  9881  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  9882  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  9883  02D9  00A0               	movwf	??_sprintf^(0+128)
  9884  02DA  0838               	movf	sprintf@sp^(0+128),w
  9885  02DB  0084               	movwf	4
  9886  02DC  0820               	movf	??_sprintf^(0+128),w
  9887  02DD  1383               	bcf	3,7	;select IRP bank0
  9888  02DE  0080               	movwf	0
  9889  02DF                     l4227:
  9890  02DF  3001               	movlw	1
  9891  02E0  00A0               	movwf	??_sprintf^(0+128)
  9892  02E1  0820               	movf	??_sprintf^(0+128),w
  9893  02E2  07B8               	addwf	sprintf@sp^(0+128),f
  9894  02E3                     l4229:
  9895                           
  9896                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9897  02E3  30FF               	movlw	255
  9898  02E4  07B6               	addwf	sprintf@eexp^(0+128),f
  9899  02E5  1803               	skipnc
  9900  02E6  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9901  02E7  30FF               	movlw	255
  9902  02E8  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9903  02E9                     l4231:
  9904                           
  9905                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1233:    while(eexp > 0) {
  9906  02E9  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9907  02EA  3A80               	xorlw	128
  9908  02EB  00FF               	movwf	btemp+1
  9909  02EC  3080               	movlw	128
  9910  02ED  027F               	subwf	btemp+1,w
  9911  02EE  1D03               	skipz
  9912  02EF  2AF2               	goto	u6895
  9913  02F0  3001               	movlw	1
  9914  02F1  0236               	subwf	sprintf@eexp^(0+128),w
  9915  02F2                     u6895:
  9916  02F2  1803               	skipnc
  9917  02F3  2AF5               	goto	u6891
  9918  02F4  2AF6               	goto	u6890
  9919  02F5                     u6891:
  9920  02F5  2AD6               	goto	l4225
  9921  02F6                     u6890:
  9922  02F6                     l4233:
  9923                           
  9924                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1237:    if(prec > (int)((sizeof
      +                           dpowers/sizeof dpowers[0])-2))
  9925  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  9926  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  9927  02F8  083D               	movf	(sprintf@prec+1)^(0+128),w
  9928  02F9  3A80               	xorlw	128
  9929  02FA  00FF               	movwf	btemp+1
  9930  02FB  3080               	movlw	128
  9931  02FC  027F               	subwf	btemp+1,w
  9932  02FD  1D03               	skipz
  9933  02FE  2B01               	goto	u6905
  9934  02FF  3009               	movlw	9
  9935  0300  023C               	subwf	sprintf@prec^(0+128),w
  9936  0301                     u6905:
  9937  0301  1C03               	skipc
  9938  0302  2B04               	goto	u6901
  9939  0303  2B05               	goto	u6900
  9940  0304                     u6901:
  9941  0304  2B0C               	goto	l4237
  9942  0305                     u6900:
  9943  0305                     l4235:
  9944                           
  9945                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1238:     c = (sizeof dpowers/si
      +                          zeof dpowers[0])-2;
  9946  0305  3008               	movlw	8
  9947  0306  1683               	bsf	3,5	;RP0=1, select bank1
  9948  0307  1303               	bcf	3,6	;RP1=0, select bank1
  9949  0308  00A0               	movwf	??_sprintf^(0+128)
  9950  0309  0820               	movf	??_sprintf^(0+128),w
  9951  030A  00BE               	movwf	sprintf@c^(0+128)
  9952  030B  2B12               	goto	l398
  9953  030C                     l4237:
  9954                           
  9955                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1240:     c = (char)prec;
  9956  030C  1683               	bsf	3,5	;RP0=1, select bank1
  9957  030D  1303               	bcf	3,6	;RP1=0, select bank1
  9958  030E  083C               	movf	sprintf@prec^(0+128),w
  9959  030F  00A0               	movwf	??_sprintf^(0+128)
  9960  0310  0820               	movf	??_sprintf^(0+128),w
  9961  0311  00BE               	movwf	sprintf@c^(0+128)
  9962  0312                     l398:
  9963                           
  9964                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1241:    prec -= (int)c;
  9965  0312  083E               	movf	sprintf@c^(0+128),w
  9966  0313  00A0               	movwf	??_sprintf^(0+128)
  9967  0314  01A1               	clrf	(??_sprintf^(0+128)+1)
  9968  0315  0820               	movf	??_sprintf^(0+128),w
  9969  0316  02BC               	subwf	sprintf@prec^(0+128),f
  9970  0317  0821               	movf	(??_sprintf+1)^(0+128),w
  9971  0318  1C03               	skipc
  9972  0319  03BD               	decf	(sprintf@prec+1)^(0+128),f
  9973  031A  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  9974  031B                     l4239:
  9975                           
  9976                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9977  031B  083E               	movf	sprintf@c^(0+128),w
  9978  031C  1903               	btfsc	3,2
  9979  031D  2B1F               	goto	u6911
  9980  031E  2B20               	goto	u6910
  9981  031F                     u6911:
  9982  031F  2B2B               	goto	l4245
  9983  0320                     u6910:
  9984  0320                     l4241:
  9985                           
  9986                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++ = ('.')));
  9987  0320  302E               	movlw	46
  9988  0321  00A0               	movwf	??_sprintf^(0+128)
  9989  0322  0838               	movf	sprintf@sp^(0+128),w
  9990  0323  0084               	movwf	4
  9991  0324  0820               	movf	??_sprintf^(0+128),w
  9992  0325  1383               	bcf	3,7	;select IRP bank0
  9993  0326  0080               	movwf	0
  9994  0327                     l4243:
  9995  0327  3001               	movlw	1
  9996  0328  00A0               	movwf	??_sprintf^(0+128)
  9997  0329  0820               	movf	??_sprintf^(0+128),w
  9998  032A  07B8               	addwf	sprintf@sp^(0+128),f
  9999  032B                     l4245:
 10000                           
 10001                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(f
      +                          val * scale((signed char)c));
 10002  032B  083E               	movf	sprintf@c^(0+128),w
 10003  032C  120A  158A  2273  120A  118A  	fcall	_scale
 10004  0331  1283               	bcf	3,5	;RP0=0, select bank0
 10005  0332  1303               	bcf	3,6	;RP1=0, select bank0
 10006  0333  083F               	movf	?_scale,w
 10007  0334  1683               	bsf	3,5	;RP0=1, select bank1
 10008  0335  1303               	bcf	3,6	;RP1=0, select bank1
 10009  0336  00A6               	movwf	_sprintf$961^(0+128)
 10010  0337  1283               	bcf	3,5	;RP0=0, select bank0
 10011  0338  1303               	bcf	3,6	;RP1=0, select bank0
 10012  0339  0840               	movf	?_scale+1,w
 10013  033A  1683               	bsf	3,5	;RP0=1, select bank1
 10014  033B  1303               	bcf	3,6	;RP1=0, select bank1
 10015  033C  00A7               	movwf	(_sprintf$961+1)^(0+128)
 10016  033D  1283               	bcf	3,5	;RP0=0, select bank0
 10017  033E  1303               	bcf	3,6	;RP1=0, select bank0
 10018  033F  0841               	movf	?_scale+2,w
 10019  0340  1683               	bsf	3,5	;RP0=1, select bank1
 10020  0341  1303               	bcf	3,6	;RP1=0, select bank1
 10021  0342  00A8               	movwf	(_sprintf$961+2)^(0+128)
 10022  0343                     l4247:
 10023                           
 10024                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1253:    val = (unsigned long)(f
      +                          val * scale((signed char)c));
 10025  0343  0826               	movf	_sprintf$961^(0+128),w
 10026  0344  1283               	bcf	3,5	;RP0=0, select bank0
 10027  0345  1303               	bcf	3,6	;RP1=0, select bank0
 10028  0346  00B2               	movwf	___ftmul@f2
 10029  0347  1683               	bsf	3,5	;RP0=1, select bank1
 10030  0348  1303               	bcf	3,6	;RP1=0, select bank1
 10031  0349  0827               	movf	(_sprintf$961+1)^(0+128),w
 10032  034A  1283               	bcf	3,5	;RP0=0, select bank0
 10033  034B  1303               	bcf	3,6	;RP1=0, select bank0
 10034  034C  00B3               	movwf	___ftmul@f2+1
 10035  034D  1683               	bsf	3,5	;RP0=1, select bank1
 10036  034E  1303               	bcf	3,6	;RP1=0, select bank1
 10037  034F  0828               	movf	(_sprintf$961+2)^(0+128),w
 10038  0350  1283               	bcf	3,5	;RP0=0, select bank0
 10039  0351  1303               	bcf	3,6	;RP1=0, select bank0
 10040  0352  00B4               	movwf	___ftmul@f2+2
 10041  0353  1683               	bsf	3,5	;RP0=1, select bank1
 10042  0354  1303               	bcf	3,6	;RP1=0, select bank1
 10043  0355  0839               	movf	sprintf@fval^(0+128),w
 10044  0356  1283               	bcf	3,5	;RP0=0, select bank0
 10045  0357  1303               	bcf	3,6	;RP1=0, select bank0
 10046  0358  00AF               	movwf	___ftmul@f1
 10047  0359  1683               	bsf	3,5	;RP0=1, select bank1
 10048  035A  1303               	bcf	3,6	;RP1=0, select bank1
 10049  035B  083A               	movf	(sprintf@fval+1)^(0+128),w
 10050  035C  1283               	bcf	3,5	;RP0=0, select bank0
 10051  035D  1303               	bcf	3,6	;RP1=0, select bank0
 10052  035E  00B0               	movwf	___ftmul@f1+1
 10053  035F  1683               	bsf	3,5	;RP0=1, select bank1
 10054  0360  1303               	bcf	3,6	;RP1=0, select bank1
 10055  0361  083B               	movf	(sprintf@fval+2)^(0+128),w
 10056  0362  1283               	bcf	3,5	;RP0=0, select bank0
 10057  0363  1303               	bcf	3,6	;RP1=0, select bank0
 10058  0364  00B1               	movwf	___ftmul@f1+2
 10059  0365  160A  118A  2614  120A  118A  	fcall	___ftmul
 10060  036A  1283               	bcf	3,5	;RP0=0, select bank0
 10061  036B  1303               	bcf	3,6	;RP1=0, select bank0
 10062  036C  082F               	movf	?___ftmul,w
 10063  036D  00C8               	movwf	___fttol@f1
 10064  036E  0830               	movf	?___ftmul+1,w
 10065  036F  00C9               	movwf	___fttol@f1+1
 10066  0370  0831               	movf	?___ftmul+2,w
 10067  0371  00CA               	movwf	___fttol@f1+2
 10068  0372  160A  118A  22A5  120A  118A  	fcall	___fttol
 10069  0377  1283               	bcf	3,5	;RP0=0, select bank0
 10070  0378  1303               	bcf	3,6	;RP1=0, select bank0
 10071  0379  084B               	movf	?___fttol+3,w
 10072  037A  1683               	bsf	3,5	;RP0=1, select bank1
 10073  037B  1303               	bcf	3,6	;RP1=0, select bank1
 10074  037C  00AD               	movwf	(sprintf@val+3)^(0+128)
 10075  037D  1283               	bcf	3,5	;RP0=0, select bank0
 10076  037E  1303               	bcf	3,6	;RP1=0, select bank0
 10077  037F  084A               	movf	?___fttol+2,w
 10078  0380  1683               	bsf	3,5	;RP0=1, select bank1
 10079  0381  1303               	bcf	3,6	;RP1=0, select bank1
 10080  0382  00AC               	movwf	(sprintf@val+2)^(0+128)
 10081  0383  1283               	bcf	3,5	;RP0=0, select bank0
 10082  0384  1303               	bcf	3,6	;RP1=0, select bank0
 10083  0385  0849               	movf	?___fttol+1,w
 10084  0386  1683               	bsf	3,5	;RP0=1, select bank1
 10085  0387  1303               	bcf	3,6	;RP1=0, select bank1
 10086  0388  00AB               	movwf	(sprintf@val+1)^(0+128)
 10087  0389  1283               	bcf	3,5	;RP0=0, select bank0
 10088  038A  1303               	bcf	3,6	;RP1=0, select bank0
 10089  038B  0848               	movf	?___fttol,w
 10090  038C  1683               	bsf	3,5	;RP0=1, select bank1
 10091  038D  1303               	bcf	3,6	;RP1=0, select bank1
 10092  038E  00AA               	movwf	sprintf@val^(0+128)
 10093                           
 10094                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
 10095  038F  2C91               	goto	l4257
 10096  0390                     l4249:
 10097                           
 10098                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1255:     tmpval.vd = val/dpower
      +                          s[c];
 10099  0390  083E               	movf	sprintf@c^(0+128),w
 10100  0391  00A0               	movwf	??_sprintf^(0+128)
 10101  0392  3001               	movlw	1
 10102  0393                     u6925:
 10103  0393  1003               	clrc
 10104  0394  0DA0               	rlf	??_sprintf^(0+128),f
 10105  0395  3EFF               	addlw	-1
 10106  0396  1D03               	skipz
 10107  0397  2B93               	goto	u6925
 10108  0398  1003               	clrc
 10109  0399  0D20               	rlf	??_sprintf^(0+128),w
 10110  039A  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10111  039B  0084               	movwf	4
 10112  039C  160A  118A  2000  120A  118A  	fcall	stringdir
 10113  03A1  1283               	bcf	3,5	;RP0=0, select bank0
 10114  03A2  1303               	bcf	3,6	;RP1=0, select bank0
 10115  03A3  00A0               	movwf	___lldiv@divisor
 10116  03A4  160A  118A  2000  120A  118A  	fcall	stringdir
 10117  03A9  00A1               	movwf	___lldiv@divisor+1
 10118  03AA  160A  118A  2000  120A  118A  	fcall	stringdir
 10119  03AF  00A2               	movwf	___lldiv@divisor+2
 10120  03B0  160A  118A  2000  120A  118A  	fcall	stringdir
 10121  03B5  00A3               	movwf	___lldiv@divisor+3
 10122  03B6  1683               	bsf	3,5	;RP0=1, select bank1
 10123  03B7  1303               	bcf	3,6	;RP1=0, select bank1
 10124  03B8  082D               	movf	(sprintf@val+3)^(0+128),w
 10125  03B9  1283               	bcf	3,5	;RP0=0, select bank0
 10126  03BA  1303               	bcf	3,6	;RP1=0, select bank0
 10127  03BB  00A7               	movwf	___lldiv@dividend+3
 10128  03BC  1683               	bsf	3,5	;RP0=1, select bank1
 10129  03BD  1303               	bcf	3,6	;RP1=0, select bank1
 10130  03BE  082C               	movf	(sprintf@val+2)^(0+128),w
 10131  03BF  1283               	bcf	3,5	;RP0=0, select bank0
 10132  03C0  1303               	bcf	3,6	;RP1=0, select bank0
 10133  03C1  00A6               	movwf	___lldiv@dividend+2
 10134  03C2  1683               	bsf	3,5	;RP0=1, select bank1
 10135  03C3  1303               	bcf	3,6	;RP1=0, select bank1
 10136  03C4  082B               	movf	(sprintf@val+1)^(0+128),w
 10137  03C5  1283               	bcf	3,5	;RP0=0, select bank0
 10138  03C6  1303               	bcf	3,6	;RP1=0, select bank0
 10139  03C7  00A5               	movwf	___lldiv@dividend+1
 10140  03C8  1683               	bsf	3,5	;RP0=1, select bank1
 10141  03C9  1303               	bcf	3,6	;RP1=0, select bank1
 10142  03CA  082A               	movf	sprintf@val^(0+128),w
 10143  03CB  1283               	bcf	3,5	;RP0=0, select bank0
 10144  03CC  1303               	bcf	3,6	;RP1=0, select bank0
 10145  03CD  00A4               	movwf	___lldiv@dividend
 10146  03CE  160A  118A  2152  120A  118A  	fcall	___lldiv
 10147  03D3  1283               	bcf	3,5	;RP0=0, select bank0
 10148  03D4  1303               	bcf	3,6	;RP1=0, select bank0
 10149  03D5  0823               	movf	?___lldiv+3,w
 10150  03D6  1683               	bsf	3,5	;RP0=1, select bank1
 10151  03D7  1303               	bcf	3,6	;RP1=0, select bank1
 10152  03D8  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
 10153  03D9  1283               	bcf	3,5	;RP0=0, select bank0
 10154  03DA  1303               	bcf	3,6	;RP1=0, select bank0
 10155  03DB  0822               	movf	?___lldiv+2,w
 10156  03DC  1683               	bsf	3,5	;RP0=1, select bank1
 10157  03DD  1303               	bcf	3,6	;RP1=0, select bank1
 10158  03DE  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
 10159  03DF  1283               	bcf	3,5	;RP0=0, select bank0
 10160  03E0  1303               	bcf	3,6	;RP1=0, select bank0
 10161  03E1  0821               	movf	?___lldiv+1,w
 10162  03E2  1683               	bsf	3,5	;RP0=1, select bank1
 10163  03E3  1303               	bcf	3,6	;RP1=0, select bank1
 10164  03E4  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
 10165  03E5  1283               	bcf	3,5	;RP0=0, select bank0
 10166  03E6  1303               	bcf	3,6	;RP1=0, select bank0
 10167  03E7  0820               	movf	?___lldiv,w
 10168  03E8  1683               	bsf	3,5	;RP0=1, select bank1
 10169  03E9  1303               	bcf	3,6	;RP1=0, select bank1
 10170  03EA  00B2               	movwf	sprintf@tmpval^(0+128)
 10171  03EB                     l4251:
 10172                           
 10173                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1256:     tmpval.vd %= 10;
 10174  03EB  3000               	movlw	0
 10175  03EC  1283               	bcf	3,5	;RP0=0, select bank0
 10176  03ED  1303               	bcf	3,6	;RP1=0, select bank0
 10177  03EE  00A3               	movwf	___llmod@divisor+3
 10178  03EF  3000               	movlw	0
 10179  03F0  00A2               	movwf	___llmod@divisor+2
 10180  03F1  3000               	movlw	0
 10181  03F2  00A1               	movwf	___llmod@divisor+1
 10182  03F3  300A               	movlw	10
 10183  03F4  00A0               	movwf	___llmod@divisor
 10184  03F5  1683               	bsf	3,5	;RP0=1, select bank1
 10185  03F6  1303               	bcf	3,6	;RP1=0, select bank1
 10186  03F7  0835               	movf	(sprintf@tmpval+3)^(0+128),w
 10187  03F8  1283               	bcf	3,5	;RP0=0, select bank0
 10188  03F9  1303               	bcf	3,6	;RP1=0, select bank0
 10189  03FA  00A7               	movwf	___llmod@dividend+3
 10190  03FB  1683               	bsf	3,5	;RP0=1, select bank1
 10191  03FC  1303               	bcf	3,6	;RP1=0, select bank1
 10192  03FD  0834               	movf	(sprintf@tmpval+2)^(0+128),w
 10193  03FE  1283               	bcf	3,5	;RP0=0, select bank0
 10194  03FF  1303               	bcf	3,6	;RP1=0, select bank0
 10195  0400  00A6               	movwf	___llmod@dividend+2
 10196  0401  1683               	bsf	3,5	;RP0=1, select bank1
 10197  0402  1303               	bcf	3,6	;RP1=0, select bank1
 10198  0403  0833               	movf	(sprintf@tmpval+1)^(0+128),w
 10199  0404  1283               	bcf	3,5	;RP0=0, select bank0
 10200  0405  1303               	bcf	3,6	;RP1=0, select bank0
 10201  0406  00A5               	movwf	___llmod@dividend+1
 10202  0407  1683               	bsf	3,5	;RP0=1, select bank1
 10203  0408  1303               	bcf	3,6	;RP1=0, select bank1
 10204  0409  0832               	movf	sprintf@tmpval^(0+128),w
 10205  040A  1283               	bcf	3,5	;RP0=0, select bank0
 10206  040B  1303               	bcf	3,6	;RP1=0, select bank0
 10207  040C  00A4               	movwf	___llmod@dividend
 10208  040D  160A  118A  209B  120A  118A  	fcall	___llmod
 10209  0412  1283               	bcf	3,5	;RP0=0, select bank0
 10210  0413  1303               	bcf	3,6	;RP1=0, select bank0
 10211  0414  0823               	movf	?___llmod+3,w
 10212  0415  1683               	bsf	3,5	;RP0=1, select bank1
 10213  0416  1303               	bcf	3,6	;RP1=0, select bank1
 10214  0417  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
 10215  0418  1283               	bcf	3,5	;RP0=0, select bank0
 10216  0419  1303               	bcf	3,6	;RP1=0, select bank0
 10217  041A  0822               	movf	?___llmod+2,w
 10218  041B  1683               	bsf	3,5	;RP0=1, select bank1
 10219  041C  1303               	bcf	3,6	;RP1=0, select bank1
 10220  041D  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
 10221  041E  1283               	bcf	3,5	;RP0=0, select bank0
 10222  041F  1303               	bcf	3,6	;RP1=0, select bank0
 10223  0420  0821               	movf	?___llmod+1,w
 10224  0421  1683               	bsf	3,5	;RP0=1, select bank1
 10225  0422  1303               	bcf	3,6	;RP1=0, select bank1
 10226  0423  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
 10227  0424  1283               	bcf	3,5	;RP0=0, select bank0
 10228  0425  1303               	bcf	3,6	;RP1=0, select bank0
 10229  0426  0820               	movf	?___llmod,w
 10230  0427  1683               	bsf	3,5	;RP0=1, select bank1
 10231  0428  1303               	bcf	3,6	;RP1=0, select bank1
 10232  0429  00B2               	movwf	sprintf@tmpval^(0+128)
 10233  042A                     l4253:
 10234                           
 10235                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++ = ('0' + tmpva
      +                          l.vd)));
 10236  042A  0832               	movf	sprintf@tmpval^(0+128),w
 10237  042B  3E30               	addlw	48
 10238  042C  00A0               	movwf	??_sprintf^(0+128)
 10239  042D  0838               	movf	sprintf@sp^(0+128),w
 10240  042E  0084               	movwf	4
 10241  042F  0820               	movf	??_sprintf^(0+128),w
 10242  0430  1383               	bcf	3,7	;select IRP bank0
 10243  0431  0080               	movwf	0
 10244  0432  3001               	movlw	1
 10245  0433  00A0               	movwf	??_sprintf^(0+128)
 10246  0434  0820               	movf	??_sprintf^(0+128),w
 10247  0435  07B8               	addwf	sprintf@sp^(0+128),f
 10248  0436                     l4255:
 10249                           
 10250                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1258:     val %= dpowers[c];
 10251  0436  083E               	movf	sprintf@c^(0+128),w
 10252  0437  00A0               	movwf	??_sprintf^(0+128)
 10253  0438  3001               	movlw	1
 10254  0439                     u6935:
 10255  0439  1003               	clrc
 10256  043A  0DA0               	rlf	??_sprintf^(0+128),f
 10257  043B  3EFF               	addlw	-1
 10258  043C  1D03               	skipz
 10259  043D  2C39               	goto	u6935
 10260  043E  1003               	clrc
 10261  043F  0D20               	rlf	??_sprintf^(0+128),w
 10262  0440  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10263  0441  0084               	movwf	4
 10264  0442  160A  118A  2000  120A  118A  	fcall	stringdir
 10265  0447  1283               	bcf	3,5	;RP0=0, select bank0
 10266  0448  1303               	bcf	3,6	;RP1=0, select bank0
 10267  0449  00A0               	movwf	___llmod@divisor
 10268  044A  160A  118A  2000  120A  118A  	fcall	stringdir
 10269  044F  00A1               	movwf	___llmod@divisor+1
 10270  0450  160A  118A  2000  120A  118A  	fcall	stringdir
 10271  0455  00A2               	movwf	___llmod@divisor+2
 10272  0456  160A  118A  2000  120A  118A  	fcall	stringdir
 10273  045B  00A3               	movwf	___llmod@divisor+3
 10274  045C  1683               	bsf	3,5	;RP0=1, select bank1
 10275  045D  1303               	bcf	3,6	;RP1=0, select bank1
 10276  045E  082D               	movf	(sprintf@val+3)^(0+128),w
 10277  045F  1283               	bcf	3,5	;RP0=0, select bank0
 10278  0460  1303               	bcf	3,6	;RP1=0, select bank0
 10279  0461  00A7               	movwf	___llmod@dividend+3
 10280  0462  1683               	bsf	3,5	;RP0=1, select bank1
 10281  0463  1303               	bcf	3,6	;RP1=0, select bank1
 10282  0464  082C               	movf	(sprintf@val+2)^(0+128),w
 10283  0465  1283               	bcf	3,5	;RP0=0, select bank0
 10284  0466  1303               	bcf	3,6	;RP1=0, select bank0
 10285  0467  00A6               	movwf	___llmod@dividend+2
 10286  0468  1683               	bsf	3,5	;RP0=1, select bank1
 10287  0469  1303               	bcf	3,6	;RP1=0, select bank1
 10288  046A  082B               	movf	(sprintf@val+1)^(0+128),w
 10289  046B  1283               	bcf	3,5	;RP0=0, select bank0
 10290  046C  1303               	bcf	3,6	;RP1=0, select bank0
 10291  046D  00A5               	movwf	___llmod@dividend+1
 10292  046E  1683               	bsf	3,5	;RP0=1, select bank1
 10293  046F  1303               	bcf	3,6	;RP1=0, select bank1
 10294  0470  082A               	movf	sprintf@val^(0+128),w
 10295  0471  1283               	bcf	3,5	;RP0=0, select bank0
 10296  0472  1303               	bcf	3,6	;RP1=0, select bank0
 10297  0473  00A4               	movwf	___llmod@dividend
 10298  0474  160A  118A  209B  120A  118A  	fcall	___llmod
 10299  0479  1283               	bcf	3,5	;RP0=0, select bank0
 10300  047A  1303               	bcf	3,6	;RP1=0, select bank0
 10301  047B  0823               	movf	?___llmod+3,w
 10302  047C  1683               	bsf	3,5	;RP0=1, select bank1
 10303  047D  1303               	bcf	3,6	;RP1=0, select bank1
 10304  047E  00AD               	movwf	(sprintf@val+3)^(0+128)
 10305  047F  1283               	bcf	3,5	;RP0=0, select bank0
 10306  0480  1303               	bcf	3,6	;RP1=0, select bank0
 10307  0481  0822               	movf	?___llmod+2,w
 10308  0482  1683               	bsf	3,5	;RP0=1, select bank1
 10309  0483  1303               	bcf	3,6	;RP1=0, select bank1
 10310  0484  00AC               	movwf	(sprintf@val+2)^(0+128)
 10311  0485  1283               	bcf	3,5	;RP0=0, select bank0
 10312  0486  1303               	bcf	3,6	;RP1=0, select bank0
 10313  0487  0821               	movf	?___llmod+1,w
 10314  0488  1683               	bsf	3,5	;RP0=1, select bank1
 10315  0489  1303               	bcf	3,6	;RP1=0, select bank1
 10316  048A  00AB               	movwf	(sprintf@val+1)^(0+128)
 10317  048B  1283               	bcf	3,5	;RP0=0, select bank0
 10318  048C  1303               	bcf	3,6	;RP1=0, select bank0
 10319  048D  0820               	movf	?___llmod,w
 10320  048E  1683               	bsf	3,5	;RP0=1, select bank1
 10321  048F  1303               	bcf	3,6	;RP1=0, select bank1
 10322  0490  00AA               	movwf	sprintf@val^(0+128)
 10323  0491                     l4257:
 10324                           
 10325                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1254:    while(c--) {
 10326  0491  3001               	movlw	1
 10327  0492  02BE               	subwf	sprintf@c^(0+128),f
 10328  0493  0A3E               	incf	sprintf@c^(0+128),w
 10329  0494  1D03               	btfss	3,2
 10330  0495  2C97               	goto	u6941
 10331  0496  2C98               	goto	u6940
 10332  0497                     u6941:
 10333  0497  2B90               	goto	l4249
 10334  0498                     u6940:
 10335  0498  2CAA               	goto	l4265
 10336  0499                     l4259:
 10337                           
 10338                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++ = ('0')));
 10339  0499  3030               	movlw	48
 10340  049A  00A0               	movwf	??_sprintf^(0+128)
 10341  049B  0838               	movf	sprintf@sp^(0+128),w
 10342  049C  0084               	movwf	4
 10343  049D  0820               	movf	??_sprintf^(0+128),w
 10344  049E  1383               	bcf	3,7	;select IRP bank0
 10345  049F  0080               	movwf	0
 10346  04A0                     l4261:
 10347  04A0  3001               	movlw	1
 10348  04A1  00A0               	movwf	??_sprintf^(0+128)
 10349  04A2  0820               	movf	??_sprintf^(0+128),w
 10350  04A3  07B8               	addwf	sprintf@sp^(0+128),f
 10351  04A4                     l4263:
 10352                           
 10353                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10354  04A4  30FF               	movlw	255
 10355  04A5  07BC               	addwf	sprintf@prec^(0+128),f
 10356  04A6  1803               	skipnc
 10357  04A7  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10358  04A8  30FF               	movlw	255
 10359  04A9  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10360  04AA                     l4265:
 10361                           
 10362                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1261:    while(prec) {
 10363  04AA  083C               	movf	sprintf@prec^(0+128),w
 10364  04AB  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10365  04AC  1D03               	btfss	3,2
 10366  04AD  2CAF               	goto	u6951
 10367  04AE  2CB0               	goto	u6950
 10368  04AF                     u6951:
 10369  04AF  2C99               	goto	l4259
 10370  04B0                     u6950:
 10371  04B0  2D76               	goto	l4313
 10372  04B1                     l4267:
 10373                           
 10374                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && val == 0
      +                          )
 10375  04B1  083C               	movf	sprintf@prec^(0+128),w
 10376  04B2  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10377  04B3  1D03               	btfss	3,2
 10378  04B4  2CB6               	goto	u6961
 10379  04B5  2CB7               	goto	u6960
 10380  04B6                     u6961:
 10381  04B6  2CC5               	goto	l406
 10382  04B7                     u6960:
 10383  04B7                     l4269:
 10384  04B7  082D               	movf	(sprintf@val+3)^(0+128),w
 10385  04B8  042C               	iorwf	(sprintf@val+2)^(0+128),w
 10386  04B9  042B               	iorwf	(sprintf@val+1)^(0+128),w
 10387  04BA  042A               	iorwf	sprintf@val^(0+128),w
 10388  04BB  1D03               	skipz
 10389  04BC  2CBE               	goto	u6971
 10390  04BD  2CBF               	goto	u6970
 10391  04BE                     u6971:
 10392  04BE  2CC5               	goto	l406
 10393  04BF                     u6970:
 10394  04BF                     l4271:
 10395                           
 10396                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10397  04BF  3001               	movlw	1
 10398  04C0  07BC               	addwf	sprintf@prec^(0+128),f
 10399  04C1  1803               	skipnc
 10400  04C2  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10401  04C3  3000               	movlw	0
 10402  04C4  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10403  04C5                     l406:
 10404                           
 10405                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
 10406  04C5  083D               	movf	(sprintf@prec+1)^(0+128),w
 10407  04C6  3A80               	xorlw	128
 10408  04C7  3C80               	sublw	128
 10409  04C8  1D03               	skipz
 10410  04C9  2CCC               	goto	u6985
 10411  04CA  083C               	movf	sprintf@prec^(0+128),w
 10412  04CB  023E               	subwf	sprintf@c^(0+128),w
 10413  04CC                     u6985:
 10414  04CC  1803               	skipnc
 10415  04CD  2CCF               	goto	u6981
 10416  04CE  2CD0               	goto	u6980
 10417  04CF                     u6981:
 10418  04CF  2CD7               	goto	l4275
 10419  04D0                     u6980:
 10420  04D0                     l4273:
 10421                           
 10422                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1366:    c = (char)prec;
 10423  04D0  1683               	bsf	3,5	;RP0=1, select bank1
 10424  04D1  1303               	bcf	3,6	;RP1=0, select bank1
 10425  04D2  083C               	movf	sprintf@prec^(0+128),w
 10426  04D3  00A0               	movwf	??_sprintf^(0+128)
 10427  04D4  0820               	movf	??_sprintf^(0+128),w
 10428  04D5  00BE               	movwf	sprintf@c^(0+128)
 10429  04D6  2CEF               	goto	l4279
 10430  04D7                     l4275:
 10431  04D7  1683               	bsf	3,5	;RP0=1, select bank1
 10432  04D8  1303               	bcf	3,6	;RP1=0, select bank1
 10433  04D9  083D               	movf	(sprintf@prec+1)^(0+128),w
 10434  04DA  3A80               	xorlw	128
 10435  04DB  00A0               	movwf	??_sprintf^(0+128)
 10436  04DC  3080               	movlw	128
 10437  04DD  0220               	subwf	??_sprintf^(0+128),w
 10438  04DE  1D03               	skipz
 10439  04DF  2CE2               	goto	u6995
 10440  04E0  083E               	movf	sprintf@c^(0+128),w
 10441  04E1  023C               	subwf	sprintf@prec^(0+128),w
 10442  04E2                     u6995:
 10443  04E2  1803               	skipnc
 10444  04E3  2CE5               	goto	u6991
 10445  04E4  2CE6               	goto	u6990
 10446  04E5                     u6991:
 10447  04E5  2CEF               	goto	l4279
 10448  04E6                     u6990:
 10449  04E6                     l4277:
 10450                           
 10451                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
 10452  04E6  1683               	bsf	3,5	;RP0=1, select bank1
 10453  04E7  1303               	bcf	3,6	;RP1=0, select bank1
 10454  04E8  083E               	movf	sprintf@c^(0+128),w
 10455  04E9  00A0               	movwf	??_sprintf^(0+128)
 10456  04EA  01A1               	clrf	(??_sprintf^(0+128)+1)
 10457  04EB  0820               	movf	??_sprintf^(0+128),w
 10458  04EC  00BC               	movwf	sprintf@prec^(0+128)
 10459  04ED  0821               	movf	(??_sprintf+1)^(0+128),w
 10460  04EE  00BD               	movwf	(sprintf@prec+1)^(0+128)
 10461  04EF                     l4279:
 10462                           
 10463                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1371:   if(width && flag & 0x03)
 10464  04EF  1683               	bsf	3,5	;RP0=1, select bank1
 10465  04F0  1303               	bcf	3,6	;RP1=0, select bank1
 10466  04F1  0830               	movf	sprintf@width^(0+128),w
 10467  04F2  0431               	iorwf	(sprintf@width+1)^(0+128),w
 10468  04F3  1903               	btfsc	3,2
 10469  04F4  2CF6               	goto	u7001
 10470  04F5  2CF7               	goto	u7000
 10471  04F6                     u7001:
 10472  04F6  2D09               	goto	l4285
 10473  04F7                     u7000:
 10474  04F7                     l4281:
 10475  04F7  3003               	movlw	3
 10476  04F8  052E               	andwf	sprintf@flag^(0+128),w
 10477  04F9  00A0               	movwf	??_sprintf^(0+128)
 10478  04FA  3000               	movlw	0
 10479  04FB  052F               	andwf	(sprintf@flag+1)^(0+128),w
 10480  04FC  00A1               	movwf	(??_sprintf+1)^(0+128)
 10481  04FD  0820               	movf	??_sprintf^(0+128),w
 10482  04FE  0421               	iorwf	(??_sprintf^(0+128)+1),w
 10483  04FF  1903               	btfsc	3,2
 10484  0500  2D02               	goto	u7011
 10485  0501  2D03               	goto	u7010
 10486  0502                     u7011:
 10487  0502  2D09               	goto	l4285
 10488  0503                     u7010:
 10489  0503                     l4283:
 10490                           
 10491                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10492  0503  30FF               	movlw	255
 10493  0504  07B0               	addwf	sprintf@width^(0+128),f
 10494  0505  1803               	skipnc
 10495  0506  0AB1               	incf	(sprintf@width+1)^(0+128),f
 10496  0507  30FF               	movlw	255
 10497  0508  07B1               	addwf	(sprintf@width+1)^(0+128),f
 10498  0509                     l4285:
 10499                           
 10500                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1374:   if(flag & 0x4000) {
 10501  0509  1F2F               	btfss	(sprintf@flag+1)^(0+128),6
 10502  050A  2D0C               	goto	u7021
 10503  050B  2D0D               	goto	u7020
 10504  050C                     u7021:
 10505  050C  2D28               	goto	l4293
 10506  050D                     u7020:
 10507  050D                     l4287:
 10508                           
 10509                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1375:    if(width > prec)
 10510  050D  083D               	movf	(sprintf@prec+1)^(0+128),w
 10511  050E  3A80               	xorlw	128
 10512  050F  00A0               	movwf	??_sprintf^(0+128)
 10513  0510  0831               	movf	(sprintf@width+1)^(0+128),w
 10514  0511  3A80               	xorlw	128
 10515  0512  0220               	subwf	??_sprintf^(0+128),w
 10516  0513  1D03               	skipz
 10517  0514  2D17               	goto	u7035
 10518  0515  0830               	movf	sprintf@width^(0+128),w
 10519  0516  023C               	subwf	sprintf@prec^(0+128),w
 10520  0517                     u7035:
 10521  0517  1803               	skipnc
 10522  0518  2D1A               	goto	u7031
 10523  0519  2D1B               	goto	u7030
 10524  051A                     u7031:
 10525  051A  2D24               	goto	l4291
 10526  051B                     u7030:
 10527  051B                     l4289:
 10528                           
 10529                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1376:     width -= prec;
 10530  051B  1683               	bsf	3,5	;RP0=1, select bank1
 10531  051C  1303               	bcf	3,6	;RP1=0, select bank1
 10532  051D  083C               	movf	sprintf@prec^(0+128),w
 10533  051E  02B0               	subwf	sprintf@width^(0+128),f
 10534  051F  083D               	movf	(sprintf@prec+1)^(0+128),w
 10535  0520  1C03               	skipc
 10536  0521  03B1               	decf	(sprintf@width+1)^(0+128),f
 10537  0522  02B1               	subwf	(sprintf@width+1)^(0+128),f
 10538  0523  2D28               	goto	l4293
 10539  0524                     l4291:
 10540                           
 10541                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1378:     width = 0;
 10542  0524  1683               	bsf	3,5	;RP0=1, select bank1
 10543  0525  1303               	bcf	3,6	;RP1=0, select bank1
 10544  0526  01B0               	clrf	sprintf@width^(0+128)
 10545  0527  01B1               	clrf	(sprintf@width+1)^(0+128)
 10546  0528                     l4293:
 10547                           
 10548                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1407:   if(width > c)
 10549  0528  0831               	movf	(sprintf@width+1)^(0+128),w
 10550  0529  3A80               	xorlw	128
 10551  052A  3C80               	sublw	128
 10552  052B  1D03               	skipz
 10553  052C  2D2F               	goto	u7045
 10554  052D  0830               	movf	sprintf@width^(0+128),w
 10555  052E  023E               	subwf	sprintf@c^(0+128),w
 10556  052F                     u7045:
 10557  052F  1803               	skipnc
 10558  0530  2D32               	goto	u7041
 10559  0531  2D33               	goto	u7040
 10560  0532                     u7041:
 10561  0532  2D3F               	goto	l4297
 10562  0533                     u7040:
 10563  0533                     l4295:
 10564                           
 10565                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1408:    width -= c;
 10566  0533  1683               	bsf	3,5	;RP0=1, select bank1
 10567  0534  1303               	bcf	3,6	;RP1=0, select bank1
 10568  0535  083E               	movf	sprintf@c^(0+128),w
 10569  0536  00A0               	movwf	??_sprintf^(0+128)
 10570  0537  01A1               	clrf	(??_sprintf^(0+128)+1)
 10571  0538  0820               	movf	??_sprintf^(0+128),w
 10572  0539  02B0               	subwf	sprintf@width^(0+128),f
 10573  053A  0821               	movf	(??_sprintf+1)^(0+128),w
 10574  053B  1C03               	skipc
 10575  053C  03B1               	decf	(sprintf@width+1)^(0+128),f
 10576  053D  02B1               	subwf	(sprintf@width+1)^(0+128),f
 10577  053E  2D43               	goto	l4299
 10578  053F                     l4297:
 10579                           
 10580                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1410:    width = 0;
 10581  053F  1683               	bsf	3,5	;RP0=1, select bank1
 10582  0540  1303               	bcf	3,6	;RP1=0, select bank1
 10583  0541  01B0               	clrf	sprintf@width^(0+128)
 10584  0542  01B1               	clrf	(sprintf@width+1)^(0+128)
 10585  0543                     l4299:
 10586                           
 10587                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1448:   {;D:\MPLAB XC8 compiler\
      +                          pic\sources\c90\common\doprnt.c: 1450:    if(width
 10588  0543  0830               	movf	sprintf@width^(0+128),w
 10589  0544  0431               	iorwf	(sprintf@width+1)^(0+128),w
 10590  0545  1903               	btfsc	3,2
 10591  0546  2D48               	goto	u7051
 10592  0547  2D49               	goto	u7050
 10593  0548                     u7051:
 10594  0548  2D60               	goto	l4307
 10595  0549                     u7050:
 10596  0549                     l4301:
 10597                           
 10598                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1456:      ((*sp++ = (' ')));
 10599  0549  3020               	movlw	32
 10600  054A  00A0               	movwf	??_sprintf^(0+128)
 10601  054B  0838               	movf	sprintf@sp^(0+128),w
 10602  054C  0084               	movwf	4
 10603  054D  0820               	movf	??_sprintf^(0+128),w
 10604  054E  1383               	bcf	3,7	;select IRP bank0
 10605  054F  0080               	movwf	0
 10606  0550                     l4303:
 10607  0550  3001               	movlw	1
 10608  0551  00A0               	movwf	??_sprintf^(0+128)
 10609  0552  0820               	movf	??_sprintf^(0+128),w
 10610  0553  07B8               	addwf	sprintf@sp^(0+128),f
 10611  0554                     l4305:
 10612  0554  30FF               	movlw	255
 10613  0555  07B0               	addwf	sprintf@width^(0+128),f
 10614  0556  1803               	skipnc
 10615  0557  0AB1               	incf	(sprintf@width+1)^(0+128),f
 10616  0558  30FF               	movlw	255
 10617  0559  07B1               	addwf	(sprintf@width+1)^(0+128),f
 10618  055A  0830               	movf	sprintf@width^(0+128),w
 10619  055B  0431               	iorwf	(sprintf@width+1)^(0+128),w
 10620  055C  1D03               	btfss	3,2
 10621  055D  2D5F               	goto	u7061
 10622  055E  2D60               	goto	u7060
 10623  055F                     u7061:
 10624  055F  2D49               	goto	l4301
 10625  0560                     u7060:
 10626  0560                     l4307:
 10627                           
 10628                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 10629  0560  3003               	movlw	3
 10630  0561  052E               	andwf	sprintf@flag^(0+128),w
 10631  0562  00A0               	movwf	??_sprintf^(0+128)
 10632  0563  3000               	movlw	0
 10633  0564  052F               	andwf	(sprintf@flag+1)^(0+128),w
 10634  0565  00A1               	movwf	(??_sprintf+1)^(0+128)
 10635  0566  0820               	movf	??_sprintf^(0+128),w
 10636  0567  0421               	iorwf	(??_sprintf^(0+128)+1),w
 10637  0568  1903               	btfsc	3,2
 10638  0569  2D6B               	goto	u7071
 10639  056A  2D6C               	goto	u7070
 10640  056B                     u7071:
 10641  056B  2D76               	goto	l4313
 10642  056C                     u7070:
 10643  056C                     l4309:
 10644                           
 10645                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
 10646  056C  302D               	movlw	45
 10647  056D  00A0               	movwf	??_sprintf^(0+128)
 10648  056E  0838               	movf	sprintf@sp^(0+128),w
 10649  056F  0084               	movwf	4
 10650  0570  0820               	movf	??_sprintf^(0+128),w
 10651  0571  1383               	bcf	3,7	;select IRP bank0
 10652  0572  0080               	movwf	0
 10653  0573  120A  158A  2D45   	goto	l4071
 10654  0576                     l4313:
 10655                           
 10656                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
 10657  0576  3001               	movlw	1
 10658  0577  1283               	bcf	3,5	;RP0=0, select bank0
 10659  0578  1303               	bcf	3,6	;RP1=0, select bank0
 10660  0579  07E2               	addwf	sprintf@f,f
 10661  057A  30FF               	movlw	-1
 10662  057B  0762               	addwf	sprintf@f,w
 10663  057C  0084               	movwf	4
 10664  057D  160A  118A  2000  120A  118A  	fcall	stringdir
 10665  0582  1683               	bsf	3,5	;RP0=1, select bank1
 10666  0583  1303               	bcf	3,6	;RP1=0, select bank1
 10667  0584  00A0               	movwf	??_sprintf^(0+128)
 10668  0585  0820               	movf	??_sprintf^(0+128),w
 10669  0586  00BE               	movwf	sprintf@c^(0+128)
 10670  0587  083E               	movf	sprintf@c^(0+128),w
 10671  0588  1D03               	btfss	3,2
 10672  0589  2D8B               	goto	u7081
 10673  058A  2D8E               	goto	u7080
 10674  058B                     u7081:
 10675  058B  120A  158A  2D38   	goto	l4067
 10676  058E                     u7080:
 10677  058E                     l4315:
 10678                           
 10679                           ;D:\MPLAB XC8 compiler\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10680  058E  0838               	movf	sprintf@sp^(0+128),w
 10681  058F  0084               	movwf	4
 10682  0590  1383               	bcf	3,7	;select IRP bank0
 10683  0591  0180               	clrf	0
 10684  0592                     l421:
 10685  0592  0008               	return
 10686  0593                     __end_of_sprintf:

Data Sizes:
    Strings     29
    Constant    118
    Data        17
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     75      77
    BANK1            80     31      74
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_3(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> datos(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(1) Largest target is 12
		 -> STR_2(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_I2C_Master_Init
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___bmul->___awmod
    ___bmul->___lwmod
    ___ftadd->___ftpack
    _aht_readSensor->_I2C_Master_Read
    ___lltoft->___ftpack
    ___ftmul->___awmod
    ___ftmul->___ftpack
    ___ftmul->___lwmod
    ___ftdiv->___ftpack
    _Write_USART_String->_Write_USART
    _USART_Init->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    ___awdiv->___awmod
    _fround->___ftmul
    ___lwdiv->___lwmod
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    _aht_GetTemperature->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->_fround
    _aht_GetHumidity->___lltoft
    _aht_readSensor->_I2C_Master_Read
    ___lltoft->_aht_readSensor
    ___ftmul->___bmul
    ___ftdiv->___ftmul
    _USART_Init->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   70962
                                             73 BANK0      2     2      0
                    _I2C_Master_Init
                         _USART_Init
                        _Write_USART
                 _Write_USART_String
                    _aht_GetHumidity
                 _aht_GetTemperature
                           _configIO
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    36      7   41922
                                             66 BANK0      7     0      7
                                              0 BANK1     31    31      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    8663
                                             31 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1213
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1355
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    7069
                                             31 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     622
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     631
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             11 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     584
                                              3 COMMON     4     4      0
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     803
                                              0 BANK0     20    14      6
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1606
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     622
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             40 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4179
                                             60 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              3 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     718
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _aht_GetTemperature                                   6     3      3   15508
                                             60 BANK0      6     3      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lltoft
                     _aht_readSensor
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3953
                                             47 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) _aht_GetHumidity                                      6     3      3   11586
                                             53 BANK0      6     3      3
                            ___ftdiv
                            ___ftmul
                           ___lltoft
                     _aht_readSensor
 ---------------------------------------------------------------------------------
 (2) _aht_readSensor                                      45    41      4     962
                                              2 BANK0     45    41      4
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     226
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     260
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2635
                                             47 BANK0      6     2      4
                           ___ftpack
                     _aht_readSensor (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4906
                                             15 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3018
                                             31 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2338
                                              3 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   3     3      0     139
                                              4 COMMON     3     3      0
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          18    14      4     993
                                              4 COMMON     2     2      0
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     705
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     792
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     631
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (6) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _USART_Init
     ___aldiv
   _Write_USART
   _Write_USART_String
     _Write_USART
   _aht_GetHumidity
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___lltoft
       ___ftpack
       _aht_readSensor (ARG)
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _aht_readSensor
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _aht_GetTemperature
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___lltoft
       ___ftpack
       _aht_readSensor (ARG)
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _aht_readSensor
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _configIO
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
         _aht_readSensor (ARG)
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
       _aht_readSensor (ARG)
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1F      4A       7       92.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4B      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A2      12        0.0%
ABS                  0      0      A2       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 00:05:18 2021

                          pc 0002               ___bmul@product 002D                           l53 1D3C  
                         l96 1E8B                           l99 1D0B                 ___awdiv@sign 0028  
                         fsr 0004          ___wmul@multiplicand 0075                 ___ftadd@exp1 005B  
               ___ftadd@exp2 005A         __size_of_Write_USART 000C                 ___ftadd@sign 0059  
                        l102 1D17                          l111 1CEA                          l105 1CE1  
                        l114 1CF4                          l212 1FFF                          l117 1E14  
                        l118 1E17                          l151 1613                          l119 1E1E  
                        l223 17FF                          l215 1151                          l154 1D00  
                        l163 1D9E                          l331 073B                          l157 1D0A  
                        l421 0592                          l406 04C5                          l360 0E0C  
                        l425 1DD4                          l506 13CD                          l338 0D2D  
                        l427 1DEE                          l451 1D7C                          l461 11B9  
                        l621 1FA2                          l702 07FD                          l710 1537  
                        l631 093C                          l711 14A9                          l391 02CE  
                        l608 1222                          l721 152A                          l650 12A4  
                        l642 092F                          l634 08EC                          l714 14FA  
                        l635 08FF                          l804 1E51                          l661 127E  
                        l662 1288                          l654 1263                          l734 16F8  
                        l398 0312                          l663 12A4                          l671 0A72  
                        l751 1DC3                          l496 1345                          l728 1EC5  
                        l745 1CFE                          l674 0988                          l762 1313  
                        l675 0992                          l755 1330                          l676 0997  
                        l685 0A08                          l867 1F47                          l796 10F0  
                        l877 1F01                          l887 1D29                          _GIE 005F  
                        _ISR 1D50                          fsr0 0004                          indf 0000  
               ___awmod@sign 0021                  _sprintf$961 00A6  __size_of_Write_USART_String 0022  
                       ?_ISR 0070                 ___ftdiv@cntr 0049                 ___ftdiv@sign 004E  
                       l2211 1D74                         l2203 1D69                         l2213 1D7B  
                       l2205 1D6A                         l2207 1D6E                         l4001 1E26  
                       l2209 1D72                         l4011 1593                         l4003 1E33  
                       l4021 1605                         l4013 159C                         l4005 1E39  
                       l4101 0DF4                         l4031 1610                         l4023 1606  
                       l4015 15F5                         l4111 0E2C                         l4103 0E06  
                       l4041 1E88                         l4025 1609                         l4017 15F8  
                       l4009 1538                         l3401 11CC                         l4201 01E0  
                       l4121 0E51                         l4113 0E3A                         l4105 0E0A  
                       l4043 1E89                         l4035 1E52                         l4027 160C  
                       l4019 1601                         l3331 1223                         l4051 1FCC  
                       l3411 11E0                         l3403 11D1                         l4203 01EC  
                       l4211 0201                         l4131 0E94                         l4123 0E70  
                       l4115 0E3E                         l4045 1E8A                         l4037 1E56  
                       l4029 160D                         l3341 1244                         l3333 1228  
                       l3501 09AB                         l4061 1112                         l3421 1206  
                       l3413 11E7                         l3405 11D5                         l4301 0549  
                       l4221 0283                         l4213 020E                         l4205 01F3  
                       l4141 0EF9                         l4133 0EB9                         l4125 0E85  
                       l4117 0E42                         l4109 0E0E                         l4039 1E59  
                       l3351 1274                         l3343 124B                         l3335 122F  
                       l3327 1D0B                         l4055 1FD3                         l4047 1FA3  
                       l3503 09B5                         l3511 09D7                         l3431 121E  
                       l3423 1207                         l3415 11EB                         l3407 11D7  
                       l4303 0550                         l4231 02E9                         l4223 02C2  
                       l4215 021C                         l4207 01FC                         l4151 0F79  
                       l4143 0EFF                         l4135 0EBF                         l4127 0E89  
                       l4119 0E4D                         l4071 0D45                         l3361 12A3  
                       l3353 1278                         l3345 1251                         l3329 1D11  
                       l4049 1FC5                         l3521 0A02                         l3513 09DD  
                       l3505 09BB                         l3601 1F16                         l2561 1D20  
                       l3425 120E                         l3417 11EF                         l3409 11DD  
                       l3441 1F54                         l4305 0554                         l4241 0320  
                       l4233 02F6                         l4225 02D6                         l4217 0223  
                       l4161 0038                         l4153 0F9A                         l4145 0F18  
                       l4137 0ED2                         l4129 0E8D                         l4081 0D79  
                       l4073 0D4A                         l4313 0576                         l4065 0D31  
                       l2467 1D00                         l3355 1282                         l3347 125B  
                       l3339 1236                         l3363 1CD9                         l3371 1CEB  
                       l3531 0A31                         l3523 0A0C                         l3515 09E7  
                       l3507 09C4                         l4059 10F1                         l3611 1F36  
                       l3603 1F1A                         l2563 1D26                         l3419 1200  
                       l3427 1214                         l3451 1F68                         l3443 1F56  
                       l3435 1F48                         l4307 0560                         l4251 03EB  
                       l4243 0327                         l4235 0305                         l4227 02DF  
                       l4219 0228                         l4171 0099                         l4163 0041  
                       l4147 0F51                         l4139 0EF5                         l4155 0FA2  
                       l4315 058E                         l4091 0DB7                         l4083 0D90  
                       l4075 0D4E                         l4067 0D38                         l4331 13F1  
                       l2469 1D06                         l3357 128A                         l3349 126A  
                       l3381 1E05                         l3365 1CDE                         l3373 1CF0  
                       l3533 0A41                         l3525 0A1C                         l3517 09ED  
                       l3509 09D0                         l2901 1D2A                         l2813 1CF5  
                       l3613 1F3D                         l3605 1F1E                         l3621 1ECC  
                       l2565 1D28                         l2557 1D19                         l3429 1219  
                       l3461 1F87                         l3453 1F6F                         l3445 1F5A  
                       l3437 1F4B                         l3701 0B48                         l4309 056C  
                       l4261 04A0                         l4253 042A                         l4245 032B  
                       l4237 030C                         l4229 02E3                         l4173 00A1  
                       l4165 0060                         l4181 00FF                         l4157 0FB1  
                       l4149 0F70                         l4413 0E24                         l4093 0DBD  
                       l4085 0D96                         l4077 0D60                         l4069 0D3E  
                       l4341 145B                         l4333 13F7                         l4325 13CE  
                       l3359 129E                         l3551 163F                         l3543 1614  
                       l3383 1E0A                         l3375 1DEF                         l3367 1CE2  
                       l3535 0A45                         l3527 0A20                         l3519 09F6  
                       l2903 1D34                         l2815 1CFC                         l2831 12B8  
                       l3607 1F2F                         l3615 1F43                         l3631 1EEA  
                       l3623 1ED1                         l2559 1D1A                         l3391 11BA  
                       l3463 1F8E                         l3455 1F73                         l3447 1F5F  
                       l3439 1F4F                         l3711 0BDC                         l4271 04BF  
                       l4263 04A4                         l4255 0436                         l4247 0343  
                       l4239 031B                         l4191 017E                         l4183 017A  
                       l4167 006F                         l4159 0FEA                         l4095 0DC2  
                       l4079 0D64                         l4087 0DA6                         l4343 1461  
                       l4335 140E                         l4327 13D3                         l3561 1675  
                       l3545 1627                         l3385 1E10                         l3377 1DF4  
                       l3369 1CE7                         l3641 16F9                         l3537 0A55  
                       l3529 0A30                         l3473 093D                         l2905 1D35  
                       l2817 1CFE                         l2841 12DA                         l3801 0894  
                       l3609 1F35                         l3633 1EF0                         l3625 1ED8  
                       l3393 11BD                         l3457 1F77                         l3449 1F65  
                       l3465 1F94                         l3705 0BB4                         l4281 04F7  
                       l4273 04D0                         l4265 04AA                         l4249 0390  
                       l4257 0491                         l4185 017C                         l4177 00B9  
                       l4169 0090                         l4097 0DD7                         l4089 0DB4  
                       l4345 1467                         l4337 1425                         l4329 13E2  
                       l3571 1699                         l3563 167B                         l3555 1646  
                       l3387 1E18                         l3379 1DFC                         l3651 174F  
                       l3643 1713                         l3539 0A57                         l3491 098D  
                       l3483 0973                         l3475 095C                         l2907 1D38  
                       l2843 12E1                         l2835 12C1                         l3811 0903  
                       l3803 089D                         l3635 1EF7                         l3627 1EDC  
                       l3619 1EC6                         l3395 11C1                         l3467 1F99  
                       l3459 1F81                         l3723 0D0D                         l4291 0524  
                       l4283 0503                         l4275 04D7                         l4259 0499  
                       l4195 01B5                         l4179 00F8                         l4267 04B1  
                       l4099 0DEE                         l4347 146D                         l4339 142B  
                       l3901 13B5                         l3581 16B7                         l3573 16A1  
                       l3565 1681                         l3557 1673                         l3549 162E  
                       l3661 17F7                         l3653 1753                         l3645 171D  
                       l3493 0991                         l3485 0978                         l3477 0962  
                       l2909 1D3B                         l2861 1308                         l2853 12EF  
                       l2845 12E3                         l2837 12D3                         l2829 12A5  
                       l3805 08C9                         l3741 14B0                         l3733 1497  
                       l3629 1EE0                         l3637 1EFD                         l3397 11C6  
                       l3469 1F9E                         l3717 0C9A                         l3709 0BD5  
                       l4293 0528                         l4285 0509                         l4277 04E6  
                       l4269 04B7                         l4197 01BF                         l3903 13BA  
                       l3911 074F                         l3583 16C7                         l3575 16A9  
                       l3567 1685                         l3559 1674                         l3655 1762  
                       l3647 1722                         l3495 0996                         l3487 097E  
                       l3479 096C                         l2863 1318                         l2847 12E7  
                       l2855 1301                         l2839 12D4                         l3831 1DC4  
                       l3807 08EB                         l3751 14E1                         l3743 14BF  
                       l3727 147B                         l3399 11C8                         l3719 0CA1  
                       l4295 0533                         l4287 050D                         l4279 04EF  
                       l4199 01DA                         l3905 13C5                         l3921 076E  
                       l3585 16CF                         l3577 16AF                         l3569 1689  
                       l3657 176A                         l3649 1726                         l3497 0998  
                       l3489 0989                         l2865 131D                         l3841 1DE8  
                       l3833 1DC8                         l3825 0924                         l3817 090B  
                       l3809 08F9                         l3753 14EB                         l3745 14C1  
                       l3729 148E                         l3593 1F02                         l3665 0596  
                       l4297 053F                         l4289 051B                         l3851 1174  
                       l2971 1D8D                         l3931 07A1                         l3923 0774  
                       l3915 0756                         l3587 16D7                         l3579 16B3  
                       l3659 17B6                         l3499 099E                         l2867 1328  
                       l3835 1DCC                         l3827 0934                         l3819 091D  
                       l3755 14EC                         l3747 14CA                         l3739 14AA  
                       l3595 1F06                         l3683 0708                         l3667 059C  
                       l3675 0679                         l3691 0A7C                         l4299 0543  
                       l3861 11A2                         l3853 1178                         l3845 1152  
                       l2973 1D91                         l3941 07D3                         l3933 07A8  
                       l3925 0779                         l3917 0767                         l3909 073C  
                       l3589 16DD                         l3837 1DDB                         l3781 082B  
                       l3773 151F                         l3765 1506                         l3757 14F4  
                       l3749 14D3                         l3597 1F0C                         l3677 067F  
                       l3669 065F                         l3693 0A83                         l3863 11AB  
                       l3855 1181                         l3847 1164                         l3871 1334  
                       l2967 1D7E                         l3943 07D4                         l3935 07B3  
                       l3927 078B                         l3951 1E8C                         l3839 1DE2  
                       l3791 084D                         l3775 152F                         l3759 14FE  
                       l3767 1518                         l3599 1F0F                         l3679 06EE  
                       l3687 0A76                         l3857 1193                         l3849 1167  
                       l3865 11B1                         l3881 1360                         l3873 1338  
                       l2969 1D80                         l3945 07DC                         l3937 07BB  
                       l3929 079D                         l3961 1EB2                         l3953 1E92  
                       l3793 0881                         l3785 0834                         l3689 0A7A  
                       l3859 11A1                         l3891 1385                         l3883 1368  
                       l3875 1349                         l3947 07E2                         l3939 07C9  
                       l3963 1EB4                         l3955 1E9F                         l3971 1D9F  
                       l3795 0889                         l3779 0810                         l3699 0B41  
                       l3893 1397                         l3885 136B                         l3877 1354  
                       l3869 1331                         l3965 1EC2                         l3957 1EA3  
                       l3973 1DA8                         l3981 10A5                         l3797 088B  
                       l3895 13A5                         l3887 1378                         l3879 1358  
                       l3967 1EC4                         l3959 1EB0                         l3975 1DAA  
                       l3991 10D9                         l3983 10A8                         l3799 0890  
                       l3897 13A6                         l3889 137C                         l3993 10E2  
                       l3985 10B5                         l3899 13AF                         l3987 10B9  
                       l3995 10E8                         l3979 109B                         l3989 10CB  
                       l3999 1E1F                         STR_1 1097                         STR_2 108B  
                       STR_3 107C                         _BRGH 04C2                         _CREN 00C4  
                       u4100 12E7                         u4101 12E6                         u3310 1D06  
                       u4110 12EE                         u3311 1D05                         u4111 12ED  
                       u2600 1D7B                         u5000 11C1                         u2601 1D7A  
                       u5001 11C0                         u4130 1300                         u5010 11CC  
                       u4131 12FF                         u5011 11CB                         u4060 1CFC  
                       u4140 1307                         u5020 11DD                         u5100 1F4F  
                       u4061 1CFB                         u4141 1306                         u4125 12F0  
                       u5021 11DC                         u5101 1F4E                         u5110 1F5A  
                       u5111 1F59                         u5200 0962                         u4160 1318  
                       u4080 12B8                         u5040 11EF                         u5120 1F65  
                       u5201 0961                         u4161 1317                         u4081 12B7  
                       u5041 11EE                         u5121 1F64                         u5210 096C  
                       u4170 131D                         u4090 12CC                         u6010 08C9  
                       u5211 096B                         u4171 131C                         u4155 130A  
                       u6011 08C8                         u5035 11E1                         u5300 09C3  
                       u5220 0978                         u6100 1DCC                         u6020 08FF  
                       u5060 1200                         u5140 1F77                         u5301 09C2  
                       u5221 0977                         u6101 1DCB                         u6021 08FE  
                       u6005 0896                         u5061 11FF                         u5141 1F76  
                       u5230 097E                         u6030 0903                         u2590 1D6E  
                       u3470 1D20                         u5150 1F81                         u5231 097D  
                       u4095 12C8                         u6031 0902                         u6015 08C5  
                       u2591 1D6D                         u3471 1D1F                         u5055 11F0  
                       u5151 1F80                         u5135 1F69                         u6200 11B1  
                       u4360 1D9E                         u5400 0A20                         u5320 09D6  
                       u5240 0988                         u6040 090A                         u3480 1D26  
                       u5080 1214                         u7000 04F7                         u6201 11B0  
                       u4361 1D9D                         u5401 0A1F                         u5321 09D5  
                       u5241 0987                         u6041 0909                         u3481 1D25  
                       u5081 1213                         u5065 11FC                         u7001 04F6  
                       u6210 1338                         u5330 09DD                         u5250 0991  
                       u6130 1DE8                         u5090 1219                         u5170 1F94  
                       u7010 0503                         u6211 1337                         u5411 0A3A  
                       u5331 09DC                         u5315 09C5                         u5251 0990  
                       u6131 1DE7                         u6115 1DD5                         u5091 1218  
                       u5075 1208                         u5171 1F93                         u5155 1F7D  
                       u7011 0502                         _PEIE 005E                         u6140 1164  
                       u6300 13BA                         u6220 1349                         u5420 0A45  
                       u5412 0A41                         u5260 0996                         u6060 091C  
                       u5180 1F99                         u7020 050D                         u6141 1163  
                       u6301 13B9                         u6221 1348                         u5421 0A44  
                       u5261 0995                         u6125 1DDC                         u6061 091B  
                       u5181 1F98                         u5165 1F88                         u7021 050C  
                       u6230 1368                         u6310 074F                         u5510 16AF  
                       u5430 1627                         u5350 09ED                         u5270 09AB  
                       u5190 095C                         u6070 0923                         u7030 051B  
                       u6231 1367                         u6311 074E                         u5511 16AE  
                       u5431 1626                         u5351 09EC                         u5271 09AA  
                       u5191 095B                         u6071 0922                         u6055 090C  
                       u7031 051A                         u6160 1178                         u6320 0767  
                       u5520 16B7                         u5440 163F                         u5360 09F5  
                       u6400 1EA3                         u7040 0533                         u6161 1177  
                       u6321 0766                         u5521 16B6                         u5505 16A2  
                       u5441 163E                         u5361 09F4                         u5345 09DE  
                       u6401 1EA2                         u7041 0532                         u6250 137C  
                       u6330 0784                         u5450 1656                         u5290 09BB  
                       u6410 1EC2                         u6090 0934                         u5610 1F2F  
                       u7050 0549                         u6155 1169                         u6251 137B  
                       u5531 16C0                         u7107 1719                         u5291 09BA  
                       u6411 1EC1                         u6091 0933                         u5611 1F2E  
                       u7051 0548                         u7035 0517                         u6180 1193  
                       u4900 124A                         u6340 0796                         u5532 16C7  
                       u5460 1668                         u6500 1E39                         u5380 0A08  
                       u6420 1DA8                         u7060 0560                         _RCIF 0065  
                       u6181 1192                         u6245 136D                         u4901 1249  
                       u6501 1E38                         u5381 0A07                         u5285 09AC  
                       u6421 1DA7                         u6085 0926                         u5605 1F1F  
                       u7061 055F                         u7045 052F                         u6270 1397  
                       u6510 1548                         u5470 1689                         u5710 1762  
                       u5390 0A0C                         u6430 10A5                         u5630 1F43  
                       u7070 056C                         u6175 117A                         u6271 1396  
                       u6335 0780                         u5471 1688                         u5455 1652  
                       u5711 1761                         u5391 0A0B                         u5375 09F7  
                       u6415 1EBE                         u6431 10A4                         u5631 1F42  
                       u5615 1F2B                         u7071 056B                         u6520 1561  
                       u4920 1269                         u6360 07C9                         u5560 16DD  
                       u5720 176A                         u6600 1FCC                         u5640 1ECC  
                       u5800 0A7A                         u7080 058E                         u6185 118F  
                       u6265 137E                         u4921 1268                         u6361 07C8  
                       u6345 0792                         u5561 16DC                         u5545 16C8  
                       u5481 1692                         u5465 1664                         u5721 1769  
                       u5705 173A                         u6601 1FCB                         u5625 1F37  
                       u5641 1ECB                         u5801 0A79                         u7081 058B  
                       u6290 13B5                         u5482 1699                         u4850 1D11  
                       u5730 1780                         u6450 10B9                         u5570 1F0C  
                       u5810 0A83                         u6610 0D3E                         i1l59 1D5F  
                       u6195 11A3                         u6291 13B4                         u6275 1393  
                       u6531 1573                         u6515 1543                         u4915 125C  
                       u6355 07B4                         u5555 16D0                         u4851 1D10  
                       u6451 10B8                         u5571 1F0B                         u5811 0A82  
                       u6611 0D3D                         u6540 159C                         u6532 1574  
                       u4940 1278                         u6380 07E2                         u4860 1D17  
                       u5740 1791                         u6460 10CB                         u5900 14FA  
                       u5660 1EE0                         u5820 0B48                         u6700 0EA8  
                       u6620 0D60                         u6285 13A7                         u6541 159B  
                       u6533 1579                         u6525 155C                         u4941 1277  
                       u6381 07E1                         u6365 07C5                         u4861 1D16  
                       u6461 10CA                         u6445 10AA                         u5901 14F9  
                       u5661 1EDF                         u5821 0B47                         u6621 0D5F  
                       u6550 15AA                         u6534 157A                         u4950 127E  
                       u4870 1228                         u5750 17AA                         u6390 1E92  
                       u5910 14FE                         u5590 1F1E                         u5670 1EEA  
                       u5830 0BDC                         u6710 0EF9                         u6630 0DA6  
                       u6535 157F                         u4951 127D                         u4935 126D  
                       u4871 1227                         u6375 07D5                         u5495 169A  
                       u5735 177B                         u6391 1E91                         u5911 14FD  
                       u5591 1F1D                         u5671 1EE9                         u5655 1ED2  
                       u5831 0BDB                         u6711 0EF8                         u6631 0DA5  
                       u6560 15C3                         u6536 1580                         u4960 1282  
                       u4880 122F                         u5760 17C4                         u6480 10E8  
                       u5920 1505                         u5840 0CA1                         u6720 0F70  
                       u6640 0DB4                         u4961 1281                         u4881 122E  
                       u5745 178C                         u6481 10E7                         u6465 10C7  
                       u5921 1504                         u5585 1F10                         u5841 0CA0  
                       u6721 0F6F                         u6705 0EA3                         u6641 0DB3  
                       u7097 1473                         u4970 1295                         u5770 17E0  
                       u5850 148E                         u5690 1EFD                         u6810 01B4  
                       u6730 0F9A                         u6650 0E05                         u6571 15D5  
                       u6555 15A5                         u5755 17A5                         u6475 10DA  
                       u5851 148D                         u5691 1EFC                         u5675 1EE6  
                       u6811 01B3                         u6731 0F99                         u6651 0E04  
                       u6580 1601                         u6572 15D6                         u4980 12A3  
                       u5940 1517                         u5860 14A8                         u5780 059C  
                       u6900 0305                         u6820 01BF                         u6740 0FB1  
                       u6660 0E3A                         u6581 1600                         u6573 15DB  
                       u6565 15BE                         u4981 12A2                         u5765 17BF  
                       u5941 1516                         u5861 14A7                         u5685 1EF1  
                       u5781 059B                         u6901 0304                         u6821 01BE  
                       u6805 0181                         u6741 0FB0                         u6661 0E37  
                       u6590 1E69                         u6574 15DC                         u4990 1E10  
                       u5950 151E                         u5790 067F                         u6910 0320  
                       u6830 01DA                         u6750 0038                         u6670 0E3E  
                       u6575 15E1                         u4975 1291                         u4895 123D  
                       u6495 1E27                         u4991 1E0F                         u5775 17DB  
                       u5951 151D                         u5935 1507                         u5791 067E  
                       u6911 031F                         u6831 01D9                         u6815 01B0  
                       u6751 0FFA                         u6671 0E3D                         u6576 15E2  
                       u5880 14E1                         u6840 01EC                         u6760 0041  
                       u6680 0E70                         u5881 14E0                         u6905 0301  
                       u6841 01EB                         u6761 0040                         u6745 0FAD  
                       u6681 0E6F                         u5970 152F                         u6850 020E  
                       u6770 0060                         u6690 0E94                         u6595 1E64  
                       u5971 152E                         u5875 14CC                         u6851 020D  
                       u6771 005F                         u6755 0FF5                         u6691 0E93  
                       u5980 082B                         u6940 0498                         u6860 021C  
                       u6780 006F                         u5981 082A                         u5965 1521  
                       u5885 14DD                         u6941 0497                         u6925 0393  
                       u6861 021B                         u6781 006E                         u5990 084C  
                       u6950 04B0                         u6790 0090                         u5991 084B  
                       u5895 14ED                         u6951 04AF                         u6935 0439  
                       u6855 020A                         u6791 008F                         u6960 04B7  
                       u6880 02D5                         u6961 04B6                         u6881 02D4  
                       u6785 006B                         u6970 04BF                         u6890 02F6  
                       u6971 04BE                         u6891 02F5                         u6875 022B  
                       u6980 04D0                         u6981 04CF                         u6990 04E6  
                       u6991 04E5                         u6895 02F2                         u6985 04CC  
                       u6995 04E2                         _SPEN 00C7                         _TRMT 04C1  
                       _TXEN 04C5                         _SYNC 04C4  __size_of_aht_GetTemperature 0061  
    __size_of_aht_readSensor 0107                         _main 13CE                 ___ftpack@arg 0073  
               ___ftpack@exp 0076                         btemp 007E                         start 000C  
       aht_readSensor@result 004A              aht_readSensor@i 004E            ___bmul@multiplier 002E  
               ___ftmul@cntr 003D                 ___ftmul@sign 003E                        ??_ISR 0070  
           ?_aht_GetHumidity 0055                 ___fttol@exp1 0055                 ___fttol@lval 0051  
                 _GetTempCmd 00C5             ?_I2C_Master_Init 002D             ?_I2C_Master_Read 0073  
           ?_I2C_Master_Wait 0070             ?_I2C_Master_Stop 0070              __end_of___aldiv 13CE  
                      ?_main 0070              __end_of___awdiv 1223              __end_of___ftadd 0A73  
            __end_of___awmod 1FA3              __end_of___ftdiv 07FE              __end_of___ftneg 1CFF  
                      _ANSEL 0188              __end_of___lldiv 11BA              __end_of___ftmul 16F9  
            ___awdiv@divisor 0022              __end_of___llmod 10F1              __end_of___ftsub 1DC4  
            __end_of___fttol 1331              __end_of___lwdiv 1F48                        i1l166 1CC9  
                      i1l169 1CD0              __end_of___lwmod 1F02              ___awdiv@counter 0027  
                      _RCREG 001A                        _SPBRG 0099                        _PORTB 0006  
                      _TRISB 0086                        _SSPIE 0463                        _SSPIF 0063  
                      _TXREG 0019                 ___lltoft@exp 0054                        _datos 00C7  
            __end_of_dpowers 107C                        _scale 0A73              __end_of_isdigit 1D2A  
              ___ftpack@sign 0077              _GetRHumidityCmd 00E4                        pclath 000A  
                      status 0003                        wtemp0 007E              __end_of_sprintf 0593  
                ?_USART_Init 002E      aht_GetTemperature@value 005F              __initialization 000F  
                 _Read_USART 1CC9                 __end_of_main 147B                       ??_main 0069  
              ___fttol@sign1 0050                _AHT10_address 007A         __size_of__tdiv_to_l_ 00BD  
          ?_I2C_Master_Start 0070            ?_I2C_Master_Write 0073           ??_I2C_Master_Start 0073  
         ??_I2C_Master_Write 0075             ___llmod@dividend 0024                       ?_scale 003F  
           ___awdiv@dividend 0024             __end_of___ftpack 12A5                       _ANSELH 0189  
           __end_of___lltoft 1E52                       i1l2031 1D57                       i1l2027 1D50  
                     i1l2029 1D56                       i1l1697 1CC9                       i1l1699 1CCF  
                     u243_20 1D56                       u243_21 1D55                       u183_20 1CCF  
                     u183_21 1CCE                       _SSPADD 0093                       _TRISC3 043B  
                     _TRISC4 043C                       _TRISC6 043E                       _TRISC7 043F  
                     _SSPCON 0014                       _SSPBUF 0013             __end_of__powers_ 102D  
           __end_of_configIO 1D3D                       ___bmul 1D66                       ___ftge 1E8C  
                  ??___aldiv 0073         aht_GetHumidity@value 0058                       ___wmul 1DC4  
                  ??___awdiv 0026                    ??___ftadd 0055                    ??___awmod 0077  
                  ??___ftdiv 0045                    ??___ftneg 0076                    ??___lldiv 0073  
                  ??___ftmul 0035                    ??___llmod 0073                    ??___ftsub 0078  
                  ??___fttol 004C                    ??___lwdiv 0025                    ??___lwmod 0077  
                     _fround 0593             ___awdiv@quotient 0029              ___awmod@divisor 0073  
            ___awmod@counter 0020        ___ftmul@f3_as_product 003A                 __pdataCOMMON 007A  
                  ??_isdigit 0073                       saved_w 007E          __size_of_USART_Init 00DC  
                  ??_sprintf 00A0               _aht_readSensor 16F9      __end_of__initialization 0034  
                 ___ftadd@f1 004F                   ___ftadd@f2 0052                   ___ftge@ff1 0020  
                 ___ftge@ff2 0023                   ___ftdiv@f1 0042                   ___ftdiv@f2 003F  
                 ___ftdiv@f3 004A                   ___ftneg@f1 0073          ___bmul@multiplicand 002B  
                 ___ftmul@f1 002F                   ___ftmul@f2 0032                  ?_Read_USART 0070  
                 ___ftsub@f1 005F                   ___ftsub@f2 005C                   ___fttol@f1 0048  
             __pcstackCOMMON 0070                 __pidataBANK0 07FF                 __pidataBANK1 0801  
                 ___lltoft@c 004F                __end_of_scale 0D2E                   __div_to_l_ 0810  
     __end_of_aht_readSensor 1800              __div_to_l_@exp1 0033              __div_to_l_@cntr 0032  
                    ??_scale 0042              __div_to_l_@quot 002E                 sprintf@width 00B0  
               Write_USART@a 0073                   __pbssBANK0 006B                   __pbssBANK1 00BF  
              __div_to_l_@f1 0020                __div_to_l_@f2 0023                   __pmaintext 13CE  
                    ?___bmul 002B                      ?___ftge 0020                      ?___wmul 0073  
              ??_Write_USART 0073                   __pintentry 0004                      ?_fround 003F  
                  ?___ftpack 0073                    ?___lltoft 004F   __end_of_Write_USART_String 1D9F  
        __size_of_Read_USART 0008              ?_aht_readSensor 0022   __end_of_aht_GetTemperature 1152  
                    _SSPCON2 0091                    ?_configIO 0070                      _SSPSTAT 0094  
                 __stringtab 1000              _eSensorResetCmd 006C                 ??_USART_Init 0032  
          __end_of__npowers_ 1054                      ___aldiv 1331              __size_of___bmul 0017  
            __size_of___ftge 003A                      ___awdiv 11BA                      ___ftadd 093D  
                    ___awmod 1F48                      ___ftdiv 073C                      ___ftneg 1CF5  
                    ___lldiv 1152              __size_of___wmul 002B                      ___ftmul 1614  
                    ___llmod 109B                      ___ftsub 1D9F                      ___fttol 12A5  
                    ___lwdiv 1F02                   _fround$958 004B                   _fround$959 0048  
                    ___lwmod 1EC6                   ??___ftpack 0020              __size_of_fround 01A9  
                 ??___lltoft 0053                      __ptext1 0D2E                      __ptext2 0A73  
                    __ptext3 1F48                      __ptext4 11BA                      __ptext5 1D18  
                    __ptext6 0593                      __ptext7 1EC6                      __ptext8 1F02  
                    __ptext9 1D66                 __size_of_ISR 0016                  ?__div_to_l_ 0020  
                    _dpowers 1054          __end_of_Write_USART 1D0B                      _isdigit 1D18  
                    _humeda1 00BF     __size_of_aht_GetHumidity 005D                      _humedad 006B  
           ___awmod@dividend 0075             ___aldiv@dividend 0024     __size_of_I2C_Master_Init 003A  
   __size_of_I2C_Master_Read 0030     __size_of_I2C_Master_Wait 000D     __size_of_I2C_Master_Stop 0009  
         __end_of_USART_Init 1614                   ??_configIO 0073                      _sprintf 0D2E  
                    clrloop0 1CD2         end_of_initialization 0034    __size_of_I2C_Master_Start 0009  
  __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0020              ___lldiv@counter 002C  
          _eSensorMeasureCmd 00DB             ___aldiv@quotient 002A             I2C_Master_Init@c 002D  
           I2C_Master_Read@a 0073                      psplit$0 13003C               __tdiv_to_l_@f1 0020  
             __tdiv_to_l_@f2 0023          _eSensorCalibrateCmd 00E1                ??__tdiv_to_l_ 0073  
                  _TRISCbits 0087                 _LecturaUSART 0079           aht_readSensor@temp 0032  
                ___ftdiv@exp 004D          __size_of__div_to_l_ 012D                 ??_Read_USART 0070  
                ___ftmul@exp 0039               __end_of___bmul 1D7D               __end_of___ftge 1EC6  
                _Write_USART 1CFF               __end_of___wmul 1DEF     aht_readSensor@GetDataCmd 0022  
              __pidataCOMMON 07FE            pnum$text1_split_1 003C                  USART_Init@x 0074  
             __end_of_fround 073C            _AHT10Address_High 00E6          start_initialization 000F  
                __end_of_ISR 1D66          __end_of__tdiv_to_l_ 1538           __end_of_Read_USART 1CD1  
          ??_aht_GetHumidity 0078            ??_I2C_Master_Init 0074            ??_I2C_Master_Read 0075  
          ??_I2C_Master_Wait 0073            ??_I2C_Master_Stop 0073              ___llmod@divisor 0020  
            ___llmod@counter 0074                     ??___bmul 002C                     ??___ftge 0073  
                   ??___wmul 0077                   init_fetch0 1D3D                  __pdataBANK0 006C  
                __pdataBANK1 00DB                     ??_fround 0042                sprintf@tmpval 00B2  
                 fround@prec 004E             ??_aht_readSensor 0026            __size_of___ftpack 0082  
          __size_of___lltoft 0033                  __pbssCOMMON 0078                    ___latbits 0002  
              __pcstackBANK0 0020                __pcstackBANK1 00A0            __size_of_configIO 0013  
                sprintf@flag 00AE                  sprintf@eexp 00B6                  sprintf@fval 00B9  
         _Write_USART_String 1D7D                  sprintf@prec 00BC             _I2C_Master_Start 1CD9  
           _I2C_Master_Write 1CEB             ___lwdiv@dividend 0023           _aht_GetTemperature 10F1  
        ?_Write_USART_String 0070                     ?___aldiv 0020                     ?___awdiv 0022  
                   ?___ftadd 004F                     ?___awmod 0073                     ?___ftdiv 003F  
                   ?___ftneg 0073                     ?___lldiv 0020                     ?___ftmul 002F  
                   ?___llmod 0020                     ?___ftsub 005C                    __npowers_ 102D  
                   ?___fttol 0048                     ?___lwdiv 0021                     ?___lwmod 0073  
        ?_aht_GetTemperature 005C                    __pstrings 1000                  __tdiv_to_l_ 147B  
               ??__div_to_l_ 0026                     ?_isdigit 0070                    _scale$960 0044  
       ??_Write_USART_String 0074             ___lwdiv@quotient 0027                     ?_sprintf 0062  
             __size_of_scale 02BB         ??_aht_GetTemperature 0078              ___aldiv@divisor 0020  
          interrupt_function 0004              ___aldiv@counter 0028               ___wmul@product 0020  
                  clear_ram0 1CD1                     _PIE1bits 008C                     _PIR1bits 000C  
         __end_of__div_to_l_ 093D                  __stringbase 1005            ___wmul@multiplier 0073  
         USART_Init@baudrate 002E             _eSensorNormalCmd 00DE          I2C_Master_Read@temp 0020  
           _AHT10Address_Low 00E8                 ?_Write_USART 0070             __size_of___aldiv 009D  
           __size_of___awdiv 0069             __size_of___ftadd 0136             __size_of___awmod 005B  
           __size_of___ftdiv 00C2             __size_of___ftneg 000A             __size_of___lldiv 0068  
           __size_of___ftmul 00E5             __size_of___llmod 0056             __size_of___ftsub 0025  
           __size_of___fttol 008C             __size_of___lwdiv 0046             __size_of___lwmod 003C  
                   ___ftpack 1223           __end_of__stringtab 1006                     ___lltoft 1E1F  
                _isdigit$750 0073              _aht_GetHumidity 1FA3                   sprintf@val 00AA  
            _I2C_Master_Init 1E52              _I2C_Master_Read 1DEF              _I2C_Master_Wait 1D0B  
            _I2C_Master_Stop 1CE2             __size_of_isdigit 0012              ___lwdiv@divisor 0021  
            ___lwdiv@counter 0026                     __ptext10 147B                     __ptext11 0810  
                   __ptext20 093D                     __ptext12 1DC4                     __ptext21 1FA3  
                   __ptext13 109B                     __ptext30 073C                     __ptext22 16F9  
                   __ptext14 12A5                     __ptext31 1223                     __ptext23 1CEB  
                   __ptext15 1D9F                     __ptext32 1D7D                     __ptext24 1CE2  
                   __ptext16 1CF5                     __ptext33 1CFF                     __ptext25 1CD9  
                   __ptext17 1E8C                     __ptext34 1538                     __ptext26 1DEF  
                   __ptext18 1D2A                     __ptext35 1331                     __ptext27 1D0B  
                   __ptext19 10F1                     __ptext36 1E52                     __ptext28 1E1F  
                   __ptext37 1152                     __ptext29 1614                     __ptext38 1D50  
                   __ptext39 1CC9                     __powers_ 1006                     _configIO 1D2A  
           __size_of_sprintf F865                __size_of_main 00AD                    pnum$text1 0013  
                   _tempera1 00C2     __end_of_I2C_Master_Start 1CE2     __end_of_I2C_Master_Write 1CF5  
                 _INTCONbits 000B          Write_USART_String@a 0075          Write_USART_String@i 0076  
                   init_ram0 1D41                     isdigit@c 0074                     scale@scl 0047  
                   intlevel1 0000                    sprintf@ap 00A9             __tdiv_to_l_@exp1 002B  
           __tdiv_to_l_@cntr 002A                    sprintf@sp 00B8             __tdiv_to_l_@quot 0026  
           ___lwmod@dividend 0075             ___lldiv@dividend 0024                    stringcode 1000  
    __end_of_aht_GetHumidity 2000      __end_of_I2C_Master_Init 1E8C      __end_of_I2C_Master_Read 1E1F  
    __end_of_I2C_Master_Wait 1D18      __end_of_I2C_Master_Stop 1CEB                 ?__tdiv_to_l_ 0020  
                _temperatura 0078                     sprintf@c 00BE                     sprintf@f 0062  
           ___lldiv@quotient 0028            I2C_Master_Write@d 0073              ___lwmod@divisor 0073  
            ___lwmod@counter 0020                     stringdir 1000                     stringtab 1000  
               ___aldiv@sign 0029                  _SSPCON2bits 0091                   _USART_Init 1538  
