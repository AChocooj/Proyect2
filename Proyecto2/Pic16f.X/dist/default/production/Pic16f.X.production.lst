

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 05 21:47:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	functab,global,class=ENTRY,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454                           
   455 ;; Function _aht_GetHumidity is unused but had its address taken
   456  0000                     
   457 ;; Function _aht_GetTemperature is unused but had its address taken
   458  0000                     
   459                           	psect	idataCOMMON
   460  0320                     __pidataCOMMON:
   461                           
   462                           ;initializer for _AHT10_address
   463  0320  3438               	retlw	56
   464                           
   465                           	psect	idataBANK0
   466  02F4                     __pidataBANK0:
   467                           
   468                           ;initializer for _eSensorMeasureCmd
   469  02F4  34AC               	retlw	172
   470  02F5  3433               	retlw	51
   471  02F6  3400               	retlw	0
   472                           
   473                           ;initializer for _eSensorNormalCmd
   474  02F7  34A8               	retlw	168
   475  02F8  3400               	retlw	0
   476  02F9  3400               	retlw	0
   477                           
   478                           ;initializer for _eSensorCalibrateCmd
   479  02FA  34E1               	retlw	225
   480  02FB  3408               	retlw	8
   481  02FC  3400               	retlw	0
   482                           
   483                           ;initializer for _GetRHumidityCmd
   484  02FD  3401               	retlw	1
   485  02FE  3400               	retlw	0
   486                           
   487                           ;initializer for _AHT10Address_High
   488  02FF  3439               	retlw	57
   489  0300  3400               	retlw	0
   490                           
   491                           ;initializer for _AHT10Address_Low
   492  0301  3438               	retlw	56
   493  0302  3400               	retlw	0
   494                           
   495                           ;initializer for _eSensorResetCmd
   496  0303  34BA               	retlw	186
   497  001A                     _RCREG	set	26
   498  0019                     _TXREG	set	25
   499  0013                     _SSPBUF	set	19
   500  0014                     _SSPCON	set	20
   501  000C                     _PIR1bits	set	12
   502  000B                     _INTCONbits	set	11
   503  0006                     _PORTB	set	6
   504  00C4                     _CREN	set	196
   505  00C7                     _SPEN	set	199
   506  0063                     _SSPIF	set	99
   507  005E                     _PEIE	set	94
   508  005F                     _GIE	set	95
   509  0065                     _RCIF	set	101
   510  0099                     _SPBRG	set	153
   511  0091                     _SSPCON2bits	set	145
   512  0087                     _TRISCbits	set	135
   513  0094                     _SSPSTAT	set	148
   514  0093                     _SSPADD	set	147
   515  0091                     _SSPCON2	set	145
   516  008C                     _PIE1bits	set	140
   517  0086                     _TRISB	set	134
   518  04C1                     _TRMT	set	1217
   519  04C5                     _TXEN	set	1221
   520  043E                     _TRISC6	set	1086
   521  043F                     _TRISC7	set	1087
   522  04C4                     _SYNC	set	1220
   523  04C2                     _BRGH	set	1218
   524  0463                     _SSPIE	set	1123
   525  043C                     _TRISC4	set	1084
   526  043B                     _TRISC3	set	1083
   527  0189                     _ANSELH	set	393
   528  0188                     _ANSEL	set	392
   529                           
   530                           	psect	strings
   531  0310                     __pstrings:
   532  0310                     stringtab:
   533  0310                     __stringtab:
   534  0310                     stringcode:	
   535                           ;	String table - string pointers are 1 byte each
   536                           
   537  0310                     stringdir:
   538  0310  3003               	movlw	high stringdir
   539  0311  008A               	movwf	10
   540  0312  0804               	movf	4,w
   541  0313  0A84               	incf	4,f
   542  0314  0782               	addwf	2,f
   543  0315                     __stringbase:
   544  0315  3400               	retlw	0
   545  0316                     __end_of__stringtab:
   546  0316                     STR_1:
   547  0316  3461               	retlw	97	;'a'
   548  0317  3400               	retlw	0
   549                           
   550                           	psect	cinit
   551  000F                     start_initialization:	
   552                           ; #config settings
   553                           
   554  000F                     __initialization:
   555                           
   556                           ; Initialize objects allocated to BANK0
   557  000F  1383               	bcf	3,7	;select IRP bank0
   558  0010  3051               	movlw	low (__pdataBANK0+16)
   559  0011  00FD               	movwf	btemp+-1
   560  0012  3002               	movlw	high __pidataBANK0
   561  0013  00FE               	movwf	btemp
   562  0014  30F4               	movlw	low __pidataBANK0
   563  0015  00FF               	movwf	btemp+1
   564  0016  3041               	movlw	low __pdataBANK0
   565  0017  0084               	movwf	4
   566  0018  120A  118A  22D2  120A  118A  	fcall	init_ram0
   567                           
   568                           ; Initialize objects allocated to COMMON
   569  001D  120A  118A  2320  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   570  0022  00FA               	movwf	__pdataCOMMON& (0+127)
   571                           
   572                           ; Clear objects allocated to BANK0
   573  0023  01D1               	clrf	__pbssBANK0& (0+127)
   574  0024  01D2               	clrf	(__pbssBANK0+1)& (0+127)
   575  0025  01D3               	clrf	(__pbssBANK0+2)& (0+127)
   576  0026  01D4               	clrf	(__pbssBANK0+3)& (0+127)
   577  0027  01D5               	clrf	(__pbssBANK0+4)& (0+127)
   578  0028  01D6               	clrf	(__pbssBANK0+5)& (0+127)
   579  0029  01D7               	clrf	(__pbssBANK0+6)& (0+127)
   580  002A  01D8               	clrf	(__pbssBANK0+7)& (0+127)
   581  002B  01D9               	clrf	(__pbssBANK0+8)& (0+127)
   582                           
   583                           ; Clear objects allocated to COMMON
   584  002C  01F8               	clrf	__pbssCOMMON& (0+127)
   585  002D  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   586  002E                     end_of_initialization:	
   587                           ;End of C runtime variable initialization code
   588                           
   589  002E                     __end_of__initialization:
   590  002E  0183               	clrf	3
   591  002F  120A  118A  2A19   	ljmp	_main	;jump to C main() function
   592                           
   593                           	psect	bssCOMMON
   594  0078                     __pbssCOMMON:
   595  0078                     _temperatura:
   596  0078                     	ds	1
   597  0079                     _LecturaUSART:
   598  0079                     	ds	1
   599                           
   600                           	psect	dataCOMMON
   601  007A                     __pdataCOMMON:
   602  007A                     _AHT10_address:
   603  007A                     	ds	1
   604                           
   605                           	psect	bssBANK0
   606  0051                     __pbssBANK0:
   607  0051                     _humeda1:
   608  0051                     	ds	3
   609  0054                     _tempera1:
   610  0054                     	ds	3
   611  0057                     _GetTempCmd:
   612  0057                     	ds	2
   613  0059                     _humedad:
   614  0059                     	ds	1
   615                           
   616                           	psect	dataBANK0
   617  0041                     __pdataBANK0:
   618  0041                     _eSensorMeasureCmd:
   619  0041                     	ds	3
   620  0044                     _eSensorNormalCmd:
   621  0044                     	ds	3
   622  0047                     _eSensorCalibrateCmd:
   623  0047                     	ds	3
   624  004A                     _GetRHumidityCmd:
   625  004A                     	ds	2
   626  004C                     _AHT10Address_High:
   627  004C                     	ds	2
   628  004E                     _AHT10Address_Low:
   629  004E                     	ds	2
   630  0050                     _eSensorResetCmd:
   631  0050                     	ds	1
   632                           
   633                           	psect	inittext
   634  02CE                     init_fetch0:	
   635                           ;	Called with low address in FSR and high address in W
   636                           
   637  02CE  087E               	movf	btemp,w
   638  02CF  008A               	movwf	10
   639  02D0  087F               	movf	btemp+1,w
   640  02D1  0082               	movwf	2
   641  02D2                     init_ram0:	
   642                           ;Called with:
   643                           ;	high address of idata address in btemp 
   644                           ;	low address of idata address in btemp+1 
   645                           ;	low address of data in FSR
   646                           ;	high address + 1 of data in btemp-1
   647                           
   648  02D2  120A  118A  22CE  120A  118A  	fcall	init_fetch0
   649  02D7  0080               	movwf	0
   650  02D8  0A84               	incf	4,f
   651  02D9  0804               	movf	4,w
   652  02DA  067D               	xorwf	btemp+-1,w
   653  02DB  1903               	btfsc	3,2
   654  02DC  3400               	retlw	0
   655  02DD  0AFF               	incf	btemp+1,f
   656  02DE  1903               	btfsc	3,2
   657  02DF  0AFE               	incf	btemp,f
   658  02E0  2AD2               	goto	init_ram0
   659                           
   660                           	psect	cstackCOMMON
   661  0070                     __pcstackCOMMON:
   662  0070                     ?_Read_USART:
   663  0070                     ??_Read_USART:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_Write_USART:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_Write_USART_String:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_configIO:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_ISR:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ??_ISR:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_main:	
   682                           ; 1 bytes @ 0x0
   683                           
   684                           
   685                           ; 1 bytes @ 0x0
   686  0070                     	ds	3
   687  0073                     ??_Write_USART:
   688  0073                     ??_configIO:	
   689                           ; 1 bytes @ 0x3
   690                           
   691  0073                     ??___lldiv:	
   692                           ; 1 bytes @ 0x3
   693                           
   694  0073                     ??___aldiv:	
   695                           ; 1 bytes @ 0x3
   696                           
   697  0073                     Write_USART@a:	
   698                           ; 1 bytes @ 0x3
   699                           
   700                           
   701                           ; 1 bytes @ 0x3
   702  0073                     	ds	1
   703  0074                     ??_I2C_Master_Init:
   704  0074                     ??_Write_USART_String:	
   705                           ; 1 bytes @ 0x4
   706                           
   707  0074                     USART_Init@x:	
   708                           ; 1 bytes @ 0x4
   709                           
   710                           
   711                           ; 2 bytes @ 0x4
   712  0074                     	ds	1
   713  0075                     Write_USART_String@i:
   714                           
   715                           ; 1 bytes @ 0x5
   716  0075                     	ds	1
   717  0076                     Write_USART_String@a:
   718                           
   719                           ; 1 bytes @ 0x6
   720  0076                     	ds	2
   721                           
   722                           	psect	cstackBANK0
   723  0020                     __pcstackBANK0:
   724  0020                     ?___lldiv:
   725  0020                     ?___aldiv:	
   726                           ; 4 bytes @ 0x0
   727                           
   728  0020                     ___lldiv@divisor:	
   729                           ; 4 bytes @ 0x0
   730                           
   731  0020                     ___aldiv@divisor:	
   732                           ; 4 bytes @ 0x0
   733                           
   734                           
   735                           ; 4 bytes @ 0x0
   736  0020                     	ds	4
   737  0024                     ___lldiv@dividend:
   738  0024                     ___aldiv@dividend:	
   739                           ; 4 bytes @ 0x4
   740                           
   741                           
   742                           ; 4 bytes @ 0x4
   743  0024                     	ds	4
   744  0028                     ___aldiv@counter:
   745  0028                     ___lldiv@quotient:	
   746                           ; 1 bytes @ 0x8
   747                           
   748                           
   749                           ; 4 bytes @ 0x8
   750  0028                     	ds	1
   751  0029                     ___aldiv@sign:
   752                           
   753                           ; 1 bytes @ 0x9
   754  0029                     	ds	1
   755  002A                     ___aldiv@quotient:
   756                           
   757                           ; 4 bytes @ 0xA
   758  002A                     	ds	2
   759  002C                     ___lldiv@counter:
   760                           
   761                           ; 1 bytes @ 0xC
   762  002C                     	ds	1
   763  002D                     ?_I2C_Master_Init:
   764  002D                     I2C_Master_Init@c:	
   765                           ; 1 bytes @ 0xD
   766                           
   767                           
   768                           ; 4 bytes @ 0xD
   769  002D                     	ds	1
   770  002E                     ?_USART_Init:
   771  002E                     USART_Init@baudrate:	
   772                           ; 1 bytes @ 0xE
   773                           
   774                           
   775                           ; 4 bytes @ 0xE
   776  002E                     	ds	4
   777  0032                     ??_USART_Init:
   778                           
   779                           ; 1 bytes @ 0x12
   780  0032                     	ds	12
   781  003E                     ??_main:
   782                           
   783                           ; 1 bytes @ 0x1E
   784  003E                     	ds	3
   785                           
   786                           	psect	maintext
   787  0219                     __pmaintext:	
   788 ;;
   789 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   790 ;;
   791 ;; *************** function _main *****************
   792 ;; Defined at:
   793 ;;		line 63 in file "pic16f.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : B00/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   807 ;;      Params:         0       0       0       0       0
   808 ;;      Locals:         0       0       0       0       0
   809 ;;      Temps:          0       3       0       0       0
   810 ;;      Totals:         0       3       0       0       0
   811 ;;Total ram usage:        3 bytes
   812 ;; Hardware stack levels required when called:    4
   813 ;; This function calls:
   814 ;;		_I2C_Master_Init
   815 ;;		_USART_Init
   816 ;;		_Write_USART
   817 ;;		_Write_USART_String
   818 ;;		_configIO
   819 ;; This function is called by:
   820 ;;		Startup code after reset
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           
   825                           ;psect for function _main
   826  0219                     _main:
   827  0219                     l1546:	
   828                           ;incstack = 0
   829                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   830                           
   831                           
   832                           ;pic16f.c: 64:     configIO();
   833  0219  120A  118A  22E1  120A  118A  	fcall	_configIO
   834  021E                     l1548:
   835                           
   836                           ;pic16f.c: 65:     USART_Init(9600);
   837  021E  3000               	movlw	0
   838  021F  1283               	bcf	3,5	;RP0=0, select bank0
   839  0220  1303               	bcf	3,6	;RP1=0, select bank0
   840  0221  00B1               	movwf	USART_Init@baudrate+3
   841  0222  3000               	movlw	0
   842  0223  00B0               	movwf	USART_Init@baudrate+2
   843  0224  3025               	movlw	37
   844  0225  00AF               	movwf	USART_Init@baudrate+1
   845  0226  3080               	movlw	128
   846  0227  00AE               	movwf	USART_Init@baudrate
   847  0228  120A  118A  2038  120A  118A  	fcall	_USART_Init
   848  022D                     l1550:
   849                           
   850                           ;pic16f.c: 66:     I2C_Master_Init(100000);
   851  022D  3000               	movlw	0
   852  022E  1283               	bcf	3,5	;RP0=0, select bank0
   853  022F  1303               	bcf	3,6	;RP1=0, select bank0
   854  0230  00B0               	movwf	I2C_Master_Init@c+3
   855  0231  3001               	movlw	1
   856  0232  00AF               	movwf	I2C_Master_Init@c+2
   857  0233  3086               	movlw	134
   858  0234  00AE               	movwf	I2C_Master_Init@c+1
   859  0235  30A0               	movlw	160
   860  0236  00AD               	movwf	I2C_Master_Init@c
   861  0237  120A  118A  2260  120A  118A  	fcall	_I2C_Master_Init
   862  023C                     l1552:
   863                           
   864                           ;pic16f.c: 69:         Write_USART("a");
   865  023C  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   866  023D  120A  118A  2304  120A  118A  	fcall	_Write_USART
   867  0242                     l1554:
   868                           
   869                           ;pic16f.c: 70:         Write_USART_String(aht_GetHumidity);
   870  0242  30C9               	movlw	(low (0-fpbase))& (0+255)
   871  0243  120A  118A  229A  120A  118A  	fcall	_Write_USART_String
   872  0248                     l1556:
   873                           
   874                           ;pic16f.c: 71:         Write_USART_String(aht_GetTemperature);
   875  0248  30C9               	movlw	(low (0-fpbase))& (0+255)
   876  0249  120A  118A  229A  120A  118A  	fcall	_Write_USART_String
   877                           
   878                           ;pic16f.c: 72:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   879  024E  300B               	movlw	11
   880  024F  1283               	bcf	3,5	;RP0=0, select bank0
   881  0250  1303               	bcf	3,6	;RP1=0, select bank0
   882  0251  00C0               	movwf	??_main+2
   883  0252  3026               	movlw	38
   884  0253  00BF               	movwf	??_main+1
   885  0254  305D               	movlw	93
   886  0255  00BE               	movwf	??_main
   887  0256                     u1677:
   888  0256  0BBE               	decfsz	??_main,f
   889  0257  2A56               	goto	u1677
   890  0258  0BBF               	decfsz	??_main+1,f
   891  0259  2A56               	goto	u1677
   892  025A  0BC0               	decfsz	??_main+2,f
   893  025B  2A56               	goto	u1677
   894  025C  2A3C               	goto	l1552
   895  025D  120A  118A  280C   	ljmp	start
   896  0260                     __end_of_main:
   897                           
   898                           	psect	text1
   899  02E1                     __ptext1:	
   900 ;; *************** function _configIO *****************
   901 ;; Defined at:
   902 ;;		line 44 in file "pic16f.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		status,2
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         0       0       0       0       0
   917 ;;      Locals:         0       0       0       0       0
   918 ;;      Temps:          0       0       0       0       0
   919 ;;      Totals:         0       0       0       0       0
   920 ;;Total ram usage:        0 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; Hardware stack levels required when called:    2
   923 ;; This function calls:
   924 ;;		Nothing
   925 ;; This function is called by:
   926 ;;		_main
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           
   931                           ;psect for function _configIO
   932  02E1                     _configIO:
   933  02E1                     l828:	
   934                           ;incstack = 0
   935                           ; Regs used in _configIO: [status,2]
   936                           
   937                           
   938                           ;pic16f.c: 45:     TRISB=0;
   939  02E1  1683               	bsf	3,5	;RP0=1, select bank1
   940  02E2  1303               	bcf	3,6	;RP1=0, select bank1
   941  02E3  0186               	clrf	6	;volatile
   942                           
   943                           ;pic16f.c: 46:     ANSEL=0;
   944  02E4  1683               	bsf	3,5	;RP0=1, select bank3
   945  02E5  1703               	bsf	3,6	;RP1=1, select bank3
   946  02E6  0188               	clrf	8	;volatile
   947                           
   948                           ;pic16f.c: 47:     ANSELH=0;
   949  02E7  0189               	clrf	9	;volatile
   950                           
   951                           ;pic16f.c: 48:     PORTB=0;
   952  02E8  1283               	bcf	3,5	;RP0=0, select bank0
   953  02E9  1303               	bcf	3,6	;RP1=0, select bank0
   954  02EA  0186               	clrf	6	;volatile
   955  02EB                     l830:
   956                           
   957                           ;pic16f.c: 50:     INTCONbits.PEIE=1;
   958  02EB  170B               	bsf	11,6	;volatile
   959  02EC                     l832:
   960                           
   961                           ;pic16f.c: 51:     PIE1bits.RCIE=1;
   962  02EC  1683               	bsf	3,5	;RP0=1, select bank1
   963  02ED  1303               	bcf	3,6	;RP1=0, select bank1
   964  02EE  168C               	bsf	12,5	;volatile
   965  02EF                     l834:
   966                           
   967                           ;pic16f.c: 52:     PIR1bits.RCIF=0;
   968  02EF  1283               	bcf	3,5	;RP0=0, select bank0
   969  02F0  1303               	bcf	3,6	;RP1=0, select bank0
   970  02F1  128C               	bcf	12,5	;volatile
   971  02F2                     l836:
   972                           
   973                           ;pic16f.c: 53:     INTCONbits.GIE=1;
   974  02F2  178B               	bsf	11,7	;volatile
   975  02F3                     l49:
   976  02F3  0008               	return
   977  02F4                     __end_of_configIO:
   978                           
   979                           	psect	text2
   980  029A                     __ptext2:	
   981 ;; *************** function _Write_USART_String *****************
   982 ;; Defined at:
   983 ;;		line 34 in file "USART.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;  a               1    wreg     PTR unsigned char 
   986 ;; Auto vars:     Size  Location     Type
   987 ;;  a               1    6[COMMON] PTR unsigned char 
   988 ;;  i               1    5[COMMON] unsigned char 
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   998 ;;      Params:         0       0       0       0       0
   999 ;;      Locals:         2       0       0       0       0
  1000 ;;      Temps:          1       0       0       0       0
  1001 ;;      Totals:         3       0       0       0       0
  1002 ;;Total ram usage:        3 bytes
  1003 ;; Hardware stack levels used:    1
  1004 ;; Hardware stack levels required when called:    3
  1005 ;; This function calls:
  1006 ;;		_Write_USART
  1007 ;; This function is called by:
  1008 ;;		_main
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           
  1013                           ;psect for function _Write_USART_String
  1014  029A                     _Write_USART_String:
  1015                           
  1016                           ;incstack = 0
  1017                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1018                           ;Write_USART_String@a stored from wreg
  1019  029A  00F6               	movwf	Write_USART_String@a
  1020  029B                     l882:
  1021                           
  1022                           ;USART.c: 35:     uint8_t i;;USART.c: 36:     for(i=0;a[i]!='\0';i++){
  1023  029B  01F5               	clrf	Write_USART_String@i
  1024  029C  2AAC               	goto	l888
  1025  029D                     l884:
  1026                           
  1027                           ;USART.c: 37:         Write_USART(a[i]);
  1028  029D  0875               	movf	Write_USART_String@i,w
  1029  029E  0776               	addwf	Write_USART_String@a,w
  1030  029F  00F4               	movwf	??_Write_USART_String
  1031  02A0  0874               	movf	??_Write_USART_String,w
  1032  02A1  0084               	movwf	4
  1033  02A2  0800               	movf	0,w
  1034  02A3  120A  118A  2304  120A  118A  	fcall	_Write_USART
  1035  02A8                     l886:
  1036                           
  1037                           ;USART.c: 38:     }
  1038  02A8  3001               	movlw	1
  1039  02A9  00F4               	movwf	??_Write_USART_String
  1040  02AA  0874               	movf	??_Write_USART_String,w
  1041  02AB  07F5               	addwf	Write_USART_String@i,f
  1042  02AC                     l888:
  1043  02AC  0875               	movf	Write_USART_String@i,w
  1044  02AD  0776               	addwf	Write_USART_String@a,w
  1045  02AE  00F4               	movwf	??_Write_USART_String
  1046  02AF  0874               	movf	??_Write_USART_String,w
  1047  02B0  0084               	movwf	4
  1048  02B1  1383               	bcf	3,7	;select IRP bank0
  1049  02B2  0800               	movf	0,w
  1050  02B3  1D03               	btfss	3,2
  1051  02B4  2AB6               	goto	u311
  1052  02B5  2AB7               	goto	u310
  1053  02B6                     u311:
  1054  02B6  2A9D               	goto	l884
  1055  02B7                     u310:
  1056  02B7                     l159:
  1057  02B7  0008               	return
  1058  02B8                     __end_of_Write_USART_String:
  1059                           
  1060                           	psect	text3
  1061  0304                     __ptext3:	
  1062 ;; *************** function _Write_USART *****************
  1063 ;; Defined at:
  1064 ;;		line 30 in file "USART.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  a               1    wreg     unsigned char 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  a               1    3[COMMON] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1078 ;;      Params:         0       0       0       0       0
  1079 ;;      Locals:         1       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0
  1081 ;;      Totals:         1       0       0       0       0
  1082 ;;Total ram usage:        1 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    2
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_main
  1089 ;;		_Write_USART_String
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           
  1094                           ;psect for function _Write_USART
  1095  0304                     _Write_USART:
  1096                           
  1097                           ;incstack = 0
  1098                           ; Regs used in _Write_USART: [wreg]
  1099                           ;Write_USART@a stored from wreg
  1100  0304  00F3               	movwf	Write_USART@a
  1101  0305                     l756:
  1102  0305                     l150:	
  1103                           ;USART.c: 31:     while(!TRMT);
  1104                           
  1105  0305  1683               	bsf	3,5	;RP0=1, select bank1
  1106  0306  1303               	bcf	3,6	;RP1=0, select bank1
  1107  0307  1C98               	btfss	24,1	;volatile
  1108  0308  2B0A               	goto	u11
  1109  0309  2B0B               	goto	u10
  1110  030A                     u11:
  1111  030A  2B05               	goto	l150
  1112  030B                     u10:
  1113  030B                     l758:
  1114                           
  1115                           ;USART.c: 32:     TXREG=a;
  1116  030B  0873               	movf	Write_USART@a,w
  1117  030C  1283               	bcf	3,5	;RP0=0, select bank0
  1118  030D  1303               	bcf	3,6	;RP1=0, select bank0
  1119  030E  0099               	movwf	25	;volatile
  1120  030F                     l153:
  1121  030F  0008               	return
  1122  0310                     __end_of_Write_USART:
  1123                           
  1124                           	psect	text4
  1125  0038                     __ptext4:	
  1126 ;; *************** function _USART_Init *****************
  1127 ;; Defined at:
  1128 ;;		line 9 in file "USART.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  baudrate        4   14[BANK0 ] const long 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  x               2    4[COMMON] unsigned int 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      unsigned char 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0, pclath, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1142 ;;      Params:         0       4       0       0       0
  1143 ;;      Locals:         2       0       0       0       0
  1144 ;;      Temps:          0      12       0       0       0
  1145 ;;      Totals:         2      16       0       0       0
  1146 ;;Total ram usage:       18 bytes
  1147 ;; Hardware stack levels used:    1
  1148 ;; Hardware stack levels required when called:    3
  1149 ;; This function calls:
  1150 ;;		___aldiv
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           
  1157                           ;psect for function _USART_Init
  1158  0038                     _USART_Init:
  1159  0038                     l1508:	
  1160                           ;incstack = 0
  1161                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  1162                           
  1163                           
  1164                           ;USART.c: 10:   unsigned int x;;USART.c: 11:   x = (8000000 - baudrate*64)/(baudrate*64)
      +                          ;
  1165  0038  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0039  1303               	bcf	3,6	;RP1=0, select bank0
  1167  003A  082E               	movf	USART_Init@baudrate,w
  1168  003B  00B2               	movwf	??_USART_Init
  1169  003C  082F               	movf	USART_Init@baudrate+1,w
  1170  003D  00B3               	movwf	??_USART_Init+1
  1171  003E  0830               	movf	USART_Init@baudrate+2,w
  1172  003F  00B4               	movwf	??_USART_Init+2
  1173  0040  0831               	movf	USART_Init@baudrate+3,w
  1174  0041  00B5               	movwf	??_USART_Init+3
  1175  0042  3006               	movlw	6
  1176  0043                     u1585:
  1177  0043  1003               	clrc
  1178  0044  0DB2               	rlf	??_USART_Init,f
  1179  0045  0DB3               	rlf	??_USART_Init+1,f
  1180  0046  0DB4               	rlf	??_USART_Init+2,f
  1181  0047  0DB5               	rlf	??_USART_Init+3,f
  1182  0048                     u1580:
  1183  0048  3EFF               	addlw	-1
  1184  0049  1D03               	skipz
  1185  004A  2843               	goto	u1585
  1186  004B  0835               	movf	??_USART_Init+3,w
  1187  004C  00A3               	movwf	___aldiv@divisor+3
  1188  004D  0834               	movf	??_USART_Init+2,w
  1189  004E  00A2               	movwf	___aldiv@divisor+2
  1190  004F  0833               	movf	??_USART_Init+1,w
  1191  0050  00A1               	movwf	___aldiv@divisor+1
  1192  0051  0832               	movf	??_USART_Init,w
  1193  0052  00A0               	movwf	___aldiv@divisor
  1194  0053  082E               	movf	USART_Init@baudrate,w
  1195  0054  00B6               	movwf	??_USART_Init+4
  1196  0055  082F               	movf	USART_Init@baudrate+1,w
  1197  0056  00B7               	movwf	??_USART_Init+5
  1198  0057  0830               	movf	USART_Init@baudrate+2,w
  1199  0058  00B8               	movwf	??_USART_Init+6
  1200  0059  0831               	movf	USART_Init@baudrate+3,w
  1201  005A  00B9               	movwf	??_USART_Init+7
  1202  005B  3006               	movlw	6
  1203  005C                     u1595:
  1204  005C  1003               	clrc
  1205  005D  0DB6               	rlf	??_USART_Init+4,f
  1206  005E  0DB7               	rlf	??_USART_Init+5,f
  1207  005F  0DB8               	rlf	??_USART_Init+6,f
  1208  0060  0DB9               	rlf	??_USART_Init+7,f
  1209  0061                     u1590:
  1210  0061  3EFF               	addlw	-1
  1211  0062  1D03               	skipz
  1212  0063  285C               	goto	u1595
  1213  0064  3000               	movlw	0
  1214  0065  00BA               	movwf	??_USART_Init+8
  1215  0066  3012               	movlw	18
  1216  0067  00BB               	movwf	??_USART_Init+9
  1217  0068  307A               	movlw	122
  1218  0069  00BC               	movwf	??_USART_Init+10
  1219  006A  3000               	movlw	0
  1220  006B  00BD               	movwf	??_USART_Init+11
  1221  006C  0836               	movf	??_USART_Init+4,w
  1222  006D  02BA               	subwf	??_USART_Init+8,f
  1223  006E  0837               	movf	??_USART_Init+5,w
  1224  006F  1C03               	skipc
  1225  0070  0F37               	incfsz	??_USART_Init+5,w
  1226  0071  2873               	goto	u1601
  1227  0072  2874               	goto	u1602
  1228  0073                     u1601:
  1229  0073  02BB               	subwf	??_USART_Init+9,f
  1230  0074                     u1602:
  1231  0074  0838               	movf	??_USART_Init+6,w
  1232  0075  1C03               	skipc
  1233  0076  0F38               	incfsz	??_USART_Init+6,w
  1234  0077  2879               	goto	u1603
  1235  0078  287A               	goto	u1604
  1236  0079                     u1603:
  1237  0079  02BC               	subwf	??_USART_Init+10,f
  1238  007A                     u1604:
  1239  007A  0839               	movf	??_USART_Init+7,w
  1240  007B  1C03               	skipc
  1241  007C  0F39               	incfsz	??_USART_Init+7,w
  1242  007D  287F               	goto	u1605
  1243  007E  2880               	goto	u1606
  1244  007F                     u1605:
  1245  007F  02BD               	subwf	??_USART_Init+11,f
  1246  0080                     u1606:
  1247  0080  083D               	movf	??_USART_Init+11,w
  1248  0081  00A7               	movwf	___aldiv@dividend+3
  1249  0082  083C               	movf	??_USART_Init+10,w
  1250  0083  00A6               	movwf	___aldiv@dividend+2
  1251  0084  083B               	movf	??_USART_Init+9,w
  1252  0085  00A5               	movwf	___aldiv@dividend+1
  1253  0086  083A               	movf	??_USART_Init+8,w
  1254  0087  00A4               	movwf	___aldiv@dividend
  1255  0088  120A  118A  2114  120A  118A  	fcall	___aldiv
  1256  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1257  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1258  008F  0821               	movf	?___aldiv+1,w
  1259  0090  00F5               	movwf	USART_Init@x+1
  1260  0091  0820               	movf	?___aldiv,w
  1261  0092  00F4               	movwf	USART_Init@x
  1262  0093                     l1510:
  1263                           
  1264                           ;USART.c: 12:   if(x>255)
  1265  0093  3001               	movlw	1
  1266  0094  0275               	subwf	USART_Init@x+1,w
  1267  0095  3000               	movlw	0
  1268  0096  1903               	skipnz
  1269  0097  0274               	subwf	USART_Init@x,w
  1270  0098  1C03               	skipc
  1271  0099  289B               	goto	u1611
  1272  009A  289C               	goto	u1610
  1273  009B                     u1611:
  1274  009B  28F8               	goto	l1516
  1275  009C                     u1610:
  1276  009C                     l1512:
  1277                           
  1278                           ;USART.c: 13:   {;USART.c: 14:     x = (8000000 - baudrate*16)/(baudrate*16);
  1279  009C  082E               	movf	USART_Init@baudrate,w
  1280  009D  00B2               	movwf	??_USART_Init
  1281  009E  082F               	movf	USART_Init@baudrate+1,w
  1282  009F  00B3               	movwf	??_USART_Init+1
  1283  00A0  0830               	movf	USART_Init@baudrate+2,w
  1284  00A1  00B4               	movwf	??_USART_Init+2
  1285  00A2  0831               	movf	USART_Init@baudrate+3,w
  1286  00A3  00B5               	movwf	??_USART_Init+3
  1287  00A4  3004               	movlw	4
  1288  00A5                     u1625:
  1289  00A5  1003               	clrc
  1290  00A6  0DB2               	rlf	??_USART_Init,f
  1291  00A7  0DB3               	rlf	??_USART_Init+1,f
  1292  00A8  0DB4               	rlf	??_USART_Init+2,f
  1293  00A9  0DB5               	rlf	??_USART_Init+3,f
  1294  00AA                     u1620:
  1295  00AA  3EFF               	addlw	-1
  1296  00AB  1D03               	skipz
  1297  00AC  28A5               	goto	u1625
  1298  00AD  0835               	movf	??_USART_Init+3,w
  1299  00AE  00A3               	movwf	___aldiv@divisor+3
  1300  00AF  0834               	movf	??_USART_Init+2,w
  1301  00B0  00A2               	movwf	___aldiv@divisor+2
  1302  00B1  0833               	movf	??_USART_Init+1,w
  1303  00B2  00A1               	movwf	___aldiv@divisor+1
  1304  00B3  0832               	movf	??_USART_Init,w
  1305  00B4  00A0               	movwf	___aldiv@divisor
  1306  00B5  082E               	movf	USART_Init@baudrate,w
  1307  00B6  00B6               	movwf	??_USART_Init+4
  1308  00B7  082F               	movf	USART_Init@baudrate+1,w
  1309  00B8  00B7               	movwf	??_USART_Init+5
  1310  00B9  0830               	movf	USART_Init@baudrate+2,w
  1311  00BA  00B8               	movwf	??_USART_Init+6
  1312  00BB  0831               	movf	USART_Init@baudrate+3,w
  1313  00BC  00B9               	movwf	??_USART_Init+7
  1314  00BD  3004               	movlw	4
  1315  00BE                     u1635:
  1316  00BE  1003               	clrc
  1317  00BF  0DB6               	rlf	??_USART_Init+4,f
  1318  00C0  0DB7               	rlf	??_USART_Init+5,f
  1319  00C1  0DB8               	rlf	??_USART_Init+6,f
  1320  00C2  0DB9               	rlf	??_USART_Init+7,f
  1321  00C3                     u1630:
  1322  00C3  3EFF               	addlw	-1
  1323  00C4  1D03               	skipz
  1324  00C5  28BE               	goto	u1635
  1325  00C6  3000               	movlw	0
  1326  00C7  00BA               	movwf	??_USART_Init+8
  1327  00C8  3012               	movlw	18
  1328  00C9  00BB               	movwf	??_USART_Init+9
  1329  00CA  307A               	movlw	122
  1330  00CB  00BC               	movwf	??_USART_Init+10
  1331  00CC  3000               	movlw	0
  1332  00CD  00BD               	movwf	??_USART_Init+11
  1333  00CE  0836               	movf	??_USART_Init+4,w
  1334  00CF  02BA               	subwf	??_USART_Init+8,f
  1335  00D0  0837               	movf	??_USART_Init+5,w
  1336  00D1  1C03               	skipc
  1337  00D2  0F37               	incfsz	??_USART_Init+5,w
  1338  00D3  28D5               	goto	u1641
  1339  00D4  28D6               	goto	u1642
  1340  00D5                     u1641:
  1341  00D5  02BB               	subwf	??_USART_Init+9,f
  1342  00D6                     u1642:
  1343  00D6  0838               	movf	??_USART_Init+6,w
  1344  00D7  1C03               	skipc
  1345  00D8  0F38               	incfsz	??_USART_Init+6,w
  1346  00D9  28DB               	goto	u1643
  1347  00DA  28DC               	goto	u1644
  1348  00DB                     u1643:
  1349  00DB  02BC               	subwf	??_USART_Init+10,f
  1350  00DC                     u1644:
  1351  00DC  0839               	movf	??_USART_Init+7,w
  1352  00DD  1C03               	skipc
  1353  00DE  0F39               	incfsz	??_USART_Init+7,w
  1354  00DF  28E1               	goto	u1645
  1355  00E0  28E2               	goto	u1646
  1356  00E1                     u1645:
  1357  00E1  02BD               	subwf	??_USART_Init+11,f
  1358  00E2                     u1646:
  1359  00E2  083D               	movf	??_USART_Init+11,w
  1360  00E3  00A7               	movwf	___aldiv@dividend+3
  1361  00E4  083C               	movf	??_USART_Init+10,w
  1362  00E5  00A6               	movwf	___aldiv@dividend+2
  1363  00E6  083B               	movf	??_USART_Init+9,w
  1364  00E7  00A5               	movwf	___aldiv@dividend+1
  1365  00E8  083A               	movf	??_USART_Init+8,w
  1366  00E9  00A4               	movwf	___aldiv@dividend
  1367  00EA  120A  118A  2114  120A  118A  	fcall	___aldiv
  1368  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1369  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1370  00F1  0821               	movf	?___aldiv+1,w
  1371  00F2  00F5               	movwf	USART_Init@x+1
  1372  00F3  0820               	movf	?___aldiv,w
  1373  00F4  00F4               	movwf	USART_Init@x
  1374  00F5                     l1514:
  1375                           
  1376                           ;USART.c: 15:     BRGH = 1;
  1377  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  1378  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  1379  00F7  1518               	bsf	24,2	;volatile
  1380  00F8                     l1516:
  1381                           
  1382                           ;USART.c: 17:   if(x<256)
  1383  00F8  3001               	movlw	1
  1384  00F9  0275               	subwf	USART_Init@x+1,w
  1385  00FA  3000               	movlw	0
  1386  00FB  1903               	skipnz
  1387  00FC  0274               	subwf	USART_Init@x,w
  1388  00FD  1803               	skipnc
  1389  00FE  2900               	goto	u1651
  1390  00FF  2901               	goto	u1650
  1391  0100                     u1651:
  1392  0100  2913               	goto	l147
  1393  0101                     u1650:
  1394  0101                     l1518:
  1395                           
  1396                           ;USART.c: 18:   {;USART.c: 19:     SPBRG = x;
  1397  0101  0874               	movf	USART_Init@x,w
  1398  0102  1683               	bsf	3,5	;RP0=1, select bank1
  1399  0103  1303               	bcf	3,6	;RP1=0, select bank1
  1400  0104  0099               	movwf	25	;volatile
  1401  0105                     l1520:
  1402                           
  1403                           ;USART.c: 20:     SYNC = 0;
  1404  0105  1218               	bcf	24,4	;volatile
  1405  0106                     l1522:
  1406                           
  1407                           ;USART.c: 21:     SPEN = 1;
  1408  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1409  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1410  0108  1798               	bsf	24,7	;volatile
  1411  0109                     l1524:
  1412                           
  1413                           ;USART.c: 22:     TRISC7 = 1;
  1414  0109  1683               	bsf	3,5	;RP0=1, select bank1
  1415  010A  1303               	bcf	3,6	;RP1=0, select bank1
  1416  010B  1787               	bsf	7,7	;volatile
  1417  010C                     l1526:
  1418                           
  1419                           ;USART.c: 23:     TRISC6 = 0;
  1420  010C  1307               	bcf	7,6	;volatile
  1421  010D                     l1528:
  1422                           
  1423                           ;USART.c: 24:     CREN = 1;
  1424  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1425  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1426  010F  1618               	bsf	24,4	;volatile
  1427  0110                     l1530:
  1428                           
  1429                           ;USART.c: 25:     TXEN = 1;
  1430  0110  1683               	bsf	3,5	;RP0=1, select bank1
  1431  0111  1303               	bcf	3,6	;RP1=0, select bank1
  1432  0112  1698               	bsf	24,5	;volatile
  1433  0113                     l147:
  1434  0113  0008               	return
  1435  0114                     __end_of_USART_Init:
  1436                           
  1437                           	psect	text5
  1438  0114                     __ptext5:	
  1439 ;; *************** function ___aldiv *****************
  1440 ;; Defined at:
  1441 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\aldiv.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  divisor         4    0[BANK0 ] long 
  1444 ;;  dividend        4    4[BANK0 ] long 
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;  quotient        4   10[BANK0 ] long 
  1447 ;;  sign            1    9[BANK0 ] unsigned char 
  1448 ;;  counter         1    8[BANK0 ] unsigned char 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  4    0[BANK0 ] long 
  1451 ;; Registers used:
  1452 ;;		wreg, status,2, status,0
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1458 ;;      Params:         0       8       0       0       0
  1459 ;;      Locals:         0       6       0       0       0
  1460 ;;      Temps:          1       0       0       0       0
  1461 ;;      Totals:         1      14       0       0       0
  1462 ;;Total ram usage:       15 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    2
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_USART_Init
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           
  1473                           ;psect for function ___aldiv
  1474  0114                     ___aldiv:
  1475  0114                     l1468:	
  1476                           ;incstack = 0
  1477                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1478                           
  1479  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1481  0116  01A9               	clrf	___aldiv@sign
  1482  0117                     l1470:
  1483  0117  1FA3               	btfss	___aldiv@divisor+3,7
  1484  0118  291A               	goto	u1481
  1485  0119  291B               	goto	u1480
  1486  011A                     u1481:
  1487  011A  2928               	goto	l382
  1488  011B                     u1480:
  1489  011B                     l1472:
  1490  011B  09A0               	comf	___aldiv@divisor,f
  1491  011C  09A1               	comf	___aldiv@divisor+1,f
  1492  011D  09A2               	comf	___aldiv@divisor+2,f
  1493  011E  09A3               	comf	___aldiv@divisor+3,f
  1494  011F  0AA0               	incf	___aldiv@divisor,f
  1495  0120  1903               	skipnz
  1496  0121  0AA1               	incf	___aldiv@divisor+1,f
  1497  0122  1903               	skipnz
  1498  0123  0AA2               	incf	___aldiv@divisor+2,f
  1499  0124  1903               	skipnz
  1500  0125  0AA3               	incf	___aldiv@divisor+3,f
  1501  0126  01A9               	clrf	___aldiv@sign
  1502  0127  0AA9               	incf	___aldiv@sign,f
  1503  0128                     l382:
  1504  0128  1FA7               	btfss	___aldiv@dividend+3,7
  1505  0129  292B               	goto	u1491
  1506  012A  292C               	goto	u1490
  1507  012B                     u1491:
  1508  012B  293B               	goto	l1478
  1509  012C                     u1490:
  1510  012C                     l1474:
  1511  012C  09A4               	comf	___aldiv@dividend,f
  1512  012D  09A5               	comf	___aldiv@dividend+1,f
  1513  012E  09A6               	comf	___aldiv@dividend+2,f
  1514  012F  09A7               	comf	___aldiv@dividend+3,f
  1515  0130  0AA4               	incf	___aldiv@dividend,f
  1516  0131  1903               	skipnz
  1517  0132  0AA5               	incf	___aldiv@dividend+1,f
  1518  0133  1903               	skipnz
  1519  0134  0AA6               	incf	___aldiv@dividend+2,f
  1520  0135  1903               	skipnz
  1521  0136  0AA7               	incf	___aldiv@dividend+3,f
  1522  0137                     l1476:
  1523  0137  3001               	movlw	1
  1524  0138  00F3               	movwf	??___aldiv
  1525  0139  0873               	movf	??___aldiv,w
  1526  013A  06A9               	xorwf	___aldiv@sign,f
  1527  013B                     l1478:
  1528  013B  3000               	movlw	0
  1529  013C  00AD               	movwf	___aldiv@quotient+3
  1530  013D  3000               	movlw	0
  1531  013E  00AC               	movwf	___aldiv@quotient+2
  1532  013F  3000               	movlw	0
  1533  0140  00AB               	movwf	___aldiv@quotient+1
  1534  0141  3000               	movlw	0
  1535  0142  00AA               	movwf	___aldiv@quotient
  1536  0143                     l1480:
  1537  0143  0823               	movf	___aldiv@divisor+3,w
  1538  0144  0422               	iorwf	___aldiv@divisor+2,w
  1539  0145  0421               	iorwf	___aldiv@divisor+1,w
  1540  0146  0420               	iorwf	___aldiv@divisor,w
  1541  0147  1903               	skipnz
  1542  0148  294A               	goto	u1501
  1543  0149  294B               	goto	u1500
  1544  014A                     u1501:
  1545  014A  2998               	goto	l1500
  1546  014B                     u1500:
  1547  014B                     l1482:
  1548  014B  01A8               	clrf	___aldiv@counter
  1549  014C  0AA8               	incf	___aldiv@counter,f
  1550  014D  295B               	goto	l1486
  1551  014E                     l1484:
  1552  014E  3001               	movlw	1
  1553  014F  00F3               	movwf	??___aldiv
  1554  0150                     u1515:
  1555  0150  1003               	clrc
  1556  0151  0DA0               	rlf	___aldiv@divisor,f
  1557  0152  0DA1               	rlf	___aldiv@divisor+1,f
  1558  0153  0DA2               	rlf	___aldiv@divisor+2,f
  1559  0154  0DA3               	rlf	___aldiv@divisor+3,f
  1560  0155  0BF3               	decfsz	??___aldiv,f
  1561  0156  2950               	goto	u1515
  1562  0157  3001               	movlw	1
  1563  0158  00F3               	movwf	??___aldiv
  1564  0159  0873               	movf	??___aldiv,w
  1565  015A  07A8               	addwf	___aldiv@counter,f
  1566  015B                     l1486:
  1567  015B  1FA3               	btfss	___aldiv@divisor+3,7
  1568  015C  295E               	goto	u1521
  1569  015D  295F               	goto	u1520
  1570  015E                     u1521:
  1571  015E  294E               	goto	l1484
  1572  015F                     u1520:
  1573  015F                     l1488:
  1574  015F  3001               	movlw	1
  1575  0160  00F3               	movwf	??___aldiv
  1576  0161                     u1535:
  1577  0161  1003               	clrc
  1578  0162  0DAA               	rlf	___aldiv@quotient,f
  1579  0163  0DAB               	rlf	___aldiv@quotient+1,f
  1580  0164  0DAC               	rlf	___aldiv@quotient+2,f
  1581  0165  0DAD               	rlf	___aldiv@quotient+3,f
  1582  0166  0BF3               	decfsz	??___aldiv,f
  1583  0167  2961               	goto	u1535
  1584  0168                     l1490:
  1585  0168  0823               	movf	___aldiv@divisor+3,w
  1586  0169  0227               	subwf	___aldiv@dividend+3,w
  1587  016A  1D03               	skipz
  1588  016B  2976               	goto	u1545
  1589  016C  0822               	movf	___aldiv@divisor+2,w
  1590  016D  0226               	subwf	___aldiv@dividend+2,w
  1591  016E  1D03               	skipz
  1592  016F  2976               	goto	u1545
  1593  0170  0821               	movf	___aldiv@divisor+1,w
  1594  0171  0225               	subwf	___aldiv@dividend+1,w
  1595  0172  1D03               	skipz
  1596  0173  2976               	goto	u1545
  1597  0174  0820               	movf	___aldiv@divisor,w
  1598  0175  0224               	subwf	___aldiv@dividend,w
  1599  0176                     u1545:
  1600  0176  1C03               	skipc
  1601  0177  2979               	goto	u1541
  1602  0178  297A               	goto	u1540
  1603  0179                     u1541:
  1604  0179  2989               	goto	l1496
  1605  017A                     u1540:
  1606  017A                     l1492:
  1607  017A  0820               	movf	___aldiv@divisor,w
  1608  017B  02A4               	subwf	___aldiv@dividend,f
  1609  017C  0821               	movf	___aldiv@divisor+1,w
  1610  017D  1C03               	skipc
  1611  017E  0F21               	incfsz	___aldiv@divisor+1,w
  1612  017F  02A5               	subwf	___aldiv@dividend+1,f
  1613  0180  0822               	movf	___aldiv@divisor+2,w
  1614  0181  1C03               	skipc
  1615  0182  0F22               	incfsz	___aldiv@divisor+2,w
  1616  0183  02A6               	subwf	___aldiv@dividend+2,f
  1617  0184  0823               	movf	___aldiv@divisor+3,w
  1618  0185  1C03               	skipc
  1619  0186  0F23               	incfsz	___aldiv@divisor+3,w
  1620  0187  02A7               	subwf	___aldiv@dividend+3,f
  1621  0188                     l1494:
  1622  0188  142A               	bsf	___aldiv@quotient,0
  1623  0189                     l1496:
  1624  0189  3001               	movlw	1
  1625  018A                     u1555:
  1626  018A  1003               	clrc
  1627  018B  0CA3               	rrf	___aldiv@divisor+3,f
  1628  018C  0CA2               	rrf	___aldiv@divisor+2,f
  1629  018D  0CA1               	rrf	___aldiv@divisor+1,f
  1630  018E  0CA0               	rrf	___aldiv@divisor,f
  1631  018F  3EFF               	addlw	-1
  1632  0190  1D03               	skipz
  1633  0191  298A               	goto	u1555
  1634  0192                     l1498:
  1635  0192  3001               	movlw	1
  1636  0193  02A8               	subwf	___aldiv@counter,f
  1637  0194  1D03               	btfss	3,2
  1638  0195  2997               	goto	u1561
  1639  0196  2998               	goto	u1560
  1640  0197                     u1561:
  1641  0197  295F               	goto	l1488
  1642  0198                     u1560:
  1643  0198                     l1500:
  1644  0198  0829               	movf	___aldiv@sign,w
  1645  0199  1903               	btfsc	3,2
  1646  019A  299C               	goto	u1571
  1647  019B  299D               	goto	u1570
  1648  019C                     u1571:
  1649  019C  29A8               	goto	l1504
  1650  019D                     u1570:
  1651  019D                     l1502:
  1652  019D  09AA               	comf	___aldiv@quotient,f
  1653  019E  09AB               	comf	___aldiv@quotient+1,f
  1654  019F  09AC               	comf	___aldiv@quotient+2,f
  1655  01A0  09AD               	comf	___aldiv@quotient+3,f
  1656  01A1  0AAA               	incf	___aldiv@quotient,f
  1657  01A2  1903               	skipnz
  1658  01A3  0AAB               	incf	___aldiv@quotient+1,f
  1659  01A4  1903               	skipnz
  1660  01A5  0AAC               	incf	___aldiv@quotient+2,f
  1661  01A6  1903               	skipnz
  1662  01A7  0AAD               	incf	___aldiv@quotient+3,f
  1663  01A8                     l1504:
  1664  01A8  082D               	movf	___aldiv@quotient+3,w
  1665  01A9  00A3               	movwf	?___aldiv+3
  1666  01AA  082C               	movf	___aldiv@quotient+2,w
  1667  01AB  00A2               	movwf	?___aldiv+2
  1668  01AC  082B               	movf	___aldiv@quotient+1,w
  1669  01AD  00A1               	movwf	?___aldiv+1
  1670  01AE  082A               	movf	___aldiv@quotient,w
  1671  01AF  00A0               	movwf	?___aldiv
  1672  01B0                     l392:
  1673  01B0  0008               	return
  1674  01B1                     __end_of___aldiv:
  1675                           
  1676                           	psect	text6
  1677  0260                     __ptext6:	
  1678 ;; *************** function _I2C_Master_Init *****************
  1679 ;; Defined at:
  1680 ;;		line 16 in file "I2C.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  c               4   13[BANK0 ] const unsigned long 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, status,2, status,0, pclath, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1694 ;;      Params:         0       4       0       0       0
  1695 ;;      Locals:         0       0       0       0       0
  1696 ;;      Temps:          4       0       0       0       0
  1697 ;;      Totals:         4       4       0       0       0
  1698 ;;Total ram usage:        8 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; Hardware stack levels required when called:    3
  1701 ;; This function calls:
  1702 ;;		___lldiv
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;;		_aht_begin
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           
  1710                           ;psect for function _I2C_Master_Init
  1711  0260                     _I2C_Master_Init:
  1712  0260                     l1534:	
  1713                           ;incstack = 0
  1714                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1715                           
  1716                           
  1717                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1718  0260  3028               	movlw	40
  1719  0261  1283               	bcf	3,5	;RP0=0, select bank0
  1720  0262  1303               	bcf	3,6	;RP1=0, select bank0
  1721  0263  0094               	movwf	20	;volatile
  1722  0264                     l1536:
  1723                           
  1724                           ;I2C.c: 19:     SSPCON2 = 0;
  1725  0264  1683               	bsf	3,5	;RP0=1, select bank1
  1726  0265  1303               	bcf	3,6	;RP1=0, select bank1
  1727  0266  0191               	clrf	17	;volatile
  1728  0267                     l1538:
  1729                           
  1730                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1731  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1733  0269  082D               	movf	I2C_Master_Init@c,w
  1734  026A  00F4               	movwf	??_I2C_Master_Init
  1735  026B  082E               	movf	I2C_Master_Init@c+1,w
  1736  026C  00F5               	movwf	??_I2C_Master_Init+1
  1737  026D  082F               	movf	I2C_Master_Init@c+2,w
  1738  026E  00F6               	movwf	??_I2C_Master_Init+2
  1739  026F  0830               	movf	I2C_Master_Init@c+3,w
  1740  0270  00F7               	movwf	??_I2C_Master_Init+3
  1741  0271  3002               	movlw	2
  1742  0272                     u1665:
  1743  0272  1003               	clrc
  1744  0273  0DF4               	rlf	??_I2C_Master_Init,f
  1745  0274  0DF5               	rlf	??_I2C_Master_Init+1,f
  1746  0275  0DF6               	rlf	??_I2C_Master_Init+2,f
  1747  0276  0DF7               	rlf	??_I2C_Master_Init+3,f
  1748  0277                     u1660:
  1749  0277  3EFF               	addlw	-1
  1750  0278  1D03               	skipz
  1751  0279  2A72               	goto	u1665
  1752  027A  0877               	movf	??_I2C_Master_Init+3,w
  1753  027B  00A3               	movwf	___lldiv@divisor+3
  1754  027C  0876               	movf	??_I2C_Master_Init+2,w
  1755  027D  00A2               	movwf	___lldiv@divisor+2
  1756  027E  0875               	movf	??_I2C_Master_Init+1,w
  1757  027F  00A1               	movwf	___lldiv@divisor+1
  1758  0280  0874               	movf	??_I2C_Master_Init,w
  1759  0281  00A0               	movwf	___lldiv@divisor
  1760  0282  3000               	movlw	0
  1761  0283  00A7               	movwf	___lldiv@dividend+3
  1762  0284  307A               	movlw	122
  1763  0285  00A6               	movwf	___lldiv@dividend+2
  1764  0286  3012               	movlw	18
  1765  0287  00A5               	movwf	___lldiv@dividend+1
  1766  0288  3000               	movlw	0
  1767  0289  00A4               	movwf	___lldiv@dividend
  1768  028A  120A  118A  21B1  120A  118A  	fcall	___lldiv
  1769  028F  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0290  1303               	bcf	3,6	;RP1=0, select bank0
  1771  0291  0820               	movf	?___lldiv,w
  1772  0292  3EFF               	addlw	255
  1773  0293  1683               	bsf	3,5	;RP0=1, select bank1
  1774  0294  1303               	bcf	3,6	;RP1=0, select bank1
  1775  0295  0093               	movwf	19	;volatile
  1776  0296                     l1540:
  1777                           
  1778                           ;I2C.c: 21:     SSPSTAT = 0;
  1779  0296  0194               	clrf	20	;volatile
  1780  0297                     l1542:
  1781                           
  1782                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1783  0297  1587               	bsf	7,3	;volatile
  1784  0298                     l1544:
  1785                           
  1786                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1787  0298  1607               	bsf	7,4	;volatile
  1788  0299                     l92:
  1789  0299  0008               	return
  1790  029A                     __end_of_I2C_Master_Init:
  1791                           
  1792                           	psect	text7
  1793  01B1                     __ptext7:	
  1794 ;; *************** function ___lldiv *****************
  1795 ;; Defined at:
  1796 ;;		line 5 in file "D:\MPLAB XC8 compiler\pic\sources\c90\common\__lldiv.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  divisor         4    0[BANK0 ] unsigned long 
  1799 ;;  dividend        4    4[BANK0 ] unsigned long 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  quotient        4    8[BANK0 ] unsigned long 
  1802 ;;  counter         1   12[BANK0 ] unsigned char 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  4    0[BANK0 ] unsigned long 
  1805 ;; Registers used:
  1806 ;;		wreg, status,2, status,0
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1812 ;;      Params:         0       8       0       0       0
  1813 ;;      Locals:         0       5       0       0       0
  1814 ;;      Temps:          1       0       0       0       0
  1815 ;;      Totals:         1      13       0       0       0
  1816 ;;Total ram usage:       14 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    2
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_I2C_Master_Init
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           
  1827                           ;psect for function ___lldiv
  1828  01B1                     ___lldiv:
  1829  01B1                     l1444:	
  1830                           ;incstack = 0
  1831                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1832                           
  1833  01B1  3000               	movlw	0
  1834  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1835  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1836  01B4  00AB               	movwf	___lldiv@quotient+3
  1837  01B5  3000               	movlw	0
  1838  01B6  00AA               	movwf	___lldiv@quotient+2
  1839  01B7  3000               	movlw	0
  1840  01B8  00A9               	movwf	___lldiv@quotient+1
  1841  01B9  3000               	movlw	0
  1842  01BA  00A8               	movwf	___lldiv@quotient
  1843  01BB  0823               	movf	___lldiv@divisor+3,w
  1844  01BC  0422               	iorwf	___lldiv@divisor+2,w
  1845  01BD  0421               	iorwf	___lldiv@divisor+1,w
  1846  01BE  0420               	iorwf	___lldiv@divisor,w
  1847  01BF  1903               	skipnz
  1848  01C0  29C2               	goto	u1411
  1849  01C1  29C3               	goto	u1410
  1850  01C2                     u1411:
  1851  01C2  2A10               	goto	l1464
  1852  01C3                     u1410:
  1853  01C3                     l1446:
  1854  01C3  01AC               	clrf	___lldiv@counter
  1855  01C4  0AAC               	incf	___lldiv@counter,f
  1856  01C5  29D3               	goto	l1450
  1857  01C6                     l1448:
  1858  01C6  3001               	movlw	1
  1859  01C7  00F3               	movwf	??___lldiv
  1860  01C8                     u1425:
  1861  01C8  1003               	clrc
  1862  01C9  0DA0               	rlf	___lldiv@divisor,f
  1863  01CA  0DA1               	rlf	___lldiv@divisor+1,f
  1864  01CB  0DA2               	rlf	___lldiv@divisor+2,f
  1865  01CC  0DA3               	rlf	___lldiv@divisor+3,f
  1866  01CD  0BF3               	decfsz	??___lldiv,f
  1867  01CE  29C8               	goto	u1425
  1868  01CF  3001               	movlw	1
  1869  01D0  00F3               	movwf	??___lldiv
  1870  01D1  0873               	movf	??___lldiv,w
  1871  01D2  07AC               	addwf	___lldiv@counter,f
  1872  01D3                     l1450:
  1873  01D3  1FA3               	btfss	___lldiv@divisor+3,7
  1874  01D4  29D6               	goto	u1431
  1875  01D5  29D7               	goto	u1430
  1876  01D6                     u1431:
  1877  01D6  29C6               	goto	l1448
  1878  01D7                     u1430:
  1879  01D7                     l1452:
  1880  01D7  3001               	movlw	1
  1881  01D8  00F3               	movwf	??___lldiv
  1882  01D9                     u1445:
  1883  01D9  1003               	clrc
  1884  01DA  0DA8               	rlf	___lldiv@quotient,f
  1885  01DB  0DA9               	rlf	___lldiv@quotient+1,f
  1886  01DC  0DAA               	rlf	___lldiv@quotient+2,f
  1887  01DD  0DAB               	rlf	___lldiv@quotient+3,f
  1888  01DE  0BF3               	decfsz	??___lldiv,f
  1889  01DF  29D9               	goto	u1445
  1890  01E0                     l1454:
  1891  01E0  0823               	movf	___lldiv@divisor+3,w
  1892  01E1  0227               	subwf	___lldiv@dividend+3,w
  1893  01E2  1D03               	skipz
  1894  01E3  29EE               	goto	u1455
  1895  01E4  0822               	movf	___lldiv@divisor+2,w
  1896  01E5  0226               	subwf	___lldiv@dividend+2,w
  1897  01E6  1D03               	skipz
  1898  01E7  29EE               	goto	u1455
  1899  01E8  0821               	movf	___lldiv@divisor+1,w
  1900  01E9  0225               	subwf	___lldiv@dividend+1,w
  1901  01EA  1D03               	skipz
  1902  01EB  29EE               	goto	u1455
  1903  01EC  0820               	movf	___lldiv@divisor,w
  1904  01ED  0224               	subwf	___lldiv@dividend,w
  1905  01EE                     u1455:
  1906  01EE  1C03               	skipc
  1907  01EF  29F1               	goto	u1451
  1908  01F0  29F2               	goto	u1450
  1909  01F1                     u1451:
  1910  01F1  2A01               	goto	l1460
  1911  01F2                     u1450:
  1912  01F2                     l1456:
  1913  01F2  0820               	movf	___lldiv@divisor,w
  1914  01F3  02A4               	subwf	___lldiv@dividend,f
  1915  01F4  0821               	movf	___lldiv@divisor+1,w
  1916  01F5  1C03               	skipc
  1917  01F6  0F21               	incfsz	___lldiv@divisor+1,w
  1918  01F7  02A5               	subwf	___lldiv@dividend+1,f
  1919  01F8  0822               	movf	___lldiv@divisor+2,w
  1920  01F9  1C03               	skipc
  1921  01FA  0F22               	incfsz	___lldiv@divisor+2,w
  1922  01FB  02A6               	subwf	___lldiv@dividend+2,f
  1923  01FC  0823               	movf	___lldiv@divisor+3,w
  1924  01FD  1C03               	skipc
  1925  01FE  0F23               	incfsz	___lldiv@divisor+3,w
  1926  01FF  02A7               	subwf	___lldiv@dividend+3,f
  1927  0200                     l1458:
  1928  0200  1428               	bsf	___lldiv@quotient,0
  1929  0201                     l1460:
  1930  0201  3001               	movlw	1
  1931  0202                     u1465:
  1932  0202  1003               	clrc
  1933  0203  0CA3               	rrf	___lldiv@divisor+3,f
  1934  0204  0CA2               	rrf	___lldiv@divisor+2,f
  1935  0205  0CA1               	rrf	___lldiv@divisor+1,f
  1936  0206  0CA0               	rrf	___lldiv@divisor,f
  1937  0207  3EFF               	addlw	-1
  1938  0208  1D03               	skipz
  1939  0209  2A02               	goto	u1465
  1940  020A                     l1462:
  1941  020A  3001               	movlw	1
  1942  020B  02AC               	subwf	___lldiv@counter,f
  1943  020C  1D03               	btfss	3,2
  1944  020D  2A0F               	goto	u1471
  1945  020E  2A10               	goto	u1470
  1946  020F                     u1471:
  1947  020F  29D7               	goto	l1452
  1948  0210                     u1470:
  1949  0210                     l1464:
  1950  0210  082B               	movf	___lldiv@quotient+3,w
  1951  0211  00A3               	movwf	?___lldiv+3
  1952  0212  082A               	movf	___lldiv@quotient+2,w
  1953  0213  00A2               	movwf	?___lldiv+2
  1954  0214  0829               	movf	___lldiv@quotient+1,w
  1955  0215  00A1               	movwf	?___lldiv+1
  1956  0216  0828               	movf	___lldiv@quotient,w
  1957  0217  00A0               	movwf	?___lldiv
  1958  0218                     l347:
  1959  0218  0008               	return
  1960  0219                     __end_of___lldiv:
  1961                           
  1962                           	psect	text8
  1963  02B8                     __ptext8:	
  1964 ;; *************** function _ISR *****************
  1965 ;; Defined at:
  1966 ;;		line 56 in file "pic16f.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, pclath, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1980 ;;      Params:         0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0
  1982 ;;      Temps:          3       0       0       0       0
  1983 ;;      Totals:         3       0       0       0       0
  1984 ;;Total ram usage:        3 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    1
  1987 ;; This function calls:
  1988 ;;		_Read_USART
  1989 ;; This function is called by:
  1990 ;;		Interrupt level 1
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function _ISR
  1996  02B8                     _ISR:
  1997  02B8                     i1l918:
  1998                           
  1999                           ;pic16f.c: 57:     if (RCIF==1){
  2000  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2001  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2002  02BA  1E8C               	btfss	12,5	;volatile
  2003  02BB  2ABD               	goto	u33_21
  2004  02BC  2ABE               	goto	u33_20
  2005  02BD                     u33_21:
  2006  02BD  2AC7               	goto	i1l55
  2007  02BE                     u33_20:
  2008  02BE                     i1l920:
  2009                           
  2010                           ;pic16f.c: 58:         RCIF=0;
  2011  02BE  128C               	bcf	12,5	;volatile
  2012  02BF                     i1l922:
  2013                           
  2014                           ;pic16f.c: 59:         LecturaUSART=Read_USART();
  2015  02BF  120A  118A  2318  120A  118A  	fcall	_Read_USART
  2016  02C4  00F0               	movwf	??_ISR
  2017  02C5  0870               	movf	??_ISR,w
  2018  02C6  00F9               	movwf	_LecturaUSART
  2019  02C7                     i1l55:
  2020  02C7  0872               	movf	??_ISR+2,w
  2021  02C8  008A               	movwf	10
  2022  02C9  0E71               	swapf	??_ISR+1,w
  2023  02CA  0083               	movwf	3
  2024  02CB  0EFE               	swapf	btemp,f
  2025  02CC  0E7E               	swapf	btemp,w
  2026  02CD  0009               	retfie
  2027  02CE                     __end_of_ISR:
  2028                           
  2029                           	psect	intentry
  2030  0004                     __pintentry:	
  2031                           ;incstack = 0
  2032                           ; Regs used in _ISR: [wreg+pclath+cstack]
  2033                           
  2034  0004                     interrupt_function:
  2035  007E                     saved_w	set	btemp
  2036  0004  00FE               	movwf	btemp
  2037  0005  0E03               	swapf	3,w
  2038  0006  00F1               	movwf	??_ISR+1
  2039  0007  080A               	movf	10,w
  2040  0008  00F2               	movwf	??_ISR+2
  2041  0009  120A  118A  2AB8   	ljmp	_ISR
  2042                           
  2043                           	psect	text9
  2044  0318                     __ptext9:	
  2045 ;; *************** function _Read_USART *****************
  2046 ;; Defined at:
  2047 ;;		line 40 in file "USART.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;		None
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      unsigned char 
  2054 ;; Registers used:
  2055 ;;		wreg
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2061 ;;      Params:         0       0       0       0       0
  2062 ;;      Locals:         0       0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0
  2064 ;;      Totals:         0       0       0       0       0
  2065 ;;Total ram usage:        0 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_ISR
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           
  2075                           ;psect for function _Read_USART
  2076  0318                     _Read_USART:
  2077  0318                     i1l838:	
  2078                           ;incstack = 0
  2079                           ; Regs used in _Read_USART: [wreg]
  2080                           
  2081  0318                     i1l162:	
  2082                           ;USART.c: 41:   while(!RCIF);
  2083                           
  2084  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2086  031A  1E8C               	btfss	12,5	;volatile
  2087  031B  2B1D               	goto	u21_21
  2088  031C  2B1E               	goto	u21_20
  2089  031D                     u21_21:
  2090  031D  2B18               	goto	i1l162
  2091  031E                     u21_20:
  2092  031E                     i1l840:
  2093                           
  2094                           ;USART.c: 42:   return RCREG;
  2095  031E  081A               	movf	26,w	;volatile
  2096  031F                     i1l165:
  2097  031F  0008               	return
  2098  0320                     __end_of_Read_USART:
  2099  0002                     
  2100                           	psect	functab
  2101  0032                     __pfunctab:
  2102  0032                     __fptable:
  2103  0032                     fptable:
  2104  0032  00FF               	movwf	(btemp+1)& (0+127)
  2105  0033  3000               	movlw	high fptable
  2106  0034  008A               	movwf	10
  2107  0035  087F               	movf	(btemp+1)& (0+127),w
  2108  0036  0782               	addwf	2,f
  2109  0037                     fpbase:
  2110  0037  2837               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  2111  0038                     __end_of__fptable:
  2112  007E                     btemp	set	126	;btemp
  2113  007E                     wtemp0	set	126
  2114                           
  2115                           	psect	config
  2116                           
  2117                           ;Config register CONFIG1 @ 0x2007
  2118                           ;	Oscillator Selection bits
  2119                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2120                           ;	Watchdog Timer Enable bit
  2121                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2122                           ;	Power-up Timer Enable bit
  2123                           ;	PWRTE = OFF, PWRT disabled
  2124                           ;	RE3/MCLR pin function select bit
  2125                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2126                           ;	Code Protection bit
  2127                           ;	CP = OFF, Program memory code protection is disabled
  2128                           ;	Data Code Protection bit
  2129                           ;	CPD = OFF, Data memory code protection is disabled
  2130                           ;	Brown Out Reset Selection bits
  2131                           ;	BOREN = OFF, BOR disabled
  2132                           ;	Internal External Switchover bit
  2133                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2134                           ;	Fail-Safe Clock Monitor Enabled bit
  2135                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2136                           ;	Low Voltage Programming Enable bit
  2137                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2138                           ;	In-Circuit Debugger Mode bit
  2139                           ;	DEBUG = 0x1, unprogrammed default
  2140  2007                     	org	8199
  2141  2007  20D4               	dw	8404
  2142                           
  2143                           ;Config register CONFIG2 @ 0x2008
  2144                           ;	Brown-out Reset Selection bit
  2145                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2146                           ;	Flash Program Memory Self Write Enable bits
  2147                           ;	WRT = OFF, Write protection off
  2148  2008                     	org	8200
  2149  2008  3FFF               	dw	16383

Data Sizes:
    Strings     2
    Constant    0
    Data        17
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     33      58
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Write_USART_String@a	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->_I2C_Master_Init
    _Write_USART_String->_Write_USART
    _USART_Init->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_USART_Init
    _USART_Init->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1663
                                             30 BANK0      3     3      0
                    _I2C_Master_Init
                         _USART_Init
                        _Write_USART
                 _Write_USART_String
                           _configIO
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   3     3      0     123
                                              4 COMMON     3     3      0
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          18    14      4     993
                                              4 COMMON     2     2      0
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     705
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     532
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     371
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (4) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _USART_Init
     ___aldiv
   _Write_USART
   _Write_USART_String
     _Write_USART
   _configIO

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      3A       5       72.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      45      12        0.0%
ABS                  0      0      45       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 05 21:47:53 2021

                          pc 0002                           l49 02F3                           l92 0299  
                         u10 030B                           u11 030A                           fsr 0004  
       __size_of_Write_USART 000C                          l150 0305                          l153 030F  
                        l147 0113                          l159 02B7                          l347 0218  
                        l382 0128                          l392 01B0                          l830 02EB  
                        l832 02EC                          l834 02EF                          l756 0305  
                        l836 02F2                          l828 02E1                          l758 030B  
                        l882 029B                          l884 029D                          l886 02A8  
                        l888 02AC                          _GIE 005F                          u310 02B7  
                        u311 02B6                          _ISR 02B8                          fsr0 0004  
                        indf 0000  __size_of_Write_USART_String 001E                         ?_ISR 0070  
                       l1500 0198                         l1502 019D                         l1510 0093  
                       l1504 01A8                         l1520 0105                         l1512 009C  
                       l1450 01D3                         l1530 0110                         l1522 0106  
                       l1514 00F5                         l1460 0201                         l1452 01D7  
                       l1444 01B1                         l1540 0296                         l1524 0109  
                       l1516 00F8                         l1508 0038                         l1462 020A  
                       l1454 01E0                         l1446 01C3                         l1542 0297  
                       l1534 0260                         l1470 0117                         l1526 010C  
                       l1518 0101                         l1550 022D                         l1456 01F2  
                       l1448 01C6                         l1464 0210                         l1544 0298  
                       l1536 0264                         l1480 0143                         l1472 011B  
                       l1528 010D                         l1552 023C                         l1458 0200  
                       l1538 0267                         l1490 0168                         l1482 014B  
                       l1474 012C                         l1554 0242                         l1546 0219  
                       l1492 017A                         l1484 014E                         l1476 0137  
                       l1468 0114                         l1556 0248                         l1548 021E  
                       l1494 0188                         l1486 015B                         l1478 013B  
                       l1496 0189                         l1488 015F                         l1498 0192  
                       STR_1 0316                         _BRGH 04C2                         _CREN 00C4  
                       u1410 01C3                         u1411 01C2                         u1500 014B  
                       u1501 014A                         u1430 01D7                         u1431 01D6  
                       u1520 015F                         u1425 01C8                         u1521 015E  
                       u1601 0073                         u1450 01F2                         u1610 009C  
                       u1602 0074                         u1451 01F1                         u1515 0150  
                       u1611 009B                         u1603 0079                         u1540 017A  
                       u1620 00AA                         u1604 007A                         u1445 01D9  
                       u1541 0179                         u1605 007F                         u1470 0210  
                       u1630 00C3                         u1606 0080                         u1471 020F  
                       u1455 01EE                         u1535 0161                         u1560 0198  
                       u1480 011B                         u1465 0202                         u1561 0197  
                       u1545 0176                         u1481 011A                         u1641 00D5  
                       u1625 00A5                         u1570 019D                         u1490 012C  
                       u1650 0101                         u1642 00D6                         u1571 019C  
                       u1555 018A                         u1491 012B                         u1651 0100  
                       u1643 00DB                         u1635 00BE                         u1660 0277  
                       u1644 00DC                         u1580 0048                         u1645 00E1  
                       u1646 00E2                         u1590 0061                         u1665 0272  
                       u1585 0043                         u1595 005C                         u1677 0256  
                       _PEIE 005E                         _RCIF 0065                         i1l55 02C7  
                       _SPEN 00C7                         _TRMT 04C1                         _TXEN 04C5  
                       _SYNC 04C4                         _main 0219                         btemp 007E  
                       start 000C                        ??_ISR 0070                   _GetTempCmd 0057  
           ?_I2C_Master_Init 002D              __end_of___aldiv 01B1                        ?_main 0070  
                      _ANSEL 0188              __end_of___lldiv 0219                        i1l162 0318  
                      i1l165 031F                        i1l840 031E                        i1l920 02BE  
                      i1l922 02BF                        i1l838 0318                        i1l918 02B8  
                      _RCREG 001A                        u21_20 031E                        u21_21 031D  
                      u33_20 02BE                        u33_21 02BD                        _SPBRG 0099  
                      _PORTB 0006                        _TRISB 0086                        _SSPIE 0463  
                      _SSPIF 0063                        _TXREG 0019              _GetRHumidityCmd 004A  
                      fpbase 0037                        pclath 000A                        status 0003  
                      wtemp0 007E                  ?_USART_Init 002E              __initialization 000F  
                 _Read_USART 0318                 __end_of_main 0260                       ??_main 003E  
              _AHT10_address 007A                       _ANSELH 0189                       _SSPADD 0093  
                     _TRISC3 043B                       _TRISC4 043C                       _TRISC6 043E  
                     _TRISC7 043F                       _SSPCON 0014                       _SSPBUF 0013  
           __end_of__fptable 0038             __end_of_configIO 02F4                    ??___aldiv 0073  
                  ??___lldiv 0073                       fptable 0032                 __pdataCOMMON 007A  
                     fptotal 0002                       saved_w 007E          __size_of_USART_Init 00DC  
    __end_of__initialization 002E                  ?_Read_USART 0070               __pcstackCOMMON 0070  
               __pidataBANK0 02F4                 Write_USART@a 0073                   __pbssBANK0 0051  
                 __pmaintext 0219                ??_Write_USART 0073                   __pintentry 0004  
 __end_of_Write_USART_String 02B8          __size_of_Read_USART 0008                      _SSPCON2 0091  
                  ?_configIO 0070                      _SSPSTAT 0094                   __stringtab 0310  
            _eSensorResetCmd 0050                 ??_USART_Init 0032                      ___aldiv 0114  
                    ___lldiv 01B1                      __ptext1 02E1                      __ptext2 029A  
                    __ptext3 0304                      __ptext4 0038                      __ptext5 0114  
                    __ptext6 0260                      __ptext7 01B1                      __ptext8 02B8  
                    __ptext9 0318                 __size_of_ISR 0016          __end_of_Write_USART 0310  
                    _humeda1 0051                      _humedad 0059           fp__aht_GetHumidity 0000  
           ___aldiv@dividend 0024     __size_of_I2C_Master_Init 003A           __end_of_USART_Init 0114  
                 ??_configIO 0073         end_of_initialization 002E              ___lldiv@divisor 0020  
            ___lldiv@counter 002C            _eSensorMeasureCmd 0041             ___aldiv@quotient 002A  
           I2C_Master_Init@c 002D          _eSensorCalibrateCmd 0047                    _TRISCbits 0087  
               _LecturaUSART 0079        fp__aht_GetTemperature 0000                 ??_Read_USART 0070  
                _Write_USART 0304                __pidataCOMMON 0320                  USART_Init@x 0074  
          _AHT10Address_High 004C          start_initialization 000F                  __end_of_ISR 02CE  
         __end_of_Read_USART 0320            ??_I2C_Master_Init 0074                   init_fetch0 02CE  
                __pdataBANK0 0041                  __pbssCOMMON 0078                    ___latbits 0002  
              __pcstackBANK0 0020            __size_of__fptable 0006            __size_of_configIO 0013  
         _Write_USART_String 029A           _aht_GetTemperature 0000                    __pfunctab 0032  
        ?_Write_USART_String 0070                     ?___aldiv 0020                     ?___lldiv 0020  
                  __pstrings 0310         ??_Write_USART_String 0074              ___aldiv@divisor 0020  
          interrupt_function 0004              ___aldiv@counter 0028                     _PIE1bits 008C  
                   _PIR1bits 000C                  __stringbase 0315           USART_Init@baudrate 002E  
           _eSensorNormalCmd 0044             _AHT10Address_Low 004E                 ?_Write_USART 0070  
           __size_of___aldiv 009D             __size_of___lldiv 0068           __end_of__stringtab 0316  
            _aht_GetHumidity 0000                     __fptable 0032              _I2C_Master_Init 0260  
                   _configIO 02E1                __size_of_main 0047                     _tempera1 0054  
                 _INTCONbits 000B          Write_USART_String@a 0076          Write_USART_String@i 0075  
                   init_ram0 02D2                     intlevel1 0032             ___lldiv@dividend 0024  
                  stringcode 0310      __end_of_I2C_Master_Init 029A                  _temperatura 0078  
           ___lldiv@quotient 0028                     stringdir 0310                     stringtab 0310  
               ___aldiv@sign 0029                  _SSPCON2bits 0091                   _USART_Init 0038  
